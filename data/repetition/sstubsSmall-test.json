[
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3dc118f61cd547d7679d562fc8038c59372795af",
        "fixCommitParentSHA1": "90a42f2576515e870e49cd66d4b973609cf1e312",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\nindex 40bb342..3160244 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n@@ -1784,7 +1784,7 @@\n                     if (oldObject == null) {\n                         return Boolean.FALSE;\n                     } else {\n-                        if (expectedValue.equals(oldValue)) {\n+                        if (expectedValue.equals(oldObject)) {\n                             txn.attachPutOp(name, key, toData(newValue), false);\n                             return Boolean.TRUE;\n                         } else {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1787,
        "bugNodeStartChar": 76498,
        "bugNodeLength": 30,
        "fixLineNum": 1787,
        "fixNodeStartChar": 76498,
        "fixNodeLength": 31,
        "sourceBeforeFix": "expectedValue.equals(oldValue)",
        "sourceAfterFix": "expectedValue.equals(oldObject)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f86baa60b64682aeaeafe54055df03f4d3f8c5d1",
        "fixCommitParentSHA1": "5980498353f6bde93b6abc9902a2b9cf4d8eb26f",
        "bugFilePath": "underfs/gcs/src/main/java/alluxio/underfs/gcs/GCSOutputStream.java",
        "fixPatch": "diff --git a/underfs/gcs/src/main/java/alluxio/underfs/gcs/GCSOutputStream.java b/underfs/gcs/src/main/java/alluxio/underfs/gcs/GCSOutputStream.java\nindex 283c9c6..5e94192 100644\n--- a/underfs/gcs/src/main/java/alluxio/underfs/gcs/GCSOutputStream.java\n+++ b/underfs/gcs/src/main/java/alluxio/underfs/gcs/GCSOutputStream.java\n@@ -120,7 +120,7 @@\n       obj.setBucketName(mBucketName);\n       obj.setDataInputFile(mFile);\n       obj.setContentLength(mFile.length());\n-      obj.setContentEncoding(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM);\n+      obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM);\n       if (mHash != null) {\n         obj.setMd5Hash(mHash.digest());\n       } else {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 123,
        "bugNodeStartChar": 4061,
        "bugNodeLength": 62,
        "fixLineNum": 123,
        "fixNodeStartChar": 4061,
        "fixNodeLength": 58,
        "sourceBeforeFix": "obj.setContentEncoding(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)",
        "sourceAfterFix": "obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d4a1a1cdac176e1f13c04cbbee22b690c8c7b5fe",
        "fixCommitParentSHA1": "776d1717c32eb66bd541acd630297118f54edc40",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/ServerInventoryImpl.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/ServerInventoryImpl.java b/host-controller/src/main/java/org/jboss/as/host/controller/ServerInventoryImpl.java\nindex 0c65bb3..b3881ff 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/ServerInventoryImpl.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/ServerInventoryImpl.java\n@@ -253,7 +253,7 @@\n         }\n         final ManagedServer server = createManagedServer(serverName, domainModel, authKey);\n         if(servers.putIfAbsent(serverName, server) != null) {\n-            ROOT_LOGGER.existingServerWithState(serverName, existing.getState());\n+            ROOT_LOGGER.existingServerWithState(serverName, server.getState());\n             return;\n         }\n         if(running) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 256,
        "bugNodeStartChar": 10314,
        "bugNodeLength": 19,
        "fixLineNum": 256,
        "fixNodeStartChar": 10314,
        "fixNodeLength": 17,
        "sourceBeforeFix": "existing.getState()",
        "sourceAfterFix": "server.getState()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c8c577c3329f17f1542ab269b7fcfd08cdf28f46",
        "fixCommitParentSHA1": "6693ba73a5ada245f9d9f6d92489ea2563f7f89f",
        "bugFilePath": "tool/src/org/antlr/v4/Tool.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/Tool.java b/tool/src/org/antlr/v4/Tool.java\nindex 42ace2e..1a39dd3 100644\n--- a/tool/src/org/antlr/v4/Tool.java\n+++ b/tool/src/org/antlr/v4/Tool.java\n@@ -246,7 +246,7 @@\n \t\t\thaveOutputDir = true;\n \t\t\tif (outDir.exists() && !outDir.isDirectory()) {\n \t\t\t\terrMgr.toolError(ErrorType.OUTPUT_DIR_IS_FILE, outputDirectory);\n-\t\t\t\tlibDirectory = \".\";\n+\t\t\t\toutputDirectory = \".\";\n \t\t\t}\n \t\t}\n \t\telse {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 249,
        "bugNodeStartChar": 9164,
        "bugNodeLength": 18,
        "fixLineNum": 249,
        "fixNodeStartChar": 9164,
        "fixNodeLength": 21,
        "sourceBeforeFix": "libDirectory=\".\"",
        "sourceAfterFix": "outputDirectory=\".\""
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f8c20919f9c2e18e48142c2712e34298f98b983e",
        "fixCommitParentSHA1": "018231d20a291587dc17c2be3c9f0d13c450bcb0",
        "bugFilePath": "spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java",
        "fixPatch": "diff --git a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\nindex d9f6f41..f231c1d 100644\n--- a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n+++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n@@ -81,7 +81,7 @@\n \tpublic void startServlet() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8080/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -90,7 +90,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(0);\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tthis.thrown.expectMessage(\"Connection refused\");\n \t\tgetResponse(\"http://localhost:8080/hello\");\n@@ -100,7 +100,7 @@\n \tpublic void stopServlet() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.container.stop();\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tgetResponse(\"http://localhost:8080/hello\");\n@@ -111,7 +111,7 @@\n \tpublic void restartWithKeepAlive() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \n \t\tMultiThreadedHttpConnectionManager connectionManager = new MultiThreadedHttpConnectionManager();\n \t\tHttpClient client = new HttpClient(connectionManager);\n@@ -121,7 +121,7 @@\n \n \t\tthis.container.stop();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \n \t\tGetMethod get2 = new GetMethod(\"http://localhost:8080/hello\");\n \t\tassertThat(client.executeMethod(get2), equalTo(200));\n@@ -131,7 +131,7 @@\n \t@Test\n \tpublic void startServletAndFilter() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n-\t\tthis.container = factory.getEmbdeddedServletContainer(\n+\t\tthis.container = factory.getEmbeddedServletContainer(\n \t\t\t\texampleServletRegistration(), new FilterRegistrationBean(\n \t\t\t\t\t\tnew ExampleFilter()));\n \t\tassertThat(getResponse(\"http://localhost:8080/hello\"), equalTo(\"[Hello World]\"));\n@@ -143,7 +143,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfinal Date[] date = new Date[1];\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(new ServletContextInitializer() {\n+\t\t\t\t.getEmbeddedServletContainer(new ServletContextInitializer() {\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void onStartup(ServletContext servletContext)\n \t\t\t\t\t\t\tthrows ServletException {\n@@ -163,7 +163,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(8081);\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8081/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -172,7 +172,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setContextPath(\"/say\");\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8080/say/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -202,7 +202,7 @@\n \tpublic void doubleStop() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.container.stop();\n \t\tthis.container.stop();\n \t}\n@@ -216,7 +216,7 @@\n \t\t}\n \t\tfactory.setInitializers(Arrays.asList(initializers[2], initializers[3]));\n \t\tfactory.addInitializers(initializers[4], initializers[5]);\n-\t\tthis.container = factory.getEmbdeddedServletContainer(initializers[0],\n+\t\tthis.container = factory.getEmbeddedServletContainer(initializers[0],\n \t\t\t\tinitializers[1]);\n \t\tInOrder ordered = inOrder((Object[]) initializers);\n \t\tfor (ServletContextInitializer initializer : initializers) {\n@@ -230,7 +230,7 @@\n \t\t\t\tnew FileWriter(this.temporaryFolder.newFile(\"test.txt\")));\n \t\tAbstractEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setDocumentRoot(this.temporaryFolder.getRoot());\n-\t\tthis.container = factory.getEmbdeddedServletContainer();\n+\t\tthis.container = factory.getEmbeddedServletContainer();\n \t\tassertThat(getResponse(\"http://localhost:8080/test.txt\"), equalTo(\"test\"));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 134,
        "bugNodeStartChar": 4468,
        "bugNodeLength": 127,
        "fixLineNum": 134,
        "fixNodeStartChar": 4468,
        "fixNodeLength": 126,
        "sourceBeforeFix": "factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))",
        "sourceAfterFix": "factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "dfb59a9e68b9bb0863b1397ddd0df1fa15eccdb8",
        "fixCommitParentSHA1": "4724e755f5a522cfe75f222c576b2360fce3762f",
        "bugFilePath": "web/src/main/java/org/openmrs/web/controller/patient/ShortPatientFormController.java",
        "fixPatch": "diff --git a/web/src/main/java/org/openmrs/web/controller/patient/ShortPatientFormController.java b/web/src/main/java/org/openmrs/web/controller/patient/ShortPatientFormController.java\nindex df87763..86ffec5 100644\n--- a/web/src/main/java/org/openmrs/web/controller/patient/ShortPatientFormController.java\n+++ b/web/src/main/java/org/openmrs/web/controller/patient/ShortPatientFormController.java\n@@ -247,7 +247,7 @@\n \t\t\t\t\r\n \t\t\t\tif (!patient.getVoided()) {\r\n \t\t\t\t\t// save the relationships to the database\r\n-\t\t\t\t\tMap<String, Relationship> relationships = getRelationshipsMap(patientModel, request);\r\n+\t\t\t\t\tMap<String, Relationship> relationships = getRelationshipsMap(patientModel, result, request);\r\n \t\t\t\t\tfor (Relationship relationship : relationships.values()) {\r\n \t\t\t\t\t\t// if the user added a person to this relationship, save\r\n \t\t\t\t\t\t// it\r\n@@ -347,6 +347,7 @@\n \t\r\n \t/**\r\n \t * Creates a map of string of the form 3b, 3a and the actual person Relationships\r\n+\t * @param result \r\n \t * \r\n \t * @param person the patient/person whose relationships to return\r\n \t * @param request the webRequest Object\r\n@@ -354,13 +355,13 @@\n \t */\r\n \t@ModelAttribute(\"relationshipsMap\")\r\n \tprivate Map<String, Relationship> getRelationshipsMap(@ModelAttribute(\"patientModel\") ShortPatientModel patientModel,\r\n-\t        WebRequest request) {\r\n+\t        BindingResult result, WebRequest request) {\r\n \t\t\r\n \t\t// Check if relationships must be shown\r\n \t\tString showRelationships = Context.getAdministrationService().getGlobalProperty(\r\n \t\t    OpenmrsConstants.GLOBAL_PROPERTY_NEWPATIENTFORM_SHOW_RELATIONSHIPS, \"false\");\r\n \t\t\r\n-\t\tif (\"false\".equals(showRelationships)) {\r\n+\t\tif (\"false\".equals(showRelationships) || result.hasErrors()) {\r\n \t\t\treturn new LinkedHashMap<String, Relationship>();\r\n \t\t}\r\n \t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 363,
        "bugNodeStartChar": 14955,
        "bugNodeLength": 33,
        "fixLineNum": 363,
        "fixNodeStartChar": 14593,
        "fixNodeLength": 55,
        "sourceBeforeFix": "\"false\".equals(showRelationships)",
        "sourceAfterFix": "\"false\".equals(showRelationships) || result.hasErrors()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7f4ede5a12b6a6056d545edcbcba8754e7d05624",
        "fixCommitParentSHA1": "0ed957ba961cb7b4057fe1372cfc363afead4f1e",
        "bugFilePath": "components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteTwoTest.java",
        "fixPatch": "diff --git a/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteTwoTest.java b/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteTwoTest.java\nindex faebd08..444c40e 100644\n--- a/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteTwoTest.java\n+++ b/components/camel-ldap/src/test/java/org/apache/camel/component/ldap/LdapRouteTwoTest.java\n@@ -65,7 +65,7 @@\n         env.put(\"java.naming.security.authentication\", \"simple\");\n \n         SimpleRegistry reg = new SimpleRegistry();\n-        reg.put(\"localhost:\" + port, env);\n+        reg.bind(\"localhost:\" + port, env);\n         camel = new DefaultCamelContext(reg);\n         template = camel.createProducerTemplate();\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 68,
        "bugNodeStartChar": 2884,
        "bugNodeLength": 33,
        "fixLineNum": 68,
        "fixNodeStartChar": 2884,
        "fixNodeLength": 34,
        "sourceBeforeFix": "reg.put(\"localhost:\" + port,env)",
        "sourceAfterFix": "reg.bind(\"localhost:\" + port,env)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b1a720418caea7e28d6b325727f46f17818af95e",
        "fixCommitParentSHA1": "d52b846bec51a01ceee1a071b4cbf36706372f04",
        "bugFilePath": "src/main/java/com/ning/http/client/AsyncHttpClientConfig.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java b/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java\nindex 87f85bf..be78015 100644\n--- a/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java\n+++ b/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java\n@@ -42,7 +42,7 @@\n  */\n public class AsyncHttpClientConfig {\n \n-    private final static String ASYNC_CLIENT = AsyncHttpClient.class.getName() + \".\";\n+    private final static String ASYNC_CLIENT = AsyncHttpClientConfig.class.getName() + \".\";\n \n     private final int maxTotalConnections;\n     private final int maxConnectionPerHost;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 45,
        "bugNodeStartChar": 1875,
        "bugNodeLength": 21,
        "fixLineNum": 45,
        "fixNodeStartChar": 1875,
        "fixNodeLength": 27,
        "sourceBeforeFix": "AsyncHttpClient.class",
        "sourceAfterFix": "AsyncHttpClientConfig.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "60e0eb1b8bb87242665c37e1f3ecf549b2457206",
        "fixCommitParentSHA1": "7aa6870af06d990f53b00494258d2ead222aeb5a",
        "bugFilePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java",
        "fixPatch": "diff --git a/hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java b/hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java\nindex 50c839b..94ff081 100644\n--- a/hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java\n+++ b/hikaricp-common/src/main/java/com/zaxxer/hikari/pool/BaseHikariPool.java\n@@ -67,7 +67,7 @@\n  *\n  * @author Brett Wooldridge\n  */\n-public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener\n+public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener\n {\n    protected final Logger LOGGER = LoggerFactory.getLogger(getClass());\n    private static final long ALIVE_BYPASS_WINDOW = Long.getLong(\"com.zaxxer.hikari.aliveBypassWindow\", 1000L);\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 64,
        "bugNodeStartChar": 2706,
        "bugNodeLength": 20269,
        "fixLineNum": 64,
        "fixNodeStartChar": 2706,
        "fixNodeLength": 20270,
        "sourceBeforeFix": "/**   * This is the primary connection pool class that provides the basic pooling behavior for HikariCP.  * @author Brett Wooldridge  */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener {   protected final Logger LOGGER=LoggerFactory.getLogger(getClass());   private static final long ALIVE_BYPASS_WINDOW=Long.getLong(\"com.zaxxer.hikari.aliveBypassWindow\",1000L);   protected static final int POOL_RUNNING=0;   protected static final int POOL_SUSPENDED=1;   protected static final int POOL_SHUTDOWN=2;   public final String catalog;   public final boolean isReadOnly;   public final boolean isAutoCommit;   public int transactionIsolation;   protected final PoolUtilities poolUtils;   protected final HikariConfig configuration;   protected final AtomicInteger totalConnections;   protected final ConcurrentBag<PoolBagEntry> connectionBag;   protected final ThreadPoolExecutor addConnectionExecutor;   protected final ThreadPoolExecutor closeConnectionExecutor;   protected final ScheduledThreadPoolExecutor houseKeepingExecutorService;   protected final boolean isUseJdbc4Validation;   protected final boolean isIsolateInternalQueries;   protected volatile int poolState;   protected volatile long connectionTimeout;   protected volatile long validationTimeout;   private final LeakTask leakTask;   private final DataSource dataSource;   private final GlobalPoolLock suspendResumeLock;   private final IConnectionCustomizer connectionCustomizer;   private final AtomicReference<Throwable> lastConnectionFailure;   private final String username;   private final String password;   private volatile MetricsTracker metricsTracker;   private volatile boolean isRecordMetrics;   /**   * Construct a HikariPool with the specified configuration.  * @param configuration a HikariConfig instance  */   public BaseHikariPool(  HikariConfig configuration){     this(configuration,configuration.getUsername(),configuration.getPassword());   }   /**   * Construct a HikariPool with the specified configuration.  We cache lots of configuration items in class-local final members for speed.  * @param configuration a HikariConfig instance  * @param username authentication username  * @param password authentication password  */   public BaseHikariPool(  HikariConfig configuration,  String username,  String password){     this.username=username;     this.password=password;     this.configuration=configuration;     this.poolUtils=new PoolUtilities(configuration);     this.connectionBag=createConcurrentBag(this);     this.totalConnections=new AtomicInteger();     this.connectionTimeout=configuration.getConnectionTimeout();     this.validationTimeout=configuration.getValidationTimeout();     this.lastConnectionFailure=new AtomicReference<Throwable>();     this.isReadOnly=configuration.isReadOnly();     this.isAutoCommit=configuration.isAutoCommit();     this.suspendResumeLock=configuration.isAllowPoolSuspension() ? new GlobalPoolLock(true) : GlobalPoolLock.FAUX_LOCK;     this.catalog=configuration.getCatalog();     this.connectionCustomizer=initializeCustomizer();     this.transactionIsolation=getTransactionIsolation(configuration.getTransactionIsolation());     this.isIsolateInternalQueries=configuration.isIsolateInternalQueries();     this.isUseJdbc4Validation=configuration.getConnectionTestQuery() == null;     setMetricRegistry(configuration.getMetricRegistry());     setHealthCheckRegistry(configuration.getHealthCheckRegistry());     this.dataSource=poolUtils.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getDriverClassName(),configuration.getJdbcUrl(),username,password);     this.addConnectionExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),\"HikariCP connection filler (pool \" + configuration.getPoolName() + \")\",configuration.getThreadFactory(),new ThreadPoolExecutor.DiscardPolicy());     this.closeConnectionExecutor=createThreadPoolExecutor(4,\"HikariCP connection closer (pool \" + configuration.getPoolName() + \")\",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());     long delayPeriod=Long.getLong(\"com.zaxxer.hikari.housekeeping.periodMs\",TimeUnit.SECONDS.toMillis(30L));     ThreadFactory threadFactory=configuration.getThreadFactory() != null ? configuration.getThreadFactory() : new DefaultThreadFactory(\"Hikari Housekeeping Timer (pool \" + configuration.getPoolName() + \")\",true);     this.houseKeepingExecutorService=new ScheduledThreadPoolExecutor(1,threadFactory,new ThreadPoolExecutor.DiscardPolicy());     this.houseKeepingExecutorService.scheduleAtFixedRate(getHouseKeeper(),delayPeriod,delayPeriod,TimeUnit.MILLISECONDS);     this.houseKeepingExecutorService.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);     this.leakTask=(configuration.getLeakDetectionThreshold() == 0) ? LeakTask.NO_LEAK : new LeakTask(configuration.getLeakDetectionThreshold(),houseKeepingExecutorService);     setRemoveOnCancelPolicy(houseKeepingExecutorService);     poolUtils.setLoginTimeout(dataSource,connectionTimeout);     registerMBeans(configuration,this);     initializeConnections();   }   /**   * Get a connection from the pool, or timeout after connectionTimeout milliseconds.  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection() throws SQLException {     return getConnection(connectionTimeout);   }   /**   * Get a connection from the pool, or timeout after the specified number of milliseconds.  * @param hardTimeout the maximum time to wait for a connection from the pool  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection(  final long hardTimeout) throws SQLException {     suspendResumeLock.acquire();     long timeout=hardTimeout;     final long start=System.currentTimeMillis();     final MetricsContext metricsContext=(isRecordMetrics ? metricsTracker.recordConnectionRequest(start) : MetricsTracker.NO_CONTEXT);     try {       do {         final PoolBagEntry bagEntry=connectionBag.borrow(timeout,TimeUnit.MILLISECONDS);         if (bagEntry == null) {           break;         }         final long now=System.currentTimeMillis();         if (bagEntry.evicted || (now - bagEntry.lastAccess > ALIVE_BYPASS_WINDOW && !isConnectionAlive(bagEntry.connection))) {           closeConnection(bagEntry,\"(connection evicted or dead)\");           timeout=hardTimeout - elapsedTimeMs(start);         }  else {           metricsContext.setConnectionLastOpen(bagEntry,now);           metricsContext.stop();           return ProxyFactory.getProxyConnection((HikariPool)this,bagEntry,leakTask.start(bagEntry));         }       }  while (timeout > 0L);     }  catch (    InterruptedException e) {       throw new SQLException(\"Interrupted during connection acquisition\",e);     }  finally {       suspendResumeLock.release();     }     logPoolState(\"Timeout failure \");     throw new SQLTimeoutException(String.format(\"Timeout after %dms of waiting for a connection.\",elapsedTimeMs(start)),lastConnectionFailure.getAndSet(null));   }   /**   * Release a connection back to the pool, or permanently close it if it is broken.  * @param bagEntry the PoolBagEntry to release back to the pool  */   public final void releaseConnection(  final PoolBagEntry bagEntry){     metricsTracker.recordConnectionUsage(bagEntry);     if (bagEntry.evicted) {       LOGGER.debug(\"Connection returned to pool {} is broken or evicted.  Closing connection.\",configuration.getPoolName());       closeConnection(bagEntry,\"(connection broken or evicted)\");     }  else {       connectionBag.requite(bagEntry);     }   }   /**   * Shutdown the pool, closing all idle connections and aborting or closing active connections.  * @throws InterruptedException thrown if the thread is interrupted during shutdown  */   public final void shutdown() throws InterruptedException {     if (poolState != POOL_SHUTDOWN) {       poolState=POOL_SHUTDOWN;       LOGGER.info(\"HikariCP pool {} is shutting down.\",configuration.getPoolName());       logPoolState(\"Before shutdown \");       connectionBag.close();       softEvictConnections();       houseKeepingExecutorService.shutdown();       addConnectionExecutor.shutdownNow();       houseKeepingExecutorService.awaitTermination(5L,TimeUnit.SECONDS);       addConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       final ExecutorService assassinExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),\"HikariCP connection assassin\",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());       final long start=System.currentTimeMillis();       do {         softEvictConnections();         abortActiveConnections(assassinExecutor);       }  while (getTotalConnections() > 0 && elapsedTimeMs(start) < TimeUnit.SECONDS.toMillis(5));       assassinExecutor.shutdown();       assassinExecutor.awaitTermination(5L,TimeUnit.SECONDS);       closeConnectionExecutor.shutdown();       closeConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       logPoolState(\"After shutdown \");       unregisterMBeans(configuration,this);       metricsTracker.close();     }   }   /**   * Evict a connection from the pool.  * @param proxyConnection the connection to evict  */   public final void evictConnection(  IHikariConnectionProxy proxyConnection){     closeConnection(proxyConnection.getPoolBagEntry(),\"(connection evicted by user)\");   }   /**   * Get the wrapped DataSource.  * @return the wrapped DataSource  */   public final DataSource getDataSource(){     return dataSource;   }   /**   * Get the pool configuration object.  * @return the {@link HikariConfig} for this pool  */   public final HikariConfig getConfiguration(){     return configuration;   }   @Override public String toString(){     return configuration.getPoolName();   }   /**   * {@inheritDoc}   */   @Override public final int getActiveConnections(){     return connectionBag.getCount(STATE_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getIdleConnections(){     return connectionBag.getCount(STATE_NOT_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getTotalConnections(){     return connectionBag.size() - connectionBag.getCount(STATE_REMOVED);   }   /**   * {@inheritDoc}   */   @Override public final int getThreadsAwaitingConnection(){     return connectionBag.getPendingQueue();   }   /**   * {@inheritDoc}   */   @Override public final void suspendPool(){     if (suspendResumeLock == GlobalPoolLock.FAUX_LOCK) {       throw new IllegalStateException(\"Pool \" + configuration.getPoolName() + \" is not suspendable\");     }  else     if (poolState != POOL_SUSPENDED) {       suspendResumeLock.suspend();       poolState=POOL_SUSPENDED;     }   }   /**   * {@inheritDoc}   */   @Override public final void resumePool(){     if (poolState == POOL_SUSPENDED) {       poolState=POOL_RUNNING;       addBagItem();       suspendResumeLock.resume();     }   }   public void setMetricRegistry(  Object metricRegistry){     this.isRecordMetrics=metricRegistry != null;     if (isRecordMetrics) {       this.metricsTracker=new CodaHaleMetricsTracker(this,(MetricRegistry)metricRegistry);     }  else {       this.metricsTracker=new MetricsTracker(this);     }   }   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       CodahaleHealthChecker.registerHealthChecks(this,(HealthCheckRegistry)healthCheckRegistry);     }   }   /**   * {@inheritDoc}   */   @Override public Future<Boolean> addBagItem(){     FutureTask<Boolean> future=new FutureTask<Boolean>(new Runnable(){       public void run(){         long sleepBackoff=200L;         final int minimumIdle=configuration.getMinimumIdle();         final int maxPoolSize=configuration.getMaximumPoolSize();         while (poolState == POOL_RUNNING && totalConnections.get() < maxPoolSize && getIdleConnections() <= minimumIdle && !addConnection()) {           quietlySleep(sleepBackoff);           sleepBackoff=Math.min(connectionTimeout / 2,(long)((double)sleepBackoff * 1.5));         }       }     } ,true);     addConnectionExecutor.execute(future);     return future;   }   /**   * Create and add a single connection to the pool.  */   protected final boolean addConnection(){     if (totalConnections.incrementAndGet() <= configuration.getMaximumPoolSize()) {       Connection connection=null;       try {         connection=(username == null && password == null) ? dataSource.getConnection() : dataSource.getConnection(username,password);         if (isUseJdbc4Validation && !poolUtils.isJdbc4ValidationSupported(connection)) {           throw new SQLException(\"JDBC4 Connection.isValid() method not supported, connection test query must be configured\");         }         final int originalTimeout=poolUtils.getAndSetNetworkTimeout(connection,connectionTimeout);         transactionIsolation=(transactionIsolation < 0 ? connection.getTransactionIsolation() : transactionIsolation);         poolUtils.setupConnection(connection,isAutoCommit,isReadOnly,transactionIsolation,catalog);         connectionCustomizer.customize(connection);         poolUtils.executeSql(connection,configuration.getConnectionInitSql(),isAutoCommit);         poolUtils.setNetworkTimeout(connection,originalTimeout);         connectionBag.add(new PoolBagEntry(connection,this));         lastConnectionFailure.set(null);         return true;       }  catch (      Exception e) {         lastConnectionFailure.set(e);         if (poolState == POOL_RUNNING) {           LOGGER.debug(\"Connection attempt to database {} failed: {}\",configuration.getPoolName(),e.getMessage(),e);         }         poolUtils.quietlyCloseConnection(connection,\"(exception during connection creation)\");       }     }     totalConnections.decrementAndGet();     return false;   }   /**   * Fill pool up from current idle connections (as they are perceived at the point of execution) to minimumIdle connections.  */   protected void fillPool(){     final int connectionsToAdd=configuration.getMinimumIdle() - getIdleConnections();     for (int i=0; i < connectionsToAdd; i++) {       addBagItem();     }     if (connectionsToAdd > 0 && LOGGER.isDebugEnabled()) {       addConnectionExecutor.execute(new Runnable(){         public void run(){           logPoolState(\"After fill \");         }       } );     }   }   /**   * Permanently close the real (underlying) connection (eat any exception).  * @param connectionProxy the connection to actually close  */   protected abstract void closeConnection(  final PoolBagEntry bagEntry,  final String closureReason);   /**   * Check whether the connection is alive or not.  * @param connection the connection to test  * @return true if the connection is alive, false if it is not alive or we timed out  */   protected abstract boolean isConnectionAlive(  final Connection connection);   /**   * Attempt to abort() active connections on Java7+, or close() them on Java6.  * @param assassinExecutor   * @throws InterruptedException   */   protected abstract void abortActiveConnections(  final ExecutorService assassinExecutor) throws InterruptedException ;   /**   * Create the JVM version-specific ConcurrentBag instance used by the pool.  * @param listener the IBagStateListener instance  * @return a ConcurrentBag instance  */   protected abstract ConcurrentBag<PoolBagEntry> createConcurrentBag(  IBagStateListener listener);   /**   * Create the JVM version-specific Housekeeping runnable instance used by the pool.  * @return the HouseKeeper instance  */   protected abstract Runnable getHouseKeeper();   /**   * Fill the pool up to the minimum size.  */   private void initializeConnections(){     if (configuration.isInitializationFailFast()) {       try {         try {           if (!addConnection()) {             shutdown();             throw new PoolInitializationException(lastConnectionFailure.getAndSet(null));           }           ConnectionProxy connection=(ConnectionProxy)getConnection();           connection.getPoolBagEntry().evicted=(configuration.getMinimumIdle() == 0);           connection.close();         }  catch (        SQLException e) {           shutdown();           throw new PoolInitializationException(e);         }       }  catch (      InterruptedException ie) {         throw new PoolInitializationException(ie);       }     }     fillPool();   }   /**   * Construct the user's connection customizer, if specified.  * @return an IConnectionCustomizer instance  */   @SuppressWarnings(\"deprecation\") private IConnectionCustomizer initializeCustomizer(){     if (configuration.getConnectionCustomizerClassName() != null) {       return createInstance(configuration.getConnectionCustomizerClassName(),IConnectionCustomizer.class);     }     return configuration.getConnectionCustomizer();   }   public final void logPoolState(  String... prefix){     if (LOGGER.isDebugEnabled()) {       LOGGER.debug(\"{}pool stats {} (total={}, inUse={}, avail={}, waiting={})\",(prefix.length > 0 ? prefix[0] : \"\"),configuration.getPoolName(),getTotalConnections(),getActiveConnections(),getIdleConnections(),getThreadsAwaitingConnection());     }   } } ",
        "sourceAfterFix": "/**   * This is the primary connection pool class that provides the basic pooling behavior for HikariCP.  * @author Brett Wooldridge  */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener {   protected final Logger LOGGER=LoggerFactory.getLogger(getClass());   private static final long ALIVE_BYPASS_WINDOW=Long.getLong(\"com.zaxxer.hikari.aliveBypassWindow\",1000L);   protected static final int POOL_RUNNING=0;   protected static final int POOL_SUSPENDED=1;   protected static final int POOL_SHUTDOWN=2;   public final String catalog;   public final boolean isReadOnly;   public final boolean isAutoCommit;   public int transactionIsolation;   protected final PoolUtilities poolUtils;   protected final HikariConfig configuration;   protected final AtomicInteger totalConnections;   protected final ConcurrentBag<PoolBagEntry> connectionBag;   protected final ThreadPoolExecutor addConnectionExecutor;   protected final ThreadPoolExecutor closeConnectionExecutor;   protected final ScheduledThreadPoolExecutor houseKeepingExecutorService;   protected final boolean isUseJdbc4Validation;   protected final boolean isIsolateInternalQueries;   protected volatile int poolState;   protected volatile long connectionTimeout;   protected volatile long validationTimeout;   private final LeakTask leakTask;   private final DataSource dataSource;   private final GlobalPoolLock suspendResumeLock;   private final IConnectionCustomizer connectionCustomizer;   private final AtomicReference<Throwable> lastConnectionFailure;   private final String username;   private final String password;   private volatile MetricsTracker metricsTracker;   private volatile boolean isRecordMetrics;   /**   * Construct a HikariPool with the specified configuration.  * @param configuration a HikariConfig instance  */   public BaseHikariPool(  HikariConfig configuration){     this(configuration,configuration.getUsername(),configuration.getPassword());   }   /**   * Construct a HikariPool with the specified configuration.  We cache lots of configuration items in class-local final members for speed.  * @param configuration a HikariConfig instance  * @param username authentication username  * @param password authentication password  */   public BaseHikariPool(  HikariConfig configuration,  String username,  String password){     this.username=username;     this.password=password;     this.configuration=configuration;     this.poolUtils=new PoolUtilities(configuration);     this.connectionBag=createConcurrentBag(this);     this.totalConnections=new AtomicInteger();     this.connectionTimeout=configuration.getConnectionTimeout();     this.validationTimeout=configuration.getValidationTimeout();     this.lastConnectionFailure=new AtomicReference<Throwable>();     this.isReadOnly=configuration.isReadOnly();     this.isAutoCommit=configuration.isAutoCommit();     this.suspendResumeLock=configuration.isAllowPoolSuspension() ? new GlobalPoolLock(true) : GlobalPoolLock.FAUX_LOCK;     this.catalog=configuration.getCatalog();     this.connectionCustomizer=initializeCustomizer();     this.transactionIsolation=getTransactionIsolation(configuration.getTransactionIsolation());     this.isIsolateInternalQueries=configuration.isIsolateInternalQueries();     this.isUseJdbc4Validation=configuration.getConnectionTestQuery() == null;     setMetricRegistry(configuration.getMetricRegistry());     setHealthCheckRegistry(configuration.getHealthCheckRegistry());     this.dataSource=poolUtils.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getDriverClassName(),configuration.getJdbcUrl(),username,password);     this.addConnectionExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),\"HikariCP connection filler (pool \" + configuration.getPoolName() + \")\",configuration.getThreadFactory(),new ThreadPoolExecutor.DiscardPolicy());     this.closeConnectionExecutor=createThreadPoolExecutor(4,\"HikariCP connection closer (pool \" + configuration.getPoolName() + \")\",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());     long delayPeriod=Long.getLong(\"com.zaxxer.hikari.housekeeping.periodMs\",TimeUnit.SECONDS.toMillis(30L));     ThreadFactory threadFactory=configuration.getThreadFactory() != null ? configuration.getThreadFactory() : new DefaultThreadFactory(\"Hikari Housekeeping Timer (pool \" + configuration.getPoolName() + \")\",true);     this.houseKeepingExecutorService=new ScheduledThreadPoolExecutor(1,threadFactory,new ThreadPoolExecutor.DiscardPolicy());     this.houseKeepingExecutorService.scheduleAtFixedRate(getHouseKeeper(),delayPeriod,delayPeriod,TimeUnit.MILLISECONDS);     this.houseKeepingExecutorService.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);     this.leakTask=(configuration.getLeakDetectionThreshold() == 0) ? LeakTask.NO_LEAK : new LeakTask(configuration.getLeakDetectionThreshold(),houseKeepingExecutorService);     setRemoveOnCancelPolicy(houseKeepingExecutorService);     poolUtils.setLoginTimeout(dataSource,connectionTimeout);     registerMBeans(configuration,this);     initializeConnections();   }   /**   * Get a connection from the pool, or timeout after connectionTimeout milliseconds.  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection() throws SQLException {     return getConnection(connectionTimeout);   }   /**   * Get a connection from the pool, or timeout after the specified number of milliseconds.  * @param hardTimeout the maximum time to wait for a connection from the pool  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection(  final long hardTimeout) throws SQLException {     suspendResumeLock.acquire();     long timeout=hardTimeout;     final long start=System.currentTimeMillis();     final MetricsContext metricsContext=(isRecordMetrics ? metricsTracker.recordConnectionRequest(start) : MetricsTracker.NO_CONTEXT);     try {       do {         final PoolBagEntry bagEntry=connectionBag.borrow(timeout,TimeUnit.MILLISECONDS);         if (bagEntry == null) {           break;         }         final long now=System.currentTimeMillis();         if (bagEntry.evicted || (now - bagEntry.lastAccess > ALIVE_BYPASS_WINDOW && !isConnectionAlive(bagEntry.connection))) {           closeConnection(bagEntry,\"(connection evicted or dead)\");           timeout=hardTimeout - elapsedTimeMs(start);         }  else {           metricsContext.setConnectionLastOpen(bagEntry,now);           metricsContext.stop();           return ProxyFactory.getProxyConnection((HikariPool)this,bagEntry,leakTask.start(bagEntry));         }       }  while (timeout > 0L);     }  catch (    InterruptedException e) {       throw new SQLException(\"Interrupted during connection acquisition\",e);     }  finally {       suspendResumeLock.release();     }     logPoolState(\"Timeout failure \");     throw new SQLTimeoutException(String.format(\"Timeout after %dms of waiting for a connection.\",elapsedTimeMs(start)),lastConnectionFailure.getAndSet(null));   }   /**   * Release a connection back to the pool, or permanently close it if it is broken.  * @param bagEntry the PoolBagEntry to release back to the pool  */   public final void releaseConnection(  final PoolBagEntry bagEntry){     metricsTracker.recordConnectionUsage(bagEntry);     if (bagEntry.evicted) {       LOGGER.debug(\"Connection returned to pool {} is broken or evicted.  Closing connection.\",configuration.getPoolName());       closeConnection(bagEntry,\"(connection broken or evicted)\");     }  else {       connectionBag.requite(bagEntry);     }   }   /**   * Shutdown the pool, closing all idle connections and aborting or closing active connections.  * @throws InterruptedException thrown if the thread is interrupted during shutdown  */   public final void shutdown() throws InterruptedException {     if (poolState != POOL_SHUTDOWN) {       poolState=POOL_SHUTDOWN;       LOGGER.info(\"HikariCP pool {} is shutting down.\",configuration.getPoolName());       logPoolState(\"Before shutdown \");       connectionBag.close();       softEvictConnections();       houseKeepingExecutorService.shutdown();       addConnectionExecutor.shutdownNow();       houseKeepingExecutorService.awaitTermination(5L,TimeUnit.SECONDS);       addConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       final ExecutorService assassinExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),\"HikariCP connection assassin\",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());       final long start=System.currentTimeMillis();       do {         softEvictConnections();         abortActiveConnections(assassinExecutor);       }  while (getTotalConnections() > 0 && elapsedTimeMs(start) < TimeUnit.SECONDS.toMillis(5));       assassinExecutor.shutdown();       assassinExecutor.awaitTermination(5L,TimeUnit.SECONDS);       closeConnectionExecutor.shutdown();       closeConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       logPoolState(\"After shutdown \");       unregisterMBeans(configuration,this);       metricsTracker.close();     }   }   /**   * Evict a connection from the pool.  * @param proxyConnection the connection to evict  */   public final void evictConnection(  IHikariConnectionProxy proxyConnection){     closeConnection(proxyConnection.getPoolBagEntry(),\"(connection evicted by user)\");   }   /**   * Get the wrapped DataSource.  * @return the wrapped DataSource  */   public final DataSource getDataSource(){     return dataSource;   }   /**   * Get the pool configuration object.  * @return the {@link HikariConfig} for this pool  */   public final HikariConfig getConfiguration(){     return configuration;   }   @Override public String toString(){     return configuration.getPoolName();   }   /**   * {@inheritDoc}   */   @Override public final int getActiveConnections(){     return connectionBag.getCount(STATE_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getIdleConnections(){     return connectionBag.getCount(STATE_NOT_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getTotalConnections(){     return connectionBag.size() - connectionBag.getCount(STATE_REMOVED);   }   /**   * {@inheritDoc}   */   @Override public final int getThreadsAwaitingConnection(){     return connectionBag.getPendingQueue();   }   /**   * {@inheritDoc}   */   @Override public final void suspendPool(){     if (suspendResumeLock == GlobalPoolLock.FAUX_LOCK) {       throw new IllegalStateException(\"Pool \" + configuration.getPoolName() + \" is not suspendable\");     }  else     if (poolState != POOL_SUSPENDED) {       suspendResumeLock.suspend();       poolState=POOL_SUSPENDED;     }   }   /**   * {@inheritDoc}   */   @Override public final void resumePool(){     if (poolState == POOL_SUSPENDED) {       poolState=POOL_RUNNING;       addBagItem();       suspendResumeLock.resume();     }   }   public void setMetricRegistry(  Object metricRegistry){     this.isRecordMetrics=metricRegistry != null;     if (isRecordMetrics) {       this.metricsTracker=new CodaHaleMetricsTracker(this,(MetricRegistry)metricRegistry);     }  else {       this.metricsTracker=new MetricsTracker(this);     }   }   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       CodahaleHealthChecker.registerHealthChecks(this,(HealthCheckRegistry)healthCheckRegistry);     }   }   /**   * {@inheritDoc}   */   @Override public Future<Boolean> addBagItem(){     FutureTask<Boolean> future=new FutureTask<Boolean>(new Runnable(){       public void run(){         long sleepBackoff=200L;         final int minimumIdle=configuration.getMinimumIdle();         final int maxPoolSize=configuration.getMaximumPoolSize();         while (poolState == POOL_RUNNING && totalConnections.get() < maxPoolSize && getIdleConnections() <= minimumIdle && !addConnection()) {           quietlySleep(sleepBackoff);           sleepBackoff=Math.min(connectionTimeout / 2,(long)((double)sleepBackoff * 1.5));         }       }     } ,true);     addConnectionExecutor.execute(future);     return future;   }   /**   * Create and add a single connection to the pool.  */   protected final boolean addConnection(){     if (totalConnections.incrementAndGet() <= configuration.getMaximumPoolSize()) {       Connection connection=null;       try {         connection=(username == null && password == null) ? dataSource.getConnection() : dataSource.getConnection(username,password);         if (isUseJdbc4Validation && !poolUtils.isJdbc4ValidationSupported(connection)) {           throw new SQLException(\"JDBC4 Connection.isValid() method not supported, connection test query must be configured\");         }         final int originalTimeout=poolUtils.getAndSetNetworkTimeout(connection,connectionTimeout);         transactionIsolation=(transactionIsolation < 0 ? connection.getTransactionIsolation() : transactionIsolation);         poolUtils.setupConnection(connection,isAutoCommit,isReadOnly,transactionIsolation,catalog);         connectionCustomizer.customize(connection);         poolUtils.executeSql(connection,configuration.getConnectionInitSql(),isAutoCommit);         poolUtils.setNetworkTimeout(connection,originalTimeout);         connectionBag.add(new PoolBagEntry(connection,this));         lastConnectionFailure.set(null);         return true;       }  catch (      Exception e) {         lastConnectionFailure.set(e);         if (poolState == POOL_RUNNING) {           LOGGER.debug(\"Connection attempt to database {} failed: {}\",configuration.getPoolName(),e.getMessage(),e);         }         poolUtils.quietlyCloseConnection(connection,\"(exception during connection creation)\");       }     }     totalConnections.decrementAndGet();     return false;   }   /**   * Fill pool up from current idle connections (as they are perceived at the point of execution) to minimumIdle connections.  */   protected void fillPool(){     final int connectionsToAdd=configuration.getMinimumIdle() - getIdleConnections();     for (int i=0; i < connectionsToAdd; i++) {       addBagItem();     }     if (connectionsToAdd > 0 && LOGGER.isDebugEnabled()) {       addConnectionExecutor.execute(new Runnable(){         public void run(){           logPoolState(\"After fill \");         }       } );     }   }   /**   * Permanently close the real (underlying) connection (eat any exception).  * @param connectionProxy the connection to actually close  */   protected abstract void closeConnection(  final PoolBagEntry bagEntry,  final String closureReason);   /**   * Check whether the connection is alive or not.  * @param connection the connection to test  * @return true if the connection is alive, false if it is not alive or we timed out  */   protected abstract boolean isConnectionAlive(  final Connection connection);   /**   * Attempt to abort() active connections on Java7+, or close() them on Java6.  * @param assassinExecutor   * @throws InterruptedException   */   protected abstract void abortActiveConnections(  final ExecutorService assassinExecutor) throws InterruptedException ;   /**   * Create the JVM version-specific ConcurrentBag instance used by the pool.  * @param listener the IBagStateListener instance  * @return a ConcurrentBag instance  */   protected abstract ConcurrentBag<PoolBagEntry> createConcurrentBag(  IBagStateListener listener);   /**   * Create the JVM version-specific Housekeeping runnable instance used by the pool.  * @return the HouseKeeper instance  */   protected abstract Runnable getHouseKeeper();   /**   * Fill the pool up to the minimum size.  */   private void initializeConnections(){     if (configuration.isInitializationFailFast()) {       try {         try {           if (!addConnection()) {             shutdown();             throw new PoolInitializationException(lastConnectionFailure.getAndSet(null));           }           ConnectionProxy connection=(ConnectionProxy)getConnection();           connection.getPoolBagEntry().evicted=(configuration.getMinimumIdle() == 0);           connection.close();         }  catch (        SQLException e) {           shutdown();           throw new PoolInitializationException(e);         }       }  catch (      InterruptedException ie) {         throw new PoolInitializationException(ie);       }     }     fillPool();   }   /**   * Construct the user's connection customizer, if specified.  * @return an IConnectionCustomizer instance  */   @SuppressWarnings(\"deprecation\") private IConnectionCustomizer initializeCustomizer(){     if (configuration.getConnectionCustomizerClassName() != null) {       return createInstance(configuration.getConnectionCustomizerClassName(),IConnectionCustomizer.class);     }     return configuration.getConnectionCustomizer();   }   public final void logPoolState(  String... prefix){     if (LOGGER.isDebugEnabled()) {       LOGGER.debug(\"{}pool stats {} (total={}, inUse={}, avail={}, waiting={})\",(prefix.length > 0 ? prefix[0] : \"\"),configuration.getPoolName(),getTotalConnections(),getActiveConnections(),getIdleConnections(),getThreadsAwaitingConnection());     }   } } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "fc80cf0f323b8f45dd7e80f5a4cc814ae6d691a7",
        "fixCommitParentSHA1": "706143715114bb097c4175c8ff978defa77c7057",
        "bugFilePath": "s3-extensions/src/test/java/io/druid/storage/s3/S3DataSegmentMoverTest.java",
        "fixPatch": "diff --git a/s3-extensions/src/test/java/io/druid/storage/s3/S3DataSegmentMoverTest.java b/s3-extensions/src/test/java/io/druid/storage/s3/S3DataSegmentMoverTest.java\nindex 6206da8..c13d22d 100644\n--- a/s3-extensions/src/test/java/io/druid/storage/s3/S3DataSegmentMoverTest.java\n+++ b/s3-extensions/src/test/java/io/druid/storage/s3/S3DataSegmentMoverTest.java\n@@ -62,7 +62,7 @@\n   public void testMove() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n-    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client);\n+    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client, new S3DataSegmentPusherConfig());\n \n     mockS3Client.putObject(\"main\", new S3Object(\"baseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"main\", new S3Object(\"baseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));\n@@ -82,7 +82,7 @@\n   public void testMoveNoop() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n-    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client);\n+    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client, new S3DataSegmentPusherConfig());\n \n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/index.zip\"));\n     mockS3Client.putObject(\"archive\", new S3Object(\"targetBaseKey/test/2013-01-01T00:00:00.000Z_2013-01-02T00:00:00.000Z/1/0/descriptor.json\"));\n@@ -103,7 +103,7 @@\n   public void testMoveException() throws Exception\n   {\n     MockStorageService mockS3Client = new MockStorageService();\n-    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client);\n+    S3DataSegmentMover mover = new S3DataSegmentMover(mockS3Client, new S3DataSegmentPusherConfig());\n \n     mover.move(\n         sourceSegment,\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 65,
        "bugNodeStartChar": 2223,
        "bugNodeLength": 36,
        "fixLineNum": 65,
        "fixNodeStartChar": 2223,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new S3DataSegmentMover(mockS3Client)",
        "sourceAfterFix": "new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b",
        "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 188,
        "bugNodeStartChar": 7548,
        "bugNodeLength": 32,
        "fixLineNum": 188,
        "fixNodeStartChar": 7548,
        "fixNodeLength": 39,
        "sourceBeforeFix": "globalExecutionStats.getSplits()",
        "sourceAfterFix": "globalExecutionStats.getStartedSplits()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2439f7a68843ddff5b468a203e5856705e574599",
        "fixCommitParentSHA1": "95a13b51ee052eb73882682e8f009bfa1e914866",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RegionGroupingProvider.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RegionGroupingProvider.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RegionGroupingProvider.java\nindex 2885428..0aeaccf 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RegionGroupingProvider.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RegionGroupingProvider.java\n@@ -185,7 +185,7 @@\n   }\n \n   private WAL getWAL(final String group) throws IOException {\n-    WAL log = cached.get(walCacheLock);\n+    WAL log = cached.get(group);\n     if (null == log) {\n       // only lock when need to create wal, and need to lock since\n       // creating hlog on fs is time consuming\n",
        "projectName": "apache.hbase",
        "bugLineNum": 188,
        "bugNodeStartChar": 7725,
        "bugNodeLength": 24,
        "fixLineNum": 188,
        "fixNodeStartChar": 7725,
        "fixNodeLength": 17,
        "sourceBeforeFix": "cached.get(walCacheLock)",
        "sourceAfterFix": "cached.get(group)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "0b9749aa429c009e6e392e2e526cb382fbee18df",
        "fixCommitParentSHA1": "690601ae1e82eede51760d5b7aaf303e77caffd2",
        "bugFilePath": "test/com/google/javascript/jscomp/ConstCheckTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/ConstCheckTest.java b/test/com/google/javascript/jscomp/ConstCheckTest.java\nindex 3b061c5..1b7acf6 100644\n--- a/test/com/google/javascript/jscomp/ConstCheckTest.java\n+++ b/test/com/google/javascript/jscomp/ConstCheckTest.java\n@@ -186,10 +186,10 @@\n   public void testConstNameInExterns() {\n     String externs = \"/** @const */ var FOO;\";\n     String js = \"FOO = 1;\";\n-    test(externs, js, (String) null, ConstCheck.CONST_REASSIGNED_VALUE_ERROR, null);\n+    test(externs, js, (String) null, null, ConstCheck.CONST_REASSIGNED_VALUE_ERROR);\n   }\n \n   private void testError(String js) {\n-    testError(js, ConstCheck.CONST_REASSIGNED_VALUE_ERROR);\n+    testWarning(js, ConstCheck.CONST_REASSIGNED_VALUE_ERROR);\n   }\n }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 189,
        "bugNodeStartChar": 5331,
        "bugNodeLength": 79,
        "fixLineNum": 189,
        "fixNodeStartChar": 5331,
        "fixNodeLength": 79,
        "sourceBeforeFix": "test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR,null)",
        "sourceAfterFix": "test(externs,js,(String)null,null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a7704d7675b90c86d8de21be0683a387e09dac23",
        "fixCommitParentSHA1": "88ad5e53319b88134165731cd93c66618d477f19",
        "bugFilePath": "controller-client/src/main/java/org/jboss/as/controller/client/helpers/domain/impl/DomainClientImpl.java",
        "fixPatch": "diff --git a/controller-client/src/main/java/org/jboss/as/controller/client/helpers/domain/impl/DomainClientImpl.java b/controller-client/src/main/java/org/jboss/as/controller/client/helpers/domain/impl/DomainClientImpl.java\nindex 5f7bf4c..ac536a1 100644\n--- a/controller-client/src/main/java/org/jboss/as/controller/client/helpers/domain/impl/DomainClientImpl.java\n+++ b/controller-client/src/main/java/org/jboss/as/controller/client/helpers/domain/impl/DomainClientImpl.java\n@@ -138,7 +138,7 @@\n         ModelNode op = new ModelNode();\n         op.get(\"operation\").set(\"read-children-names\");\n         op.get(\"child-type\").set(\"server-config\");\n-        op.get(\"address\").set(\"host\", host);\n+        op.get(\"address\").add(\"host\", host);\n         ModelNode result = executeForResult(OperationBuilder.Factory.create(op).build());\n         Set<String> servers = new HashSet<String>();\n         for (ModelNode server : result.asList()) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 141,
        "bugNodeStartChar": 5412,
        "bugNodeLength": 35,
        "fixLineNum": 141,
        "fixNodeStartChar": 5412,
        "fixNodeLength": 35,
        "sourceBeforeFix": "op.get(\"address\").set(\"host\",host)",
        "sourceAfterFix": "op.get(\"address\").add(\"host\",host)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "597a1442f49ecbd544e9310bed9e7659d568a103",
        "fixCommitParentSHA1": "4148de1812285015c8e086e4502969e1fe569ed5",
        "bugFilePath": "core/server/src/main/java/alluxio/web/UIFileInfo.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/web/UIFileInfo.java b/core/server/src/main/java/alluxio/web/UIFileInfo.java\nindex f4acea2..b80bf48 100644\n--- a/core/server/src/main/java/alluxio/web/UIFileInfo.java\n+++ b/core/server/src/main/java/alluxio/web/UIFileInfo.java\n@@ -279,7 +279,7 @@\n    * @return the percentage of the file stored in the given tier\n    */\n   public int getOnTierPercentage(String tierAlias) {\n-    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0;\n+    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L;\n     return (int) (100 * sizeOnTier / mSize);\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 282,
        "bugNodeStartChar": 8298,
        "bugNodeLength": 67,
        "fixLineNum": 282,
        "fixNodeStartChar": 8298,
        "fixNodeLength": 68,
        "sourceBeforeFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0",
        "sourceAfterFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3a0527463220c6d4b717b71ab77f2da14b7af62",
        "fixCommitParentSHA1": "ff7dc3b8f044c86b5cb80d68eb06702ce244a2c6",
        "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\nindex 77addab..e5e173d 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java\n@@ -96,14 +96,14 @@\n     register(String.class, JdbcType.CHAR, new StringTypeHandler());\n     register(String.class, JdbcType.CLOB, new ClobTypeHandler());\n     register(String.class, JdbcType.VARCHAR, new StringTypeHandler());\n-    register(String.class, JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(String.class, JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(String.class, JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCHAR, new NStringTypeHandler());\n     register(String.class, JdbcType.NCLOB, new NClobTypeHandler());\n     register(JdbcType.CHAR, new StringTypeHandler());\n     register(JdbcType.VARCHAR, new StringTypeHandler());\n     register(JdbcType.CLOB, new ClobTypeHandler());\n-    register(JdbcType.LONGVARCHAR, new ClobTypeHandler());\n+    register(JdbcType.LONGVARCHAR, new StringTypeHandler());\n     register(JdbcType.NVARCHAR, new NStringTypeHandler());\n     register(JdbcType.NCHAR, new NStringTypeHandler());\n     register(JdbcType.NCLOB, new NClobTypeHandler());\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 99,
        "bugNodeStartChar": 3790,
        "bugNodeLength": 21,
        "fixLineNum": 99,
        "fixNodeStartChar": 3790,
        "fixNodeLength": 23,
        "sourceBeforeFix": "new ClobTypeHandler()",
        "sourceAfterFix": "new StringTypeHandler()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7fe4af53a9c206fb201115be870694283f877740",
        "fixCommitParentSHA1": "de96d4581a0649c897eacb3a16c6497eb9cdb712",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java b/camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java\nindex c8d80e7..7708231 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java\n@@ -365,7 +365,7 @@\n      */\n     public static SortedMap<String, Properties> findComponents(CamelContext camelContext) throws LoadPropertiesException {\n         ClassResolver resolver = camelContext.getClassResolver();\n-        LOG.info(\"Finding all components using class resolver: {} -> {}\", new Object[]{resolver});\n+        LOG.debug(\"Finding all components using class resolver: {} -> {}\", new Object[]{resolver});\n         Enumeration<URL> iter = resolver.loadAllResourcesAsURL(COMPONENT_DESCRIPTOR);\n         return findComponents(camelContext, iter);\n     }\n@@ -376,7 +376,7 @@\n         SortedMap<String, Properties> map = new TreeMap<String, Properties>();\n         while (componentDescriptionIter != null && componentDescriptionIter.hasMoreElements()) {\n             URL url = componentDescriptionIter.nextElement();\n-            LOG.info(\"Finding components in url: {}\", url);\n+            LOG.trace(\"Finding components in url: {}\", url);\n             try {\n                 Properties properties = new Properties();\n                 properties.load(url.openStream());\n",
        "projectName": "apache.camel",
        "bugLineNum": 379,
        "bugNodeStartChar": 16006,
        "bugNodeLength": 46,
        "fixLineNum": 379,
        "fixNodeStartChar": 16006,
        "fixNodeLength": 47,
        "sourceBeforeFix": "LOG.info(\"Finding components in url: {}\",url)",
        "sourceAfterFix": "LOG.trace(\"Finding components in url: {}\",url)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9467bef8ea9a62658b32dd43a76f4f98087d1986",
        "fixCommitParentSHA1": "0ef751797e78f04798933bb87cf8bbb291248753",
        "bugFilePath": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java",
        "fixPatch": "diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\nindex 6b24a25..e22949ee 100644\n--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n@@ -161,7 +161,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -174,7 +174,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -187,7 +187,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -216,7 +216,7 @@\n     config.set(KeyProviderFactory.KEY_PROVIDER_PATH, \"user:///\");\n     ks.setConf(config);\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -262,19 +262,19 @@\n     final String[] args2 = {\"create\", \"keyattr2\", \"--provider\", jceksProvider,\n             \"--attr\", \"=bar\"};\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Not in attribute = value form */\n     outContent.reset();\n     args2[5] = \"foo\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* No attribute or value */\n     outContent.reset();\n     args2[5] = \"=\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Legal: attribute is a, value is b=c */\n     outContent.reset();\n@@ -308,7 +308,7 @@\n             \"--attr\", \"foo=bar\",\n             \"--attr\", \"foo=glarch\"};\n     rc = ks.run(args4);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Clean up to be a good citizen */\n     deleteKey(ks, \"keyattr1\");\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 190,
        "bugNodeStartChar": 6239,
        "bugNodeLength": 2,
        "fixLineNum": 190,
        "fixNodeStartChar": 6239,
        "fixNodeLength": 1,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2fbef41e3fcea14dcfc1bdaa0e6e103e246c3f90",
        "fixCommitParentSHA1": "ee1dab29455d35c0c26d9aae544234de492c75f0",
        "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
        "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex df88bf4..d10ef8a 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -209,7 +209,7 @@\n     public void testGetAuthenticatedUser() throws Exception {\n         assertEquals(id1, twitterAPI1.getAuthenticatedUser().getScreenName());\n         assertEquals(id1, new Twitter(id3, pass3).getAuthenticatedUser().getName());\n-        assertEquals(id3,new Twitter(id3, pass3).verifyCredentials().getName());\n+        assertEquals(id1,new Twitter(id3, pass3).verifyCredentials().getName());\n     }\n \n \n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 212,
        "bugNodeStartChar": 8959,
        "bugNodeLength": 71,
        "fixLineNum": 212,
        "fixNodeStartChar": 8959,
        "fixNodeLength": 71,
        "sourceBeforeFix": "assertEquals(id3,new Twitter(id3,pass3).verifyCredentials().getName())",
        "sourceAfterFix": "assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c1e4888011b5909b94591de25ab859b91093d6a3",
        "fixCommitParentSHA1": "244e74fdd23884ba3b1c4abdaf7fa8cfb8f9f991",
        "bugFilePath": "core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java",
        "fixPatch": "diff --git a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\nindex 2ecd5ae..22eaf69 100644\n--- a/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n+++ b/core-client/src/main/java/org/glassfish/jersey/client/ClientRequest.java\n@@ -450,7 +450,7 @@\n             try {\n                 commitStream();\n             } catch (IOException e) {\n-                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM());\n+                LOGGER.log(Level.SEVERE, LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(), e);\n             }\n         }\n     }\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 453,
        "bugNodeStartChar": 14571,
        "bugNodeLength": 79,
        "fixLineNum": 453,
        "fixNodeStartChar": 14571,
        "fixNodeLength": 82,
        "sourceBeforeFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())",
        "sourceAfterFix": "LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "63b7cec3050338899e04957cbc7039cd509cd214",
        "fixCommitParentSHA1": "462bc816369822d38dfc34c164fdbe1ac2461e6f",
        "bugFilePath": "junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java",
        "fixPatch": "diff --git a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\nindex b26310c..604d4f8 100644\n--- a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n+++ b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n@@ -113,7 +113,7 @@\n         RuntimeOptionsFactory runtimeOptionsFactory = new RuntimeOptionsFactory(SubClassWithMonoChromeTrue.class);\n         RuntimeOptions runtimeOptions = runtimeOptionsFactory.create();\n \n-        assertFalse(runtimeOptions.isMonochrome());\n+        assertTrue(runtimeOptions.isMonochrome());\n     }\n \n \n@@ -166,12 +166,12 @@\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = false)\n+    @Cucumber.Options(monochrome = true)\n     static class SubClassWithMonoChromeTrue extends BaseClassWithMonoChromeFalse {\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = true)\n+    @Cucumber.Options(monochrome = false)\n     static class BaseClassWithMonoChromeFalse {\n         // empty\n     }\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 169,
        "bugNodeStartChar": 5705,
        "bugNodeLength": 18,
        "fixLineNum": 169,
        "fixNodeStartChar": 5705,
        "fixNodeLength": 17,
        "sourceBeforeFix": "monochrome=false",
        "sourceAfterFix": "monochrome=true"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "adbf20a2896553db1f91fdf35f71668ece201599",
        "fixCommitParentSHA1": "09b1017156977115021d692587f0bbf4a131231c",
        "bugFilePath": "src/main/java/org/bukkit/plugin/PluginDescriptionFile.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\nindex 09e22cc..3975f38 100644\n--- a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\n+++ b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java\n@@ -127,7 +127,7 @@\n      * @return immutable list of plugins that should consider this plugin a soft-dependency\n      */\n     public List<String> getLoadBefore() {\n-        return softDepend;\n+        return loadBefore;\n     }\n \n     public PluginLoadOrder getLoad() {\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 130,
        "bugNodeStartChar": 3666,
        "bugNodeLength": 18,
        "fixLineNum": 130,
        "fixNodeStartChar": 3666,
        "fixNodeLength": 18,
        "sourceBeforeFix": "return softDepend; ",
        "sourceAfterFix": "return loadBefore; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0258fcc52329833429a7c745c610f3b8aaf57ce7",
        "fixCommitParentSHA1": "92b4a0df7a7428b0fe6ae2da9b89e90be2d23162",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/nio/UTFEncoderDecoder.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/UTFEncoderDecoder.java b/hazelcast/src/main/java/com/hazelcast/nio/UTFEncoderDecoder.java\nindex 81d3255..4004adb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/UTFEncoderDecoder.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/UTFEncoderDecoder.java\n@@ -274,7 +274,7 @@\n \n         public FastStringCreator(Constructor<String> constructor) {\n             this.constructor = constructor;\n-            this.useOldStringConstructor = constructor.getTypeParameters().length == 3;\n+            this.useOldStringConstructor = constructor.getParameterTypes().length == 3;\n         }\n \n         @Override\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 277,
        "bugNodeStartChar": 10849,
        "bugNodeLength": 31,
        "fixLineNum": 277,
        "fixNodeStartChar": 10849,
        "fixNodeLength": 31,
        "sourceBeforeFix": "constructor.getTypeParameters()",
        "sourceAfterFix": "constructor.getParameterTypes()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f59fbe6f81996df3541a69a1827c397bbb099886",
        "fixCommitParentSHA1": "6bfbcc291a3301ce7b02a5444df476cb8df17643",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java\nindex bd950b2..05ee515 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfigurationTests.java\n@@ -140,7 +140,8 @@\n \t\tfor (HttpMessageConverter<?> converter : handlerAdapter.getMessageConverters()) {\n \t\t\tif (converter instanceof TypeConstrainedMappingJackson2HttpMessageConverter) {\n \t\t\t\tassertThat(converter.getSupportedMediaTypes())\n-\t\t\t\t\t\t.containsExactly(MediaTypes.HAL_JSON);\n+\t\t\t\t\t\t.containsExactly(MediaTypes.HAL_JSON, MediaType.parseMediaType(\n+\t\t\t\t\t\t\t\tMediaTypes.HAL_JSON_VALUE + \";charset=UTF-8\"));\n \t\t\t}\n \t\t}\n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 142,
        "bugNodeStartChar": 5954,
        "bugNodeLength": 90,
        "fixLineNum": 142,
        "fixNodeStartChar": 5954,
        "fixNodeLength": 171,
        "sourceBeforeFix": "assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON)",
        "sourceAfterFix": "assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON,MediaType.parseMediaType(MediaTypes.HAL_JSON_VALUE + \";charset=UTF-8\"))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6e4943ae3ed462faadda268f20c12cf5e5b75e4d",
        "fixCommitParentSHA1": "79e86e23d2b1f0a325f7c51ce4e83d54e364ca23",
        "bugFilePath": "components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java",
        "fixPatch": "diff --git a/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java b/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\nindex dcd3a02..1d25f25 100644\n--- a/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\n+++ b/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\n@@ -90,12 +90,12 @@\n     }\n \n     private PulsarClient concurrentPulsarClient() throws PulsarClientException {\n-        return new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2).listenerThreads(5).build();\n+        return new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5).listenerThreads(5).build();\n     }\n \n     @Test\n     public void testMultipleMessageConsumedByClusterwithConcurrentConfiguration() throws Exception {\n-        to.expectedMessageCount(NUMBER_OF_CONSUMERS);\n+        to.expectedMinimumMessageCount(1);\n \n         Producer<String> producer = concurrentPulsarClient().newProducer(Schema.STRING).producerName(PRODUCER).topic(TOPIC_URI).create();\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 93,
        "bugNodeStartChar": 3599,
        "bugNodeLength": 69,
        "fixLineNum": 93,
        "fixNodeStartChar": 3599,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2)",
        "sourceAfterFix": "new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "370ead7395fc9194a3dc2d05afc4b3409f6b27da",
        "fixCommitParentSHA1": "c4dd016566067eb16b97bfaa22f1a8a466afce6c",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\nindex c170491..0e80506 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n@@ -170,11 +170,11 @@\n     }\n   }\n \n-  private HashMap<String, ASTNode> doPhase1GetAggregationsFromSelect(\n+  private LinkedHashMap<String, ASTNode> doPhase1GetAggregationsFromSelect(\n       ASTNode selExpr) {\n     // Iterate over the selects search for aggregation Trees.\n     // Use String as keys to eliminate duplicate trees.\n-    HashMap<String, ASTNode> aggregationTrees = new HashMap<String, ASTNode>();\n+    LinkedHashMap<String, ASTNode> aggregationTrees = new LinkedHashMap<String, ASTNode>();\n     for (int i = 0; i < selExpr.getChildCount(); ++i) {\n       ASTNode sel = (ASTNode) selExpr.getChild(i).getChild(0);\n       doPhase1GetAllAggregations(sel, aggregationTrees);\n@@ -348,7 +348,7 @@\n       case HiveParser.TOK_SELECT:\n         qb.countSel();\n         qbp.setSelExprForClause(ctx_1.dest, ast);\n-        HashMap<String, ASTNode> aggregations = doPhase1GetAggregationsFromSelect(ast);\n+        LinkedHashMap<String, ASTNode> aggregations = doPhase1GetAggregationsFromSelect(ast);\n         qbp.setAggregationExprsForClause(ctx_1.dest, aggregations);\n         qbp.setDistinctFuncExprForClause(ctx_1.dest,\n             doPhase1GetDistinctFuncExpr(aggregations));\n",
        "projectName": "apache.hive",
        "bugLineNum": 177,
        "bugNodeStartChar": 6835,
        "bugNodeLength": 24,
        "fixLineNum": 177,
        "fixNodeStartChar": 6835,
        "fixNodeLength": 30,
        "sourceBeforeFix": "HashMap<String,ASTNode>",
        "sourceAfterFix": "LinkedHashMap<String,ASTNode>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3d732616366b93a75351f4f43ecaa80d2d544abe",
        "fixCommitParentSHA1": "6b264008a9bcdf5ffc9ebf0f6a4b71be07766208",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\nindex be1c154..dacaae9 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n@@ -431,7 +431,7 @@\n         if (!root.exists()) {\n           // storage directory does not exist\n           if (startOpt != StartupOption.FORMAT) {\n-            LOG.info(\"Storage directory \" + rootPath + \" does not exist\");\n+            LOG.warn(\"Storage directory \" + rootPath + \" does not exist\");\n             return StorageState.NON_EXISTENT;\n           }\n           LOG.info(rootPath + \" does not exist. Creating ...\");\n@@ -440,15 +440,15 @@\n         }\n         // or is inaccessible\n         if (!root.isDirectory()) {\n-          LOG.info(rootPath + \"is not a directory\");\n+          LOG.warn(rootPath + \"is not a directory\");\n           return StorageState.NON_EXISTENT;\n         }\n         if (!root.canWrite()) {\n-          LOG.info(\"Cannot access storage directory \" + rootPath);\n+          LOG.warn(\"Cannot access storage directory \" + rootPath);\n           return StorageState.NON_EXISTENT;\n         }\n       } catch(SecurityException ex) {\n-        LOG.info(\"Cannot access storage directory \" + rootPath, ex);\n+        LOG.warn(\"Cannot access storage directory \" + rootPath, ex);\n         return StorageState.NON_EXISTENT;\n       }\n \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 434,
        "bugNodeStartChar": 14714,
        "bugNodeLength": 61,
        "fixLineNum": 434,
        "fixNodeStartChar": 14714,
        "fixNodeLength": 61,
        "sourceBeforeFix": "LOG.info(\"Storage directory \" + rootPath + \" does not exist\")",
        "sourceAfterFix": "LOG.warn(\"Storage directory \" + rootPath + \" does not exist\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "da81d5ef25e71ae77bb98e0184aed2cb125fc1a6",
        "fixCommitParentSHA1": "714c943e03485fdaaa2c816f306dd04cc29e8c2e",
        "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
        "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 91,
        "bugNodeStartChar": 3569,
        "bugNodeLength": 68,
        "fixLineNum": 91,
        "fixNodeStartChar": 3569,
        "fixNodeLength": 37,
        "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
        "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "885f7d1e71f16d5051ea7a71fb522ebf85821e97",
        "fixCommitParentSHA1": "964fe7d76dde886bb186161a111a5d36888d6861",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\nindex 1956312..64c1f67 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\n@@ -109,7 +109,7 @@\n                             }\n                         });\n                         //add the interceptor\n-                        configuration.addClientInterceptor(method, factory, InterceptorOrder.View.COMPONENT_DISPATCHER);\n+                        configuration.addViewInterceptor(method, factory, InterceptorOrder.View.COMPONENT_DISPATCHER);\n \n                     }\n                 }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 112,
        "bugNodeStartChar": 7151,
        "bugNodeLength": 95,
        "fixLineNum": 112,
        "fixNodeStartChar": 7151,
        "fixNodeLength": 93,
        "sourceBeforeFix": "configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)",
        "sourceAfterFix": "configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b6e7034c72a3eb018d80a72fa17da5338d0381c8",
        "fixCommitParentSHA1": "205f6b893b62a72488cdab05da92f16d3c0ca9f6",
        "bugFilePath": "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java",
        "fixPatch": "diff --git a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\nindex 7ab2500..837d065 100644\n--- a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n+++ b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n@@ -86,7 +86,7 @@\n         if (s == null) {\n             return null;\n         }\n-        return IOConverter.toInputStream(s);\n+        return IOConverter.toInputStream(s, null);\n     }\n \n     /**\n@@ -99,7 +99,7 @@\n         if (s == null) {\n             return null;\n         }\n-        return IOConverter.toInputStream(s);\n+        return IOConverter.toInputStream(s, null);\n     }\n \n }\n",
        "projectName": "apache.camel",
        "bugLineNum": 89,
        "bugNodeStartChar": 2904,
        "bugNodeLength": 28,
        "fixLineNum": 89,
        "fixNodeStartChar": 2904,
        "fixNodeLength": 34,
        "sourceBeforeFix": "IOConverter.toInputStream(s)",
        "sourceAfterFix": "IOConverter.toInputStream(s,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "312ba4238e15b4f95054ca33ee1b3604afbd8d74",
        "fixCommitParentSHA1": "1adb490974aa0d69fcb64a58f59576424993cb41",
        "bugFilePath": "api/src/main/java/org/openmrs/validator/PatientProgramValidator.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\nindex fa91205..9bb6eb4 100644\n--- a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\n+++ b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\n@@ -140,7 +140,7 @@\n \t\t\t\t\tif (OpenmrsUtil.compareWithNullAsLatest(patientState.getEndDate(), patientState.getStartDate()) < 0) {\r\n \t\t\t\t\t\terrors.rejectValue(\"states\", \"PatientState.error.endDateCannotBeBeforeStartDate\");\r\n \t\t\t\t\t\treturn;\r\n-\t\t\t\t\t} else if (statesAndStartDates.contains(patientState.getState().getId() + \"\"\r\n+\t\t\t\t\t} else if (statesAndStartDates.contains(patientState.getState().getUuid() + \"\"\r\n \t\t\t\t\t        + patientState.getStartDate())) {\r\n \t\t\t\t\t\t// we already have a patient state with the same work flow state and start date\r\n \t\t\t\t\t\terrors.rejectValue(\"states\", \"PatientState.error.duplicatePatientStates\");\r\n@@ -185,7 +185,7 @@\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\t\r\n-\t\t\t\t\tstatesAndStartDates.add(patientState.getState().getId() + \"\" + patientState.getStartDate());\r\n+\t\t\t\t\tstatesAndStartDates.add(patientState.getState().getUuid() + \"\" + patientState.getStartDate());\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 143,
        "bugNodeStartChar": 6067,
        "bugNodeLength": 31,
        "fixLineNum": 143,
        "fixNodeStartChar": 5925,
        "fixNodeLength": 33,
        "sourceBeforeFix": "patientState.getState().getId()",
        "sourceAfterFix": "patientState.getState().getUuid()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe",
        "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 624,
        "bugNodeStartChar": 29163,
        "bugNodeLength": 28,
        "fixLineNum": 624,
        "fixNodeStartChar": 29163,
        "fixNodeLength": 41,
        "sourceBeforeFix": "analysis.getType(expression)",
        "sourceAfterFix": "analysis.getTypeWithCoercions(expression)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cfee205c31ff46c1bb0b43812185a7f2dc34cf11",
        "fixCommitParentSHA1": "0a7cf91fcb2fd7f6335da77212609d253aca72e0",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterSubsystemAdd.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterSubsystemAdd.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterSubsystemAdd.java\nindex 8659826..a72ee6a 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterSubsystemAdd.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterSubsystemAdd.java\n@@ -136,19 +136,19 @@\n                 config.setSslTrustStorePassword(password.asString());\n                 config.setSslKeyStorePassword(password.asString());\n             }\n-            if (ssl.has(CommonAttributes.CERTIFICATE_KEY_FILE)) {\n+            if (ssl.hasDefined(CommonAttributes.CERTIFICATE_KEY_FILE)) {\n                 config.setSslKeyStore(CERTIFICATE_KEY_FILE.resolveModelAttribute(context, ssl).asString());\n             }\n-            if (ssl.has(CommonAttributes.CIPHER_SUITE)) {\n+            if (ssl.hasDefined(CommonAttributes.CIPHER_SUITE)) {\n                 config.setSslCiphers(CIPHER_SUITE.resolveModelAttribute(context, ssl).asString());\n             }\n-            if (ssl.has(CommonAttributes.PROTOCOL)) {\n+            if (ssl.hasDefined(CommonAttributes.PROTOCOL)) {\n                 config.setSslProtocol(PROTOCOL.resolveModelAttribute(context, ssl).asString());\n             }\n-            if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)) {\n+            if (ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)) {\n                 config.setSslTrustStore(CA_CERTIFICATE_FILE.resolveModelAttribute(context, ssl).asString());\n             }\n-            if (ssl.has(CommonAttributes.CA_REVOCATION_URL)) {\n+            if (ssl.hasDefined(CommonAttributes.CA_REVOCATION_URL)) {\n                 config.setSslCrlFile(CA_REVOCATION_URL.resolveModelAttribute(context, ssl).asString());\n             }\n         }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 148,
        "bugNodeStartChar": 7940,
        "bugNodeLength": 45,
        "fixLineNum": 148,
        "fixNodeStartChar": 7940,
        "fixNodeLength": 52,
        "sourceBeforeFix": "ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)",
        "sourceAfterFix": "ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "25923003ecdba4ed236618b917dadeb36e74addf",
        "fixCommitParentSHA1": "b5a457613183b4042f93f25bb0b375bf5de4f4ee",
        "bugFilePath": "bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\nindex 0758542..b3938ed 100644\n--- a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n+++ b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n@@ -178,8 +178,7 @@\n                     } else {\r\n                         sendColor(command, bridgeId, bulb);\r\n                     }\r\n-                }\r\n-                if (command instanceof PercentType) {\r\n+                } else if (command instanceof PercentType) {\r\n                     sendPercent(bulb, rgbwSteps, bridgeId, (PercentType) command, BindingType.brightness);\r\n                 }\r\n             }\r\n@@ -219,7 +218,7 @@\n                         command.toString(), repeatCount);\r\n                 if (command.compareTo(oldPercent) > 0) {\r\n                     for (int i = 0; i < repeatCount; i++) {\r\n-                        Thread.sleep(50);\r\n+                        Thread.sleep(100);\r\n                         if (BindingType.brightness.equals(type)) {\r\n                             sendIncrease(bulb, rgbwSteps, bridgeId);\r\n                         } else if (BindingType.colorTemperature.equals(type)) {\r\n@@ -228,7 +227,7 @@\n                     }\r\n                 } else if (command.compareTo(oldPercent) < 0) {\r\n                     for (int i = 0; i < repeatCount; i++) {\r\n-                        Thread.sleep(50);\r\n+                        Thread.sleep(100);\r\n                         if (BindingType.brightness.equals(type)) {\r\n                             sendDecrease(bulb, rgbwSteps, bridgeId);\r\n                         } else if (BindingType.colorTemperature.equals(type)) {\r\n@@ -716,7 +715,7 @@\n             for (int i = 0; i < 10; i++) {\r\n                 sendDecrease(bulb, 27, bridgeId);\r\n                 try {\r\n-                    Thread.sleep(50);\r\n+                    Thread.sleep(100);\r\n                 } catch (InterruptedException e) {\r\n                 }\r\n             }\r\n@@ -739,7 +738,7 @@\n             }\r\n             if (bulb > 5) {\r\n                 sendOn(bulb, bridgeId);\r\n-                Thread.sleep(50);\r\n+                Thread.sleep(100);\r\n                 String messageBytes = \"40:\" + Integer.toHexString(milightColorNo) + \":55\";\r\n                 sendMessage(messageBytes, bridgeId);\r\n             }\r\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 742,
        "bugNodeStartChar": 30849,
        "bugNodeLength": 16,
        "fixLineNum": 742,
        "fixNodeStartChar": 30108,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(50)",
        "sourceAfterFix": "Thread.sleep(100)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "58d4d29c049c0bf8314d2c0b00ef133ee68c77e9",
        "fixCommitParentSHA1": "a481dcbd4696e4b1277028ec08b9b781502fb5df",
        "bugFilePath": "bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java b/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\nindex c697033..f815f51 100644\n--- a/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\n+++ b/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\n@@ -599,13 +599,13 @@\n             int level = this.rfStatus.intValue();\n             int result;\n \n-            if (level <= RF_STATUS_FULL_SIGNAL) {\n+            if (level < RF_STATUS_FULL_SIGNAL) {\n                 result = 5;\n-            } else if (level <= RF_STATUS_HIGH_SIGNAL) {\n+            } else if (level < RF_STATUS_HIGH_SIGNAL) {\n                 result = 4;\n-            } else if (level <= RF_STATUS_MEDIUM_SIGNAL) {\n+            } else if (level < RF_STATUS_MEDIUM_SIGNAL) {\n                 result = 3;\n-            } else if (level <= RF_STATUS_LOW_SIGNAL) {\n+            } else if (level < RF_STATUS_LOW_SIGNAL) {\n                 result = 2;\n             } else {\n                 result = 1;\n@@ -643,13 +643,13 @@\n \n             int batteryVp = this.batteryVp;\n             int result;\n-            if (batteryVp >= full) {\n+            if (batteryVp > full) {\n                 result = 5;\n-            } else if (batteryVp >= high) {\n+            } else if (batteryVp > high) {\n                 result = 4;\n-            } else if (batteryVp >= medium) {\n+            } else if (batteryVp > medium) {\n                 result = 3;\n-            } else if (batteryVp >= low) {\n+            } else if (batteryVp > low) {\n                 result = 2;\n             } else { /* very low */\n                 result = 1;\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 604,
        "bugNodeStartChar": 16491,
        "bugNodeLength": 30,
        "fixLineNum": 604,
        "fixNodeStartChar": 16491,
        "fixNodeLength": 29,
        "sourceBeforeFix": "level <= RF_STATUS_HIGH_SIGNAL",
        "sourceAfterFix": "level < RF_STATUS_HIGH_SIGNAL"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "16b924b95c9d99fa24d72fa649d42bc77d9528f2",
        "fixCommitParentSHA1": "df5944fad4e3100e054f1dda09c60ebc80274e15",
        "bugFilePath": "components/camel-cometd/src/main/java/org/apache/camel/component/cometd/CometdEndpoint.java",
        "fixPatch": "diff --git a/components/camel-cometd/src/main/java/org/apache/camel/component/cometd/CometdEndpoint.java b/components/camel-cometd/src/main/java/org/apache/camel/component/cometd/CometdEndpoint.java\nindex a20b3b4..1e81c42 100644\n--- a/components/camel-cometd/src/main/java/org/apache/camel/component/cometd/CometdEndpoint.java\n+++ b/components/camel-cometd/src/main/java/org/apache/camel/component/cometd/CometdEndpoint.java\n@@ -112,7 +112,7 @@\n     }\n \n     public boolean isSingleton() {\n-        return false;\n+        return true;\n     }\n \n     public String getPath() {\n",
        "projectName": "apache.camel",
        "bugLineNum": 115,
        "bugNodeStartChar": 4346,
        "bugNodeLength": 13,
        "fixLineNum": 115,
        "fixNodeStartChar": 4346,
        "fixNodeLength": 12,
        "sourceBeforeFix": "return false; ",
        "sourceAfterFix": "return true; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c60610c399277d16c94872e2279f861eb8ccd9b1",
        "fixCommitParentSHA1": "57449181445da09713b55f6424befee33b22c1ef",
        "bugFilePath": "DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java",
        "fixPatch": "diff --git a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\nindex 70cf4d1..64fb1b6 100644\n--- a/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n+++ b/DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java\n@@ -175,7 +175,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n@@ -234,7 +234,7 @@\n             }\n \n             //Execute task\n-            final String containerSource = \"Stream \" + importer;\n+            final String containerSource = \"Stream \" + importerName;\n             executor.execute(task, new Runnable() {\n \n                 public void run() {\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 237,
        "bugNodeStartChar": 9971,
        "bugNodeLength": 20,
        "fixLineNum": 237,
        "fixNodeStartChar": 9971,
        "fixNodeLength": 24,
        "sourceBeforeFix": "\"Stream \" + importer",
        "sourceAfterFix": "\"Stream \" + importerName"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "cafd66e2cd040453fc09e5078b9dbb25657ad19a",
        "fixCommitParentSHA1": "7d1377b7487816edd1d1d52aff98d58ca89acdc1",
        "bugFilePath": "components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java",
        "fixPatch": "diff --git a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\nindex 7470f1a..d810f05 100644\n--- a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n+++ b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n@@ -1053,7 +1053,8 @@\n             // because the factory has already been instantiated\n             try {\n                 for (String component : components) {\n-                    if (camelContext.getComponent(component) == null) {\n+                    if (camelContext.getComponent(component, false) == null) {\n+                        // component not already in camel-context so resolve an OSGi reference to it\n                         getComponentResolverReference(context, component);\n                     } else {\n                         LOG.debug(\"Not creating a service reference for component {} because a component already exists in the Camel Context\", component);\n",
        "projectName": "apache.camel",
        "bugLineNum": 1056,
        "bugNodeStartChar": 51220,
        "bugNodeLength": 36,
        "fixLineNum": 1056,
        "fixNodeStartChar": 51220,
        "fixNodeLength": 43,
        "sourceBeforeFix": "camelContext.getComponent(component)",
        "sourceAfterFix": "camelContext.getComponent(component,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f1b22619682351923e1d34481e6efe499f41745f",
        "fixCommitParentSHA1": "79e8351d357383e3b1f85f029883970fac601c46",
        "bugFilePath": "guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java b/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\nindex 30f6477..dff58de 100644\n--- a/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n+++ b/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n@@ -209,8 +209,9 @@\n     fakePool.runAll();\n \n     // Check that the interruption of a SequentialExecutor's task is restored to the thread once\n-    // it is yielded.\n-    assertThat(Thread.currentThread().isInterrupted()).isTrue();\n+    // it is yielded. Clear the bit while checking so that the test doesn't hose JUnit or some other\n+    // test case.\n+    assertThat(Thread.currentThread().interrupted()).isTrue();\n   }\n \n   public void testInterrupt_doesNotStopExecution() {\n",
        "projectName": "google.guava",
        "bugLineNum": 213,
        "bugNodeStartChar": 5997,
        "bugNodeLength": 38,
        "fixLineNum": 214,
        "fixNodeStartChar": 6094,
        "fixNodeLength": 36,
        "sourceBeforeFix": "Thread.currentThread().isInterrupted()",
        "sourceAfterFix": "Thread.currentThread().interrupted()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "da067cd627411116af86c4e5f4bb8d105eb75a40",
        "fixCommitParentSHA1": "ac1b21404584a2f205c3c6e9f30fc486fd300c1f",
        "bugFilePath": "core/src/main/java/cucumber/runtime/LinePredicate.java",
        "fixPatch": "diff --git a/core/src/main/java/cucumber/runtime/LinePredicate.java b/core/src/main/java/cucumber/runtime/LinePredicate.java\nindex e9e5069..042dfed 100644\n--- a/core/src/main/java/cucumber/runtime/LinePredicate.java\n+++ b/core/src/main/java/cucumber/runtime/LinePredicate.java\n@@ -17,7 +17,7 @@\n     public boolean apply(PickleEvent pickleEvent) {\n         String picklePath = pickleEvent.uri;\n         if (!lineFilters.containsKey(picklePath)) {\n-            return true;\n+            return false;\n         }\n         for (Long line : lineFilters.get(picklePath)) {\n             for (PickleLocation location : pickleEvent.pickle.getLocations()) {\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 20,
        "bugNodeStartChar": 540,
        "bugNodeLength": 12,
        "fixLineNum": 20,
        "fixNodeStartChar": 540,
        "fixNodeLength": 13,
        "sourceBeforeFix": "return true; ",
        "sourceAfterFix": "return false; "
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "3f78497752cf1a23f56bb0a018b50f3db9d66638",
        "fixCommitParentSHA1": "0a9d59291f5f098177c6cbaa2e507c3ee8e31bf8",
        "bugFilePath": "src/org/bukkit/plugin/SimplePluginManager.java",
        "fixPatch": "diff --git a/src/org/bukkit/plugin/SimplePluginManager.java b/src/org/bukkit/plugin/SimplePluginManager.java\nindex cc696f6..eef3f8e 100644\n--- a/src/org/bukkit/plugin/SimplePluginManager.java\n+++ b/src/org/bukkit/plugin/SimplePluginManager.java\n@@ -194,7 +194,7 @@\n         List<RegisteredListener> eventListeners = listeners.get(type);\n         int position = 0;\n \n-        if (listeners != null) {\n+        if (eventListeners != null) {\n             for (RegisteredListener registration : eventListeners) {\n                 if (registration.getPriority().compareTo(priority) < 0) {\n                     break;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 197,
        "bugNodeStartChar": 6667,
        "bugNodeLength": 17,
        "fixLineNum": 197,
        "fixNodeStartChar": 6667,
        "fixNodeLength": 22,
        "sourceBeforeFix": "listeners != null",
        "sourceAfterFix": "eventListeners != null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1",
        "fixCommitParentSHA1": "ad69603a419c345ab963288ec2ff0a737d11db5f",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\nindex e390609..01472b3 100755\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n@@ -105,7 +105,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testRepetitionJobEvents\");\n     Job theJob = managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();\n     assertNotNull(theJob);\n@@ -156,7 +156,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n@@ -170,7 +170,7 @@\n   @Deployment(resources = \"org/activiti/engine/test/api/event/JobEventsTest.testJobCanceledEventOnBoundaryEvent.bpmn20.xml\")\n   public void testJobCanceledEventByManagementService() throws Exception {\n     // GIVEN\n-    processEngineConfiguration.getClock().setCurrentTime(new Date(0));\n+    processEngineConfiguration.getClock().setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 159,
        "bugNodeStartChar": 5922,
        "bugNodeLength": 11,
        "fixLineNum": 159,
        "fixNodeStartChar": 5922,
        "fixNodeLength": 11,
        "sourceBeforeFix": "new Date(0)",
        "sourceAfterFix": "new Date(1)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "112d050609184375d8cc6b15ddb80bc7c6b9a19c",
        "fixCommitParentSHA1": "34e23fe425e62f240a65c435d41adfbbe211522d",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestSyncReplicationStandbyKillRS.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestSyncReplicationStandbyKillRS.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestSyncReplicationStandbyKillRS.java\nindex 3c9724f..d659688 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestSyncReplicationStandbyKillRS.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestSyncReplicationStandbyKillRS.java\n@@ -90,7 +90,7 @@\n       UTIL2.getAdmin().transitReplicationPeerSyncReplicationState(PEER_ID,\n           SyncReplicationState.DOWNGRADE_ACTIVE);\n     } catch (Exception e) {\n-      LOG.error(\"Failed to transit standby cluster to \" + SyncReplicationState.DOWNGRADE_ACTIVE);\n+      LOG.error(\"Failed to transit standby cluster to \" + SyncReplicationState.DOWNGRADE_ACTIVE, e);\n     }\n \n     while (UTIL2.getAdmin().getReplicationPeerSyncReplicationState(PEER_ID)\n",
        "projectName": "apache.hbase",
        "bugLineNum": 93,
        "bugNodeStartChar": 3782,
        "bugNodeLength": 90,
        "fixLineNum": 93,
        "fixNodeStartChar": 3782,
        "fixNodeLength": 93,
        "sourceBeforeFix": "LOG.error(\"Failed to transit standby cluster to \" + SyncReplicationState.DOWNGRADE_ACTIVE)",
        "sourceAfterFix": "LOG.error(\"Failed to transit standby cluster to \" + SyncReplicationState.DOWNGRADE_ACTIVE,e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f4f99fef8e0f4e67e4c216c7d911030d78ee2e8c",
        "fixCommitParentSHA1": "781e347a6f8059d4e76dd98ce752ba74badde28f",
        "bugFilePath": "domain-http/interface/src/main/java/org/jboss/as/domain/http/server/DomainApiHandler.java",
        "fixPatch": "diff --git a/domain-http/interface/src/main/java/org/jboss/as/domain/http/server/DomainApiHandler.java b/domain-http/interface/src/main/java/org/jboss/as/domain/http/server/DomainApiHandler.java\nindex b7b7285..ddb361e 100644\n--- a/domain-http/interface/src/main/java/org/jboss/as/domain/http/server/DomainApiHandler.java\n+++ b/domain-http/interface/src/main/java/org/jboss/as/domain/http/server/DomainApiHandler.java\n@@ -281,7 +281,7 @@\n \n         try {\n             dmr = isGet ? convertGetRequest(request) : convertPostRequest(http.getRequestBody(), encode);\n-        } catch (IllegalArgumentException iae) {\n+        } catch (Exception iae) {\n             ROOT_LOGGER.debugf(\"Unable to construct ModelNode '%s'\", iae.getMessage());\n             sendError(http,isGet,iae);\n             return;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 284,
        "bugNodeStartChar": 11639,
        "bugNodeLength": 28,
        "fixLineNum": 284,
        "fixNodeStartChar": 11639,
        "fixNodeLength": 13,
        "sourceBeforeFix": "IllegalArgumentException iae",
        "sourceAfterFix": "Exception iae"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6573aea4805b3a7838e33e082c76589d1a274a92",
        "fixCommitParentSHA1": "52cbb5f8ffd721cf5ac327ac47f10b953d020547",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex 27f9687..c7b91ae 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -115,7 +115,7 @@\n                 return searches.fieldStats(field, query, filter, timeRange, true, true);\n             } catch (Searches.FieldTypeException e1) {\n                 LOG.error(\"Retrieving field statistics for field {} failed while calculating the cardinality. Cause: {}\", field, ExceptionUtils.getRootCauseMessage(e1));\n-                throw new BadRequestException();\n+                throw new BadRequestException(\"Field \" + field + \" is not of a numeric type and the cardinality could not be calculated either.\", e1);\n             }\n         }\n     }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 118,
        "bugNodeStartChar": 5176,
        "bugNodeLength": 25,
        "fixLineNum": 118,
        "fixNodeStartChar": 5176,
        "fixNodeLength": 127,
        "sourceBeforeFix": "new BadRequestException()",
        "sourceAfterFix": "new BadRequestException(\"Field \" + field + \" is not of a numeric type and the cardinality could not be calculated either.\",e1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5ab2a833f50c61a5322778a38dbfdd33c9b478d0",
        "fixCommitParentSHA1": "5651724ab05485bb973976f9188555eeba72d6f6",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\nindex 59b2f61..0bbc29f 100644\n--- a/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/conf/ConfigurationTest.java\n@@ -1,5 +1,6 @@\n /*\n- * Copyright 2007 Yusuke Yamamoto\n+ * Copyright (C) 2007 Yusuke Yamamoto\n+ * Copyright (C) 2011 Twitter, Inc.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -322,7 +323,7 @@\n \n         Configuration t = (Configuration) serializeDeserialize(conf);\n \n-        assertSame(conf, (Configuration) serializeDeserialize(conf));\n+        assertEquals(conf, (Configuration) serializeDeserialize(conf));\n \n         assertTrue(0 == conf.getRestBaseURL().indexOf(\"http://\"));\n         assertTrue(0 == conf.getSearchBaseURL().indexOf(\"http://\"));\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 325,
        "bugNodeStartChar": 13186,
        "bugNodeLength": 60,
        "fixLineNum": 325,
        "fixNodeStartChar": 13186,
        "fixNodeLength": 62,
        "sourceBeforeFix": "assertSame(conf,(Configuration)serializeDeserialize(conf))",
        "sourceAfterFix": "assertEquals(conf,(Configuration)serializeDeserialize(conf))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c80e76bd7ccfe864566bdbffd6dcb6549709ea73",
        "fixCommitParentSHA1": "1c5a929c7ad6e40939e1170cdaf19c6ffd64f583",
        "bugFilePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java",
        "fixPatch": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\nindex 83ca4a6..f35434f 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\n@@ -711,7 +711,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(Arrays.asList(data), typeInfo);\n \t}\n@@ -744,7 +744,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + type.getName()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(Arrays.asList(data), typeInfo);\n \t}\n@@ -785,7 +785,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + first.getClass()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(data, typeInfo);\n \t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 712,
        "bugNodeStartChar": 28359,
        "bugNodeLength": 235,
        "fixLineNum": 712,
        "fixNodeStartChar": 28359,
        "fixNodeLength": 238,
        "sourceBeforeFix": "new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName() + \"; please specify the TypeInformation manually via \"+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\")",
        "sourceAfterFix": "new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName() + \"; please specify the TypeInformation manually via \"+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\",e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f33244ce792d0d1e420f55b222d56db0551d0bfb",
        "fixCommitParentSHA1": "71641ed82adc2f3a116a6a0ae8117c412e675388",
        "bugFilePath": "components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java",
        "fixPatch": "diff --git a/components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java b/components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java\nindex 6a910be..feae40c 100644\n--- a/components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java\n+++ b/components/camel-http/src/main/java/org/apache/camel/component/http/DefaultHttpBinding.java\n@@ -123,7 +123,7 @@\n             }\n         }\n         \n-        if (request.getMethod().equals(\"POST\") && request.getContentType() != null && request.getContentType().equals(\"application/x-www-form-urlencoded\")) {\n+        if (request.getMethod().equals(\"POST\") && request.getContentType() != null && request.getContentType().startsWith(\"application/x-www-form-urlencoded\")) {\n             String charset = request.getCharacterEncoding();\n             if (charset == null) {\n                 charset = \"UTF-8\";\n",
        "projectName": "apache.camel",
        "bugLineNum": 126,
        "bugNodeStartChar": 5194,
        "bugNodeLength": 68,
        "fixLineNum": 126,
        "fixNodeStartChar": 5194,
        "fixNodeLength": 72,
        "sourceBeforeFix": "request.getContentType().equals(\"application/x-www-form-urlencoded\")",
        "sourceAfterFix": "request.getContentType().startsWith(\"application/x-www-form-urlencoded\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "ef8206551c0ec51f70ec25e7371333dc5c8d99b1",
        "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d",
        "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java",
        "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n",
        "projectName": "junit-team.junit",
        "bugLineNum": 126,
        "bugNodeStartChar": 3862,
        "bugNodeLength": 49,
        "fixLineNum": 126,
        "fixNodeStartChar": 3862,
        "fixNodeLength": 24,
        "sourceBeforeFix": "suiteMethod.invoke(null,(Object[])new Class[0])",
        "sourceAfterFix": "suiteMethod.invoke(null)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8a91b07d5ab85b6bf100a36c5e26e6297a7f3a2a",
        "fixCommitParentSHA1": "3422308f542222d4d4ce64231ba75ff39764bc8e",
        "bugFilePath": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java",
        "fixPatch": "diff --git a/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java b/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\nindex 00123f5..c18adb1 100644\n--- a/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\n+++ b/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\n@@ -148,7 +148,7 @@\n \t\t\t\treturn element;\n \t\t\t}\n \t\t} catch (IOException e) {\n-\t\t\tthrow new FlinkRuntimeException(\"Unexpected list element deserialization failure\");\n+\t\t\tthrow new FlinkRuntimeException(\"Unexpected list element deserialization failure\", e);\n \t\t}\n \t\treturn null;\n \t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 151,
        "bugNodeStartChar": 4966,
        "bugNodeLength": 76,
        "fixLineNum": 151,
        "fixNodeStartChar": 4966,
        "fixNodeLength": 79,
        "sourceBeforeFix": "new FlinkRuntimeException(\"Unexpected list element deserialization failure\")",
        "sourceAfterFix": "new FlinkRuntimeException(\"Unexpected list element deserialization failure\",e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b",
        "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862",
        "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java",
        "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\nindex 88f4d8f..0cdcc0f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java\n@@ -98,7 +98,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 101,
        "bugNodeStartChar": 3763,
        "bugNodeLength": 39,
        "fixLineNum": 101,
        "fixNodeStartChar": 3763,
        "fixNodeLength": 37,
        "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)",
        "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cf2a9d3aefba1c7d6d4ad399e762edf7a6f6e111",
        "fixCommitParentSHA1": "1eae36cf1d26c8cb8648a54a45cf4d9d4e3ba504",
        "bugFilePath": "src/main/java/com/zaxxer/hikari/pool/PoolElf.java",
        "fixPatch": "diff --git a/src/main/java/com/zaxxer/hikari/pool/PoolElf.java b/src/main/java/com/zaxxer/hikari/pool/PoolElf.java\nindex afb031e..cb5d25e 100644\n--- a/src/main/java/com/zaxxer/hikari/pool/PoolElf.java\n+++ b/src/main/java/com/zaxxer/hikari/pool/PoolElf.java\n@@ -202,7 +202,7 @@\n             return connection.isValid(timeoutSec);\n          }\n    \n-         networkTimeout = getAndSetNetworkTimeout(connection, validationTimeout);\n+         final int originalTimeout = getAndSetNetworkTimeout(connection, validationTimeout);\n    \n          try (Statement statement = connection.createStatement()) {\n             setQueryTimeout(statement, timeoutSec);\n@@ -215,7 +215,7 @@\n             connection.rollback();\n          }\n    \n-         setNetworkTimeout(connection, networkTimeout);\n+         setNetworkTimeout(connection, originalTimeout);\n    \n          return true;\n       }\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 218,
        "bugNodeStartChar": 7591,
        "bugNodeLength": 45,
        "fixLineNum": 218,
        "fixNodeStartChar": 7591,
        "fixNodeLength": 46,
        "sourceBeforeFix": "setNetworkTimeout(connection,networkTimeout)",
        "sourceAfterFix": "setNetworkTimeout(connection,originalTimeout)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "a6dc024ed1176e0a4c523b1a64e8e907e1394d7b",
        "fixCommitParentSHA1": "c15acce17f82e2b055c66c179ea82367a30dee1c",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/config/ZWaveConfiguration.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/config/ZWaveConfiguration.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/config/ZWaveConfiguration.java\nindex a9bd733..a1bffcb 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/config/ZWaveConfiguration.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/config/ZWaveConfiguration.java\n@@ -255,10 +255,11 @@\n \t\t\t\t\trecord = new OpenHABConfigurationRecord(\"nodes/\" + \"node\" + node.getNodeId() + \"/\", node.getNodeId() + \": \" + node.getName());\n \t\t\t\t}\n \t\t\t\t\n-\t\t\t\t// If we can't find the product, then try and find just the\n-\t\t\t\t// manufacturer\n+\t\t\t\t// If we can't find the product, then try and find just the manufacturer\n \t\t\t\tif (node.getManufacturer() == Integer.MAX_VALUE) {\n-\t\t\t\t} else if (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) == false) {\n+\t\t\t\t\t// The device isn't know, print nothing!\n+\t\t\t\t}\n+\t\t\t\telse if(database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) == false) {\n \t\t\t\t\tif (database.FindManufacturer(node.getManufacturer()) == false) {\n \t\t\t\t\t\trecord.value = \"Manufacturer:\" + node.getManufacturer() + \" [ID:\"\n \t\t\t\t\t\t\t\t+ Integer.toHexString(node.getDeviceId()) + \",Type:\"\n@@ -353,7 +354,7 @@\n \t\t\t\trecords.add(record);\n \n \t\t\t\tif(node.getManufacturer() != Integer.MAX_VALUE) {\n-\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) == true) {\n+\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) == true) {\n \t\t\t\t\t\t// Add links to configuration if the node supports the various command classes\n \t\t\t\t\t\tif(database.doesProductImplementCommandClass(ZWaveCommandClass.CommandClass.CONFIGURATION.getKey()) == true) {\n \t\t\t\t\t\t\trecord = new OpenHABConfigurationRecord(domain + \"parameters/\", \"Configuration Parameters\");\n@@ -402,7 +403,7 @@\n \t\t\t\t\t\trecords.add(record);\n \t\t\t\t\t}\n \n-\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) == true) {\n+\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) == true) {\n \t\t\t\t\t\trecord = new OpenHABConfigurationRecord(domain, \"Product\", \"Product\", true);\n \t\t\t\t\t\trecord.value = database.getProductName();\n \t\t\t\t\t\trecords.add(record);\n@@ -621,7 +622,7 @@\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} else if (arg.equals(\"associations/\")) {\n-\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) != false) {\n+\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) != false) {\n \t\t\t\t\tList<ZWaveDbAssociationGroup> groupList = database.getProductAssociationGroups();\n \n \t\t\t\t\tif (groupList != null) {\n@@ -652,7 +653,7 @@\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} else if (arg.startsWith(\"associations/association\")) {\n-\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) != false) {\n+\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) != false) {\n \n \t\t\t\t\tString groupString = arg.substring(24);\n \t\t\t\t\tint nextDelimiter = groupString.indexOf('/');\n@@ -1025,7 +1026,7 @@\n \t\t\t\t\tlogger.debug(\"NODE {}: Refresh associations\", nodeId);\n \n \t\t\t\t\tZWaveProductDatabase database = new ZWaveProductDatabase();\n-\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId()) == false) {\n+\t\t\t\t\tif (database.FindProduct(node.getManufacturer(), node.getDeviceType(), node.getDeviceId(), node.getApplicationVersion()) == false) {\n \t\t\t\t\t\tlogger.error(\"NODE {}: Error in doAction - no database found\", nodeId);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 655,
        "bugNodeStartChar": 25318,
        "bugNodeLength": 86,
        "fixLineNum": 655,
        "fixNodeStartChar": 25318,
        "fixNodeLength": 116,
        "sourceBeforeFix": "database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId())",
        "sourceAfterFix": "database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MultiMapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MultiMapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MultiMapTemplate.java\nindex 0697ae7..93d337c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MultiMapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MultiMapTemplate.java\n@@ -71,21 +71,21 @@\n     @EncodeMethod(id = 16)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 17)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 20)\n+    @EncodeMethod(id = 18)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 19)\n     void unlock(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 22)\n+    @EncodeMethod(id = 20)\n     void forceUnlock(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void removeEntry(String name, Data key, Data value, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void valueCount(String name, Data key, long threadId);\n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 80,
        "bugNodeStartChar": 2429,
        "bugNodeLength": 7,
        "fixLineNum": 80,
        "fixNodeStartChar": 2429,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=21",
        "sourceAfterFix": "id=19"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "40bc1faf5c4df7faea20f37ffce6a62fb90b8cd9",
        "fixCommitParentSHA1": "9ed17032be4b738a4e7d8ebae245ed694dd5ade0",
        "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java",
        "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\nindex 2af3394..9388f25 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/message/internal/MediaTypes.java\n@@ -316,7 +316,7 @@\n      *         {@link #QUALITY_SOURCE_MEDIA_TYPE_COMPARATOR}.\n      */\n     public static List<MediaType> createQualitySourceMediaTypes(Produces mime) {\n-        if (mime == null) {\n+        if (mime == null || mime.value().length == 0) {\n             return GENERAL_QUALITY_SOURCE_MEDIA_TYPE_LIST;\n         }\n \n",
        "projectName": "jersey.jersey",
        "bugLineNum": 319,
        "bugNodeStartChar": 11595,
        "bugNodeLength": 12,
        "fixLineNum": 319,
        "fixNodeStartChar": 11595,
        "fixNodeLength": 40,
        "sourceBeforeFix": "mime == null",
        "sourceAfterFix": "mime == null || mime.value().length == 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ab45cc12ff4e9b8e62aa1b3776367df3b1020b93",
        "fixCommitParentSHA1": "475ec779711c85367f943b13b4a539acc650cea0",
        "bugFilePath": "RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java",
        "fixPatch": "diff --git a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\nindex 2eecd4c..0e9b2e5 100644\n--- a/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n+++ b/RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java\n@@ -301,7 +301,7 @@\n         @Override\n         public Number getMaximumValue() {\n             if (maximum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return maximum;\n         }\n@@ -309,7 +309,7 @@\n         @Override\n         public Number getMinimumValue() {\n             if (minimum == null) {\n-                AbstractRanking.refreshMinMax(this, graph);\n+                DynamicAttributeRanking.refreshMinMax(this, graph);\n             }\n             return minimum;\n         }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 304,
        "bugNodeStartChar": 12589,
        "bugNodeLength": 42,
        "fixLineNum": 304,
        "fixNodeStartChar": 12589,
        "fixNodeLength": 50,
        "sourceBeforeFix": "AbstractRanking.refreshMinMax(this,graph)",
        "sourceAfterFix": "DynamicAttributeRanking.refreshMinMax(this,graph)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3761eecbff48b37391956c4c2d035c3b8456e39e",
        "fixCommitParentSHA1": "7e7c30561e0b457cb14b85beefdeb4a49ebb9ba9",
        "bugFilePath": "components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java",
        "fixPatch": "diff --git a/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java b/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\nindex 52b9c6f..f637f04 100644\n--- a/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\n+++ b/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\n@@ -30,7 +30,7 @@\n     \n     @Test\n     public void testTimerInvoked() throws Exception {\n-        mock.expectedMessageCount(1);\n+        mock.expectedMinimumMessageCount(1);\n \n         assertMockEndpointsSatisfied();\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 33,
        "bugNodeStartChar": 1396,
        "bugNodeLength": 28,
        "fixLineNum": 33,
        "fixNodeStartChar": 1396,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(1)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(1)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "8636f65b992322008bb987409af0dd97dec3b95f",
        "fixCommitParentSHA1": "3d807df14be640a8c4b07540f78b68572dd93178",
        "bugFilePath": "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java",
        "fixPatch": "diff --git a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\nindex 3568274..2bc9991 100644\n--- a/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n+++ b/containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java\n@@ -197,7 +197,7 @@\n             final List<String> tempLibNames = new LinkedList<>();\n             for (ModuleInfo moduleInfo : appInfo.getModuleInfos()) {\n                 final String jarName = moduleInfo.getName();\n-                if (jarName.endsWith(\".jar\")) {\n+                if (jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")) {\n                     final String moduleName = jarName.substring(0, jarName.length() - 4);\n                     tempLibNames.add(moduleName);\n                     final Object bundleDescriptor = moduleInfo.getMetaData(EjbBundleDescriptorImpl.class.getName());\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 200,
        "bugNodeStartChar": 8291,
        "bugNodeLength": 24,
        "fixLineNum": 200,
        "fixNodeStartChar": 8291,
        "fixNodeLength": 52,
        "sourceBeforeFix": "jarName.endsWith(\".jar\")",
        "sourceAfterFix": "jarName.endsWith(\".jar\") || jarName.endsWith(\".war\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f6a978eb151c88f6241aabf4c7bd93c76be70bac",
        "fixCommitParentSHA1": "84a54eefd47e37294bb68b5172196a8023decb6c",
        "bugFilePath": "graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java",
        "fixPatch": "diff --git a/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java b/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\nindex bdffce2..2ce82e9 100644\n--- a/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n+++ b/graylog2-inputs/src/main/java/org/graylog2/inputs/raw/tcp/RawTCPInput.java\n@@ -42,7 +42,7 @@\n  */\n public class RawTCPInput extends RawInputBase {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(RawUDPInput.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(RawTCPInput.class);\n \n     public static final String NAME = \"Raw/Plaintext TCP\";\n \n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 45,
        "bugNodeStartChar": 1692,
        "bugNodeLength": 17,
        "fixLineNum": 45,
        "fixNodeStartChar": 1692,
        "fixNodeLength": 17,
        "sourceBeforeFix": "RawUDPInput.class",
        "sourceAfterFix": "RawTCPInput.class"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "19dac46f389eff0af027d9d11176db6eec0cdbc3",
        "fixCommitParentSHA1": "ccbdf71b5a6c6fecac7c9bd60b013f14bfa820c0",
        "bugFilePath": "jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java",
        "fixPatch": "diff --git a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\nindex d0561c7..4d1e98b 100644\n--- a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n+++ b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n@@ -224,7 +224,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n@@ -252,7 +252,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 255,
        "bugNodeStartChar": 11735,
        "bugNodeLength": 18,
        "fixLineNum": 255,
        "fixNodeStartChar": 11735,
        "fixNodeLength": 30,
        "sourceBeforeFix": "findDelegate(name)",
        "sourceAfterFix": "findDelegateForNewObject(name)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "364ae9baf3824dc4e0e56b2b681f8302731e8cdd",
        "fixCommitParentSHA1": "6b386d4b81f63bc3afd05888529550572da04c06",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex 6c2aeb4..bad5ea2 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -3104,7 +3104,7 @@\n       try {\n         statsObj = getMS().getTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_table: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_table: \", statsObj != null, null);\n       }\n       return statsObj;\n     }\n@@ -3126,7 +3126,7 @@\n         statsObj = getMS().getPartitionColumnStatistics(dbName, tableName, convertedPartName,\n                                                             partVals, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_partition: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_partition: \", statsObj != null, null);\n       }\n       return statsObj;\n    }\n@@ -3165,7 +3165,7 @@\n         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n-        endFunction(\"write_column_statistics: \", ret != false);\n+        endFunction(\"write_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3211,7 +3211,7 @@\n         ret = getMS().updatePartitionColumnStatistics(colStats, partVals);\n         return ret;\n       } finally {\n-        endFunction(\"write_partition_column_statistics: \", ret != false);\n+        endFunction(\"write_partition_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3234,7 +3234,7 @@\n         ret = getMS().deletePartitionColumnStatistics(dbName, tableName,\n                                                       convertedPartName, partVals, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_partition: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_partition: \", ret != false, null);\n       }\n       return ret;\n     }\n@@ -3256,7 +3256,7 @@\n       try {\n         ret = getMS().deleteTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_table: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_table: \", ret != false, null);\n       }\n       return ret;\n    }\n",
        "projectName": "apache.hive",
        "bugLineNum": 3168,
        "bugNodeStartChar": 113450,
        "bugNodeLength": 54,
        "fixLineNum": 3168,
        "fixNodeStartChar": 113450,
        "fixNodeLength": 60,
        "sourceBeforeFix": "endFunction(\"write_column_statistics: \",ret != false)",
        "sourceAfterFix": "endFunction(\"write_column_statistics: \",ret != false,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7c7309b5fb6276e4098921915a8e0c39a5cd3450",
        "fixCommitParentSHA1": "6df8fb1b891601f1374e599a395d5ad632fcfbe7",
        "bugFilePath": "core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java",
        "fixPatch": "diff --git a/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java b/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\nindex 9ede102..f8ceea1 100644\n--- a/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\n+++ b/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\n@@ -35,8 +35,8 @@\n  * Tests {@link BlockStoreContext}.\n  */\n @RunWith(PowerMockRunner.class)\n-@PrepareForTest({BlockMasterClient.class, BlockMasterClientPool.class, BlockStoreContext.class,\n-    DefaultBlockWorkerClient.class, BlockWorkerClientPool.class})\n+@PrepareForTest({RetryHandlingBlockMasterClient.class, BlockMasterClientPool.class,\n+    BlockStoreContext.class, DefaultBlockWorkerClient.class, BlockWorkerClientPool.class})\n public final class BlockStoreContextTest {\n \n   /**\n@@ -110,11 +110,12 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"localhost\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     // Use mocks for the block worker client to prevent it from trying to invoke the session\n@@ -175,11 +176,12 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"localhost\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     Assert.assertTrue(BlockStoreContext.INSTANCE.hasLocalWorker());\n@@ -193,12 +195,13 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"foo\")));\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"bar\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     Assert.assertFalse(BlockStoreContext.INSTANCE.hasLocalWorker());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 182,
        "bugNodeStartChar": 7773,
        "bugNodeLength": 23,
        "fixLineNum": 182,
        "fixNodeStartChar": 7773,
        "fixNodeLength": 36,
        "sourceBeforeFix": "BlockMasterClient.class",
        "sourceAfterFix": "RetryHandlingBlockMasterClient.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c7c9e743ce8d08fecccea11372c976e63b2f2955",
        "fixCommitParentSHA1": "bc483724f42215c4ba53590540d83b57bfdf2099",
        "bugFilePath": "example/src/main/java/io/netty/example/telnet/TelnetServer.java",
        "fixPatch": "diff --git a/example/src/main/java/io/netty/example/telnet/TelnetServer.java b/example/src/main/java/io/netty/example/telnet/TelnetServer.java\nindex 6d31936..d69da7a 100644\n--- a/example/src/main/java/io/netty/example/telnet/TelnetServer.java\n+++ b/example/src/main/java/io/netty/example/telnet/TelnetServer.java\n@@ -38,7 +38,7 @@\n             ServerBootstrap b = new ServerBootstrap();\n             b.group(bossGroup, workerGroup)\n              .channel(NioServerSocketChannel.class)\n-             .childHandler(new TelnetServerPipelineFactory());\n+             .childHandler(new TelnetServerInitializer());\n \n             b.bind(port).sync().channel().closeFuture().sync();\n         } finally {\n",
        "projectName": "netty.netty",
        "bugLineNum": 41,
        "bugNodeStartChar": 1378,
        "bugNodeLength": 33,
        "fixLineNum": 41,
        "fixNodeStartChar": 1378,
        "fixNodeLength": 29,
        "sourceBeforeFix": "new TelnetServerPipelineFactory()",
        "sourceAfterFix": "new TelnetServerInitializer()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "860774b8e958fd4bdf90ec9f5d3e7994e1bd80f4",
        "fixCommitParentSHA1": "f5b5e658ea42c43530cc3fd5e132e2fe503ab8b4",
        "bugFilePath": "subscriber/ClientQueryCacheEndToEndConstructor.java",
        "fixPatch": "diff --git a/subscriber/ClientQueryCacheEndToEndConstructor.java b/subscriber/ClientQueryCacheEndToEndConstructor.java\nindex 4dd3a00..bbe7832 100644\n--- a/subscriber/ClientQueryCacheEndToEndConstructor.java\n+++ b/subscriber/ClientQueryCacheEndToEndConstructor.java\n@@ -51,7 +51,7 @@\n         ClientMessage response = (ClientMessage) invokerWrapper.invoke(request);\n \n         Collection<Map.Entry<Data, Data>> result\n-                = EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries;\n+                = EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response;\n \n         populateWithValues(queryCache, result);\n     }\n@@ -67,7 +67,7 @@\n         InvokerWrapper invokerWrapper = context.getInvokerWrapper();\n         ClientMessage response = (ClientMessage) invokerWrapper.invoke(request);\n \n-        Collection<Data> result = EnterpriseMapPublisherCreateCodec.decodeResponse(response).list;\n+        Collection<Data> result = EnterpriseMapPublisherCreateCodec.decodeResponse(response).response;\n \n         populateWithoutValues(queryCache, result);\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 54,
        "bugNodeStartChar": 2361,
        "bugNodeLength": 75,
        "fixLineNum": 54,
        "fixNodeStartChar": 2361,
        "fixNodeLength": 76,
        "sourceBeforeFix": "EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries",
        "sourceAfterFix": "EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 470,
        "bugNodeStartChar": 15439,
        "bugNodeLength": 44,
        "fixLineNum": 470,
        "fixNodeStartChar": 14970,
        "fixNodeLength": 46,
        "sourceBeforeFix": "GL20.glGetUniform(program,location,params)",
        "sourceAfterFix": "GL20.glGetUniformiv(program,location,params)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1c7978dbaffd87bc6dec9d0c902a69a5002c9791",
        "fixCommitParentSHA1": "311557f57188a8cc712f00f76eb26d0742fc37d2",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/Context.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/Context.java b/ql/src/java/org/apache/hadoop/hive/ql/Context.java\nindex febdb93..1103b2a 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/Context.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/Context.java\n@@ -206,14 +206,14 @@\n     if (explain) {\n       try {\n         if (localScratchDir != null)\n-          FileSystem.getLocal(conf).delete(localScratchDir);\n+          FileSystem.getLocal(conf).delete(localScratchDir, true);\n       } catch (Exception e) {\n         LOG.warn(\"Error Removing Scratch: \" + StringUtils.stringifyException(e));\n       }\n     } else {\n       for (Path p: allScratchDirs) {\n         try {\n-          p.getFileSystem(conf).delete(p);\n+          p.getFileSystem(conf).delete(p, true);\n         } catch (Exception e) {\n           LOG.warn(\"Error Removing Scratch: \" + StringUtils.stringifyException(e));\n         }\n",
        "projectName": "apache.hive",
        "bugLineNum": 216,
        "bugNodeStartChar": 6531,
        "bugNodeLength": 31,
        "fixLineNum": 216,
        "fixNodeStartChar": 6531,
        "fixNodeLength": 37,
        "sourceBeforeFix": "p.getFileSystem(conf).delete(p)",
        "sourceAfterFix": "p.getFileSystem(conf).delete(p,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
        "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
        "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
        "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 462,
        "bugNodeStartChar": 21886,
        "bugNodeLength": 48,
        "fixLineNum": 462,
        "fixNodeStartChar": 21886,
        "fixNodeLength": 52,
        "sourceBeforeFix": "JavaConversions.asIterable(logManager.allLogs())",
        "sourceAfterFix": "JavaConversions.asJavaIterable(logManager.allLogs())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4156ed69f5a554a2a0f6ae1fe0e411db1e7ab8d3",
        "fixCommitParentSHA1": "d91a8647933b641032a76c213f8823e2a1ba7aae",
        "bugFilePath": "jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java",
        "fixPatch": "diff --git a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\nindex d0561c7..4d1e98b 100644\n--- a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n+++ b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n@@ -224,7 +224,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n@@ -252,7 +252,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 227,
        "bugNodeStartChar": 10305,
        "bugNodeLength": 18,
        "fixLineNum": 227,
        "fixNodeStartChar": 10305,
        "fixNodeLength": 30,
        "sourceBeforeFix": "findDelegate(name)",
        "sourceAfterFix": "findDelegateForNewObject(name)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe",
        "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583",
        "bugFilePath": "src/jvm/clojure/lang/Numbers.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 1501,
        "bugNodeStartChar": 32863,
        "bugNodeLength": 9,
        "fixLineNum": 1501,
        "fixNodeStartChar": 32863,
        "fixNodeLength": 11,
        "sourceBeforeFix": "s.count()",
        "sourceAfterFix": "RT.count(s)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "103f204ada7363675fcd4a1e2e0a41030a15a9ae",
        "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51",
        "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java",
        "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n",
        "projectName": "junit-team.junit",
        "bugLineNum": 110,
        "bugNodeStartChar": 3424,
        "bugNodeLength": 58,
        "fixLineNum": 110,
        "fixNodeStartChar": 3424,
        "fixNodeLength": 58,
        "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),800d,250d)",
        "sourceAfterFix": "assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "bbdd2fa3a4265b88096ab6f85bcfb1df7fc037a3",
        "fixCommitParentSHA1": "d2fbc9d9255a0b83492db887d8c94261ed308c8c",
        "bugFilePath": "dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java",
        "fixPatch": "diff --git a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\nindex cd0d495..4f70119 100644\n--- a/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n+++ b/dropwizard-http2/src/main/java/io/dropwizard/http2/Http2ConnectorFactory.java\n@@ -100,7 +100,7 @@\n         final HttpConnectionFactory http1 = buildHttpConnectionFactory(httpConfig);\n         final HTTP2ServerConnectionFactory http2 = new HTTP2ServerConnectionFactory(httpConfig);\n         http2.setMaxConcurrentStreams(maxConcurrentStreams);\n-        http2.setInitialStreamSendWindow(initialStreamSendWindow);\n+        http2.setInitialStreamRecvWindow(initialStreamSendWindow);\n \n         final NegotiatingServerConnectionFactory alpn = new ALPNServerConnectionFactory(H2, H2_17);\n         alpn.setDefaultProtocol(HTTP_1_1); // Speak HTTP 1.1 over TLS if negotiation fails\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 103,
        "bugNodeStartChar": 3603,
        "bugNodeLength": 57,
        "fixLineNum": 103,
        "fixNodeStartChar": 3603,
        "fixNodeLength": 57,
        "sourceBeforeFix": "http2.setInitialStreamSendWindow(initialStreamSendWindow)",
        "sourceAfterFix": "http2.setInitialStreamRecvWindow(initialStreamSendWindow)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3bcbf2682b2012d404c83474fe7fe729fef14eea",
        "fixCommitParentSHA1": "bf0afc9f6ccf706acab1842f1982c6f4dc38f2b0",
        "bugFilePath": "lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java",
        "fixPatch": "diff --git a/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java b/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\nindex e12ad6b..a450885 100644\n--- a/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\n+++ b/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\n@@ -41,7 +41,7 @@\n     @Nullable\n     @Override\n     public View getChildAt(final int index) {\n-        return mListView.getChildAt(index);\n+        return mListView.getListChildAt(index);\n     }\n \n     @Override\n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 44,
        "bugNodeStartChar": 1340,
        "bugNodeLength": 27,
        "fixLineNum": 44,
        "fixNodeStartChar": 1340,
        "fixNodeLength": 31,
        "sourceBeforeFix": "mListView.getChildAt(index)",
        "sourceAfterFix": "mListView.getListChildAt(index)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 489,
        "bugNodeStartChar": 22728,
        "bugNodeLength": 181,
        "fixLineNum": 489,
        "fixNodeStartChar": 22728,
        "fixNodeLength": 181,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3e3515f2af47dc0c1f9c080a257edb56f5eb72a7",
        "fixCommitParentSHA1": "a49af9eeea26f6c409d845278eb9b38edf344914",
        "bugFilePath": "components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java",
        "fixPatch": "diff --git a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\nindex 4ed7ceb..85bb5f5 100644\n--- a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n+++ b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n@@ -113,7 +113,7 @@\n         if (node.getNodeType() == Node.ELEMENT_NODE) {\n             Document doc = node.getOwnerDocument();\n             if (((Element) node).getNamespaceURI().equals(BLUEPRINT_NS)) {\n-                doc.renameNode(node, SPRING_NS, node.getNodeName());\n+                doc.renameNode(node, SPRING_NS, node.getLocalName());\n             }\n         }\n         NodeList list = node.getChildNodes();\n@@ -133,19 +133,19 @@\n \n     public Metadata parse(Element element, ParserContext context) {\n         renameNamespaceRecursive(element);\n-        if (element.getNodeName().equals(CAMEL_CONTEXT)) {\n+        if (element.getLocalName().equals(CAMEL_CONTEXT)) {\n             return parseCamelContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(ROUTE_CONTEXT)) {\n+        if (element.getLocalName().equals(ROUTE_CONTEXT)) {\n             return parseRouteContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(KEY_STORE_PARAMETERS)) {\n+        if (element.getLocalName().equals(KEY_STORE_PARAMETERS)) {\n             return parseKeyStoreParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SECURE_RANDOM_PARAMETERS)) {\n+        if (element.getLocalName().equals(SECURE_RANDOM_PARAMETERS)) {\n             return parseSecureRandomParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SSL_CONTEXT_PARAMETERS)) {\n+        if (element.getLocalName().equals(SSL_CONTEXT_PARAMETERS)) {\n             return parseSSLContextParametersNode(element, context);\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 148,
        "bugNodeStartChar": 6769,
        "bugNodeLength": 21,
        "fixLineNum": 148,
        "fixNodeStartChar": 6769,
        "fixNodeLength": 22,
        "sourceBeforeFix": "element.getNodeName()",
        "sourceAfterFix": "element.getLocalName()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketRouteExampleTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketRouteExampleTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketRouteExampleTest.java\nindex 3606a27..d4b655c 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketRouteExampleTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketRouteExampleTest.java\n@@ -89,7 +89,7 @@\n                 WebsocketComponent websocketComponent = (WebsocketComponent) context.getComponent(\"websocket\");\n                 websocketComponent.setPort(port);\n                 websocketComponent.setMinThreads(1);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n \n                 // START SNIPPET: e1\n                 // expose a echo websocket client, that sends back an echo\n",
        "projectName": "apache.camel",
        "bugLineNum": 92,
        "bugNodeStartChar": 3396,
        "bugNodeLength": 36,
        "fixLineNum": 92,
        "fixNodeStartChar": 3396,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "595fada2ff221b76c33da09b327973ed6a17ad2d",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 111,
        "bugNodeStartChar": 3061,
        "bugNodeLength": 37,
        "fixLineNum": 111,
        "fixNodeStartChar": 3061,
        "fixNodeLength": 44,
        "sourceBeforeFix": "this.thrown.equals(\"File must exist\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must exist\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "cd70b8db19db4a22136c8411fd0b72252b2f975a",
        "fixCommitParentSHA1": "874b3af952c5b37d35387428d51c549feb55457a",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyResponse.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyResponse.java b/src/main/java/com/ning/http/client/providers/netty/NettyResponse.java\nindex 3c84f91..2ab9966 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyResponse.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyResponse.java\n@@ -80,7 +80,7 @@\n \n     public String getResponseBody(String charset) throws IOException {\n         String contentType = getContentType();\n-        if (contentType != null) {\n+        if (contentType != null && charset == null) {\n             charset = AsyncHttpProviderUtils.parseCharset(contentType);\n         }\n \n@@ -124,7 +124,7 @@\n \n     public String getResponseBodyExcerpt(int maxLength, String charset) throws IOException {\n         String contentType = getContentType();\n-        if (contentType != null) {\n+        if (contentType != null && charset == null) {\n             charset = AsyncHttpProviderUtils.parseCharset(contentType);\n         }\n \n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 127,
        "bugNodeStartChar": 4224,
        "bugNodeLength": 19,
        "fixLineNum": 127,
        "fixNodeStartChar": 4224,
        "fixNodeLength": 38,
        "sourceBeforeFix": "contentType != null",
        "sourceAfterFix": "contentType != null && charset == null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3b4ff661c53e36133d3d287908592029d97d66f1",
        "fixCommitParentSHA1": "617403bc5bbc066d789d2a89460c0b9a3c8b5541",
        "bugFilePath": "tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java",
        "fixPatch": "diff --git a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\nindex 4b1d167..27f93c2 100644\n--- a/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n+++ b/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/TimeoutTest.java\n@@ -71,7 +71,7 @@\n         @Path(\"timeout\")\n         public String getTimeout() {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(5000);\n             } catch (InterruptedException e) {\n                 e.printStackTrace();\n             }\n@@ -86,7 +86,7 @@\n \n     @Override\n     protected void configureClient(ClientConfig clientConfig) {\n-        clientConfig.property(ClientProperties.READ_TIMEOUT, 1000);\n+        clientConfig.property(ClientProperties.READ_TIMEOUT, 2000);\n     }\n \n     @Test\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 74,
        "bugNodeStartChar": 2894,
        "bugNodeLength": 18,
        "fixLineNum": 74,
        "fixNodeStartChar": 2894,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Thread.sleep(2000)",
        "sourceAfterFix": "Thread.sleep(5000)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "8c0d148cd20199c647b2550ae51068f531ba42a3",
        "fixCommitParentSHA1": "531652e681e57aafdcfd7929c603131eebf8890a",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveReduceExpressionsRule.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveReduceExpressionsRule.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveReduceExpressionsRule.java\nindex 8f15ec7..1d2c4cc 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveReduceExpressionsRule.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveReduceExpressionsRule.java\n@@ -582,7 +582,7 @@\n       }\n       node = super.visitCall(call);\n       if (node != call) {\n-        node = RexUtil.simplify(rexBuilder, node);\n+        node = HiveRexUtil.simplify(rexBuilder, node);\n       }\n       return node;\n     }\n",
        "projectName": "apache.hive",
        "bugLineNum": 585,
        "bugNodeStartChar": 22451,
        "bugNodeLength": 34,
        "fixLineNum": 585,
        "fixNodeStartChar": 22451,
        "fixNodeLength": 38,
        "sourceBeforeFix": "RexUtil.simplify(rexBuilder,node)",
        "sourceAfterFix": "HiveRexUtil.simplify(rexBuilder,node)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e1d89ddbf6028369fd3117ff648fc6f16a1786fe",
        "fixCommitParentSHA1": "b5bdecd350ec54128fb0ea18690fd880d817712c",
        "bugFilePath": "components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java",
        "fixPatch": "diff --git a/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java b/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\nindex f3d15d4..3ae9fc1 100644\n--- a/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\n+++ b/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\n@@ -242,7 +242,8 @@\n                     managedSpan.deactivate();\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n \n@@ -283,7 +284,8 @@\n                     LOG.trace(\"OpenTracing: start server span=\" + span);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n \n@@ -303,7 +305,8 @@\n                     LOG.warn(\"OpenTracing: could not find managed span for exchange=\" + exchange);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n     }\n@@ -327,7 +330,8 @@\n                     span.log(fields);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n             return message;\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 330,
        "bugNodeStartChar": 13958,
        "bugNodeLength": 59,
        "fixLineNum": 331,
        "fixNodeStartChar": 14003,
        "fixNodeLength": 58,
        "sourceBeforeFix": "LOG.error(\"OpenTracing: Failed to capture tracing data\",t)",
        "sourceAfterFix": "LOG.warn(\"OpenTracing: Failed to capture tracing data\",t)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2a9e6b4fb3f30995b96623b7ab10d55de79153df",
        "fixCommitParentSHA1": "8f1884f992069a6f353107ad34ca1266b0a75ff3",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotator.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotator.java b/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotator.java\nindex f8e0c1d..a0d4c51 100644\n--- a/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotator.java\n@@ -358,7 +358,10 @@\n         CoreAnnotations.TokensAnnotation.class,\n         CoreAnnotations.CharacterOffsetBeginAnnotation.class,\n         CoreAnnotations.CharacterOffsetEndAnnotation.class,\n-        CoreAnnotations.IsNewlineAnnotation.class\n+        CoreAnnotations.IsNewlineAnnotation.class,\n+        CoreAnnotations.TokenBeginAnnotation.class,\n+        CoreAnnotations.TokenEndAnnotation.class,\n+        CoreAnnotations.OriginalTextAnnotation.class\n     )));\n   }\n \n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 356,
        "bugNodeStartChar": 16420,
        "bugNodeLength": 286,
        "fixLineNum": 356,
        "fixNodeStartChar": 16420,
        "fixNodeLength": 442,
        "sourceBeforeFix": "Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)",
        "sourceAfterFix": "Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "a536b4a6a33b85f40af44fca53b33d8c0d8656a1",
        "fixCommitParentSHA1": "3b76f51ab2bbd4ae86dc7b333fc78bee52c1ec0b",
        "bugFilePath": "bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java b/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\nindex 5b3eeb8..909cfad 100644\n--- a/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\n+++ b/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\n@@ -224,7 +224,7 @@\n         // check if special \"soap value parser\" handler for extracting SOAP value is defined. If yes, use svp\n         if (itemMap.getSoapValueParser() == null) { // extract dataOutName1 as default, no handler used\n             NodeList nlDataOutNodes = response.getSOAPPart().getElementsByTagName(itemMap.getReadDataOutName());\n-            if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+            if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                 // extract value from soap response\n                 value = nlDataOutNodes.item(0).getTextContent();\n             } else {\n@@ -734,7 +734,7 @@\n                         }\n                     } else {\n                         NodeList nlDataOutNodes = sm.getSOAPPart().getElementsByTagName(mapping.getReadDataOutName()); // URL\n-                        if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+                        if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                             // extract URL from soap response\n                             String url = nlDataOutNodes.item(0).getTextContent();\n                             Document xmlTamInfo = getFboxXmlResponse(url);\n@@ -799,7 +799,7 @@\n                         }\n                     } else {\n                         NodeList nlDataOutNodes = sm.getSOAPPart().getElementsByTagName(mapping.getReadDataOutName()); // URL\n-                        if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+                        if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                             // extract URL from soap response\n                             String url = nlDataOutNodes.item(0).getTextContent();\n                             // only get missed calls of the last x days\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 227,
        "bugNodeStartChar": 9285,
        "bugNodeLength": 55,
        "fixLineNum": 227,
        "fixNodeStartChar": 9285,
        "fixNodeLength": 56,
        "sourceBeforeFix": "nlDataOutNodes != null & nlDataOutNodes.getLength() > 0",
        "sourceAfterFix": "nlDataOutNodes != null && nlDataOutNodes.getLength() > 0"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "736f2f1c69f538fffcab5e4b36ecc40de3b270b6",
        "fixCommitParentSHA1": "dd043f8226e04e46ccbff2b8c2396079d222e632",
        "bugFilePath": "couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java",
        "fixPatch": "diff --git a/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java b/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\nindex 7833466..73e44a0 100644\n--- a/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\n+++ b/couchbase2/src/main/java/com/yahoo/ycsb/db/couchbase2/Couchbase2Client.java\n@@ -856,7 +856,7 @@\n       for (Iterator<Map.Entry<String, JsonNode>> jsonFields = json.fields(); jsonFields.hasNext();) {\n         Map.Entry<String, JsonNode> jsonField = jsonFields.next();\n         String name = jsonField.getKey();\n-        if (checkFields && fields.contains(name)) {\n+        if (checkFields && !fields.contains(name)) {\n           continue;\n         }\n         JsonNode jsonValue = jsonField.getValue();\n",
        "projectName": "brianfrankcooper.YCSB",
        "bugLineNum": 859,
        "bugNodeStartChar": 33115,
        "bugNodeLength": 21,
        "fixLineNum": 859,
        "fixNodeStartChar": 33115,
        "fixNodeLength": 22,
        "sourceBeforeFix": "fields.contains(name)",
        "sourceAfterFix": "!fields.contains(name)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec",
        "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6",
        "bugFilePath": "gdx/src/com/badlogic/gdx/Application.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/Application.java b/gdx/src/com/badlogic/gdx/Application.java\nindex cf8ce5d..fb69334 100644\n--- a/gdx/src/com/badlogic/gdx/Application.java\n+++ b/gdx/src/com/badlogic/gdx/Application.java\n@@ -129,7 +129,7 @@\n \tpublic void log (String tag, String message);\r\n \r\n \t/** Logs a message to the console or logcat */\r\n-\tpublic void log (String tag, String message, Exception exception);\r\n+\tpublic void log (String tag, String message, Throwable exception);\r\n \r\n \t/** Logs an error message to the console or logcat */\r\n \tpublic void error (String tag, String message);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 132,
        "bugNodeStartChar": 6431,
        "bugNodeLength": 19,
        "fixLineNum": 132,
        "fixNodeStartChar": 6300,
        "fixNodeLength": 19,
        "sourceBeforeFix": "Exception exception",
        "sourceAfterFix": "Throwable exception"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8aeb808e008d2a96885b6ee67997a70b432624ee",
        "fixCommitParentSHA1": "44bbcbded751f695c926b0c51f995325c4022418",
        "bugFilePath": "src/java/org/apache/hadoop/hbase/regionserver/Store.java",
        "fixPatch": "diff --git a/src/java/org/apache/hadoop/hbase/regionserver/Store.java b/src/java/org/apache/hadoop/hbase/regionserver/Store.java\nindex 740d2e6..d918473 100644\n--- a/src/java/org/apache/hadoop/hbase/regionserver/Store.java\n+++ b/src/java/org/apache/hadoop/hbase/regionserver/Store.java\n@@ -882,7 +882,7 @@\n           if (timesSeen <= maxVersions && !(expired = isExpired(kv, ttl, now))) {\n             // If this value key is same as a deleted key, skip\n             if (lastDelete != null &&\n-                this.comparator.compare(kv, lastDelete) == 0) {\n+                this.comparatorIgnoringType.compare(kv, lastDelete) == 0) {\n               deleted = true;\n             } else if (kv.isDeleteType()) {\n               // If a deleted value, skip\n",
        "projectName": "apache.hbase",
        "bugLineNum": 885,
        "bugNodeStartChar": 32499,
        "bugNodeLength": 15,
        "fixLineNum": 885,
        "fixNodeStartChar": 32499,
        "fixNodeLength": 27,
        "sourceBeforeFix": "this.comparator",
        "sourceAfterFix": "this.comparatorIgnoringType"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4e6b29ac8fac0d15e6be7cf921e247e534898d16",
        "fixCommitParentSHA1": "67b236af3dc641b35bc8ac2118821b0de2e78347",
        "bugFilePath": "library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java",
        "fixPatch": "diff --git a/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java b/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\nindex ef9602d..9818921 100644\n--- a/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\n+++ b/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\n@@ -5,7 +5,7 @@\n final class OverscrollHelper {\n \n \tstatic void overScrollBy(PullToRefreshBase<?> view, int deltaY, int scrollY, boolean isTouchEvent) {\n-\t\tfinal Mode mode = view.getCurrentMode();\n+\t\tfinal Mode mode = view.getMode();\n \n \t\tif (mode != Mode.DISABLED && !isTouchEvent) {\n \t\t\tfinal int newY = (deltaY + scrollY);\n",
        "projectName": "chrisbanes.Android-PullToRefresh",
        "bugLineNum": 8,
        "bugNodeStartChar": 266,
        "bugNodeLength": 21,
        "fixLineNum": 8,
        "fixNodeStartChar": 266,
        "fixNodeLength": 14,
        "sourceBeforeFix": "view.getCurrentMode()",
        "sourceAfterFix": "view.getMode()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "626cf14a6e42fa0a2d144e8e16940e09bafd754a",
        "fixCommitParentSHA1": "a95d9c46e2f7bb9bec968f8392ac62ccda6c0283",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\nindex a20e324..3c65cc9 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\n@@ -85,7 +85,7 @@\n     return worker;\n   }\n \n-  @JsonProperty\n+  @JsonProperty(\"runningTasks\")\n   public Map<String, TaskStatus> getRunningTasks()\n   {\n     Map<String, TaskStatus> retVal = Maps.newHashMap();\n@@ -99,8 +99,8 @@\n     return retVal;\n   }\n \n-  @JsonProperty(\"currCapacity\")\n-  public int getCurrCapacity()\n+  @JsonProperty(\"currCapacityUsed\")\n+  public int getCurrCapacityUsed()\n   {\n     int currCapacity = 0;\n     for (TaskStatus taskStatus : getRunningTasks().values()) {\n@@ -132,12 +132,12 @@\n \n   public boolean isAtCapacity()\n   {\n-    return getCurrCapacity() >= worker.getCapacity();\n+    return getCurrCapacityUsed() >= worker.getCapacity();\n   }\n \n   public boolean canRunTask(Task task)\n   {\n-    return (worker.getCapacity() - getCurrCapacity() >= task.getTaskResource().getRequiredCapacity()\n+    return (worker.getCapacity() - getCurrCapacityUsed() >= task.getTaskResource().getRequiredCapacity()\n             && !getAvailabilityGroups().contains(task.getTaskResource().getAvailabilityGroup()));\n   }\n \n",
        "projectName": "druid-io.druid",
        "bugLineNum": 135,
        "bugNodeStartChar": 3981,
        "bugNodeLength": 17,
        "fixLineNum": 135,
        "fixNodeStartChar": 3981,
        "fixNodeLength": 21,
        "sourceBeforeFix": "getCurrCapacity()",
        "sourceAfterFix": "getCurrCapacityUsed()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b847c8f134aa71f74efe3098fff6d4c095d63c3c",
        "fixCommitParentSHA1": "75d63559aedf5ce0dd3794d6fb66d228fa7ec630",
        "bugFilePath": "spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java",
        "fixPatch": "diff --git a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\nindex f3af1b2..65bf03d 100644\n--- a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n+++ b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n@@ -113,7 +113,7 @@\n \t\t\t\t\t}, key);\n \t\t}\n \t\tcatch (EmptyResultDataAccessException e) {\n-\t\t\tif (LOG.isInfoEnabled()) {\n+\t\t\tif (LOG.isDebugEnabled()) {\n \t\t\t\tLOG.debug(\"Failed to find access token for authentication \" + authentication);\n \t\t\t}\n \t\t}\n",
        "projectName": "spring-projects.spring-security-oauth",
        "bugLineNum": 116,
        "bugNodeStartChar": 5647,
        "bugNodeLength": 19,
        "fixLineNum": 116,
        "fixNodeStartChar": 5647,
        "fixNodeLength": 20,
        "sourceBeforeFix": "LOG.isInfoEnabled()",
        "sourceAfterFix": "LOG.isDebugEnabled()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3e04036dbec732f74124bc13e3f8fe146b7d5712",
        "fixCommitParentSHA1": "77b6810f49b38b5189117f7c251d6713ccbfd230",
        "bugFilePath": "hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java",
        "fixPatch": "diff --git a/hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java b/hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java\nindex a019be7..b68e73e 100644\n--- a/hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java\n+++ b/hadoop-mapreduce-project/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java\n@@ -718,7 +718,7 @@\n     }\n \n     // general MapRed job properties\n-    jobConf_ = new JobConf(config_);\n+    jobConf_ = new JobConf(config_, StreamJob.class);\n     \n     // All streaming jobs get the task timeout value\n     // from the configuration settings.\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 721,
        "bugNodeStartChar": 28062,
        "bugNodeLength": 20,
        "fixLineNum": 721,
        "fixNodeStartChar": 28062,
        "fixNodeLength": 37,
        "sourceBeforeFix": "new JobConf(config_)",
        "sourceAfterFix": "new JobConf(config_,StreamJob.class)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa",
        "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999",
        "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java",
        "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex 9902d80..fe45926 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -291,7 +291,7 @@\n             } else if (\"directed\".equalsIgnoreCase(key)) {\n                 if (value instanceof Double) {\n                     EdgeDirection type = ((Double) value) == 1 ? EdgeDirection.DIRECTED : EdgeDirection.UNDIRECTED;\n-                    edge.setType(type);\n+                    edge.setDirection(type);\n                 } else {\n                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, \"importerGML_error_directedparse\", edge.toString()), Issue.Level.WARNING));\n                 }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 294,
        "bugNodeStartChar": 11459,
        "bugNodeLength": 18,
        "fixLineNum": 294,
        "fixNodeStartChar": 11459,
        "fixNodeLength": 23,
        "sourceBeforeFix": "edge.setType(type)",
        "sourceAfterFix": "edge.setDirection(type)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d89553e7a20e11a9d39bb560acc9e0aea68770e8",
        "fixCommitParentSHA1": "3bb247e6621e8adf8ecce242fc98e5191ad96b37",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheReadQuorumTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheReadQuorumTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheReadQuorumTest.java\nindex 0bfc801..35f21b7 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheReadQuorumTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheReadQuorumTest.java\n@@ -126,7 +126,7 @@\n \n     @AfterClass\n     public static void killAllHazelcastInstances() throws IOException {\n-        HazelcastInstanceFactory.terminateAll();\n+        factory.terminateAll();\n     }\n \n     @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 129,
        "bugNodeStartChar": 5678,
        "bugNodeLength": 39,
        "fixLineNum": 129,
        "fixNodeStartChar": 5678,
        "fixNodeLength": 22,
        "sourceBeforeFix": "HazelcastInstanceFactory.terminateAll()",
        "sourceAfterFix": "factory.terminateAll()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "98a8875db1735c4a60bf1989fd727217a739baf0",
        "fixCommitParentSHA1": "01433360bcf817e363f8f2481415d3e6bc5aa224",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java b/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\nindex a4b63ae..08f3b12 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\n@@ -47,7 +47,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-1/x/y/z\", \"Hello World\", Exchange.FILE_NAME, \"report.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result1\");\n-        mock.expectedBodiesReceived(\"Hello World\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -59,7 +59,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-2/x/y/z\", \"Hello World 2\", Exchange.FILE_NAME, \"report.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result2\");\n-        mock.expectedBodiesReceived(\"Hello World 2\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -75,7 +75,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-3/x/y/z\", \"Hello World 6\", Exchange.FILE_NAME, \"m.bak\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result3\");\n-        mock.expectedBodiesReceived(\"Hello World 2\", \"Hello World 4\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\", \"Hello World 4\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -88,7 +88,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-4/x/y/z\", \"Hello World 3\", Exchange.FILE_NAME, \"c.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result4\");\n-        mock.expectedBodiesReceived(\"Hello World 3\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 3\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n",
        "projectName": "apache.camel",
        "bugLineNum": 62,
        "bugNodeStartChar": 2362,
        "bugNodeLength": 44,
        "fixLineNum": 62,
        "fixNodeStartChar": 2362,
        "fixNodeLength": 54,
        "sourceBeforeFix": "mock.expectedBodiesReceived(\"Hello World 2\")",
        "sourceAfterFix": "mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 753,
        "bugNodeStartChar": 25516,
        "bugNodeLength": 49,
        "fixLineNum": 753,
        "fixNodeStartChar": 24764,
        "fixNodeLength": 51,
        "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,value)",
        "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,value)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "31753da961740937fe2f6d86432c2d57827bf975",
        "fixCommitParentSHA1": "0a5b28605ffbadb0178467b2d16c91684ddef6bd",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestNMClient.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestNMClient.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestNMClient.java\nindex 88dbf81..0d4a271 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestNMClient.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/api/impl/TestNMClient.java\n@@ -344,10 +344,11 @@\n         // getContainerStatus can be called after stopContainer\n         try {\n           // O is possible if CLEANUP_CONTAINER is executed too late\n-          // 137 is possible if the container is not terminated but killed\n+          // -105 is possible if the container is not terminated but killed\n           testGetContainerStatus(container, i, ContainerState.COMPLETE,\n               \"Container killed by the ApplicationMaster.\", Arrays.asList(\n-                  new Integer[] {ContainerExitStatus.KILLED_BY_APPMASTER}));\n+                  new Integer[] {ContainerExitStatus.KILLED_BY_APPMASTER,\n+                  ContainerExitStatus.SUCCESS}));\n         } catch (YarnException e) {\n           // The exception is possible because, after the container is stopped,\n           // it may be removed from NM's context.\n@@ -383,7 +384,10 @@\n           assertEquals(container.getId(), status.getContainerId());\n           assertTrue(\"\" + index + \": \" + status.getDiagnostics(),\n               status.getDiagnostics().contains(diagnostics));\n-          assertTrue(exitStatuses.contains(status.getExitStatus()));\n+          \n+          assertTrue(\"Exit Statuses are supposed to be in: \" + exitStatuses +\n+              \", but the actual exit status code is: \" + status.getExitStatus(),\n+              exitStatuses.contains(status.getExitStatus()));\n           break;\n         }\n         Thread.sleep(100);\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 386,
        "bugNodeStartChar": 14985,
        "bugNodeLength": 57,
        "fixLineNum": 387,
        "fixNodeStartChar": 14996,
        "fixNodeLength": 209,
        "sourceBeforeFix": "assertTrue(exitStatuses.contains(status.getExitStatus()))",
        "sourceAfterFix": "assertTrue(\"Exit Statuses are supposed to be in: \" + exitStatuses + \", but the actual exit status code is: \"+ status.getExitStatus(),exitStatuses.contains(status.getExitStatus()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bb4b8b95e12f23f6951fdfdd903120902f0553c9",
        "fixCommitParentSHA1": "9eb5b9c8a1da521a82ce291e82a4037de6faab2a",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/split/SplitManager.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\nindex 134bf01..988b213 100644\n--- a/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n+++ b/presto-main/src/main/java/com/facebook/presto/split/SplitManager.java\n@@ -96,7 +96,7 @@\n     public List<Partition> getPartitions(TableHandle table, Optional<Map<ColumnHandle, Object>> bindings)\n     {\n         checkNotNull(table, \"table is null\");\n-        return getConnectorSplitManager(table).getPartitions(table, bindings.get());\n+        return getConnectorSplitManager(table).getPartitions(table, bindings.or(ImmutableMap.<ColumnHandle, Object>of()));\n     }\n \n     private List<Partition> prunePartitions(Session session, List<Partition> partitions, Expression predicate, Map<ColumnHandle, Symbol> columnToSymbol)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 99,
        "bugNodeStartChar": 4225,
        "bugNodeLength": 14,
        "fixLineNum": 99,
        "fixNodeStartChar": 4225,
        "fixNodeLength": 52,
        "sourceBeforeFix": "bindings.get()",
        "sourceAfterFix": "bindings.or(ImmutableMap.<ColumnHandle,Object>of())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "4031a54f71a1df311b0b9ab24640297e0d526bfe",
        "fixCommitParentSHA1": "9c1eea2dc00e2feb14c13e9a00d6a392f680df17",
        "bugFilePath": "test/com/google/javascript/jscomp/VarCheckTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/VarCheckTest.java b/test/com/google/javascript/jscomp/VarCheckTest.java\nindex 79d60c3..f23a762 100644\n--- a/test/com/google/javascript/jscomp/VarCheckTest.java\n+++ b/test/com/google/javascript/jscomp/VarCheckTest.java\n@@ -107,12 +107,12 @@\n \n   public void testVarReferenceInExterns() {\n     testSame(\"asdf;\", \"var asdf;\",\n-        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR, true);\n+        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR);\n   }\n \n   public void testCallInExterns() {\n     testSame(\"yz();\", \"function yz() {}\",\n-        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR, true);\n+        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR);\n   }\n \n   public void testPropReferenceInExterns1() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 109,
        "bugNodeStartChar": 3091,
        "bugNodeLength": 86,
        "fixLineNum": 109,
        "fixNodeStartChar": 3091,
        "fixNodeLength": 80,
        "sourceBeforeFix": "testSame(\"asdf;\",\"var asdf;\",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,true)",
        "sourceAfterFix": "testSame(\"asdf;\",\"var asdf;\",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f667668148d05770b74f1d7a12e05ddfcec50921",
        "fixCommitParentSHA1": "c1d69bf9e004bb8a84112ace3c88d36479e24c5e",
        "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
        "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 64,
        "bugNodeStartChar": 2196,
        "bugNodeLength": 20,
        "fixLineNum": 64,
        "fixNodeStartChar": 2196,
        "fixNodeLength": 19,
        "sourceBeforeFix": "activeFrom.getTime()",
        "sourceAfterFix": "expiresOn.getTime()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "99c4661a447ef55201251c67d21acfdcb100b73e",
        "fixCommitParentSHA1": "f80e687824e694c49b847270b7a02805da7df062",
        "bugFilePath": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\nindex 4022df2..5ca1f57 100644\n--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java\n@@ -1178,7 +1178,7 @@\n           compiler.stage2Passes();\n       }\n       compiler.completeCompilation();\n-    } catch (Exception e) {\n+    } catch (IOException e) {\n       compiler.report(JSError.make(COULD_NOT_DESERIALIZE_AST, filename));\n     } finally {\n       // Make sure we generate a report of errors and warnings even if the compiler throws an\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1181,
        "bugNodeStartChar": 42043,
        "bugNodeLength": 11,
        "fixLineNum": 1181,
        "fixNodeStartChar": 42043,
        "fixNodeLength": 13,
        "sourceBeforeFix": "Exception e",
        "sourceAfterFix": "IOException e"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "eb9527a17038c6a44b4e1afa1fd82eb195baacb8",
        "fixCommitParentSHA1": "858199a2fa14f835369ede30deb3de7fdfcc98c9",
        "bugFilePath": "spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\nindex b70d337..faf21eb 100644\n--- a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\n+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\n@@ -85,7 +85,7 @@\n \t\tif (!this.autoTimer.isEnabled()) {\n \t\t\treturn chain.filter(exchange);\n \t\t}\n-\t\treturn chain.filter(exchange).compose((call) -> filter(exchange, call));\n+\t\treturn chain.filter(exchange).transformDeferred((call) -> filter(exchange, call));\n \t}\n \n \tprivate Publisher<Void> filter(ServerWebExchange exchange, Mono<Void> call) {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 88,
        "bugNodeStartChar": 3103,
        "bugNodeLength": 64,
        "fixLineNum": 88,
        "fixNodeStartChar": 3103,
        "fixNodeLength": 74,
        "sourceBeforeFix": "chain.filter(exchange).compose((call) -> filter(exchange,call))",
        "sourceAfterFix": "chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "2417f343536cdac38986221bd8dfab36ff0bf8bb",
        "fixCommitParentSHA1": "215cd50949e9baba47a93d5dabb7387ac16cd994",
        "bugFilePath": "nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java",
        "fixPatch": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\nindex aeba66d..fb7a6fb 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\n@@ -62,7 +62,7 @@\n \n \tprivate static final int DEFAULT_BUFFER_SIZE_IN_BYTES = 128 * 1024; // 128k\n \n-\tprivate static final boolean DEFAULT_ALLOW_SPILLING = false;\n+\tprivate static final boolean DEFAULT_ALLOW_SPILLING = true;\n \n \tprivate static final int DEFAULT_NUMBER_OF_OUTGOING_CONNECTION_THREADS = 1;\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 65,
        "bugNodeStartChar": 2860,
        "bugNodeLength": 30,
        "fixLineNum": 65,
        "fixNodeStartChar": 2860,
        "fixNodeLength": 29,
        "sourceBeforeFix": "DEFAULT_ALLOW_SPILLING=false",
        "sourceAfterFix": "DEFAULT_ALLOW_SPILLING=true"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8d08e816a79a7390dc6ba086d5709f1049b5807f",
        "fixCommitParentSHA1": "7942d9f78765d57097ce4cf36c49feced3525a2b",
        "bugFilePath": "spring-boot-samples/spring-boot-sample-data-redis/src/test/java/sample/data/redis/SampleRedisApplicationTests.java",
        "fixPatch": "diff --git a/spring-boot-samples/spring-boot-sample-data-redis/src/test/java/sample/data/redis/SampleRedisApplicationTests.java b/spring-boot-samples/spring-boot-sample-data-redis/src/test/java/sample/data/redis/SampleRedisApplicationTests.java\nindex 63a14e3..3152bdc 100644\n--- a/spring-boot-samples/spring-boot-sample-data-redis/src/test/java/sample/data/redis/SampleRedisApplicationTests.java\n+++ b/spring-boot-samples/spring-boot-sample-data-redis/src/test/java/sample/data/redis/SampleRedisApplicationTests.java\n@@ -39,7 +39,7 @@\n \t\ttry {\n \t\t\tSampleRedisApplication.main(new String[0]);\n \t\t}\n-\t\tcatch (IllegalStateException ex) {\n+\t\tcatch (Exception ex) {\n \t\t\tif (!redisServerRunning(ex)) {\n \t\t\t\treturn;\n \t\t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 42,
        "bugNodeStartChar": 1197,
        "bugNodeLength": 24,
        "fixLineNum": 42,
        "fixNodeStartChar": 1197,
        "fixNodeLength": 12,
        "sourceBeforeFix": "IllegalStateException ex",
        "sourceAfterFix": "Exception ex"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1d577b1b8bd3f51bcf8d9d89bb4598a28020af07",
        "fixCommitParentSHA1": "d23c3b3382ff6b2dc7625cb0a0cd31d767efafc5",
        "bugFilePath": "example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java",
        "fixPatch": "diff --git a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\nindex 5421956..0e599fb 100644\n--- a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n+++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n@@ -47,10 +47,10 @@\n                 new GenericFutureListener<Future<Channel>>() {\n             @Override\n             public void operationComplete(Future<Channel> future) throws Exception {\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Welcome to \" + InetAddress.getLocalHost().getHostName() +\n                         \" secure chat service!\\n\");\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Your session is protected by \" +\n                         ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() +\n                         \" cipher suite.\\n\");\n@@ -65,10 +65,10 @@\n         // Send the received message to all channels but the current one.\n         for (Channel c: channels) {\n             if (c != ctx.channel()) {\n-                c.write(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n+                c.writeAndFlush(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n                         msg + '\\n');\n             } else {\n-                c.write(\"[you] \" + msg + '\\n');\n+                c.writeAndFlush(\"[you] \" + msg + '\\n');\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 71,
        "bugNodeStartChar": 2894,
        "bugNodeLength": 30,
        "fixLineNum": 71,
        "fixNodeStartChar": 2894,
        "fixNodeLength": 38,
        "sourceBeforeFix": "c.write(\"[you] \" + msg + '\\n')",
        "sourceAfterFix": "c.writeAndFlush(\"[you] \" + msg + '\\n')"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ef11886bf2190370a0f3fd287616763826239c48",
        "fixCommitParentSHA1": "ddb113a660630b9be8aaf72a2154a39547ab7dd4",
        "bugFilePath": "src/web/org/openmrs/web/dwr/DWRRelationshipService.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/dwr/DWRRelationshipService.java b/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\nindex 223eb26..c9530fb 100644\n--- a/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\n+++ b/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\n@@ -37,7 +37,7 @@\n \t\trel.setPersonA(personA);\r\n \t\trel.setPersonB(personB);\r\n \t\trel.setRelationshipType(relType);\r\n-\t\tps.createRelationship(rel);\r\n+\t\tps.saveRelationship(rel);\r\n \t}\r\n \t\r\n \tpublic void voidRelationship(Integer relationshipId, String voidReason) {\r\n@@ -50,7 +50,7 @@\n \t\t\r\n \t\tVector<RelationshipListItem> ret = new Vector<RelationshipListItem>();\r\n \t\tList<Relationship> rels = Context.getPersonService()\r\n-\t\t        .getRelationships(Context.getPersonService().getPerson(personId));\r\n+\t\t        .getRelationshipsByPerson(Context.getPersonService().getPerson(personId));\r\n \t\tfor (Relationship rel : rels) {\r\n \t\t\tif (!rel.isVoided()\r\n \t\t\t        && (relationshipTypeId == null || rel.getRelationshipType().getRelationshipTypeId().equals(\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 40,
        "bugNodeStartChar": 1492,
        "bugNodeLength": 26,
        "fixLineNum": 40,
        "fixNodeStartChar": 1453,
        "fixNodeLength": 24,
        "sourceBeforeFix": "ps.createRelationship(rel)",
        "sourceAfterFix": "ps.saveRelationship(rel)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "84340b3f05d39437b725f2f5510f44e862f98b19",
        "fixCommitParentSHA1": "2b6bf5f8ca0c509b565a36c98e3e63219b77b7f0",
        "bugFilePath": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/SalesforceSecurityListener.java",
        "fixPatch": "diff --git a/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/SalesforceSecurityListener.java b/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/SalesforceSecurityListener.java\nindex 552401c..27d838a 100644\n--- a/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/SalesforceSecurityListener.java\n+++ b/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/SalesforceSecurityListener.java\n@@ -103,7 +103,7 @@\n                     client.setInstanceUrl(session.getInstanceUrl());\n                     client.setAccessToken(exchange);\n                 } else {\n-                    exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,\n+                    exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,\n                             \"OAuth \" + currentToken);\n                 }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 106,
        "bugNodeStartChar": 4153,
        "bugNodeLength": 105,
        "fixLineNum": 106,
        "fixNodeStartChar": 4153,
        "fixNodeLength": 105,
        "sourceBeforeFix": "exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,\"OAuth \" + currentToken)",
        "sourceAfterFix": "exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,\"OAuth \" + currentToken)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a",
        "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2",
        "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java",
        "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 171,
        "bugNodeStartChar": 9082,
        "bugNodeLength": 144,
        "fixLineNum": 171,
        "fixNodeStartChar": 9082,
        "fixNodeLength": 144,
        "sourceBeforeFix": "addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)",
        "sourceAfterFix": "addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "24611c974516590fd401228f86cf11be71f71fd6",
        "fixCommitParentSHA1": "1ad19a8e3009891afa2f1e34cd6c6632ea741f64",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\nindex 9bc728d..681af18 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n@@ -499,7 +499,7 @@\n                         CHECK_TEXT.get(\"Description\")\n                                 + CHECK_TEXT.computeIfAbsent(\"Rule Description\", unused -> \"\")\n                                 + CHECK_TEXT.computeIfAbsent(\"Notes\", unused -> \"\")\n-                                + CHECK_TEXT.get(\"Properties\")\n+                                + CHECK_TEXT.computeIfAbsent(\"Properties\", unused -> \"\")\n                                 + CHECK_TEXT.get(\"Examples\") + \" @since \"\n                                 + CHECK_TEXT.get(\"since\"), getJavaDocText(ast));\n             }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 502,
        "bugNodeStartChar": 17306,
        "bugNodeLength": 28,
        "fixLineNum": 502,
        "fixNodeStartChar": 17306,
        "fixNodeLength": 54,
        "sourceBeforeFix": "CHECK_TEXT.get(\"Properties\")",
        "sourceAfterFix": "CHECK_TEXT.computeIfAbsent(\"Properties\",unused -> \"\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1baf9b7f47f1f1592391a9eb18b3ad0b340f7355",
        "fixCommitParentSHA1": "d85c470747c22fa47a1f914388861b018ce9acc8",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java b/storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java\nindex 6bad8e3..e6e8b3d 100644\n--- a/storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java\n+++ b/storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java\n@@ -37,7 +37,7 @@\n         // Encoder\n         pipeline.addLast(\"encoder\", new MessageEncoder());\n         // business logic.\n-        pipeline.addLast(\"handler\", new StormClientHandler(client));\n+        pipeline.addLast(\"handler\", new StormClientErrorHandler(client.name()));\n \n         return pipeline;\n     }\n",
        "projectName": "apache.storm",
        "bugLineNum": 40,
        "bugNodeStartChar": 1568,
        "bugNodeLength": 30,
        "fixLineNum": 40,
        "fixNodeStartChar": 1568,
        "fixNodeLength": 42,
        "sourceBeforeFix": "new StormClientHandler(client)",
        "sourceAfterFix": "new StormClientErrorHandler(client.name())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a5fe4f5d8fcb74a5ec054f61153f714c2983b689",
        "fixCommitParentSHA1": "7b377a155f166f99cfa8e8d4d6aedf40eba8899b",
        "bugFilePath": "components/camel-elsql/src/main/java/org/apache/camel/component/elsql/ElsqlProducer.java",
        "fixPatch": "diff --git a/components/camel-elsql/src/main/java/org/apache/camel/component/elsql/ElsqlProducer.java b/components/camel-elsql/src/main/java/org/apache/camel/component/elsql/ElsqlProducer.java\nindex 4575844..58feb1d 100644\n--- a/components/camel-elsql/src/main/java/org/apache/camel/component/elsql/ElsqlProducer.java\n+++ b/components/camel-elsql/src/main/java/org/apache/camel/component/elsql/ElsqlProducer.java\n@@ -169,7 +169,7 @@\n                         } else {\n                              // if we are here, there isResultSet is false. This can happen only if we are doing an update operation or there is no result.\n                              // we can simply add the updateCount in this case.\n-                            exchange.getOut().setHeader(SqlConstants.SQL_UPDATE_COUNT, ps.getUpdateCount());\n+                            exchange.getIn().setHeader(SqlConstants.SQL_UPDATE_COUNT, ps.getUpdateCount());\n                         }\n                     }\n                     } finally {\n",
        "projectName": "apache.camel",
        "bugLineNum": 172,
        "bugNodeStartChar": 9562,
        "bugNodeLength": 17,
        "fixLineNum": 172,
        "fixNodeStartChar": 9562,
        "fixNodeLength": 16,
        "sourceBeforeFix": "exchange.getOut()",
        "sourceAfterFix": "exchange.getIn()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dfbf83ff6356fae4948cc44a1d0908defaeca45f",
        "fixCommitParentSHA1": "a9743eb6850809784930c1199741aa83ae54e99a",
        "bugFilePath": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase.java",
        "fixPatch": "diff --git a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase.java b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase.java\nindex 3088b15..7cd1ae1 100644\n--- a/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase.java\n+++ b/flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase.java\n@@ -534,7 +534,7 @@\n \n \t\t\t@Override\n \t\t\tpublic void onException(Throwable cause) {\n-\t\t\t\tLOG.error(\"Async Kafka commit failed.\", cause);\n+\t\t\t\tLOG.warn(\"Async Kafka commit failed.\", cause);\n \t\t\t\tfailedCommits.inc();\n \t\t\t}\n \t\t};\n",
        "projectName": "apache.flink",
        "bugLineNum": 537,
        "bugNodeStartChar": 25436,
        "bugNodeLength": 46,
        "fixLineNum": 537,
        "fixNodeStartChar": 25436,
        "fixNodeLength": 45,
        "sourceBeforeFix": "LOG.error(\"Async Kafka commit failed.\",cause)",
        "sourceAfterFix": "LOG.warn(\"Async Kafka commit failed.\",cause)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "48e0acb98213234b32dd4c21eb5a7d4d94e25ca2",
        "fixCommitParentSHA1": "4c0c9711e13db8ad72f86093461fee7a12451ee6",
        "bugFilePath": "hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java",
        "fixPatch": "diff --git a/hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java b/hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java\nindex 7a92155..7129393 100644\n--- a/hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java\n+++ b/hikaricp-java6/src/main/java/com/zaxxer/hikari/util/PoolUtilities.java\n@@ -326,7 +326,7 @@\n    {\n       if (connectionTimeout != Integer.MAX_VALUE) {\n          try {\n-            dataSource.setLoginTimeout((int) TimeUnit.MILLISECONDS.toSeconds(Math.min(1000L, connectionTimeout)));\n+            dataSource.setLoginTimeout((int) TimeUnit.MILLISECONDS.toSeconds(Math.max(1000L, connectionTimeout)));\n          }\n          catch (SQLException e) {\n             logger.warn(\"Unable to set DataSource login timeout\", e);\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 329,
        "bugNodeStartChar": 10653,
        "bugNodeLength": 34,
        "fixLineNum": 329,
        "fixNodeStartChar": 10653,
        "fixNodeLength": 34,
        "sourceBeforeFix": "Math.min(1000L,connectionTimeout)",
        "sourceAfterFix": "Math.max(1000L,connectionTimeout)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "354389932a2848f5b2d04a511db5b4e5219026d9",
        "fixCommitParentSHA1": "2f17c3882230fd39bdb8d7678b4e2f9c52e1deb3",
        "bugFilePath": "spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java",
        "fixPatch": "diff --git a/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\nindex 86b29f7..fe74fb6 100644\n--- a/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n+++ b/spring-boot-integration-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n@@ -48,7 +48,8 @@\n \n \tprivate static final Set<String> TOMCAT_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-tomcat-\", \"tomcat-embed-core-\",\n-\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-logging-juli-\"));\n+\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-logging-juli-\",\n+\t\t\t\t\t\"tomcat-embed-websocket-\"));\n \n \tprivate static final Set<String> JETTY_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-jetty-\", \"jetty-util-\", \"jetty-xml-\",\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 50,
        "bugNodeStartChar": 1631,
        "bugNodeLength": 121,
        "fixLineNum": 50,
        "fixNodeStartChar": 1631,
        "fixNodeLength": 153,
        "sourceBeforeFix": "Arrays.asList(\"spring-boot-starter-tomcat-\",\"tomcat-embed-core-\",\"tomcat-embed-el-\",\"tomcat-embed-logging-juli-\")",
        "sourceAfterFix": "Arrays.asList(\"spring-boot-starter-tomcat-\",\"tomcat-embed-core-\",\"tomcat-embed-el-\",\"tomcat-embed-logging-juli-\",\"tomcat-embed-websocket-\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6618cef776cf1c9ce67ff8ee461412110ca5ada7",
        "fixCommitParentSHA1": "948ab73523bed79d1672884207fd3a06f33d9572",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\nindex b9250d6..f157006 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n@@ -139,7 +139,7 @@\n \t\t\t\tqueryServiceAddressesFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<String> queryServiceAddresses, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting paths for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting paths for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tfor (String queryServiceAddress : queryServiceAddresses) {\n \t\t\t\t\t\t\t\tretrieveAndQueryMetrics(queryServiceAddress);\n@@ -157,7 +157,7 @@\n \t\t\t\ttaskManagerQueryServiceGatewaysFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<Tuple2<ResourceID, String>> queryServiceGateways, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting TaskManager's path for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting TaskManager's path for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tList<String> taskManagersToRetain = queryServiceGateways\n \t\t\t\t\t\t\t\t.stream()\n@@ -175,7 +175,7 @@\n \t\t\t\t\texecutor);\n \t\t\t}\n \t\t} catch (Exception e) {\n-\t\t\tLOG.warn(\"Exception while fetching metrics.\", e);\n+\t\t\tLOG.debug(\"Exception while fetching metrics.\", e);\n \t\t}\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 178,
        "bugNodeStartChar": 6868,
        "bugNodeLength": 48,
        "fixLineNum": 178,
        "fixNodeStartChar": 6868,
        "fixNodeLength": 49,
        "sourceBeforeFix": "LOG.warn(\"Exception while fetching metrics.\",e)",
        "sourceAfterFix": "LOG.debug(\"Exception while fetching metrics.\",e)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "4be7f3630491ebbb716abb50233b7b453c39eb53",
        "fixCommitParentSHA1": "b7df19acc0d036c045da3ee00f5fae8ff6b7db29",
        "bugFilePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\nindex 3ed3a24..382ed68 100644\n--- a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n+++ b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n@@ -61,15 +61,15 @@\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName) throws Exception {\n-        return createMessageConsumer(session, destinationName, null, false, null, true);\n+        return createMessageConsumer(session, destinationName, null, false, null);\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, false, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, false, null);\n     }\n \n     public static MessageConsumer createTopicConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, true, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, true, null);\n     }\n     \n     public static MessageConsumer createTemporaryMessageConsumer(\n@@ -88,7 +88,8 @@\n             String messageSelector, \n             boolean topic, \n             String durableSubscriptionId) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, true);\n+        // noLocal is default false accordingly to JMS spec\n+        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, false);\n     }\n     \n     public static MessageConsumer createMessageConsumer(\n",
        "projectName": "apache.camel",
        "bugLineNum": 91,
        "bugNodeStartChar": 3559,
        "bugNodeLength": 100,
        "fixLineNum": 92,
        "fixNodeStartChar": 3619,
        "fixNodeLength": 101,
        "sourceBeforeFix": "createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,true)",
        "sourceAfterFix": "createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "43acc37587977b18a3eb27c6aff716e904e320e6",
        "fixCommitParentSHA1": "55406d91d20e43ba3e01d4b882ef036b16eb798b",
        "bugFilePath": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\nindex ac64130..4f65bb3 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\n@@ -317,11 +317,11 @@\n \n \t\tpublic RequestMatcher antPath(RequestMatcherProvider matcherProvider,\n \t\t\t\tString... parts) {\n-\t\t\tString pattern = this.prefix;\n+\t\t\tStringBuffer pattern = new StringBuffer(this.prefix);\n \t\t\tfor (String part : parts) {\n-\t\t\t\tpattern += part;\n+\t\t\t\tpattern.append(part);\n \t\t\t}\n-\t\t\treturn matcherProvider.getRequestMatcher(pattern);\n+\t\t\treturn matcherProvider.getRequestMatcher(pattern.toString());\n \t\t}\n \n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 320,
        "bugNodeStartChar": 11061,
        "bugNodeLength": 29,
        "fixLineNum": 320,
        "fixNodeStartChar": 11061,
        "fixNodeLength": 53,
        "sourceBeforeFix": "String pattern=this.prefix; ",
        "sourceAfterFix": "StringBuffer pattern=new StringBuffer(this.prefix); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d86487fa294b1efa9f2b08c5569b9fca5efa1445",
        "fixCommitParentSHA1": "2162846b059a0aa4729eb6ba9cf6f6a8e73fa9be",
        "bugFilePath": "guava-tests/test/com/google/common/collect/MapsTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/collect/MapsTest.java b/guava-tests/test/com/google/common/collect/MapsTest.java\nindex 09555e2..1cd37f4 100644\n--- a/guava-tests/test/com/google/common/collect/MapsTest.java\n+++ b/guava-tests/test/com/google/common/collect/MapsTest.java\n@@ -983,7 +983,7 @@\n     }\n   }\n \n-  private static final BiMap<Integer, String> INT_TO_STRING_MAP =\n+  private static final ImmutableBiMap<Integer, String> INT_TO_STRING_MAP =\n       new ImmutableBiMap.Builder<Integer, String>()\n           .put(1, \"one\")\n           .put(2, \"two\")\n",
        "projectName": "google.guava",
        "bugLineNum": 986,
        "bugNodeStartChar": 37418,
        "bugNodeLength": 22,
        "fixLineNum": 986,
        "fixNodeStartChar": 37418,
        "fixNodeLength": 31,
        "sourceBeforeFix": "BiMap<Integer,String>",
        "sourceAfterFix": "ImmutableBiMap<Integer,String>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "15a26dc6061cd3162d9bea82d0b1cf10beca07e2",
        "fixCommitParentSHA1": "3d69798bd9c72b39558844554a2b2915567d1077",
        "bugFilePath": "servers/src/test/java/tachyon/master/lineage/meta/LineageStoreTest.java",
        "fixPatch": "diff --git a/servers/src/test/java/tachyon/master/lineage/meta/LineageStoreTest.java b/servers/src/test/java/tachyon/master/lineage/meta/LineageStoreTest.java\nindex 81f3310..74ddffa 100644\n--- a/servers/src/test/java/tachyon/master/lineage/meta/LineageStoreTest.java\n+++ b/servers/src/test/java/tachyon/master/lineage/meta/LineageStoreTest.java\n@@ -105,12 +105,12 @@\n   }\n \n   @Test\n-  public void reportLostFileTest() {\n+  public void reportLostFileTest() throws LineageDoesNotExistException {\n     long fileId = 1;\n     mThrown.expect(LineageDoesNotExistException.class);\n     mThrown.expectMessage(ExceptionMessage.LINEAGE_OUTPUT_FILE_NOT_EXIST.getMessage(fileId));\n \n-    mLineageStore.requestFilePersistence(fileId);\n+    mLineageStore.reportLostFile(fileId);\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 113,
        "bugNodeStartChar": 4161,
        "bugNodeLength": 44,
        "fixLineNum": 113,
        "fixNodeStartChar": 4161,
        "fixNodeLength": 36,
        "sourceBeforeFix": "mLineageStore.requestFilePersistence(fileId)",
        "sourceAfterFix": "mLineageStore.reportLostFile(fileId)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "309845dc491d60d40e0b0a7f654b2db0d964128b",
        "fixCommitParentSHA1": "31f5d49703fdc366bd3fad74668054b18bb3b9c8",
        "bugFilePath": "tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/cache/replication/CacheReplicationTest.java",
        "fixPatch": "diff --git a/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/cache/replication/CacheReplicationTest.java b/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/cache/replication/CacheReplicationTest.java\nindex 09c9be6..b2e32a0 100644\n--- a/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/cache/replication/CacheReplicationTest.java\n+++ b/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/cache/replication/CacheReplicationTest.java\n@@ -53,7 +53,7 @@\n         template.sendBody(\"direct:addRoute\", \"Am I replicated?\");\n \n         // give some time to make replication\n-        Thread.sleep(200);\n+        Thread.sleep(300);\n \n         template.sendBody(\"direct:getRoute1\", \"Will I get replicated cache\");\n         template.sendBody(\"direct:getRoute2\", \"Will I get replicated cache\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 56,
        "bugNodeStartChar": 2310,
        "bugNodeLength": 17,
        "fixLineNum": 56,
        "fixNodeStartChar": 2310,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(200)",
        "sourceAfterFix": "Thread.sleep(300)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "35b36bca468581e8e8b5152a99c562f18a7d44b5",
        "fixCommitParentSHA1": "1bf2445ea4ac70b2f35655dda0914e1ea2759f5e",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java b/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\nindex fcccd09..0832f3a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\n@@ -24,8 +24,10 @@\n \n         h1.shutdown();\n         h1 = Hazelcast.newHazelcastInstance(config);\n+        // when h1 is returned, it's guaranteed that it should see 2 members\n         assertClusterSize(2, h1);\n-        assertClusterSize(2, h2);\n+        // but h2 will report newly joining member eventually\n+        assertClusterSizeEventually(2, h2);\n     }\n \n     protected void testJoin_With_DifferentBuildNumber(Config config) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 28,
        "bugNodeStartChar": 1016,
        "bugNodeLength": 24,
        "fixLineNum": 29,
        "fixNodeStartChar": 1078,
        "fixNodeLength": 34,
        "sourceBeforeFix": "assertClusterSize(2,h2)",
        "sourceAfterFix": "assertClusterSizeEventually(2,h2)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e",
        "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 64,
        "bugNodeStartChar": 2844,
        "bugNodeLength": 20,
        "fixLineNum": 64,
        "fixNodeStartChar": 2781,
        "fixNodeLength": 18,
        "sourceBeforeFix": "TimeUtils.nanoTime()",
        "sourceAfterFix": "TimeUtils.millis()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\nindex 2f72610..6b415c8 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\n@@ -1715,7 +1715,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1740,7 +1740,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1765,7 +1765,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1862,7 +1862,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1894,7 +1894,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1926,7 +1926,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1958,7 +1958,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1768,
        "bugNodeStartChar": 80462,
        "bugNodeLength": 22,
        "fixLineNum": 1768,
        "fixNodeStartChar": 80462,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(247)",
        "sourceAfterFix": "new StringBuilder(246)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "39c42c2dc347f1d8b10311c09e436fd4ade63c4c",
        "fixCommitParentSHA1": "148034b9978822f8c478a123131a02b08e26c95e",
        "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 149,
        "bugNodeStartChar": 4832,
        "bugNodeLength": 63,
        "fixLineNum": 149,
        "fixNodeStartChar": 4684,
        "fixNodeLength": 70,
        "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())",
        "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "96961c021dc60e796dbf823d29db5f62c70356b7",
        "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 88,
        "bugNodeStartChar": 3510,
        "bugNodeLength": 45,
        "fixLineNum": 88,
        "fixNodeStartChar": 3510,
        "fixNodeLength": 42,
        "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
        "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "722193d061bf6619508ed870fdf214c698f5f044",
        "fixCommitParentSHA1": "716ef1c03ef5490359a7e457965c4556c2b52b64",
        "bugFilePath": "api/src/test/java/org/openmrs/annotation/OpenmrsProfileExcludeFilterTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/annotation/OpenmrsProfileExcludeFilterTest.java b/api/src/test/java/org/openmrs/annotation/OpenmrsProfileExcludeFilterTest.java\nindex 26cde1d..e51ae34 100644\n--- a/api/src/test/java/org/openmrs/annotation/OpenmrsProfileExcludeFilterTest.java\n+++ b/api/src/test/java/org/openmrs/annotation/OpenmrsProfileExcludeFilterTest.java\n@@ -80,7 +80,7 @@\n \t */\n \t@Test\n \tpublic void match_shouldIncludeBeanIfModuleMissing() {\n-\t\tOpenmrsProfileWithoutTest1Module bean = applicationContext.getBean(OpenmrsProfileWithoutTest1Module.class);\n+\t\tOpenmrsProfileWithoutMissingModule bean = applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);\n \t\t\n \t\tassertThat(bean, is(notNullValue()));\n \t}\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 83,
        "bugNodeStartChar": 3061,
        "bugNodeLength": 107,
        "fixLineNum": 83,
        "fixNodeStartChar": 3061,
        "fixNodeLength": 111,
        "sourceBeforeFix": "OpenmrsProfileWithoutTest1Module bean=applicationContext.getBean(OpenmrsProfileWithoutTest1Module.class); ",
        "sourceAfterFix": "OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class); "
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "404f6322c65eac5a8b4aea4205cab1f79988e9f4",
        "fixCommitParentSHA1": "9eb28254f8b84e2607b9a3a0c623874b9bebd16b",
        "bugFilePath": "server/src/main/java/com/metamx/druid/master/ServerHolder.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/master/ServerHolder.java b/server/src/main/java/com/metamx/druid/master/ServerHolder.java\nindex 662aca0..6cf4d65 100644\n--- a/server/src/main/java/com/metamx/druid/master/ServerHolder.java\n+++ b/server/src/main/java/com/metamx/druid/master/ServerHolder.java\n@@ -96,7 +96,7 @@\n \n   public boolean containsSegment(DataSegment segment)\n   {\n-    return (server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment));\n+    return (server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment));\n   }\n \n   @Override\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 99,
        "bugNodeStartChar": 2380,
        "bugNodeLength": 96,
        "fixLineNum": 99,
        "fixNodeStartChar": 2380,
        "fixNodeLength": 96,
        "sourceBeforeFix": "server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)",
        "sourceAfterFix": "server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cc848a1c24959c2f6941234b77399fbd58ecd3ca",
        "fixCommitParentSHA1": "187d9a29a5b1862534c0ae529b1f1b017f19aed9",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\nindex 15caa76..5ac6121 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n@@ -174,11 +174,11 @@\n \n     @Override\n     public String apiFileFolder() {\n-        return (outputFolder + File.separator + apiFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + apiFolder).replace(\"/\", File.separator);\n     }\n \n     public String modelFileFolder() {\n-        return (outputFolder + File.separator + modelFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + modelFolder).replace(\"/\", File.separator);\n     }\n \n     @Override\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 181,
        "bugNodeStartChar": 7009,
        "bugNodeLength": 77,
        "fixLineNum": 181,
        "fixNodeStartChar": 7009,
        "fixNodeLength": 74,
        "sourceBeforeFix": "(outputFolder + File.separator + modelFolder).replaceAll(\"/\",File.separator)",
        "sourceAfterFix": "(outputFolder + File.separator + modelFolder).replace(\"/\",File.separator)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d94f2ff5b5ab60f334639325e825f1c61eb36517",
        "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
        "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
        "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 52,
        "bugNodeStartChar": 1363,
        "bugNodeLength": 159,
        "fixLineNum": 52,
        "fixNodeStartChar": 1363,
        "fixNodeLength": 155,
        "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
        "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8abe81aaa656d78ac8b9e1a631a849025c9560b0",
        "fixCommitParentSHA1": "0c0fd67082d8f807c9bedabba4c99cdebf6d1de8",
        "bugFilePath": "tool/src/org/antlr/v4/tool/DOTGenerator.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/tool/DOTGenerator.java b/tool/src/org/antlr/v4/tool/DOTGenerator.java\nindex 3788310..59ade76 100644\n--- a/tool/src/org/antlr/v4/tool/DOTGenerator.java\n+++ b/tool/src/org/antlr/v4/tool/DOTGenerator.java\n@@ -284,7 +284,7 @@\n \t\t\t\t\tSetTransition set = (SetTransition)edge;\n \t\t\t\t\tString label = set.label().toString();\n \t\t\t\t\tif ( isLexer ) label = set.label().toString(true);\n-\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tif ( edge instanceof NotSetTransition ) label = \"~\"+label;\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n@@ -293,7 +293,7 @@\n \t\t\t\t\tRangeTransition range = (RangeTransition)edge;\n \t\t\t\t\tString label = range.label().toString();\n \t\t\t\t\tif ( isLexer ) label = range.toString();\n-\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n \t\t\t\telse {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 287,
        "bugNodeStartChar": 10574,
        "bugNodeLength": 23,
        "fixLineNum": 287,
        "fixNodeStartChar": 10574,
        "fixNodeLength": 30,
        "sourceBeforeFix": "grammar.getTokenNames()",
        "sourceAfterFix": "grammar.getTokenDisplayNames()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "251bb1a73961f785ad12dbb3ae92830eca70b8cd",
        "fixCommitParentSHA1": "95b02e49ac914972ac27c35bcb3272f8ca3956a4",
        "bugFilePath": "transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java",
        "fixPatch": "diff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java\nindex d23f8a2..eade60d 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java\n@@ -302,7 +302,7 @@\n     protected final ByteBuf newDirectBuffer(Object holder, ByteBuf buf) {\n         final int readableBytes = buf.readableBytes();\n         if (readableBytes == 0) {\n-            ReferenceCountUtil.safeRelease(holder);\n+            ReferenceCountUtil.release(holder);\n             return Unpooled.EMPTY_BUFFER;\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 305,
        "bugNodeStartChar": 10927,
        "bugNodeLength": 38,
        "fixLineNum": 305,
        "fixNodeStartChar": 10927,
        "fixNodeLength": 34,
        "sourceBeforeFix": "ReferenceCountUtil.safeRelease(holder)",
        "sourceAfterFix": "ReferenceCountUtil.release(holder)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bf71d079f373a5f8761acb186472f89259612b5d",
        "fixCommitParentSHA1": "0f3c474dee7f0fd7725865c491eec6064316cbfb",
        "bugFilePath": "services/src/main/java/io/druid/cli/CliPeon.java",
        "fixPatch": "diff --git a/services/src/main/java/io/druid/cli/CliPeon.java b/services/src/main/java/io/druid/cli/CliPeon.java\nindex d4eb022..d85e974 100644\n--- a/services/src/main/java/io/druid/cli/CliPeon.java\n+++ b/services/src/main/java/io/druid/cli/CliPeon.java\n@@ -111,7 +111,7 @@\n                 binder,\n                 \"druid.indexer.task.chathandler.type\",\n                 Key.get(ChatHandlerProvider.class),\n-                Key.get(NoopChatHandlerProvider.class)\n+                Key.get(ServiceAnnouncingChatHandlerProvider.class)\n             );\n             final MapBinder<String, ChatHandlerProvider> handlerProviderBinder = PolyBind.optionBinder(\n                 binder, Key.get(ChatHandlerProvider.class)\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 114,
        "bugNodeStartChar": 4485,
        "bugNodeLength": 29,
        "fixLineNum": 114,
        "fixNodeStartChar": 4485,
        "fixNodeLength": 42,
        "sourceBeforeFix": "NoopChatHandlerProvider.class",
        "sourceAfterFix": "ServiceAnnouncingChatHandlerProvider.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "57c1a20ed514174389b336b03ba40c191e2c6d32",
        "fixCommitParentSHA1": "1bfd2a3176f89ecfae25af2343708f9f2bb1c811",
        "bugFilePath": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java",
        "fixPatch": "diff --git a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\nindex 296483c..5d4619d 100644\n--- a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n+++ b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n@@ -48,26 +48,26 @@\n         Assert.assertEquals(\"timer:foo?period=4999\", details.get(0).getEndpointUri());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumber());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumberEnd());\n-        Assert.assertEquals(1062, details.get(0).getAbsolutePosition());\n+        Assert.assertEquals(1061, details.get(0).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(0).getLinePosition());\n \n         Assert.assertEquals(\"log:a\", details.get(1).getEndpointUri());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumber());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumberEnd());\n-        Assert.assertEquals(1145, details.get(1).getAbsolutePosition());\n+        Assert.assertEquals(1144, details.get(1).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(1).getLinePosition());\n \n         Assert.assertEquals(\"netty4-http:http:someserver:80/hello\", details.get(2).getEndpointUri());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumber());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumberEnd());\n-        Assert.assertEquals(1203, details.get(2).getAbsolutePosition());\n+        Assert.assertEquals(1202, details.get(2).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(2).getLinePosition());\n \n         // spans 2 lines\n         Assert.assertEquals(\"mock:foo?retainFirst=1\", details.get(6).getEndpointUri());\n         Assert.assertEquals(\"45\", details.get(6).getLineNumber());\n         Assert.assertEquals(\"46\", details.get(6).getLineNumberEnd());\n-        Assert.assertEquals(1457, details.get(6).getAbsolutePosition());\n+        Assert.assertEquals(1456, details.get(6).getAbsolutePosition());\n         Assert.assertEquals(17, details.get(6).getLinePosition());\n \n         List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 57,
        "bugNodeStartChar": 2654,
        "bugNodeLength": 63,
        "fixLineNum": 57,
        "fixNodeStartChar": 2654,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Assert.assertEquals(1145,details.get(1).getAbsolutePosition())",
        "sourceAfterFix": "Assert.assertEquals(1144,details.get(1).getAbsolutePosition())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "0ff079b4276fa4c7534d0563fd31f6b0826fdc17",
        "fixCommitParentSHA1": "44c1952a6e819da34827f49d1aec7e598d7e7d34",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/CompareAndSetOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/CompareAndSetOperation.java b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/CompareAndSetOperation.java\nindex b46f8b4..4fba948 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/CompareAndSetOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/CompareAndSetOperation.java\n@@ -44,7 +44,7 @@\n     public void run() throws Exception {\n         AtomicReferenceContainer atomicReferenceContainer = getReferenceContainer();\n         returnValue = atomicReferenceContainer.compareAndSet(expect, update);\n-        shouldBackup = !returnValue;\n+        shouldBackup = returnValue;\n     }\n \n     @Override\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 47,
        "bugNodeStartChar": 1658,
        "bugNodeLength": 12,
        "fixLineNum": 47,
        "fixNodeStartChar": 1658,
        "fixNodeLength": 11,
        "sourceBeforeFix": "!returnValue",
        "sourceAfterFix": "returnValue"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "bbb28b514aadd4fc649dd0b7a47c6ece4d629fa7",
        "fixCommitParentSHA1": "fee5b47c3038207e4e88ed1470df25bda2d41c47",
        "bugFilePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java b/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\nindex 8e0c4c6..ea4ea43 100644\n--- a/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\n+++ b/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\n@@ -46,7 +46,7 @@\n         // We should get two sets of 10 messages.  10 before the rollback and 10 after the rollback.\n         getMockEndpoint(\"mock:test.before.1\").expectedMessageCount(10);\n         getMockEndpoint(\"mock:test.before.2\").expectedMessageCount(10);\n-        getMockEndpoint(\"mock:test.after.1\").expectedMinimumMessageCount(10);\n+        getMockEndpoint(\"mock:test.after.1\").expectedMessageCount(10);\n         getMockEndpoint(\"mock:test.after.2\").expectedMessageCount(10);\n \n         // Send only 10 messages\n@@ -101,7 +101,7 @@\n                                         // Try failing in two places to\n                                         // ensure we still get the number of messages that\n                                         // we expect across the topics\n-                                        if (body.endsWith(\"6\")) {\n+                                        if (body.endsWith(\"6\") || body.endsWith(\"10\")) {\n                                             log.info(\"5th message received.  Rolling back.\");\n                                             exchange.getOut().setFault(true);\n                                             exchange.getOut().setBody(\"5th message received.  Rolling back.\");\n@@ -129,7 +129,7 @@\n                                         // Try failing in two places to\n                                         // ensure we still get the number of messages that\n                                         // we expect across the topics\n-                                        if (body.endsWith(\"3\") || body.endsWith(\"7\")) {\n+                                        if (body.endsWith(\"3\") || body.endsWith(\"10\")) {\n                                             log.info(\"5th message received.  Rolling back.\");\n                                             exchange.getOut().setFault(true);\n                                             exchange.getOut().setBody(\"5th message received.  Rolling back.\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 104,
        "bugNodeStartChar": 4786,
        "bugNodeLength": 18,
        "fixLineNum": 104,
        "fixNodeStartChar": 4786,
        "fixNodeLength": 41,
        "sourceBeforeFix": "body.endsWith(\"6\")",
        "sourceAfterFix": "body.endsWith(\"6\") || body.endsWith(\"10\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "041225c3f286c8fb8bf59cb5fa2f686ea7903ade",
        "fixCommitParentSHA1": "a8d708ea1b271e9a03d7a96408e7db17c42b2586",
        "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java",
        "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\nindex 8902c05..4d5cf7e 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/AbstractEventParser.java\n@@ -417,7 +417,7 @@\n     }\r\n \r\n     protected LogPosition buildLastTransactionPosition(List<CanalEntry.Entry> entries) { // \u521d\u59cb\u5316\u4e00\u4e0b\r\n-        for (int i = entries.size() - 1; i > 0; i--) {\r\n+        for (int i = entries.size() - 1; i >= 0; i--) {\r\n             CanalEntry.Entry entry = entries.get(i);\r\n             if (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) {// \u5c3d\u91cf\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u52a1\u505a\u4e3aposition\r\n                 return buildLastPosition(entry);\r\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 420,
        "bugNodeStartChar": 20717,
        "bugNodeLength": 5,
        "fixLineNum": 420,
        "fixNodeStartChar": 20298,
        "fixNodeLength": 6,
        "sourceBeforeFix": "i > 0",
        "sourceAfterFix": "i >= 0"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e283de68318f4e0568cc703c357e695c72d8bce1",
        "fixCommitParentSHA1": "baedacf9708d9c04b373f83df3d75b6aaf72aaa9",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\nindex c5da481..94e1ff8 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n@@ -661,7 +661,7 @@\n         );\n         tasksToFail.addAll(zkWorker.getRunningTaskIds());\n         for (String assignedTask : tasksToFail) {\n-          RemoteTaskRunnerWorkItem taskRunnerWorkItem = runningTasks.get(assignedTask);\n+          RemoteTaskRunnerWorkItem taskRunnerWorkItem = runningTasks.remove(assignedTask);\n           if (taskRunnerWorkItem != null) {\n             String taskPath = JOINER.join(config.getIndexerTaskPath(), worker.getHost(), assignedTask);\n             if (cf.checkExists().forPath(taskPath) != null) {\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 664,
        "bugNodeStartChar": 24078,
        "bugNodeLength": 30,
        "fixLineNum": 664,
        "fixNodeStartChar": 24078,
        "fixNodeLength": 33,
        "sourceBeforeFix": "runningTasks.get(assignedTask)",
        "sourceAfterFix": "runningTasks.remove(assignedTask)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "425403eeed99d409a1c49ad5243a3a0bd86ed66c",
        "fixCommitParentSHA1": "08a5696023a5db3eb8652cf99366b9ab68babd3b",
        "bugFilePath": "src/com/google/javascript/jscomp/DefaultExterns.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DefaultExterns.java b/src/com/google/javascript/jscomp/DefaultExterns.java\nindex e36ef1b..119e134 100644\n--- a/src/com/google/javascript/jscomp/DefaultExterns.java\n+++ b/src/com/google/javascript/jscomp/DefaultExterns.java\n@@ -30,14 +30,12 @@\n   private DefaultExterns() {}\n \n   // Core language externs. When the environment is CUSTOM, only these externs will be included.\n-  private static final List<String> BUILTIN_LANG_EXTERNS = ImmutableList.of(\n-      \"es3.js\",\n-      \"es5.js\",\n-      \"es6.js\",\n-      \"es6_collections.js\");\n+  private static final ImmutableList<String> BUILTIN_LANG_EXTERNS =\n+      ImmutableList.of(\"es3.js\", \"es5.js\", \"es6.js\", \"es6_collections.js\");\n \n   // Ordered browser externs. Externs not included in this list are added last.\n-  private static final List<String> BROWSER_EXTERN_DEP_ORDER = ImmutableList.of(\n+  private static final ImmutableList<String> BROWSER_EXTERN_DEP_ORDER =\n+      ImmutableList.of(\n       //-- browser externs --\n       \"intl.js\",\n       \"w3c_event.js\",\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 40,
        "bugNodeStartChar": 1381,
        "bugNodeLength": 12,
        "fixLineNum": 40,
        "fixNodeStartChar": 1381,
        "fixNodeLength": 21,
        "sourceBeforeFix": "List<String>",
        "sourceAfterFix": "ImmutableList<String>"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "d841140c230d298f1e3de1eb04307f65e3ce7935",
        "fixCommitParentSHA1": "18d68058b5e3f126a074bc021012e344cb308961",
        "bugFilePath": "plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java",
        "fixPatch": "diff --git a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\nindex 9f3e1d0..076d640 100644\n--- a/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n+++ b/plugins/jetty/src/main/java/com/navercorp/pinpoint/plugin/jetty/interceptor/Jetty8ServerHandleInterceptor.java\n@@ -27,7 +27,7 @@\n \n \n             final Method getRequestMethod = getGetRequestMethod(object);\n-            if (getRequestMethod == null) {\n+            if (getRequestMethod != null) {\n                 final Request request = (Request) getRequestMethod.invoke(object);\n                 return request;\n             }\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 30,
        "bugNodeStartChar": 1060,
        "bugNodeLength": 24,
        "fixLineNum": 30,
        "fixNodeStartChar": 1060,
        "fixNodeLength": 24,
        "sourceBeforeFix": "getRequestMethod == null",
        "sourceAfterFix": "getRequestMethod != null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 407,
        "bugNodeStartChar": 15236,
        "bugNodeLength": 10,
        "fixLineNum": 407,
        "fixNodeStartChar": 15236,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15863",
        "sourceAfterFix": "id=10863"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "76063c69b78baee602935b2296eeac234030b5de",
        "fixCommitParentSHA1": "5e589785faada0d4d7bd69b2646294d5feaa9d2f",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex 26847e2..70edc5c 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -1754,7 +1754,7 @@\n                     requestTimeout = p.getRequestTimeoutInMs();\n                 }\n \n-                finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class));\n+                markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class));\n                 abort(this.nettyResponseFuture, new TimeoutException(String.format(\"No response received after %s\", requestTimeout)));\n \n                 this.nettyResponseFuture = null;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 1757,
        "bugNodeStartChar": 77241,
        "bugNodeLength": 77,
        "fixLineNum": 1757,
        "fixNodeStartChar": 77241,
        "fixNodeLength": 86,
        "sourceBeforeFix": "finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))",
        "sourceAfterFix": "markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "37a968f250d8e6b6cfadebb046f2eb1295cd95e4",
        "fixCommitParentSHA1": "df2638313bd7851fdba629ea00cd0192a895b356",
        "bugFilePath": "api/src/main/java/org/openmrs/module/ModuleFactory.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/module/ModuleFactory.java b/api/src/main/java/org/openmrs/module/ModuleFactory.java\nindex 177b4c1..efe40d4 100644\n--- a/api/src/main/java/org/openmrs/module/ModuleFactory.java\n+++ b/api/src/main/java/org/openmrs/module/ModuleFactory.java\n@@ -1093,7 +1093,7 @@\n \t\t\t\tif (mod.getModuleActivator() != null)// if extends BaseModuleActivator\n \t\t\t\t\tmod.getModuleActivator().willStop();\n \t\t\t}\n-\t\t\tcatch (Throwable t) {\n+\t\t\tcatch (Exception t) {\n \t\t\t\tlog.warn(\"Unable to call module's Activator.willStop() method\", t);\n \t\t\t}\n \t\t\t\n@@ -1154,12 +1154,12 @@\n \t\t\t\t\t\t\t\tContext.removeAdvice(cls, (Advice) aopObject);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (Throwable t) {\n+\t\t\t\t\t\tcatch (Exception t) {\n \t\t\t\t\t\t\tlog.warn(\"Could not remove advice point: \" + advice.getPoint(), t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tcatch (Throwable t) {\n+\t\t\t\tcatch (Exception t) {\n \t\t\t\t\tlog.warn(\"Error while getting advicePoints from module: \" + moduleId, t);\n \t\t\t\t}\n \t\t\t\t\n@@ -1180,7 +1180,7 @@\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tcatch (Throwable t) {\n+\t\t\t\tcatch (Exception t) {\n \t\t\t\t\tlog.warn(\"Error while getting extensions from module: \" + moduleId, t);\n \t\t\t\t}\n \t\t\t}\n@@ -1199,7 +1199,7 @@\n \t\t\t\telse\n \t\t\t\t\tmod.getActivator().shutdown();//implements old  Activator interface\n \t\t\t}\n-\t\t\tcatch (Throwable t) {\n+\t\t\tcatch (Exception t) {\n \t\t\t\tlog.warn(\"Unable to call module's Activator.shutdown() method\", t);\n \t\t\t}\n \t\t\t\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 1183,
        "bugNodeStartChar": 40724,
        "bugNodeLength": 11,
        "fixLineNum": 1183,
        "fixNodeStartChar": 40724,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Throwable t",
        "sourceAfterFix": "Exception t"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 55,
        "bugNodeStartChar": 1620,
        "bugNodeLength": 36,
        "fixLineNum": 55,
        "fixNodeStartChar": 1620,
        "fixNodeLength": 33,
        "sourceBeforeFix": "GL.glBindTextureEXT(target,texture)",
        "sourceAfterFix": "GL.glBindTexture(target,texture)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9ad66ccebc3547d555ec747fa3b3939ca1a9f876",
        "fixCommitParentSHA1": "5eb9868689e9a4c3edd2cb0fe5117a961d0e893e",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\nindex 6b8488e..58b426e 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n@@ -201,19 +201,20 @@\n     protected boolean executeFirstSet = false;\n \n     protected final Class<? extends AtmosphereInterceptor>[] defaultInterceptors = new Class[]{\n-            OnDisconnectInterceptor.class,\n-            // ADD Tracking ID Handshake\n-            JavaScriptProtocol.class,\n-            // ADD JSONP support\n-            JSONPAtmosphereInterceptor.class,\n-            // Add SSE support\n-            SSEAtmosphereInterceptor.class,\n-            // Android 2.3.x streaming support\n-            AndroidAtmosphereInterceptor.class,\n+            // Default Interceptor\n+            DefaultHeadersInterceptor.class,\n             // WebKit & IE Padding\n             PaddingAtmosphereInterceptor.class,\n-            // Default Interceptor\n-            DefaultHeadersInterceptor.class\n+            // Android 2.3.x streaming support\n+            AndroidAtmosphereInterceptor.class,\n+            // Add SSE support\n+            SSEAtmosphereInterceptor.class,\n+            // ADD JSONP support\n+            JSONPAtmosphereInterceptor.class,\n+            // ADD Tracking ID Handshake\n+            JavaScriptProtocol.class,\n+            // OnDisconnect\n+            OnDisconnectInterceptor.class\n     };\n \n     /**\n@@ -786,7 +787,7 @@\n         s = sc.getInitParameter(ApplicationConfig.DISABLE_ATMOSPHEREINTERCEPTOR);\n         if (s == null) {\n             for (Class<? extends AtmosphereInterceptor> a : defaultInterceptors) {\n-                interceptors.addFirst(newAInterceptor(a));\n+                interceptors.addLast(newAInterceptor(a));\n             }\n             logger.info(\"Set {} to disable them.\", ApplicationConfig.DISABLE_ATMOSPHEREINTERCEPTOR, interceptors);\n         }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 789,
        "bugNodeStartChar": 33961,
        "bugNodeLength": 41,
        "fixLineNum": 789,
        "fixNodeStartChar": 33961,
        "fixNodeLength": 40,
        "sourceBeforeFix": "interceptors.addFirst(newAInterceptor(a))",
        "sourceAfterFix": "interceptors.addLast(newAInterceptor(a))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae4c271f7068895d43ad42712cb64b5bc81525a3",
        "fixCommitParentSHA1": "a7892257e1e4d040a7a54d82048758eba74f2a89",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketWriter.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketWriter.java b/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketWriter.java\nindex b637196..8e012f2 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketWriter.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketWriter.java\n@@ -44,7 +44,7 @@\n   private static final long FILE_BUFFER_BYTES =\n       Configuration.getBytes(PropertyKey.USER_FILE_BUFFER_BYTES);\n   private static final long WRITE_TIMEOUT_MS =\n-      Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n+      Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n \n   private final FileSystemContext mContext;\n   private final WorkerNetAddress mAddress;\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 47,
        "bugNodeStartChar": 1725,
        "bugNodeLength": 64,
        "fixLineNum": 47,
        "fixNodeStartChar": 1725,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)",
        "sourceAfterFix": "Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "e15dbdf6aceac531383d22369d7f09b40106f06e",
        "fixCommitParentSHA1": "27471f6535a7c91cf5387a88b1a920d4d991c2e5",
        "bugFilePath": "modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java",
        "fixPatch": "diff --git a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\nindex 0531c3e..e515670b 100644\n--- a/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n+++ b/modules/activiti-secure-service-tasks/src/test/java/org/activiti/test/serviceTask/secure/SecureServiceTaskBaseTest.java\n@@ -28,7 +28,7 @@\n     @Override\n     protected List<ProcessEngineConfigurator> getConfigurators() {\n         ProcessEngineConfigurator configurator = new SecureServiceTaskConfigurator()\n-                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"ls\", \"pwd\")));\n+                .setWhiteListedShellCommands(new HashSet<String>(Arrays.asList(\"cmd\",\"ls\", \"pwd\")));\n \n         return Arrays.asList(configurator);\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 31,
        "bugNodeStartChar": 1214,
        "bugNodeLength": 26,
        "fixLineNum": 31,
        "fixNodeStartChar": 1214,
        "fixNodeLength": 32,
        "sourceBeforeFix": "Arrays.asList(\"ls\",\"pwd\")",
        "sourceAfterFix": "Arrays.asList(\"cmd\",\"ls\",\"pwd\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "d7b19bfc78039804e5460a01e6d5939d2f4ce5f7",
        "fixCommitParentSHA1": "3dc1389f687b886d6c2cff0acdb1dcac0bc8a57c",
        "bugFilePath": "shell/src/main/java/tachyon/shell/TFsShell.java",
        "fixPatch": "diff --git a/shell/src/main/java/tachyon/shell/TFsShell.java b/shell/src/main/java/tachyon/shell/TFsShell.java\nindex 0f44ed0..76a4aec 100644\n--- a/shell/src/main/java/tachyon/shell/TFsShell.java\n+++ b/shell/src/main/java/tachyon/shell/TFsShell.java\n@@ -497,7 +497,7 @@\n    */\n   public int mkdir(TachyonURI path) {\n     try {\n-      mTfs.mkdirs(path);\n+      mTfs.mkdirs(path, true);\n       System.out.println(\"Successfully created directory \" + path);\n       return 0;\n     } catch (IOException ioe) {\n@@ -717,7 +717,7 @@\n    */\n   public int rmr(TachyonURI path) {\n     try {\n-      mTfs.delete(mTfs.open(path));\n+      mTfs.delete(mTfs.open(path), true);\n       System.out.println(path + \" has been removed\");\n       return 0;\n     } catch (IOException ioe) {\n@@ -932,7 +932,7 @@\n    */\n   public int unpin(TachyonURI path) throws IOException {\n     try {\n-      mTfs.setPin(mTfs.open(path), false);\n+      mTfs.setPin(mTfs.open(path), true);\n       System.out.println(\"File '\" + path + \"' was successfully unpinned.\");\n       return 0;\n     } catch (Exception e) {\n@@ -943,7 +943,8 @@\n   }\n \n   /**\n-   * Free the file or Folder from tachyon in-memory specified by argv\n+   * Free the given file or folder from tachyon in-memory (recursively freeing all children \n+   * if a folder)\n    *\n    * @param path The TachyonURI path as the input of the command\n    * @return 0 if command if successful, -1 if an error occurred.\n@@ -951,7 +952,7 @@\n    */\n   public int free(TachyonURI path) throws IOException {\n     try {\n-      mTfs.free(mTfs.open(path));\n+      mTfs.free(mTfs.open(path), true);\n       System.out.println(path + \" was successfully freed from memory.\");\n       return 0;\n     } catch (InvalidPathException ioe) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 720,
        "bugNodeStartChar": 22594,
        "bugNodeLength": 28,
        "fixLineNum": 720,
        "fixNodeStartChar": 22594,
        "fixNodeLength": 34,
        "sourceBeforeFix": "mTfs.delete(mTfs.open(path))",
        "sourceAfterFix": "mTfs.delete(mTfs.open(path),true)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "d270a8582b50321bc4b8a5921ff2439022a403d2",
        "fixCommitParentSHA1": "e6c56a62d63ebe5ad5687fe8c2d820da80c2054d",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java\nindex e409996..491983c 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java\n@@ -115,8 +115,11 @@\n              token = token.getParent())\n         {\n             final int type = token.getType();\n-            if (type == TokenTypes.CLASS_DEF) {\n-                break; // in a class\n+            if (type == TokenTypes.CLASS_DEF\n+                || type == TokenTypes.ENUM_DEF\n+                || type == TokenTypes.ANNOTATION_DEF)\n+            {\n+                break; // in a class, enum or annotation\n             }\n             else if (type == TokenTypes.LITERAL_NEW) {\n                 break; // inner implementation\n@@ -147,8 +150,11 @@\n              token = token.getParent())\n         {\n             final int type = token.getType();\n-            if (type == TokenTypes.CLASS_DEF) {\n-                break; // in a class\n+            if (type == TokenTypes.CLASS_DEF\n+                || type == TokenTypes.ENUM_DEF\n+                || type == TokenTypes.INTERFACE_DEF)\n+            {\n+                break; // in a class, enum or interface\n             }\n             else if (type == TokenTypes.LITERAL_NEW) {\n                 break; // inner implementation\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 150,
        "bugNodeStartChar": 4926,
        "bugNodeLength": 28,
        "fixLineNum": 150,
        "fixNodeStartChar": 4926,
        "fixNodeLength": 127,
        "sourceBeforeFix": "type == TokenTypes.CLASS_DEF",
        "sourceAfterFix": "type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "ab0eb48e45f11661ce366001c80eb2dcdabc89ac",
        "fixCommitParentSHA1": "c2cbe7c490429cddc96ade1806ed57cbe23d5424",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java\nindex 984e9a5..122d78b 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultUnitOfWork.java\n@@ -107,7 +107,7 @@\n     }\n \n     public synchronized ProcessorType getLastInterceptedNode() {\n-        if (routeList == null) {\n+        if (routeList == null || routeList.isEmpty()) {\n             return null;\n         }\n         return routeList.get(routeList.size() - 1);\n",
        "projectName": "apache.camel",
        "bugLineNum": 110,
        "bugNodeStartChar": 3536,
        "bugNodeLength": 17,
        "fixLineNum": 110,
        "fixNodeStartChar": 3536,
        "fixNodeLength": 40,
        "sourceBeforeFix": "routeList == null",
        "sourceAfterFix": "routeList == null || routeList.isEmpty()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
        "fixCommitParentSHA1": "c86fd7dffc478989a683775f771ba6bc62dc0dcc",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\nindex a895cc1..299915a 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/streams/alerts/StreamAlertConditionResource.java\n@@ -101,7 +101,7 @@\n         final Map<String, String> result = ImmutableMap.of(\"alert_condition_id\", alertCondition.getId());\n         final URI alertConditionUri = UriBuilder.fromResource(StreamAlertConditionResource.class)\n                 .path(\"{conditionId}\")\n-                .build(alertCondition.getId());\n+                .build(stream.getId(), alertCondition.getId());\n \n         return Response.created(alertConditionUri).entity(result).build();\n     }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 102,
        "bugNodeStartChar": 4311,
        "bugNodeLength": 145,
        "fixLineNum": 102,
        "fixNodeStartChar": 4311,
        "fixNodeLength": 161,
        "sourceBeforeFix": "UriBuilder.fromResource(StreamAlertConditionResource.class).path(\"{conditionId}\").build(alertCondition.getId())",
        "sourceAfterFix": "UriBuilder.fromResource(StreamAlertConditionResource.class).path(\"{conditionId}\").build(stream.getId(),alertCondition.getId())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ac418afcea37e4f1def3780fea94c2454ab5c866",
        "fixCommitParentSHA1": "7570cebf665d92b5c66105e501698a00d1862ea8",
        "bugFilePath": "logging/src/main/java/org/jboss/as/logging/HandlerOperations.java",
        "fixPatch": "diff --git a/logging/src/main/java/org/jboss/as/logging/HandlerOperations.java b/logging/src/main/java/org/jboss/as/logging/HandlerOperations.java\nindex e280521..08afbff 100644\n--- a/logging/src/main/java/org/jboss/as/logging/HandlerOperations.java\n+++ b/logging/src/main/java/org/jboss/as/logging/HandlerOperations.java\n@@ -143,9 +143,9 @@\n                         reloadRequired = reloadRequired || Logging.requiresReload(attribute.getFlags());\n                     }\n                     if (restartRequired) {\n-                        context.restartRequired();\n+                        context.revertRestartRequired();\n                     } else if (reloadRequired) {\n-                        context.reloadRequired();\n+                        context.revertReloadRequired();\n                     }\n                 }\n                 performRollback(context, configuration, name, originalModel);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 148,
        "bugNodeStartChar": 7558,
        "bugNodeLength": 24,
        "fixLineNum": 148,
        "fixNodeStartChar": 7558,
        "fixNodeLength": 30,
        "sourceBeforeFix": "context.reloadRequired()",
        "sourceAfterFix": "context.revertReloadRequired()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4374760010679cae216f1c512564626520e00238",
        "fixCommitParentSHA1": "b1075612af78f0d310030ec2dfd31531353ba2bc",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex ffaeec4..7da25bc 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -460,7 +460,7 @@\n \t\t\t\treturn;\n \t\t\t}\n \t\t\tif (value instanceof Collection) {\n-\t\t\t\tif (knownType != null && actualType != knownType && actualType != ArrayList.class) {\n+\t\t\t\tif (typeName != null && actualType != ArrayList.class && (knownType == null || knownType != actualType)) {\n \t\t\t\t\twriteObjectStart(actualType, knownType);\n \t\t\t\t\twriteArrayStart(\"items\");\n \t\t\t\t\tfor (Object item : (Collection)value)\n@@ -520,7 +520,7 @@\n \n \t\t\t// Enum special case.\n \t\t\tif (ClassReflection.isAssignableFrom(Enum.class, actualType)) {\n-\t\t\t\tif (knownType == null || knownType != actualType) {\n+\t\t\t\tif (typeName != null && (knownType == null || knownType != actualType)) {\n \t\t\t\t\t// Ensures that enums with specific implementations (abstract logic) serialize correctly.\n \t\t\t\t\tif (actualType.getEnumConstants() == null) actualType = actualType.getSuperclass();\n \n@@ -837,7 +837,7 @@\n \t\t\t\treturn readValue(\"value\", type, jsonData);\n \t\t\t}\n \n-\t\t\tif (ClassReflection.isAssignableFrom(Collection.class, type)) {\n+\t\t\tif (typeName != null && ClassReflection.isAssignableFrom(Collection.class, type)) {\n \t\t\t\t// JSON object wrapper to specify type.\n \t\t\t\tjsonData = jsonData.get(\"items\");\n \t\t\t} else {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 463,
        "bugNodeStartChar": 16694,
        "bugNodeLength": 17,
        "fixLineNum": 463,
        "fixNodeStartChar": 16694,
        "fixNodeLength": 16,
        "sourceBeforeFix": "knownType != null",
        "sourceAfterFix": "typeName != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f24916302751c0e48d107b68a1b0d61aa81d32a8",
        "fixCommitParentSHA1": "0c61e5d7a5a4c9f7e1a649559151b1fab98c3564",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java\nindex c18a455..a4ac5cf 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java\n@@ -268,7 +268,7 @@\n                                                     getId(),\n                                                     this.getClass(),\n                                                     null);\n-            throw new RuntimeException(msg.getMessage());\n+            throw new IllegalStateException(msg.getMessage());\n         }\n \n         if (!suppressLoadErrors) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 271,
        "bugNodeStartChar": 9750,
        "bugNodeLength": 38,
        "fixLineNum": 271,
        "fixNodeStartChar": 9750,
        "fixNodeLength": 43,
        "sourceBeforeFix": "new RuntimeException(msg.getMessage())",
        "sourceAfterFix": "new IllegalStateException(msg.getMessage())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "adacb4dbabce543ccb0691957d5888c4fd380887",
        "fixCommitParentSHA1": "aead3745f240b8a6c41d0059ce75bd6351034664",
        "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 41db221..165eca6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -20,11 +20,11 @@\n     private Map<Enchantment, Integer> enchantments = new HashMap<Enchantment, Integer>();\n \n     public ItemStack(final int type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final Material type) {\n-        this(type, 0);\n+        this(type, 1);\n     }\n \n     public ItemStack(final int type, final int amount) {\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 27,
        "bugNodeStartChar": 791,
        "bugNodeLength": 14,
        "fixLineNum": 27,
        "fixNodeStartChar": 791,
        "fixNodeLength": 14,
        "sourceBeforeFix": "this(type,0); ",
        "sourceAfterFix": "this(type,1); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6019f085f0d3dadc20a11f900784ce2796a89ce0",
        "fixCommitParentSHA1": "976bacc65908cc35382ddbbcdc80249a700bc2d3",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java b/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\nindex 86e0111..eb7e311 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\n@@ -137,7 +137,7 @@\n \t\t\t\twhile ((element = readerIterator.next(element)) != null);\n \t\t\t\t\n \t\t\t\tsynchronized (materializationMonitor) {\n-\t\t\t\t\twhile (!this.materialized) {\n+\t\t\t\t\twhile (!this.materialized && !disposed) {\n \t\t\t\t\t\tmaterializationMonitor.wait();\n \t\t\t\t\t}\n \t\t\t\t}\n@@ -209,7 +209,7 @@\n \t\t\tthrow new IllegalStateException(\"The Broadcast Variable has been disposed\");\n \t\t}\n \t\t\n-\t\tsynchronized (this) {\n+\t\tsynchronized (references) {\n \t\t\tif (transformed != null) {\n \t\t\t\tif (transformed instanceof List) {\n \t\t\t\t\t@SuppressWarnings(\"unchecked\")\n@@ -233,7 +233,7 @@\n \t\t\tthrow new IllegalStateException(\"The Broadcast Variable has been disposed\");\n \t\t}\n \t\t\n-\t\tsynchronized (this) {\n+\t\tsynchronized (references) {\n \t\t\tif (transformed == null) {\n \t\t\t\ttransformed = initializer.initializeBroadcastVariable(data);\n \t\t\t\tdata = null;\n",
        "projectName": "apache.flink",
        "bugLineNum": 236,
        "bugNodeStartChar": 7537,
        "bugNodeLength": 4,
        "fixLineNum": 236,
        "fixNodeStartChar": 7537,
        "fixNodeLength": 10,
        "sourceBeforeFix": "synchronized (this) {   if (transformed == null) {     transformed=initializer.initializeBroadcastVariable(data);     data=null;   }   return transformed; } ",
        "sourceAfterFix": "synchronized (references) {   if (transformed == null) {     transformed=initializer.initializeBroadcastVariable(data);     data=null;   }   return transformed; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da",
        "fixCommitParentSHA1": "1435dad364fb6547de60d6f142211ccd6649bd06",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\nindex f3ece18..3c2b618 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n@@ -188,7 +188,7 @@\n         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {\n@@ -196,7 +196,7 @@\n                 } else {\n                     statistics.increaseCacheHits(1);\n                 }\n-                statistics.addGetTimeNano(System.nanoTime() - start);\n+                statistics.addGetTimeNanos(System.nanoTime() - start);\n             }\n         }\n     }\n@@ -230,7 +230,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n-            statistics.addPutTimeNano(System.nanoTime() - start);\n+            statistics.addPutTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -252,11 +252,11 @@\n             deleteRecord(key);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCacheRemovals(1);\n-                statistics.addRemoveTimeNano(System.nanoTime() - start);\n+                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -281,7 +281,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -315,7 +315,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             if (hitCount == 1) {\n                 statistics.increaseCacheHits(hitCount);\n             } else {\n@@ -357,11 +357,11 @@\n             result = updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result) {\n                 statistics.increaseCachePuts(1);\n                 statistics.increaseCacheHits(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -400,9 +400,9 @@\n         if (isStatisticsEnabled()) {\n             if (result) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (isHit) {\n                 statistics.increaseCacheHits(1);\n             } else {\n@@ -428,11 +428,11 @@\n             updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -587,7 +587,7 @@\n             }\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 255,
        "bugNodeStartChar": 10642,
        "bugNodeLength": 52,
        "fixLineNum": 255,
        "fixNodeStartChar": 10642,
        "fixNodeLength": 53,
        "sourceBeforeFix": "statistics.addGetTimeNano(System.nanoTime() - start)",
        "sourceAfterFix": "statistics.addGetTimeNanos(System.nanoTime() - start)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java",
        "fixPatch": "diff --git a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\nindex ad210b5..39d7397 100644\n--- a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n+++ b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n@@ -43,10 +43,10 @@\n \n     private static final Logger logger = Logger.getLogger(TransactedQueueMessageSender.class);\n \n-    @Resource(name = \"java:/queue/myAwesomeQueue\")\n+    @Resource(lookup = \"java:/queue/myAwesomeQueue\")\n     private Queue queue;\n \n-    @Resource(name = \"java:/ConnectionFactory\")\n+    @Resource(lookup = \"java:/ConnectionFactory\")\n     private ConnectionFactory factory;\n \n     @Resource\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 49,
        "bugNodeStartChar": 1769,
        "bugNodeLength": 32,
        "fixLineNum": 49,
        "fixNodeStartChar": 1769,
        "fixNodeLength": 34,
        "sourceBeforeFix": "name=\"java:/ConnectionFactory\"",
        "sourceAfterFix": "lookup=\"java:/ConnectionFactory\""
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "486b290863a66641b0ec30dbf2d9e349733cae44",
        "fixCommitParentSHA1": "2f64d221e1f4d11a64838effa7742ac89884f508",
        "bugFilePath": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java",
        "fixPatch": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java\nindex cf6b749..a9bae62 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java\n@@ -1148,7 +1148,7 @@\n    */\n   public void closeRegion(final String regionname, final String serverName)\n   throws IOException {\n-    closeRegion(Bytes.toBytesBinary(regionname), serverName);\n+    closeRegion(Bytes.toBytes(regionname), serverName);\n   }\n \n   /**\n@@ -1266,7 +1266,7 @@\n    */\n   public void flush(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n-    flush(Bytes.toBytesBinary(tableNameOrRegionName));\n+    flush(Bytes.toBytes(tableNameOrRegionName));\n   }\n \n   /**\n@@ -1335,7 +1335,7 @@\n    */\n   public void compact(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n-    compact(Bytes.toBytesBinary(tableNameOrRegionName));\n+    compact(Bytes.toBytes(tableNameOrRegionName));\n   }\n \n   /**\n@@ -1362,7 +1362,7 @@\n    */\n   public void compact(String tableOrRegionName, String columnFamily)\n     throws IOException,  InterruptedException {\n-    compact(Bytes.toBytesBinary(tableOrRegionName), Bytes.toBytes(columnFamily));\n+    compact(Bytes.toBytes(tableOrRegionName), Bytes.toBytes(columnFamily));\n   }\n \n   /**\n@@ -1389,7 +1389,7 @@\n    */\n   public void majorCompact(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n-    majorCompact(Bytes.toBytesBinary(tableNameOrRegionName));\n+    majorCompact(Bytes.toBytes(tableNameOrRegionName));\n   }\n \n   /**\n@@ -1696,7 +1696,7 @@\n    */\n   public void split(final String tableNameOrRegionName)\n   throws IOException, InterruptedException {\n-    split(Bytes.toBytesBinary(tableNameOrRegionName));\n+    split(Bytes.toBytes(tableNameOrRegionName));\n   }\n \n   /**\n@@ -1714,7 +1714,7 @@\n \n   public void split(final String tableNameOrRegionName,\n     final String splitPoint) throws IOException, InterruptedException {\n-    split(Bytes.toBytesBinary(tableNameOrRegionName), Bytes.toBytesBinary(splitPoint));\n+    split(Bytes.toBytes(tableNameOrRegionName), Bytes.toBytes(splitPoint));\n   }\n \n   /**\n",
        "projectName": "apache.hbase",
        "bugLineNum": 1269,
        "bugNodeStartChar": 50613,
        "bugNodeLength": 42,
        "fixLineNum": 1269,
        "fixNodeStartChar": 50613,
        "fixNodeLength": 36,
        "sourceBeforeFix": "Bytes.toBytesBinary(tableNameOrRegionName)",
        "sourceAfterFix": "Bytes.toBytes(tableNameOrRegionName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b662fe84c50386be4404bb2e1a50cd592e1196b7",
        "fixCommitParentSHA1": "73780536a6eb2cb618b70ead6dfc7f282213edab",
        "bugFilePath": "indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskRunnerUtils.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskRunnerUtils.java b/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskRunnerUtils.java\nindex 176a3a1..6352b86 100644\n--- a/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskRunnerUtils.java\n+++ b/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskRunnerUtils.java\n@@ -99,12 +99,12 @@\n     }\n   }\n \n-  public static URL makeWorkerURL(Worker worker, String pathFormat, Object... pathParams)\n+  public static URL makeWorkerURL(Worker worker, String pathFormat, String... pathParams)\n   {\n     Preconditions.checkArgument(pathFormat.startsWith(\"/\"), \"path must start with '/': %s\", pathFormat);\n     final String path = StringUtils.format(\n         pathFormat,\n-        Arrays.stream(pathParams).map(s -> StringUtils.urlEncode(s.toString())).toArray()\n+        Arrays.stream(pathParams).map(StringUtils::urlEncode).toArray()\n     );\n \n     try {\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 102,
        "bugNodeStartChar": 3335,
        "bugNodeLength": 20,
        "fixLineNum": 102,
        "fixNodeStartChar": 3335,
        "fixNodeLength": 20,
        "sourceBeforeFix": "Object... pathParams",
        "sourceAfterFix": "String... pathParams"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5ac0dcd1b04e38a3dbe11a94897cc0a34ef2d5ec",
        "fixCommitParentSHA1": "6ea901b1c7e37d2e5486a9910f2819bae0b030b6",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex e1bd308..ac4b98d 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -264,7 +264,7 @@\n \t}\n \n \t@Override\n-\tpublic void log (String tag, String message, Exception exception) {\n+\tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n \t\t\tSystem.out.println(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 267,
        "bugNodeStartChar": 8061,
        "bugNodeLength": 19,
        "fixLineNum": 267,
        "fixNodeStartChar": 8061,
        "fixNodeLength": 19,
        "sourceBeforeFix": "Exception exception",
        "sourceAfterFix": "Throwable exception"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "dc8eb8e8adcc4ca9f809c62900348854537bd57b",
        "fixCommitParentSHA1": "3659767e0a54fe4d02ec96b110a521f6edb031c2",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/ScalatraServerCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/ScalatraServerCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/ScalatraServerCodegen.java\nindex b148a4d..63f43df 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/ScalatraServerCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/ScalatraServerCodegen.java\n@@ -42,7 +42,7 @@\n                         \"import\", \"public\", \"throws\", \"case\", \"enum\", \"instanceof\", \"return\", \"transient\",\n                         \"catch\", \"extends\", \"int\", \"short\", \"try\", \"char\", \"final\", \"interface\", \"static\",\n                         \"void\", \"class\", \"finally\", \"long\", \"strictfp\", \"volatile\", \"const\", \"float\",\n-                        \"native\", \"super\", \"while\")\n+                        \"native\", \"super\", \"while\", \"type\")\n         );\n \n         defaultIncludes = new HashSet<String>(\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 38,
        "bugNodeStartChar": 1389,
        "bugNodeLength": 671,
        "fixLineNum": 38,
        "fixNodeStartChar": 1389,
        "fixNodeLength": 679,
        "sourceBeforeFix": "Arrays.asList(\"abstract\",\"continue\",\"for\",\"new\",\"switch\",\"assert\",\"default\",\"if\",\"package\",\"synchronized\",\"boolean\",\"do\",\"goto\",\"private\",\"this\",\"break\",\"double\",\"implements\",\"protected\",\"throw\",\"byte\",\"else\",\"import\",\"public\",\"throws\",\"case\",\"enum\",\"instanceof\",\"return\",\"transient\",\"catch\",\"extends\",\"int\",\"short\",\"try\",\"char\",\"final\",\"interface\",\"static\",\"void\",\"class\",\"finally\",\"long\",\"strictfp\",\"volatile\",\"const\",\"float\",\"native\",\"super\",\"while\")",
        "sourceAfterFix": "Arrays.asList(\"abstract\",\"continue\",\"for\",\"new\",\"switch\",\"assert\",\"default\",\"if\",\"package\",\"synchronized\",\"boolean\",\"do\",\"goto\",\"private\",\"this\",\"break\",\"double\",\"implements\",\"protected\",\"throw\",\"byte\",\"else\",\"import\",\"public\",\"throws\",\"case\",\"enum\",\"instanceof\",\"return\",\"transient\",\"catch\",\"extends\",\"int\",\"short\",\"try\",\"char\",\"final\",\"interface\",\"static\",\"void\",\"class\",\"finally\",\"long\",\"strictfp\",\"volatile\",\"const\",\"float\",\"native\",\"super\",\"while\",\"type\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
        "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 54,
        "bugNodeStartChar": 2090,
        "bugNodeLength": 21,
        "fixLineNum": 54,
        "fixNodeStartChar": 2097,
        "fixNodeLength": 16,
        "sourceBeforeFix": "lockForRegularUsage()",
        "sourceAfterFix": "lockForRescale()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\nindex d655239..aa1bc16 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1911,
        "bugNodeStartChar": 85265,
        "bugNodeLength": 22,
        "fixLineNum": 1911,
        "fixNodeStartChar": 85265,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(561)",
        "sourceAfterFix": "new StringBuilder(560)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "5d40c31aa7c36597ce311bca7da61a0e2773e7d2",
        "fixCommitParentSHA1": "a30db7c29a77131e5f4bc422dd35fe4d4392dcaa",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\nindex e3d67fb..2ac2c1a 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\n@@ -265,7 +265,7 @@\n \t\t\t\t\tlogger.debug(\"NODE {}: DEAD node.\", node.getNodeId());\n \t\t\t\t\t// The node is dead, but we may have already started a Heal\n \t\t\t\t\t// If so, don't start it again!\n-\t\t\t\t\tif(isNodeHealing(node.getNodeId())) {\n+\t\t\t\t\tif(!isNodeHealing(node.getNodeId())) {\n \t\t\t\t\t\tlogger.debug(\"NODE {}: DEAD node - requesting network heal.\", node.getNodeId());\n \n \t\t\t\t\t\thealNode(node.getNodeId());\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 268,
        "bugNodeStartChar": 8791,
        "bugNodeLength": 31,
        "fixLineNum": 268,
        "fixNodeStartChar": 8791,
        "fixNodeLength": 32,
        "sourceBeforeFix": "isNodeHealing(node.getNodeId())",
        "sourceAfterFix": "!isNodeHealing(node.getNodeId())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f79a34aa3ab947603330680019cab43a23a29b17",
        "fixCommitParentSHA1": "1c987e77eaa2baf786023cfff437a409f4623221",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/descriptors/PerformanceDescriptors.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/descriptors/PerformanceDescriptors.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/descriptors/PerformanceDescriptors.java\nindex cec4c94..ac00eb8 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/descriptors/PerformanceDescriptors.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/descriptors/PerformanceDescriptors.java\n@@ -113,7 +113,7 @@\n \n \t\t@Override\n \t\tpublic boolean ignore(String targetName) {\n-\t\t\treturn !Arrays.asList(\"Java\", \"CSharp\", \"Python2\", \"Python3\", \"Node\").contains(targetName);\n+\t\t\treturn !Arrays.asList(\"Java\", \"CSharp\", \"Python2\", \"Python3\", \"Node\", \"Cpp\").contains(targetName);\n \t\t}\n \t}\n \n@@ -199,7 +199,7 @@\n \t\t@Override\n \t\tpublic boolean ignore(String targetName) {\n \t\t\t// passes, but still too slow in Python and JavaScript\n-\t\t\treturn !Arrays.asList(\"Java\", \"CSharp\").contains(targetName);\n+\t\t\treturn !Arrays.asList(\"Java\", \"CSharp\", \"Cpp\").contains(targetName);\n \t\t}\n \t}\n \n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 202,
        "bugNodeStartChar": 25070,
        "bugNodeLength": 31,
        "fixLineNum": 202,
        "fixNodeStartChar": 25070,
        "fixNodeLength": 38,
        "sourceBeforeFix": "Arrays.asList(\"Java\",\"CSharp\")",
        "sourceAfterFix": "Arrays.asList(\"Java\",\"CSharp\",\"Cpp\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e99aac5890b67ae0705b0e970f657239ee9ee1ab",
        "fixCommitParentSHA1": "624b7e05d70307ae2881d55c81a707723f377a8b",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java b/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\nindex 0a1ed49..dbb0fe8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\n@@ -50,7 +50,9 @@\n             op.run();\n             op.afterRun();\n         }\n-        getOrCreateContainer().unlock(dataKey, caller, threadId);\n+        // changed to forceUnlock because replica-sync of lock causes problems, same as IMap\n+        // real solution is to make 'lock-and-get' backup-aware\n+        getOrCreateContainer().forceUnlock(dataKey);\n     }\n \n     protected void writeInternal(ObjectDataOutput out) throws IOException {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 53,
        "bugNodeStartChar": 1846,
        "bugNodeLength": 56,
        "fixLineNum": 55,
        "fixNodeStartChar": 2003,
        "fixNodeLength": 43,
        "sourceBeforeFix": "getOrCreateContainer().unlock(dataKey,caller,threadId)",
        "sourceAfterFix": "getOrCreateContainer().forceUnlock(dataKey)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "ed0f4cc76b722fb5470d2fa0cbcbae9597385b8d",
        "fixCommitParentSHA1": "bedd71bb01675ff051529ce23ef277c3aa9e4ac5",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\nindex 4920e05..41b11df 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/context/thrift/SpanThriftMessageConverter.java\n@@ -204,7 +204,7 @@\n         if (spanEvent.getDepth() != -1) {\n             tSpanEvent.setDepth(spanEvent.getDepth());\n         }\n-        if (spanEvent.getNextSpanId() == -1) {\n+        if (spanEvent.getNextSpanId() != -1) {\n             tSpanEvent.setNextSpanId(spanEvent.getNextSpanId());\n         }\n \n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 207,
        "bugNodeStartChar": 8707,
        "bugNodeLength": 31,
        "fixLineNum": 207,
        "fixNodeStartChar": 8707,
        "fixNodeLength": 31,
        "sourceBeforeFix": "spanEvent.getNextSpanId() == -1",
        "sourceAfterFix": "spanEvent.getNextSpanId() != -1"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 170,
        "bugNodeStartChar": 5202,
        "bugNodeLength": 7,
        "fixLineNum": 170,
        "fixNodeStartChar": 5202,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=50",
        "sourceAfterFix": "id=48"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fb2ec00cc72fa6edc0894e337b8176adcc2eb974",
        "fixCommitParentSHA1": "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java\nindex cea7023..ae02c04 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java\n@@ -68,7 +68,7 @@\n                     Enum.valueOf(optionClass, optionStr.trim().toUpperCase(Locale.ENGLISH));\n         }\n         catch (IllegalArgumentException iae) {\n-            throw new ConversionException(\"unable to parse \" + abstractOption, iae);\n+            throw new ConversionException(\"unable to parse \" + optionStr, iae);\n         }\n     }\n \n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 71,
        "bugNodeStartChar": 2810,
        "bugNodeLength": 35,
        "fixLineNum": 71,
        "fixNodeStartChar": 2810,
        "fixNodeLength": 30,
        "sourceBeforeFix": "\"unable to parse \" + abstractOption",
        "sourceAfterFix": "\"unable to parse \" + optionStr"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "8b0fec4451e8147bbe5bdbf29d235744c9aca01a",
        "fixCommitParentSHA1": "ead4c3a90e18ae863fb73be984f1448b8f701a7e",
        "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java",
        "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\nindex 283a029..2fb28bc 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n@@ -202,7 +202,7 @@\n             positionKey2E.setAttribute(\"attr.type\", \"float\");\n             positionKey2E.setAttribute(\"for\", \"node\");\n             root.appendChild(positionKey2E);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionKey3E = document.createElement(\"key\");\n                 positionKey3E.setAttribute(\"id\", \"z\");\n                 positionKey3E.setAttribute(\"attr.name\", \"z\");\n@@ -388,7 +388,7 @@\n             nodeE.appendChild(positionXE);\n             Element positionYE = createNodePositionY(document, n);\n             nodeE.appendChild(positionYE);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionZE = createNodePositionZ(document, n);\n                 nodeE.appendChild(positionZE);\n             }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 391,
        "bugNodeStartChar": 14977,
        "bugNodeLength": 24,
        "fixLineNum": 391,
        "fixNodeStartChar": 14977,
        "fixNodeLength": 24,
        "sourceBeforeFix": "minZ != 0f && maxZ != 0f",
        "sourceAfterFix": "minZ != 0f || maxZ != 0f"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8abd59029e7c0bc0973b492fd84a386b26661bc7",
        "fixCommitParentSHA1": "d8ed9fe97cd10f64b7e2ffbf8d36c7a198b6f23b",
        "bugFilePath": "dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java",
        "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\nindex a91aa58..574402f 100644\n--- a/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty/src/main/java/org/apache/dubbo/remoting/transport/netty/NettyClient.java\n@@ -67,7 +67,7 @@\n         // @see org.jboss.netty.channel.socket.SocketChannelConfig\r\n         bootstrap.setOption(\"keepAlive\", true);\r\n         bootstrap.setOption(\"tcpNoDelay\", true);\r\n-        bootstrap.setOption(\"connectTimeoutMillis\", getTimeout());\r\n+        bootstrap.setOption(\"connectTimeoutMillis\", getConnectTimeout());\r\n         final NettyHandler nettyHandler = new NettyHandler(getUrl(), this);\r\n         bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\r\n             @Override\r\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 70,
        "bugNodeStartChar": 3155,
        "bugNodeLength": 12,
        "fixLineNum": 70,
        "fixNodeStartChar": 3086,
        "fixNodeLength": 19,
        "sourceBeforeFix": "getTimeout()",
        "sourceAfterFix": "getConnectTimeout()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e9fbd7f493863da1e68776473d8b5d03861daa6f",
        "fixCommitParentSHA1": "1fae50db236e80cfc289c339706ccc34f7c4ff37",
        "bugFilePath": "pact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/sort/AsynchonousPartialSorterITCase.java",
        "fixPatch": "diff --git a/pact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/sort/AsynchonousPartialSorterITCase.java b/pact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/sort/AsynchonousPartialSorterITCase.java\nindex cafd24b..ec2fd60 100644\n--- a/pact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/sort/AsynchonousPartialSorterITCase.java\n+++ b/pact/pact-runtime/src/test/java/eu/stratosphere/pact/runtime/sort/AsynchonousPartialSorterITCase.java\n@@ -134,7 +134,7 @@\n \t\t\t// merge iterator\n \t\t\tLOG.debug(\"Initializing sortmerger...\");\n \t\t\tSorter<PactRecord> sorter = new AsynchronousPartialSorter<PactRecord>(this.memoryManager, source,\n-\t\t\t\tthis.parentTask, this.serializer, this.comparator, 32 * 1024 * 1024);\n+\t\t\t\tthis.parentTask, this.serializer, this.comparator, 10 * 1024 * 1024);\n \t\n \t\t\trunPartialSorter(sorter, NUM_RECORDS, 2);\n \t\t}\n@@ -157,9 +157,9 @@\n \t\t\t// merge iterator\n \t\t\tLOG.debug(\"Initializing sortmerger...\");\n \t\t\tSorter<PactRecord> sorter = new AsynchronousPartialSorter<PactRecord>(this.memoryManager, source,\n-\t\t\t\tthis.parentTask, this.serializer, this.comparator, 32 * 1024 * 1024);\n+\t\t\t\tthis.parentTask, this.serializer, this.comparator, 10 * 1024 * 1024);\n \t\n-\t\t\trunPartialSorter(sorter, NUM_RECORDS, 28);\n+\t\t\trunPartialSorter(sorter, NUM_RECORDS, 25);\n \t\t}\n \t\tcatch (Exception t) {\n \t\t\tt.printStackTrace();\n",
        "projectName": "apache.flink",
        "bugLineNum": 137,
        "bugNodeStartChar": 5193,
        "bugNodeLength": 16,
        "fixLineNum": 137,
        "fixNodeStartChar": 5193,
        "fixNodeLength": 16,
        "sourceBeforeFix": "32 * 1024 * 1024",
        "sourceAfterFix": "10 * 1024 * 1024"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b6555180a56d77e9043823160de051498ff480da",
        "fixCommitParentSHA1": "4e37f07aaad1d895ff0195cf580a28d0cfebe178",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java b/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\nindex 87ce4cd..9ed7930 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\n@@ -153,7 +153,7 @@\n         //stop threads\n         stopTest.set(true);\n         shadowMember.join();\n-        clearFromMember.start();\n+        clearFromMember.join();\n         populateClientNearCache.join();\n         putFromMember.join();\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 156,
        "bugNodeStartChar": 5641,
        "bugNodeLength": 23,
        "fixLineNum": 156,
        "fixNodeStartChar": 5641,
        "fixNodeLength": 22,
        "sourceBeforeFix": "clearFromMember.start()",
        "sourceAfterFix": "clearFromMember.join()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "d0b3bfdbb0e2bb51986d0bb1a7f93f71d480168c",
        "fixCommitParentSHA1": "1669f287d4926e65dfe82bde5591222fcf81e8dc",
        "bugFilePath": "library/src/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java",
        "fixPatch": "diff --git a/library/src/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java b/library/src/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java\nindex 26ee407..0222515 100644\n--- a/library/src/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java\n+++ b/library/src/com/handmark/pulltorefresh/library/PullToRefreshAdapterViewBase.java\n@@ -172,8 +172,7 @@\n \t\t\t\t((ViewGroup) newEmptyViewParent).removeView(newEmptyView);\n \t\t\t}\n \n-\t\t\trefreshableViewWrapper.addView(newEmptyView, ViewGroup.LayoutParams.MATCH_PARENT,\n-\t\t\t\t\tViewGroup.LayoutParams.MATCH_PARENT);\n+\t\t\trefreshableViewWrapper.addView(newEmptyView);\n \t\t}\n \n \t\tif (mRefreshableView instanceof EmptyViewMethodAccessor) {\n",
        "projectName": "chrisbanes.Android-PullToRefresh",
        "bugLineNum": 175,
        "bugNodeStartChar": 6263,
        "bugNodeLength": 123,
        "fixLineNum": 175,
        "fixNodeStartChar": 6263,
        "fixNodeLength": 44,
        "sourceBeforeFix": "refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)",
        "sourceAfterFix": "refreshableViewWrapper.addView(newEmptyView)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "97b8bc59615d4da0c51a91fef22ab462a8d69766",
        "fixCommitParentSHA1": "a00931d4ac6f79ee15024c9d4083d12f55c294f2",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentationTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentationTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentationTest.java\nindex 0afd396..52052bc 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentationTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePresentationTest.java\n@@ -76,7 +76,7 @@\n         final Object child = new ParseTreeTablePresentation(null).getChild(tree, 1);\n         Assert.assertTrue(\"Invalid child type\", child instanceof DetailAST);\n         Assert.assertEquals(\"Invalid child token type\",\n-                TokenTypes.BLOCK_COMMENT_BEGIN, ((AST) child).getType());\n+                TokenTypes.BLOCK_COMMENT_BEGIN, ((DetailAST) child).getType());\n     }\n \n     @Test\n@@ -86,7 +86,7 @@\n         final Object child = parseTree.getChild(tree, 1);\n         Assert.assertTrue(\"Invalid child type\", child instanceof DetailAST);\n         Assert.assertEquals(\"Invalid child token type\",\n-                TokenTypes.BLOCK_COMMENT_BEGIN, ((AST) child).getType());\n+                TokenTypes.BLOCK_COMMENT_BEGIN, ((DetailAST) child).getType());\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 79,
        "bugNodeStartChar": 3333,
        "bugNodeLength": 11,
        "fixLineNum": 79,
        "fixNodeStartChar": 3333,
        "fixNodeLength": 17,
        "sourceBeforeFix": "(AST)child",
        "sourceAfterFix": "(DetailAST)child"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "cb50434e73c2a60893be26fa49109e759df834f6",
        "fixCommitParentSHA1": "afc13ee150119209023727ad3d69ce15d2354df3",
        "bugFilePath": "src/test/java/com/zaxxer/hikari/TestConcurrentBag.java",
        "fixPatch": "diff --git a/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java b/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java\nindex a943487..397dc08 100644\n--- a/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java\n+++ b/src/test/java/com/zaxxer/hikari/TestConcurrentBag.java\n@@ -103,15 +103,15 @@\n       Assert.assertEquals(0, bag.values(8).size());\n \n       HikariPool pool = TestElf.getPool(ds);\n-      PoolBagEntry reserved = new PoolBagEntry(null, TestElf.getPool(ds));\n+      PoolBagEntry reserved = new PoolBagEntry(null, 0, TestElf.getPool(ds));\n       bag.add(reserved);\n       bag.reserve(reserved);      // reserved\n \n-      PoolBagEntry inuse = new PoolBagEntry(null, pool);\n+      PoolBagEntry inuse = new PoolBagEntry(null, 0, pool);\n       bag.add(inuse);\n       bag.borrow(2, TimeUnit.MILLISECONDS); // in use\n       \n-      PoolBagEntry notinuse = new PoolBagEntry(null, pool);\n+      PoolBagEntry notinuse = new PoolBagEntry(null, 0, pool);\n       bag.add(notinuse); // not in use\n \n       bag.dumpState();\n@@ -135,7 +135,7 @@\n \n       bag.close();\n       try {\n-         PoolBagEntry bagEntry = new PoolBagEntry(null, pool);\n+         PoolBagEntry bagEntry = new PoolBagEntry(null, 0, pool);\n          bag.add(bagEntry);\n          Assert.assertNotEquals(bagEntry, bag.borrow(100, TimeUnit.MILLISECONDS));\n       }\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 110,
        "bugNodeStartChar": 3218,
        "bugNodeLength": 28,
        "fixLineNum": 110,
        "fixNodeStartChar": 3218,
        "fixNodeLength": 31,
        "sourceBeforeFix": "new PoolBagEntry(null,pool)",
        "sourceAfterFix": "new PoolBagEntry(null,0,pool)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "35d27031902e30f4c9ed1f0a76800ef157449925",
        "fixCommitParentSHA1": "f0ee245e2a2c879785374d7b9649e7617b24b295",
        "bugFilePath": "messaging/src/main/java/org/jboss/as/messaging/CommonAttributes.java",
        "fixPatch": "diff --git a/messaging/src/main/java/org/jboss/as/messaging/CommonAttributes.java b/messaging/src/main/java/org/jboss/as/messaging/CommonAttributes.java\nindex 71f17bc..75004eb 100644\n--- a/messaging/src/main/java/org/jboss/as/messaging/CommonAttributes.java\n+++ b/messaging/src/main/java/org/jboss/as/messaging/CommonAttributes.java\n@@ -179,7 +179,7 @@\n \n     SimpleAttributeDefinition GROUP_PORT = new SimpleAttributeDefinition(\"group-port\", ModelType.INT, false);\n \n-    SimpleAttributeDefinition HA = new SimpleAttributeDefinition(\"ha\", new ModelNode().set(HornetQClient.DEFAULT_HA),  ModelType.BOOLEAN, false);\n+    SimpleAttributeDefinition HA = new SimpleAttributeDefinition(\"ha\", new ModelNode().set(HornetQClient.DEFAULT_HA),  ModelType.BOOLEAN, true);\n \n     SimpleAttributeDefinition ID_CACHE_SIZE = new SimpleAttributeDefinition(\"id-cache-size\",\n             new ModelNode().set(ConfigurationImpl.DEFAULT_ID_CACHE_SIZE), ModelType.INT,  true, MeasurementUnit.NONE);\n@@ -499,7 +499,7 @@\n     };\n \n     AttributeDefinition[] BROADCAST_GROUP_ATTRIBUTES = {\n-        LOCAL_BIND_ADDRESS, LOCAL_BIND_PORT, GROUP_ADDRESS, GROUP_PORT, ConnectorRefsAttribute.BROADCAST_GROUP\n+        LOCAL_BIND_ADDRESS, LOCAL_BIND_PORT, GROUP_ADDRESS, GROUP_PORT, BROADCAST_PERIOD, ConnectorRefsAttribute.BROADCAST_GROUP\n     };\n \n     AttributeDefinition[] DISCOVERY_GROUP_ATTRIBUTES = {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 182,
        "bugNodeStartChar": 11827,
        "bugNodeLength": 109,
        "fixLineNum": 182,
        "fixNodeStartChar": 11827,
        "fixNodeLength": 108,
        "sourceBeforeFix": "new SimpleAttributeDefinition(\"ha\",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,false)",
        "sourceAfterFix": "new SimpleAttributeDefinition(\"ha\",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a63faf44e1b103a49d25a15c720fc5940ae9fc07",
        "fixCommitParentSHA1": "2b0a4f13844bbb93482c52bd2c60a55e3fa24a88",
        "bugFilePath": "retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java",
        "fixPatch": "diff --git a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\nindex 5897161..dea046f 100644\n--- a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n+++ b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n@@ -73,10 +73,10 @@\n     assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyClass = new TypeToken<Maybe<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyClass = new TypeToken<Flowable<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();\n@@ -86,10 +86,10 @@\n     assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyWildcard = new TypeToken<Maybe<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyWildcard = new TypeToken<Flowable<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyGeneric = new TypeToken<Observable<List<String>>>() {}.getType();\n@@ -99,10 +99,10 @@\n     assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type mBodyGeneric = new TypeToken<Maybe<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type fBodyGeneric = new TypeToken<Flowable<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n \n     Type oResponseClass = new TypeToken<Observable<Response<String>>>() {}.getType();\n@@ -112,10 +112,10 @@\n     assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseClass = new TypeToken<Maybe<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseClass = new TypeToken<Flowable<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();\n@@ -125,10 +125,10 @@\n     assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseWildcard = new TypeToken<Maybe<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseWildcard = new TypeToken<Flowable<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultClass = new TypeToken<Observable<Result<String>>>() {}.getType();\n@@ -138,10 +138,10 @@\n     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();\n@@ -151,10 +151,10 @@\n     assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultWildcard = new TypeToken<Maybe<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultWildcard = new TypeToken<Flowable<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n   }\n \n",
        "projectName": "square.retrofit",
        "bugLineNum": 154,
        "bugNodeStartChar": 7586,
        "bugNodeLength": 54,
        "fixLineNum": 154,
        "fixNodeStartChar": 7586,
        "fixNodeLength": 54,
        "sourceBeforeFix": "factory.get(sResultWildcard,NO_ANNOTATIONS,retrofit)",
        "sourceAfterFix": "factory.get(mResultWildcard,NO_ANNOTATIONS,retrofit)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "291e15e330c9b71a0d0238e9d56d4b2a473356af",
        "fixCommitParentSHA1": "fe100860a12e0e03cdf5b717f8efd267b66e3bae",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/TransformToTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/TransformToTest.java b/camel-core/src/test/java/org/apache/camel/processor/TransformToTest.java\nindex b61690f..48def13 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/TransformToTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/TransformToTest.java\n@@ -52,7 +52,7 @@\n         context.addRoutes(new RouteBuilder() {\n             @Override\n             public void configure() throws Exception {\n-                from(\"direct:bar\").transform(to(\"bar\"));\n+                from(\"direct:bar\").transform(sendTo(\"bar\"));\n             }\n         });\n         context.start();\n@@ -71,7 +71,7 @@\n             @Override\n             public void configure() throws Exception {\n                 from(\"direct:start\")\n-                    .transform(to(\"direct:foo\")).to(\"mock:result\");\n+                    .transform(sendTo(\"direct:foo\")).to(\"mock:result\");\n \n                 from(\"direct:foo\").process(new Processor() {\n                     public void process(Exchange exchange) throws Exception {\n",
        "projectName": "apache.camel",
        "bugLineNum": 74,
        "bugNodeStartChar": 2680,
        "bugNodeLength": 16,
        "fixLineNum": 74,
        "fixNodeStartChar": 2680,
        "fixNodeLength": 20,
        "sourceBeforeFix": "to(\"direct:foo\")",
        "sourceAfterFix": "sendTo(\"direct:foo\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ad687b722b4d0c3461fdb7c45206257145484d8a",
        "fixCommitParentSHA1": "5f9a7741ef180ca39da78f77e56978fb1be69857",
        "bugFilePath": "core/client/src/main/java/alluxio/client/file/FileSystemUtils.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java b/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\nindex 9e9be66..ff54336 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\n@@ -170,7 +170,7 @@\n       URIStatus uriStatus = fs.getStatus(uri);\n       Permission perm = new Permission(uriStatus.getOwner(), uriStatus.getGroup(),\n           (short) uriStatus.getMode());\n-      OutputStream out = closer.register(ufs.create(dstPath.getPath(),\n+      OutputStream out = closer.register(ufs.create(dstPath.toString(),\n           new CreateOptions().setPermission(perm)));\n       ret = IOUtils.copyLarge(in, out);\n     } catch (Exception e) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 173,
        "bugNodeStartChar": 7755,
        "bugNodeLength": 17,
        "fixLineNum": 173,
        "fixNodeStartChar": 7755,
        "fixNodeLength": 18,
        "sourceBeforeFix": "dstPath.getPath()",
        "sourceAfterFix": "dstPath.toString()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0a1836b22646342828e96b1d0e7dad9c8bfdabfe",
        "fixCommitParentSHA1": "e208a729c62ea7cd16b2592329bdea95bc0800a3",
        "bugFilePath": "components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java",
        "fixPatch": "diff --git a/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java b/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java\nindex 6380955..1115f34 100644\n--- a/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java\n+++ b/components/camel-jms/src/test/java/org/apache/camel/component/jms/tx/JmsToJmsTransactedTest.java\n@@ -73,7 +73,7 @@\n         bar.expectedMessageCount(0);\n \n         MockEndpoint start = getMockEndpoint(\"mock:start\");\n-        start.expectedMessageCount(6); // default number of redeliveries by AMQ\n+        start.expectedMessageCount(7); // default number of redeliveries by AMQ is 6 so we get 6+1\n \n         template.sendBody(\"activemq:queue:foo\", \"Hello World\");\n \n@@ -100,7 +100,7 @@\n         bar.expectedMessageCount(0);\n \n         MockEndpoint start = getMockEndpoint(\"mock:start\");\n-        start.expectedMessageCount(6); // default number of redeliveries by AMQ\n+        start.expectedMessageCount(7); // default number of redeliveries by AMQ is 6 so we get 6+1\n \n         template.sendBody(\"activemq:queue:foo\", \"Hello World\");\n \n@@ -131,7 +131,7 @@\n         bar.expectedMessageCount(0);\n \n         MockEndpoint start = getMockEndpoint(\"mock:start\");\n-        start.expectedMessageCount(6);\n+        start.expectedMessageCount(7); // default number of redeliveries by AMQ is 6 so we get 6+1\n \n         template.sendBody(\"activemq:queue:foo\", \"Hello World\");\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 76,
        "bugNodeStartChar": 2790,
        "bugNodeLength": 29,
        "fixLineNum": 76,
        "fixNodeStartChar": 2790,
        "fixNodeLength": 29,
        "sourceBeforeFix": "start.expectedMessageCount(6)",
        "sourceAfterFix": "start.expectedMessageCount(7)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "7a98001b7097bd4b0778e22cc1f9f140013edf16",
        "fixCommitParentSHA1": "06a80fd3e2ae65e030dff4495dc30424780f65c4",
        "bugFilePath": "components/camel-grpc/src/test/java/org/apache/camel/component/grpc/GrpcConsumerConcurrentTest.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/test/java/org/apache/camel/component/grpc/GrpcConsumerConcurrentTest.java b/components/camel-grpc/src/test/java/org/apache/camel/component/grpc/GrpcConsumerConcurrentTest.java\nindex 01b92d8..c341e51 100644\n--- a/components/camel-grpc/src/test/java/org/apache/camel/component/grpc/GrpcConsumerConcurrentTest.java\n+++ b/components/camel-grpc/src/test/java/org/apache/camel/component/grpc/GrpcConsumerConcurrentTest.java\n@@ -41,7 +41,7 @@\n \n     private static final int GRPC_ASYNC_REQUEST_TEST_PORT = AvailablePortFinder.getNextAvailable();\n     private static final int GRPC_HEADERS_TEST_PORT = AvailablePortFinder.getNextAvailable();\n-    private static final int CONCURRENT_THREAD_COUNT = 300;\n+    private static final int CONCURRENT_THREAD_COUNT = 30;\n     private static final int ROUNDS_PER_THREAD_COUNT = 10;\n     private static final String GRPC_TEST_PING_VALUE = \"PING\";\n     private static final String GRPC_TEST_PONG_VALUE = \"PONG\";\n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1908,
        "bugNodeLength": 29,
        "fixLineNum": 44,
        "fixNodeStartChar": 1908,
        "fixNodeLength": 28,
        "sourceBeforeFix": "CONCURRENT_THREAD_COUNT=300",
        "sourceAfterFix": "CONCURRENT_THREAD_COUNT=30"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
        "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 943457b..6abbcfa 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -66,22 +66,22 @@\n         HttpClient http = new HttpClient();\n \n         // empty User list\n-        List<User> users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<User> users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(users.size() == 0);\n         trySerializeable(users);\n \n         // empty Status list\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(statuses.size() == 0);\n         trySerializeable(statuses);\n \n         // empty DirectMessages list\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n         assertTrue(directMessages.size() == 0);\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n+        List<Trends> trends = Trends.createTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -131,7 +131,7 @@\n         List<User> users;\n \n         // User list\n-        users = User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n+        users = User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json\"));\n         assertTrue(users.size() > 0);\n         trySerializeable(users);\n     }\n@@ -139,7 +139,7 @@\n     public void testStatusAsJSON() throws Exception {\n         // single Status\n         HttpClient http = new HttpClient();\n-        List<Status> statuses = Status.constructStatuses(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n+        List<Status> statuses = Status.createStatuseList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/public_timeline.json\"));\n         Status status = statuses.get(0);\n         assertEquals(new Date(1259041785000l), status.getCreatedAt());\n         assertEquals(6000554383l, status.getId());\n@@ -175,7 +175,7 @@\n \n     public void testDirectMessagesAsJSON() throws Exception {\n         HttpClient http = new HttpClient();\n-        List<DirectMessage> directMessages = DirectMessage.constructDirectMessages(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n+        List<DirectMessage> directMessages = DirectMessage.createDirectMessageList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json\"));\n         DirectMessage dm = directMessages.get(0);\n         assertEquals(new java.util.Date(1248177356000l),dm.getCreatedAt());\n         assertEquals(6358482,dm.getRecipient().getId());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 69,
        "bugNodeStartChar": 2756,
        "bugNodeLength": 126,
        "fixLineNum": 69,
        "fixNodeStartChar": 2756,
        "fixNodeLength": 114,
        "sourceBeforeFix": "User.createCursorSupportUserList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))",
        "sourceAfterFix": "User.createUsersList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d737cae77778780237425d41e24966ace83e0766",
        "fixCommitParentSHA1": "398a4d014161af9fa14e5e2807c7d24f4547b101",
        "bugFilePath": "servers/src/main/java/tachyon/worker/block/meta/BlockMeta.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/block/meta/BlockMeta.java b/servers/src/main/java/tachyon/worker/block/meta/BlockMeta.java\nindex e19367b..8ff913e 100644\n--- a/servers/src/main/java/tachyon/worker/block/meta/BlockMeta.java\n+++ b/servers/src/main/java/tachyon/worker/block/meta/BlockMeta.java\n@@ -30,7 +30,8 @@\n \n   public BlockMeta(TempBlockMeta tempBlock) {\n     super(tempBlock.getBlockId(), tempBlock.getParentDir());\n-    mBlockSize = new File(tempBlock.getCommitPath()).length();\n+    // NOTE: TempBlockMeta must be committed before the actual data block file is moved.\n+    mBlockSize = new File(tempBlock.getPath()).length();\n   }\n \n   @Override\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 33,
        "bugNodeStartChar": 1264,
        "bugNodeLength": 25,
        "fixLineNum": 34,
        "fixNodeStartChar": 1353,
        "fixNodeLength": 19,
        "sourceBeforeFix": "tempBlock.getCommitPath()",
        "sourceAfterFix": "tempBlock.getPath()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "32f165cbc33d96609efab90bc4967278c975d0ef",
        "fixCommitParentSHA1": "628c87fca7a0e84580ea92f8ad9e725c8b64e73c",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java b/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\nindex 0a1ed49..dbb0fe8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/multimap/impl/txn/TxnCommitBackupOperation.java\n@@ -50,7 +50,9 @@\n             op.run();\n             op.afterRun();\n         }\n-        getOrCreateContainer().unlock(dataKey, caller, threadId);\n+        // changed to forceUnlock because replica-sync of lock causes problems, same as IMap\n+        // real solution is to make 'lock-and-get' backup-aware\n+        getOrCreateContainer().forceUnlock(dataKey);\n     }\n \n     protected void writeInternal(ObjectDataOutput out) throws IOException {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 53,
        "bugNodeStartChar": 1846,
        "bugNodeLength": 56,
        "fixLineNum": 55,
        "fixNodeStartChar": 2003,
        "fixNodeLength": 43,
        "sourceBeforeFix": "getOrCreateContainer().unlock(dataKey,caller,threadId)",
        "sourceAfterFix": "getOrCreateContainer().forceUnlock(dataKey)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "687cc25abdb33ef36b4031632874a8624610e8db",
        "fixCommitParentSHA1": "2718142cb7d112bc0b91a8bf0dc249c60184c716",
        "bugFilePath": "storm-netty/src/jvm/backtype/storm/messaging/netty/ControlMessage.java",
        "fixPatch": "diff --git a/storm-netty/src/jvm/backtype/storm/messaging/netty/ControlMessage.java b/storm-netty/src/jvm/backtype/storm/messaging/netty/ControlMessage.java\nindex 9a7f8cc..ec2292f 100644\n--- a/storm-netty/src/jvm/backtype/storm/messaging/netty/ControlMessage.java\n+++ b/storm-netty/src/jvm/backtype/storm/messaging/netty/ControlMessage.java\n@@ -31,11 +31,10 @@\n \n     /**\n      * encode the current Control Message into a channel buffer\n-     * @param bout\n      * @throws Exception\n      */\n     ChannelBuffer buffer() throws Exception {\n-        ChannelBufferOutputStream bout = new ChannelBufferOutputStream(ChannelBuffers.dynamicBuffer());      \n+        ChannelBufferOutputStream bout = new ChannelBufferOutputStream(ChannelBuffers.buffer(2));      \n         write(bout);\n         bout.close();\n         return bout.buffer();\n",
        "projectName": "apache.storm",
        "bugLineNum": 38,
        "bugNodeStartChar": 1011,
        "bugNodeLength": 30,
        "fixLineNum": 38,
        "fixNodeStartChar": 1011,
        "fixNodeLength": 24,
        "sourceBeforeFix": "ChannelBuffers.dynamicBuffer()",
        "sourceAfterFix": "ChannelBuffers.buffer(2)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 566,
        "bugNodeStartChar": 27156,
        "bugNodeLength": 170,
        "fixLineNum": 566,
        "fixNodeStartChar": 27156,
        "fixNodeLength": 170,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1f680192fefd2fde7f5e10fb1a34792a50e3246c",
        "fixCommitParentSHA1": "5112846b742d7bcb08310fdb02aaf449b3a00b2b",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncResponse.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncResponse.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncResponse.java\nindex 2ed40bb..ebe3f03 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncResponse.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncResponse.java\n@@ -230,7 +230,7 @@\n      */\n     /* @Override */\n     public boolean hasResponseStatus() {\n-        return (bodyParts != null ? true : false);\n+        return (status != null ? true : false);\n     }\n \n     /**\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 233,
        "bugNodeStartChar": 7922,
        "bugNodeLength": 17,
        "fixLineNum": 233,
        "fixNodeStartChar": 7922,
        "fixNodeLength": 14,
        "sourceBeforeFix": "bodyParts != null",
        "sourceAfterFix": "status != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f64bf581e7987690846b820cb4e2af554d49165e",
        "fixCommitParentSHA1": "cad45f9bbea8b5dc7b2491b512132367c9577b00",
        "bugFilePath": "examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java",
        "fixPatch": "diff --git a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\nindex a7580e7..6c6d26c 100644\n--- a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\n+++ b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\n@@ -100,7 +100,7 @@\n             // Set the aggregation strategy for aggregating the out message            \n             .multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true))\n                 // Send out the request to three different banks in parallel\n-                .setParallelProcessing(true).to(\"jms:queue2:bank1\", \"jms:queue2:bank2\", \"jms:queue2:bank3\");\n+                .parallelProcessing(true).to(\"jms:queue2:bank1\", \"jms:queue2:bank2\", \"jms:queue2:bank3\");\n         \n         // Each bank processor will process the message and put the response message back\n         from(\"jms:queue2:bank1\").process(new Bank(\"bank1\"));\n",
        "projectName": "apache.camel",
        "bugLineNum": 99,
        "bugNodeStartChar": 4079,
        "bugNodeLength": 374,
        "fixLineNum": 99,
        "fixNodeStartChar": 4079,
        "fixNodeLength": 371,
        "sourceBeforeFix": "from(\"jms:queue2:parallelLoanRequestQueue\").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)",
        "sourceAfterFix": "from(\"jms:queue2:parallelLoanRequestQueue\").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3691be4c1f9974b445e682c6d290306700eab602",
        "fixCommitParentSHA1": "38c360dd4f610f9a37b150246b2d92081c8d3135",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\nindex eaaf479..58f9ee7 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n@@ -232,7 +232,7 @@\n      * @throws javax.servlet.ServletException\n      */\n     protected AtmosphereHandlerWrapper map(HttpServletRequest req) throws ServletException {\n-        String path = req.getRequestURI();\n+        String path = req.getServletPath() + req.getPathInfo();\n         if (path == null || path.length() == 0) {\n             path = \"/*\";\n         }\n@@ -242,7 +242,7 @@\n             final Map<String, String> m = new HashMap<String, String>();\n             for (Map.Entry<String,AtmosphereHandlerWrapper> e : config.handlers().entrySet()) {\n                 UriTemplate t = new UriTemplate(e.getKey());\n-                logger.trace(\"Trying to map {} to {}\", t, path);\n+                logger.debug(\"Trying to map {} to {}\", t, path);\n                 if (t.match(path, m)) {\n                     atmosphereHandlerWrapper = e.getValue();\n                     logger.trace(\"Mapped {} to {}\", t, e.getValue());\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 245,
        "bugNodeStartChar": 10117,
        "bugNodeLength": 47,
        "fixLineNum": 245,
        "fixNodeStartChar": 10117,
        "fixNodeLength": 47,
        "sourceBeforeFix": "logger.trace(\"Trying to map {} to {}\",t,path)",
        "sourceAfterFix": "logger.debug(\"Trying to map {} to {}\",t,path)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2c309db03048d208ec81541395c69b58e14f7fd7",
        "fixCommitParentSHA1": "85e77153fcc5ac7cf14c917154ddef12204cade0",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex 7377511..987dfb5 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n@@ -1379,7 +1379,7 @@\n       throw new InvalidPathException(ExceptionMessage.DELETE_ROOT_DIRECTORY.getMessage());\n     }\n \n-    List<Pair<AlluxioURI, Inode>> delInodes = new LinkedList<>();\n+    List<Pair<AlluxioURI, Inode>> delInodes = new ArrayList<>();\n     List<Inode<?>> deletedInodes = new ArrayList<>();\n \n     Pair<AlluxioURI, Inode> inodePair = new Pair<AlluxioURI, Inode>(inodePath.getUri(), inode);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 1382,
        "bugNodeStartChar": 60318,
        "bugNodeLength": 12,
        "fixLineNum": 1382,
        "fixNodeStartChar": 60318,
        "fixNodeLength": 11,
        "sourceBeforeFix": "LinkedList<>",
        "sourceAfterFix": "ArrayList<>"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "7b511d8200aae05bef86085f9b101d37b9fce4ef",
        "fixCommitParentSHA1": "b5412c956359200f66076c4f99da163fb1df6ed5",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java\nindex 715123a..1d77385 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.java\n@@ -166,7 +166,7 @@\n         if (maskPayload) {\n             int random = (int) (Math.random() * Integer.MAX_VALUE);\n             mask = ByteBuffer.allocate(4).putInt(random).array();\n-            header.writeBytes(mask);\n+            out.writeBytes(mask);\n \n             int counter = 0;\n             for (int i = data.readerIndex(); i < data.writerIndex(); i ++) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 169,
        "bugNodeStartChar": 6340,
        "bugNodeLength": 23,
        "fixLineNum": 169,
        "fixNodeStartChar": 6340,
        "fixNodeLength": 20,
        "sourceBeforeFix": "header.writeBytes(mask)",
        "sourceAfterFix": "out.writeBytes(mask)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "98390cf27b0ce41447e0a104a8963b2cfdc20795",
        "fixCommitParentSHA1": "9be601a6b3dc046ea61e6bd8e5da6bdcf556f4e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongArray.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java\nindex 9ab512c..36e817f 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java\n@@ -97,7 +97,7 @@\n \r\n \tpublic void add (long value1, long value2, long value3, long value4) {\r\n \t\tlong[] items = this.items;\r\n-\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.75f)));\r\n+\t\tif (size + 3 >= items.length) items = resize(Math.max(8, (int)(size * 1.8f))); // 1.75 isn't enough when size=5.\r\n \t\titems[size] = value1;\r\n \t\titems[size + 1] = value2;\r\n \t\titems[size + 2] = value3;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 100,
        "bugNodeStartChar": 3990,
        "bugNodeLength": 12,
        "fixLineNum": 100,
        "fixNodeStartChar": 3891,
        "fixNodeLength": 11,
        "sourceBeforeFix": "size * 1.75f",
        "sourceAfterFix": "size * 1.8f"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4e6b29ac8fac0d15e6be7cf921e247e534898d16",
        "fixCommitParentSHA1": "67b236af3dc641b35bc8ac2118821b0de2e78347",
        "bugFilePath": "library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java",
        "fixPatch": "diff --git a/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java b/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\nindex ef9602d..9818921 100644\n--- a/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\n+++ b/library/src/com/handmark/pulltorefresh/library/OverscrollHelper.java\n@@ -5,7 +5,7 @@\n final class OverscrollHelper {\n \n \tstatic void overScrollBy(PullToRefreshBase<?> view, int deltaY, int scrollY, boolean isTouchEvent) {\n-\t\tfinal Mode mode = view.getCurrentMode();\n+\t\tfinal Mode mode = view.getMode();\n \n \t\tif (mode != Mode.DISABLED && !isTouchEvent) {\n \t\t\tfinal int newY = (deltaY + scrollY);\n",
        "projectName": "chrisbanes.Android-PullToRefresh",
        "bugLineNum": 8,
        "bugNodeStartChar": 266,
        "bugNodeLength": 21,
        "fixLineNum": 8,
        "fixNodeStartChar": 266,
        "fixNodeLength": 14,
        "sourceBeforeFix": "view.getCurrentMode()",
        "sourceAfterFix": "view.getMode()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "370ead7395fc9194a3dc2d05afc4b3409f6b27da",
        "fixCommitParentSHA1": "c4dd016566067eb16b97bfaa22f1a8a466afce6c",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\nindex 15c3467..af62c87 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java\n@@ -58,7 +58,7 @@\n   private int outerQueryLimit;\n \n   // used by GroupBy\n-  private HashMap<String, HashMap<String, ASTNode> > destToAggregationExprs;\n+  private LinkedHashMap<String, LinkedHashMap<String, ASTNode> > destToAggregationExprs;\n   private HashMap<String, ASTNode> destToDistinctFuncExpr;\n \n   @SuppressWarnings(\"unused\")\n@@ -76,7 +76,7 @@\n     this.destToSortby = new HashMap<String, ASTNode>();\n     this.destToLimit = new HashMap<String, Integer>();\n     \n-    this.destToAggregationExprs = new HashMap<String, HashMap<String, ASTNode> >();\n+    this.destToAggregationExprs = new LinkedHashMap<String, LinkedHashMap<String, ASTNode> >();\n     this.destToDistinctFuncExpr = new HashMap<String, ASTNode>();\n     \n     this.alias = alias;\n@@ -84,7 +84,7 @@\n     this.outerQueryLimit = -1;\n   }\n \n-  public void setAggregationExprsForClause(String clause, HashMap<String, ASTNode> aggregationTrees) {\n+  public void setAggregationExprsForClause(String clause, LinkedHashMap<String, ASTNode> aggregationTrees) {\n     this.destToAggregationExprs.put(clause, aggregationTrees);\n   }\n \n@@ -273,7 +273,7 @@\n        (!destToClusterby.isEmpty()))\n       return false;\n     \n-    Iterator<Map.Entry<String, HashMap<String, ASTNode>>> aggrIter = destToAggregationExprs.entrySet().iterator();\n+    Iterator<Map.Entry<String, LinkedHashMap<String, ASTNode>>> aggrIter = destToAggregationExprs.entrySet().iterator();\n     while (aggrIter.hasNext()) {\n       HashMap<String, ASTNode> h = aggrIter.next().getValue();\n       if ((h != null) && (!h.isEmpty()))\n",
        "projectName": "apache.hive",
        "bugLineNum": 61,
        "bugNodeStartChar": 2063,
        "bugNodeLength": 42,
        "fixLineNum": 61,
        "fixNodeStartChar": 2063,
        "fixNodeLength": 54,
        "sourceBeforeFix": "HashMap<String,HashMap<String,ASTNode>>",
        "sourceAfterFix": "LinkedHashMap<String,LinkedHashMap<String,ASTNode>>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5d6b0ad639f597e0245d7b4591f383f4f12c23d7",
        "fixCommitParentSHA1": "2d625eb2f7ea6dc46fc4bb9fd35c94f50c944481",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java b/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\nindex b427842..00b353a 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\n@@ -81,12 +81,12 @@\n                     invocation.nodeEngine, invocation.serviceName, isStillExecuting,\n                     invocation.getTarget(), 0, 0, IS_EXECUTING_CALL_TIMEOUT, null, true);\n             Future f = inv.invoke();\n-            invocation.logger.warning(\"Asking if operation execution has been started: \" + invocation);\n+            invocation.logger.finest(\"Asking if operation execution has been started: \" + invocation);\n             executing = (Boolean) invocation.nodeEngine.toObject(f.get(IS_EXECUTING_CALL_TIMEOUT, TimeUnit.MILLISECONDS));\n         } catch (Exception e) {\n             invocation.logger.warning(\"While asking 'is-executing': \" + invocation, e);\n         }\n-        invocation.logger.warning(\"'is-executing': \" + executing + \" -> \" + invocation);\n+        invocation.logger.finest(\"'is-executing': \" + executing + \" -> \" + invocation);\n         return executing;\n     }\n \n@@ -224,7 +224,7 @@\n         @Override\n         public void onResponse(Object response) {\n             boolean executing = Boolean.TRUE.equals(response);\n-            invocation.logger.warning(\"'is-executing': \" + executing + \" -> \" + invocation);\n+            invocation.logger.finest(\"'is-executing': \" + executing + \" -> \" + invocation);\n             if (!executing) {\n                 setOperationTimeout();\n             }\n@@ -264,7 +264,7 @@\n                     invocation.nodeEngine, invocation.serviceName, isStillRunningOperation,\n                     invocation.getTarget(), 0, 0, IS_EXECUTING_CALL_TIMEOUT, callback, true);\n \n-            invocation.logger.warning(\"Asking if operation execution has been started: \" + invocation);\n+            invocation.logger.finest(\"Asking if operation execution has been started: \" + invocation);\n             inv.invoke();\n         }\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 267,
        "bugNodeStartChar": 11520,
        "bugNodeLength": 90,
        "fixLineNum": 267,
        "fixNodeStartChar": 11520,
        "fixNodeLength": 89,
        "sourceBeforeFix": "invocation.logger.warning(\"Asking if operation execution has been started: \" + invocation)",
        "sourceAfterFix": "invocation.logger.finest(\"Asking if operation execution has been started: \" + invocation)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ae4c271f7068895d43ad42712cb64b5bc81525a3",
        "fixCommitParentSHA1": "a7892257e1e4d040a7a54d82048758eba74f2a89",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/NettyPacketReader.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/NettyPacketReader.java b/core/client/fs/src/main/java/alluxio/client/block/stream/NettyPacketReader.java\nindex 000e8e4..2fd4cbd 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/NettyPacketReader.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/NettyPacketReader.java\n@@ -70,7 +70,7 @@\n   private static final int MAX_PACKETS_IN_FLIGHT =\n       Configuration.getInt(PropertyKey.USER_NETWORK_NETTY_READER_BUFFER_SIZE_PACKETS);\n   private static final long READ_TIMEOUT_MS =\n-      Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n+      Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n \n   /** Special packet that indicates an exception is caught. */\n   private static final ByteBuf THROWABLE = Unpooled.buffer(0);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 73,
        "bugNodeStartChar": 3287,
        "bugNodeLength": 64,
        "fixLineNum": 73,
        "fixNodeStartChar": 3287,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)",
        "sourceAfterFix": "Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1e3c0da4bdd228f518ad7297096fdc26c9d53ead",
        "fixCommitParentSHA1": "6c7a5c5077d624e85f6db4d870735888f479cc41",
        "bugFilePath": "spring-boot/src/test/java/org/springframework/boot/bind/DefaultPropertyNamePatternsMatcherTests.java",
        "fixPatch": "diff --git a/spring-boot/src/test/java/org/springframework/boot/bind/DefaultPropertyNamePatternsMatcherTests.java b/spring-boot/src/test/java/org/springframework/boot/bind/DefaultPropertyNamePatternsMatcherTests.java\nindex 6247e48..ed273d5 100644\n--- a/spring-boot/src/test/java/org/springframework/boot/bind/DefaultPropertyNamePatternsMatcherTests.java\n+++ b/spring-boot/src/test/java/org/springframework/boot/bind/DefaultPropertyNamePatternsMatcherTests.java\n@@ -69,9 +69,9 @@\n \n \t@Test\n \tpublic void withSquareBrackets() throws Exception {\n-\t\tchar[] delimeters = \"._[\".toCharArray();\n+\t\tchar[] delimiters = \"._[\".toCharArray();\n \t\tPropertyNamePatternsMatcher matcher = new DefaultPropertyNamePatternsMatcher(\n-\t\t\t\tdelimeters, \"aaa\", \"bbbb\", \"ccccc\");\n+\t\t\t\tdelimiters, \"aaa\", \"bbbb\", \"ccccc\");\n \t\tassertTrue(matcher.matches(\"bbbb\"));\n \t\tassertTrue(matcher.matches(\"bbbb[4]\"));\n \t\tassertFalse(matcher.matches(\"bbb[4]\"));\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 73,
        "bugNodeStartChar": 2122,
        "bugNodeLength": 79,
        "fixLineNum": 73,
        "fixNodeStartChar": 2122,
        "fixNodeLength": 79,
        "sourceBeforeFix": "new DefaultPropertyNamePatternsMatcher(delimeters,\"aaa\",\"bbbb\",\"ccccc\")",
        "sourceAfterFix": "new DefaultPropertyNamePatternsMatcher(delimiters,\"aaa\",\"bbbb\",\"ccccc\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a63faf44e1b103a49d25a15c720fc5940ae9fc07",
        "fixCommitParentSHA1": "2b0a4f13844bbb93482c52bd2c60a55e3fa24a88",
        "bugFilePath": "retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java",
        "fixPatch": "diff --git a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\nindex 5897161..dea046f 100644\n--- a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n+++ b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n@@ -73,10 +73,10 @@\n     assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyClass = new TypeToken<Maybe<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyClass = new TypeToken<Flowable<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();\n@@ -86,10 +86,10 @@\n     assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyWildcard = new TypeToken<Maybe<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyWildcard = new TypeToken<Flowable<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyGeneric = new TypeToken<Observable<List<String>>>() {}.getType();\n@@ -99,10 +99,10 @@\n     assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type mBodyGeneric = new TypeToken<Maybe<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type fBodyGeneric = new TypeToken<Flowable<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n \n     Type oResponseClass = new TypeToken<Observable<Response<String>>>() {}.getType();\n@@ -112,10 +112,10 @@\n     assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseClass = new TypeToken<Maybe<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseClass = new TypeToken<Flowable<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();\n@@ -125,10 +125,10 @@\n     assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseWildcard = new TypeToken<Maybe<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseWildcard = new TypeToken<Flowable<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultClass = new TypeToken<Observable<Result<String>>>() {}.getType();\n@@ -138,10 +138,10 @@\n     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();\n@@ -151,10 +151,10 @@\n     assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultWildcard = new TypeToken<Maybe<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultWildcard = new TypeToken<Flowable<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n   }\n \n",
        "projectName": "square.retrofit",
        "bugLineNum": 128,
        "bugNodeStartChar": 5942,
        "bugNodeLength": 56,
        "fixLineNum": 128,
        "fixNodeStartChar": 5942,
        "fixNodeLength": 56,
        "sourceBeforeFix": "factory.get(sResponseWildcard,NO_ANNOTATIONS,retrofit)",
        "sourceAfterFix": "factory.get(mResponseWildcard,NO_ANNOTATIONS,retrofit)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e05cd99b38abbe3bbeb21355f87ca992e4abe92a",
        "fixCommitParentSHA1": "c253c4bbc79d4ef029004a12f3b07def89b52b88",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\nindex 7209ac1..d7a2f34 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n@@ -423,7 +423,7 @@\n                 }\n                 try {\n                     initializeConnection(remoteAddress, authenticator);\n-                } catch (IOException e) {\n+                } catch (Exception e) {\n                     LOGGER.finest(e);\n                 } finally {\n                     connectionsInProgress.remove(target);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 426,
        "bugNodeStartChar": 17446,
        "bugNodeLength": 13,
        "fixLineNum": 426,
        "fixNodeStartChar": 17446,
        "fixNodeLength": 11,
        "sourceBeforeFix": "IOException e",
        "sourceAfterFix": "Exception e"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "335f8c0d2af9c55c731dc7b44d18c5e3796f4bd6",
        "fixCommitParentSHA1": "cd35fc8c917fecde13fedd6c6cf6a43699625bc7",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java b/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\nindex 623354a..6baf4fb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\n@@ -85,7 +85,7 @@\n             this.transactional = transactional;\n             return true;\n         } else if (isLockedBy(owner, threadId)) {\n-            if (this.referenceId == referenceId) {\n+            if (!transactional && this.referenceId == referenceId) {\n                 return true;\n             }\n             this.referenceId = referenceId;\n@@ -134,7 +134,7 @@\n             return false;\n         }\n \n-        if (this.referenceId == referenceId) {\n+        if (!this.transactional && this.referenceId == referenceId) {\n             return true;\n         }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 88,
        "bugNodeStartChar": 2802,
        "bugNodeLength": 31,
        "fixLineNum": 88,
        "fixNodeStartChar": 2802,
        "fixNodeLength": 49,
        "sourceBeforeFix": "this.referenceId == referenceId",
        "sourceAfterFix": "!transactional && this.referenceId == referenceId"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "94ddfa907427d4545237cfc4f881fc14c59ec7f5",
        "fixCommitParentSHA1": "88a52438f4a695b6601e307a3a6ed5301643a5df",
        "bugFilePath": "components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java",
        "fixPatch": "diff --git a/components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java b/components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java\nindex 4988564..6219e18 100644\n--- a/components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java\n+++ b/components/camel-servlet/src/main/java/org/apache/camel/component/servlet/ServletComponent.java\n@@ -67,7 +67,7 @@\n                 CastUtils.cast(parameters));\n         uri = httpUri.toString();\n \n-        ServletEndpoint result = createServletEndpoint(uri, this, httpUri, clientParams, getHttpConnectionManager(), httpClientConfigurer);\n+        ServletEndpoint result = createServletEndpoint(uri, this, httpUri, clientParams, getClientConnectionManager(), httpClientConfigurer);\n         if (httpBinding != null) {\n             result.setBinding(httpBinding);\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 70,
        "bugNodeStartChar": 2934,
        "bugNodeLength": 26,
        "fixLineNum": 70,
        "fixNodeStartChar": 2934,
        "fixNodeLength": 28,
        "sourceBeforeFix": "getHttpConnectionManager()",
        "sourceAfterFix": "getClientConnectionManager()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ee201465a3287e5700c5cba712852a8f4de4bca",
        "fixCommitParentSHA1": "81189e975542a4c5274b418834f3b1c1fccc31d1",
        "bugFilePath": "components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java",
        "fixPatch": "diff --git a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\nindex 4872957..141056a 100644\n--- a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n+++ b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n@@ -35,7 +35,7 @@\n     @Test\r\n     public void testHttpUndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -43,7 +43,7 @@\n     @Test\r\n     public void testHttpsUndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -51,7 +51,7 @@\n     @Test\r\n     public void testHttp4UndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -59,7 +59,7 @@\n     @Test\r\n     public void testHttps4UndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -67,7 +67,7 @@\n     @Test\r\n     public void testHttpPort80ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if http and port 80 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -75,7 +75,7 @@\n     @Test\r\n     public void testHttpsPort443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null,null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if https and port 443 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -83,7 +83,7 @@\n     @Test\r\n     public void testHttpPort8080ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if http and port other than 80 specified\", \"localhost:8080\", result[0]);\r\n     }\r\n@@ -91,7 +91,7 @@\n     @Test\r\n     public void testHttpsPort8443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if https and port other than 443 specified\", \"localhost:8443\", result[0]);\r\n     }\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 46,
        "bugNodeStartChar": 1811,
        "bugNodeLength": 59,
        "fixLineNum": 46,
        "fixNodeStartChar": 1766,
        "fixNodeLength": 65,
        "sourceBeforeFix": "new DynamicAwareEntry(\"https://localhost/test\",null,null)",
        "sourceAfterFix": "new DynamicAwareEntry(\"https://localhost/test\",null,null,null)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "763dad49dcfe96fa56fb88da0a4d7d53e148f337",
        "fixCommitParentSHA1": "32ad3fa960681ffc8c21179b6592f6e0a6875c11",
        "bugFilePath": "flink-table/flink-table-planner/src/main/java/org/apache/calcite/avatica/util/DateTimeUtils.java",
        "fixPatch": "diff --git a/flink-table/flink-table-planner/src/main/java/org/apache/calcite/avatica/util/DateTimeUtils.java b/flink-table/flink-table-planner/src/main/java/org/apache/calcite/avatica/util/DateTimeUtils.java\nindex fe09d18..2bb8515 100644\n--- a/flink-table/flink-table-planner/src/main/java/org/apache/calcite/avatica/util/DateTimeUtils.java\n+++ b/flink-table/flink-table-planner/src/main/java/org/apache/calcite/avatica/util/DateTimeUtils.java\n@@ -26,7 +26,8 @@\n import java.util.TimeZone;\n \n /*\n- * THIS FILE HAS BEEN COPIED FROM THE APACHE CALCITE PROJECT UNTIL CALCITE-1884 IS FIXED.\n+ * THIS FILE HAS BEEN COPIED FROM THE APACHE CALCITE PROJECT UNTIL CALCITE-1884, CALCITE-3199 IS FIXED.\n+ * (Modified line: 838)\n  */\n \n /**\n@@ -835,7 +836,7 @@\n \t}\n \n \tpublic static long unixDateCeil(TimeUnitRange range, long date) {\n-\t\treturn julianDateFloor(range, (int) date + EPOCH_JULIAN, true);\n+\t\treturn julianDateFloor(range, (int) date + EPOCH_JULIAN, false);\n \t}\n \n \tprivate static int julianDateFloor(TimeUnitRange range, int julian,\n",
        "projectName": "apache.flink",
        "bugLineNum": 838,
        "bugNodeStartChar": 23299,
        "bugNodeLength": 55,
        "fixLineNum": 838,
        "fixNodeStartChar": 23299,
        "fixNodeLength": 56,
        "sourceBeforeFix": "julianDateFloor(range,(int)date + EPOCH_JULIAN,true)",
        "sourceAfterFix": "julianDateFloor(range,(int)date + EPOCH_JULIAN,false)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "338d4a036b25526d2e5bf53c5e49f56ccbbf356f",
        "fixCommitParentSHA1": "93c23047593c2b388b3689cc85e4d0ca9a71af29",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/SpriteCache.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\nindex 36a90f3..4a62d3c 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/SpriteCache.java\n@@ -99,7 +99,7 @@\n \t */\r\n \tpublic void beginCache () {\r\n \t\tif (currentCache != null) throw new IllegalStateException(\"endCache must be called before begin.\");\r\n-\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 2 * 6);\r\n+\t\tcurrentCache = new Cache(caches.size(), mesh.getNumVertices() / 4 * 6);\r\n \t\tcaches.add(currentCache);\r\n \t\tmesh.getVerticesBuffer().compact();\r\n \t}\r\n@@ -536,7 +536,7 @@\n \t\tif (!drawing) throw new IllegalStateException(\"SpriteCache.begin must be called before draw.\");\r\n \r\n \t\tCache cache = caches.get(cacheID);\r\n-\t\toffset = offset * 12 + cache.offset;\r\n+\t\toffset = offset * 6 + cache.offset;\r\n \t\tlength *= 6;\r\n \t\tTexture[] textures = cache.textures;\r\n \t\tint[] counts = cache.counts;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 102,
        "bugNodeStartChar": 4562,
        "bugNodeLength": 25,
        "fixLineNum": 102,
        "fixNodeStartChar": 4461,
        "fixNodeLength": 25,
        "sourceBeforeFix": "mesh.getNumVertices() / 2",
        "sourceAfterFix": "mesh.getNumVertices() / 4"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "83b016ec7fc76f8f293c25b6438995f135cf8723",
        "fixCommitParentSHA1": "886096e8fc457546dd4071295b7c5cce2d722ecc",
        "bugFilePath": "jpa/locking-optimistic/src/test/java/org/javaee7/jpa/locking/optimistic/LockingOptimisticTest.java",
        "fixPatch": "diff --git a/jpa/locking-optimistic/src/test/java/org/javaee7/jpa/locking/optimistic/LockingOptimisticTest.java b/jpa/locking-optimistic/src/test/java/org/javaee7/jpa/locking/optimistic/LockingOptimisticTest.java\nindex 47befac..1325b4b 100644\n--- a/jpa/locking-optimistic/src/test/java/org/javaee7/jpa/locking/optimistic/LockingOptimisticTest.java\n+++ b/jpa/locking-optimistic/src/test/java/org/javaee7/jpa/locking/optimistic/LockingOptimisticTest.java\n@@ -39,7 +39,7 @@\n             .addAsResource(\"META-INF/persistence.xml\")\n             .addAsResource(\"META-INF/load.sql\")\n             .addAsWebInfResource(\n-                new StringAsset(beansXml.createAlternatives()\n+                new StringAsset(beansXml.getOrCreateAlternatives()\n                     .clazz(MovieBeanAlternative.class.getName()).up().exportAsString()),\n                 beansXml.getDescriptorName());\n         System.out.println(war.toString(true));\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 42,
        "bugNodeStartChar": 1396,
        "bugNodeLength": 29,
        "fixLineNum": 42,
        "fixNodeStartChar": 1396,
        "fixNodeLength": 34,
        "sourceBeforeFix": "beansXml.createAlternatives()",
        "sourceAfterFix": "beansXml.getOrCreateAlternatives()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6190e5a019d5009864d47bf4b08ceef4ac52cf91",
        "fixCommitParentSHA1": "bf9117495d878ded66f60301df07db886eab0605",
        "bugFilePath": "clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java",
        "fixPatch": "diff --git a/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java b/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\nindex 964fe53..6461108 100644\n--- a/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\n+++ b/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\n@@ -111,10 +111,10 @@\n   @Test\n   public void doubleFlush() throws Exception {\n     mTestStream.write(INCREASING_BYTES, 1, 10);\n-    Assert.assertEquals(0, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(0, mTestStream.getFlushedBytes());\n     mTestStream.flush();\n-    Assert.assertEquals(10, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(10, mTestStream.getFlushedBytes());\n     mTestStream.flush();\n-    Assert.assertEquals(10, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(10, mTestStream.getFlushedBytes());\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 118,
        "bugNodeStartChar": 4466,
        "bugNodeLength": 29,
        "fixLineNum": 118,
        "fixNodeStartChar": 4466,
        "fixNodeLength": 29,
        "sourceBeforeFix": "mTestStream.getBytesFlushed()",
        "sourceAfterFix": "mTestStream.getFlushedBytes()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "642ff291920b7eec294a37785f2fd0437c8c56a1",
        "fixCommitParentSHA1": "79905ea14af301ea511f0b7f6f11a8080000ca14",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/testutils/CommonTestUtils.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/testutils/CommonTestUtils.java b/flink-runtime/src/test/java/org/apache/flink/runtime/testutils/CommonTestUtils.java\nindex 18c4228..da07dfd 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/testutils/CommonTestUtils.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/testutils/CommonTestUtils.java\n@@ -160,7 +160,7 @@\n \n \tpublic static void waitUntilCondition(SupplierWithException<Boolean, Exception> condition, Deadline timeout, long retryIntervalMillis) throws Exception {\n \t\twhile (timeout.hasTimeLeft() && !condition.get()) {\n-\t\t\tThread.sleep(Math.min(RETRY_INTERVAL, timeout.timeLeft().toMillis()));\n+\t\t\tThread.sleep(Math.min(retryIntervalMillis, timeout.timeLeft().toMillis()));\n \t\t}\n \n \t\tif (!timeout.hasTimeLeft()) {\n",
        "projectName": "apache.flink",
        "bugLineNum": 163,
        "bugNodeStartChar": 5121,
        "bugNodeLength": 55,
        "fixLineNum": 163,
        "fixNodeStartChar": 5121,
        "fixNodeLength": 60,
        "sourceBeforeFix": "Math.min(RETRY_INTERVAL,timeout.timeLeft().toMillis())",
        "sourceAfterFix": "Math.min(retryIntervalMillis,timeout.timeLeft().toMillis())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d64a44547c2b2b69c771b16d9ac4e1ef5f8d8ce1",
        "fixCommitParentSHA1": "621116c9b88683dd0a53252dad912afa66b0e375",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration.java\nindex 54fbf7e..de24c31 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfiguration.java\n@@ -44,7 +44,7 @@\n \t\tthis.pool.setMaxIdle(getMaxIdle());\n \t\tthis.pool.setMinIdle(getMinIdle());\n \t\tthis.pool.setTestOnBorrow(isTestOnBorrow());\n-\t\tthis.pool.setTestOnReturn(isTestOnBorrow());\n+\t\tthis.pool.setTestOnReturn(isTestOnReturn());\n \t\tthis.pool.setValidationQuery(getValidationQuery());\n \t\treturn this.pool;\n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 47,
        "bugNodeStartChar": 1652,
        "bugNodeLength": 16,
        "fixLineNum": 47,
        "fixNodeStartChar": 1652,
        "fixNodeLength": 16,
        "sourceBeforeFix": "isTestOnBorrow()",
        "sourceAfterFix": "isTestOnReturn()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fa04fa8df997e88d5109f9fd6d8ec61167cf5750",
        "fixCommitParentSHA1": "3bfa53219cb70f86d71e6373b7bd7f7bf345e691",
        "bugFilePath": "servers/src/main/java/tachyon/worker/file/FileDataManager.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/file/FileDataManager.java b/servers/src/main/java/tachyon/worker/file/FileDataManager.java\nindex 6e05839..a256929 100644\n--- a/servers/src/main/java/tachyon/worker/file/FileDataManager.java\n+++ b/servers/src/main/java/tachyon/worker/file/FileDataManager.java\n@@ -244,7 +244,7 @@\n    */\n   public void clearPersistedFiles(List<Long> persistedFiles) {\n     synchronized (mPersistedFiles) {\n-      mPersistedFiles.removeAll(mPersistedFiles);\n+      mPersistedFiles.removeAll(persistedFiles);\n     }\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 247,
        "bugNodeStartChar": 8030,
        "bugNodeLength": 42,
        "fixLineNum": 247,
        "fixNodeStartChar": 8030,
        "fixNodeLength": 41,
        "sourceBeforeFix": "mPersistedFiles.removeAll(mPersistedFiles)",
        "sourceAfterFix": "mPersistedFiles.removeAll(persistedFiles)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "720619e271e68d5848185c2a7e45175b18e98f90",
        "fixCommitParentSHA1": "f1b346522f53ff82ca88cc7c16e22d8f0c3da89a",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java b/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\nindex 332a0f2..b945b39 100644\n--- a/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\n+++ b/presto-main/src/main/java/com/facebook/presto/failureDetector/HeartbeatFailureDetector.java\n@@ -162,11 +162,12 @@\n                 }\n \n                 Exception lastFailureException = task.getStats().getLastFailureException();\n-                if (lastFailureException instanceof SocketTimeoutException || lastFailureException instanceof UnknownHostException) {\n+                if (lastFailureException instanceof ConnectException) {\n                     return GONE;\n                 }\n \n-                if (lastFailureException instanceof ConnectException) {\n+                if (lastFailureException instanceof SocketTimeoutException) {\n+                    // TODO: distinguish between process unresponsiveness (e.g GC pause) and host reboot\n                     return UNRESPONSIVE;\n                 }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 169,
        "bugNodeStartChar": 6369,
        "bugNodeLength": 48,
        "fixLineNum": 169,
        "fixNodeStartChar": 6369,
        "fixNodeLength": 54,
        "sourceBeforeFix": "lastFailureException instanceof ConnectException",
        "sourceAfterFix": "lastFailureException instanceof SocketTimeoutException"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "38782cdd828011b64db92c95bb231e80a303c28b",
        "fixCommitParentSHA1": "7610f4fe77c40cd68f4b9fd16256b790aa7024e5",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/countdownlatch/CountDownLatchService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/countdownlatch/CountDownLatchService.java b/hazelcast/src/main/java/com/hazelcast/concurrent/countdownlatch/CountDownLatchService.java\nindex 6e1b489..926b20d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/countdownlatch/CountDownLatchService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/countdownlatch/CountDownLatchService.java\n@@ -52,7 +52,7 @@\n     }\n \n     public boolean setCount(String name, int count) {\n-        if (count <= 0) {\n+        if (count < 0) {\n             latches.remove(name);\n             return false;\n         } else {\n@@ -66,7 +66,7 @@\n     }\n \n     public void setCountDirect(String name, int count) {\n-        if (count <= 0) {\n+        if (count < 0) {\n             latches.remove(name);\n         } else {\n             CountDownLatchInfo latch = latches.get(name);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 55,
        "bugNodeStartChar": 2064,
        "bugNodeLength": 10,
        "fixLineNum": 55,
        "fixNodeStartChar": 2064,
        "fixNodeLength": 9,
        "sourceBeforeFix": "count <= 0",
        "sourceAfterFix": "count < 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b69967e5b131efed724e38456dd970b4af4eb539",
        "fixCommitParentSHA1": "a820f1fb5e427f4ca45d6c533b8758f43858cb6d",
        "bugFilePath": "community/server/src/main/java/org/neo4j/server/RoundRobinJobScheduler.java",
        "fixPatch": "diff --git a/community/server/src/main/java/org/neo4j/server/RoundRobinJobScheduler.java b/community/server/src/main/java/org/neo4j/server/RoundRobinJobScheduler.java\nindex 6f9de2a..632f872 100644\n--- a/community/server/src/main/java/org/neo4j/server/RoundRobinJobScheduler.java\n+++ b/community/server/src/main/java/org/neo4j/server/RoundRobinJobScheduler.java\n@@ -30,9 +30,9 @@\n \n     private List<ScheduledJob> scheduledJobs = new LinkedList<ScheduledJob>();\n \n-    public void scheduleAtFixedRate( Runnable job, String jobName, long period )\n+    public void scheduleAtFixedRate( Runnable job, String jobName, long delay, long period )\n     {\n-        ScheduledJob scheduledJob = new ScheduledJob( job, jobName, period );\n+        ScheduledJob scheduledJob = new ScheduledJob( job, jobName, delay, period );\n         scheduledJobs.add( scheduledJob );\n     }\n \n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 35,
        "bugNodeStartChar": 1228,
        "bugNodeLength": 40,
        "fixLineNum": 35,
        "fixNodeStartChar": 1228,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new ScheduledJob(job,jobName,period)",
        "sourceAfterFix": "new ScheduledJob(job,jobName,delay,period)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\nindex 9a10a4e..5a77c4d 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\n@@ -49,7 +49,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -76,7 +76,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -103,7 +103,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -138,7 +138,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -173,7 +173,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 79,
        "bugNodeStartChar": 3382,
        "bugNodeLength": 38,
        "fixLineNum": 79,
        "fixNodeStartChar": 3382,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "71b163969a0a1a15179ddf03f44f39fefbd06d7f",
        "fixCommitParentSHA1": "d6c22c89755434fc16174175c08d28755b8356ec",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/TokenizerAnnotator.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/TokenizerAnnotator.java b/src/edu/stanford/nlp/pipeline/TokenizerAnnotator.java\nindex 6ad98a7..b904da5 100644\n--- a/src/edu/stanford/nlp/pipeline/TokenizerAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/TokenizerAnnotator.java\n@@ -358,7 +358,8 @@\n         CoreAnnotations.PositionAnnotation.class,\n         CoreAnnotations.IndexAnnotation.class,\n         CoreAnnotations.OriginalTextAnnotation.class,\n-        CoreAnnotations.ValueAnnotation.class\n+        CoreAnnotations.ValueAnnotation.class,\n+        CoreAnnotations.IsNewlineAnnotation.class\n     ));\n   }\n \n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 349,
        "bugNodeStartChar": 12744,
        "bugNodeLength": 630,
        "fixLineNum": 349,
        "fixNodeStartChar": 12744,
        "fixNodeLength": 681,
        "sourceBeforeFix": "Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class)",
        "sourceAfterFix": "Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "01d1bff4eb9ad9fe86b15551847e8ffeaac80b5b",
        "fixCommitParentSHA1": "17f3e487688d66bcec99510e3f2b1d581d3e28de",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\nindex 18812af..b693ca9 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java\n@@ -488,7 +488,7 @@\n \t\telse\r\n \t\t\ty -= (int)(maxY - visualAmountY);\r\n \r\n-\t\tif (scrollbarsOnTop && scrollX) {\r\n+\t\tif (!fadeScrollBars && scrollbarsOnTop && scrollX) {\r\n \t\t\tfloat scrollbarHeight = 0;\r\n \t\t\tif (style.hScrollKnob != null) scrollbarHeight = style.hScrollKnob.getMinHeight();\r\n \t\t\tif (style.hScroll != null) scrollbarHeight = Math.max(scrollbarHeight, style.hScroll.getMinHeight());\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 491,
        "bugNodeStartChar": 17833,
        "bugNodeLength": 26,
        "fixLineNum": 491,
        "fixNodeStartChar": 17343,
        "fixNodeLength": 45,
        "sourceBeforeFix": "scrollbarsOnTop && scrollX",
        "sourceAfterFix": "!fadeScrollBars && scrollbarsOnTop && scrollX"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b",
        "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288",
        "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java",
        "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 232,
        "bugNodeStartChar": 9140,
        "bugNodeLength": 48,
        "fixLineNum": 232,
        "fixNodeStartChar": 9140,
        "fixNodeLength": 80,
        "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD",
        "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e18406f2f4ffdce1cbde05bb5c9555ad36159d39",
        "fixCommitParentSHA1": "07bf506458c8fd6b0c65043e5f9a8fe5099d9bac",
        "bugFilePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/RelationshipStore.java",
        "fixPatch": "diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/RelationshipStore.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/RelationshipStore.java\nindex c6532bd..816b011 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/RelationshipStore.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/RelationshipStore.java\n@@ -182,7 +182,7 @@\n                 {\n                     cursor.setOffset( offset );\n                     recordIsInUse = isInUse( cursor.getByte() );\n-                } while ( cursor.retry() );\n+                } while ( cursor.shouldRetry() );\n             }\n             return recordIsInUse;\n         }\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 185,
        "bugNodeStartChar": 5594,
        "bugNodeLength": 14,
        "fixLineNum": 185,
        "fixNodeStartChar": 5594,
        "fixNodeLength": 20,
        "sourceBeforeFix": "cursor.retry()",
        "sourceAfterFix": "cursor.shouldRetry()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "798beed7a84ec00cfb0835cf41b7988e27898e22",
        "fixCommitParentSHA1": "3445a3a3f2491f0d82f375578702c80566659097",
        "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java b/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\nindex c0dd3d0..f599ac3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java\n@@ -2956,7 +2956,7 @@\n         }\n \n         SQLSelectItem selectItem = new SQLSelectItem(expr, alias, connectByRoot);\n-        if (lexer.token == Token.HINT) {\n+        if (lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)) {\n             String comment = \"/*\" + lexer.stringVal() + \"*/\";\n             selectItem.addAfterComment(comment);\n             lexer.nextToken();\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 2959,
        "bugNodeStartChar": 103948,
        "bugNodeLength": 25,
        "fixLineNum": 2959,
        "fixNodeStartChar": 103948,
        "fixNodeLength": 77,
        "sourceBeforeFix": "lexer.token == Token.HINT",
        "sourceAfterFix": "lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fceec74c60a1d72c1582f9d8871cbe1a0eb37fcf",
        "fixCommitParentSHA1": "b67cbebd9a050c7abb1bd2ef090199af06008b7e",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java b/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\nindex e843b07..8a934b9 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\n@@ -148,7 +148,7 @@\n     }\n \n     public ILock getLock(Object key) {\n-        if (name == null) {\n+        if (key == null) {\n             throw new NullPointerException(\"Retrieving a lock instance with a null key is not allowed!\");\n         }\n         return getDistributedObject(LockService.SERVICE_NAME, node.getSerializationService().toData(key));\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 151,
        "bugNodeStartChar": 5804,
        "bugNodeLength": 12,
        "fixLineNum": 151,
        "fixNodeStartChar": 5804,
        "fixNodeLength": 11,
        "sourceBeforeFix": "name == null",
        "sourceAfterFix": "key == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "55c5f8284269d599b48d8b77bf5b7f45f449b185",
        "fixCommitParentSHA1": "337c8a9b65e5ed70dec4010a75fa5a77501e5ccc",
        "bugFilePath": "src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java b/src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java\nindex 961a0a6..5c68fcc 100644\n--- a/src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java\n+++ b/src/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java\n@@ -73,7 +73,7 @@\n     next = new ArrayList<TaggedWord>();\r\n     while (line != null && !line.trim().equals(\"\")) {\r\n       String[] pieces = line.split(\"\\t\");\r\n-      if (pieces.length <= wordColumn || pieces.length <= wordColumn) {\r\n+      if (pieces.length <= wordColumn || pieces.length <= tagColumn) {\r\n         throw new IllegalArgumentException(\"File \" + filename + \" line #\" + \r\n                                            linesRead + \" too short\");\r\n       }\r\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 76,
        "bugNodeStartChar": 2348,
        "bugNodeLength": 27,
        "fixLineNum": 76,
        "fixNodeStartChar": 2273,
        "fixNodeLength": 26,
        "sourceBeforeFix": "pieces.length <= wordColumn",
        "sourceAfterFix": "pieces.length <= tagColumn"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51e6c8c8b6e847e2600420252160e331c85bd46a",
        "fixCommitParentSHA1": "25f68404f37f35cb95ade6b3ff46ec427375c867",
        "bugFilePath": "spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringIntegrationCompilerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringIntegrationCompilerAutoConfiguration.java b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringIntegrationCompilerAutoConfiguration.java\nindex 8b12cc5..6092c21 100644\n--- a/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringIntegrationCompilerAutoConfiguration.java\n+++ b/spring-bootstrap-cli/src/main/java/org/springframework/bootstrap/cli/compiler/autoconfigure/SpringIntegrationCompilerAutoConfiguration.java\n@@ -29,7 +29,7 @@\n import org.springframework.bootstrap.cli.compiler.DependencyCustomizer;\n \n /**\n- * {@link CompilerAutoConfiguration} for Spring Batch.\n+ * {@link CompilerAutoConfiguration} for Spring Integration.\n  * \n  * @author Dave Syer\n  */\n@@ -39,7 +39,7 @@\n \tpublic boolean matches(ClassNode classNode) {\n \t\t// Slightly weird detection algorithm because there is no @Enable annotation for\n \t\t// Integration\n-\t\treturn AstUtils.hasLeastOneAnnotation(classNode, \"MessageEndpoint\",\n+\t\treturn AstUtils.hasAtLeastOneAnnotation(classNode, \"MessageEndpoint\",\n \t\t\t\t\"EnableIntegrationPatterns\");\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 42,
        "bugNodeStartChar": 1556,
        "bugNodeLength": 93,
        "fixLineNum": 42,
        "fixNodeStartChar": 1556,
        "fixNodeLength": 95,
        "sourceBeforeFix": "AstUtils.hasLeastOneAnnotation(classNode,\"MessageEndpoint\",\"EnableIntegrationPatterns\")",
        "sourceAfterFix": "AstUtils.hasAtLeastOneAnnotation(classNode,\"MessageEndpoint\",\"EnableIntegrationPatterns\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "01d18f2c3db799d144cc8e3308da3fb2ade19417",
        "fixCommitParentSHA1": "2f6370343200faec3de904a5cf2e39345acb33e7",
        "bugFilePath": "guava/src/com/google/common/util/concurrent/Striped.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/util/concurrent/Striped.java b/guava/src/com/google/common/util/concurrent/Striped.java\nindex cd43294..36fa929 100644\n--- a/guava/src/com/google/common/util/concurrent/Striped.java\n+++ b/guava/src/com/google/common/util/concurrent/Striped.java\n@@ -321,9 +321,9 @@\n     private final Lock delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeLock(Lock delegate, Object strongReference) {\n+    WeakSafeLock(Lock delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n@@ -344,9 +344,9 @@\n     private final Condition delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeCondition(Condition delegate, Object strongReference) {\n+    WeakSafeCondition(Condition delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n",
        "projectName": "google.guava",
        "bugLineNum": 349,
        "bugNodeStartChar": 13912,
        "bugNodeLength": 22,
        "fixLineNum": 349,
        "fixNodeStartChar": 13912,
        "fixNodeLength": 37,
        "sourceBeforeFix": "Object strongReference",
        "sourceAfterFix": "WeakSafeReadWriteLock strongReference"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "dc936e03bc02c2ac536b2929b676594bebb7124f",
        "fixCommitParentSHA1": "7a82f6c678558b1d3ddc29bca025bad19dc87854",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java\nindex 81417cd..c9b53c2 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/aggregate/AggregateProcessor.java\n@@ -1450,7 +1450,7 @@\n         }\n         \n         if (timeoutCheckerExecutorService != null) {\n-            camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService);\n+            camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService);\n         }\n         \n         ServiceHelper.stopServices(timeoutMap, processor, deadLetterProducerTemplate);\n",
        "projectName": "apache.camel",
        "bugLineNum": 1453,
        "bugNodeStartChar": 64082,
        "bugNodeLength": 83,
        "fixLineNum": 1453,
        "fixNodeStartChar": 64082,
        "fixNodeLength": 80,
        "sourceBeforeFix": "camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService)",
        "sourceAfterFix": "camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a29ed0be3c5df8794550d92906237cb2d7349104",
        "fixCommitParentSHA1": "fa4c035e1ea96010a7b01ee908fa4c7f45ac4826",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/impl/management/ManagementCenterService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/impl/management/ManagementCenterService.java b/hazelcast/src/main/java/com/hazelcast/impl/management/ManagementCenterService.java\nindex 11a1590..2fcd3e6 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/management/ManagementCenterService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/management/ManagementCenterService.java\n@@ -308,7 +308,7 @@\n             register(new RunGcRequest());\n             register(new GetMemberSystemPropertiesRequest());\n             register(new GetMapEntryRequest());\n-            register(new LogVersionMismatchRequest());\n+            register(new VersionMismatchLogRequest());\n             register(new ShutdownMemberRequest());\n         }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 311,
        "bugNodeStartChar": 13750,
        "bugNodeLength": 31,
        "fixLineNum": 311,
        "fixNodeStartChar": 13750,
        "fixNodeLength": 31,
        "sourceBeforeFix": "new LogVersionMismatchRequest()",
        "sourceAfterFix": "new VersionMismatchLogRequest()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d9510ff4ae62d30d49f80749d8ab1f0d3c16d9a4",
        "fixCommitParentSHA1": "23c8fa6ea06ea514d0009b6cb37f8af245bef892",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AtomicReferenceReplicationOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AtomicReferenceReplicationOperation.java b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AtomicReferenceReplicationOperation.java\nindex fc1fd62..02c36ee 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AtomicReferenceReplicationOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AtomicReferenceReplicationOperation.java\n@@ -72,7 +72,7 @@\n         out.writeInt(migrationData.size());\n         for (Map.Entry<String, Data> entry : migrationData.entrySet()) {\n             out.writeUTF(entry.getKey());\n-            out.writeObject(entry.getValue());\n+            out.writeData(entry.getValue());\n         }\n     }\n \n@@ -82,7 +82,7 @@\n         migrationData = new HashMap<String, Data>(mapSize);\n         for (int i = 0; i < mapSize; i++) {\n             String name = in.readUTF();\n-            Data data = in.readObject();\n+            Data data = in.readData();\n             migrationData.put(name, data);\n         }\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 75,
        "bugNodeStartChar": 2595,
        "bugNodeLength": 33,
        "fixLineNum": 75,
        "fixNodeStartChar": 2595,
        "fixNodeLength": 31,
        "sourceBeforeFix": "out.writeObject(entry.getValue())",
        "sourceAfterFix": "out.writeData(entry.getValue())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "53c0cde20042683e48266819a47099612e69d5bd",
        "fixCommitParentSHA1": "08a1f24dc0f17c4b32ebda1ac39be3ee01434f0f",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/ManagedDataFormatTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/ManagedDataFormatTest.java b/camel-core/src/test/java/org/apache/camel/management/ManagedDataFormatTest.java\nindex 0429269..53d6be7 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/ManagedDataFormatTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/ManagedDataFormatTest.java\n@@ -52,7 +52,7 @@\n \n         TabularData data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{true}, new String[]{\"boolean\"});\n         assertNotNull(data);\n-        assertEquals(2, data.size());\n+        assertEquals(3, data.size());\n \n         data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{false}, new String[]{\"boolean\"});\n         assertNotNull(data);\n",
        "projectName": "apache.camel",
        "bugLineNum": 55,
        "bugNodeStartChar": 2187,
        "bugNodeLength": 28,
        "fixLineNum": 55,
        "fixNodeStartChar": 2187,
        "fixNodeLength": 28,
        "sourceBeforeFix": "assertEquals(2,data.size())",
        "sourceAfterFix": "assertEquals(3,data.size())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "d3073dc1096ba35fa3ad849f0fb3870475bc9eff",
        "fixCommitParentSHA1": "dfe8d520fbb77ffaa6d907a6db025928240153fb",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\nindex 17f52ef..0723f8b 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\n@@ -45,7 +45,7 @@\n \t\tif(incomingMessage.getMessagePayloadByte(0) != 0x00) {\n \t\t\tlogger.debug(\"NODE {}: DeleteReturnRoute command in progress.\", nodeId);\n \t\t} else {\n-\t\t\tlogger.error(\"NODE {}: DeleteReturnRoute command failed.\");\n+\t\t\tlogger.error(\"NODE {}: DeleteReturnRoute command failed.\", nodeId);\n \t\t\tzController.notifyEventListeners(new ZWaveNetworkEvent(ZWaveNetworkEvent.Type.DeleteReturnRoute, nodeId,\n \t\t\t\t\tZWaveNetworkEvent.State.Failure));\n \t\t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 48,
        "bugNodeStartChar": 2029,
        "bugNodeLength": 58,
        "fixLineNum": 48,
        "fixNodeStartChar": 2029,
        "fixNodeLength": 66,
        "sourceBeforeFix": "logger.error(\"NODE {}: DeleteReturnRoute command failed.\")",
        "sourceAfterFix": "logger.error(\"NODE {}: DeleteReturnRoute command failed.\",nodeId)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "e5560c172ef6ba15be5dd24d588138bc3913ae04",
        "fixCommitParentSHA1": "a4a99577e4f975f9103a34b21025bc3ed353b132",
        "bugFilePath": "modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java",
        "fixPatch": "diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\nindex 2bbbcf5..a4ed634 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java\n@@ -145,7 +145,7 @@\n     public static final int DEFAULT_OCTREE_DEPTH = 5;\n     public static final int DEFAULT_OCTREE_WIDTH = 50000;\n     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;\n-    public static final boolean DEFAULT_LABEL_MIPMAP = true;\n+    public static final boolean DEFAULT_LABEL_MIPMAP = false;//Disabled since it works bad with Intel GPUs. See https://github.com/gephi/gephi/issues/1494 (Some label characters fade away when zooming out)\n     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;\n     public static final boolean DEFAULT_LABEL_FRACTIONAL_METRICS = true;\n     public static final boolean DEFAULT_VIZBAR = true;\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 148,
        "bugNodeStartChar": 9280,
        "bugNodeLength": 27,
        "fixLineNum": 148,
        "fixNodeStartChar": 9280,
        "fixNodeLength": 28,
        "sourceBeforeFix": "DEFAULT_LABEL_MIPMAP=true",
        "sourceAfterFix": "DEFAULT_LABEL_MIPMAP=false"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b4926b1459ead9784d7da4cfe87cba2e33a736a",
        "fixCommitParentSHA1": "f432a9323e57fa0ffb25c93bb3924ab20ac9c642",
        "bugFilePath": "components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowRelease.java",
        "fixPatch": "diff --git a/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowRelease.java b/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowRelease.java\nindex 84f475a..d546215 100644\n--- a/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowRelease.java\n+++ b/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowRelease.java\n@@ -32,7 +32,7 @@\n             return null;\n         }\n     },\n-    HELSINKY {\n+    HELSINKI {\n         @Override\n         public ServiceNowProducer get(ServiceNowEndpoint endpoint) throws Exception {\n             return new HelsinkiServiceNowProducer(endpoint);\n",
        "projectName": "apache.camel",
        "bugLineNum": 35,
        "bugNodeStartChar": 1449,
        "bugNodeLength": 191,
        "fixLineNum": 35,
        "fixNodeStartChar": 1449,
        "fixNodeLength": 191,
        "sourceBeforeFix": "HELSINKY{   @Override public ServiceNowProducer get(  ServiceNowEndpoint endpoint) throws Exception {     return new HelsinkiServiceNowProducer(endpoint);   } } ",
        "sourceAfterFix": "HELSINKI{   @Override public ServiceNowProducer get(  ServiceNowEndpoint endpoint) throws Exception {     return new HelsinkiServiceNowProducer(endpoint);   } } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6f58735d7175d63895e334f47ce66ba2fb836817",
        "fixCommitParentSHA1": "3efcd2dade2f49a1d05ec4a8056d31899cedcb2c",
        "bugFilePath": "core/server/src/main/java/alluxio/master/file/meta/InodeTree.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/master/file/meta/InodeTree.java b/core/server/src/main/java/alluxio/master/file/meta/InodeTree.java\nindex 6883029..20ecce1 100644\n--- a/core/server/src/main/java/alluxio/master/file/meta/InodeTree.java\n+++ b/core/server/src/main/java/alluxio/master/file/meta/InodeTree.java\n@@ -167,7 +167,7 @@\n    */\n   public Inode getInodeByPath(AlluxioURI path) throws InvalidPathException {\n     TraversalResult traversalResult =\n-        traverseToInode(PathUtils.getPathComponents(path.toString()), false);\n+        traverseToInode(PathUtils.getPathComponents(path.getPath()), false);\n     if (!traversalResult.isFound()) {\n       throw new InvalidPathException(ExceptionMessage.PATH_DOES_NOT_EXIST.getMessage(path));\n     }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 170,
        "bugNodeStartChar": 6109,
        "bugNodeLength": 15,
        "fixLineNum": 170,
        "fixNodeStartChar": 6109,
        "fixNodeLength": 14,
        "sourceBeforeFix": "path.toString()",
        "sourceAfterFix": "path.getPath()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "06318999148f2e755fc1df25a6786a862e194e1c",
        "fixCommitParentSHA1": "6faa1f818f588a6be8c4a1f11508bb7cdbd587af",
        "bugFilePath": "providers/netty/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/providers/netty/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/providers/netty/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex c36bdc1..d63db0c 100644\n--- a/providers/netty/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/providers/netty/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -1988,7 +1988,7 @@\n                 String location = response.getHeader(HttpHeaders.Names.LOCATION);\n                 URI uri = AsyncHttpProviderUtils.getRedirectUri(future.getURI(), location);\n                 boolean stripQueryString = config.isRemoveQueryParamOnRedirect();\n-                if (!uri.toString().equalsIgnoreCase(future.getURI().toString())) {\n+                if (!uri.toString().equals(future.getURI().toString())) {\n                     final RequestBuilder nBuilder = stripQueryString ?\n                             new RequestBuilder(future.getRequest()).setQueryParameters(null)\n                             : new RequestBuilder(future.getRequest());\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 1991,
        "bugNodeStartChar": 84520,
        "bugNodeLength": 59,
        "fixLineNum": 1991,
        "fixNodeStartChar": 84520,
        "fixNodeLength": 49,
        "sourceBeforeFix": "uri.toString().equalsIgnoreCase(future.getURI().toString())",
        "sourceAfterFix": "uri.toString().equals(future.getURI().toString())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "220e1a21e7bbb831d06551c72799dfedc1db979f",
        "fixCommitParentSHA1": "ab9c6a7a2ee6a007b0a32cd9a449b47b65b67732",
        "bugFilePath": "core/src/main/java/fi/iki/elonen/NanoHTTPD.java",
        "fixPatch": "diff --git a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\nindex 8c81435..f49ce93 100644\n--- a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n+++ b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n@@ -833,7 +833,7 @@\n                         String boundaryStartString = \"boundary=\";\n                         int boundaryContentStart = contentTypeHeader.indexOf(boundaryStartString) + boundaryStartString.length();\n                         String boundary = contentTypeHeader.substring(boundaryContentStart, contentTypeHeader.length());\n-                        if (boundary.startsWith(\"\\\"\") && boundary.startsWith(\"\\\"\")) {\n+                        if (boundary.startsWith(\"\\\"\") && boundary.endsWith(\"\\\"\")) {\n                             boundary = boundary.substring(1, boundary.length() - 1);\n                         }\n \n",
        "projectName": "NanoHttpd.nanohttpd",
        "bugLineNum": 836,
        "bugNodeStartChar": 30632,
        "bugNodeLength": 25,
        "fixLineNum": 836,
        "fixNodeStartChar": 30632,
        "fixNodeLength": 23,
        "sourceBeforeFix": "boundary.startsWith(\"\\\"\")",
        "sourceAfterFix": "boundary.endsWith(\"\\\"\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "7a38e366168d514aa41d9996ee89caf259ee2f27",
        "fixCommitParentSHA1": "62eb740d0dc3fb26c2bd09907faca52ed86da717",
        "bugFilePath": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DefaultPassConfig.java b/src/com/google/javascript/jscomp/DefaultPassConfig.java\nindex a44241e..2371989 100644\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n@@ -280,7 +280,7 @@\n       checks.add(angularPass);\n     }\n \n-    if (options.checkProvides.isOn()) {\n+    if (options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)) {\n       checks.add(checkProvides);\n     }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 283,
        "bugNodeStartChar": 10022,
        "bugNodeLength": 28,
        "fixLineNum": 283,
        "fixNodeStartChar": 10022,
        "fixNodeLength": 81,
        "sourceBeforeFix": "options.checkProvides.isOn()",
        "sourceAfterFix": "options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "be89d4bbdee130f230e6409b4851f4b20b5c873e",
        "fixCommitParentSHA1": "19f19e1590aaaae525149e162e0084aca587cfac",
        "bugFilePath": "core/src/main/java/cucumber/runtime/Runtime.java",
        "fixPatch": "diff --git a/core/src/main/java/cucumber/runtime/Runtime.java b/core/src/main/java/cucumber/runtime/Runtime.java\nindex fb459d6..1e6399c 100644\n--- a/core/src/main/java/cucumber/runtime/Runtime.java\n+++ b/core/src/main/java/cucumber/runtime/Runtime.java\n@@ -86,12 +86,12 @@\n     }\n \n     public Runtime(ResourceLoader resourceLoader, ClassLoader classLoader, Collection<? extends Backend> backends,\n-                   RuntimeOptions runtimeOptions, RuntimeGlue optionalGlue) {\n+                   RuntimeOptions runtimeOptions, Glue optionalGlue) {\n         this(resourceLoader, classLoader, backends, runtimeOptions, TimeService.SYSTEM, optionalGlue);\n     }\n \n     public Runtime(ResourceLoader resourceLoader, ClassLoader classLoader, Collection<? extends Backend> backends,\n-                   RuntimeOptions runtimeOptions, TimeService stopWatch, RuntimeGlue optionalGlue) {\n+                   RuntimeOptions runtimeOptions, TimeService stopWatch, Glue optionalGlue) {\n         if (backends.isEmpty()) {\n             throw new CucumberException(\"No backends were found. Please make sure you have a backend module on your CLASSPATH.\");\n         }\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 89,
        "bugNodeStartChar": 3358,
        "bugNodeLength": 24,
        "fixLineNum": 89,
        "fixNodeStartChar": 3358,
        "fixNodeLength": 17,
        "sourceBeforeFix": "RuntimeGlue optionalGlue",
        "sourceAfterFix": "Glue optionalGlue"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2",
        "fixCommitParentSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex beb8d36..f3b83ab 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -255,7 +255,7 @@\n \t\tfinal float b = vector.y - y;\r\n \t\tfinal float c = vector.z - z;\r\n \r\n-\t\treturn (float)Math.sqrt(a * a + b * b + c * b);\r\n+\t\treturn (float)Math.sqrt(a * a + b * b + c * c);\r\n \t}\r\n \r\n \t/** Normalizes this vector to unit length\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 258,
        "bugNodeStartChar": 8325,
        "bugNodeLength": 5,
        "fixLineNum": 258,
        "fixNodeStartChar": 8068,
        "fixNodeLength": 5,
        "sourceBeforeFix": "c * b",
        "sourceAfterFix": "c * c"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0443c4d9988380bf9fc61a871e7588b1e106aa44",
        "fixCommitParentSHA1": "05a1cccf5925dbb7ae3d30b55b907bd9cf0e9a39",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AbstractAlterOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AbstractAlterOperation.java b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AbstractAlterOperation.java\nindex 5662272..75b81da 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AbstractAlterOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/atomicreference/operations/AbstractAlterOperation.java\n@@ -58,13 +58,13 @@\n     @Override\n     protected void writeInternal(ObjectDataOutput out) throws IOException {\n         super.writeInternal(out);\n-        out.writeObject(function);\n+        out.writeData(function);\n     }\n \n     @Override\n     protected void readInternal(ObjectDataInput in) throws IOException {\n         super.readInternal(in);\n-        function = in.readObject();\n+        function = in.readData();\n     }\n \n     @Override\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 61,
        "bugNodeStartChar": 1723,
        "bugNodeLength": 25,
        "fixLineNum": 61,
        "fixNodeStartChar": 1723,
        "fixNodeLength": 23,
        "sourceBeforeFix": "out.writeObject(function)",
        "sourceAfterFix": "out.writeData(function)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae1c9a922bd43a580f838ca538824dd2a86b64f5",
        "fixCommitParentSHA1": "b1f8580fddf166c6107d273540ddd06088c01177",
        "bugFilePath": "core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java",
        "fixPatch": "diff --git a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\nindex 2d17889..29c967c 100644\n--- a/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n+++ b/core/src/main/java/com/yahoo/ycsb/workloads/CoreWorkload.java\n@@ -570,15 +570,15 @@\n \n \t\t//do the transaction\n \t\t\n-\t\tlong st=System.currentTimeMillis();\n+\t\tlong st=System.nanoTime();\n \n \t\tdb.read(table,keyname,fields,new HashMap<String,ByteIterator>());\n \t\t\n \t\tdb.update(table,keyname,values);\n \n-\t\tlong en=System.currentTimeMillis();\n+\t\tlong en=System.nanoTime();\n \t\t\n-\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)(en-st));\n+\t\tMeasurements.getMeasurements().measure(\"READ-MODIFY-WRITE\", (int)((en-st)/1000));\n \t}\n \t\n \tpublic void doTransactionScan(DB db)\n",
        "projectName": "brianfrankcooper.YCSB",
        "bugLineNum": 579,
        "bugNodeStartChar": 20604,
        "bugNodeLength": 26,
        "fixLineNum": 579,
        "fixNodeStartChar": 20604,
        "fixNodeLength": 17,
        "sourceBeforeFix": "System.currentTimeMillis()",
        "sourceAfterFix": "System.nanoTime()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "4dc84d1cd85a7120a48e337209413cf7387b1d1c",
        "fixCommitParentSHA1": "24418dcfa1db3efda6041091f36351b03e0dd067",
        "bugFilePath": "community/server/src/test/java/org/neo4j/server/helpers/FunctionalTestHelper.java",
        "fixPatch": "diff --git a/community/server/src/test/java/org/neo4j/server/helpers/FunctionalTestHelper.java b/community/server/src/test/java/org/neo4j/server/helpers/FunctionalTestHelper.java\nindex 6be745c..ac0e6d8 100644\n--- a/community/server/src/test/java/org/neo4j/server/helpers/FunctionalTestHelper.java\n+++ b/community/server/src/test/java/org/neo4j/server/helpers/FunctionalTestHelper.java\n@@ -286,7 +286,7 @@\n         {\n             Map<?, ?> innerMap = (Map<?,?>) entry.getValue();\n             String template = innerMap.get( \"template\" ).toString();\n-            if ( !template.contains( PATH_AUTO_NODE_INDEX ) && !template.contains( PATH_AUTO_RELATIONSHIP_INDEX ) )\n+            if ( !template.contains( PATH_AUTO_NODE_INDEX ) && !template.contains( PATH_AUTO_RELATIONSHIP_INDEX ) && !template.contains( \"_auto_\" ) )\n                 result.put( entry.getKey(), entry.getValue() );\n         }\n         return result;\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 289,
        "bugNodeStartChar": 7988,
        "bugNodeLength": 96,
        "fixLineNum": 289,
        "fixNodeStartChar": 7988,
        "fixNodeLength": 130,
        "sourceBeforeFix": "!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)",
        "sourceAfterFix": "!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains(\"_auto_\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\nindex 50f43e2..8259c17 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n@@ -35,10 +35,10 @@\n \n     private TransactionManager transactionManager;\n \n-    @Resource(name = \"java:jboss/mail\")\n+    @Resource(lookup = \"java:jboss/mail\")\n     private Context context;\n \n-    @Resource(name = \"java:/TransactionManager\")\n+    @Resource(lookup = \"java:/TransactionManager\")\n     public void setTransactionManager(TransactionManager transactionManager) {\n         this.transactionManager = transactionManager;\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 41,
        "bugNodeStartChar": 1409,
        "bugNodeLength": 33,
        "fixLineNum": 41,
        "fixNodeStartChar": 1409,
        "fixNodeLength": 35,
        "sourceBeforeFix": "name=\"java:/TransactionManager\"",
        "sourceAfterFix": "lookup=\"java:/TransactionManager\""
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f0cd1c2accadd71cdfb6300c34bc0587b16d4c69",
        "fixCommitParentSHA1": "463f282132bf47d5800a2a539f42ccff47eed3d5",
        "bugFilePath": "clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanDescriptions.java",
        "fixPatch": "diff --git a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanDescriptions.java b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanDescriptions.java\nindex 4e79441..2ad93d7 100644\n--- a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanDescriptions.java\n+++ b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanDescriptions.java\n@@ -99,7 +99,7 @@\n             attr.addResourceAttributeDescription(resources, keyPrefix, container);\n         }\n         // need to add value type until we replace with a ListAttribute\n-        ALIAS.addResourceAttributeDescription(resources, keyPrefix, container).\n+        ALIASES.addResourceAttributeDescription(resources, keyPrefix, container).\n                 get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING);\n         // information about its child \"singleton=transport\"\n         container.get(CHILDREN, ModelKeys.SINGLETON, DESCRIPTION).set(resources.getString(keyPrefix + \".singleton\"));\n@@ -139,7 +139,7 @@\n             attr.addOperationParameterDescription(resources, \"infinispan.container\", op);\n         }\n         // need to add value type until we replace with a ListAttribute\n-        ALIAS.addOperationParameterDescription(resources, \"infinispan.container\", op).\n+        ALIASES.addOperationParameterDescription(resources, \"infinispan.container\", op).\n                 get(ModelDescriptionConstants.VALUE_TYPE).set(ModelType.STRING);\n         return op;\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 102,
        "bugNodeStartChar": 4779,
        "bugNodeLength": 70,
        "fixLineNum": 102,
        "fixNodeStartChar": 4779,
        "fixNodeLength": 72,
        "sourceBeforeFix": "ALIAS.addResourceAttributeDescription(resources,keyPrefix,container)",
        "sourceAfterFix": "ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "48041fee0e8a87ebebc32f085634a6cd231dd33d",
        "fixCommitParentSHA1": "fb8d329ac40fbd05da6e82e1a22e674b70238681",
        "bugFilePath": "src/main/java/io/vertx/core/http/impl/ConnectionManager.java",
        "fixPatch": "diff --git a/src/main/java/io/vertx/core/http/impl/ConnectionManager.java b/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\nindex f08d6d2..1117d58 100644\n--- a/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\n+++ b/src/main/java/io/vertx/core/http/impl/ConnectionManager.java\n@@ -53,13 +53,13 @@\n   }\n \n   synchronized void start(boolean checkExpired) {\n-    this.timerID = checkExpired ? client.getVertx().setTimer(1, id -> checkExpired()) : -1;\n+    this.timerID = checkExpired ? client.getVertx().setTimer(1000, id -> checkExpired()) : -1;\n   }\n \n   private synchronized void checkExpired() {\n     long timestamp = System.currentTimeMillis();\n     endpointMap.values().forEach(e -> e.pool.closeIdle(timestamp));\n-    timerID = client.getVertx().setTimer(1, id -> checkExpired());\n+    timerID = client.getVertx().setTimer(1000, id -> checkExpired());\n   }\n \n   private static final class EndpointKey {\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 62,
        "bugNodeStartChar": 2213,
        "bugNodeLength": 51,
        "fixLineNum": 62,
        "fixNodeStartChar": 2213,
        "fixNodeLength": 54,
        "sourceBeforeFix": "client.getVertx().setTimer(1,id -> checkExpired())",
        "sourceAfterFix": "client.getVertx().setTimer(1000,id -> checkExpired())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5d105e75982c88ffc958ef9de14266ae8522a0f9",
        "fixCommitParentSHA1": "5e982752515dd52745d11d6dce6d6038dc482348",
        "bugFilePath": "server/src/main/java/io/druid/client/CachingQueryRunner.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/client/CachingQueryRunner.java b/server/src/main/java/io/druid/client/CachingQueryRunner.java\nindex d92db64..ad2718e 100644\n--- a/server/src/main/java/io/druid/client/CachingQueryRunner.java\n+++ b/server/src/main/java/io/druid/client/CachingQueryRunner.java\n@@ -82,7 +82,7 @@\n \n     final boolean useCache = query.getContextUseCache(true)\n         && strategy != null\n-        && cacheConfig.isPopulateCache();\n+        && cacheConfig.isUseCache();\n \n     final Cache.NamedKey key;\n     if(strategy != null && (useCache || populateCache)) {\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 85,
        "bugNodeStartChar": 2889,
        "bugNodeLength": 29,
        "fixLineNum": 85,
        "fixNodeStartChar": 2889,
        "fixNodeLength": 24,
        "sourceBeforeFix": "cacheConfig.isPopulateCache()",
        "sourceAfterFix": "cacheConfig.isUseCache()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "a2e9823d1c81937fea9a5a72f6ee8c073eeeb100",
        "fixCommitParentSHA1": "9f33838169e4c3165d5ab75b879a7b1e6fa96bab",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\nindex 0123361..fa2ec1a 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n@@ -747,7 +747,7 @@\n \n \t\t\t\t// If there are no configuration entries for this node, then continue.\n \t\t\t\tList<ZWaveDbConfigurationParameter> configList = database.getProductConfigParameters();\n-\t\t\t\tif(configList.size() == 0) {\n+\t\t\t\tif(configList == null || configList.size() == 0) {\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 750,
        "bugNodeStartChar": 32462,
        "bugNodeLength": 22,
        "fixLineNum": 750,
        "fixNodeStartChar": 32462,
        "fixNodeLength": 44,
        "sourceBeforeFix": "configList.size() == 0",
        "sourceAfterFix": "configList == null || configList.size() == 0"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "eba6f9a2f7bfd15a9adf15d356e699a0143bb5a1",
        "fixCommitParentSHA1": "0437722449c59fdc21fc5d18a59e5e0b961208af",
        "bugFilePath": "flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java",
        "fixPatch": "diff --git a/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java b/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\nindex 39386e6..4cf855a 100644\n--- a/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\n+++ b/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\n@@ -36,7 +36,7 @@\n \tpublic TezRuntimeEnvironment(long totalMemory) {\n \t\tint pageSize = DEFAULT_PAGE_SIZE;\n \t\tint numSlots = DEFAULT_NUM_SLOTS;\n-\t\tthis.memoryManager = new DefaultMemoryManager(totalMemory, numSlots, pageSize);\n+\t\tthis.memoryManager = new DefaultMemoryManager(totalMemory, numSlots, pageSize, true);\n \t\tthis.ioManager = new IOManagerAsync();\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 39,
        "bugNodeStartChar": 1461,
        "bugNodeLength": 57,
        "fixLineNum": 39,
        "fixNodeStartChar": 1461,
        "fixNodeLength": 63,
        "sourceBeforeFix": "new DefaultMemoryManager(totalMemory,numSlots,pageSize)",
        "sourceAfterFix": "new DefaultMemoryManager(totalMemory,numSlots,pageSize,true)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "d4394e3727c822cd62e1e916335493df61ee409d",
        "fixCommitParentSHA1": "b58fc9ad713aa8ca68b0b38a87b235f4f8f96d6c",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\nindex 34d1c15..1dcf1e3 100755\n--- a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n@@ -586,7 +586,7 @@\n                 mw.visitLabel(forItemNullElse_);\n \n                 Label forItemClassIfEnd_ = new Label(), forItemClassIfElse_ = new Label();\n-                if (elementClass != null) {\n+                if (elementClass != null && Modifier.isPublic(elementClass.getModifiers())) {\n                     mw.visitVarInsn(ALOAD, context.var(\"list_item\"));\n                     mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n                     mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(elementClass)));\n@@ -697,7 +697,7 @@\n                 mw.visitVarInsn(ASTORE, context.var(\"fied_ser\"));\n \n                 Label instanceOfElse_ = new Label(), instanceOfEnd_ = new Label();\n-                if (context.writeDirect) {\n+                if (context.writeDirect && Modifier.isPublic(fieldClass.getModifiers())) {\n                     mw.visitVarInsn(ALOAD, context.var(\"fied_ser\"));\n                     mw.visitTypeInsn(INSTANCEOF, type(JavaBeanSerializer.class));\n                     mw.visitJumpInsn(IFEQ, instanceOfElse_);\n@@ -1482,7 +1482,7 @@\n             mw.visitLabel(forItemNullElse_);\n \n             Label forItemClassIfEnd_ = new Label(), forItemClassIfElse_ = new Label();\n-            if (elementClass != null) {\n+            if (elementClass != null && Modifier.isPublic(elementClass.getModifiers())) {\n                 mw.visitVarInsn(ALOAD, context.var(\"list_item\"));\n                 mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n                 mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(elementClass)));\n@@ -1670,7 +1670,7 @@\n         mw.visitMethodInsn(INVOKEVIRTUAL, SerializeWriter, \"writeFieldName\", \"(Ljava/lang/String;Z)V\");\n \n         Label classIfEnd_ = new Label(), classIfElse_ = new Label();\n-        if (!ParserConfig.isPrimitive(fieldClass)) {\n+        if (Modifier.isPublic(fieldClass.getModifiers()) && !ParserConfig.isPrimitive(fieldClass)) {\n             mw.visitVarInsn(ALOAD, context.var(\"object\"));\n             mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n             mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(fieldClass)));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 1485,
        "bugNodeStartChar": 63809,
        "bugNodeLength": 20,
        "fixLineNum": 1485,
        "fixNodeStartChar": 63809,
        "fixNodeLength": 70,
        "sourceBeforeFix": "elementClass != null",
        "sourceAfterFix": "elementClass != null && Modifier.isPublic(elementClass.getModifiers())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bd963bca14d8ecd4c2eded3c6354045ebf73d505",
        "fixCommitParentSHA1": "e78a9a703fe213d6fcf35eb5f956e80573ba9881",
        "bugFilePath": "src/jvm/backtype/storm/scheduler/Cluster.java",
        "fixPatch": "diff --git a/src/jvm/backtype/storm/scheduler/Cluster.java b/src/jvm/backtype/storm/scheduler/Cluster.java\nindex b94bfdd..d268831 100644\n--- a/src/jvm/backtype/storm/scheduler/Cluster.java\n+++ b/src/jvm/backtype/storm/scheduler/Cluster.java\n@@ -33,7 +33,7 @@\n         for (String nodeId : supervisors.keySet()) {\n             SupervisorDetails supervisor = supervisors.get(nodeId);\n             String host = supervisor.getHost();\n-            if (!this.supervisors.containsKey(host)) {\n+            if (!this.hostToId.containsKey(host)) {\n                 this.hostToId.put(host, new ArrayList<String>());\n             }\n             this.hostToId.get(host).add(nodeId);\n",
        "projectName": "apache.storm",
        "bugLineNum": 36,
        "bugNodeStartChar": 1255,
        "bugNodeLength": 16,
        "fixLineNum": 36,
        "fixNodeStartChar": 1255,
        "fixNodeLength": 13,
        "sourceBeforeFix": "this.supervisors",
        "sourceAfterFix": "this.hostToId"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/DifferenceTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/DifferenceTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/DifferenceTest.java\nindex 85188fb..c913bd7 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/DifferenceTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/DifferenceTest.java\n@@ -26,7 +26,7 @@\n \t\t\twithInputs(difference);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 29,
        "bugNodeStartChar": 981,
        "bugNodeLength": 38,
        "fixLineNum": 29,
        "fixNodeStartChar": 981,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "25ab2615a8237104ff679c956ae237891b9b176c",
        "fixCommitParentSHA1": "4fa7372aa5ae1ce57c518bf07ee91cad8c7142c9",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/util/scheduler/SecondsBasedEntryTaskScheduler.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/util/scheduler/SecondsBasedEntryTaskScheduler.java b/hazelcast/src/main/java/com/hazelcast/util/scheduler/SecondsBasedEntryTaskScheduler.java\nindex d34dc0b..6c90530 100644\n--- a/hazelcast/src/main/java/com/hazelcast/util/scheduler/SecondsBasedEntryTaskScheduler.java\n+++ b/hazelcast/src/main/java/com/hazelcast/util/scheduler/SecondsBasedEntryTaskScheduler.java\n@@ -144,7 +144,7 @@\n             if (second != null) {\n                 final ConcurrentMap<Object, ScheduledEntry<K, V>> entries = scheduledEntries.get(second);\n                 if (entries != null) {\n-                    result = entries.remove(key);\n+                    result = entries.remove(timeKey);\n                 }\n             }\n         }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 147,
        "bugNodeStartChar": 6177,
        "bugNodeLength": 19,
        "fixLineNum": 147,
        "fixNodeStartChar": 6177,
        "fixNodeLength": 23,
        "sourceBeforeFix": "entries.remove(key)",
        "sourceAfterFix": "entries.remove(timeKey)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "cdbe9fde5523faa218e24c8ed2781267078b9caf",
        "fixCommitParentSHA1": "1b9a53fba3582e119dea0b2aa75d90a6aaea2af9",
        "bugFilePath": "tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java",
        "fixPatch": "diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\nindex 924cdb1..68a3685 100644\n--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\n+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareCatalogMojo.java\n@@ -701,14 +701,14 @@\n             File[] components = componentsDir.listFiles();\n             if (components != null) {\n                 for (File dir : components) {\n-                    if (dir.isDirectory() && !\"target\".equals(dir.getName())) {\n+                    if (dir.isDirectory() && !\"target\".equals(dir.getName()) && !dir.getName().startsWith(\".\")) {\n                         File target = new File(dir, \"src/main/docs\");\n \n                         int before = adocFiles.size();\n                         findAsciiDocFilesRecursive(target, adocFiles, new CamelAsciiDocFileFilter());\n                         int after = adocFiles.size();\n \n-                        if (before != after) {\n+                        if (before == after) {\n                             missingAdocFiles.add(dir);\n                         }\n                     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 704,
        "bugNodeStartChar": 27525,
        "bugNodeLength": 52,
        "fixLineNum": 704,
        "fixNodeStartChar": 27525,
        "fixNodeLength": 86,
        "sourceBeforeFix": "dir.isDirectory() && !\"target\".equals(dir.getName())",
        "sourceAfterFix": "dir.isDirectory() && !\"target\".equals(dir.getName()) && !dir.getName().startsWith(\".\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6156922ad6d8d2c4965dbdd10f4f2b65b13b9e76",
        "fixCommitParentSHA1": "88d84c537c15c7e3e6154ac7ed18b792d0b4d3c8",
        "bugFilePath": "src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java",
        "fixPatch": "diff --git a/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java\nindex 3a5f019..a322a71 100644\n--- a/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java\n+++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java\n@@ -62,7 +62,7 @@\n         Object msg = e.getMessage();\n         if (msg instanceof HttpResponse && ((HttpResponse) msg).getStatus().getCode() == 100) {\n             // 100-continue response must be passed through.\n-            ctx.sendDownstream(e);\n+            ctx.sendUpstream(e);\n         } else if (msg instanceof HttpMessage) {\n             HttpMessage m = (HttpMessage) msg;\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 65,
        "bugNodeStartChar": 2939,
        "bugNodeLength": 21,
        "fixLineNum": 65,
        "fixNodeStartChar": 2939,
        "fixNodeLength": 19,
        "sourceBeforeFix": "ctx.sendDownstream(e)",
        "sourceAfterFix": "ctx.sendUpstream(e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ac2d51d28fd28794371073b7009abd88f31cbedf",
        "fixCommitParentSHA1": "21373ce403814e761990f9bffdb526980fafdf7b",
        "bugFilePath": "testsuite/integration/src/test/java/org/jboss/as/testsuite/integration/wsejb/EJBWebServicesTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/src/test/java/org/jboss/as/testsuite/integration/wsejb/EJBWebServicesTestCase.java b/testsuite/integration/src/test/java/org/jboss/as/testsuite/integration/wsejb/EJBWebServicesTestCase.java\nindex f0e88fc..c315d2f 100644\n--- a/testsuite/integration/src/test/java/org/jboss/as/testsuite/integration/wsejb/EJBWebServicesTestCase.java\n+++ b/testsuite/integration/src/test/java/org/jboss/as/testsuite/integration/wsejb/EJBWebServicesTestCase.java\n@@ -55,7 +55,7 @@\n                 + \"    </test:setState>\"\n                 + \"  </soapenv:Body>\"\n                 + \"</soapenv:Envelope>\";\n-        String result = HttpRequest.put(\"http://localhost:8080/ejbws-example/SingletonEndpoint\", message, 10, SECONDS);\n+        String result = HttpRequest.post(\"http://localhost:8080/ejbws-example/SingletonEndpoint\", message, 10, SECONDS);\n         // TODO: check something\n         System.out.println(result);\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 58,
        "bugNodeStartChar": 2449,
        "bugNodeLength": 94,
        "fixLineNum": 58,
        "fixNodeStartChar": 2449,
        "fixNodeLength": 95,
        "sourceBeforeFix": "HttpRequest.put(\"http://localhost:8080/ejbws-example/SingletonEndpoint\",message,10,SECONDS)",
        "sourceAfterFix": "HttpRequest.post(\"http://localhost:8080/ejbws-example/SingletonEndpoint\",message,10,SECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "70f070f7158f18eb1396fedc8ae63b3827627219",
        "fixCommitParentSHA1": "bc30366a975b4df94d37e279ce724d61e942cdcf",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java\nindex 6312b3c..3851c0c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/client/CacheCreateConfigRequest.java\n@@ -44,15 +44,15 @@\n     private static final int TRY_COUNT = 100;\n \n     private CacheConfig cacheConfig;\n-    private boolean create;\n+    private boolean createAlsoOnOthers;\n     private int partitionId;\n \n     public CacheCreateConfigRequest() {\n     }\n \n-    public CacheCreateConfigRequest(CacheConfig cacheConfig, boolean create, int partitionId) {\n+    public CacheCreateConfigRequest(CacheConfig cacheConfig, boolean createAlsoOnOthers, int partitionId) {\n         this.cacheConfig = cacheConfig;\n-        this.create = create;\n+        this.createAlsoOnOthers = createAlsoOnOthers;\n         this.partitionId = partitionId;\n     }\n \n@@ -72,7 +72,7 @@\n     }\n \n     protected Operation prepareOperation() {\n-        return new CacheCreateConfigOperation(cacheConfig, create, false);\n+        return new CacheCreateConfigOperation(cacheConfig, createAlsoOnOthers, false);\n     }\n \n     public final int getFactoryId() {\n@@ -90,7 +90,7 @@\n \n     public void write(PortableWriter writer)\n             throws IOException {\n-        writer.writeBoolean(\"c\", create);\n+        writer.writeBoolean(\"c\", createAlsoOnOthers);\n         writer.writeInt(\"p\", partitionId);\n         final ObjectDataOutput out = writer.getRawDataOutput();\n         out.writeObject(cacheConfig);\n@@ -98,7 +98,7 @@\n \n     public void read(PortableReader reader)\n             throws IOException {\n-        create = reader.readBoolean(\"c\");\n+        createAlsoOnOthers = reader.readBoolean(\"c\");\n         partitionId = reader.readInt(\"p\");\n         final ObjectDataInput in = reader.getRawDataInput();\n         cacheConfig = in.readObject();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 75,
        "bugNodeStartChar": 2679,
        "bugNodeLength": 58,
        "fixLineNum": 75,
        "fixNodeStartChar": 2679,
        "fixNodeLength": 70,
        "sourceBeforeFix": "new CacheCreateConfigOperation(cacheConfig,create,false)",
        "sourceAfterFix": "new CacheCreateConfigOperation(cacheConfig,createAlsoOnOthers,false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0cb756acf8ee44c28bee8b9ea626e2a65cee5880",
        "fixCommitParentSHA1": "60e108886fcb173ca21f3966965a0b57cf5b5797",
        "bugFilePath": "guava-tests/test/com/google/common/hash/HashTestUtils.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/hash/HashTestUtils.java b/guava-tests/test/com/google/common/hash/HashTestUtils.java\nindex f2b8971..8dfbdb0 100644\n--- a/guava-tests/test/com/google/common/hash/HashTestUtils.java\n+++ b/guava-tests/test/com/google/common/hash/HashTestUtils.java\n@@ -509,9 +509,9 @@\n     rng.nextBytes(bytes);\n     ByteBuffer littleEndian = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n-    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));\n+    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(bigEndian));\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHasherByteBufferPreservesByteOrder(HashFunction hashFunction) {\n@@ -522,9 +522,9 @@\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n     assertEquals(\n         hashFunction.newHasher().putBytes(littleEndian).hash(),\n-        hashFunction.newHasher().putBytes(littleEndian).hash());\n+        hashFunction.newHasher().putBytes(bigEndian).hash());\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHashBytesThrowsCorrectExceptions(HashFunction hashFunction) {\n",
        "projectName": "google.guava",
        "bugLineNum": 525,
        "bugNodeStartChar": 18762,
        "bugNodeLength": 47,
        "fixLineNum": 525,
        "fixNodeStartChar": 18762,
        "fixNodeLength": 44,
        "sourceBeforeFix": "hashFunction.newHasher().putBytes(littleEndian)",
        "sourceAfterFix": "hashFunction.newHasher().putBytes(bigEndian)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "14b92d8c8c61a1acf6c472026bd66948da6fb28f",
        "fixCommitParentSHA1": "3945a44bdb05ee89ab1cc0fe7c5a9bbd259bafa7",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancerWithNodeGroup.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancerWithNodeGroup.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancerWithNodeGroup.java\nindex ff9ea07..eefb620 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancerWithNodeGroup.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancerWithNodeGroup.java\n@@ -65,7 +65,7 @@\n \n   ClientProtocol client;\n \n-  static final long TIMEOUT = 20000L; //msec\n+  static final long TIMEOUT = 40000L; //msec\n   static final double CAPACITY_ALLOWED_VARIANCE = 0.005;  // 0.5%\n   static final double BALANCE_ALLOWED_VARIANCE = 0.11;    // 10%+delta\n   static final int DEFAULT_BLOCK_SIZE = 10;\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 68,
        "bugNodeStartChar": 2739,
        "bugNodeLength": 16,
        "fixLineNum": 68,
        "fixNodeStartChar": 2739,
        "fixNodeLength": 16,
        "sourceBeforeFix": "TIMEOUT=20000L",
        "sourceAfterFix": "TIMEOUT=40000L"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c465bf58aa9b067eacab42b336530638f63ad420",
        "fixCommitParentSHA1": "14db55254600cf42aa931a7c5ba73652dcfd40c5",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cp/internal/MetadataRaftGroupManager.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cp/internal/MetadataRaftGroupManager.java b/hazelcast/src/main/java/com/hazelcast/cp/internal/MetadataRaftGroupManager.java\nindex 0ee2ee6..1613920 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cp/internal/MetadataRaftGroupManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cp/internal/MetadataRaftGroupManager.java\n@@ -400,7 +400,7 @@\n                 return group.id();\n             }\n \n-            String msg = group.getId() + \" already exists with a different size: \" + group.memberCount();\n+            String msg = group.id() + \" already exists with a different size: \" + group.memberCount();\n             logger.severe(msg);\n             throw new IllegalStateException(msg);\n         }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 403,
        "bugNodeStartChar": 17622,
        "bugNodeLength": 13,
        "fixLineNum": 403,
        "fixNodeStartChar": 17622,
        "fixNodeLength": 10,
        "sourceBeforeFix": "group.getId()",
        "sourceAfterFix": "group.id()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "09acbc1a4f78be8e64a6d28918ad5c6ac08dc753",
        "fixCommitParentSHA1": "6774cc51197f7feaaac1ead4341247953c8dad0e",
        "bugFilePath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java\nindex c915cc4..5fd88ca 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2018 the original author or authors.\n+ * Copyright 2012-2019 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -49,7 +49,7 @@\n  */\n public class UndertowWebServer implements WebServer {\n \n-\tprivate static final Log logger = LogFactory.getLog(UndertowServletWebServer.class);\n+\tprivate static final Log logger = LogFactory.getLog(UndertowWebServer.class);\n \n \tprivate final Object monitor = new Object();\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 52,
        "bugNodeStartChar": 1760,
        "bugNodeLength": 30,
        "fixLineNum": 52,
        "fixNodeStartChar": 1760,
        "fixNodeLength": 23,
        "sourceBeforeFix": "UndertowServletWebServer.class",
        "sourceAfterFix": "UndertowWebServer.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1",
        "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16",
        "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java",
        "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 109,
        "bugNodeStartChar": 4911,
        "bugNodeLength": 9,
        "fixLineNum": 109,
        "fixNodeStartChar": 4803,
        "fixNodeLength": 9,
        "sourceBeforeFix": "items[30]",
        "sourceAfterFix": "items[29]"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f790d5907229357f8e0aca7681de6b5ca2dd2090",
        "fixCommitParentSHA1": "bfac7f0a33d0785c9d8da85aa9fe4f57120f3316",
        "bugFilePath": "jaxrs/jaxrs-client/src/main/java/org/javaee7/jaxrs/client/TestJAXRS2Client.java",
        "fixPatch": "diff --git a/jaxrs/jaxrs-client/src/main/java/org/javaee7/jaxrs/client/TestJAXRS2Client.java b/jaxrs/jaxrs-client/src/main/java/org/javaee7/jaxrs/client/TestJAXRS2Client.java\nindex 1c8ae62..6942fc5 100644\n--- a/jaxrs/jaxrs-client/src/main/java/org/javaee7/jaxrs/client/TestJAXRS2Client.java\n+++ b/jaxrs/jaxrs-client/src/main/java/org/javaee7/jaxrs/client/TestJAXRS2Client.java\n@@ -60,7 +60,8 @@\n @WebServlet(urlPatterns = {\"/TestJAXRS2Client\"})\n public class TestJAXRS2Client extends HttpServlet {\n \n-    private static final long serialVersionUID = 1L;\n+\n+    private static final long serialVersionUID = 1975269372645791816L;\n \n     /**\n      * Processes requests for both HTTP\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 63,
        "bugNodeStartChar": 2675,
        "bugNodeLength": 21,
        "fixLineNum": 64,
        "fixNodeStartChar": 2676,
        "fixNodeLength": 39,
        "sourceBeforeFix": "serialVersionUID=1L",
        "sourceAfterFix": "serialVersionUID=1975269372645791816L"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "28a04af5f4b957b75ba7dbf6486999b75547673c",
        "fixCommitParentSHA1": "72a0c5e829d86520dd59998094afacce4d6de818",
        "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java",
        "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 250,
        "bugNodeStartChar": 9160,
        "bugNodeLength": 16,
        "fixLineNum": 250,
        "fixNodeStartChar": 8911,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Gdx.input.getX()",
        "sourceAfterFix": "Gdx.input.getX(i)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b59ebb01c93bd75a38d59e57d9403515bc3aa014",
        "fixCommitParentSHA1": "3997b356ac8fad916d9c9d47688f20c82b27d79b",
        "bugFilePath": "jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java",
        "fixPatch": "diff --git a/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java b/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\nindex 57b3a26..7c35784 100644\n--- a/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\n+++ b/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\n@@ -9,19 +9,19 @@\n \n     public void testPrettyUptime() throws Exception {\n         int secs = 10860;\n-        assertEquals(\"3h 1m 0s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"3h 1m 0s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 203010;\n-        assertEquals(\"2d 8h 23m 30s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"2d 8h 23m 30s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 234;\n-        assertEquals(\"3m 54s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"3m 54s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 32;\n-        assertEquals(\"32s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"32s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 0;\n-        assertEquals(\"0s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"0s\", StatBuckets.prettyUptimeStr(secs));\n \n     }\n }\n\\ No newline at end of file\n",
        "projectName": "alibaba.jstorm",
        "bugLineNum": 24,
        "bugNodeStartChar": 632,
        "bugNodeLength": 30,
        "fixLineNum": 24,
        "fixNodeStartChar": 632,
        "fixNodeLength": 33,
        "sourceBeforeFix": "StatBuckets.prettyUptime(secs)",
        "sourceAfterFix": "StatBuckets.prettyUptimeStr(secs)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "60e0eb1b8bb87242665c37e1f3ecf549b2457206",
        "fixCommitParentSHA1": "7aa6870af06d990f53b00494258d2ead222aeb5a",
        "bugFilePath": "hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java",
        "fixPatch": "diff --git a/hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java b/hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java\nindex 5471c83..c8dd612 100644\n--- a/hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java\n+++ b/hikaricp-common/src/main/java/com/zaxxer/hikari/AbstractHikariConfig.java\n@@ -38,7 +38,7 @@\n import com.zaxxer.hikari.util.PropertyBeanSetter;\n import com.zaxxer.hikari.util.UtilityElf;\n \n-public abstract class AbstractHikariConfig implements HikariConfigMBean\n+public abstract class AbstractHikariConfig implements HikariConfigMXBean\n {\n    private static final Logger LOGGER = LoggerFactory.getLogger(HikariConfig.class);\n \n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 41,
        "bugNodeStartChar": 1273,
        "bugNodeLength": 23856,
        "fixLineNum": 41,
        "fixNodeStartChar": 1273,
        "fixNodeLength": 23857,
        "sourceBeforeFix": "public abstract class AbstractHikariConfig implements HikariConfigMBean {   private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class);   private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30);   private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5);   private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10);   private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30);   private static int poolNumber;   private static boolean unitTest;   private volatile long connectionTimeout;   private volatile long validationTimeout;   private volatile long idleTimeout;   private volatile long leakDetectionThreshold;   private volatile long maxLifetime;   private volatile int maxPoolSize;   private volatile int minIdle;   private String catalog;   private String connectionCustomizerClassName;   private String connectionInitSql;   private String connectionTestQuery;   private String dataSourceClassName;   private String dataSourceJndiName;   private String driverClassName;   private String jdbcUrl;   private String password;   private String poolName;   private String transactionIsolationName;   private String username;   private boolean isAutoCommit;   private boolean isReadOnly;   private boolean isInitializationFailFast;   private boolean isIsolateInternalQueries;   private boolean isRegisterMbeans;   private boolean isAllowPoolSuspension;   private DataSource dataSource;   private Properties dataSourceProperties;   private IConnectionCustomizer customizer;   private ThreadFactory threadFactory;   private Object metricRegistry;   private Object healthCheckRegistry;   private Properties healthCheckProperties;   /**   * Default constructor  */   public AbstractHikariConfig(){     dataSourceProperties=new Properties();     healthCheckProperties=new Properties();     connectionTimeout=CONNECTION_TIMEOUT;     validationTimeout=VALIDATION_TIMEOUT;     idleTimeout=IDLE_TIMEOUT;     isAutoCommit=true;     isInitializationFailFast=true;     minIdle=-1;     maxPoolSize=10;     maxLifetime=MAX_LIFETIME;     customizer=new IConnectionCustomizer(){       @Override public void customize(      Connection connection) throws SQLException {       }     } ;     String systemProp=System.getProperty(\"hikaricp.configurationFile\");     if (systemProp != null) {       loadProperties(systemProp);     }   }   /**   * Construct a HikariConfig from the specified properties object.  * @param properties the name of the property file  */   public AbstractHikariConfig(  Properties properties){     this();     PropertyBeanSetter.setTargetFromProperties(this,properties);   }   /**   * Construct a HikariConfig from the specified property file name.  <code>propertyFileName</code> will first be treated as a path in the file-system, and if that fails the  ClassLoader.getResourceAsStream(propertyFileName) will be tried.  * @param propertyFileName the name of the property file  */   public AbstractHikariConfig(  String propertyFileName){     this();     loadProperties(propertyFileName);   }   /**   * Get the default catalog name to be set on connections.  * @return the default catalog name  */   public String getCatalog(){     return catalog;   }   /**   * Set the default catalog name to be set on connections.  * @param catalog the catalog name, or null  */   public void setCatalog(  String catalog){     this.catalog=catalog;   }   /**   * Get the name of the connection customizer class to instantiate and execute on all new connections.  * @return the name of the customizer class, or null  */   @Deprecated public String getConnectionCustomizerClassName(){     return connectionCustomizerClassName;   }   /**   * Set the name of the connection customizer class to instantiate and execute on all new connections.  * @param connectionCustomizerClassName the name of the customizer class  */   @Deprecated public void setConnectionCustomizerClassName(  String connectionCustomizerClassName){     this.connectionCustomizerClassName=connectionCustomizerClassName;     LOGGER.warn(\"The connectionCustomizerClassName property has been deprecated and may be removed in a future release\");   }   /**   * Get the customizer instance specified by the user.  * @return an instance of IConnectionCustomizer  */   @Deprecated public IConnectionCustomizer getConnectionCustomizer(){     return customizer;   }   /**   * Set the connection customizer to be used by the pool.  * @param customizer an instance of IConnectionCustomizer  */   @Deprecated public void setConnectionCustomizer(  IConnectionCustomizer customizer){     this.customizer=customizer;     LOGGER.warn(\"The connectionCustomizer property has been deprecated and may be removed in a future release\");   }   /**   * Get the SQL query to be executed to test the validity of connections.  * @return the SQL query string, or null   */   public String getConnectionTestQuery(){     return connectionTestQuery;   }   /**   * Set the SQL query to be executed to test the validity of connections. Using the JDBC4 <code>Connection.isValid()</code> method to test connection validity can be more efficient on some databases and is recommended.  See  {@link HikariConfig#setJdbc4ConnectionTest(boolean)}.  * @param connectionTestQuery a SQL query string  */   public void setConnectionTestQuery(  String connectionTestQuery){     this.connectionTestQuery=connectionTestQuery;   }   /**   * Get the SQL string that will be executed on all new connections when they are created, before they are added to the pool.  * @return the SQL to execute on new connections, or null  */   public String getConnectionInitSql(){     return connectionInitSql;   }   /**   * Set the SQL string that will be executed on all new connections when they are created, before they are added to the pool.  If this query fails, it will be treated as a failed connection attempt.  * @param connectionInitSql the SQL to execute on new connections  */   public void setConnectionInitSql(  String connectionInitSql){     this.connectionInitSql=connectionInitSql;   }   /**   * {@inheritDoc}   */   @Override public long getConnectionTimeout(){     return connectionTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setConnectionTimeout(  long connectionTimeoutMs){     if (connectionTimeoutMs == 0) {       this.connectionTimeout=Integer.MAX_VALUE;     }  else     if (connectionTimeoutMs < 1000) {       throw new IllegalArgumentException(\"connectionTimeout cannot be less than 1000ms\");     }  else {       this.connectionTimeout=connectionTimeoutMs;     }   }   /**   * {@inheritDoc}   */   @Override public long getValidationTimeout(){     return validationTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setValidationTimeout(  long validationTimeoutMs){     if (validationTimeoutMs < 1000) {       throw new IllegalArgumentException(\"validationTimeout cannot be less than 1000ms\");     }  else {       this.validationTimeout=validationTimeoutMs;     }   }   /**   * Get the  {@link DataSource} that has been explicitly specified to be wrapped by thepool.  * @return the {@link DataSource} instance, or null  */   public DataSource getDataSource(){     return dataSource;   }   /**   * Set a  {@link DataSource} for the pool to explicitly wrap.  This setter is notavailable through property file based initialization.  * @param dataSource a specific {@link DataSource} to be wrapped by the pool  */   public void setDataSource(  DataSource dataSource){     this.dataSource=dataSource;   }   public String getDataSourceClassName(){     return dataSourceClassName;   }   public void setDataSourceClassName(  String className){     this.dataSourceClassName=className;   }   public void addDataSourceProperty(  String propertyName,  Object value){     dataSourceProperties.put(propertyName,value);   }   public String getDataSourceJNDI(){     return this.dataSourceJndiName;   }   public void setDataSourceJNDI(  String jndiDataSource){     this.dataSourceJndiName=jndiDataSource;   }   public Properties getDataSourceProperties(){     return dataSourceProperties;   }   public void setDataSourceProperties(  Properties dsProperties){     dataSourceProperties.putAll(dsProperties);   }   public String getDriverClassName(){     return driverClassName;   }   public void setDriverClassName(  String driverClassName){     try {       Class<?> driverClass=this.getClass().getClassLoader().loadClass(driverClassName);       driverClass.newInstance();       this.driverClassName=driverClassName;     }  catch (    Exception e) {       throw new RuntimeException(\"driverClassName specified class '\" + driverClassName + \"' could not be loaded\",e);     }   }   /**   * {@inheritDoc}   */   @Override public long getIdleTimeout(){     return idleTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setIdleTimeout(  long idleTimeoutMs){     if (idleTimeoutMs < 0) {       throw new IllegalArgumentException(\"idleTimeout cannot be negative\");     }     this.idleTimeout=idleTimeoutMs;   }   public String getJdbcUrl(){     return jdbcUrl;   }   public void setJdbcUrl(  String jdbcUrl){     this.jdbcUrl=jdbcUrl;   }   /**   * Get the default auto-commit behavior of connections in the pool.  * @return the default auto-commit behavior of connections  */   public boolean isAutoCommit(){     return isAutoCommit;   }   /**   * Set the default auto-commit behavior of connections in the pool.  * @param isAutoCommit the desired auto-commit default for connections  */   public void setAutoCommit(  boolean isAutoCommit){     this.isAutoCommit=isAutoCommit;   }   /**   * Get the pool suspension behavior (allowed or disallowed).  * @return the pool suspension behavior  */   public boolean isAllowPoolSuspension(){     return isAllowPoolSuspension;   }   /**   * Set whether or not pool suspension is allowed.  There is a performance impact when pool suspension is enabled.  Unless you need it (for a redundancy system for example) do not enable it.  * @param isAllowPoolSuspension the desired pool suspension allowance  */   public void setAllowPoolSuspension(  boolean isAllowPoolSuspension){     this.isAllowPoolSuspension=isAllowPoolSuspension;   }   /**   * Get whether or not the construction of the pool should throw an exception if the minimum number of connections cannot be created.  * @return whether or not initialization should fail on error immediately  */   public boolean isInitializationFailFast(){     return isInitializationFailFast;   }   /**   * Set whether or not the construction of the pool should throw an exception if the minimum number of connections cannot be created.  * @param failFast true if the pool should fail if the minimum connections cannot be created  */   public void setInitializationFailFast(  boolean failFast){     isInitializationFailFast=failFast;   }   public boolean isIsolateInternalQueries(){     return isIsolateInternalQueries;   }   public void setIsolateInternalQueries(  boolean isolate){     this.isIsolateInternalQueries=isolate;   }   @Deprecated public boolean isJdbc4ConnectionTest(){     return false;   }   @Deprecated public void setJdbc4ConnectionTest(  boolean useIsValid){     LOGGER.warn(\"The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery\");   }   /**   * Get the Codahale MetricRegistry, could be null.  * @return the codahale MetricRegistry instance  */   public Object getMetricRegistry(){     return metricRegistry;   }   /**   * Set a Codahale MetricRegistry to use for HikariCP.  * @param metricRegistry the Codahale MetricRegistry to set  */   public void setMetricRegistry(  Object metricRegistry){     if (metricRegistry != null) {       if (metricRegistry instanceof String) {         try {           InitialContext initCtx=new InitialContext();           metricRegistry=(MetricRegistry)initCtx.lookup((String)metricRegistry);         }  catch (        NamingException e) {           throw new IllegalArgumentException(e);         }       }       if (!(metricRegistry instanceof MetricRegistry)) {         throw new IllegalArgumentException(\"Class must be an instance of com.codahale.metrics.MetricRegistry\");       }     }     this.metricRegistry=metricRegistry;   }   /**   * Get the Codahale HealthCheckRegistry, could be null.  * @return the Codahale HealthCheckRegistry instance  */   public Object getHealthCheckRegistry(){     return healthCheckRegistry;   }   /**   * Set a Codahale HealthCheckRegistry to use for HikariCP.  * @param healthCheckRegistry the Codahale HealthCheckRegistry to set  */   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       if (healthCheckRegistry instanceof String) {         try {           InitialContext initCtx=new InitialContext();           healthCheckRegistry=(HealthCheckRegistry)initCtx.lookup((String)healthCheckRegistry);         }  catch (        NamingException e) {           throw new IllegalArgumentException(e);         }       }       if (!(healthCheckRegistry instanceof HealthCheckRegistry)) {         throw new IllegalArgumentException(\"Class must be an instance of com.codahale.metrics.health.HealthCheckRegistry\");       }     }     this.healthCheckRegistry=healthCheckRegistry;   }   public Properties getHealthCheckProperties(){     return healthCheckProperties;   }   public void setHealthCheckProperties(  Properties healthCheckProperties){     this.healthCheckProperties.putAll(healthCheckProperties);   }   public void addHealthCheckProperty(  String key,  String value){     healthCheckProperties.setProperty(key,value);   }   public boolean isReadOnly(){     return isReadOnly;   }   public void setReadOnly(  boolean readOnly){     this.isReadOnly=readOnly;   }   public boolean isRegisterMbeans(){     return isRegisterMbeans;   }   public void setRegisterMbeans(  boolean register){     this.isRegisterMbeans=register;   }   /**   * {@inheritDoc}   */   @Override public long getLeakDetectionThreshold(){     return leakDetectionThreshold;   }   /**   * {@inheritDoc}   */   @Override public void setLeakDetectionThreshold(  long leakDetectionThresholdMs){     this.leakDetectionThreshold=leakDetectionThresholdMs;   }   /**   * {@inheritDoc}   */   @Override public long getMaxLifetime(){     return maxLifetime;   }   /**   * {@inheritDoc}   */   @Override public void setMaxLifetime(  long maxLifetimeMs){     this.maxLifetime=maxLifetimeMs;   }   /**   * {@inheritDoc}   */   @Override public int getMaximumPoolSize(){     return maxPoolSize;   }   /**   * {@inheritDoc}   */   @Override public void setMaximumPoolSize(  int maxPoolSize){     if (maxPoolSize < 1) {       throw new IllegalArgumentException(\"maxPoolSize cannot be less than 1\");     }     this.maxPoolSize=maxPoolSize;   }   /**   * {@inheritDoc}   */   @Override public int getMinimumIdle(){     return minIdle;   }   /**   * {@inheritDoc}   */   @Override public void setMinimumIdle(  int minIdle){     if (minIdle < 0) {       throw new IllegalArgumentException(\"minimumIdle cannot be negative\");     }     this.minIdle=minIdle;   }   /**   * Get the default password to use for DataSource.getConnection(username, password) calls.  * @return the password  */   public String getPassword(){     return password;   }   /**   * Set the default password to use for DataSource.getConnection(username, password) calls.  * @param password the password  */   public void setPassword(  String password){     this.password=password;   }   /**   * {@inheritDoc}   */   @Override public String getPoolName(){     return poolName;   }   /**   * Set the name of the connection pool.  This is primarily used for the MBean to uniquely identify the pool configuration.  * @param poolName the name of the connection pool to use  */   public void setPoolName(  String poolName){     this.poolName=poolName;   }   public String getTransactionIsolation(){     return transactionIsolationName;   }   /**   * Set the default transaction isolation level.  The specified value is the constant name from the <code>Connection</code> class, eg.  <code>TRANSACTION_REPEATABLE_READ</code>.  * @param isolationLevel the name of the isolation level  */   public void setTransactionIsolation(  String isolationLevel){     this.transactionIsolationName=isolationLevel;   }   /**   * Get the default username used for DataSource.getConnection(username, password) calls.  * @return the username  */   public String getUsername(){     return username;   }   /**   * Set the default username used for DataSource.getConnection(username, password) calls.  * @param username the username  */   public void setUsername(  String username){     this.username=username;   }   /**   * Get the thread factory used to create threads.  * @return the thread factory (may be null, in which case the default thread factory is used)  */   public ThreadFactory getThreadFactory(){     return threadFactory;   }   /**   * Set the thread factory to be used to create threads.  * @param threadFactory the thread factory (setting to null causes the default thread factory to be used)  */   public void setThreadFactory(  ThreadFactory threadFactory){     this.threadFactory=threadFactory;   }   public void validate(){     Logger logger=LoggerFactory.getLogger(getClass());     validateNumerics();     if (connectionCustomizerClassName != null) {       try {         getClass().getClassLoader().loadClass(connectionCustomizerClassName);       }  catch (      Exception e) {         logger.warn(\"connectionCustomizationClass specified class '\" + connectionCustomizerClassName + \"' could not be loaded\",e);         connectionCustomizerClassName=null;       }     }     if (driverClassName != null && jdbcUrl == null) {       logger.error(\"when specifying driverClassName, jdbcUrl must also be specified\");       throw new IllegalStateException(\"when specifying driverClassName, jdbcUrl must also be specified\");     }  else     if (driverClassName != null && dataSourceClassName != null) {       logger.error(\"both driverClassName and dataSourceClassName are specified, one or the other should be used\");       throw new IllegalStateException(\"both driverClassName and dataSourceClassName are specified, one or the other should be used\");     }  else     if (jdbcUrl != null) {     }  else     if (dataSource == null && dataSourceClassName == null) {       logger.error(\"one of either dataSource, dataSourceClassName, or jdbcUrl and driverClassName must be specified\");       throw new IllegalArgumentException(\"one of either dataSource or dataSourceClassName must be specified\");     }  else     if (dataSource != null && dataSourceClassName != null) {       logger.warn(\"both dataSource and dataSourceClassName are specified, ignoring dataSourceClassName\");     }     if (transactionIsolationName != null) {       UtilityElf.getTransactionIsolation(transactionIsolationName);     }     if (poolName == null) {       poolName=\"HikariPool-\" + poolNumber++;     }     if (LOGGER.isDebugEnabled() || unitTest) {       logConfiguration();     }   }   private void validateNumerics(){     Logger logger=LoggerFactory.getLogger(getClass());     if (validationTimeout > connectionTimeout && connectionTimeout != 0) {       logger.warn(\"validationTimeout is greater than connectionTimeout, setting validationTimeout to connectionTimeout.\");       validationTimeout=connectionTimeout;     }     if (minIdle < 0 || minIdle > maxPoolSize) {       minIdle=maxPoolSize;     }     if (maxLifetime < 0) {       logger.error(\"maxLifetime cannot be negative.\");       throw new IllegalArgumentException(\"maxLifetime cannot be negative.\");     }  else     if (maxLifetime > 0 && maxLifetime < TimeUnit.SECONDS.toMillis(30)) {       logger.warn(\"maxLifetime is less than 30000ms, using default {}ms.\",MAX_LIFETIME);       maxLifetime=MAX_LIFETIME;     }     if (idleTimeout != 0 && idleTimeout < TimeUnit.SECONDS.toMillis(10)) {       logger.warn(\"idleTimeout is less than 10000ms, using default {}ms.\",IDLE_TIMEOUT);       idleTimeout=IDLE_TIMEOUT;     }  else     if (idleTimeout > maxLifetime && maxLifetime > 0) {       logger.warn(\"idleTimeout is greater than maxLifetime, setting to maxLifetime.\");       idleTimeout=maxLifetime;     }     if (leakDetectionThreshold != 0 && leakDetectionThreshold < TimeUnit.SECONDS.toMillis(2) && !unitTest) {       logger.warn(\"leakDetectionThreshold is less than 2000ms, setting to minimum 2000ms.\");       leakDetectionThreshold=2000L;     }   }   private void logConfiguration(){     LOGGER.debug(\"HikariCP pool {} configuration:\",poolName);     final Set<String> propertyNames=new TreeSet<String>(PropertyBeanSetter.getPropertyNames(HikariConfig.class));     for (    String prop : propertyNames) {       try {         Object value=PropertyBeanSetter.getProperty(prop,this);         if (\"dataSourceProperties\".equals(prop)) {           Properties dsProps=PropertyBeanSetter.copyProperties(dataSourceProperties);           dsProps.setProperty(\"password\",\"<masked>\");           value=dsProps;         }         value=(prop.contains(\"password\") ? \"<masked>\" : value);         LOGGER.debug((prop + \"................................................\").substring(0,32) + (value != null ? value : \"\"));       }  catch (      Exception e) {         continue;       }     }   }   abstract protected void loadProperties(  String propertyFileName);   public void copyState(  AbstractHikariConfig other){     for (    Field field : AbstractHikariConfig.class.getDeclaredFields()) {       if (!Modifier.isFinal(field.getModifiers())) {         field.setAccessible(true);         try {           field.set(other,field.get(this));         }  catch (        Exception e) {           throw new RuntimeException(\"Exception copying HikariConfig state: \" + e.getMessage(),e);         }       }     }   } } ",
        "sourceAfterFix": "public abstract class AbstractHikariConfig implements HikariConfigMXBean {   private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class);   private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30);   private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5);   private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10);   private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30);   private static int poolNumber;   private static boolean unitTest;   private volatile long connectionTimeout;   private volatile long validationTimeout;   private volatile long idleTimeout;   private volatile long leakDetectionThreshold;   private volatile long maxLifetime;   private volatile int maxPoolSize;   private volatile int minIdle;   private String catalog;   private String connectionCustomizerClassName;   private String connectionInitSql;   private String connectionTestQuery;   private String dataSourceClassName;   private String dataSourceJndiName;   private String driverClassName;   private String jdbcUrl;   private String password;   private String poolName;   private String transactionIsolationName;   private String username;   private boolean isAutoCommit;   private boolean isReadOnly;   private boolean isInitializationFailFast;   private boolean isIsolateInternalQueries;   private boolean isRegisterMbeans;   private boolean isAllowPoolSuspension;   private DataSource dataSource;   private Properties dataSourceProperties;   private IConnectionCustomizer customizer;   private ThreadFactory threadFactory;   private Object metricRegistry;   private Object healthCheckRegistry;   private Properties healthCheckProperties;   /**   * Default constructor  */   public AbstractHikariConfig(){     dataSourceProperties=new Properties();     healthCheckProperties=new Properties();     connectionTimeout=CONNECTION_TIMEOUT;     validationTimeout=VALIDATION_TIMEOUT;     idleTimeout=IDLE_TIMEOUT;     isAutoCommit=true;     isInitializationFailFast=true;     minIdle=-1;     maxPoolSize=10;     maxLifetime=MAX_LIFETIME;     customizer=new IConnectionCustomizer(){       @Override public void customize(      Connection connection) throws SQLException {       }     } ;     String systemProp=System.getProperty(\"hikaricp.configurationFile\");     if (systemProp != null) {       loadProperties(systemProp);     }   }   /**   * Construct a HikariConfig from the specified properties object.  * @param properties the name of the property file  */   public AbstractHikariConfig(  Properties properties){     this();     PropertyBeanSetter.setTargetFromProperties(this,properties);   }   /**   * Construct a HikariConfig from the specified property file name.  <code>propertyFileName</code> will first be treated as a path in the file-system, and if that fails the  ClassLoader.getResourceAsStream(propertyFileName) will be tried.  * @param propertyFileName the name of the property file  */   public AbstractHikariConfig(  String propertyFileName){     this();     loadProperties(propertyFileName);   }   /**   * Get the default catalog name to be set on connections.  * @return the default catalog name  */   public String getCatalog(){     return catalog;   }   /**   * Set the default catalog name to be set on connections.  * @param catalog the catalog name, or null  */   public void setCatalog(  String catalog){     this.catalog=catalog;   }   /**   * Get the name of the connection customizer class to instantiate and execute on all new connections.  * @return the name of the customizer class, or null  */   @Deprecated public String getConnectionCustomizerClassName(){     return connectionCustomizerClassName;   }   /**   * Set the name of the connection customizer class to instantiate and execute on all new connections.  * @param connectionCustomizerClassName the name of the customizer class  */   @Deprecated public void setConnectionCustomizerClassName(  String connectionCustomizerClassName){     this.connectionCustomizerClassName=connectionCustomizerClassName;     LOGGER.warn(\"The connectionCustomizerClassName property has been deprecated and may be removed in a future release\");   }   /**   * Get the customizer instance specified by the user.  * @return an instance of IConnectionCustomizer  */   @Deprecated public IConnectionCustomizer getConnectionCustomizer(){     return customizer;   }   /**   * Set the connection customizer to be used by the pool.  * @param customizer an instance of IConnectionCustomizer  */   @Deprecated public void setConnectionCustomizer(  IConnectionCustomizer customizer){     this.customizer=customizer;     LOGGER.warn(\"The connectionCustomizer property has been deprecated and may be removed in a future release\");   }   /**   * Get the SQL query to be executed to test the validity of connections.  * @return the SQL query string, or null   */   public String getConnectionTestQuery(){     return connectionTestQuery;   }   /**   * Set the SQL query to be executed to test the validity of connections. Using the JDBC4 <code>Connection.isValid()</code> method to test connection validity can be more efficient on some databases and is recommended.  See  {@link HikariConfig#setJdbc4ConnectionTest(boolean)}.  * @param connectionTestQuery a SQL query string  */   public void setConnectionTestQuery(  String connectionTestQuery){     this.connectionTestQuery=connectionTestQuery;   }   /**   * Get the SQL string that will be executed on all new connections when they are created, before they are added to the pool.  * @return the SQL to execute on new connections, or null  */   public String getConnectionInitSql(){     return connectionInitSql;   }   /**   * Set the SQL string that will be executed on all new connections when they are created, before they are added to the pool.  If this query fails, it will be treated as a failed connection attempt.  * @param connectionInitSql the SQL to execute on new connections  */   public void setConnectionInitSql(  String connectionInitSql){     this.connectionInitSql=connectionInitSql;   }   /**   * {@inheritDoc}   */   @Override public long getConnectionTimeout(){     return connectionTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setConnectionTimeout(  long connectionTimeoutMs){     if (connectionTimeoutMs == 0) {       this.connectionTimeout=Integer.MAX_VALUE;     }  else     if (connectionTimeoutMs < 1000) {       throw new IllegalArgumentException(\"connectionTimeout cannot be less than 1000ms\");     }  else {       this.connectionTimeout=connectionTimeoutMs;     }   }   /**   * {@inheritDoc}   */   @Override public long getValidationTimeout(){     return validationTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setValidationTimeout(  long validationTimeoutMs){     if (validationTimeoutMs < 1000) {       throw new IllegalArgumentException(\"validationTimeout cannot be less than 1000ms\");     }  else {       this.validationTimeout=validationTimeoutMs;     }   }   /**   * Get the  {@link DataSource} that has been explicitly specified to be wrapped by thepool.  * @return the {@link DataSource} instance, or null  */   public DataSource getDataSource(){     return dataSource;   }   /**   * Set a  {@link DataSource} for the pool to explicitly wrap.  This setter is notavailable through property file based initialization.  * @param dataSource a specific {@link DataSource} to be wrapped by the pool  */   public void setDataSource(  DataSource dataSource){     this.dataSource=dataSource;   }   public String getDataSourceClassName(){     return dataSourceClassName;   }   public void setDataSourceClassName(  String className){     this.dataSourceClassName=className;   }   public void addDataSourceProperty(  String propertyName,  Object value){     dataSourceProperties.put(propertyName,value);   }   public String getDataSourceJNDI(){     return this.dataSourceJndiName;   }   public void setDataSourceJNDI(  String jndiDataSource){     this.dataSourceJndiName=jndiDataSource;   }   public Properties getDataSourceProperties(){     return dataSourceProperties;   }   public void setDataSourceProperties(  Properties dsProperties){     dataSourceProperties.putAll(dsProperties);   }   public String getDriverClassName(){     return driverClassName;   }   public void setDriverClassName(  String driverClassName){     try {       Class<?> driverClass=this.getClass().getClassLoader().loadClass(driverClassName);       driverClass.newInstance();       this.driverClassName=driverClassName;     }  catch (    Exception e) {       throw new RuntimeException(\"driverClassName specified class '\" + driverClassName + \"' could not be loaded\",e);     }   }   /**   * {@inheritDoc}   */   @Override public long getIdleTimeout(){     return idleTimeout;   }   /**   * {@inheritDoc}   */   @Override public void setIdleTimeout(  long idleTimeoutMs){     if (idleTimeoutMs < 0) {       throw new IllegalArgumentException(\"idleTimeout cannot be negative\");     }     this.idleTimeout=idleTimeoutMs;   }   public String getJdbcUrl(){     return jdbcUrl;   }   public void setJdbcUrl(  String jdbcUrl){     this.jdbcUrl=jdbcUrl;   }   /**   * Get the default auto-commit behavior of connections in the pool.  * @return the default auto-commit behavior of connections  */   public boolean isAutoCommit(){     return isAutoCommit;   }   /**   * Set the default auto-commit behavior of connections in the pool.  * @param isAutoCommit the desired auto-commit default for connections  */   public void setAutoCommit(  boolean isAutoCommit){     this.isAutoCommit=isAutoCommit;   }   /**   * Get the pool suspension behavior (allowed or disallowed).  * @return the pool suspension behavior  */   public boolean isAllowPoolSuspension(){     return isAllowPoolSuspension;   }   /**   * Set whether or not pool suspension is allowed.  There is a performance impact when pool suspension is enabled.  Unless you need it (for a redundancy system for example) do not enable it.  * @param isAllowPoolSuspension the desired pool suspension allowance  */   public void setAllowPoolSuspension(  boolean isAllowPoolSuspension){     this.isAllowPoolSuspension=isAllowPoolSuspension;   }   /**   * Get whether or not the construction of the pool should throw an exception if the minimum number of connections cannot be created.  * @return whether or not initialization should fail on error immediately  */   public boolean isInitializationFailFast(){     return isInitializationFailFast;   }   /**   * Set whether or not the construction of the pool should throw an exception if the minimum number of connections cannot be created.  * @param failFast true if the pool should fail if the minimum connections cannot be created  */   public void setInitializationFailFast(  boolean failFast){     isInitializationFailFast=failFast;   }   public boolean isIsolateInternalQueries(){     return isIsolateInternalQueries;   }   public void setIsolateInternalQueries(  boolean isolate){     this.isIsolateInternalQueries=isolate;   }   @Deprecated public boolean isJdbc4ConnectionTest(){     return false;   }   @Deprecated public void setJdbc4ConnectionTest(  boolean useIsValid){     LOGGER.warn(\"The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery\");   }   /**   * Get the Codahale MetricRegistry, could be null.  * @return the codahale MetricRegistry instance  */   public Object getMetricRegistry(){     return metricRegistry;   }   /**   * Set a Codahale MetricRegistry to use for HikariCP.  * @param metricRegistry the Codahale MetricRegistry to set  */   public void setMetricRegistry(  Object metricRegistry){     if (metricRegistry != null) {       if (metricRegistry instanceof String) {         try {           InitialContext initCtx=new InitialContext();           metricRegistry=(MetricRegistry)initCtx.lookup((String)metricRegistry);         }  catch (        NamingException e) {           throw new IllegalArgumentException(e);         }       }       if (!(metricRegistry instanceof MetricRegistry)) {         throw new IllegalArgumentException(\"Class must be an instance of com.codahale.metrics.MetricRegistry\");       }     }     this.metricRegistry=metricRegistry;   }   /**   * Get the Codahale HealthCheckRegistry, could be null.  * @return the Codahale HealthCheckRegistry instance  */   public Object getHealthCheckRegistry(){     return healthCheckRegistry;   }   /**   * Set a Codahale HealthCheckRegistry to use for HikariCP.  * @param healthCheckRegistry the Codahale HealthCheckRegistry to set  */   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       if (healthCheckRegistry instanceof String) {         try {           InitialContext initCtx=new InitialContext();           healthCheckRegistry=(HealthCheckRegistry)initCtx.lookup((String)healthCheckRegistry);         }  catch (        NamingException e) {           throw new IllegalArgumentException(e);         }       }       if (!(healthCheckRegistry instanceof HealthCheckRegistry)) {         throw new IllegalArgumentException(\"Class must be an instance of com.codahale.metrics.health.HealthCheckRegistry\");       }     }     this.healthCheckRegistry=healthCheckRegistry;   }   public Properties getHealthCheckProperties(){     return healthCheckProperties;   }   public void setHealthCheckProperties(  Properties healthCheckProperties){     this.healthCheckProperties.putAll(healthCheckProperties);   }   public void addHealthCheckProperty(  String key,  String value){     healthCheckProperties.setProperty(key,value);   }   public boolean isReadOnly(){     return isReadOnly;   }   public void setReadOnly(  boolean readOnly){     this.isReadOnly=readOnly;   }   public boolean isRegisterMbeans(){     return isRegisterMbeans;   }   public void setRegisterMbeans(  boolean register){     this.isRegisterMbeans=register;   }   /**   * {@inheritDoc}   */   @Override public long getLeakDetectionThreshold(){     return leakDetectionThreshold;   }   /**   * {@inheritDoc}   */   @Override public void setLeakDetectionThreshold(  long leakDetectionThresholdMs){     this.leakDetectionThreshold=leakDetectionThresholdMs;   }   /**   * {@inheritDoc}   */   @Override public long getMaxLifetime(){     return maxLifetime;   }   /**   * {@inheritDoc}   */   @Override public void setMaxLifetime(  long maxLifetimeMs){     this.maxLifetime=maxLifetimeMs;   }   /**   * {@inheritDoc}   */   @Override public int getMaximumPoolSize(){     return maxPoolSize;   }   /**   * {@inheritDoc}   */   @Override public void setMaximumPoolSize(  int maxPoolSize){     if (maxPoolSize < 1) {       throw new IllegalArgumentException(\"maxPoolSize cannot be less than 1\");     }     this.maxPoolSize=maxPoolSize;   }   /**   * {@inheritDoc}   */   @Override public int getMinimumIdle(){     return minIdle;   }   /**   * {@inheritDoc}   */   @Override public void setMinimumIdle(  int minIdle){     if (minIdle < 0) {       throw new IllegalArgumentException(\"minimumIdle cannot be negative\");     }     this.minIdle=minIdle;   }   /**   * Get the default password to use for DataSource.getConnection(username, password) calls.  * @return the password  */   public String getPassword(){     return password;   }   /**   * Set the default password to use for DataSource.getConnection(username, password) calls.  * @param password the password  */   public void setPassword(  String password){     this.password=password;   }   /**   * {@inheritDoc}   */   @Override public String getPoolName(){     return poolName;   }   /**   * Set the name of the connection pool.  This is primarily used for the MBean to uniquely identify the pool configuration.  * @param poolName the name of the connection pool to use  */   public void setPoolName(  String poolName){     this.poolName=poolName;   }   public String getTransactionIsolation(){     return transactionIsolationName;   }   /**   * Set the default transaction isolation level.  The specified value is the constant name from the <code>Connection</code> class, eg.  <code>TRANSACTION_REPEATABLE_READ</code>.  * @param isolationLevel the name of the isolation level  */   public void setTransactionIsolation(  String isolationLevel){     this.transactionIsolationName=isolationLevel;   }   /**   * Get the default username used for DataSource.getConnection(username, password) calls.  * @return the username  */   public String getUsername(){     return username;   }   /**   * Set the default username used for DataSource.getConnection(username, password) calls.  * @param username the username  */   public void setUsername(  String username){     this.username=username;   }   /**   * Get the thread factory used to create threads.  * @return the thread factory (may be null, in which case the default thread factory is used)  */   public ThreadFactory getThreadFactory(){     return threadFactory;   }   /**   * Set the thread factory to be used to create threads.  * @param threadFactory the thread factory (setting to null causes the default thread factory to be used)  */   public void setThreadFactory(  ThreadFactory threadFactory){     this.threadFactory=threadFactory;   }   public void validate(){     Logger logger=LoggerFactory.getLogger(getClass());     validateNumerics();     if (connectionCustomizerClassName != null) {       try {         getClass().getClassLoader().loadClass(connectionCustomizerClassName);       }  catch (      Exception e) {         logger.warn(\"connectionCustomizationClass specified class '\" + connectionCustomizerClassName + \"' could not be loaded\",e);         connectionCustomizerClassName=null;       }     }     if (driverClassName != null && jdbcUrl == null) {       logger.error(\"when specifying driverClassName, jdbcUrl must also be specified\");       throw new IllegalStateException(\"when specifying driverClassName, jdbcUrl must also be specified\");     }  else     if (driverClassName != null && dataSourceClassName != null) {       logger.error(\"both driverClassName and dataSourceClassName are specified, one or the other should be used\");       throw new IllegalStateException(\"both driverClassName and dataSourceClassName are specified, one or the other should be used\");     }  else     if (jdbcUrl != null) {     }  else     if (dataSource == null && dataSourceClassName == null) {       logger.error(\"one of either dataSource, dataSourceClassName, or jdbcUrl and driverClassName must be specified\");       throw new IllegalArgumentException(\"one of either dataSource or dataSourceClassName must be specified\");     }  else     if (dataSource != null && dataSourceClassName != null) {       logger.warn(\"both dataSource and dataSourceClassName are specified, ignoring dataSourceClassName\");     }     if (transactionIsolationName != null) {       UtilityElf.getTransactionIsolation(transactionIsolationName);     }     if (poolName == null) {       poolName=\"HikariPool-\" + poolNumber++;     }     if (LOGGER.isDebugEnabled() || unitTest) {       logConfiguration();     }   }   private void validateNumerics(){     Logger logger=LoggerFactory.getLogger(getClass());     if (validationTimeout > connectionTimeout && connectionTimeout != 0) {       logger.warn(\"validationTimeout is greater than connectionTimeout, setting validationTimeout to connectionTimeout.\");       validationTimeout=connectionTimeout;     }     if (minIdle < 0 || minIdle > maxPoolSize) {       minIdle=maxPoolSize;     }     if (maxLifetime < 0) {       logger.error(\"maxLifetime cannot be negative.\");       throw new IllegalArgumentException(\"maxLifetime cannot be negative.\");     }  else     if (maxLifetime > 0 && maxLifetime < TimeUnit.SECONDS.toMillis(30)) {       logger.warn(\"maxLifetime is less than 30000ms, using default {}ms.\",MAX_LIFETIME);       maxLifetime=MAX_LIFETIME;     }     if (idleTimeout != 0 && idleTimeout < TimeUnit.SECONDS.toMillis(10)) {       logger.warn(\"idleTimeout is less than 10000ms, using default {}ms.\",IDLE_TIMEOUT);       idleTimeout=IDLE_TIMEOUT;     }  else     if (idleTimeout > maxLifetime && maxLifetime > 0) {       logger.warn(\"idleTimeout is greater than maxLifetime, setting to maxLifetime.\");       idleTimeout=maxLifetime;     }     if (leakDetectionThreshold != 0 && leakDetectionThreshold < TimeUnit.SECONDS.toMillis(2) && !unitTest) {       logger.warn(\"leakDetectionThreshold is less than 2000ms, setting to minimum 2000ms.\");       leakDetectionThreshold=2000L;     }   }   private void logConfiguration(){     LOGGER.debug(\"HikariCP pool {} configuration:\",poolName);     final Set<String> propertyNames=new TreeSet<String>(PropertyBeanSetter.getPropertyNames(HikariConfig.class));     for (    String prop : propertyNames) {       try {         Object value=PropertyBeanSetter.getProperty(prop,this);         if (\"dataSourceProperties\".equals(prop)) {           Properties dsProps=PropertyBeanSetter.copyProperties(dataSourceProperties);           dsProps.setProperty(\"password\",\"<masked>\");           value=dsProps;         }         value=(prop.contains(\"password\") ? \"<masked>\" : value);         LOGGER.debug((prop + \"................................................\").substring(0,32) + (value != null ? value : \"\"));       }  catch (      Exception e) {         continue;       }     }   }   abstract protected void loadProperties(  String propertyFileName);   public void copyState(  AbstractHikariConfig other){     for (    Field field : AbstractHikariConfig.class.getDeclaredFields()) {       if (!Modifier.isFinal(field.getModifiers())) {         field.setAccessible(true);         try {           field.set(other,field.get(this));         }  catch (        Exception e) {           throw new RuntimeException(\"Exception copying HikariConfig state: \" + e.getMessage(),e);         }       }     }   } } "
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "fd00b428998b79347ff7bd3489d73603a4fd0f8b",
        "fixCommitParentSHA1": "d284aea3cb9eeed47dcda65369e4bcf61eccfb03",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java b/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\nindex 52605b9..7a59187 100644\n--- a/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\n@@ -64,7 +64,7 @@\n     }\n \n     public boolean returnsResponse() {\n-        return false;\n+        return true;\n     }\n \n     public Object getResponse() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 67,
        "bugNodeStartChar": 2182,
        "bugNodeLength": 13,
        "fixLineNum": 67,
        "fixNodeStartChar": 2182,
        "fixNodeLength": 12,
        "sourceBeforeFix": "return false; ",
        "sourceAfterFix": "return true; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae",
        "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 2297,
        "bugNodeStartChar": 78160,
        "bugNodeLength": 26,
        "fixLineNum": 2297,
        "fixNodeStartChar": 78160,
        "fixNodeLength": 25,
        "sourceBeforeFix": "this.isDefaultAutoCommit()",
        "sourceAfterFix": "this.getDefaultReadOnly()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c8486bb7052487867fe9c7221681d4d4bc027541",
        "fixCommitParentSHA1": "cfafe13c1fc4b7f0f3e8f01f69c91ca2a030b836",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java\nindex 5741a07..5a9aaf2 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplication.java\n@@ -77,7 +77,7 @@\n   private static final int NB_ROWS_IN_BATCH = 100;\n   private static final int NB_ROWS_IN_BIG_BATCH =\n       NB_ROWS_IN_BATCH * 10;\n-  private static final long SLEEP_TIME = 500;\n+  private static final long SLEEP_TIME = 1500;\n   private static final int NB_RETRIES = 10;\n \n   private static final byte[] tableName = Bytes.toBytes(\"test\");\n",
        "projectName": "apache.hbase",
        "bugLineNum": 80,
        "bugNodeStartChar": 3227,
        "bugNodeLength": 16,
        "fixLineNum": 80,
        "fixNodeStartChar": 3227,
        "fixNodeLength": 17,
        "sourceBeforeFix": "SLEEP_TIME=500",
        "sourceAfterFix": "SLEEP_TIME=1500"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3f78497752cf1a23f56bb0a018b50f3db9d66638",
        "fixCommitParentSHA1": "0a9d59291f5f098177c6cbaa2e507c3ee8e31bf8",
        "bugFilePath": "src/org/bukkit/plugin/SimplePluginManager.java",
        "fixPatch": "diff --git a/src/org/bukkit/plugin/SimplePluginManager.java b/src/org/bukkit/plugin/SimplePluginManager.java\nindex cc696f6..eef3f8e 100644\n--- a/src/org/bukkit/plugin/SimplePluginManager.java\n+++ b/src/org/bukkit/plugin/SimplePluginManager.java\n@@ -194,7 +194,7 @@\n         List<RegisteredListener> eventListeners = listeners.get(type);\n         int position = 0;\n \n-        if (listeners != null) {\n+        if (eventListeners != null) {\n             for (RegisteredListener registration : eventListeners) {\n                 if (registration.getPriority().compareTo(priority) < 0) {\n                     break;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 197,
        "bugNodeStartChar": 6667,
        "bugNodeLength": 17,
        "fixLineNum": 197,
        "fixNodeStartChar": 6667,
        "fixNodeLength": 22,
        "sourceBeforeFix": "listeners != null",
        "sourceAfterFix": "eventListeners != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2b72627776ff650f7c929bad858c63b421d65e51",
        "fixCommitParentSHA1": "6b715ff92b9920945dc275f188fc9b2d164c0055",
        "bugFilePath": "clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/XAResourceRecoveryBuilder.java",
        "fixPatch": "diff --git a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/XAResourceRecoveryBuilder.java b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/XAResourceRecoveryBuilder.java\nindex a6e6cf3..a781e42 100644\n--- a/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/XAResourceRecoveryBuilder.java\n+++ b/clustering/infinispan/extension/src/main/java/org/jboss/as/clustering/infinispan/subsystem/XAResourceRecoveryBuilder.java\n@@ -78,7 +78,7 @@\n         };\n         Consumer<XAResourceRecovery> destroyer = recovery -> {\n             if (recovery != null) {\n-                this.registry.getValue().addXAResourceRecovery(recovery);\n+                this.registry.getValue().removeXAResourceRecovery(recovery);\n             }\n         };\n         Service<XAResourceRecovery> service = new SuppliedValueService<>(Function.identity(), supplier, destroyer);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 81,
        "bugNodeStartChar": 3278,
        "bugNodeLength": 56,
        "fixLineNum": 81,
        "fixNodeStartChar": 3278,
        "fixNodeLength": 59,
        "sourceBeforeFix": "this.registry.getValue().addXAResourceRecovery(recovery)",
        "sourceAfterFix": "this.registry.getValue().removeXAResourceRecovery(recovery)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55a4b30e72ad36e69499aa5db9b25f63ea7884ac",
        "fixCommitParentSHA1": "5450703664242d9d51061b8de56f99837822a9ef",
        "bugFilePath": "components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java",
        "fixPatch": "diff --git a/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java b/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\nindex c734c23..4be5718 100644\n--- a/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\n+++ b/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\n@@ -35,7 +35,7 @@\n         result.expectedMessageCount(2);\n \n         MockEndpoint error = getMockEndpoint(\"mock:error\");\n-        error.expectedMessageCount(2);\n+        error.expectedMinimumMessageCount(2);\n \n         // should newer get a message as DLC handles it\n         MockEndpoint kaboom = getMockEndpoint(\"mock:kaboom\");\n@@ -57,9 +57,9 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\n         result.expectedMessageCount(2);\n \n-        // should get 1 message when seda:bye is full\n+        // should get at least 1 message when seda:bye is full\n         MockEndpoint error = getMockEndpoint(\"mock:error\");\n-        error.expectedMessageCount(1);\n+        error.expectedMinimumMessageCount(1);\n \n         template.sendBody(\"direct:start\", \"Hello World\");\n         template.sendBody(\"direct:start\", \"Bye World\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 38,
        "bugNodeStartChar": 1648,
        "bugNodeLength": 29,
        "fixLineNum": 38,
        "fixNodeStartChar": 1648,
        "fixNodeLength": 36,
        "sourceBeforeFix": "error.expectedMessageCount(2)",
        "sourceAfterFix": "error.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "034b27c5e809b6f84f58d3ca0bb6b74de4452d83",
        "fixCommitParentSHA1": "7d76fffec2c3ec66c3560bd1feb4e0a3f522043f",
        "bugFilePath": "enterprise/test/java/org/neo4j/ha/LocalhostZooKeeperCluster.java",
        "fixPatch": "diff --git a/enterprise/test/java/org/neo4j/ha/LocalhostZooKeeperCluster.java b/enterprise/test/java/org/neo4j/ha/LocalhostZooKeeperCluster.java\nindex 5236d30..9d42d71 100644\n--- a/enterprise/test/java/org/neo4j/ha/LocalhostZooKeeperCluster.java\n+++ b/enterprise/test/java/org/neo4j/ha/LocalhostZooKeeperCluster.java\n@@ -68,7 +68,7 @@\n     private String config( TargetDirectory target, int id, int port )\n     {\n         File config = target.file( \"zookeeper\" + id + \".cfg\" );\n-        File dataDir = target.directory( \"zk\" + id + \"data\" );\n+        File dataDir = target.directory( \"zk\" + id + \"data\", true );\n         try\n         {\n             PrintWriter conf = new PrintWriter( config );\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 71,
        "bugNodeStartChar": 2361,
        "bugNodeLength": 38,
        "fixLineNum": 71,
        "fixNodeStartChar": 2361,
        "fixNodeLength": 44,
        "sourceBeforeFix": "target.directory(\"zk\" + id + \"data\")",
        "sourceAfterFix": "target.directory(\"zk\" + id + \"data\",true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9c0060ead8e75ab1ce6add6768a82b8db16c1f8a",
        "fixCommitParentSHA1": "02b722fba10653d8e9efec6c5b6d661796406d6f",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java\nindex 6e0ed12..f3ab514 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java\n@@ -3976,13 +3976,13 @@\n    */\n   void renewLease(String holder) throws IOException {\n     checkOperation(OperationCategory.WRITE);\n-    writeLock();\n+    readLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot renew lease for \" + holder);\n       leaseManager.renewLease(holder);\n     } finally {\n-      writeUnlock();\n+      readUnlock();\n     }\n   }\n \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 3985,
        "bugNodeStartChar": 154528,
        "bugNodeLength": 13,
        "fixLineNum": 3985,
        "fixNodeStartChar": 154528,
        "fixNodeLength": 12,
        "sourceBeforeFix": "writeUnlock()",
        "sourceAfterFix": "readUnlock()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "d8106859f08bcf7bd53c64d6c49c24d784430ffe",
        "fixCommitParentSHA1": "30986c51de6d914a1f10f620613674af017c65ea",
        "bugFilePath": "src/main/java/redis/clients/jedis/JedisCluster.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/JedisCluster.java b/src/main/java/redis/clients/jedis/JedisCluster.java\nindex c83291a..8f2f1ee 100644\n--- a/src/main/java/redis/clients/jedis/JedisCluster.java\n+++ b/src/main/java/redis/clients/jedis/JedisCluster.java\n@@ -588,7 +588,7 @@\n \n   @Override\n   public Set<String> spop(final String key, final long count) {\n-    return new JedisClusterCommand<Set<String>>(connectionHandler, timeout, maxRedirections) {\n+    return new JedisClusterCommand<Set<String>>(connectionHandler, maxRedirections) {\n       @Override\n       public Set<String> execute(Jedis connection) {\n         return connection.spop(key, count);\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 591,
        "bugNodeStartChar": 17393,
        "bugNodeLength": 210,
        "fixLineNum": 591,
        "fixNodeStartChar": 17393,
        "fixNodeLength": 201,
        "sourceBeforeFix": "new JedisClusterCommand<Set<String>>(connectionHandler,timeout,maxRedirections){   @Override public Set<String> execute(  Jedis connection){     return connection.spop(key,count);   } } ",
        "sourceAfterFix": "new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){   @Override public Set<String> execute(  Jedis connection){     return connection.spop(key,count);   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/Compiler.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex d16c12e..3f38020 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -757,7 +757,7 @@\n   }\n \n   private void externExports() {\n-    logger.info(\"Creating extern file for exports\");\n+    logger.fine(\"Creating extern file for exports\");\n     startPass(\"externExports\");\n \n     ExternExportsPass pass = new ExternExportsPass(this);\n@@ -795,7 +795,7 @@\n    * Removes try/catch/finally statements for easier debugging.\n    */\n   void removeTryCatchFinally() {\n-    logger.info(\"Remove try/catch/finally\");\n+    logger.fine(\"Remove try/catch/finally\");\n     startPass(\"removeTryCatchFinally\");\n     RemoveTryCatch r = new RemoveTryCatch(this);\n     process(r);\n@@ -808,7 +808,7 @@\n    */\n   void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes,\n       Set<String> stripTypePrefixes, Set<String> stripNamePrefixes) {\n-    logger.info(\"Strip code\");\n+    logger.fine(\"Strip code\");\n     startPass(\"stripCode\");\n     StripCode r = new StripCode(this, stripTypes, stripNameSuffixes,\n         stripTypePrefixes, stripNamePrefixes);\n@@ -1784,7 +1784,7 @@\n \n   /** Control Flow Analysis. */\n   ControlFlowGraph<Node> computeCFG() {\n-    logger.info(\"Computing Control Flow Graph\");\n+    logger.fine(\"Computing Control Flow Graph\");\n     Tracer tracer = newTracer(\"computeCFG\");\n     ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);\n     process(cfa);\n@@ -1793,7 +1793,7 @@\n   }\n \n   public void normalize() {\n-    logger.info(\"Normalizing\");\n+    logger.fine(\"Normalizing\");\n     startPass(\"normalize\");\n     process(new Normalize(this, false));\n     endPass();\n@@ -1806,7 +1806,7 @@\n   }\n \n   void recordFunctionInformation() {\n-    logger.info(\"Recording function information\");\n+    logger.fine(\"Recording function information\");\n     startPass(\"recordFunctionInformation\");\n     RecordFunctionInformation recordFunctionInfoPass =\n         new RecordFunctionInformation(\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1796,
        "bugNodeStartChar": 55091,
        "bugNodeLength": 26,
        "fixLineNum": 1796,
        "fixNodeStartChar": 55091,
        "fixNodeLength": 26,
        "sourceBeforeFix": "logger.info(\"Normalizing\")",
        "sourceAfterFix": "logger.fine(\"Normalizing\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "885bfcae0994d0b56d6978dc7482f71be04cfe3b",
        "fixCommitParentSHA1": "1790ad1bde6708d069025362c6b786924e606ba5",
        "bugFilePath": "core/common/src/main/java/alluxio/util/io/FileUtils.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/util/io/FileUtils.java b/core/common/src/main/java/alluxio/util/io/FileUtils.java\nindex 1f63b2e..9f77a30 100644\n--- a/core/common/src/main/java/alluxio/util/io/FileUtils.java\n+++ b/core/common/src/main/java/alluxio/util/io/FileUtils.java\n@@ -98,7 +98,7 @@\n     PosixFileAttributeView view =\n         Files.getFileAttributeView(Paths.get(path), PosixFileAttributeView.class,\n             LinkOption.NOFOLLOW_LINKS);\n-    UserPrincipal userPrincipal = lookupService.lookupPrincipalByGroupName(user);\n+    UserPrincipal userPrincipal = lookupService.lookupPrincipalByName(user);\n     view.setOwner(userPrincipal);\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 101,
        "bugNodeStartChar": 3661,
        "bugNodeLength": 46,
        "fixLineNum": 101,
        "fixNodeStartChar": 3661,
        "fixNodeLength": 41,
        "sourceBeforeFix": "lookupService.lookupPrincipalByGroupName(user)",
        "sourceAfterFix": "lookupService.lookupPrincipalByName(user)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "83650b3d0184b1ed2bba23ba464cf08ee4693cb7",
        "fixCommitParentSHA1": "50a8ced6c585859126fcc800dee84d33ed8df324",
        "bugFilePath": "disconf-client/src/main/java/com/baidu/disconf/client/support/registry/impl/SimpleRegistry.java",
        "fixPatch": "diff --git a/disconf-client/src/main/java/com/baidu/disconf/client/support/registry/impl/SimpleRegistry.java b/disconf-client/src/main/java/com/baidu/disconf/client/support/registry/impl/SimpleRegistry.java\nindex 949fe3f..73effad 100644\n--- a/disconf-client/src/main/java/com/baidu/disconf/client/support/registry/impl/SimpleRegistry.java\n+++ b/disconf-client/src/main/java/com/baidu/disconf/client/support/registry/impl/SimpleRegistry.java\n@@ -47,6 +47,6 @@\n \n     @Override\n     public <T> T getFirstByType(Class<T> type, boolean withProxy) {\n-        return getFirstByType(type, withProxy);\n+        return getFirstByType(type);\n     }\n }\n",
        "projectName": "knightliao.disconf",
        "bugLineNum": 50,
        "bugNodeStartChar": 1219,
        "bugNodeLength": 31,
        "fixLineNum": 50,
        "fixNodeStartChar": 1219,
        "fixNodeLength": 20,
        "sourceBeforeFix": "getFirstByType(type,withProxy)",
        "sourceAfterFix": "getFirstByType(type)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "732060e21eadf6442be6f1cf3c755e3ed1b28c7d",
        "fixCommitParentSHA1": "1e0954a1dfa0c5a9be7eff340a62978d0cfd9e22",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\nindex 5a58bef..c4663ed 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\n@@ -310,7 +310,7 @@\n             public void run() throws Exception {\n                 assertFalse(lock.isLocked());\n             }\n-        }, 5);\n+        }, 20);\n     }\n \n     @Test(expected = NullPointerException.class, timeout = 60000)\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 308,
        "bugNodeStartChar": 9041,
        "bugNodeLength": 184,
        "fixLineNum": 308,
        "fixNodeStartChar": 9041,
        "fixNodeLength": 185,
        "sourceBeforeFix": "assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     assertFalse(lock.isLocked());   } } ,5)",
        "sourceAfterFix": "assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     assertFalse(lock.isLocked());   } } ,20)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cc3afab8cec819419e52eb1fdc990625e0afd688",
        "fixCommitParentSHA1": "37e4372f2e5fb00241ad9514bbd4bee12e24d896",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 31b5ff0..411c7b0 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -52,7 +52,7 @@\n \n   public static void createFiles() throws IOException {\n     long startTimeMs = CommonUtils.getCurrentMs();\n-    for (int k = 0; k < THREADS; k ++) {\n+    for (int k = 0; k < FILES; k++) {\n       int fileId = MTC.createFile(FILE_NAME + (k + BASE_FILE_NUMBER));\n       CommonUtils.printTimeTakenMs(startTimeMs, LOG, \"user_createFiles with fileId \" + fileId);\n     }\n@@ -109,7 +109,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -134,7 +134,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -180,7 +180,7 @@\n       mBuf.flip();\n       for (int pId = mLeft; pId < mRight; pId ++) {\n         long startTimeMs = System.currentTimeMillis();\n-        TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+        TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n         OutStream os = file.getOutStream(WriteType.MUST_CACHE);\n         for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n           mBuf.putInt(0, k + mWorkerId);\n@@ -216,7 +216,7 @@\n         LOG.info(\"Verifying the reading data...\");\n \n         for (int pId = mLeft; pId < mRight; pId ++) {\n-          TachyonFile file = mTC.getFile(FILE_NAME + mWorkerId);\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           IntBuffer intBuf;\n           intBuf = buf.DATA.order(ByteOrder.nativeOrder()).asIntBuffer();\n@@ -238,7 +238,7 @@\n       if (TACHYON_STREAMING_READ) {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           InputStream is = file.getInStream(ReadType.CACHE);\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n@@ -253,7 +253,7 @@\n       } else {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             buf.DATA.get(mBuf.array());\n@@ -323,7 +323,7 @@\n       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n             mBuf.putInt(0, k + mWorkerId);\n@@ -335,7 +335,7 @@\n       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 183,
        "bugNodeStartChar": 5941,
        "bugNodeLength": 28,
        "fixLineNum": 183,
        "fixNodeStartChar": 5941,
        "fixNodeLength": 22,
        "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER",
        "sourceAfterFix": "pId + BASE_FILE_NUMBER"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "77e17fdb6dabe786f970f44602e297a5e0089e8c",
        "fixCommitParentSHA1": "3431fa353d63b056c490367f465fa0a091d3a717",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/util/IOUtils.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/util/IOUtils.java b/modules/cpr/src/main/java/org/atmosphere/util/IOUtils.java\nindex 04fa89c..24b41b8 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/util/IOUtils.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/util/IOUtils.java\n@@ -365,7 +365,7 @@\n         } catch (Throwable t) {\n             try {\n                 return Class.forName(className);\n-            } catch (Throwable t2) {\n+            } catch (Exception t2) {\n                 if (thisClass != null) {\n                     return thisClass.getClassLoader().loadClass(className);\n                 }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 368,
        "bugNodeStartChar": 14422,
        "bugNodeLength": 12,
        "fixLineNum": 368,
        "fixNodeStartChar": 14422,
        "fixNodeLength": 12,
        "sourceBeforeFix": "Throwable t2",
        "sourceAfterFix": "Exception t2"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9",
        "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713",
        "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java",
        "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n",
        "projectName": "google.auto",
        "bugLineNum": 168,
        "bugNodeStartChar": 7357,
        "bugNodeLength": 38,
        "fixLineNum": 168,
        "fixNodeStartChar": 7357,
        "fixNodeLength": 39,
        "sourceBeforeFix": "implemetationMethodDescriptors.build()",
        "sourceAfterFix": "implementationMethodDescriptors.build()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3ae48a8191bda71e900bee767847ce56873a8c57",
        "fixCommitParentSHA1": "4a291fdf3094886e20d65b87554a6a5debd0a4f6",
        "bugFilePath": "s3-extensions/src/main/java/io/druid/storage/s3/S3DataSegmentMover.java",
        "fixPatch": "diff --git a/s3-extensions/src/main/java/io/druid/storage/s3/S3DataSegmentMover.java b/s3-extensions/src/main/java/io/druid/storage/s3/S3DataSegmentMover.java\nindex 599e3dc..96a5b8a 100644\n--- a/s3-extensions/src/main/java/io/druid/storage/s3/S3DataSegmentMover.java\n+++ b/s3-extensions/src/main/java/io/druid/storage/s3/S3DataSegmentMover.java\n@@ -34,7 +34,7 @@\n \n public class S3DataSegmentMover implements DataSegmentMover\n {\n-  private static final Logger log = new Logger(S3DataSegmentKiller.class);\n+  private static final Logger log = new Logger(S3DataSegmentMover.class);\n \n   private final RestS3Service s3Client;\n   private final S3DataSegmentMoverConfig config;\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 37,
        "bugNodeStartChar": 1432,
        "bugNodeLength": 25,
        "fixLineNum": 37,
        "fixNodeStartChar": 1432,
        "fixNodeLength": 24,
        "sourceBeforeFix": "S3DataSegmentKiller.class",
        "sourceAfterFix": "S3DataSegmentMover.class"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "73627df082ff499af4ca1c482f79e304905007eb",
        "fixCommitParentSHA1": "2eb05b5934c6108b60b3f84816054b95db3e3a79",
        "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java",
        "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\nindex b4b1ad7..251e458 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/JsonConversion.java\n@@ -52,23 +52,24 @@\n     public static final int  VALUE_ENTRY_SIZE_SMALL  = (1 + SMALL_OFFSET_SIZE);\n     public static final int  VALUE_ENTRY_SIZE_LARGE  = (1 + LARGE_OFFSET_SIZE);\n \n-    public static Json_Value parse_value(int type, LogBuffer buffer, long len) {\n+    public static Json_Value parse_value(int type, LogBuffer buffer, long len, String charsetName) {\n         buffer = buffer.duplicate(buffer.position(), (int) len);\n         switch (type) {\n             case JSONB_TYPE_SMALL_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_OBJECT:\n-                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.OBJECT, buffer, len, true, charsetName);\n             case JSONB_TYPE_SMALL_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, false, charsetName);\n             case JSONB_TYPE_LARGE_ARRAY:\n-                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true);\n+                return parse_array_or_object(Json_enum_type.ARRAY, buffer, len, true, charsetName);\n             default:\n-                return parse_scalar(type, buffer, len);\n+                return parse_scalar(type, buffer, len, charsetName);\n         }\n     }\n \n-    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large) {\n+    private static Json_Value parse_array_or_object(Json_enum_type type, LogBuffer buffer, long len, boolean large,\n+                                                    String charsetName) {\n         long offset_size = large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n         if (len < 2 * offset_size) {\n             throw new IllegalArgumentException(\"illegal json data\");\n@@ -95,7 +96,7 @@\n         return large ? buffer.getUint32() : buffer.getUint16();\n     }\n \n-    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len) {\n+    private static Json_Value parse_scalar(int type, LogBuffer buffer, long len, String charsetName) {\n         switch (type) {\n             case JSONB_TYPE_LITERAL:\n                 /* purecov: inspected */\n@@ -146,12 +147,12 @@\n                     }\n                 }\n \n-                if (str_len == 0 || len < n + str_len) {\n+                if (len < n + str_len) {\n                     throw new IllegalArgumentException(\"illegal json data\");\n                 }\n                 return new Json_Value(Json_enum_type.STRING, buffer.rewind()\n                     .forward((int) n)\n-                    .getFixString((int) str_len));\n+                    .getFixString((int) str_len, charsetName));\n             case JSONB_TYPE_OPAQUE:\n                 /*\n                  * There should always be at least one byte, which tells the\n@@ -237,7 +238,7 @@\n             this.m_large = large;\n         }\n \n-        public String key(int i) {\n+        public String key(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -250,10 +251,10 @@\n             // entry, always two\n             // bytes.\n             long key_length = m_data.getUint16();\n-            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length);\n+            return m_data.rewind().forward((int) key_offset).getFixString((int) key_length, charsetName);\n         }\n \n-        public Json_Value element(int i) {\n+        public Json_Value element(int i, String charsetName) {\n             m_data.rewind();\n             int offset_size = m_large ? LARGE_OFFSET_SIZE : SMALL_OFFSET_SIZE;\n             int key_entry_size = m_large ? KEY_ENTRY_SIZE_LARGE : KEY_ENTRY_SIZE_SMALL;\n@@ -266,13 +267,13 @@\n             int type = m_data.forward(entry_offset).getUint8();\n             if (type == JSONB_TYPE_INT16 || type == JSONB_TYPE_UINT16 || type == JSONB_TYPE_LITERAL\n                 || (m_large && (type == JSONB_TYPE_INT32 || type == JSONB_TYPE_UINT32))) {\n-                return parse_scalar(type, m_data, value_entry_size - 1);\n+                return parse_scalar(type, m_data, value_entry_size - 1, charsetName);\n             }\n             int value_offset = (int) read_offset_or_size(m_data, m_large);\n-            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset);\n+            return parse_value(type, m_data.rewind().forward(value_offset), (int) m_length - value_offset, charsetName);\n         }\n \n-        public StringBuilder toJsonString(StringBuilder buf) {\n+        public StringBuilder toJsonString(StringBuilder buf, String charsetName) {\n             switch (m_type) {\n                 case OBJECT:\n                     buf.append(\"{\");\n@@ -280,9 +281,9 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        buf.append('\"').append(key(i)).append('\"');\n+                        buf.append('\"').append(key(i, charsetName)).append('\"');\n                         buf.append(\": \");\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"}\");\n                     break;\n@@ -292,7 +293,7 @@\n                         if (i > 0) {\n                             buf.append(\", \");\n                         }\n-                        element(i).toJsonString(buf);\n+                        element(i, charsetName).toJsonString(buf, charsetName);\n                     }\n                     buf.append(\"]\");\n                     break;\n@@ -361,7 +362,7 @@\n                         }\n                         buf.append('\"').append(text).append('\"');\n                     } else {\n-                        text = m_data.getFixString((int) m_length);\n+                        text = m_data.getFixString((int) m_length, charsetName);\n                         buf.append('\"').append(text).append('\"');\n                     }\n \n",
        "projectName": "alibaba.canal",
        "bugLineNum": 364,
        "bugNodeStartChar": 16578,
        "bugNodeLength": 35,
        "fixLineNum": 364,
        "fixNodeStartChar": 16578,
        "fixNodeLength": 48,
        "sourceBeforeFix": "m_data.getFixString((int)m_length)",
        "sourceAfterFix": "m_data.getFixString((int)m_length,charsetName)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex da44e32..b328b00 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -513,7 +513,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15873, value = \"Repository does not contain any deployment with hash %s\")\n+    @Message(id = 10873, value = \"Repository does not contain any deployment with hash %s\")\n     IllegalStateException deploymentHashNotFoundInRepository(String hash);\n \n     /**\n@@ -523,7 +523,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15874, value = \"Expected only one deployment, found %d\")\n+    @Message(id = 10874, value = \"Expected only one deployment, found %d\")\n     IllegalStateException expectedOnlyOneDeployment(int i);\n \n     /**\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 516,
        "bugNodeStartChar": 19053,
        "bugNodeLength": 10,
        "fixLineNum": 516,
        "fixNodeStartChar": 19053,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15873",
        "sourceAfterFix": "id=10873"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a48c1695a3795d9a2ed55069407f1d8f7a2358a0",
        "fixCommitParentSHA1": "bf0afc9f6ccf706acab1842f1982c6f4dc38f2b0",
        "bugFilePath": "lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java",
        "fixPatch": "diff --git a/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java b/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\nindex e12ad6b..a450885 100644\n--- a/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\n+++ b/lib-core-slh/src/main/java/com/nhaarman/listviewanimations/util/StickyListHeadersListViewWrapper.java\n@@ -41,7 +41,7 @@\n     @Nullable\n     @Override\n     public View getChildAt(final int index) {\n-        return mListView.getChildAt(index);\n+        return mListView.getListChildAt(index);\n     }\n \n     @Override\n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 44,
        "bugNodeStartChar": 1340,
        "bugNodeLength": 27,
        "fixLineNum": 44,
        "fixNodeStartChar": 1340,
        "fixNodeLength": 31,
        "sourceBeforeFix": "mListView.getChildAt(index)",
        "sourceAfterFix": "mListView.getListChildAt(index)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "303eb811e0432ef3e843c20cbc282a1bf0007d2a",
        "fixCommitParentSHA1": "335a4624222d73227748d19527adedb4430720be",
        "bugFilePath": "integration/yarn/src/test/java/tachyon/yarn/ApplicationMasterTest.java",
        "fixPatch": "diff --git a/integration/yarn/src/test/java/tachyon/yarn/ApplicationMasterTest.java b/integration/yarn/src/test/java/tachyon/yarn/ApplicationMasterTest.java\nindex a66272e..005f315 100644\n--- a/integration/yarn/src/test/java/tachyon/yarn/ApplicationMasterTest.java\n+++ b/integration/yarn/src/test/java/tachyon/yarn/ApplicationMasterTest.java\n@@ -185,7 +185,7 @@\n   public void stopTest() throws Exception {\n     mMaster.stop();\n     Mockito.verify(mRMClient).unregisterApplicationMaster(FinalApplicationStatus.SUCCEEDED, \"\", \"\");\n-    Mockito.verify(mRMClient).start();\n+    Mockito.verify(mRMClient).stop();\n   }\n \n   /**\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 188,
        "bugNodeStartChar": 7880,
        "bugNodeLength": 33,
        "fixLineNum": 188,
        "fixNodeStartChar": 7880,
        "fixNodeLength": 32,
        "sourceBeforeFix": "Mockito.verify(mRMClient).start()",
        "sourceAfterFix": "Mockito.verify(mRMClient).stop()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 89,
        "bugNodeStartChar": 2880,
        "bugNodeLength": 7,
        "fixLineNum": 89,
        "fixNodeStartChar": 2880,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=23",
        "sourceAfterFix": "id=21"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1c1d6418e06a6cf1d8441d8ef329e1c8f48868e0",
        "fixCommitParentSHA1": "c22e4183fa5ef0ff22530a67b6adbb6eff19eacc",
        "bugFilePath": "samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java",
        "fixPatch": "diff --git a/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex 1593487..f25980a 100644\n--- a/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-mule/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -60,7 +60,7 @@\n     }\n   }\n \n-  @PATCH\n+  @DELETE\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Deletes a pet\")\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid pet value\")})\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 63,
        "bugNodeStartChar": 2336,
        "bugNodeLength": 6,
        "fixLineNum": 63,
        "fixNodeStartChar": 2336,
        "fixNodeLength": 7,
        "sourceBeforeFix": "@PATCH",
        "sourceAfterFix": "@DELETE"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "198ab0e862cdf33e8dff37bf24676ffcb392ed82",
        "fixCommitParentSHA1": "96dc42999619a4c313e769e5335f6fbefb3d9167",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/tez/WorkloadManager.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/WorkloadManager.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/WorkloadManager.java\nindex 7ede4c8..37c3714 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/WorkloadManager.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/WorkloadManager.java\n@@ -702,7 +702,7 @@\n     // 11. Finally, for all the pools that have changes, promote queued queries and rebalance.\n     for (String poolName : poolsToRedistribute) {\n       if (LOG.isDebugEnabled()) {\n-        LOG.info(\"Processing changes for pool \" + poolName + \": \" + pools.get(poolName));\n+        LOG.debug(\"Processing changes for pool \" + poolName + \": \" + pools.get(poolName));\n       }\n       processPoolChangesOnMasterThread(poolName, hasRequeues, syncWork);\n     }\n",
        "projectName": "apache.hive",
        "bugLineNum": 705,
        "bugNodeStartChar": 31940,
        "bugNodeLength": 80,
        "fixLineNum": 705,
        "fixNodeStartChar": 31940,
        "fixNodeLength": 81,
        "sourceBeforeFix": "LOG.info(\"Processing changes for pool \" + poolName + \": \"+ pools.get(poolName))",
        "sourceAfterFix": "LOG.debug(\"Processing changes for pool \" + poolName + \": \"+ pools.get(poolName))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 146,
        "bugNodeStartChar": 4612,
        "bugNodeLength": 7,
        "fixLineNum": 146,
        "fixNodeStartChar": 4612,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=42",
        "sourceAfterFix": "id=40"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "369e76ceaaa61354716708061801b48cf75b386d",
        "fixCommitParentSHA1": "8f73d2e6490454f2777b3a2c9a248f627e7118b8",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java\nindex c39c46b..d5b35d0 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java\n@@ -227,7 +227,9 @@\n \n   @Override\n   public void closeOp(boolean abort) throws HiveException {\n-    if (mapJoinTables != null) {\n+    if ((this.getExecContext().getLocalWork() != null\n+        && this.getExecContext().getLocalWork().getInputFileChangeSensitive())\n+        && mapJoinTables != null) {\n       for (MapJoinTableContainer tableContainer : mapJoinTables) {\n         if (tableContainer != null) {\n           tableContainer.clear();\n",
        "projectName": "apache.hive",
        "bugLineNum": 230,
        "bugNodeStartChar": 8202,
        "bugNodeLength": 21,
        "fixLineNum": 230,
        "fixNodeStartChar": 8202,
        "fixNodeLength": 157,
        "sourceBeforeFix": "mapJoinTables != null",
        "sourceAfterFix": "(this.getExecContext().getLocalWork() != null && this.getExecContext().getLocalWork().getInputFileChangeSensitive()) && mapJoinTables != null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c4ffe721c786c54074a6913cb889d46e83bb32c1",
        "fixCommitParentSHA1": "ae7098ae1d8ed13bed52f67f30612e7ecf39d618",
        "bugFilePath": "spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\nindex ea7ade8..b745c96 100644\n--- a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\n+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\n@@ -94,23 +94,23 @@\n \t}\n \n \t@Test\n-\tpublic void testPubSubEnabledByDefault() {\n+\tpublic void testPubSubDisabledByDefault() {\n \t\tthis.context = new AnnotationConfigApplicationContext();\n \t\tthis.context\n \t\t\t\t.register(TestConfiguration.class, JmsTemplateAutoConfiguration.class);\n \t\tthis.context.refresh();\n \t\tJmsTemplate jmsTemplate = this.context.getBean(JmsTemplate.class);\n-\t\tassertTrue(jmsTemplate.isPubSubDomain());\n+\t\tassertFalse(jmsTemplate.isPubSubDomain());\n \t}\n \n \t@Test\n-\tpublic void testJmsTemplatePostProcessedSoThatPubSubIsFalse() {\n+\tpublic void testJmsTemplatePostProcessedSoThatPubSubIsTrue() {\n \t\tthis.context = new AnnotationConfigApplicationContext();\n \t\tthis.context.register(TestConfiguration4.class,\n \t\t\t\tJmsTemplateAutoConfiguration.class);\n \t\tthis.context.refresh();\n \t\tJmsTemplate jmsTemplate = this.context.getBean(JmsTemplate.class);\n-\t\tassertFalse(jmsTemplate.isPubSubDomain());\n+\t\tassertTrue(jmsTemplate.isPubSubDomain());\n \t}\n \n \t@Test\n@@ -262,7 +262,7 @@\n \t\t\t\tthrows BeansException {\n \t\t\tif (bean.getClass().isAssignableFrom(JmsTemplate.class)) {\n \t\t\t\tJmsTemplate jmsTemplate = (JmsTemplate) bean;\n-\t\t\t\tjmsTemplate.setPubSubDomain(false);\n+\t\t\t\tjmsTemplate.setPubSubDomain(true);\n \t\t\t}\n \t\t\treturn bean;\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 103,
        "bugNodeStartChar": 3767,
        "bugNodeLength": 40,
        "fixLineNum": 103,
        "fixNodeStartChar": 3767,
        "fixNodeLength": 41,
        "sourceBeforeFix": "assertTrue(jmsTemplate.isPubSubDomain())",
        "sourceAfterFix": "assertFalse(jmsTemplate.isPubSubDomain())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 470,
        "bugNodeStartChar": 15439,
        "bugNodeLength": 44,
        "fixLineNum": 470,
        "fixNodeStartChar": 14970,
        "fixNodeLength": 46,
        "sourceBeforeFix": "GL20.glGetUniform(program,location,params)",
        "sourceAfterFix": "GL20.glGetUniformiv(program,location,params)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 503,
        "bugNodeStartChar": 18550,
        "bugNodeLength": 10,
        "fixLineNum": 503,
        "fixNodeStartChar": 18550,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15872",
        "sourceAfterFix": "id=10872"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "11fc33161f47544de5d2c50444340438f09a5b82",
        "fixCommitParentSHA1": "ebcaa4053325364c0f9f57b129dd46cc2cdaceb1",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/XmlReader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/XmlReader.java b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\nindex 211f59d..afc8155 100644\n--- a/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n+++ b/gdx/src/com/badlogic/gdx/utils/XmlReader.java\n@@ -587,7 +587,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChild (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByName(name) != null;\r\n \t\t}\r\n \r\n@@ -605,7 +605,7 @@\n \t\t}\r\n \r\n \t\tpublic boolean hasChildRecursive (String name) {\r\n-\t\t\tif (attributes == null) return false;\r\n+\t\t\tif (children == null) return false;\r\n \t\t\treturn getChildByNameRecursive(name) != null;\r\n \t\t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 590,
        "bugNodeStartChar": 17884,
        "bugNodeLength": 18,
        "fixLineNum": 590,
        "fixNodeStartChar": 17295,
        "fixNodeLength": 16,
        "sourceBeforeFix": "attributes == null",
        "sourceAfterFix": "children == null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "62caf9c05867fe3183c6ffd35764809d21b14878",
        "fixCommitParentSHA1": "bebcfef5c70c809836b5b7e23e2dac9b4e12c5ea",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SearchAPITest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\nindex ec67f52..eaf5ae5 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n@@ -47,7 +47,7 @@\n     public void testQuery() throws Exception {\n         SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n         Query query = new Query(\"test\")\n-                .until(format.format(new java.util.Date()));\n+                .until(format.format(new java.util.Date(System.currentTimeMillis() - 3600*24)));\n         HttpParameter[] params = query.asHttpParameterArray();\n         assertTrue(findParameter(params,\"q\"));\n         assertTrue(findParameter(params,\"until\"));\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 50,
        "bugNodeStartChar": 2111,
        "bugNodeLength": 20,
        "fixLineNum": 50,
        "fixNodeStartChar": 2111,
        "fixNodeLength": 56,
        "sourceBeforeFix": "new java.util.Date()",
        "sourceAfterFix": "new java.util.Date(System.currentTimeMillis() - 3600 * 24)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\nindex 2f72610..6b415c8 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestLeftRecursion.java\n@@ -1715,7 +1715,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1740,7 +1740,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1765,7 +1765,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(247);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {System.out.println($ctx.toStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1862,7 +1862,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1894,7 +1894,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1926,7 +1926,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1958,7 +1958,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(730);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(729);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {System.out.println($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1865,
        "bugNodeStartChar": 84330,
        "bugNodeLength": 22,
        "fixLineNum": 1865,
        "fixNodeStartChar": 84330,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(730)",
        "sourceAfterFix": "new StringBuilder(729)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b5fd7c00a9da43067409219c59c749104b92aa29",
        "fixCommitParentSHA1": "b89e201598e0fa497c84a036400f4d774d20b19a",
        "bugFilePath": "undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java",
        "fixPatch": "diff --git a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\nindex 1155c27..e95db6c 100644\n--- a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n+++ b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n@@ -762,9 +762,9 @@\n             }\n \n             if (mergedMetaData.getDefaultEncoding()!=null){\n-                deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding());\n+                d.setDefaultEncoding(mergedMetaData.getDefaultEncoding());\n             }else if (servletContainer.getDefaultEncoding()!=null){\n-                deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding());\n+                d.setDefaultEncoding(servletContainer.getDefaultEncoding());\n             }\n \n             return d;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 767,
        "bugNodeStartChar": 39814,
        "bugNodeLength": 72,
        "fixLineNum": 767,
        "fixNodeStartChar": 39814,
        "fixNodeLength": 59,
        "sourceBeforeFix": "deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding())",
        "sourceAfterFix": "d.setDefaultEncoding(servletContainer.getDefaultEncoding())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fc13cf7d7843029d807878869e3c64cace5640dd",
        "fixCommitParentSHA1": "efb95a17945cc91aa639396f6f6c528b52c71fcb",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java\nindex 0ee8b80..ae95738 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java\n@@ -2808,7 +2808,7 @@\n   }\n \n   @Override\n-  public Cell deepClone() {\n+  public ExtendedCell deepClone() {\n     byte[] copy = Bytes.copy(this.bytes, this.offset, this.length);\n     KeyValue kv = new KeyValue(copy, 0, copy.length);\n     kv.setSequenceId(this.getSequenceId());\n",
        "projectName": "apache.hbase",
        "bugLineNum": 2810,
        "bugNodeStartChar": 96751,
        "bugNodeLength": 222,
        "fixLineNum": 2810,
        "fixNodeStartChar": 96751,
        "fixNodeLength": 230,
        "sourceBeforeFix": "@Override public Cell deepClone(){   byte[] copy=Bytes.copy(this.bytes,this.offset,this.length);   KeyValue kv=new KeyValue(copy,0,copy.length);   kv.setSequenceId(this.getSequenceId());   return kv; } ",
        "sourceAfterFix": "@Override public ExtendedCell deepClone(){   byte[] copy=Bytes.copy(this.bytes,this.offset,this.length);   KeyValue kv=new KeyValue(copy,0,copy.length);   kv.setSequenceId(this.getSequenceId());   return kv; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 219,
        "bugNodeStartChar": 8251,
        "bugNodeLength": 410,
        "fixLineNum": 219,
        "fixNodeStartChar": 8033,
        "fixNodeLength": 401,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/SimplifiedMessageProducer.java",
        "fixPatch": "diff --git a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/SimplifiedMessageProducer.java b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/SimplifiedMessageProducer.java\nindex e963a36..6a9c731 100644\n--- a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/SimplifiedMessageProducer.java\n+++ b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/SimplifiedMessageProducer.java\n@@ -41,7 +41,7 @@\n     @Resource\n     private ConnectionFactory defaultConnectionFactory;\n \n-    @Resource(name = \"java:/ConnectionFactory\")\n+    @Resource(lookup = \"java:/ConnectionFactory\")\n     private ConnectionFactory regularConnectionFactory;\n \n     public void sendWithDefaultJMSConnectionFactory(Destination destination, String text) throws Exception {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 44,
        "bugNodeStartChar": 1566,
        "bugNodeLength": 32,
        "fixLineNum": 44,
        "fixNodeStartChar": 1566,
        "fixNodeLength": 34,
        "sourceBeforeFix": "name=\"java:/ConnectionFactory\"",
        "sourceAfterFix": "lookup=\"java:/ConnectionFactory\""
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
        "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
        "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
        "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 149,
        "bugNodeStartChar": 4049,
        "bugNodeLength": 40,
        "fixLineNum": 149,
        "fixNodeStartChar": 4049,
        "fixNodeLength": 38,
        "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
        "sourceAfterFix": "reg.getMeters(transformFilter(filter))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d",
        "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex eda0d0e..7071518 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -207,7 +207,7 @@\n \t\t\tbatch.setColor(color.r, color.g, color.b, color.a * parentAlpha);\r\n \t\t\tstyle.background.draw(batch, getX(), getY(), getWidth(), getHeight());\r\n \t\t}\r\n-\t\tcache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n+\t\tcache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor));\r\n \t\tcache.setPosition(getX(), getY());\r\n \t\tcache.draw(batch, parentAlpha);\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 210,
        "bugNodeStartChar": 7388,
        "bugNodeLength": 91,
        "fixLineNum": 210,
        "fixNodeStartChar": 7179,
        "fixNodeLength": 92,
        "sourceBeforeFix": "cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))",
        "sourceAfterFix": "cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "67685860541cf7f66d048f314e1b6084591974c3",
        "fixCommitParentSHA1": "7f417056d2f3bf4b0f1a839922c68829f84a170f",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentAggregateBatchConsumerTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentAggregateBatchConsumerTest.java b/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentAggregateBatchConsumerTest.java\nindex 4ed020e..83cb987 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentAggregateBatchConsumerTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentAggregateBatchConsumerTest.java\n@@ -94,8 +94,8 @@\n         long start = System.currentTimeMillis();\n \n         MockEndpoint result = getMockEndpoint(\"mock:result\");\n-        // should be ordered\n-        result.expectedBodiesReceived(\"A+C+E+G+I\", \"B+D+F+H+J\");\n+        // should be ordered in the body, but the files can be loaded in different order per OS\n+        result.expectedBodiesReceivedInAnyOrder(\"A+C+E+G+I\", \"B+D+F+H+J\");\n \n         assertMockEndpointsSatisfied();\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 98,
        "bugNodeStartChar": 4159,
        "bugNodeLength": 55,
        "fixLineNum": 98,
        "fixNodeStartChar": 4226,
        "fixNodeLength": 65,
        "sourceBeforeFix": "result.expectedBodiesReceived(\"A+C+E+G+I\",\"B+D+F+H+J\")",
        "sourceAfterFix": "result.expectedBodiesReceivedInAnyOrder(\"A+C+E+G+I\",\"B+D+F+H+J\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "ff0c12880d6a3d3ee0b34787e7a2028e174cd788",
        "fixCommitParentSHA1": "e7fddb1fdc55c5b8b9dbfee38857016587c85701",
        "bugFilePath": "modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java",
        "fixPatch": "diff --git a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\nindex 78682d5..b0603d6 100644\n--- a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n+++ b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n@@ -152,7 +152,7 @@\n                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);\n                 if (ac.canChangeColumnData(column)) {\n                     //Editable column, provide \"set\" method:\n-                    if (propEditor != null) {//The type can be edited by default:\n+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:\n                         p = new PropertySupport.Reflection(wrap, type, \"getValue\" + type.getSimpleName(), \"setValue\" + type.getSimpleName());\n                     } else {//Use the AttributeType as String:\n                         p = new PropertySupport.Reflection(wrap, String.class, \"getValueAsString\", \"setValueAsString\");\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 155,
        "bugNodeStartChar": 6128,
        "bugNodeLength": 18,
        "fixLineNum": 155,
        "fixNodeStartChar": 6128,
        "fixNodeLength": 37,
        "sourceBeforeFix": "propEditor != null",
        "sourceAfterFix": "propEditor != null && !type.isArray()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "45e44a390cd287a141dc0f446038169608294879",
        "fixCommitParentSHA1": "b27c5921c8543823651daed3d4bb1ca6d40028e7",
        "bugFilePath": "okhttp-tests/src/test/java/okhttp3/internal/DiskLruCacheTest.java",
        "fixPatch": "diff --git a/okhttp-tests/src/test/java/okhttp3/internal/DiskLruCacheTest.java b/okhttp-tests/src/test/java/okhttp3/internal/DiskLruCacheTest.java\nindex 4c9275b..777f3bd 100644\n--- a/okhttp-tests/src/test/java/okhttp3/internal/DiskLruCacheTest.java\n+++ b/okhttp-tests/src/test/java/okhttp3/internal/DiskLruCacheTest.java\n@@ -50,7 +50,7 @@\n \n public final class DiskLruCacheTest {\n   @Rule public final TemporaryFolder tempDir = new TemporaryFolder();\n-  @Rule public final Timeout timeout = new Timeout(30 * 1000);\n+  @Rule public final Timeout timeout = new Timeout(60 * 1000);\n \n   private final FaultyFileSystem fileSystem = new FaultyFileSystem(FileSystem.SYSTEM);\n   private final int appVersion = 100;\n",
        "projectName": "square.okhttp",
        "bugLineNum": 53,
        "bugNodeStartChar": 1874,
        "bugNodeLength": 9,
        "fixLineNum": 53,
        "fixNodeStartChar": 1874,
        "fixNodeLength": 9,
        "sourceBeforeFix": "30 * 1000",
        "sourceAfterFix": "60 * 1000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "31113bf0d908a8fc194f078dae57b81494db7126",
        "fixCommitParentSHA1": "0dbdc47f05c914a6437ab50ab19db5c2f0e61d5a",
        "bugFilePath": "src/test/java/com/zaxxer/hikari/TestValidation.java",
        "fixPatch": "diff --git a/src/test/java/com/zaxxer/hikari/TestValidation.java b/src/test/java/com/zaxxer/hikari/TestValidation.java\nindex e0c8207..a3c6536 100644\n--- a/src/test/java/com/zaxxer/hikari/TestValidation.java\n+++ b/src/test/java/com/zaxxer/hikari/TestValidation.java\n@@ -59,7 +59,7 @@\n          config.validate();\n          Assert.fail();\n       }\n-      catch (IllegalStateException ise) {\n+      catch (IllegalArgumentException ise) {\n          // pass\n       }\n    }\n@@ -183,7 +183,7 @@\n          config.validate();\n          Assert.fail();\n       }\n-      catch (IllegalStateException ise) {\n+      catch (IllegalArgumentException ise) {\n          Assert.assertTrue(ise.getMessage().contains(\"together\"));\n       }\n    }\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 186,
        "bugNodeStartChar": 5435,
        "bugNodeLength": 25,
        "fixLineNum": 186,
        "fixNodeStartChar": 5435,
        "fixNodeLength": 28,
        "sourceBeforeFix": "IllegalStateException ise",
        "sourceAfterFix": "IllegalArgumentException ise"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f0d0501d556efb8796138d4aa92ce4f276c93c3b",
        "fixCommitParentSHA1": "67a2c62a6aa3aadeb5e7ba68fd28aed2d33cd9d7",
        "bugFilePath": "hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsWithACL.java",
        "fixPatch": "diff --git a/hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsWithACL.java b/hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsWithACL.java\nindex a428cfc..c5e4619 100644\n--- a/hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsWithACL.java\n+++ b/hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsWithACL.java\n@@ -166,9 +166,9 @@\n     grantGlobal(TEST_UTIL, toGroupEntry(GROUP_READ), Permission.Action.READ);\n     grantGlobal(TEST_UTIL, toGroupEntry(GROUP_WRITE), Permission.Action.WRITE);\n \n-    assertEquals(5, AccessControlLists.getTablePermissions(conf, TEST_TABLE).size());\n+    assertEquals(4, AccessControlLists.getTablePermissions(conf, TEST_TABLE).size());\n     try {\n-      assertEquals(5, AccessControlClient.getUserPermissions(systemUserConnection,\n+      assertEquals(4, AccessControlClient.getUserPermissions(systemUserConnection,\n           TEST_TABLE.toString()).size());\n     } catch (Throwable e) {\n       LOG.error(\"error during call of AccessControlClient.getUserPermissions. \", e);\n",
        "projectName": "apache.hbase",
        "bugLineNum": 169,
        "bugNodeStartChar": 7233,
        "bugNodeLength": 80,
        "fixLineNum": 169,
        "fixNodeStartChar": 7233,
        "fixNodeLength": 80,
        "sourceBeforeFix": "assertEquals(5,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())",
        "sourceAfterFix": "assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\nindex 9a10a4e..5a77c4d 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/GroupingTest.java\n@@ -49,7 +49,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -76,7 +76,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -103,7 +103,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -138,7 +138,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -173,7 +173,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(selection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 176,
        "bugNodeStartChar": 7537,
        "bugNodeLength": 38,
        "fixLineNum": 176,
        "fixNodeStartChar": 7537,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "864435a71cd9e8b0dec4150284ee43372167b091",
        "fixCommitParentSHA1": "fd6e6dc5922fcbf058911c6b72e21bf8c9c4ed50",
        "bugFilePath": "guava-tests/test/com/google/common/base/StopwatchTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/base/StopwatchTest.java b/guava-tests/test/com/google/common/base/StopwatchTest.java\nindex eb3436c..da4f15b 100644\n--- a/guava-tests/test/com/google/common/base/StopwatchTest.java\n+++ b/guava-tests/test/com/google/common/base/StopwatchTest.java\n@@ -160,18 +160,18 @@\n   public void testElapsedMillis() {\n     stopwatch.start();\n     ticker.advance(999999);\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(1);\n-    assertEquals(1, stopwatch.elapsedMillis());\n+    assertEquals(1, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_whileRunning() {\n     ticker.advance(78000000);\n     stopwatch.start();\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n \n     ticker.advance(345000000);\n-    assertEquals(345, stopwatch.elapsedMillis());\n+    assertEquals(345, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_notRunning() {\n@@ -180,7 +180,7 @@\n     ticker.advance(4000000);\n     stopwatch.stop();\n     ticker.advance(9000000);\n-    assertEquals(4, stopwatch.elapsedMillis());\n+    assertEquals(4, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_multipleSegments() {\n@@ -191,13 +191,13 @@\n     ticker.advance(16000000);\n \n     stopwatch.start();\n-    assertEquals(9, stopwatch.elapsedMillis());\n+    assertEquals(9, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(25000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n \n     stopwatch.stop();\n     ticker.advance(36000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   @GwtIncompatible(\"String.format()\")\n",
        "projectName": "google.guava",
        "bugLineNum": 165,
        "bugNodeStartChar": 4401,
        "bugNodeLength": 25,
        "fixLineNum": 165,
        "fixNodeStartChar": 4401,
        "fixNodeLength": 31,
        "sourceBeforeFix": "stopwatch.elapsedMillis()",
        "sourceAfterFix": "stopwatch.elapsed(MILLISECONDS)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "8186c8c6023d33958c162f4dcd459688ff52d151",
        "fixCommitParentSHA1": "f2a0296193ff6d52f2b405b6dfa39978908e1ee6",
        "bugFilePath": "metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java",
        "fixPatch": "diff --git a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\nold mode 100644\nnew mode 100755\nindex e9d1b4e..4f8601e\n--- a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n+++ b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n@@ -42,7 +42,7 @@\n \n     @Before\n     public void setUp() throws Exception {\n-        when(context.getContextPath()).thenReturn(\"/context\");\n+        when(request.getContextPath()).thenReturn(\"/context\");\n \n         when(config.getServletContext()).thenReturn(context);\n \n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 45,
        "bugNodeStartChar": 1871,
        "bugNodeLength": 24,
        "fixLineNum": 45,
        "fixNodeStartChar": 1871,
        "fixNodeLength": 24,
        "sourceBeforeFix": "context.getContextPath()",
        "sourceAfterFix": "request.getContextPath()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c4cdb163930b5890aa5c15f3161baa607545a129",
        "fixCommitParentSHA1": "c31c9ed0fc9b43bfa472da8d5ff2f5352f2da189",
        "bugFilePath": "servers/src/main/java/tachyon/worker/block/TieredBlockStore.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/block/TieredBlockStore.java b/servers/src/main/java/tachyon/worker/block/TieredBlockStore.java\nindex d971cd9..93c0ce1 100644\n--- a/servers/src/main/java/tachyon/worker/block/TieredBlockStore.java\n+++ b/servers/src/main/java/tachyon/worker/block/TieredBlockStore.java\n@@ -292,7 +292,7 @@\n   @Override\n   public void removeBlock(long sessionId, long blockId) throws InvalidStateException,\n       NotFoundException, IOException {\n-    removeBlockInternal(sessionId, blockId, BlockStoreLocation.anyTier());\n+    removeBlock(sessionId, blockId, BlockStoreLocation.anyTier());\n   }\n \n   @Override\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 295,
        "bugNodeStartChar": 12502,
        "bugNodeLength": 69,
        "fixLineNum": 295,
        "fixNodeStartChar": 12502,
        "fixNodeLength": 61,
        "sourceBeforeFix": "removeBlockInternal(sessionId,blockId,BlockStoreLocation.anyTier())",
        "sourceAfterFix": "removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2a754d9dd04b032290767958b78482707b88d76f",
        "fixCommitParentSHA1": "4984fb69803d92486fc74ade2b702064b49dd927",
        "bugFilePath": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java",
        "fixPatch": "diff --git a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\nindex a79d6bc..a28515a 100644\n--- a/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n+++ b/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java\n@@ -50,9 +50,9 @@\n \n         for (final Thread.State state : Thread.State.values()) {\n             gauges.put(name(state.toString().toLowerCase(), \"count\"),\n-                       new Gauge<Object>() {\n+                       new Gauge<Integer>() {\n                            @Override\n-                           public Object getValue() {\n+                           public Integer getValue() {\n                                return getThreadCount(state);\n                            }\n                        });\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 53,
        "bugNodeStartChar": 1691,
        "bugNodeLength": 13,
        "fixLineNum": 53,
        "fixNodeStartChar": 1691,
        "fixNodeLength": 14,
        "sourceBeforeFix": "Gauge<Object>",
        "sourceAfterFix": "Gauge<Integer>"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6ded7158ca7d35859f470b6845389ec342ffff3e",
        "fixCommitParentSHA1": "ae65313436bba0c89f1c792498baa964495e9629",
        "bugFilePath": "mod_cluster/extension/src/main/java/org/wildfly/extension/mod_cluster/ModClusterConfigResourceDefinition.java",
        "fixPatch": "diff --git a/mod_cluster/extension/src/main/java/org/wildfly/extension/mod_cluster/ModClusterConfigResourceDefinition.java b/mod_cluster/extension/src/main/java/org/wildfly/extension/mod_cluster/ModClusterConfigResourceDefinition.java\nindex 077318c..dcde7e9 100644\n--- a/mod_cluster/extension/src/main/java/org/wildfly/extension/mod_cluster/ModClusterConfigResourceDefinition.java\n+++ b/mod_cluster/extension/src/main/java/org/wildfly/extension/mod_cluster/ModClusterConfigResourceDefinition.java\n@@ -230,7 +230,7 @@\n             .setXmlName(CommonAttributes.FACTOR)\n                     //.setDefaultValue(new ModelNode(1))\n             .setAllowExpression(true)\n-            .setValidator(new IntRangeValidator(1, true, true))\n+            .setValidator(new IntRangeValidator(0, true, true))\n             .build();\n \n     // order here controls the order of writing into xml, should follow xsd schema\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 233,
        "bugNodeStartChar": 12135,
        "bugNodeLength": 36,
        "fixLineNum": 233,
        "fixNodeStartChar": 12135,
        "fixNodeLength": 36,
        "sourceBeforeFix": "new IntRangeValidator(1,true,true)",
        "sourceAfterFix": "new IntRangeValidator(0,true,true)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "577ee3f0147ed3d8077a734bddd3a4016546a346",
        "fixCommitParentSHA1": "a85f83049747e8633fdb32b8f2fed76309fba7f6",
        "bugFilePath": "src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java",
        "fixPatch": "diff --git a/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java b/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\nindex d5220ea..1f11e68 100644\n--- a/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\n+++ b/src/main/java/com/nhn/pinpoint/web/controller/ScatterChartController.java\n@@ -88,7 +88,7 @@\n \t\t} else {\r\n \t\t\tList<TraceId> traceIds = scatter.selectScatterTraceIdList(applicationName, from, to, limit);\r\n \r\n-\t\t\tif (!traceIds.isEmpty()) {\r\n+\t\t\tif (traceIds.isEmpty()) {\r\n \t\t\t\tmodel.addAttribute(\"queryStart\", -1);\r\n \t\t\t\tmodel.addAttribute(\"queryEnd\", -1);\r\n \t\t\t} else {\r\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 91,
        "bugNodeStartChar": 3722,
        "bugNodeLength": 19,
        "fixLineNum": 91,
        "fixNodeStartChar": 3632,
        "fixNodeLength": 18,
        "sourceBeforeFix": "!traceIds.isEmpty()",
        "sourceAfterFix": "traceIds.isEmpty()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3c4402897d8288b9642c11497a1a7f006804d10a",
        "fixCommitParentSHA1": "8a43f47550545387e048241300f6c7b6ac6ae7ce",
        "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
        "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex 54c440c..eae74c5 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -249,12 +249,12 @@\n         twitterAPI1.destroyStatus(status.getId());\n     }\n     public void testGetFriends() throws Exception{\n-        List<User> actualReturn = twitterAPI1.getFriends(id2);\n+        List<User> actualReturn = twitterAPI1.getFriends(\"al3x\");\n         boolean found = false;\n         for(User user: actualReturn){\n             found = found || user.getName().equals(\"Yusuke Yamamoto\");\n         }\n-        assertTrue(found);\n+        assertFalse(found);\n         assertTrue(90 < twitterAPI2.getFriends(\"akr\",2).size());\n     }\n     public void testAccountMethods() throws Exception{\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 257,
        "bugNodeStartChar": 10969,
        "bugNodeLength": 17,
        "fixLineNum": 257,
        "fixNodeStartChar": 10969,
        "fixNodeLength": 18,
        "sourceBeforeFix": "assertTrue(found)",
        "sourceAfterFix": "assertFalse(found)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6cf86311e8d061d65c3b8c70d705b69a9d205127",
        "fixCommitParentSHA1": "c2c5bfecaa440f04bc39f21d6f68a840105496bb",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/ExecutorServiceClientProxy.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/ExecutorServiceClientProxy.java b/hazelcast-client/src/main/java/com/hazelcast/client/ExecutorServiceClientProxy.java\nindex 675dddb..b9d8a6c 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/ExecutorServiceClientProxy.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/ExecutorServiceClientProxy.java\n@@ -135,7 +135,7 @@\n             private void handle(Object response) {\n                 Object result = response;\n                 if (response == null) {\n-                    inner.innerSetException(new TimeoutException());\n+                    inner.innerSetException(new TimeoutException(), false);\n                 } else {\n                     if (response instanceof Packet) {\n                         Packet responsePacket = (Packet) response;\n@@ -145,7 +145,7 @@\n                         MemberLeftException memberLeftException = (MemberLeftException) result;\n                         inner.innerSetMemberLeft(memberLeftException.getMember());\n                     } else if (result instanceof Throwable) {\n-                        inner.innerSetException((Throwable) result);\n+                        inner.innerSetException((Throwable) result, true);\n                     } else {\n                         if (dt instanceof MultiTask) {\n                             if (result != null) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 138,
        "bugNodeStartChar": 4885,
        "bugNodeLength": 47,
        "fixLineNum": 138,
        "fixNodeStartChar": 4885,
        "fixNodeLength": 54,
        "sourceBeforeFix": "inner.innerSetException(new TimeoutException())",
        "sourceAfterFix": "inner.innerSetException(new TimeoutException(),false)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "bb046536af2cdfcd40cdb7c668d26c3b479aa17d",
        "fixCommitParentSHA1": "7ddb4feb70451b9f539d3a9a6deffe1ba4421ac7",
        "bugFilePath": "iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/csiv2/CSIv2IORInterceptor.java",
        "fixPatch": "diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/csiv2/CSIv2IORInterceptor.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/csiv2/CSIv2IORInterceptor.java\nindex 933102b..8028f4d 100644\n--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/csiv2/CSIv2IORInterceptor.java\n+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/csiv2/CSIv2IORInterceptor.java\n@@ -72,8 +72,8 @@\n         String sslPortString = CorbaORBService.getORBProperty(Constants.ORB_SSL_PORT);\n         int sslPort = sslPortString == null ? 0 : Integer.parseInt(sslPortString);\n         try {\n-            SSL ssl = new SSL((short) 0,\n-                    (short) MIN_SSL_OPTIONS, /* required options  */\n+            SSL ssl = new SSL((short) MIN_SSL_OPTIONS,\n+                    (short) 0, /* required options  */\n                     (short) sslPort);\n             ORB orb = ORB.init();\n             Any any = orb.create_any();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 75,
        "bugNodeStartChar": 3098,
        "bugNodeLength": 124,
        "fixLineNum": 75,
        "fixNodeStartChar": 3098,
        "fixNodeLength": 124,
        "sourceBeforeFix": "new SSL((short)0,(short)MIN_SSL_OPTIONS,(short)sslPort)",
        "sourceAfterFix": "new SSL((short)MIN_SSL_OPTIONS,(short)0,(short)sslPort)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "b641b46db4f01fdbbce2fe6d544cca4b4b27b3b5",
        "fixCommitParentSHA1": "a887e92c44393255ddc624425f5c248fdf35a68c",
        "bugFilePath": "client/src/test/java/org/asynchttpclient/RealmTest.java",
        "fixPatch": "diff --git a/client/src/test/java/org/asynchttpclient/RealmTest.java b/client/src/test/java/org/asynchttpclient/RealmTest.java\nindex 168410a..c72b661 100644\n--- a/client/src/test/java/org/asynchttpclient/RealmTest.java\n+++ b/client/src/test/java/org/asynchttpclient/RealmTest.java\n@@ -71,7 +71,7 @@\n         String ha2 = getMd5(method + \":\" + uri.getPath());\n         String expectedResponse = getMd5(ha1 + \":\" + nonce + \":\" + ha2);\n \n-        assertEquals(expectedResponse, orig.getResponse());\n+        assertEquals(orig.getResponse(), expectedResponse);\n     }\n \n     @Test(groups = \"standalone\")\n@@ -96,7 +96,7 @@\n         String ha2 = getMd5(method + \":\" + uri.getPath());\n         String expectedResponse = getMd5(ha1 + \":\" + nonce + \":\" + nc + \":\" + cnonce + \":\" + qop + \":\" + ha2);\n \n-        assertEquals(expectedResponse, orig.getResponse());\n+        assertEquals(orig.getResponse(), expectedResponse);\n     }\n \n     private String getMd5(String what) {\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 99,
        "bugNodeStartChar": 3732,
        "bugNodeLength": 50,
        "fixLineNum": 99,
        "fixNodeStartChar": 3732,
        "fixNodeLength": 50,
        "sourceBeforeFix": "assertEquals(expectedResponse,orig.getResponse())",
        "sourceAfterFix": "assertEquals(orig.getResponse(),expectedResponse)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0cb756acf8ee44c28bee8b9ea626e2a65cee5880",
        "fixCommitParentSHA1": "60e108886fcb173ca21f3966965a0b57cf5b5797",
        "bugFilePath": "android/guava-tests/test/com/google/common/hash/HashTestUtils.java",
        "fixPatch": "diff --git a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\nindex f2b8971..8dfbdb0 100644\n--- a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n+++ b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n@@ -509,9 +509,9 @@\n     rng.nextBytes(bytes);\n     ByteBuffer littleEndian = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n-    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));\n+    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(bigEndian));\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHasherByteBufferPreservesByteOrder(HashFunction hashFunction) {\n@@ -522,9 +522,9 @@\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n     assertEquals(\n         hashFunction.newHasher().putBytes(littleEndian).hash(),\n-        hashFunction.newHasher().putBytes(littleEndian).hash());\n+        hashFunction.newHasher().putBytes(bigEndian).hash());\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHashBytesThrowsCorrectExceptions(HashFunction hashFunction) {\n",
        "projectName": "google.guava",
        "bugLineNum": 527,
        "bugNodeStartChar": 18923,
        "bugNodeLength": 20,
        "fixLineNum": 527,
        "fixNodeStartChar": 18923,
        "fixNodeLength": 17,
        "sourceBeforeFix": "littleEndian.order()",
        "sourceAfterFix": "bigEndian.order()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "713054c1359a0cb346fe966fc2ebd0999680f4f4",
        "fixCommitParentSHA1": "4e5b834a9524ac010c63e825be2c64f2aea1d464",
        "bugFilePath": "api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java",
        "fixPatch": "diff --git a/api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java b/api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java\nindex 88593ba..3cb9ebd 100644\n--- a/api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java\n+++ b/api/src/main/java/org/asynchttpclient/AsyncHttpClientConfigDefaults.java\n@@ -135,6 +135,6 @@\n     }\n     \n     public static boolean defaultAcceptAnyCertificate() {\n-        return getBooleanValue(ASYNC_CLIENT + \"acceptAnyCertificate\", false);\n+        return getBoolean(ASYNC_CLIENT + \"acceptAnyCertificate\", false);\n     }\n }\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 138,
        "bugNodeStartChar": 4991,
        "bugNodeLength": 61,
        "fixLineNum": 138,
        "fixNodeStartChar": 4991,
        "fixNodeLength": 56,
        "sourceBeforeFix": "getBooleanValue(ASYNC_CLIENT + \"acceptAnyCertificate\",false)",
        "sourceAfterFix": "getBoolean(ASYNC_CLIENT + \"acceptAnyCertificate\",false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ec6882d1cdfcdd73806895a5546182a4af56d79c",
        "fixCommitParentSHA1": "ef708a648af7d61a272ab8e680ecc46d3b5c2d7f",
        "bugFilePath": "core/common/src/main/java/alluxio/collections/ConcurrentHashSet.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/collections/ConcurrentHashSet.java b/core/common/src/main/java/alluxio/collections/ConcurrentHashSet.java\nindex 763b067..7bdd590 100644\n--- a/core/common/src/main/java/alluxio/collections/ConcurrentHashSet.java\n+++ b/core/common/src/main/java/alluxio/collections/ConcurrentHashSet.java\n@@ -137,7 +137,7 @@\n   }\n \n   @Override\n-  public <T> T[] toArray(T[] a) {\n+  public <E> E[] toArray(E[] a) {\n     return mMap.keySet().toArray(a);\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 140,
        "bugNodeStartChar": 3926,
        "bugNodeLength": 1,
        "fixLineNum": 140,
        "fixNodeStartChar": 3926,
        "fixNodeLength": 1,
        "sourceBeforeFix": "T",
        "sourceAfterFix": "E"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bc0df834a2fcab61542d1253e4daddcd47cafe3d",
        "fixCommitParentSHA1": "6471f7d40f7ab32555ce1d56b646c5766438ba3e",
        "bugFilePath": "src/api/org/openmrs/api/impl/AdministrationServiceImpl.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/api/impl/AdministrationServiceImpl.java b/src/api/org/openmrs/api/impl/AdministrationServiceImpl.java\nindex 20c6ee8..1deea7d 100644\n--- a/src/api/org/openmrs/api/impl/AdministrationServiceImpl.java\n+++ b/src/api/org/openmrs/api/impl/AdministrationServiceImpl.java\n@@ -898,7 +898,7 @@\n \t\tif (globalLocaleList == null) {\r\n \t\t\tglobalLocaleList = new GlobalLocaleList();\r\n \t\t\taddGlobalPropertyListener(globalLocaleList);\r\n-\t\t\tString currentPropertyValue = getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST);\r\n+\t\t\tString currentPropertyValue = getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST, \"\");\r\n \t\t\tGlobalProperty allowedLocalesProperty = new GlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,\r\n \t\t\t        currentPropertyValue);\r\n \t\t\tglobalLocaleList.globalPropertyChanged(allowedLocalesProperty);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 901,
        "bugNodeStartChar": 30524,
        "bugNodeLength": 71,
        "fixLineNum": 901,
        "fixNodeStartChar": 29624,
        "fixNodeLength": 75,
        "sourceBeforeFix": "getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST)",
        "sourceAfterFix": "getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,\"\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d7ba926794b4df826c0fc8c57e4ce5afb72bb0e2",
        "fixCommitParentSHA1": "b8e9430abb4a51a65983ed6f13b7cc34febbdae4",
        "bugFilePath": "components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java",
        "fixPatch": "diff --git a/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java b/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\nindex 0416573..393bcb4 100644\n--- a/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\n+++ b/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\n@@ -39,7 +39,7 @@\n                 continue;\n             }\n             if (toUpper) {\n-                char upper = Character.toLowerCase(ch);\n+                char upper = Character.toUpperCase(ch);\n                 sb.append(upper);\n                 // reset flag\n                 toUpper = false;\n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1666,
        "bugNodeLength": 25,
        "fixLineNum": 42,
        "fixNodeStartChar": 1666,
        "fixNodeLength": 25,
        "sourceBeforeFix": "Character.toLowerCase(ch)",
        "sourceAfterFix": "Character.toUpperCase(ch)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f4463337af407322d315b72b0cda79a1c484911e",
        "fixCommitParentSHA1": "76a7b94c09a89d5e82d258402d7b5e839695576b",
        "bugFilePath": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\nindex 12b1036..6560668 100644\n--- a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n+++ b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n@@ -80,7 +80,7 @@\n @Category(CommonCriteria.class)\n public class AuthenticationTestCase {\n \n-    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getServerAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n+    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getHttpAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n     private static final String WAR_URL = \"http://\" + SERVER_HOST_PORT + \"/ejb3security/\";\n \n     /*\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 3644,
        "bugNodeLength": 39,
        "fixLineNum": 83,
        "fixNodeStartChar": 3644,
        "fixNodeLength": 37,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getHttpAddress()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a9b27a843588d61921e7f75182fa737a1402cf05",
        "fixCommitParentSHA1": "1e4fd56c04a459052b2ca63ef4318aa40bfdb8b8",
        "bugFilePath": "dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java",
        "fixPatch": "diff --git a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\nindex 386aa8d..e7bb310 100644\n--- a/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\n+++ b/dubbo-admin/src/main/java/com/alibaba/dubbo/governance/service/impl/OverrideServiceImpl.java\n@@ -75,7 +75,7 @@\n             return;\n         }\n \n-        URL newOverride = oldOverride.removeParameter(\"enabled\");\n+        URL newOverride = oldOverride.addParameter(\"enabled\", \"enabled\");\n         registryService.unregister(oldOverride);\n         registryService.register(newOverride);\n \n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 78,
        "bugNodeStartChar": 2515,
        "bugNodeLength": 38,
        "fixLineNum": 78,
        "fixNodeStartChar": 2515,
        "fixNodeLength": 46,
        "sourceBeforeFix": "oldOverride.removeParameter(\"enabled\")",
        "sourceAfterFix": "oldOverride.addParameter(\"enabled\",\"enabled\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0e05cfd1dbe7e423498620c807ac3ff8681688c9",
        "fixCommitParentSHA1": "74c8dcb3875ec066aa9a8f2d736000457bcec9dc",
        "bugFilePath": "PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java",
        "fixPatch": "diff --git a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\nindex bff33e9..1438466 100644\n--- a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n+++ b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n@@ -286,16 +286,16 @@\n      */\n     private void completeManagedRenderersListIfNecessary() {\n         if (managedRenderers != null) {\n-            Set<Renderer> existing = new HashSet<Renderer>();\n+            Set<String> existing = new HashSet<String>();\n             for (ManagedRenderer mr : managedRenderers) {\n-                existing.add(mr.getRenderer());\n+                existing.add(mr.getRenderer().getClass().getName());\n             }\n \n             List<ManagedRenderer> completeManagedRenderersList = new ArrayList<ManagedRenderer>();\n             completeManagedRenderersList.addAll(Arrays.asList(managedRenderers));\n \n             for (Renderer renderer : previewController.getRegisteredRenderers()) {\n-                if (!existing.contains(renderer)) {\n+                if (!existing.contains(renderer.getClass().getName())) {\n                     completeManagedRenderersList.add(new ManagedRenderer(renderer, false));\n                 }\n             }\n@@ -336,7 +336,7 @@\n         //Validate no null ManagedRenderers\n         for (int i = 0; i < managedRenderers.length; i++) {\n             if (managedRenderers[i] == null) {\n-                throw new IllegalArgumentException(\"managedRenderers should not contains null values\");\n+                throw new IllegalArgumentException(\"managedRenderers should not contain null values\");\n             }\n         }\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 289,
        "bugNodeStartChar": 10484,
        "bugNodeLength": 13,
        "fixLineNum": 289,
        "fixNodeStartChar": 10484,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Set<Renderer>",
        "sourceAfterFix": "Set<String>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6b144252ba7a992878a09ce09c0b37b88efbb8bd",
        "fixCommitParentSHA1": "1c8bca8e842bc2fd85bd865f8c6968ddda8329d6",
        "bugFilePath": "components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/ha/ClusteredRouteControllerAutoConfiguration.java",
        "fixPatch": "diff --git a/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/ha/ClusteredRouteControllerAutoConfiguration.java b/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/ha/ClusteredRouteControllerAutoConfiguration.java\nindex 3be20a3..19a3959 100644\n--- a/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/ha/ClusteredRouteControllerAutoConfiguration.java\n+++ b/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/ha/ClusteredRouteControllerAutoConfiguration.java\n@@ -67,7 +67,7 @@\n         controller.setFilters(filters);\n         controller.addFilter(new ClusteredRouteFilters.IsAutoStartup());\n \n-        if (ObjectHelper.isEmpty(configuration.getClusterService())) {\n+        if (ObjectHelper.isNotEmpty(configuration.getClusterService())) {\n             controller.setClusterService(configuration.getClusterService());\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 70,
        "bugNodeStartChar": 3247,
        "bugNodeLength": 55,
        "fixLineNum": 70,
        "fixNodeStartChar": 3247,
        "fixNodeLength": 58,
        "sourceBeforeFix": "ObjectHelper.isEmpty(configuration.getClusterService())",
        "sourceAfterFix": "ObjectHelper.isNotEmpty(configuration.getClusterService())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ddfab2213db771b738d1f971e36e664f5a02f4ab",
        "fixCommitParentSHA1": "db527813d12741b68e8f7c311e7c7f411c3ab1c9",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java\nindex 80a57fa..6443b2a 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java\n@@ -351,7 +351,7 @@\n     ExecDriverTaskHandle th = (ExecDriverTaskHandle)t;\n     RunningJob rj = th.getRunningJob();\n     this.mapProgress = Math.round(rj.mapProgress() * 100);\n-    this.reduceProgress = Math.round(rj.mapProgress() * 100);\n+    this.reduceProgress = Math.round(rj.reduceProgress() * 100);\n     taskCounters.put(\"CNTR_NAME_\" + getId() + \"_MAP_PROGRESS\", Long.valueOf(this.mapProgress));\n     taskCounters.put(\"CNTR_NAME_\" + getId() + \"_REDUCE_PROGRESS\", Long.valueOf(this.reduceProgress));\n     Counters ctrs = th.getCounters();\n",
        "projectName": "apache.hive",
        "bugLineNum": 354,
        "bugNodeStartChar": 13234,
        "bugNodeLength": 16,
        "fixLineNum": 354,
        "fixNodeStartChar": 13234,
        "fixNodeLength": 19,
        "sourceBeforeFix": "rj.mapProgress()",
        "sourceAfterFix": "rj.reduceProgress()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bafb1f877934f826d5f74f9f33e824dd1aa30432",
        "fixCommitParentSHA1": "fdfbb0ca84342d5b4f328e1f9a3bfb2058552145",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\nindex bd9ea17..e1627c3 100644\n--- a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n+++ b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n@@ -50,7 +50,7 @@\n         return getOutputFactory().createXMLEventWriter(out, IOConverter.getCharsetName(exchange));\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventWriter createXMLEventWriter(OutputStream out) throws XMLStreamException {\n         return getOutputFactory().createXMLEventWriter(out);\n     }\n@@ -65,7 +65,7 @@\n         return getOutputFactory().createXMLEventWriter(result);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLStreamWriter createXMLStreamWriter(OutputStream outputStream) throws XMLStreamException {\n         return getOutputFactory().createXMLStreamWriter(outputStream);\n     }\n@@ -85,7 +85,7 @@\n         return getOutputFactory().createXMLStreamWriter(result);\n     }\n \n-    @Converter\n+    @Deprecated\n     public XMLStreamReader createXMLStreamReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLStreamReader(in);\n     }\n@@ -105,7 +105,7 @@\n         return getInputFactory().createXMLStreamReader(in);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventReader createXMLEventReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLEventReader(in);\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 53,
        "bugNodeStartChar": 1860,
        "bugNodeLength": 10,
        "fixLineNum": 53,
        "fixNodeStartChar": 1860,
        "fixNodeLength": 11,
        "sourceBeforeFix": "@Converter",
        "sourceAfterFix": "@Deprecated"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e7c6ca945fd2d85b1dd86483d699d7af2399d0fc",
        "fixCommitParentSHA1": "c77f107f5f37c40fff3567722c5d656f81b74c72",
        "bugFilePath": "transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java\nindex d31b753..ea6bc0c 100644\n--- a/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java\n+++ b/transport/src/main/java/io/netty/channel/socket/aio/AioSocketChannel.java\n@@ -190,7 +190,7 @@\n \n             if (empty) {\n                 // Reset reader/writerIndex to 0 if the buffer is empty.\n-                buf.clear();\n+                buf.discardReadBytes();\n             }\n \n             channel.notifyFlushFutures(writtenBytes);\n@@ -274,7 +274,6 @@\n                     channel.unsafe().close(channel.unsafe().voidFuture());\n                 } else {\n                     // start the next read\n-                    //channel.readTask.run();\n                     channel.eventLoop().execute(channel.readTask);\n                 }\n             }\n",
        "projectName": "netty.netty",
        "bugLineNum": 193,
        "bugNodeStartChar": 6070,
        "bugNodeLength": 11,
        "fixLineNum": 193,
        "fixNodeStartChar": 6070,
        "fixNodeLength": 22,
        "sourceBeforeFix": "buf.clear()",
        "sourceAfterFix": "buf.discardReadBytes()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "7e1d5d0a2d4eeebf14b406722a16cb43f6437f1a",
        "fixCommitParentSHA1": "77c3f223267aab46a071d93342580620c614e269",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java\nindex d632059..11c83ae 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java\n@@ -71,7 +71,7 @@\n     public void testContextualize_InvocationTargetException() {\n         final TestBean testBean = new TestBean();\n         DefaultContext context = new DefaultContext();\n-        context.add(\"exceptionalMethod\", 123f);\n+        context.add(\"exceptionalMethod\", 123.0f);\n         try {\n             testBean.contextualize(context);\n             fail();\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 74,
        "bugNodeStartChar": 2871,
        "bugNodeLength": 38,
        "fixLineNum": 74,
        "fixNodeStartChar": 2871,
        "fixNodeLength": 40,
        "sourceBeforeFix": "context.add(\"exceptionalMethod\",123f)",
        "sourceAfterFix": "context.add(\"exceptionalMethod\",123.0f)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7d8950aebe5801a466e215cfcc023b10c818e3ca",
        "fixCommitParentSHA1": "752b4638c65750d542fc85c2b223573400f29963",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\nindex dc809ff..03b97e0 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n@@ -417,7 +417,7 @@\n             synchronized (impl) {\n                 try {\n                     if (impl.isCancelled()) {\n-                        logger.trace(\"{} is already cancelled\", impl.uuid());\n+                        logger.error(\"{} is already cancelled\", impl.uuid());\n                         return false;\n                     }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 420,
        "bugNodeStartChar": 17097,
        "bugNodeLength": 52,
        "fixLineNum": 420,
        "fixNodeStartChar": 17097,
        "fixNodeLength": 52,
        "sourceBeforeFix": "logger.trace(\"{} is already cancelled\",impl.uuid())",
        "sourceAfterFix": "logger.error(\"{} is already cancelled\",impl.uuid())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0c4f7988dc8c947eb7bda3afa8c58ace04d4d1d8",
        "fixCommitParentSHA1": "47862afbef98faee61e07ca4a00f41f34a764cf5",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskCancelAsyncProducerConsumerITCase.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskCancelAsyncProducerConsumerITCase.java b/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskCancelAsyncProducerConsumerITCase.java\nindex 4ea6511..69f1a49 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskCancelAsyncProducerConsumerITCase.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskCancelAsyncProducerConsumerITCase.java\n@@ -126,12 +126,12 @@\n \t\t\t\t\tbreak;\n \t\t\t\t} else {\n \t\t\t\t\t// Retry\n-\t\t\t\t\tThread.sleep(500);\n+\t\t\t\t\tThread.sleep(500L);\n \t\t\t\t}\n \t\t\t}\n \n \t\t\t// Verify that async producer is in blocking request\n-\t\t\tassertTrue(\"Producer thread is not blocked: \" + Arrays.toString(ASYNC_CONSUMER_THREAD.getStackTrace()), producerBlocked);\n+\t\t\tassertTrue(\"Producer thread is not blocked: \" + Arrays.toString(ASYNC_PRODUCER_THREAD.getStackTrace()), producerBlocked);\n \n \t\t\tboolean consumerWaiting = false;\n \t\t\tfor (int i = 0; i < 50; i++) {\n@@ -145,7 +145,7 @@\n \t\t\t\t\tbreak;\n \t\t\t\t} else {\n \t\t\t\t\t// Retry\n-\t\t\t\t\tThread.sleep(500);\n+\t\t\t\t\tThread.sleep(500L);\n \t\t\t\t}\n \t\t\t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 148,
        "bugNodeStartChar": 5982,
        "bugNodeLength": 17,
        "fixLineNum": 148,
        "fixNodeStartChar": 5982,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Thread.sleep(500)",
        "sourceAfterFix": "Thread.sleep(500L)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f0fa093ebc7f7d1b0b9beb254f6531bb77310853",
        "fixCommitParentSHA1": "eed3b6cbdb9424e3a999118acb3f6eb4e49dac9c",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\nindex 666395c..9695e3c 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n@@ -581,10 +581,10 @@\n             initEndpointMapper();\n \n             autoDetectContainer();\n-            configureWebDotXmlAtmosphereHandler(sc);\n+            configureWebDotXmlAtmosphereHandler(scFacade);\n             asyncSupport.init(scFacade);\n             initAtmosphereHandler(scFacade);\n-            configureAtmosphereInterceptor(sc);\n+            configureAtmosphereInterceptor(scFacade);\n             analytics();\n \n             if (broadcasterCacheClassName == null) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 584,
        "bugNodeStartChar": 25102,
        "bugNodeLength": 39,
        "fixLineNum": 584,
        "fixNodeStartChar": 25102,
        "fixNodeLength": 45,
        "sourceBeforeFix": "configureWebDotXmlAtmosphereHandler(sc)",
        "sourceAfterFix": "configureWebDotXmlAtmosphereHandler(scFacade)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "2f77b4e6a3f1ab8bd855476a15a4ab2f6f7ae32c",
        "fixCommitParentSHA1": "53e191bd7b603d8bdaf87cca863dfcfdc689721f",
        "bugFilePath": "community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java",
        "fixPatch": "diff --git a/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java b/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\nindex e3b0364..ca3fc92 100644\n--- a/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\n+++ b/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\n@@ -192,7 +192,7 @@\n                        + \") match admins<-[:PART_OF*0..]-group<-[:MEMBER_OF]-user return user.name, group.name\";\n         gen.get().addSnippet( \"query-get-admins\", createCypherSnippet( query ) );\n         String result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Engin\") );\n         gen.get().addSnippet( \"o-query-get-admins\", createQueryResultSnippet( result ) );\n         \n@@ -212,7 +212,7 @@\n                 + \") match jale-[:MEMBER_OF]->()-[:PART_OF*0..]->group return group.name\";\n         gen.get().addSnippet( \"query-get-user-memberships\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Users\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-user-memberships\",\n@@ -234,7 +234,7 @@\n                 + \") match refNode<-[:ROOT]->()<-[:PART_OF*0..]-group return group.name\";\n         gen.get().addSnippet( \"query-get-groups\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Users\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-groups\",\n@@ -270,7 +270,7 @@\n         \t\t\"order by min(length(p)), user.name\";\n         gen.get().addSnippet( \"query-get-members\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Engin\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-members\",\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 194,
        "bugNodeStartChar": 7376,
        "bugNodeLength": 51,
        "fixLineNum": 194,
        "fixNodeStartChar": 7376,
        "fixNodeLength": 55,
        "sourceBeforeFix": "engine.execute(query).toString()",
        "sourceAfterFix": "engine.execute(query).dumpToString()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "40f3ba0f619f5bac94bb32f6d5746117627dddb6",
        "fixCommitParentSHA1": "fd32a9faab9426e7b2f607e9ccfce9e204bfe661",
        "bugFilePath": "hazelcast-client-new/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java",
        "fixPatch": "diff --git a/hazelcast-client-new/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java b/hazelcast-client-new/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\nindex c8d3bca..5ec6abb 100644\n--- a/hazelcast-client-new/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\n+++ b/hazelcast-client-new/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\n@@ -586,7 +586,7 @@\n             }\n         });\n \n-        assertOpenEventually(\"responseLatch\", responseLatch, 5);\n+        assertOpenEventually(\"responseLatch\", responseLatch);\n         assertEquals(msg + AppendCallable.APPENDAGE, result.get());\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 589,
        "bugNodeStartChar": 21809,
        "bugNodeLength": 55,
        "fixLineNum": 589,
        "fixNodeStartChar": 21809,
        "fixNodeLength": 52,
        "sourceBeforeFix": "assertOpenEventually(\"responseLatch\",responseLatch,5)",
        "sourceAfterFix": "assertOpenEventually(\"responseLatch\",responseLatch)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "5a3d01d226ccd5e879fc301a9ca2706aa066e752",
        "fixCommitParentSHA1": "80ab94f8540d80dd24f444d3fbc58b791dc6baf7",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\nindex db2a1e7..325b097 100755\n--- a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n@@ -33,7 +33,7 @@\n \n public class ASMSerializerFactory implements Opcodes {\n \n-    protected final ASMClassLoader classLoader             = new ASMClassLoader();\n+    protected final ASMClassLoader classLoader             = new ASMClassLoader(ASMSerializerFactory.class.getClassLoader());\n \n     private final AtomicLong       seed                    = new AtomicLong();\n \n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 36,
        "bugNodeStartChar": 1280,
        "bugNodeLength": 20,
        "fixLineNum": 36,
        "fixNodeStartChar": 1280,
        "fixNodeLength": 63,
        "sourceBeforeFix": "new ASMClassLoader()",
        "sourceAfterFix": "new ASMClassLoader(ASMSerializerFactory.class.getClassLoader())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "82bd0baab2dcc4659c68919117b24dd9a8e17ebf",
        "fixCommitParentSHA1": "680ee9e0c052d53e0686c0a38f986a1fee65dc04",
        "bugFilePath": "components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java",
        "fixPatch": "diff --git a/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java b/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java\nindex 7c52629..68798f3 100644\n--- a/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java\n+++ b/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java\n@@ -57,7 +57,7 @@\n         Future future = Mockito.mock(Future.class);\n         Mockito.when(future.get()).thenReturn(rm);\n         org.apache.kafka.clients.producer.KafkaProducer kp = Mockito.mock(org.apache.kafka.clients.producer.KafkaProducer.class);\n-        Mockito.when(kp.send(Mockito.any())).thenReturn(future);\n+        Mockito.when(kp.send(Mockito.any(ProducerRecord.class))).thenReturn(future);\n \n         producer.setKafkaProducer(kp);\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 60,
        "bugNodeStartChar": 2458,
        "bugNodeLength": 13,
        "fixLineNum": 60,
        "fixNodeStartChar": 2458,
        "fixNodeLength": 33,
        "sourceBeforeFix": "Mockito.any()",
        "sourceAfterFix": "Mockito.any(ProducerRecord.class)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c9a1cc9df3dc4fe2eef78ad6090a9b1d95a02557",
        "fixCommitParentSHA1": "adccab823675fb33685c5c0268388fc9857b7047",
        "bugFilePath": "clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java",
        "fixPatch": "diff --git a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java\nindex 2547457..1293fb3 100644\n--- a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java\n+++ b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/LockingResourceDefinition.java\n@@ -57,7 +57,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(15000))\n+            .setDefaultValue(new ModelNode().set(15000L))\n             .build();\n \n     static final SimpleAttributeDefinition CONCURRENCY_LEVEL = new SimpleAttributeDefinitionBuilder(ModelKeys.CONCURRENCY_LEVEL, ModelType.INT, true)\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 60,
        "bugNodeStartChar": 2994,
        "bugNodeLength": 26,
        "fixLineNum": 60,
        "fixNodeStartChar": 2994,
        "fixNodeLength": 27,
        "sourceBeforeFix": "new ModelNode().set(15000)",
        "sourceAfterFix": "new ModelNode().set(15000L)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "1c3bc7d2c3e4e95de1f85b283b0d7e12c70b54fc",
        "fixCommitParentSHA1": "2e3c0698886b08b1f380cca3b666cbf890facb50",
        "bugFilePath": "aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java",
        "fixPatch": "diff --git a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\nindex 772153d..f2eaaf5 100644\n--- a/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n+++ b/aws-java-sdk-cloudfront/src/main/java/com/amazonaws/services/cloudfront/util/SignerUtils.java\n@@ -54,22 +54,22 @@\n      * Returns a custom policy for the given parameters.\n      */\n     public static String buildCustomPolicy(String resourcePath,\n-            Date activeFrom, Date expiresOn, String ipAddress) {\n+            Date expiresOn, Date activeFrom, String ipAddress) {\n         return \"{\\\"Statement\\\": [{\"\n                 + \"\\\"Resource\\\":\\\"\"\n                 + resourcePath\n                 + \"\\\"\"\n                 + \",\\\"Condition\\\":{\"\n                 + \"\\\"DateLessThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                + MILLISECONDS.toSeconds(activeFrom.getTime())\n+                + MILLISECONDS.toSeconds(expiresOn.getTime())\n                 + \"}\"\n                 + \",\\\"IpAddress\\\":{\\\"AWS:SourceIp\\\":\\\"\"\n                 + ipAddress\n                 + \"\\\"}\"\n-                + (expiresOn == null\n+                + (activeFrom == null\n                    ? \"\"\n                    : \",\\\"DateGreaterThan\\\":{\\\"AWS:EpochTime\\\":\"\n-                     + MILLISECONDS.toSeconds(expiresOn.getTime()) + \"}\"\n+                     + MILLISECONDS.toSeconds(activeFrom.getTime()) + \"}\"\n                   )\n                 + \"}}]}\";\n     }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 64,
        "bugNodeStartChar": 2196,
        "bugNodeLength": 20,
        "fixLineNum": 64,
        "fixNodeStartChar": 2196,
        "fixNodeLength": 19,
        "sourceBeforeFix": "activeFrom.getTime()",
        "sourceAfterFix": "expiresOn.getTime()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8d1af7d7a8d8e028a3058a848c3b0cd9862f297d",
        "fixCommitParentSHA1": "8bd7625710dc8ab60f0efaca31b5d5f642d8a4a2",
        "bugFilePath": "core/server/master/src/test/java/alluxio/master/file/options/LoadMetadataOptionsTest.java",
        "fixPatch": "diff --git a/core/server/master/src/test/java/alluxio/master/file/options/LoadMetadataOptionsTest.java b/core/server/master/src/test/java/alluxio/master/file/options/LoadMetadataOptionsTest.java\nindex ddcccac..513e792 100644\n--- a/core/server/master/src/test/java/alluxio/master/file/options/LoadMetadataOptionsTest.java\n+++ b/core/server/master/src/test/java/alluxio/master/file/options/LoadMetadataOptionsTest.java\n@@ -40,7 +40,8 @@\n     LoadMetadataOptions options = LoadMetadataOptions.defaults();\n     options.setCreateAncestors(isCreateAncestors);\n     options.setLoadDirectChildren(isLoadDirectChildren);\n-    options.setUnderFileStatus(new UnderFileStatus(\"dummy\", isDirectory));\n+    options.setUnderFileStatus(\n+        new UnderFileStatus(\"dummy\", 0L, isDirectory, 0L, \"owner\", \"group\", (short) 077));\n     Assert.assertEquals(isCreateAncestors, options.isCreateAncestors());\n     Assert.assertEquals(isLoadDirectChildren, options.isLoadDirectChildren());\n     Assert.assertEquals(isDirectory, options.getUnderFileStatus().isDirectory());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 43,
        "bugNodeStartChar": 1528,
        "bugNodeLength": 41,
        "fixLineNum": 44,
        "fixNodeStartChar": 1537,
        "fixNodeLength": 80,
        "sourceBeforeFix": "new UnderFileStatus(\"dummy\",isDirectory)",
        "sourceAfterFix": "new UnderFileStatus(\"dummy\",0L,isDirectory,0L,\"owner\",\"group\",(short)077)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e7d4575d49668d1877d9ecdccb9f5d422b2b1a49",
        "fixCommitParentSHA1": "3e274401f4820232698a0d7605911d75fdb14ca6",
        "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java",
        "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 16,
        "bugNodeStartChar": 479,
        "bugNodeLength": 18,
        "fixLineNum": 16,
        "fixNodeStartChar": 464,
        "fixNodeLength": 18,
        "sourceBeforeFix": "DEFAULT_MAX=1024",
        "sourceAfterFix": "DEFAULT_MAX=4096"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "e8a74c8ad07bbf497026a6b8bde532cd61f79f17",
        "fixCommitParentSHA1": "f34fc73e89e88da32c36786c8634afa9dc090207",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\nindex e94e5dc..cb5d3c6 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\n@@ -273,7 +273,7 @@\n \n         if (getPath() == null && that.getPath() != null) {\n             return false;\n-        } else if (that.getPath() == null) {\n+        } else if (that.getPath() == null && getPath() != null) {\n             return false;\n         }\n         if (!getPath().equals(that.getPath())) {\n@@ -282,7 +282,7 @@\n \n         if (getDomain() == null && that.getDomain() != null) {\n             return false;\n-        } else if (that.getDomain() == null) {\n+        } else if (that.getDomain() == null && getDomain() != null) {\n             return false;\n         }\n         return getDomain().equalsIgnoreCase(that.getDomain());\n@@ -298,7 +298,7 @@\n \n         if (getPath() == null && c.getPath() != null) {\n             return -1;\n-        } else if (c.getPath() == null) {\n+        } else if (c.getPath() == null && getPath() != null) {\n             return 1;\n         }\n         v = getPath().compareTo(c.getPath());\n@@ -308,7 +308,7 @@\n \n         if (getDomain() == null && c.getDomain() != null) {\n             return -1;\n-        } else if (c.getDomain() == null) {\n+        } else if (c.getDomain() == null && getDomain() != null) {\n             return 1;\n         }\n         v = getDomain().compareToIgnoreCase(c.getDomain());\n",
        "projectName": "netty.netty",
        "bugLineNum": 301,
        "bugNodeStartChar": 7857,
        "bugNodeLength": 19,
        "fixLineNum": 301,
        "fixNodeStartChar": 7857,
        "fixNodeLength": 40,
        "sourceBeforeFix": "c.getPath() == null",
        "sourceAfterFix": "c.getPath() == null && getPath() != null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "183a6fccd65bc0cd6de129aa2c7b35b13bfd2797",
        "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 569,
        "bugNodeStartChar": 20568,
        "bugNodeLength": 55,
        "fixLineNum": 569,
        "fixNodeStartChar": 20568,
        "fixNodeLength": 55,
        "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)",
        "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "198d4ef1420ba1c306b33cd48061c37d79fc8098",
        "fixCommitParentSHA1": "0146da4c0a6accfe1df79ee77593f1ab1388333e",
        "bugFilePath": "bundles/binding/org.openhab.binding.insteonplm/src/main/java/org/openhab/binding/insteonplm/internal/device/InsteonDevice.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.insteonplm/src/main/java/org/openhab/binding/insteonplm/internal/device/InsteonDevice.java b/bundles/binding/org.openhab.binding.insteonplm/src/main/java/org/openhab/binding/insteonplm/internal/device/InsteonDevice.java\nindex eaa696e..2e107e5 100644\n--- a/bundles/binding/org.openhab.binding.insteonplm/src/main/java/org/openhab/binding/insteonplm/internal/device/InsteonDevice.java\n+++ b/bundles/binding/org.openhab.binding.insteonplm/src/main/java/org/openhab/binding/insteonplm/internal/device/InsteonDevice.java\n@@ -371,7 +371,7 @@\n \t\t\t\t\t\t\tm_address, -dt);\n \t\t\t\t\treturn (timeNow + 2000L); // retry soon\n \t\t\t\t} else {\n-\t\t\t\t\tlogger.warn(\"gave up waiting for query reply from device {}\", m_address);\n+\t\t\t\t\tlogger.debug(\"gave up waiting for query reply from device {}\", m_address);\n \t\t\t\t}\n \t\t\t}\n \t\t\tQEntry qe = m_requestQueue.poll(); // take it off the queue!\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 374,
        "bugNodeStartChar": 12160,
        "bugNodeLength": 72,
        "fixLineNum": 374,
        "fixNodeStartChar": 12160,
        "fixNodeLength": 73,
        "sourceBeforeFix": "logger.warn(\"gave up waiting for query reply from device {}\",m_address)",
        "sourceAfterFix": "logger.debug(\"gave up waiting for query reply from device {}\",m_address)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "864435a71cd9e8b0dec4150284ee43372167b091",
        "fixCommitParentSHA1": "fd6e6dc5922fcbf058911c6b72e21bf8c9c4ed50",
        "bugFilePath": "guava-tests/test/com/google/common/base/StopwatchTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/base/StopwatchTest.java b/guava-tests/test/com/google/common/base/StopwatchTest.java\nindex eb3436c..da4f15b 100644\n--- a/guava-tests/test/com/google/common/base/StopwatchTest.java\n+++ b/guava-tests/test/com/google/common/base/StopwatchTest.java\n@@ -160,18 +160,18 @@\n   public void testElapsedMillis() {\n     stopwatch.start();\n     ticker.advance(999999);\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(1);\n-    assertEquals(1, stopwatch.elapsedMillis());\n+    assertEquals(1, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_whileRunning() {\n     ticker.advance(78000000);\n     stopwatch.start();\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n \n     ticker.advance(345000000);\n-    assertEquals(345, stopwatch.elapsedMillis());\n+    assertEquals(345, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_notRunning() {\n@@ -180,7 +180,7 @@\n     ticker.advance(4000000);\n     stopwatch.stop();\n     ticker.advance(9000000);\n-    assertEquals(4, stopwatch.elapsedMillis());\n+    assertEquals(4, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_multipleSegments() {\n@@ -191,13 +191,13 @@\n     ticker.advance(16000000);\n \n     stopwatch.start();\n-    assertEquals(9, stopwatch.elapsedMillis());\n+    assertEquals(9, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(25000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n \n     stopwatch.stop();\n     ticker.advance(36000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   @GwtIncompatible(\"String.format()\")\n",
        "projectName": "google.guava",
        "bugLineNum": 163,
        "bugNodeStartChar": 4330,
        "bugNodeLength": 25,
        "fixLineNum": 163,
        "fixNodeStartChar": 4330,
        "fixNodeLength": 31,
        "sourceBeforeFix": "stopwatch.elapsedMillis()",
        "sourceAfterFix": "stopwatch.elapsed(MILLISECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java b/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\nindex 5be379e..431e724 100644\n--- a/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n+++ b/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n@@ -83,7 +83,7 @@\n   }\n \n   @Override\n-  public N removeInEdge(Object edge, boolean isSelfLoop) {\n+  public N removeInEdge(E edge, boolean isSelfLoop) {\n     if (!isSelfLoop) {\n       return removeOutEdge(edge);\n     }\n@@ -91,7 +91,7 @@\n   }\n \n   @Override\n-  public N removeOutEdge(Object edge) {\n+  public N removeOutEdge(E edge) {\n     N node = super.removeOutEdge(edge);\n     Multiset<N> adjacentNodes = getReference(adjacentNodesReference);\n     if (adjacentNodes != null) {\n",
        "projectName": "google.guava",
        "bugLineNum": 94,
        "bugNodeStartChar": 3008,
        "bugNodeLength": 11,
        "fixLineNum": 94,
        "fixNodeStartChar": 3008,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object edge",
        "sourceAfterFix": "E edge"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe",
        "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 391,
        "bugNodeStartChar": 18132,
        "bugNodeLength": 27,
        "fixLineNum": 391,
        "fixNodeStartChar": 18132,
        "fixNodeLength": 40,
        "sourceBeforeFix": "analysis.getType(aggregate)",
        "sourceAfterFix": "analysis.getTypeWithCoercions(aggregate)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6bd9731f77303b53b9a03b22be0c57438e096355",
        "fixCommitParentSHA1": "9fc0391f63288e2e9da3001d42834f6e5882c9ec",
        "bugFilePath": "src/test/java/twitter4j/DAOTest.java",
        "fixPatch": "diff --git a/src/test/java/twitter4j/DAOTest.java b/src/test/java/twitter4j/DAOTest.java\nindex 06b1210..51ad79f 100644\n--- a/src/test/java/twitter4j/DAOTest.java\n+++ b/src/test/java/twitter4j/DAOTest.java\n@@ -81,7 +81,7 @@\n         trySerializeable(directMessages);\n \n         // empty Trends list\n-        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json\"));\n+        List<Trends> trends = Trends.constructTrendsList(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/trends/daily-empty.json\"));\n         assertTrue(trends.size() == 0);\n         trySerializeable(trends);\n \n@@ -91,7 +91,7 @@\n         // single User\n         HttpClient http = new HttpClient();\n         User user = new User(http.get(\"http://yusuke.homeip.net/twitter4j/en/testcases/users/show/twit4j.json\"));\n-        assertFalse(user.isGeoEnabled());\n+        assertTrue(user.isGeoEnabled());\n         assertFalse(user.isVerified());\n         assertEquals(id1, user.getName());\n         assertEquals(id1, user.getScreenName());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 94,
        "bugNodeStartChar": 4014,
        "bugNodeLength": 32,
        "fixLineNum": 94,
        "fixNodeStartChar": 4014,
        "fixNodeLength": 31,
        "sourceBeforeFix": "assertFalse(user.isGeoEnabled())",
        "sourceAfterFix": "assertTrue(user.isGeoEnabled())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1b814e4a95602810a01679d486caaf514474e8d1",
        "fixCommitParentSHA1": "cd77e492d1165068444277d8eab30601ca42d72a",
        "bugFilePath": "roboguice/src/main/java/roboguice/inject/PreferenceListener.java",
        "fixPatch": "diff --git a/roboguice/src/main/java/roboguice/inject/PreferenceListener.java b/roboguice/src/main/java/roboguice/inject/PreferenceListener.java\nindex 7d10f5b..0a80217 100644\n--- a/roboguice/src/main/java/roboguice/inject/PreferenceListener.java\n+++ b/roboguice/src/main/java/roboguice/inject/PreferenceListener.java\n@@ -108,7 +108,7 @@\n \n \n             field.setAccessible(true);\n-            field.set(instanceRef, value);\n+            field.set(instance, value);\n \n         } catch (IllegalAccessException e) {\n             throw new RuntimeException(e);\n",
        "projectName": "roboguice.roboguice",
        "bugLineNum": 111,
        "bugNodeStartChar": 4038,
        "bugNodeLength": 29,
        "fixLineNum": 111,
        "fixNodeStartChar": 4038,
        "fixNodeLength": 26,
        "sourceBeforeFix": "field.set(instanceRef,value)",
        "sourceAfterFix": "field.set(instance,value)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c5c423ee77274339c43b42e9c20948f8ad0534e9",
        "fixCommitParentSHA1": "0ec0726a810a02c649c0b94ebe2ffd036f1b5816",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\nindex a9a0017..69a0454 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\n@@ -108,7 +108,7 @@\n         assertSizeAndLoadCount(map);\n \n         hz3.getLifecycleService().terminate();\n-        assertClusterSize(2, nodes[0]);\n+        assertClusterSizeEventually(2, nodes[0]);\n         map.loadAll(true);\n \n         assertSizeEventually(MAP_STORE_ENTRY_COUNT, map);\n@@ -132,7 +132,7 @@\n         pausingLoader.awaitPause();\n \n         hz3.getLifecycleService().terminate();\n-        assertClusterSize(2, nodes[0]);\n+        assertClusterSizeEventually(2, nodes[0]);\n \n         pausingLoader.resume();\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 111,
        "bugNodeStartChar": 3951,
        "bugNodeLength": 30,
        "fixLineNum": 111,
        "fixNodeStartChar": 3951,
        "fixNodeLength": 40,
        "sourceBeforeFix": "assertClusterSize(2,nodes[0])",
        "sourceAfterFix": "assertClusterSizeEventually(2,nodes[0])"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "64bc69ef4c547771f44f6b6b103cda7be2f0922b",
        "fixCommitParentSHA1": "c40d697e8a86445f535ddc284354b297d9deaed0",
        "bugFilePath": "metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java",
        "fixPatch": "diff --git a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\nindex 1e0427e..0619b7a 100644\n--- a/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n+++ b/metrics-adaptor/src/main/java/com/codahale/metrics/MetricRegistry.java\n@@ -138,7 +138,7 @@\n \t}\n \n \tpublic SortedMap<String, Histogram> getHistograms(MetricFilter filter) {\n-\t\treturn adaptMetrics(Histogram.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Histogram.class, reg.getHistograms(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters() {\n@@ -146,7 +146,7 @@\n \t}\n \n \tpublic SortedMap<String, Meter> getMeters(MetricFilter filter) {\n-\t\treturn adaptMetrics(Meter.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Meter.class, reg.getMeters(transformFilter(filter)));\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers() {\n@@ -154,7 +154,7 @@\n \t}\n \n \tpublic SortedMap<String, Timer> getTimers(MetricFilter filter) {\n-\t\treturn adaptMetrics(Timer.class, reg.getCounters(transformFilter(filter)));\n+\t\treturn adaptMetrics(Timer.class, reg.getTimers(transformFilter(filter)));\n \t}\n \n \tprivate io.dropwizard.metrics.MetricFilter transformFilter(final MetricFilter filter) {\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 141,
        "bugNodeStartChar": 3812,
        "bugNodeLength": 40,
        "fixLineNum": 141,
        "fixNodeStartChar": 3812,
        "fixNodeLength": 42,
        "sourceBeforeFix": "reg.getCounters(transformFilter(filter))",
        "sourceAfterFix": "reg.getHistograms(transformFilter(filter))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dbb575b5861a30bd4ab660603c671441abb3f2cf",
        "fixCommitParentSHA1": "532a11ab5914c8b4b5b9da62273ac76f7f944531",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/CleanXmlAnnotator.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/CleanXmlAnnotator.java b/src/edu/stanford/nlp/pipeline/CleanXmlAnnotator.java\nindex 44fddeb..1c954bd 100644\n--- a/src/edu/stanford/nlp/pipeline/CleanXmlAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/CleanXmlAnnotator.java\n@@ -699,7 +699,7 @@\n             currSectionCoreMap.set(CoreAnnotations.AuthorAnnotation.class, foundAuthor);\n             // get author mention info\n             Pattern p = Pattern.compile(foundAuthor);\n-            Matcher matcher = p.matcher(sectionStartToken.word());\n+            Matcher matcher = p.matcher(sectionStartTagToken.word());\n             if (matcher.find()) {\n               int authorMentionStart = matcher.start() + sectionStartTagCharBegin;\n               int authorMentionEnd = matcher.end() + sectionStartTagCharBegin;\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 702,
        "bugNodeStartChar": 28684,
        "bugNodeLength": 24,
        "fixLineNum": 702,
        "fixNodeStartChar": 28684,
        "fixNodeLength": 27,
        "sourceBeforeFix": "sectionStartToken.word()",
        "sourceAfterFix": "sectionStartTagToken.word()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "42b44935272ecf97acca3b7c9fe90b45fd8e01d2",
        "fixCommitParentSHA1": "1192e16a67859917f443f1470d7809a3b18f2329",
        "bugFilePath": "platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java",
        "fixPatch": "diff --git a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\nindex eb87919..8696130 100644\n--- a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\n+++ b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\n@@ -151,7 +151,7 @@\n          * you could append \"?olderThan=2912\u2033 to your request to get the 20\n          * messages prior to those you're seeing.\n          */\n-        private Integer olderThan = -1;\n+        private Long olderThan = -1L;\n         /**\n          * Returns messages newer than the message ID specified as a numeric\n          * string. This should be used when polling for new messages. If you're\n@@ -160,7 +160,7 @@\n          * that you do not get duplicate copies of messages already on your\n          * page.\n          */\n-        private Integer newerThan = -1;\n+        private Long newerThan = -1L;\n         /**\n          * threaded=true will only return the first message in each thread. This\n          * parameter is intended for apps which display message threads\n@@ -247,19 +247,19 @@\n             this.limit = limit;\n         }\n \n-        public Integer getOlderThan() {\n+        public Long getOlderThan() {\n             return olderThan;\n         }\n \n-        public void setOlderThan(Integer olderThan) {\n+        public void setOlderThan(Long olderThan) {\n             this.olderThan = olderThan;\n         }\n \n-        public Integer getNewerThan() {\n+        public Long getNewerThan() {\n             return newerThan;\n         }\n \n-        public void setNewerThan(Integer newerThan) {\n+        public void setNewerThan(Long newerThan) {\n             this.newerThan = newerThan;\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 250,
        "bugNodeStartChar": 7734,
        "bugNodeLength": 71,
        "fixLineNum": 250,
        "fixNodeStartChar": 7734,
        "fixNodeLength": 68,
        "sourceBeforeFix": "public Integer getOlderThan(){   return olderThan; } ",
        "sourceAfterFix": "public Long getOlderThan(){   return olderThan; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d9cee23da79c7368a47a894f1bf861f04fdb6f00",
        "fixCommitParentSHA1": "667d009963614e9da347ea7ee1d69f273a2cfdbc",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java b/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\nindex 889d70f..f544f3e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\n@@ -38,7 +38,7 @@\n             out.writeDouble((Double) obj);\n         } else if (obj instanceof Float) {\n             out.writeByte(5);\n-            out.writeDouble((Float) obj);\n+            out.writeFloat((Float) obj);\n         } else if (obj instanceof Boolean) {\n             out.writeByte(6);\n             out.writeBoolean((Boolean) obj);\n@@ -66,7 +66,7 @@\n         if (type == 0) {\n             return null;\n         } else if (type == 1) {\n-            return in.readInt();\n+            return in.readLong();\n         } else if (type == 2) {\n             return in.readInt();\n         } else if (type == 3) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 69,
        "bugNodeStartChar": 2456,
        "bugNodeLength": 12,
        "fixLineNum": 69,
        "fixNodeStartChar": 2456,
        "fixNodeLength": 13,
        "sourceBeforeFix": "in.readInt()",
        "sourceAfterFix": "in.readLong()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\nindex 509dedf..dec10b8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n@@ -28,61 +28,61 @@\n     @EncodeMethod(id = 1)\n     void offer(String name, Data value, long timeoutMillis);\n \n-    @EncodeMethod(id = 1)\n+    @EncodeMethod(id = 2)\n     void put(String name, Data value);\n \n-    @EncodeMethod(id = 2)\n+    @EncodeMethod(id = 3)\n     void size(String name);\n \n-    @EncodeMethod(id = 3)\n+    @EncodeMethod(id = 4)\n     void remove(String name, Data value);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 5)\n     void poll(String name, long timeoutMillis);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 6)\n     void take(String name);\n \n-    @EncodeMethod(id = 5)\n+    @EncodeMethod(id = 7)\n     void peek(String name);\n \n-    @EncodeMethod(id = 6)\n+    @EncodeMethod(id = 8)\n     void iterator(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 9)\n     void drainTo(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 10)\n     void drainToMaxSize(String name, int maxSize);\n \n-    @EncodeMethod(id = 8)\n+    @EncodeMethod(id = 11)\n     void contains(String name, Data value);\n \n-    @EncodeMethod(id = 9)\n+    @EncodeMethod(id = 12)\n     void containsAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 10)\n+    @EncodeMethod(id = 13)\n     void compareAndRemoveAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 11)\n+    @EncodeMethod(id = 14)\n     void compareAndRetainAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 12)\n+    @EncodeMethod(id = 15)\n     void clear(String name);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 16)\n     void addAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 17)\n     void addListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 18)\n     void removeListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 19)\n     void remainingCapacity(String name);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 20)\n     void isEmpty(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 85,
        "bugNodeStartChar": 2392,
        "bugNodeLength": 7,
        "fixLineNum": 85,
        "fixNodeStartChar": 2392,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=17",
        "sourceAfterFix": "id=20"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "d819e4c0748aad7ed80b002b21b0ad8dad2d54b0",
        "fixCommitParentSHA1": "f6f255838943dfb92c0ed6fac973428ece6723ee",
        "bugFilePath": "bundles/model/org.openhab.model.rule/src/org/openhab/model/rule/internal/engine/RuleEngine.java",
        "fixPatch": "diff --git a/bundles/model/org.openhab.model.rule/src/org/openhab/model/rule/internal/engine/RuleEngine.java b/bundles/model/org.openhab.model.rule/src/org/openhab/model/rule/internal/engine/RuleEngine.java\nindex 42d5874..dec4d1b 100644\n--- a/bundles/model/org.openhab.model.rule/src/org/openhab/model/rule/internal/engine/RuleEngine.java\n+++ b/bundles/model/org.openhab.model.rule/src/org/openhab/model/rule/internal/engine/RuleEngine.java\n@@ -190,7 +190,7 @@\n \t\t\t\n \t\t\t// and now the rules, which only want to see state changes\n \t\t\tif(triggerManager!=null) {\n-\t\t\t\tIterable<Rule> rules = triggerManager.getRules(CHANGE, item, newState, oldState);\n+\t\t\t\tIterable<Rule> rules = triggerManager.getRules(CHANGE, item, oldState, newState);\n \t\t\t\tRuleEvaluationContext context = new RuleEvaluationContext();\n \t\t\t\tcontext.newValue(QualifiedName.create(RuleContextHelper.VAR_PREVIOUS_STATE), oldState);\n \t\t\t\texecuteRules(rules, context);\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 193,
        "bugNodeStartChar": 6563,
        "bugNodeLength": 57,
        "fixLineNum": 193,
        "fixNodeStartChar": 6563,
        "fixNodeLength": 57,
        "sourceBeforeFix": "triggerManager.getRules(CHANGE,item,newState,oldState)",
        "sourceAfterFix": "triggerManager.getRules(CHANGE,item,oldState,newState)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "099bf2014a8cd43c270c5900ce9d34689287d0ef",
        "fixCommitParentSHA1": "bb5ca3bf71dc80922fbec2e366ce734c4d26f446",
        "bugFilePath": "tests/src/test/java/alluxio/shell/command/LsCommandTest.java",
        "fixPatch": "diff --git a/tests/src/test/java/alluxio/shell/command/LsCommandTest.java b/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\nindex da964c5..91d083e 100644\n--- a/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\n+++ b/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\n@@ -90,7 +90,7 @@\n     String expected = \"\";\n     expected += getLsNoAclResultStr(\"/testRoot/testFileA\", files[0].getCreationTimeMs(), 10,\n         LsCommand.STATE_FILE_IN_MEMORY);\n-    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0,\n+    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1,\n         LsCommand.STATE_FOLDER);\n     expected += getLsNoAclResultStr(\"/testRoot/testFileC\", files[3].getCreationTimeMs(), 30,\n         LsCommand.STATE_FILE_NOT_IN_MEMORY);\n@@ -115,7 +115,7 @@\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[0].getPermission(),\n         files[0].isFolder());\n     expected +=\n-        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0, LsCommand.STATE_FOLDER,\n+        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1, LsCommand.STATE_FOLDER,\n             testUser, testUser, files[1].getPermission(), files[1].isFolder());\n     expected += getLsResultStr(\"/testRoot/testFileC\", files[3].getCreationTimeMs(), 30,\n         LsCommand.STATE_FILE_NOT_IN_MEMORY, testUser, testUser, files[3].getPermission(),\n@@ -192,7 +192,7 @@\n     expected += \"WARNING: lsr is deprecated. Please use ls -R instead.\\n\";\n     expected += getLsNoAclResultStr(\"/testRoot/testFileA\", files[0].getCreationTimeMs(), 10,\n         LsCommand.STATE_FILE_IN_MEMORY);\n-    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0,\n+    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1,\n         LsCommand.STATE_FOLDER);\n     expected += getLsNoAclResultStr(\"/testRoot/testDir/testFileB\", files[2].getCreationTimeMs(), 20,\n         LsCommand.STATE_FILE_IN_MEMORY);\n@@ -221,7 +221,7 @@\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[0].getPermission(),\n         files[0].isFolder());\n     expected +=\n-        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0, LsCommand.STATE_FOLDER,\n+        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1, LsCommand.STATE_FOLDER,\n             testUser, testUser, files[1].getPermission(), files[1].isFolder());\n     expected += getLsResultStr(\"/testRoot/testDir/testFileB\", files[2].getCreationTimeMs(), 20,\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[2].getPermission(),\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 224,
        "bugNodeStartChar": 10179,
        "bugNodeLength": 171,
        "fixLineNum": 224,
        "fixNodeStartChar": 10179,
        "fixNodeLength": 171,
        "sourceBeforeFix": "getLsResultStr(\"/testRoot/testDir\",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())",
        "sourceAfterFix": "getLsResultStr(\"/testRoot/testDir\",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "4a0d68c50bc8ef11d94538567ce3c8f7deb5d4ab",
        "fixCommitParentSHA1": "09d826ed46cba3876d4e35231038c0c9d4e301da",
        "bugFilePath": "transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java b/transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java\nindex 1066358..ddafebb 100644\n--- a/transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java\n+++ b/transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java\n@@ -264,7 +264,7 @@\n     }\n \n     private void runTaskQueue() {\n-        while (acquiredChannelCount <= maxConnections) {\n+        while (acquiredChannelCount < maxConnections) {\n             AcquireTask task = pendingAcquireQueue.poll();\n             if (task == null) {\n                 break;\n",
        "projectName": "netty.netty",
        "bugLineNum": 267,
        "bugNodeStartChar": 11536,
        "bugNodeLength": 38,
        "fixLineNum": 267,
        "fixNodeStartChar": 11536,
        "fixNodeLength": 37,
        "sourceBeforeFix": "acquiredChannelCount <= maxConnections",
        "sourceAfterFix": "acquiredChannelCount < maxConnections"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "25f231b4a41a3d15554e7687e899ce46e6bd17f1",
        "fixCommitParentSHA1": "641e5d0a7c3e8fa7a20e7db7435ccb08f7a2ee49",
        "bugFilePath": "test/com/google/javascript/jscomp/OptimizeParametersTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/OptimizeParametersTest.java b/test/com/google/javascript/jscomp/OptimizeParametersTest.java\nindex 7012b25..1eb1839 100644\n--- a/test/com/google/javascript/jscomp/OptimizeParametersTest.java\n+++ b/test/com/google/javascript/jscomp/OptimizeParametersTest.java\n@@ -163,13 +163,13 @@\n     testSame(\"var foo = function () {}; foo.call();\");\n \n     testSame(\"var foo = function () {}; foo.call(this);\");\n-    testSame(\n+    test(\n         \"var foo = function (a) {}; foo.call(this, 1);\",\n-        \"var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);\");\n+        \"var foo = function () {var a = 1;}; foo.call(this);\");\n     testSame(\"var foo = function () {}; foo.call(null);\");\n-    testSame(\n+    test(\n         \"var foo = function (a) {}; foo.call(null, 1);\",\n-        \"var foo = function () {var a$jscomp$1 = 1;}; foo.call(null);\");\n+        \"var foo = function () {var a = 1;}; foo.call(null);\");\n   }\n \n   public void testDoOptimizeApply() {\n@@ -445,11 +445,9 @@\n   }\n \n   public void testFunctionWithReferenceToArgumentsShouldNotBeOptimize() {\n-    testSame(\"function foo(a,b,c) { return arguments.size; };\" +\n-             \"foo(1);\");\n+    testSame(\"function foo(a,b,c) { return arguments.size; }; foo(1);\");\n     testSame(\"var foo = function(a,b,c) { return arguments.size }; foo(1);\");\n-    testSame(\"var foo = function bar(a,b,c) { return arguments.size }; \" +\n-             \"foo(2); bar(2);\");\n+    testSame(\"var foo = function bar(a,b,c) { return arguments.size }; foo(2); bar(2);\");\n   }\n \n   public void testFunctionWithTwoNames() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 166,
        "bugNodeStartChar": 6483,
        "bugNodeLength": 138,
        "fixLineNum": 166,
        "fixNodeStartChar": 6483,
        "fixNodeLength": 134,
        "sourceBeforeFix": "testSame(\"var foo = function (a) {}; foo.call(this, 1);\",\"var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);\")",
        "sourceAfterFix": "test(\"var foo = function (a) {}; foo.call(this, 1);\",\"var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 133,
        "bugNodeStartChar": 6441,
        "bugNodeLength": 30,
        "fixLineNum": 133,
        "fixNodeStartChar": 6309,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(3)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(3)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\nindex ffce204..157f0d0 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n@@ -69,28 +69,28 @@\n     @EncodeMethod(id = 14)\n     void addAllWithIndex(String name, int index, List<Data> valueList);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 15)\n     void get(String name, int index);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 16)\n     void set(String name, int index, Data value);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 17)\n     void addWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 18)\n     void removeWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 19)\n     void lastIndexOf(String name, Data value);\n \n-    @EncodeMethod(id = 18)\n+    @EncodeMethod(id = 20)\n     void indexOf(String name, Data value);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 21)\n     void sub(String name, int from, int to);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 22)\n     void iterator(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 75,
        "bugNodeStartChar": 2162,
        "bugNodeLength": 7,
        "fixLineNum": 75,
        "fixNodeStartChar": 2162,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=14",
        "sourceAfterFix": "id=16"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819",
        "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 473,
        "bugNodeStartChar": 18446,
        "bugNodeLength": 11,
        "fixLineNum": 473,
        "fixNodeStartChar": 17974,
        "fixNodeLength": 11,
        "sourceBeforeFix": "0 - originY",
        "sourceAfterFix": "0 - originX"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2119d33293008fcc876f5fcd58ede2993eb24d6",
        "fixCommitParentSHA1": "69fcae6b44cb9443bd970f89f7215258d6092bcc",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\nindex 250e3ac..ceafa9d 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n@@ -153,7 +153,7 @@\n \t@Configuration\n \t@ConditionalOnClass(JdbcTemplate.class)\n \t@ConditionalOnBean(DataSource.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"db\")\n+\t@ConditionalOnEnabledHealthIndicator(\"db\")\n \tpublic static class DataSourcesHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<DataSourceHealthIndicator, DataSource>\n \t\t\timplements InitializingBean {\n@@ -193,7 +193,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(MongoTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mongo\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mongo\")\n \tpublic static class MongoHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<MongoHealthIndicator, MongoTemplate> {\n \n@@ -210,7 +210,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RedisConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"redis\")\n+\t@ConditionalOnEnabledHealthIndicator(\"redis\")\n \tpublic static class RedisHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<RedisHealthIndicator, RedisConnectionFactory> {\n@@ -228,7 +228,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RabbitTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"rabbit\")\n+\t@ConditionalOnEnabledHealthIndicator(\"rabbit\")\n \tpublic static class RabbitHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<RabbitHealthIndicator, RabbitTemplate> {\n \n@@ -245,7 +245,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(SolrServer.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"solr\")\n+\t@ConditionalOnEnabledHealthIndicator(\"solr\")\n \tpublic static class SolrHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<SolrHealthIndicator, SolrServer> {\n \n@@ -261,7 +261,7 @@\n \t}\n \n \t@Configuration\n-\t@ConditionalOnEnablednHealthIndicator(\"diskspace\")\n+\t@ConditionalOnEnabledHealthIndicator(\"diskspace\")\n \tpublic static class DiskSpaceHealthIndicatorConfiguration {\n \n \t\t@Bean\n@@ -280,7 +280,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {\n@@ -298,7 +298,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(ConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"jms\")\n+\t@ConditionalOnEnabledHealthIndicator(\"jms\")\n \tpublic static class JmsHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<JmsHealthIndicator, ConnectionFactory> {\n \n@@ -315,7 +315,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(Client.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"elasticsearch\")\n+\t@ConditionalOnEnabledHealthIndicator(\"elasticsearch\")\n \t@EnableConfigurationProperties(ElasticsearchHealthIndicatorProperties.class)\n \tpublic static class ElasticsearchHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<ElasticsearchHealthIndicator, Client> {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 196,
        "bugNodeStartChar": 8319,
        "bugNodeLength": 46,
        "fixLineNum": 196,
        "fixNodeStartChar": 8319,
        "fixNodeLength": 45,
        "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"mongo\")",
        "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"mongo\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a161d8d1924d1fb49a4d229370d998be1493957c",
        "fixCommitParentSHA1": "2226b56a998b547dcd7363212f64c6348e067175",
        "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java",
        "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\nindex 0edf0ff..a9d439f 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/journal/KafkaJournal.java\n@@ -366,7 +366,7 @@\n     protected void flushDirtyLogs() {\n         log.debug(\"Checking for dirty logs to flush...\");\n \n-        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.asMap(logManager.logsByTopicPartition()).entrySet();\n+        final Set<Map.Entry<TopicAndPartition, Log>> entries = JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition()).entrySet();\n         for (final Map.Entry<TopicAndPartition, Log> topicAndPartitionLogEntry : entries) {\n             final TopicAndPartition topicAndPartition = topicAndPartitionLogEntry.getKey();\n             final Log kafkaLog = topicAndPartitionLogEntry.getValue();\n@@ -459,7 +459,7 @@\n                 loggerForCleaner.debug(\"Beginning log cleanup\");\n                 int total = 0;\n                 final Timer.Context ctx = new Timer().time();\n-                for (final Log kafkaLog : JavaConversions.asIterable(logManager.allLogs())) {\n+                for (final Log kafkaLog : JavaConversions.asJavaIterable(logManager.allLogs())) {\n                     if (kafkaLog.config().compact()) continue;\n                     loggerForCleaner.debug(\"Garbage collecting {}\", kafkaLog.name());\n                     total += cleanupExpiredSegments(kafkaLog) +\n@@ -535,7 +535,7 @@\n             // so we have to get a global view.\n             final long committedOffset = KafkaJournal.this.committedOffset.get();\n             final HashSet<LogSegment> logSegments = Sets.newHashSet(\n-                    JavaConversions.asIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n+                    JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset, Long.MAX_VALUE))\n             );\n             loggerForCleaner.debug(\"[cleanup-committed] Keeping segments {}\", logSegments);\n             return kafkaLog.deleteOldSegments(new AbstractFunction1<LogSegment, Object>() {\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 538,
        "bugNodeStartChar": 25767,
        "bugNodeLength": 81,
        "fixLineNum": 538,
        "fixNodeStartChar": 25767,
        "fixNodeLength": 85,
        "sourceBeforeFix": "JavaConversions.asIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))",
        "sourceAfterFix": "JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ceedf8077728da8d462bbdf607a89da82e9a5f2b",
        "fixCommitParentSHA1": "45379946e7cc7bcd45b5b587b7c1232400aea4f6",
        "bugFilePath": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java",
        "fixPatch": "diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\nindex 01e7c1e..214fad7 100644\n--- a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\n+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\n@@ -182,19 +182,19 @@\n         int z=101;\n     }\n \n-    @IntMethodAnnotation(42)\n+    @InputIntMethodAnnotation(42)\n     public void another() {\n     }\n \n-    @IntMethodAnnotation(value=43)\n+    @InputIntMethodAnnotation(value=43)\n     public void another2() {\n     }\n     \n-    @IntMethodAnnotation(-44)\n+    @InputIntMethodAnnotation(-44)\n     public void anotherNegative() {\n     }\n \n-    @IntMethodAnnotation(value=-45)\n+    @InputIntMethodAnnotation(value=-45)\n     public void anotherNegative2() {\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 197,
        "bugNodeStartChar": 4360,
        "bugNodeLength": 31,
        "fixLineNum": 197,
        "fixNodeStartChar": 4360,
        "fixNodeLength": 36,
        "sourceBeforeFix": "@IntMethodAnnotation(value=-45)",
        "sourceAfterFix": "@InputIntMethodAnnotation(value=-45)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9031a4c20455ba16a63233f10783a55915afcd9b",
        "fixCommitParentSHA1": "813fed53e8da58beb48bae9ed602f133abb3f747",
        "bugFilePath": "dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java",
        "fixPatch": "diff --git a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\nindex aa1f04e..5e4f899 100644\n--- a/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n+++ b/dubbo-registry/dubbo-registry-redis/src/main/java/org/apache/dubbo/registry/redis/RedisRegistry.java\n@@ -564,7 +564,7 @@\n                                     jedis = jedisPool.getResource();\r\n                                     try {\r\n                                         if (service.endsWith(Constants.ANY_VALUE)) {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 Set<String> keys = jedis.keys(service);\r\n                                                 if (CollectionUtils.isNotEmpty(keys)) {\r\n@@ -576,7 +576,7 @@\n                                             }\r\n                                             jedis.psubscribe(new NotifySub(jedisPool), service); // blocking\r\n                                         } else {\r\n-                                            if (!first) {\r\n+                                            if (first) {\r\n                                                 first = false;\r\n                                                 doNotify(jedis, service);\r\n                                                 resetSkip();\r\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 567,
        "bugNodeStartChar": 23749,
        "bugNodeLength": 6,
        "fixLineNum": 567,
        "fixNodeStartChar": 23183,
        "fixNodeLength": 5,
        "sourceBeforeFix": "!first",
        "sourceAfterFix": "first"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "950656a1fa6775e52d13648e6646bdadbfb4e173",
        "fixCommitParentSHA1": "c9f7bbfd83f0daf94c36cc5b246afa9153fb8fd4",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java b/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\nindex 9059937..3fc88fd 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\n@@ -83,7 +83,7 @@\n                 return map.putIfAbsent(key, value);\n             case REPLACE:\n                 return map.replace(key, value);\n-            case REPLACE_IS_SAME:\n+            case REPLACE_IF_SAME:\n                 return map.replace(key, value, newValue);\n             case SET:\n                 map.set(key, value);\n@@ -142,7 +142,7 @@\n         PUT(4),\n         PUT_IF_ABSENT(5),\n         REPLACE(6),\n-        REPLACE_IS_SAME(7),\n+        REPLACE_IF_SAME(7),\n         SET(8),\n         REMOVE(9),\n         DELETE(10),\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 86,
        "bugNodeStartChar": 2866,
        "bugNodeLength": 21,
        "fixLineNum": 86,
        "fixNodeStartChar": 2866,
        "fixNodeLength": 21,
        "sourceBeforeFix": "case REPLACE_IS_SAME: ",
        "sourceAfterFix": "case REPLACE_IF_SAME: "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/CompilerTestCase.java b/test/com/google/javascript/jscomp/CompilerTestCase.java\nindex 2eb8ae6..e2e80b8 100644\n--- a/test/com/google/javascript/jscomp/CompilerTestCase.java\n+++ b/test/com/google/javascript/jscomp/CompilerTestCase.java\n@@ -1610,7 +1610,7 @@\n         }\n \n         if ((verifyGetterAndSetterUpdates || verifyNoNewGettersOrSetters) && i == 0) {\n-          GatherGettersAndSetterProperties.update(compiler, externsRoot, mainRoot);\n+          GatherGetterAndSetterProperties.update(compiler, externsRoot, mainRoot);\n         }\n \n         recentChange.reset();\n@@ -1633,17 +1633,17 @@\n         if (verifyGetterAndSetterUpdates) {\n           assertWithMessage(\"Pass did not update extern getters / setters\")\n               .that(compiler.getExternGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update source getters / setters\")\n               .that(compiler.getSourceGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n         }\n \n         if (verifyNoNewGettersOrSetters) {\n           MapDifference<String, PropertyAccessKind> externsDifference =\n               Maps.difference(\n                   compiler.getExternGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update new extern getters / setters\")\n               .that(externsDifference.entriesOnlyOnRight())\n               .isEmpty();\n@@ -1654,7 +1654,7 @@\n           MapDifference<String, PropertyAccessKind> sourceDifference =\n               Maps.difference(\n                   compiler.getSourceGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n           assertWithMessage(\"Pass did not update new source getters / setters\")\n               .that(sourceDifference.entriesOnlyOnRight())\n               .isEmpty();\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1657,
        "bugNodeStartChar": 57828,
        "bugNodeLength": 59,
        "fixLineNum": 1657,
        "fixNodeStartChar": 57828,
        "fixNodeLength": 58,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.gather(compiler,mainRoot)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.gather(compiler,mainRoot)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0878f4e562469829fb7ae3de0af4e22c1c775a91",
        "fixCommitParentSHA1": "218a912f9d8b5a6fb103ab5f1d1559ae47c040d3",
        "bugFilePath": "titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java",
        "fixPatch": "diff --git a/titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java b/titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java\nindex 63a26f8..4cd6146 100644\n--- a/titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java\n+++ b/titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java\n@@ -515,7 +515,7 @@\n                         Collection<StaticBuffer> actual = Sets.newHashSet(i);\n \n                         // Check\n-                        log.error(\"Checking bounds [{}, {}) (expect {} keys)\",\n+                        log.debug(\"Checking bounds [{}, {}) (expect {} keys)\",\n                                 new Object[]{startCol, endCol, expected.size()});\n                         Assert.assertEquals(expected, actual);\n                         i.close();\n@@ -551,7 +551,7 @@\n                         KeyIterator i = store.getKeys(krq, tx);\n                         Collection<StaticBuffer> actual = Lists.newArrayList(i);\n \n-                        log.error(\"Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)\",\n+                        log.debug(\"Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)\",\n                                 new Object[]{keyStart, keyEnd, startCol, endCol, expected.size()});\n                         Assert.assertEquals(expected, actual);\n                         i.close();\n",
        "projectName": "thinkaurelius.titan",
        "bugLineNum": 554,
        "bugNodeStartChar": 21753,
        "bugNodeLength": 172,
        "fixLineNum": 554,
        "fixNodeStartChar": 21753,
        "fixNodeLength": 172,
        "sourceBeforeFix": "log.error(\"Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)\",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})",
        "sourceAfterFix": "log.debug(\"Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)\",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dbf099e38ac11b6a5e31791f5ccbbb2511fabbf8",
        "fixCommitParentSHA1": "07c7dd485506b511de206689b0e806f3d8411aab",
        "bugFilePath": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/OpenmrsTestsTest.java b/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\nindex e6b272e..3960806 100644\n--- a/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\n+++ b/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\n@@ -199,7 +199,7 @@\n \t\t\t\tclassName = className.replace(File.separator, \".\");\r\n \t\t\t\t\r\n \t\t\t\t// strip out the beginning (/home/ben/workspace...) up to org.openmrs.\r\n-\t\t\t\tclassName = className.substring(className.indexOf(\"org.openmrs.\"));\r\n+\t\t\t\tclassName = className.substring(className.lastIndexOf(\"org.openmrs.\"));\r\n \t\t\t\t\r\n \t\t\t\ttry {\r\n \t\t\t\t\tClass<?> currentClass = classLoader.loadClass(className);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 202,
        "bugNodeStartChar": 6896,
        "bugNodeLength": 33,
        "fixLineNum": 202,
        "fixNodeStartChar": 6695,
        "fixNodeLength": 37,
        "sourceBeforeFix": "className.indexOf(\"org.openmrs.\")",
        "sourceAfterFix": "className.lastIndexOf(\"org.openmrs.\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
        "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 78,
        "bugNodeStartChar": 2706,
        "bugNodeLength": 24,
        "fixLineNum": 78,
        "fixNodeStartChar": 2706,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getServletPath()",
        "sourceAfterFix": "request.getPathInfo()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6b7a9eb44a285097eee57a08732ce247ca8e3bc3",
        "fixCommitParentSHA1": "92f2d0d2a65fdbf3c2cb3abefb0a6276822271aa",
        "bugFilePath": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java",
        "fixPatch": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\nindex 45ff9b3..e7ff10c 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\n@@ -50,7 +50,7 @@\n \n \t@Override\n \tpublic <R> R accept(ExpressionVisitor<R> visitor) {\n-\t\treturn visitor.visit(this);\n+\t\treturn visitor.visitTypeLiteral(this);\n \t}\n \n \t@Override\n",
        "projectName": "apache.flink",
        "bugLineNum": 53,
        "bugNodeStartChar": 1666,
        "bugNodeLength": 19,
        "fixLineNum": 53,
        "fixNodeStartChar": 1666,
        "fixNodeLength": 30,
        "sourceBeforeFix": "visitor.visit(this)",
        "sourceAfterFix": "visitor.visitTypeLiteral(this)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "d4a1a1cdac176e1f13c04cbbee22b690c8c7b5fe",
        "fixCommitParentSHA1": "776d1717c32eb66bd541acd630297118f54edc40",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/ManagedServerOperationsFactory.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/ManagedServerOperationsFactory.java b/host-controller/src/main/java/org/jboss/as/host/controller/ManagedServerOperationsFactory.java\nindex 2a4d9c1..23a8e40 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/ManagedServerOperationsFactory.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/ManagedServerOperationsFactory.java\n@@ -437,7 +437,7 @@\n                 final String ref = include.asString();\n                 if (processed.add(ref)) {\n                     final ModelNode includedGroup = groups.get(ref);\n-                    if (group == null) {\n+                    if (includedGroup == null) {\n                         throw MESSAGES.undefinedSocketBindingGroup(ref);\n                     }\n                     mergeBindingGroups(updates, groups, groupName, includedGroup, processed);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 440,
        "bugNodeStartChar": 21436,
        "bugNodeLength": 13,
        "fixLineNum": 440,
        "fixNodeStartChar": 21436,
        "fixNodeLength": 21,
        "sourceBeforeFix": "group == null",
        "sourceAfterFix": "includedGroup == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b",
        "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02",
        "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 64,
        "bugNodeStartChar": 2782,
        "bugNodeLength": 51,
        "fixLineNum": 64,
        "fixNodeStartChar": 2719,
        "fixNodeLength": 51,
        "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()",
        "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "23190bd7878076b4c9518c38d16fd1b4fab969a4",
        "fixCommitParentSHA1": "1bc7c4900c09bc61179124adbfa6b28a24a0c5fd",
        "bugFilePath": "common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java",
        "fixPatch": "diff --git a/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java\nindex 0b3b29e..bc55533 100644\n--- a/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java\n+++ b/common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java\n@@ -218,10 +218,13 @@\n             try {\n                 if (tmpFile != null && tmpFile.isFile() && tmpFile.canRead() &&\n                     !NoexecVolumeDetector.canExecuteExecutable(tmpFile)) {\n+                    // Pass \"io.netty.native.workdir\" as an argument to allow shading tools to see\n+                    // the string. Since this is printed out to users to tell them what to do next,\n+                    // we want the value to be correct even when shading.\n                     logger.info(\"{} exists but cannot be executed even when execute permissions set; \" +\n-                                \"check volume for \\\"noexec\\\" flag; use -Dio.netty.native.workdir=[path] \" +\n+                                \"check volume for \\\"noexec\\\" flag; use -D{}=[path] \" +\n                                 \"to set native working directory separately.\",\n-                                tmpFile.getPath());\n+                                tmpFile.getPath(), \"io.netty.native.workdir\");\n                 }\n             } catch (Throwable t) {\n                 suppressed.add(t);\n",
        "projectName": "netty.netty",
        "bugLineNum": 221,
        "bugNodeStartChar": 8913,
        "bugNodeLength": 322,
        "fixLineNum": 221,
        "fixNodeStartChar": 8913,
        "fixNodeLength": 349,
        "sourceBeforeFix": "logger.info(\"{} exists but cannot be executed even when execute permissions set; \" + \"check volume for \\\"noexec\\\" flag; use -Dio.netty.native.workdir=[path] \" + \"to set native working directory separately.\",tmpFile.getPath())",
        "sourceAfterFix": "logger.info(\"{} exists but cannot be executed even when execute permissions set; \" + \"check volume for \\\"noexec\\\" flag; use -Dio.netty.native.workdir=[path] \" + \"to set native working directory separately.\",tmpFile.getPath(),\"io.netty.native.workdir\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "cde65024a20d660e586494ec6a443f8732fee068",
        "fixCommitParentSHA1": "bbfbbf31c812570f92efc4bff4a51f5c432b28ab",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMNodeTransitions.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMNodeTransitions.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMNodeTransitions.java\nindex 2b2decc..f9ba80c 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMNodeTransitions.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRMNodeTransitions.java\n@@ -200,7 +200,7 @@\n   private RMNodeImpl getRunningNode() {\n     NodeId nodeId = BuilderUtils.newNodeId(\"localhost\", 0);\n     RMNodeImpl node = new RMNodeImpl(nodeId, rmContext,null, 0, 0,\n-        null, null, null);\n+        null, null);\n     node.handle(new RMNodeEvent(node.getNodeID(), RMNodeEventType.STARTED));\n     Assert.assertEquals(NodeState.RUNNING, node.getState());\n     return node;\n@@ -212,7 +212,7 @@\n     status.setHealthReport(\"sick\");\n     status.setIsNodeHealthy(false);\n     node.handle(new RMNodeStatusEvent(node.getNodeID(), status,\n-        new ArrayList<ContainerStatus>(), null, null, null));\n+        new ArrayList<ContainerStatus>(), null, null));\n     Assert.assertEquals(NodeState.UNHEALTHY, node.getState());\n     return node;\n   }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 202,
        "bugNodeStartChar": 7815,
        "bugNodeLength": 70,
        "fixLineNum": 202,
        "fixNodeStartChar": 7815,
        "fixNodeLength": 64,
        "sourceBeforeFix": "new RMNodeImpl(nodeId,rmContext,null,0,0,null,null,null)",
        "sourceAfterFix": "new RMNodeImpl(nodeId,rmContext,null,0,0,null,null)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "13ba17a0c8943487fec8ae9bda7ef1b5db143d4a",
        "fixCommitParentSHA1": "ac35eea6c7109e604af93ab8c741fc6f0bb1f7cb",
        "bugFilePath": "examples/pax-exam/calculator-test/src/test/java/cucumber/examples/java/paxexam/test/CalculatorTest.java",
        "fixPatch": "diff --git a/examples/pax-exam/calculator-test/src/test/java/cucumber/examples/java/paxexam/test/CalculatorTest.java b/examples/pax-exam/calculator-test/src/test/java/cucumber/examples/java/paxexam/test/CalculatorTest.java\nindex 346d11e..d76a41a 100644\n--- a/examples/pax-exam/calculator-test/src/test/java/cucumber/examples/java/paxexam/test/CalculatorTest.java\n+++ b/examples/pax-exam/calculator-test/src/test/java/cucumber/examples/java/paxexam/test/CalculatorTest.java\n@@ -53,7 +53,7 @@\n             mavenBundle(\"info.cukes\", \"pax-exam-calculator-service\"),\n \n             mavenBundle(\"info.cukes\", \"gherkin\"),\n-            mavenBundle(\"info.cukes\", \"cucumber-jvm-deps\", \"1.0.4-SNAPSHOT\"),\n+            mavenBundle(\"info.cukes\", \"cucumber-jvm-deps\"),\n             mavenBundle(\"info.cukes\", \"cucumber-core\"),\n             mavenBundle(\"info.cukes\", \"cucumber-java\"),\n             mavenBundle(\"info.cukes\", \"cucumber-osgi\"),\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 56,
        "bugNodeStartChar": 1789,
        "bugNodeLength": 64,
        "fixLineNum": 56,
        "fixNodeStartChar": 1789,
        "fixNodeLength": 46,
        "sourceBeforeFix": "mavenBundle(\"info.cukes\",\"cucumber-jvm-deps\",\"1.0.4-SNAPSHOT\")",
        "sourceAfterFix": "mavenBundle(\"info.cukes\",\"cucumber-jvm-deps\")"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "df0b1fd128601b25ac352a8e83a4bc35ea992890",
        "fixCommitParentSHA1": "1127e1dcad20d20287fa399e13f5c942fb56c113",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\nindex 2e0f289..2464b59 100644\n--- a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n@@ -258,8 +258,8 @@\n                 booleanSessionProperty(\n                         LEGACY_ORDER_BY,\n                         \"Use legacy rules for column resolution in ORDER BY clause\",\n-                        false,\n-                        featuresConfig.isLegacyOrderBy()));\n+                        featuresConfig.isLegacyOrderBy(),\n+                        false));\n     }\n \n     public List<PropertyMetadata<?>> getSessionProperties()\n",
        "projectName": "facebook.presto",
        "bugLineNum": 258,
        "bugNodeStartChar": 13441,
        "bugNodeLength": 238,
        "fixLineNum": 258,
        "fixNodeStartChar": 13441,
        "fixNodeLength": 238,
        "sourceBeforeFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",false,featuresConfig.isLegacyOrderBy())",
        "sourceAfterFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",featuresConfig.isLegacyOrderBy(),false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
        "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
        "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 286,
        "bugNodeStartChar": 11191,
        "bugNodeLength": 23,
        "fixLineNum": 286,
        "fixNodeStartChar": 11191,
        "fixNodeLength": 21,
        "sourceBeforeFix": "conf.getSearchBaseURL()",
        "sourceAfterFix": "conf.getRestBaseURL()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/DisambiguateProperties.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex 4e7046e..52082f6 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -592,9 +592,9 @@\n         }\n       }\n     }\n-    logger.info(\"Renamed \" + instancesRenamed + \" instances of \"\n+    logger.fine(\"Renamed \" + instancesRenamed + \" instances of \"\n                 + propsRenamed + \" properties.\");\n-    logger.info(\"Skipped renaming \" + instancesSkipped + \" invalidated \"\n+    logger.fine(\"Skipped renaming \" + instancesSkipped + \" invalidated \"\n                 + \"properties, \" + propsSkipped + \" instances of properties \"\n                 + \"that were skipped for specific types and \" + singleTypeProps\n                 + \" properties that were referenced from only one type.\");\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 595,
        "bugNodeStartChar": 20295,
        "bugNodeLength": 109,
        "fixLineNum": 595,
        "fixNodeStartChar": 20295,
        "fixNodeLength": 109,
        "sourceBeforeFix": "logger.info(\"Renamed \" + instancesRenamed + \" instances of \"+ propsRenamed+ \" properties.\")",
        "sourceAfterFix": "logger.fine(\"Renamed \" + instancesRenamed + \" instances of \"+ propsRenamed+ \" properties.\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
        "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\nindex 7d76493..7a04dff 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/json/tests/ObjectMapperFactoryTest.java\n@@ -31,7 +31,7 @@\n         final JsonFactory jsonFactory = new YAMLFactory();\n         final ObjectMapper mapper = factory.build(jsonFactory);\n \n-        assertThat(mapper.getJsonFactory())\n+        assertThat(mapper.getFactory())\n                 .isSameAs(jsonFactory);\n     }\n \n@@ -50,7 +50,7 @@\n     public void defaultsToAllowingComments() throws Exception {\n         final ObjectMapper mapper = factory.build();\n \n-        assertThat(mapper.getJsonFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n+        assertThat(mapper.getFactory().isEnabled(JsonParser.Feature.ALLOW_COMMENTS))\n                 .isTrue();\n     }\n \n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 34,
        "bugNodeStartChar": 1277,
        "bugNodeLength": 23,
        "fixLineNum": 34,
        "fixNodeStartChar": 1277,
        "fixNodeLength": 19,
        "sourceBeforeFix": "mapper.getJsonFactory()",
        "sourceAfterFix": "mapper.getFactory()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "0e0e42c86be86838ba95ce67b855ef263488869d",
        "fixCommitParentSHA1": "35a28295cceca69a2c3d464ae88ddd4a21a583e0",
        "bugFilePath": "ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java",
        "fixPatch": "diff --git a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\nindex d97f266..8ef6eb0 100644\n--- a/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n+++ b/ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java\n@@ -247,7 +247,8 @@\n         Double end = Double.POSITIVE_INFINITY;\n         if (dateFrom != null && !dateFrom.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);\n                 } else {\n                     start = Double.parseDouble(dateFrom);\n@@ -258,7 +259,8 @@\n         }\n         if (dateTo != null && !dateTo.isEmpty()) {\n             try {\n-                if (container.getTimeFormat().equals(TimeFormat.DATE)) {\n+                if (container.getTimeFormat().equals(TimeFormat.DATE) ||\n+                        container.getTimeFormat().equals(TimeFormat.DATETIME)) {\n                     end = DynamicUtilities.getDoubleFromXMLDateString(dateTo);\n                 } else {\n                     end = Double.parseDouble(dateTo);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 261,
        "bugNodeStartChar": 8745,
        "bugNodeLength": 49,
        "fixLineNum": 261,
        "fixNodeStartChar": 8745,
        "fixNodeLength": 130,
        "sourceBeforeFix": "container.getTimeFormat().equals(TimeFormat.DATE)",
        "sourceAfterFix": "container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a6e7fb22578c900a5b806d2a429a05d81a722635",
        "fixCommitParentSHA1": "43b6253401d332add7a1755f23e194ad7548459e",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\nindex e67bda4..e773701 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n@@ -190,7 +190,7 @@\n \r\n \t/** Sets the position where the sprite will be drawn, relative to its current origin.  */\r\n \tpublic void setOriginBasedPosition (float x, float y) {\r\n-\t\tsetPosition(x - this.originX, y - this.originX);\r\n+\t\tsetPosition(x - this.originX, y - this.originY);\r\n \t}\r\n \r\n \t/** Sets the x position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 193,
        "bugNodeStartChar": 7723,
        "bugNodeLength": 12,
        "fixLineNum": 193,
        "fixNodeStartChar": 7531,
        "fixNodeLength": 12,
        "sourceBeforeFix": "this.originX",
        "sourceAfterFix": "this.originY"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "67a60e1cfca7bd24617ba7a1015d2b48219befb1",
        "fixCommitParentSHA1": "184e07a310cf002ede2efd49131fcea97bc3d227",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java b/camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java\nindex 2099317..aa288ec 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/language/TokenizerExpression.java\n@@ -193,7 +193,7 @@\n         if (includeTokens != null) {\n             language.setIncludeTokens(includeTokens);\n         }\n-        if (group != null) {\n+        if (group != null && !\"0\".equals(group)) {\n             language.setGroup(group);\n         }\n         if (skipFirst != null) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 196,
        "bugNodeStartChar": 5667,
        "bugNodeLength": 13,
        "fixLineNum": 196,
        "fixNodeStartChar": 5667,
        "fixNodeLength": 35,
        "sourceBeforeFix": "group != null",
        "sourceAfterFix": "group != null && !\"0\".equals(group)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "c25203e1409ed2a2474fd267259e85e1a67e7942",
        "fixCommitParentSHA1": "8f7f497b55b3223229ab478eab41ede9d63a2691",
        "bugFilePath": "processing/src/main/java/io/druid/data/input/ProtoBufInputRowParser.java",
        "fixPatch": "diff --git a/processing/src/main/java/io/druid/data/input/ProtoBufInputRowParser.java b/processing/src/main/java/io/druid/data/input/ProtoBufInputRowParser.java\nindex 4a449ef..df8bdb5 100644\n--- a/processing/src/main/java/io/druid/data/input/ProtoBufInputRowParser.java\n+++ b/processing/src/main/java/io/druid/data/input/ProtoBufInputRowParser.java\n@@ -69,8 +69,7 @@\n     if (parseSpec == null) {\n       this.parseSpec = new JSONParseSpec(\n           timestampSpec,\n-          new DimensionsSpec(dimensions, dimensionExclusions, spatialDimensions),\n-          JSONParseSpec.JSON\n+          new DimensionsSpec(dimensions, dimensionExclusions, spatialDimensions)\n       );\n     } else {\n       this.parseSpec = parseSpec;\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 70,
        "bugNodeStartChar": 2790,
        "bugNodeLength": 162,
        "fixLineNum": 70,
        "fixNodeStartChar": 2790,
        "fixNodeLength": 132,
        "sourceBeforeFix": "new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions),JSONParseSpec.JSON)",
        "sourceAfterFix": "new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0456dbb2f67c9f98090954d9d70cb02ceb4622d3",
        "fixCommitParentSHA1": "42296477373027abdd09c189e1a6d14a85be4e81",
        "bugFilePath": "src/edu/stanford/nlp/trees/Tree.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/trees/Tree.java b/src/edu/stanford/nlp/trees/Tree.java\nindex d322e7a..280ec3f 100644\n--- a/src/edu/stanford/nlp/trees/Tree.java\n+++ b/src/edu/stanford/nlp/trees/Tree.java\n@@ -868,7 +868,7 @@\n       return;\n     }\n     pw.print(\"(\");\n-    String nodeString = onlyLabelValue ? nodeString() : nodeString();\n+    String nodeString = onlyLabelValue ? value() : nodeString();\n     pw.print(nodeString);\n     // pw.flush();\n     boolean parentIsNull = label() == null || label().value() == null;\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 871,
        "bugNodeStartChar": 28918,
        "bugNodeLength": 12,
        "fixLineNum": 871,
        "fixNodeStartChar": 28918,
        "fixNodeLength": 7,
        "sourceBeforeFix": "nodeString()",
        "sourceAfterFix": "value()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "62daee8bf2d60c90827d2adc864662c9db6c4713",
        "fixCommitParentSHA1": "17192c873c62e527859f80085a07e89d5b098dd7",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\nindex d4f45af..d56bb5d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\n@@ -119,10 +119,10 @@\n                                     ManagedAtmosphereHandler h = new ManagedAtmosphereHandler();\n                                     h.configure(config, config.framework().newClassInstance(ap.target().getClass()));\n                                     config.framework().addAtmosphereHandler(path, h,\n-                                            config.getBroadcasterFactory().lookup(a.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(a.broadcaster(), path, true), w.interceptors);\n                                 } else {\n                                     config.framework().addAtmosphereHandler(path, w.atmosphereHandler,\n-                                            config.getBroadcasterFactory().lookup(a.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(a.broadcaster(), path, true), w.interceptors);\n                                 }\n                                 request.setAttribute(FrameworkConfig.NEW_MAPPING, \"true\");\n                             } catch (Throwable e) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 125,
        "bugNodeStartChar": 4902,
        "bugNodeLength": 60,
        "fixLineNum": 125,
        "fixNodeStartChar": 4902,
        "fixNodeLength": 66,
        "sourceBeforeFix": "config.getBroadcasterFactory().lookup(a.broadcaster(),true)",
        "sourceAfterFix": "config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a13c4373a5e57d322b143516b493e84f14909fec",
        "fixCommitParentSHA1": "8a9bf436f692efc084f4cf43b3531cef81324696",
        "bugFilePath": "test/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotatorTest.java",
        "fixPatch": "diff --git a/test/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotatorTest.java b/test/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotatorTest.java\nindex 3b0848a..b11f7ab 100644\n--- a/test/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotatorTest.java\n+++ b/test/src/edu/stanford/nlp/pipeline/WordsToSentencesAnnotatorTest.java\n@@ -92,7 +92,7 @@\n     // make sure that there are the correct # of tokens\n     // (does NOT contain NL tokens)\n     List<CoreLabel> tokens = document1.get(CoreAnnotations.TokensAnnotation.class);\n-    assertEquals(15, tokens.size());\n+    assertEquals(13, tokens.size());\n   }\n \n   @Test\n@@ -128,7 +128,7 @@\n \n     // make sure that there are the correct # of tokens (does contain NL tokens)\n     List<CoreLabel> tokens = document1.get(CoreAnnotations.TokensAnnotation.class);\n-    assertEquals(12, tokens.size());\n+    assertEquals(9, tokens.size());\n   }\n \n   @Test\n@@ -149,7 +149,7 @@\n \n     // make sure that there are the correct # of tokens (does contain NL tokens)\n     List<CoreLabel> tokens = document1.get(CoreAnnotations.TokensAnnotation.class);\n-    assertEquals(12, tokens.size());\n+    assertEquals(9, tokens.size());\n \n     List<CoreLabel> sentenceTwoTokens = sentences.get(1).get(CoreAnnotations.TokensAnnotation.class);\n     String sentenceTwo = SentenceUtils.listToString(sentenceTwoTokens);\n@@ -173,7 +173,7 @@\n \n     // make sure that there are the correct # of tokens (count does contain NL tokens)\n     List<CoreLabel> tokens = document1.get(CoreAnnotations.TokensAnnotation.class);\n-    assertEquals(12, tokens.size());\n+    assertEquals(9, tokens.size());\n \n     for (int i = 0; i < Math.min(sents.length, sentences.size()); i++) {\n       CoreMap sentence = sentences.get(i);\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 131,
        "bugNodeStartChar": 5003,
        "bugNodeLength": 31,
        "fixLineNum": 131,
        "fixNodeStartChar": 5003,
        "fixNodeLength": 30,
        "sourceBeforeFix": "assertEquals(12,tokens.size())",
        "sourceAfterFix": "assertEquals(9,tokens.size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8616612734924c0a8a9781aed94669c866b12981",
        "fixCommitParentSHA1": "0422268621872d51819705e46c4a75165fc65c10",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/remote/view/LocalViewRemoteInvocationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/remote/view/LocalViewRemoteInvocationTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/remote/view/LocalViewRemoteInvocationTestCase.java\nindex 11f7025..1254def 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/remote/view/LocalViewRemoteInvocationTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ejb/remote/view/LocalViewRemoteInvocationTestCase.java\n@@ -145,7 +145,7 @@\n         try {\n             final String echo = localEcho.echo(message);\n             Assert.fail(\"Remote invocation on a local view \" + LocalEcho.class.getName() + \" was expected to fail\");\n-        } catch (EJBException nsee) {\n+        } catch (IllegalStateException nsee) {\n             // expected\n             logger.trace(\"Got the expected exception on invoking on a local view, remotely\", nsee);\n         }\n@@ -165,7 +165,7 @@\n         try {\n             final String echo = localEcho.echo(message);\n             Assert.fail(\"Remote invocation on a local view \" + LocalEcho.class.getName() + \" was expected to fail\");\n-        } catch (EJBException nsee) {\n+        } catch (IllegalStateException nsee) {\n             // expected\n             logger.trace(\"Got the expected exception on invoking on a local view, remotely\", nsee);\n         }\n@@ -185,7 +185,7 @@\n         try {\n             final String echo = localEcho.echo(message);\n             Assert.fail(\"Remote invocation on a local view \" + LocalEcho.class.getName() + \" was expected to fail\");\n-        } catch (EJBException nsee) {\n+        } catch (IllegalStateException nsee) {\n             // expected\n             logger.trace(\"Got the expected exception on invoking on a local view, remotely\", nsee);\n         }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 188,
        "bugNodeStartChar": 8256,
        "bugNodeLength": 17,
        "fixLineNum": 188,
        "fixNodeStartChar": 8256,
        "fixNodeLength": 26,
        "sourceBeforeFix": "EJBException nsee",
        "sourceAfterFix": "IllegalStateException nsee"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2230a91829f39b72973e6fecf275d9c664911ca0",
        "fixCommitParentSHA1": "0456649282c4e3f298a5c75af2f979b8001e977a",
        "bugFilePath": "src/jvm/clojure/lang/Compiler.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex bc19538..1eaa9e8 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -5774,7 +5774,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -5947,7 +5947,7 @@\n \tcatch(Throwable e)\n \t\t{\n \t\tif(!(e instanceof CompilerException))\n-\t\t\tthrow new CompilerException((String) SOURCE.deref(), (Integer) LINE.deref(), e);\n+\t\t\tthrow new CompilerException((String) SOURCE_PATH.deref(), (Integer) LINE.deref(), e);\n \t\telse\n \t\t\tthrow (CompilerException) e;\n \t\t}\n@@ -6434,7 +6434,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n@@ -6653,7 +6653,7 @@\n \t\t}\n \tcatch(LispReader.ReaderException e)\n \t\t{\n-\t\tthrow new CompilerException(sourceName, e.line, e.getCause());\n+\t\tthrow new CompilerException(sourcePath, e.line, e.getCause());\n \t\t}\n \tfinally\n \t\t{\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 6437,
        "bugNodeStartChar": 190666,
        "bugNodeLength": 55,
        "fixLineNum": 6437,
        "fixNodeStartChar": 190666,
        "fixNodeLength": 55,
        "sourceBeforeFix": "new CompilerException(sourceName,e.line,e.getCause())",
        "sourceAfterFix": "new CompilerException(sourcePath,e.line,e.getCause())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 90,
        "bugNodeStartChar": 4284,
        "bugNodeLength": 30,
        "fixLineNum": 90,
        "fixNodeStartChar": 4195,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(2)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "75edb2e5875ad18cfae52c84540b8421f11e5e7a",
        "fixCommitParentSHA1": "648cd449814a0fd28f716b7ae6ee19af153dc119",
        "bugFilePath": "jsonschema2pojo-core/src/main/java/org/jsonschema2pojo/util/TypeUtil.java",
        "fixPatch": "diff --git a/jsonschema2pojo-core/src/main/java/org/jsonschema2pojo/util/TypeUtil.java b/jsonschema2pojo-core/src/main/java/org/jsonschema2pojo/util/TypeUtil.java\nindex 57f88c8..8ba69ec 100644\n--- a/jsonschema2pojo-core/src/main/java/org/jsonschema2pojo/util/TypeUtil.java\n+++ b/jsonschema2pojo-core/src/main/java/org/jsonschema2pojo/util/TypeUtil.java\n@@ -41,7 +41,7 @@\n \n             return buildClass(_package, c, 0);\n         } catch (ParseException e) {\n-            throw new GenerationException(e);\n+            throw new GenerationException(\"Couldn't parse type: \" + typeDefinition, e);\n         }\n     }\n \n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 44,
        "bugNodeStartChar": 1548,
        "bugNodeLength": 26,
        "fixLineNum": 44,
        "fixNodeStartChar": 1548,
        "fixNodeLength": 68,
        "sourceBeforeFix": "new GenerationException(e)",
        "sourceAfterFix": "new GenerationException(\"Couldn't parse type: \" + typeDefinition,e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8b75e9ed91c0a6c100917d24cdb29e8a4b14390e",
        "fixCommitParentSHA1": "837bb9ece796aee9bc1f82ec45414ea52ac33f80",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\nindex ad91617..d0e3f90 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\n@@ -190,11 +190,11 @@\n       // Prefetch online tables/namespaces\n       for (TableName table: QuotaCache.this.rsServices.getOnlineTables()) {\n         if (table.isSystemTable()) continue;\n-        if (!QuotaCache.this.tableQuotaCache.contains(table)) {\n+        if (!QuotaCache.this.tableQuotaCache.containsKey(table)) {\n           QuotaCache.this.tableQuotaCache.putIfAbsent(table, new QuotaState());\n         }\n         String ns = table.getNamespaceAsString();\n-        if (!QuotaCache.this.namespaceQuotaCache.contains(ns)) {\n+        if (!QuotaCache.this.namespaceQuotaCache.containsKey(ns)) {\n           QuotaCache.this.namespaceQuotaCache.putIfAbsent(ns, new QuotaState());\n         }\n       }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 193,
        "bugNodeStartChar": 6900,
        "bugNodeLength": 47,
        "fixLineNum": 193,
        "fixNodeStartChar": 6900,
        "fixNodeLength": 50,
        "sourceBeforeFix": "QuotaCache.this.tableQuotaCache.contains(table)",
        "sourceAfterFix": "QuotaCache.this.tableQuotaCache.containsKey(table)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\nindex fcc2ed7..2a2030a 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n@@ -72,10 +72,10 @@\n         if (channel == null) {\n             initializeChannel();\n             if (endpoint.isSynchronous()) {\n-                LOG.info(\"Getting synchronous method stub from channel\");\n+                LOG.debug(\"Getting synchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcBlockingStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             } else {\n-                LOG.info(\"Getting asynchronous method stub from channel\");\n+                LOG.debug(\"Getting asynchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcAsyncStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             }\n         }\n@@ -84,7 +84,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (channel != null) {\n-            LOG.trace(\"Terminating channel to the remote gRPC server\");\n+            LOG.debug(\"Terminating channel to the remote gRPC server\");\n             channel.shutdown().shutdownNow();\n             channel = null;\n             grpcStub = null;\n",
        "projectName": "apache.camel",
        "bugLineNum": 75,
        "bugNodeStartChar": 2858,
        "bugNodeLength": 56,
        "fixLineNum": 75,
        "fixNodeStartChar": 2858,
        "fixNodeLength": 57,
        "sourceBeforeFix": "LOG.info(\"Getting synchronous method stub from channel\")",
        "sourceAfterFix": "LOG.debug(\"Getting synchronous method stub from channel\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "221156e25c6a8368fa7cd26c7b46660a3c71dda4",
        "fixCommitParentSHA1": "1fb466f75d3fdd3d1404656e706cf72b0a66eb64",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex ca316b7..a68ca21 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -548,7 +548,7 @@\n         long nanos = unit.toNanos(timeout);\n \n         for (;;) {\n-            if (activeCount == maxActive) {\n+            if (activeCount >= maxActive) {\n                 long startNano = System.nanoTime();\n                 notMaxActive.awaitNanos(nanos);\n                 nanos -= (System.nanoTime() - startNano);\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 551,
        "bugNodeStartChar": 19398,
        "bugNodeLength": 24,
        "fixLineNum": 551,
        "fixNodeStartChar": 19398,
        "fixNodeLength": 24,
        "sourceBeforeFix": "activeCount == maxActive",
        "sourceAfterFix": "activeCount >= maxActive"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "823bfb98fed1336c299c463e74bb8c9b63a956c7",
        "fixCommitParentSHA1": "ecda7d7612f05630c2fc0882306084cf04e55a49",
        "bugFilePath": "rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java",
        "fixPatch": "diff --git a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\nindex 37d8aec..e87118c 100644\n--- a/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\n+++ b/rpc/src/main/java/com/navercorp/pinpoint/rpc/packet/stream/StreamPongPacket.java\n@@ -53,7 +53,7 @@\n     public static StreamPongPacket readBuffer(short packetType, ChannelBuffer buffer) {\r\n         assert packetType == PACKET_TYPE;\r\n \r\n-        if (buffer.readableBytes() < 4) {\r\n+        if (buffer.readableBytes() < 8) {\r\n             buffer.resetReaderIndex();\r\n             return null;\r\n         }\r\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 56,
        "bugNodeStartChar": 1696,
        "bugNodeLength": 26,
        "fixLineNum": 56,
        "fixNodeStartChar": 1641,
        "fixNodeLength": 26,
        "sourceBeforeFix": "buffer.readableBytes() < 4",
        "sourceAfterFix": "buffer.readableBytes() < 8"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/Compiler.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex d16c12e..3f38020 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -757,7 +757,7 @@\n   }\n \n   private void externExports() {\n-    logger.info(\"Creating extern file for exports\");\n+    logger.fine(\"Creating extern file for exports\");\n     startPass(\"externExports\");\n \n     ExternExportsPass pass = new ExternExportsPass(this);\n@@ -795,7 +795,7 @@\n    * Removes try/catch/finally statements for easier debugging.\n    */\n   void removeTryCatchFinally() {\n-    logger.info(\"Remove try/catch/finally\");\n+    logger.fine(\"Remove try/catch/finally\");\n     startPass(\"removeTryCatchFinally\");\n     RemoveTryCatch r = new RemoveTryCatch(this);\n     process(r);\n@@ -808,7 +808,7 @@\n    */\n   void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes,\n       Set<String> stripTypePrefixes, Set<String> stripNamePrefixes) {\n-    logger.info(\"Strip code\");\n+    logger.fine(\"Strip code\");\n     startPass(\"stripCode\");\n     StripCode r = new StripCode(this, stripTypes, stripNameSuffixes,\n         stripTypePrefixes, stripNamePrefixes);\n@@ -1784,7 +1784,7 @@\n \n   /** Control Flow Analysis. */\n   ControlFlowGraph<Node> computeCFG() {\n-    logger.info(\"Computing Control Flow Graph\");\n+    logger.fine(\"Computing Control Flow Graph\");\n     Tracer tracer = newTracer(\"computeCFG\");\n     ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);\n     process(cfa);\n@@ -1793,7 +1793,7 @@\n   }\n \n   public void normalize() {\n-    logger.info(\"Normalizing\");\n+    logger.fine(\"Normalizing\");\n     startPass(\"normalize\");\n     process(new Normalize(this, false));\n     endPass();\n@@ -1806,7 +1806,7 @@\n   }\n \n   void recordFunctionInformation() {\n-    logger.info(\"Recording function information\");\n+    logger.fine(\"Recording function information\");\n     startPass(\"recordFunctionInformation\");\n     RecordFunctionInformation recordFunctionInfoPass =\n         new RecordFunctionInformation(\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 811,
        "bugNodeStartChar": 24912,
        "bugNodeLength": 25,
        "fixLineNum": 811,
        "fixNodeStartChar": 24912,
        "fixNodeLength": 25,
        "sourceBeforeFix": "logger.info(\"Strip code\")",
        "sourceAfterFix": "logger.fine(\"Strip code\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "100b094aeabeda76bb5d69e3e279727147e7443e",
        "fixCommitParentSHA1": "6ef74d139b7be8d392d9375ff1c8a55ef0e44f50",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\nindex 91eefc9..8be999c 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\n@@ -1293,7 +1293,7 @@\n         for (int i = 0; i < size; i++) {\n             map.put(i, i);\n         }\n-        instance2.getLifecycleService().terminate();\n+        instance2.getLifecycleService().shutdown();\n         mapStore.awaitStores();\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1296,
        "bugNodeStartChar": 52067,
        "bugNodeLength": 43,
        "fixLineNum": 1296,
        "fixNodeStartChar": 52067,
        "fixNodeLength": 42,
        "sourceBeforeFix": "instance2.getLifecycleService().terminate()",
        "sourceAfterFix": "instance2.getLifecycleService().shutdown()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "71ca4705df961c60993178197646aee30d3b6311",
        "fixCommitParentSHA1": "37cec23b0d30c8d15f8583083d4f3f20fc77aa2d",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java b/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\nindex 89cb7f4..61be69c 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\n@@ -62,9 +62,9 @@\n         return getNode(random.nextInt(cluster.size()));\n     }\n \n-    public void terminateRandomNode(){\n+    public void shutdownRandomNode(){\n         HazelcastInstance node = getRandomNode();\n-        node.getLifecycleService().terminate();\n+        node.getLifecycleService().shutdown();\n         cluster.remove(node);\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 67,
        "bugNodeStartChar": 1916,
        "bugNodeLength": 38,
        "fixLineNum": 67,
        "fixNodeStartChar": 1916,
        "fixNodeLength": 37,
        "sourceBeforeFix": "node.getLifecycleService().terminate()",
        "sourceAfterFix": "node.getLifecycleService().shutdown()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "c4b0fd69f64869db0c26e9389e4d511c6ce53d1d",
        "fixCommitParentSHA1": "d168244be355ba605e87b05489d5cf5fcac5fa72",
        "bugFilePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/Version.java",
        "fixPatch": "diff --git a/enterprise/kernel/src/main/java/org/neo4j/kernel/Version.java b/enterprise/kernel/src/main/java/org/neo4j/kernel/Version.java\nindex a3bbc13..a330cfe 100644\n--- a/enterprise/kernel/src/main/java/org/neo4j/kernel/Version.java\n+++ b/enterprise/kernel/src/main/java/org/neo4j/kernel/Version.java\n@@ -62,7 +62,7 @@\n      */\n     public String getVersion()\n     {\n-        if ( version == null )\n+        if ( version == null || version.equals( \"\" ) )\n         {\n             return \"<unknown>\";\n         }\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 65,
        "bugNodeStartChar": 1977,
        "bugNodeLength": 15,
        "fixLineNum": 65,
        "fixNodeStartChar": 1977,
        "fixNodeLength": 39,
        "sourceBeforeFix": "version == null",
        "sourceAfterFix": "version == null || version.equals(\"\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLRouteExampleTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLRouteExampleTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLRouteExampleTest.java\nindex 251cccc..f364b12 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLRouteExampleTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLRouteExampleTest.java\n@@ -162,7 +162,7 @@\n                 websocketComponent.setSslContextParameters(defineSSLContextParameters());\n                 websocketComponent.setPort(port);\n                 websocketComponent.setMinThreads(1);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n \n                 from(\"websocket://test\")\n                         .log(\">>> Message received from WebSocket Client : ${body}\")\n",
        "projectName": "apache.camel",
        "bugLineNum": 165,
        "bugNodeStartChar": 6522,
        "bugNodeLength": 36,
        "fixLineNum": 165,
        "fixNodeStartChar": 6522,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 131,
        "bugNodeStartChar": 5618,
        "bugNodeLength": 10,
        "fixLineNum": 131,
        "fixNodeStartChar": 5618,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15806",
        "sourceAfterFix": "id=10806"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "0523b68c26c5ef2b715966cb6d28d18a73d61a9f",
        "fixCommitParentSHA1": "995a33a645b7da18a92854e51c0c2b65b24d1977",
        "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java",
        "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\nindex dcd490f..0a0f631 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/tsdb/MemoryTableMeta.java\n@@ -74,7 +74,11 @@\n             try {\n                 // druid\u6682\u65f6flush privileges\u8bed\u6cd5\u89e3\u6790\u6709\u95ee\u9898\n                 if (!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"flush\")\n-                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"grant\")) {\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"grant\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"create user\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"drop user\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"create database\")\n+                    && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl), \"drop database\")) {\n                     repository.console(ddl);\n                 }\n             } catch (Throwable e) {\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 76,
        "bugNodeStartChar": 2980,
        "bugNodeLength": 154,
        "fixLineNum": 76,
        "fixNodeStartChar": 2980,
        "fixNodeLength": 538,
        "sourceBeforeFix": "!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"flush\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"grant\")",
        "sourceAfterFix": "!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"flush\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"grant\") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"create user\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"drop user\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"create database\")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),\"drop database\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 186,
        "bugNodeStartChar": 7169,
        "bugNodeLength": 299,
        "fixLineNum": 186,
        "fixNodeStartChar": 6984,
        "fixNodeLength": 293,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "4f002d28bb8061ff5eb5ce3b1f41c2e7c1ae69fc",
        "fixCommitParentSHA1": "d53b36c4a8781aaa4b7c5e1876b6d2253ece7d2c",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/MapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/MapService.java b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\nindex 2fde1d3..fa78d49 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n@@ -874,9 +874,9 @@\n                 long total = Runtime.getRuntime().totalMemory();\n                 long used = (total - Runtime.getRuntime().freeMemory());\n                 if (maxSizePolicy == MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE) {\n-                    return maxSize > (used / 1024 / 1024);\n+                    return maxSize < (used / 1024 / 1024);\n                 } else {\n-                    return maxSize > (used / total);\n+                    return maxSize < (used / total);\n                 }\n             }\n             return false;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 879,
        "bugNodeStartChar": 41286,
        "bugNodeLength": 24,
        "fixLineNum": 879,
        "fixNodeStartChar": 41286,
        "fixNodeLength": 24,
        "sourceBeforeFix": "maxSize > (used / total)",
        "sourceAfterFix": "maxSize < (used / total)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8b9791f8b4b1154d6a053de901a5efd2105409e5",
        "fixCommitParentSHA1": "411f51f27ccb6f2849b5bee633d86fbdd285c6e8",
        "bugFilePath": "components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java",
        "fixPatch": "diff --git a/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java b/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java\nindex 1a068c3..9e3b39d 100644\n--- a/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java\n+++ b/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaConfiguration.java\n@@ -120,7 +120,7 @@\n     private String keySerializerClass;\n \n     @UriParam(label = \"producer\", defaultValue = \"1\")\n-    private Integer requestRequiredAcks = 1;\n+    private String requestRequiredAcks = \"1\";\n     //buffer.memory\n     @UriParam(label = \"producer\", defaultValue = \"33554432\")\n     private Integer bufferMemorySize = 33554432;\n@@ -867,7 +867,7 @@\n         this.bufferMemorySize = bufferMemorySize;\n     }\n \n-    public Integer getRequestRequiredAcks() {\n+    public String getRequestRequiredAcks() {\n         return requestRequiredAcks;\n     }\n \n@@ -884,7 +884,7 @@\n      * acks=all This means the leader will wait for the full set of in-sync replicas to acknowledge the record. This guarantees that the\n      * record will not be lost as long as at least one in-sync replica remains alive. This is the strongest available guarantee.\n      */\n-    public void setRequestRequiredAcks(Integer requestRequiredAcks) {\n+    public void setRequestRequiredAcks(String requestRequiredAcks) {\n         this.requestRequiredAcks = requestRequiredAcks;\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 870,
        "bugNodeStartChar": 36002,
        "bugNodeLength": 83,
        "fixLineNum": 870,
        "fixNodeStartChar": 36002,
        "fixNodeLength": 82,
        "sourceBeforeFix": "public Integer getRequestRequiredAcks(){   return requestRequiredAcks; } ",
        "sourceAfterFix": "public String getRequestRequiredAcks(){   return requestRequiredAcks; } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ebdfcb47a030730233cf0984aadae155ec138ff3",
        "fixCommitParentSHA1": "b2611e7376fa0047a88b9925329bf375cf5afbaa",
        "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java",
        "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\nindex b52baad..8eac209 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n@@ -48,7 +48,7 @@\n         /*\n          * Otherwise, it's those pesky users.\n          */\n-        LOGGER.debug(\"Unable to process JSON\", exception);\n+        LOGGER.warn(\"Unable to process JSON\", exception);\n         final ErrorMessage errorMessage = new ErrorMessage(Response.Status.BAD_REQUEST.getStatusCode(),\n                 \"Unable to process JSON\", showDetails ? message : null);\n         return Response.status(Response.Status.BAD_REQUEST)\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 51,
        "bugNodeStartChar": 1730,
        "bugNodeLength": 49,
        "fixLineNum": 51,
        "fixNodeStartChar": 1730,
        "fixNodeLength": 48,
        "sourceBeforeFix": "LOGGER.debug(\"Unable to process JSON\",exception)",
        "sourceAfterFix": "LOGGER.warn(\"Unable to process JSON\",exception)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "9a861785b36e0b1132737bd8fa1f7caac5a41c87",
        "fixCommitParentSHA1": "99598f3509b3d4d366844b4e94f17b09b27942de",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapStatsTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapStatsTest.java b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapStatsTest.java\nindex 0c9c6a2..d59f9bc 100644\n--- a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapStatsTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapStatsTest.java\n@@ -175,7 +175,7 @@\n             @Override\n             public void run()\n                     throws Exception {\n-                assertTrue(stats.getLastAccessTime() > lastAccessTime);\n+                assertTrue(stats.getLastAccessTime() >= lastAccessTime);\n             }\n         });\n     }\n@@ -194,7 +194,7 @@\n         Thread.sleep(5);\n         replicatedMap.put(key, \"value2\");\n         long lastUpdateTime2 = replicatedMap.getReplicatedMapStats().getLastUpdateTime();\n-        assertTrue(lastUpdateTime2 > lastUpdateTime);\n+        assertTrue(lastUpdateTime2 >= lastUpdateTime);\n     }\n \n     @Test\n@@ -222,7 +222,7 @@\n             @Override\n             public void run()\n                     throws Exception {\n-                assertTrue(stats.getLastUpdateTime() > lastUpdateTime);\n+                assertTrue(stats.getLastUpdateTime() >= lastUpdateTime);\n             }\n         });\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 225,
        "bugNodeStartChar": 8110,
        "bugNodeLength": 42,
        "fixLineNum": 225,
        "fixNodeStartChar": 8110,
        "fixNodeLength": 43,
        "sourceBeforeFix": "stats.getLastUpdateTime() > lastUpdateTime",
        "sourceAfterFix": "stats.getLastUpdateTime() >= lastUpdateTime"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 89,
        "bugNodeStartChar": 3709,
        "bugNodeLength": 10,
        "fixLineNum": 89,
        "fixNodeStartChar": 3709,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15802",
        "sourceAfterFix": "id=10802"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8642e3d582552d28c68715644f92af66d16038c9",
        "fixCommitParentSHA1": "27e0191c930194810dd578568c83de756da5a04c",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\nindex 486c413..2c8c9b0 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java\n@@ -90,67 +90,67 @@\n     @Override\n     public boolean getBoolean(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeBoolean(BlockBuilder blockBuilder, boolean value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public long getLong(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeLong(BlockBuilder blockBuilder, long value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public double getDouble(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeDouble(BlockBuilder blockBuilder, double value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Slice getSlice(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public Object getObject(Block block, int position)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n     public void writeObject(BlockBuilder blockBuilder, Object value)\n     {\n-        throw new UnsupportedOperationException();\n+        throw new UnsupportedOperationException(getClass().getName());\n     }\n \n     @Override\n",
        "projectName": "facebook.presto",
        "bugLineNum": 111,
        "bugNodeStartChar": 2825,
        "bugNodeLength": 35,
        "fixLineNum": 111,
        "fixNodeStartChar": 2825,
        "fixNodeLength": 55,
        "sourceBeforeFix": "new UnsupportedOperationException()",
        "sourceAfterFix": "new UnsupportedOperationException(getClass().getName())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c81c6ad44ba6bd2ff42c9fe7d336b863f3574405",
        "fixCommitParentSHA1": "b08ec028c6ecca511b734e2f0fc8a62edc1d2bfb",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java b/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\nindex da4e2e2..346d003 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/memory/MemoryPoolInfo.java\n@@ -43,7 +43,7 @@\n         this.reservedBytes = reservedBytes;\n         this.reservedRevocableBytes = reservedRevocableBytes;\n         this.queryMemoryReservations = unmodifiableMap(new HashMap<>(queryMemoryReservations));\n-        this.queryMemoryRevocableReservations = unmodifiableMap(new HashMap<>(queryMemoryReservations));\n+        this.queryMemoryRevocableReservations = unmodifiableMap(new HashMap<>(queryMemoryRevocableReservations));\n     }\n \n     @JsonProperty\n",
        "projectName": "facebook.presto",
        "bugLineNum": 46,
        "bugNodeStartChar": 1940,
        "bugNodeLength": 38,
        "fixLineNum": 46,
        "fixNodeStartChar": 1940,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new HashMap<>(queryMemoryReservations)",
        "sourceAfterFix": "new HashMap<>(queryMemoryRevocableReservations)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "783ce801bf1c82eb4cf2e55e46b15d9ef85f4349",
        "fixCommitParentSHA1": "037b4cc4151aedc6e5fa2242e495e80b0580a735",
        "bugFilePath": "src/com/activeandroid/Model.java",
        "fixPatch": "diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java\nindex 07ad46c..e705680 100644\n--- a/src/com/activeandroid/Model.java\n+++ b/src/com/activeandroid/Model.java\n@@ -164,7 +164,7 @@\n \t\tnew Delete().from(type).where(\"Id=?\", id).execute();\n \t}\n \n-\tpublic static <T extends Model> T load(Class<? extends Model> type, long id) {\n+\tpublic static <T extends Model> T load(Class<T> type, long id) {\n \t\treturn new Select().from(type).where(\"Id=?\", id).executeSingle();\n \t}\n \n@@ -269,7 +269,7 @@\n \t// PROTECTED METHODS\n \t//////////////////////////////////////////////////////////////////////////////////////\n \n-\tprotected final <E extends Model> List<E> getMany(Class<? extends Model> type, String foreignKey) {\n+\tprotected final <T extends Model> List<T> getMany(Class<T> type, String foreignKey) {\n \t\treturn new Select().from(type).where(Cache.getTableName(type) + \".\" + foreignKey + \"=?\", getId()).execute();\n \t}\n \n",
        "projectName": "pardom.ActiveAndroid",
        "bugLineNum": 272,
        "bugNodeStartChar": 9155,
        "bugNodeLength": 15,
        "fixLineNum": 272,
        "fixNodeStartChar": 9155,
        "fixNodeLength": 15,
        "sourceBeforeFix": "E extends Model",
        "sourceAfterFix": "T extends Model"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f9e60b9fa8dfcbf5dc37b2a88922f57cb292c7dd",
        "fixCommitParentSHA1": "6f75025c1ebd723a40026a6266b5c39b5ed4408b",
        "bugFilePath": "webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java",
        "fixPatch": "diff --git a/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java b/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\nindex 50468ca..9060416 100644\n--- a/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\n+++ b/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\n@@ -194,7 +194,7 @@\n         Host undertowHost = getUndertowHost(hostInfo);\n         if (undertowHost != null && !undertowHost.getServer().getListeners().isEmpty()) {\n             if (!securePort) {\n-                return undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort();\n+                return undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort();\n             } else {\n                 for(ListenerService<?> listener : undertowHost.getServer().getListeners()) {\n                     if (listener.isSecure()) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 197,
        "bugNodeStartChar": 7642,
        "bugNodeLength": 80,
        "fixLineNum": 197,
        "fixNodeStartChar": 7642,
        "fixNodeLength": 88,
        "sourceBeforeFix": "undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()",
        "sourceAfterFix": "undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "41ff1f19d2188256f4c38928e7a5dd837c5d2edd",
        "fixCommitParentSHA1": "34bea749dd6061ff6e04e8761edd8074f19e3725",
        "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java",
        "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\nindex dbcd0a2..f1e699e 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/buffer/FixedBuffer.java\n@@ -300,7 +300,7 @@\n     @Deprecated\n     @Override\n     public void put(final byte[] v) {\n-        put(v);\n+        putBytes(v);\n     }\n \n     @Override\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 303,
        "bugNodeStartChar": 7054,
        "bugNodeLength": 6,
        "fixLineNum": 303,
        "fixNodeStartChar": 7054,
        "fixNodeLength": 11,
        "sourceBeforeFix": "put(v)",
        "sourceAfterFix": "putBytes(v)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "22735f4e1c7de3c10301d5c8d5ae37980fd5bd5e",
        "fixCommitParentSHA1": "e7f0c29148a090239ca5cdf431508728edb54882",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\nindex a442ad1..d211c01 100644\n--- a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n@@ -53,7 +53,7 @@\n                 {11, 6.5f},\n                 {12, 5.5f},\n                 {13, 3.5f},\n-                {14, 3.0f},\n+                {14, 3.5f},\n                 {15, 2.5f},\n                 {16, 2.0f},\n         });\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 56,
        "bugNodeStartChar": 2041,
        "bugNodeLength": 10,
        "fixLineNum": 56,
        "fixNodeStartChar": 2041,
        "fixNodeLength": 10,
        "sourceBeforeFix": "{14,3.0f}",
        "sourceAfterFix": "{14,3.5f}"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6bae902bd35ed4f57e7a5d612b7ad9b72f4559bc",
        "fixCommitParentSHA1": "e4cf805a6a27301672660756202e8dedee1e012b",
        "bugFilePath": "test/com/google/javascript/rhino/NodeTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/rhino/NodeTest.java b/test/com/google/javascript/rhino/NodeTest.java\nindex 5b5ad2b..6ad4d06 100644\n--- a/test/com/google/javascript/rhino/NodeTest.java\n+++ b/test/com/google/javascript/rhino/NodeTest.java\n@@ -107,13 +107,13 @@\n \n   public void testCheckTreeEqualsBooleanSame() {\n     Node node1 = new Node(1);\n-    assertEquals(true, node1.checkTreeEqualsSilent(node1));\n+    assertEquals(true, node1.isEquivalentTo(node1));\n   }\n \n   public void testCheckTreeEqualsBooleanDifferent() {\n     Node node1 = new Node(1);\n     Node node2 = new Node(2);\n-    assertEquals(false, node1.checkTreeEqualsSilent(node2));\n+    assertEquals(false, node1.isEquivalentTo(node2));\n   }\n \n   public void testCheckTreeEqualsImplDifferentIncProp() {\n@@ -130,7 +130,7 @@\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsSameNull() {\n@@ -138,7 +138,7 @@\n     JSTypeRegistry registry = new JSTypeRegistry(testErrorReporter);\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferent() {\n@@ -148,7 +148,7 @@\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.STRING_TYPE));\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferentNull() {\n@@ -157,7 +157,7 @@\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testVarArgs1() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 133,
        "bugNodeStartChar": 4825,
        "bugNodeLength": 43,
        "fixLineNum": 133,
        "fixNodeStartChar": 4825,
        "fixNodeLength": 32,
        "sourceBeforeFix": "node1.checkTreeTypeAwareEqualsSilent(node2)",
        "sourceAfterFix": "node1.isEquivalentToTyped(node2)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "da81d5ef25e71ae77bb98e0184aed2cb125fc1a6",
        "fixCommitParentSHA1": "714c943e03485fdaaa2c816f306dd04cc29e8c2e",
        "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
        "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 91,
        "bugNodeStartChar": 3569,
        "bugNodeLength": 68,
        "fixLineNum": 91,
        "fixNodeStartChar": 3569,
        "fixNodeLength": 37,
        "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
        "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "67ec1a78b8063260b668adf0afd7996326b3ea03",
        "fixCommitParentSHA1": "7640652edcb3c4966223e0c057c88c6676aaefef",
        "bugFilePath": "src/api/org/openmrs/api/impl/UserServiceImpl.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/api/impl/UserServiceImpl.java b/src/api/org/openmrs/api/impl/UserServiceImpl.java\nindex 8914b4c..9118305 100644\n--- a/src/api/org/openmrs/api/impl/UserServiceImpl.java\n+++ b/src/api/org/openmrs/api/impl/UserServiceImpl.java\n@@ -98,24 +98,30 @@\n \t}\r\n \t\r\n \t/**\r\n-\t * Save changes to user\r\n-\t * @param user\r\n+\t * Save changes to given <code>user</code> to the database.\r\n+\t * \r\n+\t * If the user.systemId is blank or null, it will be filled in automatically\r\n+\t * by the current systemId algorithm \r\n+\t * \r\n+\t * @param user the OpenMRS User to save to the database\r\n \t * @throws APIException\r\n \t */\r\n \tpublic void updateUser(User user) throws APIException {\r\n \t\tcheckPrivileges(user);\r\n \t\tsetCollectionProperties(user);\r\n \t\t\r\n-\t\tif (user.getSystemId() == null)\r\n+\t\tif (user.getSystemId() == null || user.getSystemId().equals(\"\"))\r\n \t\t\tuser.setSystemId(generateSystemId());\r\n \t\t\r\n \t\tgetUserDAO().updateUser(user);\r\n \t}\r\n \t\r\n \t/**\r\n-\t * Grant roles for user\r\n-\t * @param user\r\n-\t * @param role\r\n+\t * Give a <code>role</code> to the given <code>user</code>.  If the \r\n+\t * <code>user</code> already has this role, the user is saved anyway.\r\n+\t * \r\n+\t * @param user The OpenMRS user to add the <code>role</code> to \r\n+\t * @param role Role to give to the <code>user</code>\r\n \t * @throws APIException\r\n \t */\r\n \tpublic void grantUserRole(User user, Role role) throws APIException {\r\n@@ -124,9 +130,13 @@\n \t}\r\n \t\r\n \t/**\r\n-\t * Revoke roles from user\r\n-\t * @param user\r\n-\t * @param role\r\n+\t * Remove the given <code>role</code> from the given <code>user</code>\r\n+\t * If the <code>user</code> does not have this <code>role</code>, no\r\n+\t * errors will be thrown and the user will be saved anyway\r\n+\t * \r\n+\t * @param user the OpenMRS user from which to remove the <code>role</code> \r\n+\t * @param role Role to remove from <code>user</code>\r\n+\t * \r\n \t * @throws APIException\r\n \t */\r\n \tpublic void revokeUserRole(User user, Role role) throws APIException {\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 109,
        "bugNodeStartChar": 2829,
        "bugNodeLength": 26,
        "fixLineNum": 109,
        "fixNodeStartChar": 2721,
        "fixNodeLength": 59,
        "sourceBeforeFix": "user.getSystemId() == null",
        "sourceAfterFix": "user.getSystemId() == null || user.getSystemId().equals(\"\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b8108a370b039dbeccffad8c9b634f6ac85ed4a5",
        "fixCommitParentSHA1": "9b5d6555f6926a58420d3a17830a2d1e3edc9c00",
        "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java",
        "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\nindex d8b78d1..da7f421 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n@@ -29,11 +29,11 @@\n  */\n public class TFAgentStatBatchMapper {\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n-    public final TFAgentStatMappter tFAgentStatMappter = new TFAgentStatMappter();\n+    public final TFAgentStatMapper tFAgentStatMapper = new TFAgentStatMapper();\n \n     public TFAgentStatBatch map(AgentStatBo agentStatBo) {\n         try {\n-            List<TFAgentStat> tFAgentstatList = tFAgentStatMappter.map(agentStatBo);\n+            List<TFAgentStat> tFAgentstatList = tFAgentStatMapper.map(agentStatBo);\n             long startTimestamp = getStartTimestamp(agentStatBo);\n             TFAgentStatBatch tFAgentStatBatch = new TFAgentStatBatch(agentStatBo.getAgentId(), startTimestamp, tFAgentstatList);\n             return tFAgentStatBatch;\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 32,
        "bugNodeStartChar": 1141,
        "bugNodeLength": 78,
        "fixLineNum": 32,
        "fixNodeStartChar": 1141,
        "fixNodeLength": 75,
        "sourceBeforeFix": "public final TFAgentStatMappter tFAgentStatMappter=new TFAgentStatMappter(); ",
        "sourceAfterFix": "public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper(); "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLContextInUriRouteExampleTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLContextInUriRouteExampleTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLContextInUriRouteExampleTest.java\nindex 5f6e8d5..937fb76 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLContextInUriRouteExampleTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketSSLContextInUriRouteExampleTest.java\n@@ -166,7 +166,7 @@\n             public void configure() {\n                 WebsocketComponent websocketComponent = (WebsocketComponent) context.getComponent(\"websocket\");\n                 websocketComponent.setMinThreads(1);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n                 from(uri)\n                      .log(\">>> Message received from WebSocket Client : ${body}\")\n                      .to(\"mock:client\")\n",
        "projectName": "apache.camel",
        "bugLineNum": 169,
        "bugNodeStartChar": 6622,
        "bugNodeLength": 36,
        "fixLineNum": 169,
        "fixNodeStartChar": 6622,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "c3448fe289734ed7498eee4444af630f7abd6986",
        "fixCommitParentSHA1": "0e1b19a1116a7ff61dd35bb8d8a9dff01c4cdc60",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\nindex 8a7f7fc..f5706d9 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\n@@ -18,7 +18,7 @@\n   /** Whether to use the user name as the queue name (instead of \"default\") if\n    * the request does not specify a queue. */\n   protected static final String  USER_AS_DEFAULT_QUEUE = CONF_PREFIX + \"user-as-default-queue\";\n-  protected static final boolean DEFAULT_USER_AS_DEFAULT_QUEUE = false;\n+  protected static final boolean DEFAULT_USER_AS_DEFAULT_QUEUE = true;\n \n   protected static final String LOCALITY_THRESHOLD = CONF_PREFIX + \"locality.threshold\";\n   protected static final float  DEFAULT_LOCALITY_THRESHOLD = -1.0f;\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 21,
        "bugNodeStartChar": 930,
        "bugNodeLength": 37,
        "fixLineNum": 21,
        "fixNodeStartChar": 930,
        "fixNodeLength": 36,
        "sourceBeforeFix": "DEFAULT_USER_AS_DEFAULT_QUEUE=false",
        "sourceAfterFix": "DEFAULT_USER_AS_DEFAULT_QUEUE=true"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8b75e9ed91c0a6c100917d24cdb29e8a4b14390e",
        "fixCommitParentSHA1": "837bb9ece796aee9bc1f82ec45414ea52ac33f80",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\nindex ad91617..d0e3f90 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java\n@@ -190,11 +190,11 @@\n       // Prefetch online tables/namespaces\n       for (TableName table: QuotaCache.this.rsServices.getOnlineTables()) {\n         if (table.isSystemTable()) continue;\n-        if (!QuotaCache.this.tableQuotaCache.contains(table)) {\n+        if (!QuotaCache.this.tableQuotaCache.containsKey(table)) {\n           QuotaCache.this.tableQuotaCache.putIfAbsent(table, new QuotaState());\n         }\n         String ns = table.getNamespaceAsString();\n-        if (!QuotaCache.this.namespaceQuotaCache.contains(ns)) {\n+        if (!QuotaCache.this.namespaceQuotaCache.containsKey(ns)) {\n           QuotaCache.this.namespaceQuotaCache.putIfAbsent(ns, new QuotaState());\n         }\n       }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 193,
        "bugNodeStartChar": 6900,
        "bugNodeLength": 47,
        "fixLineNum": 193,
        "fixNodeStartChar": 6900,
        "fixNodeLength": 50,
        "sourceBeforeFix": "QuotaCache.this.tableQuotaCache.contains(table)",
        "sourceAfterFix": "QuotaCache.this.tableQuotaCache.containsKey(table)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8018d1af58330b6d21c858fa5ebfee6a66cd10b3",
        "fixCommitParentSHA1": "915176c4e769f510f835f1ad182bc62586a01e0b",
        "bugFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
        "fixPatch": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\nindex 3875125..0aa3c85 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\n@@ -298,7 +298,7 @@\n         }\n       } catch (IOException e) {\n         out.println(\"Cannot list keys for KeyProvider: \" + provider\n-            + \": \" + e.getMessage());\n+            + \": \" + e.toString());\n         throw e;\n       }\n     }\n@@ -350,12 +350,12 @@\n           printProviderWritten();\n         } catch (NoSuchAlgorithmException e) {\n           out.println(\"Cannot roll key: \" + keyName + \" within KeyProvider: \"\n-              + provider);\n+              + provider + \". \" + e.toString());\n           throw e;\n         }\n       } catch (IOException e1) {\n         out.println(\"Cannot roll key: \" + keyName + \" within KeyProvider: \"\n-            + provider);\n+            + provider + \". \" + e1.toString());\n         throw e1;\n       }\n     }\n@@ -422,7 +422,7 @@\n           out.println(keyName + \" has been successfully deleted.\");\n           printProviderWritten();\n         } catch (IOException e) {\n-          out.println(keyName + \" has not been deleted.\");\n+          out.println(keyName + \" has not been deleted. \" + e.toString());\n           throw e;\n         }\n       }\n@@ -484,13 +484,13 @@\n             + options.toString() + \".\");\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (IOException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       }\n     }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 487,
        "bugNodeStartChar": 16276,
        "bugNodeLength": 14,
        "fixLineNum": 487,
        "fixNodeStartChar": 16276,
        "fixNodeLength": 12,
        "sourceBeforeFix": "e.getMessage()",
        "sourceAfterFix": "e.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f",
        "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 59,
        "bugNodeStartChar": 1365,
        "bugNodeLength": 128,
        "fixLineNum": 59,
        "fixNodeStartChar": 1365,
        "fixNodeLength": 124,
        "sourceBeforeFix": "@Override public ResponseImpl description(String description){   throw new RuntimeException(\"Not implemented\"); } ",
        "sourceAfterFix": "@Override public Response description(String description){   throw new RuntimeException(\"Not implemented\"); } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "2848cbe8aeda8290d07dc8cca611bc20afb8b1f5",
        "fixCommitParentSHA1": "90afb7e91d9b1178a96021c506e09f89ba4bd2f3",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/extension/ExtensionRegistry.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/extension/ExtensionRegistry.java b/controller/src/main/java/org/jboss/as/controller/extension/ExtensionRegistry.java\nindex 4fc5cca..3330e6b 100644\n--- a/controller/src/main/java/org/jboss/as/controller/extension/ExtensionRegistry.java\n+++ b/controller/src/main/java/org/jboss/as/controller/extension/ExtensionRegistry.java\n@@ -350,7 +350,7 @@\n         final Map<String, SubsystemInformation> subsystemsInfo = getAvailableSubsystems(moduleName);\n         if(subsystemsInfo != null && ! subsystemsInfo.isEmpty()) {\n             for(final Map.Entry<String, SubsystemInformation> entry : subsystemsInfo.entrySet()) {\n-                subsystems.add(entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() +\".\"+ entry.getValue().getManagementInterfaceMinorVersion());\n+                subsystems.add(entry.getKey(), entry.getValue().getManagementInterfaceMajorVersion() +\".\"+ entry.getValue().getManagementInterfaceMicroVersion());\n             }\n         }\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 353,
        "bugNodeStartChar": 16970,
        "bugNodeLength": 53,
        "fixLineNum": 353,
        "fixNodeStartChar": 16970,
        "fixNodeLength": 53,
        "sourceBeforeFix": "entry.getValue().getManagementInterfaceMinorVersion()",
        "sourceAfterFix": "entry.getValue().getManagementInterfaceMicroVersion()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
        "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 123,
        "bugNodeStartChar": 6585,
        "bugNodeLength": 145,
        "fixLineNum": 123,
        "fixNodeStartChar": 6585,
        "fixNodeLength": 145,
        "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())",
        "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f",
        "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 293,
        "bugNodeStartChar": 9173,
        "bugNodeLength": 50,
        "fixLineNum": 293,
        "fixNodeStartChar": 9173,
        "fixNodeLength": 48,
        "sourceBeforeFix": "Foundation.NSLog(\"[info] \" + tag + \": \"+ message)",
        "sourceAfterFix": "Foundation.log(\"[info] \" + tag + \": \"+ message)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "127bef4d101ac677d2b4875305d402528d4b81a6",
        "fixCommitParentSHA1": "47cb6295fae119e16c8625b5260dd33e9127b4ff",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\nindex 2ce34a9..52f0c7d 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\n@@ -120,7 +120,7 @@\n    * Tests that a get on a table throws {@link SocketTimeoutException} when the operation takes\n    * longer than 'hbase.client.operation.timeout'.\n    */\n-  @Test(expected = SocketTimeoutException.class)\n+  @Test(expected = RetriesExhaustedException.class)\n   public void testGetTimeout() throws Exception {\n     DELAY_GET = 600;\n     TABLE.get(new Get(ROW));\n@@ -130,7 +130,7 @@\n    * Tests that a put on a table throws {@link SocketTimeoutException} when the operation takes\n    * longer than 'hbase.client.operation.timeout'.\n    */\n-  @Test(expected = SocketTimeoutException.class)\n+  @Test(expected = RetriesExhaustedException.class)\n   public void testPutTimeout() throws Exception {\n     DELAY_MUTATE = 600;\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 123,
        "bugNodeStartChar": 5186,
        "bugNodeLength": 28,
        "fixLineNum": 123,
        "fixNodeStartChar": 5186,
        "fixNodeLength": 31,
        "sourceBeforeFix": "SocketTimeoutException.class",
        "sourceAfterFix": "RetriesExhaustedException.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a21d3decb7678a1dd89332073ac81a97fb261581",
        "fixCommitParentSHA1": "9baf2eed27e78bb1bddd864f52a47e9b2bb17923",
        "bugFilePath": "components/camel-jmxconnect/src/main/java/org/apache/camel/jmxconnect/MBeanCamelServerConnectionClient.java",
        "fixPatch": "diff --git a/components/camel-jmxconnect/src/main/java/org/apache/camel/jmxconnect/MBeanCamelServerConnectionClient.java b/components/camel-jmxconnect/src/main/java/org/apache/camel/jmxconnect/MBeanCamelServerConnectionClient.java\nindex 60ea8e8..1e835e4 100644\n--- a/components/camel-jmxconnect/src/main/java/org/apache/camel/jmxconnect/MBeanCamelServerConnectionClient.java\n+++ b/components/camel-jmxconnect/src/main/java/org/apache/camel/jmxconnect/MBeanCamelServerConnectionClient.java\n@@ -42,7 +42,7 @@\n     private MBeanCamelServerConnection serverConnection;\n     private Endpoint replyToEndpoint;\n     private List listeners = new CopyOnWriteArrayList();\n-    private UuidGenerator idGenerator = new UuidGenerator();\n+    private UuidGenerator idGenerator = UuidGenerator.get();\n     private NotificationBroadcasterSupport localNotifier = new NotificationBroadcasterSupport();\n \n     public MBeanCamelServerConnectionClient(MBeanCamelServerConnection serverConnection) {\n@@ -68,7 +68,7 @@\n     }\n \n     public String generateId() {\n-        return idGenerator.generateId();\n+        return idGenerator.generateUuid();\n     }\n \n     /**\n",
        "projectName": "apache.camel",
        "bugLineNum": 71,
        "bugNodeStartChar": 2929,
        "bugNodeLength": 24,
        "fixLineNum": 71,
        "fixNodeStartChar": 2929,
        "fixNodeLength": 26,
        "sourceBeforeFix": "idGenerator.generateId()",
        "sourceAfterFix": "idGenerator.generateUuid()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "427eaad53e8d6d42324d43993906238af4884659",
        "fixCommitParentSHA1": "2b01605f206311f8f3f61b11974aa3141b8ac752",
        "bugFilePath": "metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\nindex 7149219..e387a19 100644\n--- a/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n+++ b/metrics-core/src/main/java/com/codahale/metrics/JmxReporter.java\n@@ -618,7 +618,7 @@\n             try {\n                 final ObjectName objectName = createName(\"timers\", name);\n                 mBeanServer.unregisterMBean(objectName);\n-                registered.add(objectName);\n+                registered.remove(objectName);\n             } catch (InstanceNotFoundException e) {\n                 LOGGER.debug(\"Unable to unregister timer\", e);\n             } catch (MBeanRegistrationException e) {\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 621,
        "bugNodeStartChar": 19354,
        "bugNodeLength": 26,
        "fixLineNum": 621,
        "fixNodeStartChar": 19354,
        "fixNodeLength": 29,
        "sourceBeforeFix": "registered.add(objectName)",
        "sourceAfterFix": "registered.remove(objectName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java",
        "fixPatch": "diff --git a/android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java b/android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\nindex 5be379e..431e724 100755\n--- a/android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n+++ b/android/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n@@ -83,7 +83,7 @@\n   }\n \n   @Override\n-  public N removeInEdge(Object edge, boolean isSelfLoop) {\n+  public N removeInEdge(E edge, boolean isSelfLoop) {\n     if (!isSelfLoop) {\n       return removeOutEdge(edge);\n     }\n@@ -91,7 +91,7 @@\n   }\n \n   @Override\n-  public N removeOutEdge(Object edge) {\n+  public N removeOutEdge(E edge) {\n     N node = super.removeOutEdge(edge);\n     Multiset<N> adjacentNodes = getReference(adjacentNodesReference);\n     if (adjacentNodes != null) {\n",
        "projectName": "google.guava",
        "bugLineNum": 86,
        "bugNodeStartChar": 2851,
        "bugNodeLength": 11,
        "fixLineNum": 86,
        "fixNodeStartChar": 2851,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object edge",
        "sourceAfterFix": "E edge"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0456dbb2f67c9f98090954d9d70cb02ceb4622d3",
        "fixCommitParentSHA1": "42296477373027abdd09c189e1a6d14a85be4e81",
        "bugFilePath": "src/edu/stanford/nlp/trees/Tree.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/trees/Tree.java b/src/edu/stanford/nlp/trees/Tree.java\nindex d322e7a..280ec3f 100644\n--- a/src/edu/stanford/nlp/trees/Tree.java\n+++ b/src/edu/stanford/nlp/trees/Tree.java\n@@ -868,7 +868,7 @@\n       return;\n     }\n     pw.print(\"(\");\n-    String nodeString = onlyLabelValue ? nodeString() : nodeString();\n+    String nodeString = onlyLabelValue ? value() : nodeString();\n     pw.print(nodeString);\n     // pw.flush();\n     boolean parentIsNull = label() == null || label().value() == null;\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 871,
        "bugNodeStartChar": 28918,
        "bugNodeLength": 12,
        "fixLineNum": 871,
        "fixNodeStartChar": 28918,
        "fixNodeLength": 7,
        "sourceBeforeFix": "nodeString()",
        "sourceAfterFix": "value()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "42e0782a5258626a58177d154ca0cf3da87cdf7a",
        "fixCommitParentSHA1": "bb5632018ea2adeac29e0e5fa2397e04edc21b71",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\nindex a8ec9ea..f3d0f84 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\n@@ -239,7 +239,7 @@\n      * @param r {@link AtmosphereResource}\n      */\n     public void unRegisterUuidForFindCandidate(AtmosphereResource r) {\n-        logger.debug(\"Removing: {}\", r);\n+        logger.trace(\"Removing: {}\", r);\n         resources.remove(r.uuid());\n     }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 242,
        "bugNodeStartChar": 9820,
        "bugNodeLength": 31,
        "fixLineNum": 242,
        "fixNodeStartChar": 9820,
        "fixNodeLength": 31,
        "sourceBeforeFix": "logger.debug(\"Removing: {}\",r)",
        "sourceAfterFix": "logger.trace(\"Removing: {}\",r)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "cdf09affa490e617190060402eade8daa292f812",
        "fixCommitParentSHA1": "acc8674307a2c236448d072277b87327a42b201d",
        "bugFilePath": "src/main/java/tachyon/client/FileOutStream.java",
        "fixPatch": "diff --git a/src/main/java/tachyon/client/FileOutStream.java b/src/main/java/tachyon/client/FileOutStream.java\nindex 2db178a..ae8ced2 100644\n--- a/src/main/java/tachyon/client/FileOutStream.java\n+++ b/src/main/java/tachyon/client/FileOutStream.java\n@@ -134,10 +134,10 @@\n         int tLen = len;\n         int tOff = off;\n         while (tLen > 0) {\n-          if (mCurrentBlockLeftByte == 0) {\n+          if (mCurrentBlockLeftByte <= 0 || mCurrentBlockOutStream == null ) {\n             getNextBlock();\n           }\n-          if (mCurrentBlockLeftByte > tLen) {\n+          if (mCurrentBlockLeftByte >= tLen) {\n             mCurrentBlockOutStream.write(b, tOff, tLen);\n             mCurrentBlockLeftByte -= tLen;\n             mCachedBytes += tLen;\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 140,
        "bugNodeStartChar": 4548,
        "bugNodeLength": 28,
        "fixLineNum": 140,
        "fixNodeStartChar": 4548,
        "fixNodeLength": 29,
        "sourceBeforeFix": "mCurrentBlockLeftByte > tLen",
        "sourceAfterFix": "mCurrentBlockLeftByte >= tLen"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "63c73d11b2de514fde3e299b573334b82089045c",
        "fixCommitParentSHA1": "116399f5c2bfdb90075368f624a057ef02a1bdc3",
        "bugFilePath": "bundles/binding/org.openhab.binding.maxcube.test/src/test/java/org/openhab/binding/maxcube/internal/message/S_CommandTest.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.maxcube.test/src/test/java/org/openhab/binding/maxcube/internal/message/S_CommandTest.java b/bundles/binding/org.openhab.binding.maxcube.test/src/test/java/org/openhab/binding/maxcube/internal/message/S_CommandTest.java\nindex f3efd85..8b82e28 100644\n--- a/bundles/binding/org.openhab.binding.maxcube.test/src/test/java/org/openhab/binding/maxcube/internal/message/S_CommandTest.java\n+++ b/bundles/binding/org.openhab.binding.maxcube.test/src/test/java/org/openhab/binding/maxcube/internal/message/S_CommandTest.java\n@@ -29,7 +29,7 @@\n \t\n \t@Test\n \tpublic void PrefixTest() {\n-\t\tS_Command scmd = new S_Command(\"00FE30\", 20.0);\n+\t\tS_Command scmd = new S_Command(\"00FE30\", 1, 20.0);\n \t\t\n \t\tString commandStr = scmd.getCommandString();\n \t\t\n@@ -41,7 +41,7 @@\n \t\n \t@Test\n \tpublic void BaseCommandTest() {\n-\t\tS_Command scmd = new S_Command(\"00FE30\", 20.0);\n+\t\tS_Command scmd = new S_Command(\"00FE30\", 1, 20.0);\n \t\t\n \t\tString commandStr = scmd.getCommandString();\n \t\t\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 44,
        "bugNodeStartChar": 997,
        "bugNodeLength": 29,
        "fixLineNum": 44,
        "fixNodeStartChar": 997,
        "fixNodeLength": 32,
        "sourceBeforeFix": "new S_Command(\"00FE30\",20.0)",
        "sourceAfterFix": "new S_Command(\"00FE30\",1,20.0)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d9762ac9bd5c578bc9b975dd1233cfea917134b2",
        "fixCommitParentSHA1": "5fe0a8f2fb6546dda4d90abc834d9367ad13456a",
        "bugFilePath": "server/src/main/java/io/druid/segment/realtime/plumber/FlushingPlumber.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/segment/realtime/plumber/FlushingPlumber.java b/server/src/main/java/io/druid/segment/realtime/plumber/FlushingPlumber.java\nindex da27418..e2120b1 100644\n--- a/server/src/main/java/io/druid/segment/realtime/plumber/FlushingPlumber.java\n+++ b/server/src/main/java/io/druid/segment/realtime/plumber/FlushingPlumber.java\n@@ -182,7 +182,7 @@\n     log.info(\"Stopping job\");\n \n     for (final Map.Entry<Long, Sink> entry : getSinks().entrySet()) {\n-      flushAfterDuration(entry.getKey(), entry.getValue());\n+      abandonSegment(entry.getKey(), entry.getValue());\n     }\n     shutdownExecutors();\n \n",
        "projectName": "druid-io.druid",
        "bugLineNum": 185,
        "bugNodeStartChar": 5790,
        "bugNodeLength": 52,
        "fixLineNum": 185,
        "fixNodeStartChar": 5790,
        "fixNodeLength": 48,
        "sourceBeforeFix": "flushAfterDuration(entry.getKey(),entry.getValue())",
        "sourceAfterFix": "abandonSegment(entry.getKey(),entry.getValue())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6f82ff5322cbe25eb6625733554053069415bebe",
        "fixCommitParentSHA1": "46666da441dee53fbc3b633d60a8e8cf10579f95",
        "bugFilePath": "components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\nindex ee4a082..14ee7b9 100644\n--- a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\n+++ b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\n@@ -40,7 +40,7 @@\n \n     @Override\n     protected Class getBeanClass(Element arg0) {\n-        return CxfEndpointBean.class;\n+        return CxfSpringEndpointBean.class;\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 43,
        "bugNodeStartChar": 1860,
        "bugNodeLength": 21,
        "fixLineNum": 43,
        "fixNodeStartChar": 1860,
        "fixNodeLength": 27,
        "sourceBeforeFix": "CxfEndpointBean.class",
        "sourceAfterFix": "CxfSpringEndpointBean.class"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "df883a9823b4c1b84a2e5543fcbea121cdaeddb5",
        "fixCommitParentSHA1": "4617d37e28a052be85c203e2f74fcafb47bcf6dd",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\nindex a823e0c..32c5bed 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n@@ -691,7 +691,7 @@\n           {\n             int retVal = -Ints.compare(zkWorker.getCurrCapacityUsed(), zkWorker2.getCurrCapacityUsed());\n             if (retVal == 0) {\n-              retVal = zkWorker.getWorker().getHost().compareTo(zkWorker.getWorker().getHost());\n+              retVal = zkWorker.getWorker().getHost().compareTo(zkWorker2.getWorker().getHost());\n             }\n \n             return retVal;\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 694,
        "bugNodeStartChar": 25135,
        "bugNodeLength": 20,
        "fixLineNum": 694,
        "fixNodeStartChar": 25135,
        "fixNodeLength": 21,
        "sourceBeforeFix": "zkWorker.getWorker()",
        "sourceAfterFix": "zkWorker2.getWorker()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f",
        "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 36,
        "bugNodeStartChar": 863,
        "bugNodeLength": 136,
        "fixLineNum": 36,
        "fixNodeStartChar": 863,
        "fixNodeLength": 132,
        "sourceBeforeFix": "@Override public ResponseImpl header(String name,Property property){   addHeader(name,property);   return this; } ",
        "sourceAfterFix": "@Override public Response header(String name,Property property){   addHeader(name,property);   return this; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1854,
        "bugNodeLength": 30,
        "fixLineNum": 44,
        "fixNodeStartChar": 1811,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(3)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(3)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8d49fc720f13722bf31d504d1a83bd8a5a6eb559",
        "fixCommitParentSHA1": "53e543c71bade1e6099fac1908b6711752c8da19",
        "bugFilePath": "library/src/com/haarman/listviewanimations/SwingLeftInAnimationAdapter.java",
        "fixPatch": "diff --git a/library/src/com/haarman/listviewanimations/SwingLeftInAnimationAdapter.java b/library/src/com/haarman/listviewanimations/SwingLeftInAnimationAdapter.java\nindex 2440b9f..b90ca59 100644\n--- a/library/src/com/haarman/listviewanimations/SwingLeftInAnimationAdapter.java\n+++ b/library/src/com/haarman/listviewanimations/SwingLeftInAnimationAdapter.java\n@@ -22,7 +22,7 @@\n \n import com.nineoldandroids.animation.PropertyValuesHolder;\n \n-public abstract class SwingLeftInAnimationAdapter<T> extends AnimationAdapter<T> {\n+public abstract class SwingLeftInAnimationAdapter<T> extends PropertyValuesAnimationAdapter<T> {\n \n \tpublic SwingLeftInAnimationAdapter(Context context) {\n \t\tsuper(context);\n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 25,
        "bugNodeStartChar": 847,
        "bugNodeLength": 19,
        "fixLineNum": 25,
        "fixNodeStartChar": 847,
        "fixNodeLength": 33,
        "sourceBeforeFix": "AnimationAdapter<T>",
        "sourceAfterFix": "PropertyValuesAnimationAdapter<T>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1a5ec9791516322cfeb14508732b4a7025bef2e0",
        "fixCommitParentSHA1": "0283dec62a767c1ce3b7777423ca0bfc25a6d9c1",
        "bugFilePath": "src/main/java/org/graylog2/restclient/models/Extractor.java",
        "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Extractor.java b/src/main/java/org/graylog2/restclient/models/Extractor.java\nindex 3b6f22c..0a0921a 100644\n--- a/src/main/java/org/graylog2/restclient/models/Extractor.java\n+++ b/src/main/java/org/graylog2/restclient/models/Extractor.java\n@@ -185,7 +185,7 @@\n         request.conditionValue = conditionValue;\n         request.order = order;\n \n-        final Map response = api.path(routes.ExtractorsResource().list(input.getId()), Map.class)\n+        final Map response = api.path(routes.ExtractorsResource().create(input.getId()), Map.class)\n                 .node(node)\n                 .expect(Http.Status.CREATED)\n                 .body(request)\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 188,
        "bugNodeStartChar": 6896,
        "bugNodeLength": 47,
        "fixLineNum": 188,
        "fixNodeStartChar": 6896,
        "fixNodeLength": 49,
        "sourceBeforeFix": "routes.ExtractorsResource().list(input.getId())",
        "sourceAfterFix": "routes.ExtractorsResource().create(input.getId())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "4be7f3630491ebbb716abb50233b7b453c39eb53",
        "fixCommitParentSHA1": "b7df19acc0d036c045da3ee00f5fae8ff6b7db29",
        "bugFilePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\nindex 3ed3a24..382ed68 100644\n--- a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n+++ b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n@@ -61,15 +61,15 @@\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName) throws Exception {\n-        return createMessageConsumer(session, destinationName, null, false, null, true);\n+        return createMessageConsumer(session, destinationName, null, false, null);\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, false, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, false, null);\n     }\n \n     public static MessageConsumer createTopicConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, true, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, true, null);\n     }\n     \n     public static MessageConsumer createTemporaryMessageConsumer(\n@@ -88,7 +88,8 @@\n             String messageSelector, \n             boolean topic, \n             String durableSubscriptionId) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, true);\n+        // noLocal is default false accordingly to JMS spec\n+        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, false);\n     }\n     \n     public static MessageConsumer createMessageConsumer(\n",
        "projectName": "apache.camel",
        "bugLineNum": 72,
        "bugNodeStartChar": 2743,
        "bugNodeLength": 82,
        "fixLineNum": 72,
        "fixNodeStartChar": 2743,
        "fixNodeLength": 76,
        "sourceBeforeFix": "createMessageConsumer(session,destinationName,messageSelector,true,null,true)",
        "sourceAfterFix": "createMessageConsumer(session,destinationName,messageSelector,true,null)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "facc9c51d37dad77ba2908c32b8ff43f405b7421",
        "fixCommitParentSHA1": "6b395910307240e607632af3bd547a2b9f73c68f",
        "bugFilePath": "server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java b/server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java\nindex b270398..2a8a096 100644\n--- a/server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java\n+++ b/server/src/main/java/io/druid/segment/realtime/plumber/RealtimePlumberSchool.java\n@@ -92,7 +92,7 @@\n     this.rejectionPolicyFactory = new ServerTimeRejectionPolicyFactory();\n     this.maxPendingPersists = (maxPendingPersists > 0) ? maxPendingPersists : defaultPending;\n \n-    Preconditions.checkArgument(maxPendingPersists > 0, \"RealtimePlumberSchool requires maxPendingPersists > 0\");\n+    Preconditions.checkArgument(maxPendingPersists <= 0, \"RealtimePlumberSchool requires maxPendingPersists > 0\");\n     Preconditions.checkNotNull(windowPeriod, \"RealtimePlumberSchool requires a windowPeriod.\");\n     Preconditions.checkNotNull(basePersistDirectory, \"RealtimePlumberSchool requires a basePersistDirectory.\");\n     Preconditions.checkNotNull(segmentGranularity, \"RealtimePlumberSchool requires a segmentGranularity.\");\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 95,
        "bugNodeStartChar": 3621,
        "bugNodeLength": 22,
        "fixLineNum": 95,
        "fixNodeStartChar": 3621,
        "fixNodeLength": 23,
        "sourceBeforeFix": "maxPendingPersists > 0",
        "sourceAfterFix": "maxPendingPersists <= 0"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "7109f6f55968c830c5f43ff798e106ef2f14c71c",
        "fixCommitParentSHA1": "fffd5a36c95b9e576a648c352eeb4c13c329ffb4",
        "bugFilePath": "components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java",
        "fixPatch": "diff --git a/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java b/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\nindex ce063b2..9b7152d 100644\n--- a/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\n+++ b/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\n@@ -184,7 +184,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_DEFAULT)),\n                 eq((byte) 0),\n@@ -231,7 +231,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_DEFAULT)),\n                 eq((byte) 0),\n@@ -295,7 +295,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_8_BIT)),\n                 eq((byte) 0),\n",
        "projectName": "apache.camel",
        "bugLineNum": 232,
        "bugNodeStartChar": 9410,
        "bugNodeLength": 177,
        "fixLineNum": 232,
        "fixNodeStartChar": 9410,
        "fixNodeLength": 176,
        "sourceBeforeFix": "new GeneralDataCoding(false,false,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)",
        "sourceAfterFix": "new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
        "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 135,
        "bugNodeStartChar": 7613,
        "bugNodeLength": 94,
        "fixLineNum": 135,
        "fixNodeStartChar": 7613,
        "fixNodeLength": 94,
        "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().finished().list().size())",
        "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "39c82b017cbbc7239c90e792acd9d0e4efdb44de",
        "fixCommitParentSHA1": "a8dfec5d8afb60252af94ee261509edb24259fd2",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\nindex c4f04cb..c735be1 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\n@@ -129,7 +129,7 @@\n       rowsRet = work.getLimit() >= 0 ? Math.min(work.getLimit() - totalRows, maxRows) : maxRows;\n     }\n     try {\n-      if (rowsRet <= 0) {\n+      if (rowsRet <= 0 || work.getLimit() == totalRows) {\n         fetch.clearFetchContext();\n         return false;\n       }\n",
        "projectName": "apache.hive",
        "bugLineNum": 132,
        "bugNodeStartChar": 4309,
        "bugNodeLength": 12,
        "fixLineNum": 132,
        "fixNodeStartChar": 4309,
        "fixNodeLength": 44,
        "sourceBeforeFix": "rowsRet <= 0",
        "sourceAfterFix": "rowsRet <= 0 || work.getLimit() == totalRows"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6121d105fc56c57636b98ecc7504caff978bcd14",
        "fixCommitParentSHA1": "87de7e63829b9da947e74769c597207c78acb9ef",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/JarLauncher.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/JarLauncher.java b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/JarLauncher.java\nindex ec7b0bc..2776d6f 100644\n--- a/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/JarLauncher.java\n+++ b/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/JarLauncher.java\n@@ -44,7 +44,7 @@\n \t@Override\n \tprotected boolean isNestedArchive(Archive.Entry entry) {\n \t\tif (entry.isDirectory()) {\n-\t\t\treturn entry.getName().startsWith(BOOT_INF_CLASSES);\n+\t\t\treturn entry.getName().equals(BOOT_INF_CLASSES);\n \t\t}\n \t\treturn entry.getName().startsWith(BOOT_INF_LIB);\n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 47,
        "bugNodeStartChar": 1409,
        "bugNodeLength": 44,
        "fixLineNum": 47,
        "fixNodeStartChar": 1409,
        "fixNodeLength": 40,
        "sourceBeforeFix": "entry.getName().startsWith(BOOT_INF_CLASSES)",
        "sourceAfterFix": "entry.getName().equals(BOOT_INF_CLASSES)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6f74927366d17a4773006a094a7f0bc29c4b674b",
        "fixCommitParentSHA1": "9323424d263a1e573ab7edbfc69d67d8782ce36a",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\nindex 3b7a752..d76f73e 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest {\n+public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 326,
        "bugNodeLength": 308,
        "fixLineNum": 10,
        "fixNodeStartChar": 326,
        "fixNodeLength": 311,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/TransformTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/TransformTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/TransformTest.java\nindex 81fd818..ffe18e7 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/TransformTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/TransformTest.java\n@@ -49,7 +49,7 @@\n \t\tfinal Sink output = new Sink(\"output.json\").withInputs(projection);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 52,
        "bugNodeStartChar": 2241,
        "bugNodeLength": 38,
        "fixLineNum": 52,
        "fixNodeStartChar": 2241,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e01cc95227e3c3f3a7f09a04b388c9faaafeff05",
        "fixCommitParentSHA1": "5e6c85d11a74a9fe258d53265519942c15cc3fbf",
        "bugFilePath": "hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java",
        "fixPatch": "diff --git a/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java b/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\nindex cb63096..2971cad 100644\n--- a/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\n+++ b/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\n@@ -123,7 +123,7 @@\n     @Test\n     public void testMapConfig() {\n         assertNotNull(config);\n-        assertEquals(8, config.getMapConfigs().size());\n+        assertEquals(6, config.getMapConfigs().size());\n         MapConfig testMapConfig = config.getMapConfig(\"testMap\");\n         assertNotNull(testMapConfig);\n         assertEquals(\"testMap\", testMapConfig.getName());\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 126,
        "bugNodeStartChar": 3344,
        "bugNodeLength": 46,
        "fixLineNum": 126,
        "fixNodeStartChar": 3344,
        "fixNodeLength": 46,
        "sourceBeforeFix": "assertEquals(8,config.getMapConfigs().size())",
        "sourceAfterFix": "assertEquals(6,config.getMapConfigs().size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a4c5847e42fcba0f109de1a3d312d94588249e66",
        "fixCommitParentSHA1": "ddb64455621b6e4cd799784d85c4a72f8d8348c3",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/model/HandledPredicate.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/model/HandledPredicate.java b/camel-core/src/main/java/org/apache/camel/model/HandledPredicate.java\nindex 6df5ac5..b3aff26 100644\n--- a/camel-core/src/main/java/org/apache/camel/model/HandledPredicate.java\n+++ b/camel-core/src/main/java/org/apache/camel/model/HandledPredicate.java\n@@ -61,7 +61,7 @@\n     }\n \n     public Predicate createPredicate(RouteContext routeContext) {\n-        ExpressionType predicateType = getCompletePredicate();\n+        ExpressionType predicateType = getHandledPredicate();\n         if (predicateType != null && predicate == null) {\n             predicate = predicateType.createPredicate(routeContext);\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 64,
        "bugNodeStartChar": 2109,
        "bugNodeLength": 22,
        "fixLineNum": 64,
        "fixNodeStartChar": 2109,
        "fixNodeLength": 21,
        "sourceBeforeFix": "getCompletePredicate()",
        "sourceAfterFix": "getHandledPredicate()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9754de49878983bf090655203e0c880cccad7b2e",
        "fixCommitParentSHA1": "582c39a4d17c6cf78a325f9767df626b4d38df3f",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cache/EventCacheBroadcasterCache.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cache/EventCacheBroadcasterCache.java b/modules/cpr/src/main/java/org/atmosphere/cache/EventCacheBroadcasterCache.java\nindex c6d47d9..1af9a45 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cache/EventCacheBroadcasterCache.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cache/EventCacheBroadcasterCache.java\n@@ -130,7 +130,7 @@\n     }\n \n     protected void invalidateExpiredEntries() {\n-        long now = System.nanoTime();\n+        long now = System.currentTimeMillis();\n         synchronized (messages) {\n \n             Set<String> inactiveClients = new HashSet<String>();\n@@ -177,7 +177,7 @@\n             logger.debug(\"Active clients {}\", activeClients());\n         }\n \n-        long now = System.nanoTime();\n+        long now = System.currentTimeMillis();\n         String messageId = UUID.randomUUID().toString();\n         CacheMessage cacheMessage = new CacheMessage(messageId, e);\n         synchronized (messages) {\n@@ -272,7 +272,7 @@\n     @Override\n     public List<Object> retrieveFromCache(String broadcasterId, AtmosphereResource r) {\n         String clientId = r.uuid();\n-        long now = System.nanoTime();\n+        long now = System.currentTimeMillis();\n \n         List<Object> result = new ArrayList<Object>();\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 180,
        "bugNodeStartChar": 5493,
        "bugNodeLength": 17,
        "fixLineNum": 180,
        "fixNodeStartChar": 5493,
        "fixNodeLength": 26,
        "sourceBeforeFix": "System.nanoTime()",
        "sourceAfterFix": "System.currentTimeMillis()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b9c0d31c3c2d6d6e91791308db92fd6a1cb5db43",
        "fixCommitParentSHA1": "41ab0faeedc4873d0ea32b20250e3ae913e96bbe",
        "bugFilePath": "testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\nindex 48a0618..e0a3493 100644\n--- a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n+++ b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n@@ -107,7 +107,7 @@\n             Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatusLine().getStatusCode());\n             Assert.assertEquals(2, Integer.parseInt(response.getFirstHeader(\"value\").getValue()));\n             // This won't be true unless we have somewhere to which to replicate\n-            Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n+            Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n             response.getEntity().getContent().close();\n         } finally {\n             client.getConnectionManager().shutdown();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 110,
        "bugNodeStartChar": 4726,
        "bugNodeLength": 85,
        "fixLineNum": 110,
        "fixNodeStartChar": 4726,
        "fixNodeLength": 84,
        "sourceBeforeFix": "Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))",
        "sourceAfterFix": "Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3e3515f2af47dc0c1f9c080a257edb56f5eb72a7",
        "fixCommitParentSHA1": "a49af9eeea26f6c409d845278eb9b38edf344914",
        "bugFilePath": "components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java",
        "fixPatch": "diff --git a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\nindex 4ed7ceb..85bb5f5 100644\n--- a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n+++ b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n@@ -113,7 +113,7 @@\n         if (node.getNodeType() == Node.ELEMENT_NODE) {\n             Document doc = node.getOwnerDocument();\n             if (((Element) node).getNamespaceURI().equals(BLUEPRINT_NS)) {\n-                doc.renameNode(node, SPRING_NS, node.getNodeName());\n+                doc.renameNode(node, SPRING_NS, node.getLocalName());\n             }\n         }\n         NodeList list = node.getChildNodes();\n@@ -133,19 +133,19 @@\n \n     public Metadata parse(Element element, ParserContext context) {\n         renameNamespaceRecursive(element);\n-        if (element.getNodeName().equals(CAMEL_CONTEXT)) {\n+        if (element.getLocalName().equals(CAMEL_CONTEXT)) {\n             return parseCamelContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(ROUTE_CONTEXT)) {\n+        if (element.getLocalName().equals(ROUTE_CONTEXT)) {\n             return parseRouteContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(KEY_STORE_PARAMETERS)) {\n+        if (element.getLocalName().equals(KEY_STORE_PARAMETERS)) {\n             return parseKeyStoreParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SECURE_RANDOM_PARAMETERS)) {\n+        if (element.getLocalName().equals(SECURE_RANDOM_PARAMETERS)) {\n             return parseSecureRandomParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SSL_CONTEXT_PARAMETERS)) {\n+        if (element.getLocalName().equals(SSL_CONTEXT_PARAMETERS)) {\n             return parseSSLContextParametersNode(element, context);\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 116,
        "bugNodeStartChar": 5579,
        "bugNodeLength": 18,
        "fixLineNum": 116,
        "fixNodeStartChar": 5579,
        "fixNodeLength": 19,
        "sourceBeforeFix": "node.getNodeName()",
        "sourceAfterFix": "node.getLocalName()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "678913db7377dc67b3cbe92f6c9c9e401b777d97",
        "fixCommitParentSHA1": "f7b6f9051a068a4714391b6d11686709ed6cce12",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\nindex 7632e5e..1e5788f 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/AsyncRecursiveWalker.java\n@@ -71,7 +71,7 @@\n                 else {\n                     callback.process(entry.getFileStatus(), entry.getBlockLocations());\n                 }\n-                if (future.isCancelled()) {\n+                if (future.isDone()) {\n                     return;\n                 }\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 74,
        "bugNodeStartChar": 2696,
        "bugNodeLength": 20,
        "fixLineNum": 74,
        "fixNodeStartChar": 2696,
        "fixNodeLength": 15,
        "sourceBeforeFix": "future.isCancelled()",
        "sourceAfterFix": "future.isDone()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "edc53a74553f19c2ec83ab7c12945758ba6084bf",
        "fixCommitParentSHA1": "3581a3350892a5c584a617d1b66cffdada4e17dd",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/Utils.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/Utils.java b/flink-java/src/main/java/org/apache/flink/api/java/Utils.java\nindex 44e176c..0184e58 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/Utils.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/Utils.java\n@@ -53,7 +53,7 @@\n \tpublic static String getCallLocationName(int depth) {\n \t\tStackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();\n \n-\t\tif (stackTrace.length < depth) {\n+\t\tif (stackTrace.length <= depth) {\n \t\t\treturn \"<unknown>\";\n \t\t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 56,
        "bugNodeStartChar": 2083,
        "bugNodeLength": 25,
        "fixLineNum": 56,
        "fixNodeStartChar": 2083,
        "fixNodeLength": 26,
        "sourceBeforeFix": "stackTrace.length < depth",
        "sourceAfterFix": "stackTrace.length <= depth"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "31f935ef6c2c57f5d98727c823a7317a5516e86f",
        "fixCommitParentSHA1": "65d51bdf063a479fa1b6e303ec91687f0c920823",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/meta/InodeFile.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/meta/InodeFile.java b/core/server/master/src/main/java/alluxio/master/file/meta/InodeFile.java\nindex 0f5eac5..6403b03 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/meta/InodeFile.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/meta/InodeFile.java\n@@ -178,7 +178,7 @@\n    * @return the updated object\n    */\n   public InodeFile setBlockIds(List<Long> blockIds) {\n-    mBlocks = new ArrayList<>(Preconditions.checkNotNull(blockIds));\n+    mBlocks = new ArrayList<>(Preconditions.checkNotNull(blockIds, \"blockIds\"));\n     return getThis();\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 181,
        "bugNodeStartChar": 5431,
        "bugNodeLength": 36,
        "fixLineNum": 181,
        "fixNodeStartChar": 5431,
        "fixNodeLength": 48,
        "sourceBeforeFix": "Preconditions.checkNotNull(blockIds)",
        "sourceAfterFix": "Preconditions.checkNotNull(blockIds,\"blockIds\")"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "src/com/google/javascript/jscomp/DisambiguateProperties.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex b27253b..dbb6384 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -412,7 +412,7 @@\n     // Do the actual renaming.\n     renameProperties();\n     // Update any getters and setters we renamed.\n-    GatherGettersAndSetterProperties.update(compiler, externs, root);\n+    GatherGetterAndSetterProperties.update(compiler, externs, root);\n   }\n \n   /** Returns the property for the given name, creating it if necessary. */\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 415,
        "bugNodeStartChar": 15227,
        "bugNodeLength": 64,
        "fixLineNum": 415,
        "fixNodeStartChar": 15227,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externs,root)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externs,root)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d2b1bc5c1f0762f06b72792cbf2885b40599d905",
        "fixCommitParentSHA1": "03eaeaf76d01f836c3a12e0c24f5ab9ca2701720",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 331,
        "bugNodeStartChar": 12651,
        "bugNodeLength": 26,
        "fixLineNum": 331,
        "fixNodeStartChar": 12651,
        "fixNodeLength": 27,
        "sourceBeforeFix": "Integer.valueOf(tokens[3])",
        "sourceAfterFix": "Integer.parseInt(tokens[3])"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "17de6689ab43b6d8fc8b60b87eb1155ba55b26f6",
        "fixCommitParentSHA1": "2f7214002dff9503f33a2f3ec20c36e069dbea2d",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java b/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java\nindex 9183196..181216c 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/initializer/VcapApplicationContextInitializer.java\n@@ -63,7 +63,7 @@\n  * to <code>vcap.application.*</code> in a fairly obvious way, and the VCAP_SERVICES\n  * object is unwrapped so that it is a hash of objects with key equal to the service\n  * instance name (e.g. \"mysql\" in the example above), and value equal to that instances\n- * properties, and then flattened in the smae way. E.g.\n+ * properties, and then flattened in the same way. E.g.\n  * \n  * <pre>\n  * vcap.application.instance_id: 2ce0ac627a6c8e47e936d829a3a47b5b\n@@ -81,6 +81,10 @@\n  * ...\n  * </pre>\n  * \n+ * N.B. this initializer is mainly intended for informational use (the application and\n+ * instance ids are particularly useful). For service binding you might find that Spring\n+ * Cloud is more convenient and more robust against potential changes in Cloud Foundry.\n+ * \n  * @author Dave Syer\n  */\n public class VcapApplicationContextInitializer implements\n@@ -93,7 +97,9 @@\n \n \tprivate static final String VCAP_SERVICES = \"VCAP_SERVICES\";\n \n-\tprivate int order = Integer.MIN_VALUE + 11;\n+\t// Intentionally before ConfigFileApplicationContextInitializer so values there can\n+\t// use these ones\n+\tprivate int order = Integer.MIN_VALUE + 9;\n \n \tprivate JsonParser parser = JsonParserFactory.getJsonParser();\n \n@@ -188,7 +194,7 @@\n \t\t\t}\n \t\t}\n \t\tcatch (Exception ex) {\n-\t\t\tlogger.error(\"Could not parse VCAP_APPLICATION\", ex);\n+\t\t\tlogger.error(\"Could not parse VCAP_SERVICES\", ex);\n \t\t}\n \t\treturn properties;\n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 96,
        "bugNodeStartChar": 4385,
        "bugNodeLength": 22,
        "fixLineNum": 98,
        "fixNodeStartChar": 4489,
        "fixNodeLength": 21,
        "sourceBeforeFix": "Integer.MIN_VALUE + 11",
        "sourceAfterFix": "Integer.MIN_VALUE + 9"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ebf33c6e3b3ec94965c07defe2e79f7edec7f64d",
        "fixCommitParentSHA1": "7b213d2c93eced9653915fe682685df0cf88457e",
        "bugFilePath": "transport/src/test/java/io/netty/channel/local/LocalTransportThreadModelTest.java",
        "fixPatch": "diff --git a/transport/src/test/java/io/netty/channel/local/LocalTransportThreadModelTest.java b/transport/src/test/java/io/netty/channel/local/LocalTransportThreadModelTest.java\nindex 2dfa9e0..6e5c339 100644\n--- a/transport/src/test/java/io/netty/channel/local/LocalTransportThreadModelTest.java\n+++ b/transport/src/test/java/io/netty/channel/local/LocalTransportThreadModelTest.java\n@@ -204,7 +204,7 @@\n         }\n     }\n \n-    @Test(timeout = 120000)\n+    @Test(timeout = 30000)\n     public void testConcurrentMessageBufferAccess() throws Throwable {\n         EventLoopGroup l = new LocalEventLoopGroup(4, new PrefixThreadFactory(\"l\"));\n         EventExecutorGroup e1 = new DefaultEventExecutorGroup(4, new PrefixThreadFactory(\"e1\"));\n",
        "projectName": "netty.netty",
        "bugLineNum": 207,
        "bugNodeStartChar": 8382,
        "bugNodeLength": 16,
        "fixLineNum": 207,
        "fixNodeStartChar": 8382,
        "fixNodeLength": 15,
        "sourceBeforeFix": "timeout=120000",
        "sourceAfterFix": "timeout=30000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c131546eaadd07baf950bd6a44d07ee42d109e4c",
        "fixCommitParentSHA1": "c27e2a77005db355da9e72656af8b0df8b1dfe75",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/AkkaInvocationHandler.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/AkkaInvocationHandler.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/AkkaInvocationHandler.java\nindex 863b780..cc54f2e 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/AkkaInvocationHandler.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/AkkaInvocationHandler.java\n@@ -84,7 +84,7 @@\n \n \t// null if gateway; otherwise non-null\n \t@Nullable\n-\tprivate final CompletableFuture<Boolean> terminationFuture;\n+\tprivate final CompletableFuture<Void> terminationFuture;\n \n \tAkkaInvocationHandler(\n \t\t\tString address,\n@@ -92,7 +92,7 @@\n \t\t\tActorRef rpcEndpoint,\n \t\t\tTime timeout,\n \t\t\tlong maximumFramesize,\n-\t\t\t@Nullable CompletableFuture<Boolean> terminationFuture) {\n+\t\t\t@Nullable CompletableFuture<Void> terminationFuture) {\n \n \t\tthis.address = Preconditions.checkNotNull(address);\n \t\tthis.hostname = Preconditions.checkNotNull(hostname);\n@@ -341,7 +341,7 @@\n \t}\n \n \t@Override\n-\tpublic CompletableFuture<Boolean> getTerminationFuture() {\n+\tpublic CompletableFuture<Void> getTerminationFuture() {\n \t\treturn terminationFuture;\n \t}\n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 344,
        "bugNodeStartChar": 11266,
        "bugNodeLength": 26,
        "fixLineNum": 344,
        "fixNodeStartChar": 11266,
        "fixNodeLength": 23,
        "sourceBeforeFix": "CompletableFuture<Boolean>",
        "sourceAfterFix": "CompletableFuture<Void>"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "e70cb13b07f5b2c17dec74a42c05e7e32bb33ffb",
        "fixCommitParentSHA1": "642d9c5035df84b563f702263306c11a68d350d1",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java\nindex 1da77ef..d3748e3 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java\n@@ -172,7 +172,7 @@\n     public DetailAST getLastChild()\n     {\n         AST ast = getFirstChild();\n-        while (ast.getNextSibling() != null) {\n+        while (ast != null && ast.getNextSibling() != null) {\n             ast = ast.getNextSibling();\n         }\n         return (DetailAST) ast;\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 175,
        "bugNodeStartChar": 5226,
        "bugNodeLength": 28,
        "fixLineNum": 175,
        "fixNodeStartChar": 5226,
        "fixNodeLength": 43,
        "sourceBeforeFix": "ast.getNextSibling() != null",
        "sourceAfterFix": "ast != null && ast.getNextSibling() != null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46941b16a30e493238924701f938cbf3318eb355",
        "fixCommitParentSHA1": "1d36bed3166504e5bde0c6e1e5b988cb70197875",
        "bugFilePath": "core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java",
        "fixPatch": "diff --git a/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java b/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\nindex 2841d1f..29b947d 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\n@@ -77,7 +77,7 @@\n    * @return A mapping from storage tier alias to blocks\n    */\n   public Map<String, List<Long>> getBlockList() {\n-    Preconditions.checkNotNull(mBlockIdsOnTiers);\n+    Preconditions.checkNotNull(mBlockIdsOnTiers, \"mBlockIdsOnTiers\");\n \n     return mBlockIdsOnTiers;\n   }\n@@ -128,7 +128,7 @@\n    * @return the number of blocks\n    */\n   public int getNumberOfBlocks() {\n-    Preconditions.checkNotNull(mBlockIdsOnTiers);\n+    Preconditions.checkNotNull(mBlockIdsOnTiers, \"mBlockIdsOnTiers\");\n \n     int numberOfBlocks = 0;\n     for (List<Long> blockIds : mBlockIdsOnTiers.values()) {\n@@ -168,7 +168,7 @@\n    * @param manager a block metadata manager handle\n    */\n   private BlockStoreMeta(BlockMetadataManager manager, boolean shouldIncludeBlockIds) {\n-    Preconditions.checkNotNull(manager);\n+    Preconditions.checkNotNull(manager, \"manager\");\n     for (StorageTier tier : manager.getTiers()) {\n       Long capacityBytes = mCapacityBytesOnTiers.get(tier.getTierAlias());\n       Long usedBytes = mUsedBytesOnTiers.get(tier.getTierAlias());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 131,
        "bugNodeStartChar": 4154,
        "bugNodeLength": 44,
        "fixLineNum": 131,
        "fixNodeStartChar": 4154,
        "fixNodeLength": 64,
        "sourceBeforeFix": "Preconditions.checkNotNull(mBlockIdsOnTiers)",
        "sourceAfterFix": "Preconditions.checkNotNull(mBlockIdsOnTiers,\"mBlockIdsOnTiers\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ccc86e9f1cddebc731ac1ccabdd469df11d72d8b",
        "fixCommitParentSHA1": "6cc1c179af5e48b97d66fd3bcbd23f6704d43f62",
        "bugFilePath": "flink-streaming-connectors/flink-connector-kafka-base/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java",
        "fixPatch": "diff --git a/flink-streaming-connectors/flink-connector-kafka-base/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java b/flink-streaming-connectors/flink-connector-kafka-base/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java\nindex 3ba8cff..660f24c 100644\n--- a/flink-streaming-connectors/flink-connector-kafka-base/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java\n+++ b/flink-streaming-connectors/flink-connector-kafka-base/src/test/java/org/apache/flink/streaming/connectors/kafka/KafkaConsumerTestBase.java\n@@ -357,7 +357,7 @@\n \t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createRemoteEnvironment(\"localhost\", flinkPort);\n \t\tenv.enableCheckpointing(500);\n \t\tenv.setParallelism(parallelism);\n-\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(3, 0));\n+\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0));\n \t\tenv.getConfig().disableSysoutLogging();\n \n \t\tFlinkKafkaConsumerBase<Integer> kafkaSource = kafkaServer.getConsumer(topic, schema, standardProps);\n@@ -402,7 +402,7 @@\n \t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createRemoteEnvironment(\"localhost\", flinkPort);\n \t\tenv.enableCheckpointing(500);\n \t\tenv.setParallelism(parallelism);\n-\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(3, 0));\n+\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0));\n \t\tenv.getConfig().disableSysoutLogging();\n \n \t\tFlinkKafkaConsumerBase<Integer> kafkaSource = kafkaServer.getConsumer(topic, schema, standardProps);\n@@ -447,7 +447,8 @@\n \t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createRemoteEnvironment(\"localhost\", flinkPort);\n \t\tenv.enableCheckpointing(500);\n \t\tenv.setParallelism(parallelism);\n-\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(3, 0));\n+\t\t// set the number of restarts to one. The failing mapper will fail once, then it's only success exceptions.\n+\t\tenv.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0));\n \t\tenv.getConfig().disableSysoutLogging();\n \t\tenv.setBufferTimeout(0);\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 360,
        "bugNodeStartChar": 15034,
        "bugNodeLength": 41,
        "fixLineNum": 360,
        "fixNodeStartChar": 15034,
        "fixNodeLength": 41,
        "sourceBeforeFix": "RestartStrategies.fixedDelayRestart(3,0)",
        "sourceAfterFix": "RestartStrategies.fixedDelayRestart(1,0)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "25c95d8dd9ec2d4e712aaeccedec306be41a3c8a",
        "fixCommitParentSHA1": "b04e6a3cbd6ab891caaf65c65c8011a96878668a",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java\nindex 783ade9..e23ea37 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java\n@@ -190,7 +190,7 @@\n       try {\n         regionLocation = reverseDNS(regionAddress);\n       } catch (NamingException e) {\n-        LOG.error(\"Cannot resolve the host name for \" + regionAddress + \" because of \" + e);\n+        LOG.warn(\"Cannot resolve the host name for \" + regionAddress + \" because of \" + e);\n         regionLocation = location.getHostname();\n       }\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 193,
        "bugNodeStartChar": 7600,
        "bugNodeLength": 83,
        "fixLineNum": 193,
        "fixNodeStartChar": 7600,
        "fixNodeLength": 82,
        "sourceBeforeFix": "LOG.error(\"Cannot resolve the host name for \" + regionAddress + \" because of \"+ e)",
        "sourceAfterFix": "LOG.warn(\"Cannot resolve the host name for \" + regionAddress + \" because of \"+ e)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "498da9e77cec4d5cb9dfbb1044cb9634f1ff0422",
        "fixCommitParentSHA1": "3e098f12e2b09d4954eeeaaf807e4ff6006a6929",
        "bugFilePath": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java",
        "fixPatch": "diff --git a/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java b/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\nindex 1dda41c..b0116e2 100644\n--- a/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\n+++ b/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\n@@ -381,7 +381,7 @@\n      * @return the updated dynamicState\n      */\n     private static DynamicState filterChangingBlobsFor(DynamicState dynamicState, final LocalAssignment assignment) {\n-        if (!dynamicState.changingBlobs.isEmpty()) {\n+        if (dynamicState.changingBlobs.isEmpty()) {\n             return dynamicState;\n         }\n \n",
        "projectName": "apache.storm",
        "bugLineNum": 384,
        "bugNodeStartChar": 18466,
        "bugNodeLength": 37,
        "fixLineNum": 384,
        "fixNodeStartChar": 18466,
        "fixNodeLength": 36,
        "sourceBeforeFix": "!dynamicState.changingBlobs.isEmpty()",
        "sourceAfterFix": "dynamicState.changingBlobs.isEmpty()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae",
        "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 1572,
        "bugNodeStartChar": 53035,
        "bugNodeLength": 26,
        "fixLineNum": 1572,
        "fixNodeStartChar": 53035,
        "fixNodeLength": 25,
        "sourceBeforeFix": "this.isDefaultAutoCommit()",
        "sourceAfterFix": "this.getDefaultReadOnly()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/JoinTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/JoinTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/JoinTest.java\nindex 1da230a..bf4a2f2 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/JoinTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/JoinTest.java\n@@ -37,7 +37,7 @@\n \t\tfinal Sink result = new Sink(\"result.json\").withInputs(join);\n \t\texpectedPlan.setSinks(result);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -63,7 +63,7 @@\n \t\tfinal Sink result = new Sink(\"result.json\").withInputs(join);\n \t\texpectedPlan.setSinks(result);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -91,6 +91,6 @@\n \t\tfinal Sink result = new Sink(\"result.json\").withInputs(join);\n \t\texpectedPlan.setSinks(result);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 66,
        "bugNodeStartChar": 2580,
        "bugNodeLength": 38,
        "fixLineNum": 66,
        "fixNodeStartChar": 2580,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9716d2ae673a576cb345c3bfb24cf71654d8f112",
        "fixCommitParentSHA1": "3181f10fb9e6b330d1effee25be3ef87872f8fa0",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\nindex 461ea4d..2595728 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\n@@ -189,7 +189,7 @@\n \t */\n \tprivate void poll() {\n \t\tif (invalidCredentials || this.myqOnlineData == null) {\n-\t\t\tlogger.debug(\"Invalid Account Credentials\");\n+\t\t\tlogger.trace(\"Invalid Account Credentials\");\n \t\t\treturn;\n \t\t}\n \n@@ -278,7 +278,7 @@\n \t@Override\n \tpublic void internalReceiveCommand(String itemName, Command command) {\n \t\tsuper.internalReceiveCommand(itemName, command);\n-\t\tlogger.debug(\"MyQ binding received command '{}' for item '{}'\",\n+\t\tlogger.trace(\"MyQ binding received command '{}' for item '{}'\",\n \t\t\t\tcommand, itemName);\n \t\tif (myqOnlineData != null) {\n \t\t\tcomputeCommandForItem(command, itemName);\n@@ -357,7 +357,7 @@\n \t\tif (pollFuture != null && !pollFuture.isCancelled())\n \t\t\tpollFuture.cancel(false);\n \n-\t\tlogger.debug(\"rapidRefreshFuture scheduleing for {} millis\", millis);\n+\t\tlogger.trace(\"rapidRefreshFuture scheduleing for {} millis\", millis);\n \t\t// start polling at the RAPID_REFRESH_SECS interval\n \t\tpollFuture = pollService.scheduleAtFixedRate(new Runnable() {\n \t\t\t@Override\n@@ -374,7 +374,7 @@\n \t\t// stop rapid polling after MAX_RAPID_REFRESH_SECS\n \t\tpollResetFuture = pollService.schedule(new Runnable() {\n \t\t\tpublic void run() {\n-\t\t\t\tlogger.debug(\"rapidRefreshFutureEnd stopping\");\n+\t\t\t\tlogger.trace(\"rapidRefreshFutureEnd stopping\");\n \t\t\t\tschedulePoll(refreshInterval);\n \t\t\t}\n \t\t}, MAX_RAPID_REFRESH, TimeUnit.MILLISECONDS);\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 281,
        "bugNodeStartChar": 8765,
        "bugNodeLength": 86,
        "fixLineNum": 281,
        "fixNodeStartChar": 8765,
        "fixNodeLength": 86,
        "sourceBeforeFix": "logger.debug(\"MyQ binding received command '{}' for item '{}'\",command,itemName)",
        "sourceAfterFix": "logger.trace(\"MyQ binding received command '{}' for item '{}'\",command,itemName)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 140,
        "bugNodeStartChar": 4480,
        "bugNodeLength": 7,
        "fixLineNum": 140,
        "fixNodeStartChar": 4480,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=40",
        "sourceAfterFix": "id=38"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "a54448506ee6ded4a008da42657771f26dd80b06",
        "fixCommitParentSHA1": "a899d5ff801aadd8292262f28334350cc7ead048",
        "bugFilePath": "components/camel-asterisk/src/main/java/org/apache/camel/component/asterisk/AsteriskEndpoint.java",
        "fixPatch": "diff --git a/components/camel-asterisk/src/main/java/org/apache/camel/component/asterisk/AsteriskEndpoint.java b/components/camel-asterisk/src/main/java/org/apache/camel/component/asterisk/AsteriskEndpoint.java\nindex b75dc5d..629a24d 100644\n--- a/components/camel-asterisk/src/main/java/org/apache/camel/component/asterisk/AsteriskEndpoint.java\n+++ b/components/camel-asterisk/src/main/java/org/apache/camel/component/asterisk/AsteriskEndpoint.java\n@@ -95,7 +95,7 @@\n     }\n \n     public boolean isSingleton() {\n-        return true;\n+        return false;\n     }\n \n     public void addListener(ManagerEventListener listener) throws CamelAsteriskException {\n",
        "projectName": "apache.camel",
        "bugLineNum": 98,
        "bugNodeStartChar": 3252,
        "bugNodeLength": 12,
        "fixLineNum": 98,
        "fixNodeStartChar": 3252,
        "fixNodeLength": 13,
        "sourceBeforeFix": "return true; ",
        "sourceAfterFix": "return false; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "72f919246228950fb80eee5c119292bed331633e",
        "fixCommitParentSHA1": "440ac60d2c8128b9142258c864ec8d780260caf6",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\nindex ca8925e..131ee08 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\n@@ -244,7 +244,7 @@\n         try {\n             if (!isResumed.getAndSet(true) && isInScope.get()) {\n                 suspended.set(false);\n-                logger.debug(\"AtmosphereResource {} is resuming\", uuid());\n+                logger.trace(\"AtmosphereResource {} is resuming\", uuid());\n \n                 action.type(Action.TYPE.RESUME);\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 247,
        "bugNodeStartChar": 8970,
        "bugNodeLength": 57,
        "fixLineNum": 247,
        "fixNodeStartChar": 8970,
        "fixNodeLength": 57,
        "sourceBeforeFix": "logger.debug(\"AtmosphereResource {} is resuming\",uuid())",
        "sourceAfterFix": "logger.trace(\"AtmosphereResource {} is resuming\",uuid())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "f6872713218d72d251ba6c1cff02208e629072e0",
        "fixCommitParentSHA1": "d8c7ae54e0555a95ad7154ce6937d738a1b46158",
        "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java",
        "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\nindex 86c623d..d83a146 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java\n@@ -121,7 +121,7 @@\n     private static final String DATA_LABORATORY_EDGES_NODES_LABELS = \"DataLaboratory_showEdgesNodesLabels\";\n     private static final Color invalidFilterColor = new Color(254, 150, 150);\n     private final boolean dynamicFiltering;\n-    private boolean visibleOnly = false;\n+    private boolean visibleOnly = true;\n     private boolean useSparklines = false;\n     private boolean timeIntervalGraphics = false;\n     private boolean showEdgesNodesLabels = false;\n@@ -150,7 +150,7 @@\n \n         //Get saved preferences if existing:\n         dynamicFiltering = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_DYNAMIC_FILTERING, true);\n-        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, false);\n+        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, true);\n         useSparklines = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_SPARKLINES, false);\n         timeIntervalGraphics = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_TIME_INTERVAL_GRAPHICS, false);\n         showEdgesNodesLabels = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_EDGES_NODES_LABELS, false);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 153,
        "bugNodeStartChar": 7273,
        "bugNodeLength": 100,
        "fixLineNum": 153,
        "fixNodeStartChar": 7273,
        "fixNodeLength": 99,
        "sourceBeforeFix": "NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,false)",
        "sourceAfterFix": "NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f4ab483493a6b24e9a991c03cfd5b0b5cdcbff69",
        "fixCommitParentSHA1": "c0c8be71934de526270e4f3fbb5cb1adc9abf77b",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 88fd28a..dc87c3f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -60,7 +60,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     @Override\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 63,
        "bugNodeStartChar": 2330,
        "bugNodeLength": 59,
        "fixLineNum": 63,
        "fixNodeStartChar": 2330,
        "fixNodeLength": 56,
        "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
        "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "6b754d327bdb7a778c37543e6ddeb830df851402",
        "fixCommitParentSHA1": "d7a44052b65132cc00368cdd7c231588adab714c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 58c4727..f494016 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -1631,8 +1631,10 @@\n                 .distinct()\n                 .collect(toImmutableList());\n \n-        // is this an aggregation query?\n-        if (!aggregates.isEmpty() || !allGroupingColumns.isEmpty()) {\n+        // check if:\n+        // - aggregation is present: SELECT SUM(x) FROM table; or\n+        // - group by is present: SELECT ... FROM table GROUP BY category\n+        if (!aggregates.isEmpty() || !groupingSets.isEmpty()) {\n             // ensure SELECT, ORDER BY and HAVING are constant with respect to group\n             // e.g, these are all valid expressions:\n             //     SELECT f(a) GROUP BY a\n",
        "projectName": "facebook.presto",
        "bugLineNum": 1635,
        "bugNodeStartChar": 81106,
        "bugNodeLength": 28,
        "fixLineNum": 1637,
        "fixNodeStartChar": 81226,
        "fixNodeLength": 22,
        "sourceBeforeFix": "allGroupingColumns.isEmpty()",
        "sourceAfterFix": "groupingSets.isEmpty()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926",
        "fixCommitParentSHA1": "1b31f4d19df1fabc7aaee5837f4d2c3439819495",
        "bugFilePath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
        "fixPatch": "diff --git a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\nindex 7cab2df..86b3322 100644\n--- a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n+++ b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n@@ -353,10 +353,10 @@\n \t * \n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> print() {\n+\tpublic DataStreamSink<OUT> print() {\n \t\tDataStream<OUT> inputStream = this.copy();\n \t\tPrintSinkFunction<OUT> printFunction = new PrintSinkFunction<OUT>();\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, printFunction, null);\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, printFunction, null);\n \n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \n@@ -373,7 +373,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}\n \n@@ -390,7 +390,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}\n \n@@ -408,7 +408,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}\n \n@@ -430,7 +430,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, endTuple);\n \t}\n \n@@ -453,7 +453,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, endTuple);\n \t}\n \n@@ -475,9 +475,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -503,9 +503,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -522,7 +522,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), 1, null);\n \t}\n \n@@ -539,7 +539,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, null);\n \t}\n \n@@ -557,7 +557,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), batchSize, null);\n \t}\n \n@@ -579,7 +579,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, endTuple);\n \t}\n \n@@ -602,7 +602,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}\n@@ -627,9 +627,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple));\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -655,9 +655,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -792,18 +792,18 @@\n \t *            The object containing the sink's invoke function.\n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n+\tpublic DataStreamSink<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(this.copy(), sinkFunction);\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(inputStream, sinkFunction, new FunctionTypeWrapper<OUT, Tuple, OUT>(\n \t\t\t\tsinkFunction, SinkFunction.class, 0, -1, 0));\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n \t\t\tTypeSerializerWrapper<OUT, Tuple, OUT> typeWrapper) {\n-\t\tDataStream<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n+\t\tDataStreamSink<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n \n \t\ttry {\n \t\t\tjobGraphBuilder.addSink(returnStream.getId(), new SinkInvokable<OUT>(sinkFunction),\n",
        "projectName": "apache.flink",
        "bugLineNum": 806,
        "bugNodeStartChar": 31059,
        "bugNodeLength": 15,
        "fixLineNum": 806,
        "fixNodeStartChar": 31059,
        "fixNodeLength": 19,
        "sourceBeforeFix": "DataStream<OUT>",
        "sourceAfterFix": "DataStreamSink<OUT>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 749,
        "bugNodeStartChar": 25322,
        "bugNodeLength": 84,
        "fixLineNum": 749,
        "fixNodeStartChar": 24574,
        "fixNodeLength": 86,
        "sourceBeforeFix": "GL20.glUniformMatrix2(location,transpose,toFloatBuffer(value,offset,count << 2))",
        "sourceAfterFix": "GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "37a968f250d8e6b6cfadebb046f2eb1295cd95e4",
        "fixCommitParentSHA1": "df2638313bd7851fdba629ea00cd0192a895b356",
        "bugFilePath": "api/src/main/java/org/openmrs/module/ModuleFactory.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/module/ModuleFactory.java b/api/src/main/java/org/openmrs/module/ModuleFactory.java\nindex 177b4c1..efe40d4 100644\n--- a/api/src/main/java/org/openmrs/module/ModuleFactory.java\n+++ b/api/src/main/java/org/openmrs/module/ModuleFactory.java\n@@ -1093,7 +1093,7 @@\n \t\t\t\tif (mod.getModuleActivator() != null)// if extends BaseModuleActivator\n \t\t\t\t\tmod.getModuleActivator().willStop();\n \t\t\t}\n-\t\t\tcatch (Throwable t) {\n+\t\t\tcatch (Exception t) {\n \t\t\t\tlog.warn(\"Unable to call module's Activator.willStop() method\", t);\n \t\t\t}\n \t\t\t\n@@ -1154,12 +1154,12 @@\n \t\t\t\t\t\t\t\tContext.removeAdvice(cls, (Advice) aopObject);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (Throwable t) {\n+\t\t\t\t\t\tcatch (Exception t) {\n \t\t\t\t\t\t\tlog.warn(\"Could not remove advice point: \" + advice.getPoint(), t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tcatch (Throwable t) {\n+\t\t\t\tcatch (Exception t) {\n \t\t\t\t\tlog.warn(\"Error while getting advicePoints from module: \" + moduleId, t);\n \t\t\t\t}\n \t\t\t\t\n@@ -1180,7 +1180,7 @@\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tcatch (Throwable t) {\n+\t\t\t\tcatch (Exception t) {\n \t\t\t\t\tlog.warn(\"Error while getting extensions from module: \" + moduleId, t);\n \t\t\t\t}\n \t\t\t}\n@@ -1199,7 +1199,7 @@\n \t\t\t\telse\n \t\t\t\t\tmod.getActivator().shutdown();//implements old  Activator interface\n \t\t\t}\n-\t\t\tcatch (Throwable t) {\n+\t\t\tcatch (Exception t) {\n \t\t\t\tlog.warn(\"Unable to call module's Activator.shutdown() method\", t);\n \t\t\t}\n \t\t\t\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 1096,
        "bugNodeStartChar": 37581,
        "bugNodeLength": 11,
        "fixLineNum": 1096,
        "fixNodeStartChar": 37581,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Throwable t",
        "sourceAfterFix": "Exception t"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/AmbiguateProperties.java b/src/com/google/javascript/jscomp/AmbiguateProperties.java\nindex 2712dda..5da59da 100644\n--- a/src/com/google/javascript/jscomp/AmbiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/AmbiguateProperties.java\n@@ -234,7 +234,7 @@\n     }\n \n     // We may have renamed getter / setter properties.\n-    GatherGettersAndSetterProperties.update(compiler, externs, root);\n+    GatherGetterAndSetterProperties.update(compiler, externs, root);\n \n     if (logger.isLoggable(Level.FINE)) {\n       logger.fine(\"Collapsed \" + numRenamedPropertyNames + \" properties into \"\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 237,
        "bugNodeStartChar": 8483,
        "bugNodeLength": 64,
        "fixLineNum": 237,
        "fixNodeStartChar": 8483,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externs,root)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externs,root)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "0656040933973f55afa8b6e8f53140b6f76b7446",
        "fixCommitParentSHA1": "9a5f1c2448fcffb449a753160ef453a430e21847",
        "bugFilePath": "standalone-metastore/metastore-common/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java",
        "fixPatch": "diff --git a/standalone-metastore/metastore-common/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java b/standalone-metastore/metastore-common/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java\nindex 7ab64ea..47f96f3 100644\n--- a/standalone-metastore/metastore-common/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java\n+++ b/standalone-metastore/metastore-common/src/gen/thrift/gen-javabean/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore.java\n@@ -206576,7 +206576,7 @@\n   @org.apache.hadoop.classification.InterfaceAudience.Public @org.apache.hadoop.classification.InterfaceStability.Stable public static class add_write_notification_log_args implements org.apache.thrift.TBase<add_write_notification_log_args, add_write_notification_log_args._Fields>, java.io.Serializable, Cloneable, Comparable<add_write_notification_log_args>   {\n     private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"add_write_notification_log_args\");\n \n-    private static final org.apache.thrift.protocol.TField RQST_FIELD_DESC = new org.apache.thrift.protocol.TField(\"rqst\", org.apache.thrift.protocol.TType.STRUCT, (short)-1);\n+    private static final org.apache.thrift.protocol.TField RQST_FIELD_DESC = new org.apache.thrift.protocol.TField(\"rqst\", org.apache.thrift.protocol.TType.STRUCT, (short)1);\n \n     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();\n     static {\n@@ -206588,7 +206588,7 @@\n \n     /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\n     public enum _Fields implements org.apache.thrift.TFieldIdEnum {\n-      RQST((short)-1, \"rqst\");\n+      RQST((short)1, \"rqst\");\n \n       private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();\n \n@@ -206603,7 +206603,7 @@\n        */\n       public static _Fields findByThriftId(int fieldId) {\n         switch(fieldId) {\n-          case -1: // RQST\n+          case 1: // RQST\n             return RQST;\n           default:\n             return null;\n@@ -206868,7 +206868,7 @@\n             break;\n           }\n           switch (schemeField.id) {\n-            case -1: // RQST\n+            case 1: // RQST\n               if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                 struct.rqst = new WriteNotificationLogRequest();\n                 struct.rqst.read(iprot);\n",
        "projectName": "apache.hive",
        "bugLineNum": 206591,
        "bugNodeStartChar": 7301443,
        "bugNodeLength": 2,
        "fixLineNum": 206591,
        "fixNodeStartChar": 7301443,
        "fixNodeLength": 1,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b19495efb6fc2f8d656141a46ff61bea8a5731b3",
        "fixCommitParentSHA1": "80a19d640cfe6505889a612f6ee9e5780fbd0c0d",
        "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java",
        "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\nindex 22057c8..a520c9f 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/LdapSimbaJdbcTests.java\n@@ -45,7 +45,7 @@\n     private static final String MALFORMED_CREDENTIALS_ERROR =\n             \"[Teradata][Presto](100240) Authentication failed: Malformed decoded credentials.\";\n     private static final String UNAUTHORIZED_USER_ERROR =\n-            \"[Teradata][Presto](100240) Authentication failed: Unknown reason.\";\n+            \"[Teradata][Presto](100240) Authentication failed: Unauthorized user.\";\n     private static final String INVALID_SSL_PROPERTY =\n             \"[Teradata][Presto](100200) Connection string is invalid: SSL value is not valid for given AuthenticationType.\";\n \n@@ -138,7 +138,7 @@\n     @Test(groups = {LDAP, SIMBA_JDBC, PROFILE_SPECIFIC_TESTS}, timeOut = TIMEOUT)\n     public void shouldFailForUserWithColon()\n     {\n-        expectQueryToFail(\"UserWith:Colon\", ldapUserPassword, INVALID_CREDENTIALS_ERROR);\n+        expectQueryToFail(\"UserWith:Colon\", ldapUserPassword, MALFORMED_CREDENTIALS_ERROR);\n     }\n \n     private void expectQueryToFailForUserNotInGroup(String user)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 141,
        "bugNodeStartChar": 6021,
        "bugNodeLength": 80,
        "fixLineNum": 141,
        "fixNodeStartChar": 6021,
        "fixNodeLength": 82,
        "sourceBeforeFix": "expectQueryToFail(\"UserWith:Colon\",ldapUserPassword,INVALID_CREDENTIALS_ERROR)",
        "sourceAfterFix": "expectQueryToFail(\"UserWith:Colon\",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "466bd55e92d40e7193aa1ffd28c823d66aeb0ab6",
        "fixCommitParentSHA1": "89410aa6c5cf375228fd85ab919d0d1497c99416",
        "bugFilePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java",
        "fixPatch": "diff --git a/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java b/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\nindex 4558844..a0599ee 100644\n--- a/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\n+++ b/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\n@@ -516,7 +516,7 @@\n     }\n \n     public static int convertExpireField(String timestring) {\n-        String trimmedTimeString = removeQuote(timestring.trim());\n+        String trimmedTimeString = removeQuotes(timestring.trim());\n \n         for (SimpleDateFormat sdf : simpleDateFormat.get()) {\n             Date date = sdf.parse(trimmedTimeString, new ParsePosition(0));\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 519,
        "bugNodeStartChar": 18443,
        "bugNodeLength": 30,
        "fixLineNum": 519,
        "fixNodeStartChar": 18443,
        "fixNodeLength": 31,
        "sourceBeforeFix": "removeQuote(timestring.trim())",
        "sourceAfterFix": "removeQuotes(timestring.trim())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe",
        "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583",
        "bugFilePath": "src/jvm/clojure/lang/Numbers.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 1470,
        "bugNodeStartChar": 32135,
        "bugNodeLength": 9,
        "fixLineNum": 1470,
        "fixNodeStartChar": 32135,
        "fixNodeLength": 11,
        "sourceBeforeFix": "s.count()",
        "sourceAfterFix": "RT.count(s)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "447d89a336e0b343fa548c6ddabcf18a6345bc53",
        "fixCommitParentSHA1": "d5f6fd873a28fdc8d63920f4170059754a3a7b95",
        "bugFilePath": "src/com/google/javascript/jscomp/DiagnosticGroups.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DiagnosticGroups.java b/src/com/google/javascript/jscomp/DiagnosticGroups.java\nindex 1980d7a..9941989 100644\n--- a/src/com/google/javascript/jscomp/DiagnosticGroups.java\n+++ b/src/com/google/javascript/jscomp/DiagnosticGroups.java\n@@ -543,7 +543,9 @@\n \n   public static final DiagnosticGroup FUNCTION_PARAMS =\n       DiagnosticGroups.registerGroup(\n-          \"functionParams\", FunctionTypeBuilder.OPTIONAL_ARG_AT_END);\n+          \"functionParams\",\n+          FunctionTypeBuilder.INEXISTENT_PARAM,\n+          FunctionTypeBuilder.OPTIONAL_ARG_AT_END);\n \n   public static final DiagnosticGroup DEPRECATED_ANNOTATIONS =\n       DiagnosticGroups.registerGroup(\"deprecatedAnnotations\",\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 545,
        "bugNodeStartChar": 23431,
        "bugNodeLength": 100,
        "fixLineNum": 545,
        "fixNodeStartChar": 23431,
        "fixNodeLength": 158,
        "sourceBeforeFix": "DiagnosticGroups.registerGroup(\"functionParams\",FunctionTypeBuilder.OPTIONAL_ARG_AT_END)",
        "sourceAfterFix": "DiagnosticGroups.registerGroup(\"functionParams\",FunctionTypeBuilder.INEXISTENT_PARAM,FunctionTypeBuilder.OPTIONAL_ARG_AT_END)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b7e092e821021b7c0dbd91eacfe369181bfa28b8",
        "fixCommitParentSHA1": "73cd1c9c772a4618c64160f6df24b96c74f51d9d",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\nindex ad8a11f..27aaa43 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n@@ -69,7 +69,7 @@\n \t\tRSocketWebSocketNettyRouteProvider rSocketWebsocketRouteProvider(RSocketProperties properties,\n \t\t\t\tRSocketMessageHandler messageHandler) {\n \t\t\treturn new RSocketWebSocketNettyRouteProvider(properties.getServer().getMappingPath(),\n-\t\t\t\t\tmessageHandler.serverAcceptor());\n+\t\t\t\t\tmessageHandler.serverResponder());\n \t\t}\n \n \t}\n@@ -101,7 +101,7 @@\n \t\t@ConditionalOnMissingBean\n \t\tRSocketServerBootstrap rSocketServerBootstrap(RSocketServerFactory rSocketServerFactory,\n \t\t\t\tRSocketMessageHandler rSocketMessageHandler) {\n-\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverAcceptor());\n+\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverResponder());\n \t\t}\n \n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 72,
        "bugNodeStartChar": 3551,
        "bugNodeLength": 31,
        "fixLineNum": 72,
        "fixNodeStartChar": 3551,
        "fixNodeLength": 32,
        "sourceBeforeFix": "messageHandler.serverAcceptor()",
        "sourceAfterFix": "messageHandler.serverResponder()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ddb6e83f170ced7f2746d5ad81e0086d7087b9f1",
        "fixCommitParentSHA1": "99127a214adeed1594d3df96369782563c43250a",
        "bugFilePath": "services/src/main/java/io/druid/guice/RealtimeModule.java",
        "fixPatch": "diff --git a/services/src/main/java/io/druid/guice/RealtimeModule.java b/services/src/main/java/io/druid/guice/RealtimeModule.java\nindex 04f897a..276f850 100644\n--- a/services/src/main/java/io/druid/guice/RealtimeModule.java\n+++ b/services/src/main/java/io/druid/guice/RealtimeModule.java\n@@ -48,13 +48,13 @@\n         binder,\n         \"druid.publish.type\",\n         Key.get(SegmentPublisher.class),\n-        Key.get(NoopSegmentPublisher.class)\n+        Key.get(DbSegmentPublisher.class)\n     );\n     final MapBinder<String, SegmentPublisher> publisherBinder = PolyBind.optionBinder(\n         binder,\n         Key.get(SegmentPublisher.class)\n     );\n-    publisherBinder.addBinding(\"db\").to(DbSegmentPublisher.class);\n+    publisherBinder.addBinding(\"noop\").to(NoopSegmentPublisher.class);\n     binder.bind(DbSegmentPublisher.class).in(LazySingleton.class);\n \n     JsonConfigProvider.bind(binder, \"druid.realtime\", RealtimeManagerConfig.class);\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 51,
        "bugNodeStartChar": 1785,
        "bugNodeLength": 26,
        "fixLineNum": 51,
        "fixNodeStartChar": 1785,
        "fixNodeLength": 24,
        "sourceBeforeFix": "NoopSegmentPublisher.class",
        "sourceAfterFix": "DbSegmentPublisher.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "adb55e4806f0f4df52f9fff937ca9785b79228bb",
        "fixCommitParentSHA1": "16c8f2ccd1c8c0487b2de0eaee0b1eea72f575a0",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/MapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/MapService.java b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\nindex 9d3384d..6c914bb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n@@ -412,12 +412,12 @@\n         if (shouldSchedule) {\n             // if ttl is 0 then no eviction. if ttl is -1 then default configured eviction is applied\n             if (ttl < 0 && mapContainer.getMapConfig().getTimeToLiveSeconds() > 0) {\n-                scheduleTtlEviction(name, record, mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000);\n+                scheduleTtlEviction(name, record, mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L);\n             } else if (ttl > 0) {\n                 scheduleTtlEviction(name, record, ttl);\n             }\n             if (mapContainer.getMapConfig().getMaxIdleSeconds() > 0) {\n-                scheduleIdleEviction(name, dataKey, mapContainer.getMapConfig().getMaxIdleSeconds() * 1000);\n+                scheduleIdleEviction(name, dataKey, mapContainer.getMapConfig().getMaxIdleSeconds() * 1000L);\n             }\n         }\n         return record;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 415,
        "bugNodeStartChar": 19030,
        "bugNodeLength": 57,
        "fixLineNum": 415,
        "fixNodeStartChar": 19030,
        "fixNodeLength": 58,
        "sourceBeforeFix": "mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000",
        "sourceAfterFix": "mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d8d9e5711a908603f73f92872b127fe4d7ab4a15",
        "fixCommitParentSHA1": "cd6414e41c13cab60abb983a480dd9be2e7c389a",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/ManagedProducerRouteAddRemoveRegisterAlwaysTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/ManagedProducerRouteAddRemoveRegisterAlwaysTest.java b/camel-core/src/test/java/org/apache/camel/management/ManagedProducerRouteAddRemoveRegisterAlwaysTest.java\nindex f774bf6..55bd69f 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/ManagedProducerRouteAddRemoveRegisterAlwaysTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/ManagedProducerRouteAddRemoveRegisterAlwaysTest.java\n@@ -29,7 +29,7 @@\n  */\n public class ManagedProducerRouteAddRemoveRegisterAlwaysTest extends ManagementTestSupport {\n \n-    private int services = 8;\n+    private int services = 9;\n \n     @Override\n     protected CamelContext createCamelContext() throws Exception {\n",
        "projectName": "apache.camel",
        "bugLineNum": 32,
        "bugNodeStartChar": 1206,
        "bugNodeLength": 12,
        "fixLineNum": 32,
        "fixNodeStartChar": 1206,
        "fixNodeLength": 12,
        "sourceBeforeFix": "services=8",
        "sourceAfterFix": "services=9"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "af87fe0e2580cafb6b563688f119b3d40ae100f2",
        "fixCommitParentSHA1": "a98d4bec0586a7d7982120c3557d89224fe48760",
        "bugFilePath": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\nindex cceeae5..7b2ef5d 100644\n--- a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n+++ b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n@@ -180,7 +180,7 @@\n     }\n \n     private static ModelControllerClient createClient2() throws UnknownHostException {\n-        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddress()),\n+        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddressNode1()),\n                 TestSuiteEnvironment.getServerPort() + 300,\n                 Authentication.getCallbackHandler());\n     }\n@@ -239,7 +239,8 @@\n                     new ModelNode[] { removeDwm, removeContext });\n             mcc.execute(compositeOp);\n             ServerReload.executeReloadAndWaitForCompletion(mcc, 60000, false,\n-                    TestSuiteEnvironment.getServerAddress(), serverPort);\n+                    CONTAINER_0.equals(containerId) ? TestSuiteEnvironment.getServerAddress() : TestSuiteEnvironment.getServerAddressNode1(),\n+                    serverPort);\n         }\n \n         protected abstract Policy getPolicy();\n@@ -333,7 +334,7 @@\n     @Before\n     public void setUpAdminObjects() throws NamingException {\n         server1Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8280\");\n-        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8380\");\n+        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddressNode1(), \"8380\");\n         Assert.assertNotNull(server1Proxy);\n         Assert.assertNotNull(server2Proxy);\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 183,
        "bugNodeStartChar": 8446,
        "bugNodeLength": 39,
        "fixLineNum": 183,
        "fixNodeStartChar": 8446,
        "fixNodeLength": 44,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getServerAddressNode1()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "9b65f21aa8be862a861b64cb03dee1d9ae9440a6",
        "fixCommitParentSHA1": "62b84036b89056a0c9b8ac0d61eb25f1b3a954a5",
        "bugFilePath": "hazelcast-ra/hazelcast-jca/src/main/java/com/hazelcast/jca/HazelcastConnectionImpl.java",
        "fixPatch": "diff --git a/hazelcast-ra/hazelcast-jca/src/main/java/com/hazelcast/jca/HazelcastConnectionImpl.java b/hazelcast-ra/hazelcast-jca/src/main/java/com/hazelcast/jca/HazelcastConnectionImpl.java\nindex 89f1836..8a7c8cb 100644\n--- a/hazelcast-ra/hazelcast-jca/src/main/java/com/hazelcast/jca/HazelcastConnectionImpl.java\n+++ b/hazelcast-ra/hazelcast-jca/src/main/java/com/hazelcast/jca/HazelcastConnectionImpl.java\n@@ -104,8 +104,7 @@\n      */\n     @Override\n     public ResultSetInfo getResultSetInfo() throws NotSupportedException {\n-        //as per spec 15.11.3\n-        throw new NotSupportedException();\n+        throw new NotSupportedException(\"getResultSetInfo() is not supported by this resource adapter as per spec 15.11.3\");\n     }\n \n     @Override\n@@ -333,12 +332,12 @@\n \n     @Override\n     public LifecycleService getLifecycleService() {\n-        throw new UnsupportedOperationException(\"Hazelcast Lifecycle is only managed by JEE Container\");\n+        throw new UnsupportedOperationException(\"Hazelcast Lifecycle is only managed by JCA Container\");\n     }\n \n     @Override\n     public void shutdown() {\n-        throw new UnsupportedOperationException(\"Hazelcast Lifecycle is only managed by JEE Container\");\n+        throw new UnsupportedOperationException(\"Hazelcast Lifecycle is only managed by JCA Container\");\n     }\n \n     @Override\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 108,
        "bugNodeStartChar": 3831,
        "bugNodeLength": 27,
        "fixLineNum": 107,
        "fixNodeStartChar": 3801,
        "fixNodeLength": 109,
        "sourceBeforeFix": "new NotSupportedException()",
        "sourceAfterFix": "new NotSupportedException(\"getResultSetInfo() is not supported by this resource adapter as per spec 15.11.3\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3841ff0cd87dd048dff43379df81153ed9bcf265",
        "fixCommitParentSHA1": "7d6e8e06aac1ca273f180c38456922e77443811b",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_TimeoutTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_TimeoutTest.java b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_TimeoutTest.java\nindex 97106e4..17dca90 100644\n--- a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_TimeoutTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_TimeoutTest.java\n@@ -298,7 +298,7 @@\n \n     @Test\n     public void sync_whenCallTimeout_thenOperationTimeoutException() throws Exception {\n-        long callTimeoutMs = 5000;\n+        long callTimeoutMs = 10000;\n         Config config = new Config().setProperty(GroupProperty.OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeoutMs);\n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n         HazelcastInstance local = factory.newHazelcastInstance(config);\n@@ -308,9 +308,9 @@\n         OperationService opService = getOperationService(local);\n \n         int partitionId = getPartitionId(remote);\n-        opService.invokeOnPartition(null, new SlowOperation(callTimeoutMs * 2), partitionId);\n+        opService.invokeOnPartition(new SlowOperation(callTimeoutMs * 2).setPartitionId(partitionId));\n \n-        Future f = opService.invokeOnPartition(null, new DummyOperation(), partitionId);\n+        Future f = opService.invokeOnPartition(new DummyOperation().setPartitionId(partitionId));\n \n         try {\n             f.get(3 * callTimeoutMs, MILLISECONDS);\n@@ -324,7 +324,7 @@\n \n     @Test\n     public void async_whenCallTimeout_thenOperationTimeoutException() throws Exception {\n-        long callTimeoutMs = 5000;\n+        long callTimeoutMs = 10000;\n         Config config = new Config().setProperty(GroupProperty.OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeoutMs);\n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n         HazelcastInstance local = factory.newHazelcastInstance(config);\n@@ -334,9 +334,9 @@\n         OperationService opService = getOperationService(local);\n \n         int partitionId = getPartitionId(remote);\n-        opService.invokeOnPartition(null, new SlowOperation(callTimeoutMs * 2), partitionId);\n+        opService.invokeOnPartition(new SlowOperation(callTimeoutMs * 2).setPartitionId(partitionId));\n \n-        ICompletableFuture f = opService.invokeOnPartition(null, new DummyOperation(), partitionId);\n+        ICompletableFuture f = opService.invokeOnPartition(new DummyOperation().setPartitionId(partitionId));\n \n         ExecutionCallback callback = mock(ExecutionCallback.class);\n         f.andThen(callback);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 327,
        "bugNodeStartChar": 14877,
        "bugNodeLength": 20,
        "fixLineNum": 327,
        "fixNodeStartChar": 14877,
        "fixNodeLength": 21,
        "sourceBeforeFix": "callTimeoutMs=5000",
        "sourceAfterFix": "callTimeoutMs=10000"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 394,
        "bugNodeStartChar": 12825,
        "bugNodeLength": 30,
        "fixLineNum": 394,
        "fixNodeStartChar": 12432,
        "fixNodeLength": 31,
        "sourceBeforeFix": "GL11.glGetFloat(pname,params)",
        "sourceAfterFix": "GL11.glGetFloatv(pname,params)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "a95dd903c7b82b0934e8ecf81af9a01629f34a29",
        "fixCommitParentSHA1": "d9c072de4c22d763836e83b93725c8b7aa0e9502",
        "bugFilePath": "test/com/google/javascript/jscomp/RemoveUnusedCodeNameAnalyzerTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/RemoveUnusedCodeNameAnalyzerTest.java b/test/com/google/javascript/jscomp/RemoveUnusedCodeNameAnalyzerTest.java\nindex b5fef34..0f55d30 100644\n--- a/test/com/google/javascript/jscomp/RemoveUnusedCodeNameAnalyzerTest.java\n+++ b/test/com/google/javascript/jscomp/RemoveUnusedCodeNameAnalyzerTest.java\n@@ -588,20 +588,20 @@\n         \"var ns = {}; ns.Class1 = class {}; use(ns.Class1);\");\n   }\n \n-  // TODO(b/66971163): enable or remove this\n-  public void disabledTestAssignmentToThisPrototype() {\n+  public void testAssignmentToThisPrototype() {\n     testSame(\n         lines(\n             \"Function.prototype.inherits = function(parentCtor) {\",\n             \"  function tempCtor() {};\",\n             \"  tempCtor.prototype = parentCtor.prototype;\",\n-            // the test currently fails because the assignment to this.superClass_ gets removed.\n-            // Maybe we need to include codingConvention.getIndirectlyDeclaredProperties(), which\n-            // includes \"superClass_\" in the initial list of referenced properties?\n             \"  this.superClass_ = parentCtor.prototype;\",\n             \"  this.prototype = new tempCtor();\",\n             \"  this.prototype.constructor = this;\",\n-            \"};\"));\n+            \"};\",\n+            \"/** @constructor */ function A() {}\",\n+            \"/** @constructor */ function B() {}\",\n+            \"B.inherits(A);\",\n+            \"use(B.superClass_);\"));\n   }\n \n   public void testAssignmentToCallResultPrototype() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 594,
        "bugNodeStartChar": 17681,
        "bugNodeLength": 632,
        "fixLineNum": 594,
        "fixNodeStartChar": 17681,
        "fixNodeLength": 799,
        "sourceBeforeFix": "lines(\"Function.prototype.inherits = function(parentCtor) {\",\"  function tempCtor() {};\",\"  tempCtor.prototype = parentCtor.prototype;\",\"  this.superClass_ = parentCtor.prototype;\",\"  this.prototype = new tempCtor();\",\"  this.prototype.constructor = this;\",\"};\")",
        "sourceAfterFix": "lines(\"Function.prototype.inherits = function(parentCtor) {\",\"  function tempCtor() {};\",\"  tempCtor.prototype = parentCtor.prototype;\",\"  this.superClass_ = parentCtor.prototype;\",\"  this.prototype = new tempCtor();\",\"  this.prototype.constructor = this;\",\"};\",\"/** @constructor */ function A() {}\",\"/** @constructor */ function B() {}\",\"B.inherits(A);\",\"use(B.superClass_);\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f0ef082c1a25d4d371167c751ac5d1941f2777f8",
        "fixCommitParentSHA1": "28ae94f260d01f723b692bfbec688b542ebb49ad",
        "bugFilePath": "src/com/google/javascript/jscomp/ClosureCheckModule.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ClosureCheckModule.java b/src/com/google/javascript/jscomp/ClosureCheckModule.java\nindex a809416..f95a0bb 100644\n--- a/src/com/google/javascript/jscomp/ClosureCheckModule.java\n+++ b/src/com/google/javascript/jscomp/ClosureCheckModule.java\n@@ -45,9 +45,8 @@\n           \"@export is not allowed here in a non-legacy goog.module.\"\n           + \" Consider using goog.exportSymbol instead.\");\n \n-  // TODO(tbreisacher): Make this an error when existing violations are fixed.\n   static final DiagnosticType GOOG_MODULE_IN_NON_MODULE =\n-      DiagnosticType.disabled(\n+      DiagnosticType.error(\n           \"JSC_GOOG_MODULE_IN_NON_MODULE\",\n           \"goog.module() call must be the first statement in a module.\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 50,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 140,
        "fixLineNum": 50,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 137,
        "sourceBeforeFix": "DiagnosticType.disabled(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "6196f126f039a618d3b8cc4112def78be2b07891",
        "fixCommitParentSHA1": "8446390f6c54e1fda28cb21e70f6e0833b84e650",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Mesh.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Mesh.java b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\nindex ab6083d..74ecf30 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Mesh.java\n@@ -176,7 +176,7 @@\n \tpublic Mesh (VertexDataType type, boolean isStatic, int maxVertices, int maxIndices, VertexAttribute... attributes) {\r\n // if (type == VertexDataType.VertexArray && Gdx.graphics.isGL20Available()) type = VertexDataType.VertexBufferObject;\r\n \r\n-\t\tif (type == VertexDataType.VertexBufferObject) {\r\n+\t\tif (type == VertexDataType.VertexBufferObject || Mesh.forceVBO) {\r\n \t\t\tvertices = new VertexBufferObject(isStatic, maxVertices, attributes);\r\n \t\t\tindices = new IndexBufferObject(isStatic, maxIndices);\r\n \t\t\tisVertexArray = false;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 179,
        "bugNodeStartChar": 8586,
        "bugNodeLength": 41,
        "fixLineNum": 179,
        "fixNodeStartChar": 8408,
        "fixNodeLength": 58,
        "sourceBeforeFix": "type == VertexDataType.VertexBufferObject",
        "sourceAfterFix": "type == VertexDataType.VertexBufferObject || Mesh.forceVBO"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0a7ef39be0ebd0a26f5dad734cd6b3fea58984a9",
        "fixCommitParentSHA1": "91a0e48955006573ddb2586c0a38a6e3b410c823",
        "bugFilePath": "core/common/src/test/java/alluxio/ConfigurationTest.java",
        "fixPatch": "diff --git a/core/common/src/test/java/alluxio/ConfigurationTest.java b/core/common/src/test/java/alluxio/ConfigurationTest.java\nindex 464ea19..bb9e494 100644\n--- a/core/common/src/test/java/alluxio/ConfigurationTest.java\n+++ b/core/common/src/test/java/alluxio/ConfigurationTest.java\n@@ -184,7 +184,7 @@\n     Assert.assertEquals(512, intValue);\n \n     intValue = sDefaultConfiguration.getInt(Constants.MASTER_WORKER_TIMEOUT_MS);\n-    Assert.assertEquals(10 * Constants.SECOND_MS, intValue);\n+    Assert.assertEquals(300 * Constants.SECOND_MS, intValue);\n   }\n \n   /**\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 187,
        "bugNodeStartChar": 6947,
        "bugNodeLength": 24,
        "fixLineNum": 187,
        "fixNodeStartChar": 6947,
        "fixNodeLength": 25,
        "sourceBeforeFix": "10 * Constants.SECOND_MS",
        "sourceAfterFix": "300 * Constants.SECOND_MS"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7fe868089855c33d6345e740bfdbe6f140794598",
        "fixCommitParentSHA1": "7b47828bc2cf749edfb0f75e370f168c6b1be210",
        "bugFilePath": "src/main/java/org/jsoup/parser/TreeBuilderState.java",
        "fixPatch": "diff --git a/src/main/java/org/jsoup/parser/TreeBuilderState.java b/src/main/java/org/jsoup/parser/TreeBuilderState.java\nindex e82eed5..4ae01e1 100644\n--- a/src/main/java/org/jsoup/parser/TreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/TreeBuilderState.java\n@@ -280,7 +280,7 @@\n                             if (!html.hasAttr(attribute.getKey()))\n                                 html.attributes().put(attribute);\n                         }\n-                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"style\", \"title\")) {\n+                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\")) {\n                         return tb.process(t, InHead);\n                     } else if (name.equals(\"body\")) {\n                         tb.error(this);\n",
        "projectName": "jhy.jsoup",
        "bugLineNum": 283,
        "bugNodeStartChar": 11633,
        "bugNodeLength": 107,
        "fixLineNum": 283,
        "fixNodeStartChar": 11633,
        "fixNodeLength": 117,
        "sourceBeforeFix": "StringUtil.in(name,\"base\",\"basefont\",\"bgsound\",\"command\",\"link\",\"meta\",\"noframes\",\"style\",\"title\")",
        "sourceAfterFix": "StringUtil.in(name,\"base\",\"basefont\",\"bgsound\",\"command\",\"link\",\"meta\",\"noframes\",\"script\",\"style\",\"title\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "068132f1eabefb1760fec5b53997cd6143995a29",
        "fixCommitParentSHA1": "1a83232ab207eac0b904e30f4d7374f8abe13b1a",
        "bugFilePath": "transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java\nindex caf04bf..a4442d5 100644\n--- a/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java\n+++ b/transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java\n@@ -332,7 +332,7 @@\n     private final class NioSocketChannelUnsafe extends NioByteUnsafe {\n         @Override\n         protected Executor closeExecutor() {\n-            if (config().getSoLinger() > 0) {\n+            if (javaChannel().isOpen() && config().getSoLinger() > 0) {\n                 return GlobalEventExecutor.INSTANCE;\n             }\n             return null;\n",
        "projectName": "netty.netty",
        "bugLineNum": 335,
        "bugNodeStartChar": 10919,
        "bugNodeLength": 26,
        "fixLineNum": 335,
        "fixNodeStartChar": 10919,
        "fixNodeLength": 52,
        "sourceBeforeFix": "config().getSoLinger() > 0",
        "sourceAfterFix": "javaChannel().isOpen() && config().getSoLinger() > 0"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b024a63a49006f869d7af610ae0ff5810cdb7c47",
        "fixCommitParentSHA1": "00da2d746b0b1fafbafed71a551efc179408dc72",
        "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java",
        "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\nindex 1edb943..0d67a26 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/ClusterService.java\n@@ -82,7 +82,7 @@\n         List<Notification> notifications = Lists.newArrayList();\n         for (NotificationSummaryResponse notification : r.notifications) {\n             try {\n-                notifications.add(new Notification(notification));\n+                notifications.add(new Notification(notification, nodeService));\n             } catch (IllegalArgumentException e) {\n                 LOG.warn(\"There is a notification type we can't handle: [{}]\", notification.type);\n             }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 85,
        "bugNodeStartChar": 3952,
        "bugNodeLength": 30,
        "fixLineNum": 85,
        "fixNodeStartChar": 3952,
        "fixNodeLength": 43,
        "sourceBeforeFix": "new Notification(notification)",
        "sourceAfterFix": "new Notification(notification,nodeService)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "00d52565fc7047090c947eb7d34ca0392cf47002",
        "fixCommitParentSHA1": "491b2470c7640b2d9e613b547d5adaa117f7d276",
        "bugFilePath": "web/src/main/java/org/openmrs/web/controller/PatientEncountersPortletController.java",
        "fixPatch": "diff --git a/web/src/main/java/org/openmrs/web/controller/PatientEncountersPortletController.java b/web/src/main/java/org/openmrs/web/controller/PatientEncountersPortletController.java\nindex 84ebc0e..7ea076c 100644\n--- a/web/src/main/java/org/openmrs/web/controller/PatientEncountersPortletController.java\n+++ b/web/src/main/java/org/openmrs/web/controller/PatientEncountersPortletController.java\n@@ -36,7 +36,7 @@\n \t\t// determine whether it's need to show disclaimer on jsp page or not\r\n \t\t// as current user does not have enough permissions to view at least one\r\n \t\t// type of encounters\r\n-\t\tmodel.put(\"showDisclaimer\", Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser()));\r\n+\t\tmodel.put(\"showDisclaimer\", !Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser()));\r\n \t}\r\n \t\r\n }\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 39,
        "bugNodeStartChar": 1471,
        "bugNodeLength": 86,
        "fixLineNum": 39,
        "fixNodeStartChar": 1433,
        "fixNodeLength": 87,
        "sourceBeforeFix": "Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())",
        "sourceAfterFix": "!Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2550e5ecb1c46c686be452f0e541628f8b4102b2",
        "fixCommitParentSHA1": "3b997675e7d29feb02bedb40d9c4b248a170ad9e",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java b/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\nindex e86d2f5..8a0e21c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/TaskManagerConfig.java\n@@ -222,7 +222,7 @@\n     @NotNull\n     public DataSize getMaxPagePartitioningBufferSize()\n     {\n-        return sinkMaxBufferSize;\n+        return maxPagePartitioningBufferSize;\n     }\n \n     @Config(\"driver.max-page-partitioning-buffer-size\")\n",
        "projectName": "facebook.presto",
        "bugLineNum": 225,
        "bugNodeStartChar": 6715,
        "bugNodeLength": 25,
        "fixLineNum": 225,
        "fixNodeStartChar": 6715,
        "fixNodeLength": 37,
        "sourceBeforeFix": "return sinkMaxBufferSize; ",
        "sourceAfterFix": "return maxPagePartitioningBufferSize; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 196,
        "bugNodeStartChar": 7492,
        "bugNodeLength": 336,
        "fixLineNum": 196,
        "fixNodeStartChar": 7297,
        "fixNodeLength": 329,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f",
        "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 308,
        "bugNodeStartChar": 9532,
        "bugNodeLength": 51,
        "fixLineNum": 308,
        "fixNodeStartChar": 9532,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)",
        "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2976be58f6062932d6c23e63af3d3b4395ac461a",
        "fixCommitParentSHA1": "0c4e37bd41439a7620b3b03974954e41b18e5446",
        "bugFilePath": "nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/transferenvelope/CheckpointSerializer.java",
        "fixPatch": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/transferenvelope/CheckpointSerializer.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/transferenvelope/CheckpointSerializer.java\nindex 1ad8e2b..ce707b6 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/transferenvelope/CheckpointSerializer.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/transferenvelope/CheckpointSerializer.java\n@@ -124,7 +124,7 @@\n \n \t\tfor (int i = 0; i < SIZEOFLONG; ++i) {\n \t\t\tfinal int shift = i << 3; // i * 8\n-\t\t\tbyteBuffer.put((SIZEOFLONG - 1) - i, (byte) ((longToSerialize & (0xff << shift)) >>> shift));\n+\t\t\tbyteBuffer.put((SIZEOFLONG - 1) - i, (byte) ((longToSerialize & (0xffL << shift)) >>> shift));\n \t\t}\n \t}\n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 127,
        "bugNodeStartChar": 4098,
        "bugNodeLength": 13,
        "fixLineNum": 127,
        "fixNodeStartChar": 4098,
        "fixNodeLength": 14,
        "sourceBeforeFix": "0xff << shift",
        "sourceAfterFix": "0xffL << shift"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 535,
        "bugNodeStartChar": 25357,
        "bugNodeLength": 84,
        "fixLineNum": 535,
        "fixNodeStartChar": 25357,
        "fixNodeLength": 84,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",true))"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "f4764e5d440eb811cf9b5a54717615abaa99ed7d",
        "fixCommitParentSHA1": "e6f52f88ab97a607239a61430b1c62c6aaf6035c",
        "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java b/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\nindex 83e0621..e278754 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PropertyDeserializer.java\n@@ -145,7 +145,7 @@\n \n         if (ObjectProperty.isType(type) || node.get(\"properties\") != null) {\n             detailNode = node.get(\"additionalProperties\");\n-            if (detailNode != null) {\n+            if (detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)) {\n                 Property items = propertyFromNode(detailNode);\n                 if (items != null) {\n                     MapProperty mapProperty = new MapProperty(items).description(description);\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 148,
        "bugNodeStartChar": 5619,
        "bugNodeLength": 18,
        "fixLineNum": 148,
        "fixNodeStartChar": 5619,
        "fixNodeLength": 74,
        "sourceBeforeFix": "detailNode != null",
        "sourceAfterFix": "detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3f3bab10b9ca68eb31a7ef5a31e49145b51006fd",
        "fixCommitParentSHA1": "cd98e85ddd3c35e5900713266fc38916b53f172d",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointV1Serializer.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointV1Serializer.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointV1Serializer.java\nindex 8de29a6..fcdc2ca 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointV1Serializer.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointV1Serializer.java\n@@ -138,7 +138,7 @@\n \t\t\t\t\tserializedValue = new SerializedValue<>(null);\n \t\t\t\t} else {\n \t\t\t\t\tbyte[] serializedData = new byte[length];\n-\t\t\t\t\tdis.read(serializedData, 0, length);\n+\t\t\t\t\tdis.readFully(serializedData, 0, length);\n \t\t\t\t\tserializedValue = SerializedValue.fromBytes(serializedData);\n \t\t\t\t}\n \n@@ -165,7 +165,7 @@\n \t\t\t\t\tserializedValue = new SerializedValue<>(null);\n \t\t\t\t} else {\n \t\t\t\t\tbyte[] serializedData = new byte[length];\n-\t\t\t\t\tdis.read(serializedData, 0, length);\n+\t\t\t\t\tdis.readFully(serializedData, 0, length);\n \t\t\t\t\tserializedValue = SerializedValue.fromBytes(serializedData);\n \t\t\t\t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 168,
        "bugNodeStartChar": 5305,
        "bugNodeLength": 35,
        "fixLineNum": 168,
        "fixNodeStartChar": 5305,
        "fixNodeLength": 40,
        "sourceBeforeFix": "dis.read(serializedData,0,length)",
        "sourceAfterFix": "dis.readFully(serializedData,0,length)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "3ca6ab034d1764f4186d4df7b4ad15dd86e9ed4c",
        "fixCommitParentSHA1": "783c3b2e5062280ac8270c247f84ccaced4cb520",
        "bugFilePath": "runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java",
        "fixPatch": "diff --git a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java\nindex 175bd35..752ac84 100644\n--- a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java\n+++ b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java\n@@ -771,7 +771,7 @@\n \t}\n \n \tprotected void addDFAEdge(DFAState p, int t, DFAState q) {\n-\t\tif ( p==null ) return;\n+\t\tif ( p==null || t < -1 ) return;\n \t\tif ( p.edges==null ) {\n \t\t\tp.edges = new DFAState[atn.maxTokenType+1+1]; // TODO: make adaptive\n \t\t}\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 774,
        "bugNodeStartChar": 27893,
        "bugNodeLength": 7,
        "fixLineNum": 774,
        "fixNodeStartChar": 27893,
        "fixNodeLength": 17,
        "sourceBeforeFix": "p == null",
        "sourceAfterFix": "p == null || t < -1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bd79617dcf4a6de30069484736cb556705d1ca8f",
        "fixCommitParentSHA1": "472c863b70dd013280b86ec4ffd87744607d99c2",
        "bugFilePath": "src/main/java/redis/clients/jedis/BinaryJedisCluster.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/BinaryJedisCluster.java b/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\nindex d4141b5..706291f 100644\n--- a/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\n+++ b/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\n@@ -1188,7 +1188,7 @@\n     return new JedisClusterCommand<Set<byte[]>>(connectionHandler, maxRedirections) {\n       @Override\n       public Set<byte[]> execute(Jedis connection) {\n-        return connection.zrangeByLex(key, max, min);\n+        return connection.zrevrangeByLex(key, max, min);\n       }\n     }.runBinary(key);\n   }\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 1191,
        "bugNodeStartChar": 37896,
        "bugNodeLength": 37,
        "fixLineNum": 1191,
        "fixNodeStartChar": 37896,
        "fixNodeLength": 40,
        "sourceBeforeFix": "connection.zrangeByLex(key,max,min)",
        "sourceAfterFix": "connection.zrevrangeByLex(key,max,min)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7f05a320d91958af7f10f6a5a0adbcfcd2176c89",
        "fixCommitParentSHA1": "53491e832847c2cd0b13655debaec75b443c50a9",
        "bugFilePath": "spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/AuthorizationRequest.java",
        "fixPatch": "diff --git a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/AuthorizationRequest.java b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/AuthorizationRequest.java\nindex 26f3a7a..14633f2 100644\n--- a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/AuthorizationRequest.java\n+++ b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/AuthorizationRequest.java\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic OAuth2Request createOAuth2Request() {\n-\t\treturn new OAuth2Request(getApprovalParameters(), getClientId(), getAuthorities(), isApproved(), getScope(), getResourceIds(), getRedirectUri(), getResponseTypes(), getExtensions());\n+\t\treturn new OAuth2Request(getRequestParameters(), getClientId(), getAuthorities(), isApproved(), getScope(), getResourceIds(), getRedirectUri(), getResponseTypes(), getExtensions());\n \t}\n \n \t/**\n",
        "projectName": "spring-projects.spring-security-oauth",
        "bugLineNum": 106,
        "bugNodeStartChar": 3862,
        "bugNodeLength": 23,
        "fixLineNum": 106,
        "fixNodeStartChar": 3862,
        "fixNodeLength": 22,
        "sourceBeforeFix": "getApprovalParameters()",
        "sourceAfterFix": "getRequestParameters()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "42e0782a5258626a58177d154ca0cf3da87cdf7a",
        "fixCommitParentSHA1": "bb5632018ea2adeac29e0e5fa2397e04edc21b71",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\nindex a8ec9ea..f3d0f84 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceFactory.java\n@@ -239,7 +239,7 @@\n      * @param r {@link AtmosphereResource}\n      */\n     public void unRegisterUuidForFindCandidate(AtmosphereResource r) {\n-        logger.debug(\"Removing: {}\", r);\n+        logger.trace(\"Removing: {}\", r);\n         resources.remove(r.uuid());\n     }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 242,
        "bugNodeStartChar": 9820,
        "bugNodeLength": 31,
        "fixLineNum": 242,
        "fixNodeStartChar": 9820,
        "fixNodeLength": 31,
        "sourceBeforeFix": "logger.debug(\"Removing: {}\",r)",
        "sourceAfterFix": "logger.trace(\"Removing: {}\",r)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b9c41e9ff3fc13529a73bd488d9e9d86b33d0871",
        "fixCommitParentSHA1": "54893fd676fd13c708103ee2c032e0bc3597b32c",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java b/src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java\nindex c0cd4a8..3faee85 100644\n--- a/src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java\n+++ b/src/edu/stanford/nlp/pipeline/StanfordCoreNLP.java\n@@ -556,7 +556,7 @@\n             property.substring(CUSTOM_ANNOTATOR_PREFIX.length());\n         final String customClassName = inputProps.getProperty(property);\n         logger.info(\"Registering annotator \" + customName + \" with class \" + customClassName);\n-        pool.register(customName, inputProps, Lazy.of(() -> annotatorImplementation.custom(inputProps, customName)));\n+        pool.register(customName, inputProps, Lazy.of(() -> annotatorImplementation.custom(inputProps, property)));\n       }\n     }\n   }\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 559,
        "bugNodeStartChar": 22794,
        "bugNodeLength": 54,
        "fixLineNum": 559,
        "fixNodeStartChar": 22794,
        "fixNodeLength": 52,
        "sourceBeforeFix": "annotatorImplementation.custom(inputProps,customName)",
        "sourceAfterFix": "annotatorImplementation.custom(inputProps,property)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d349a29b7e7acfceb67454a40bbca333fb18f960",
        "fixCommitParentSHA1": "e775dc3485fbd59e041d5198cbc71851587508f2",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java\nindex 9b465b7..d520866 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java\n@@ -197,7 +197,7 @@\n         listApplications(appTypes, appStates);\n       }\n     } else if (cliParser.hasOption(KILL_CMD)) {\n-      if (args.length != 2) {\n+      if (args.length != 3) {\n         printUsage(opts);\n         return exitCode;\n       }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 200,
        "bugNodeStartChar": 8073,
        "bugNodeLength": 16,
        "fixLineNum": 200,
        "fixNodeStartChar": 8073,
        "fixNodeLength": 16,
        "sourceBeforeFix": "args.length != 2",
        "sourceAfterFix": "args.length != 3"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c66b6a0f0f3eba00529ca81d9392805767c361e3",
        "fixCommitParentSHA1": "b348260288bd43724f1fc1f01728914a6730f9e7",
        "bugFilePath": "dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java",
        "fixPatch": "diff --git a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\nindex 01ef43c..725abe6 100644\n--- a/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\n+++ b/dbsync/src/main/java/com/taobao/tddl/dbsync/binlog/CharsetConversion.java\n@@ -32,7 +32,7 @@\n     }\r\n \r\n     // Character set data used in lookups. The array will be sparse.\r\n-    static final Entry[] entries = new Entry[0xff];\r\n+    static final Entry[] entries = new Entry[2048];\r\n \r\n     static Entry getEntry(final int id) {\r\n         if (id >= 0 && id < entries.length) {\r\n@@ -95,7 +95,7 @@\n         putEntry(34, \"cp1250\", \"cp1250_czech_cs\", \"Cp1250\");\r\n         putEntry(35, \"ucs2\", \"ucs2_general_ci\", \"UnicodeBig\");\r\n         putEntry(36, \"cp866\", \"cp866_general_ci\", \"Cp866\");\r\n-        putEntry(37, \"keybcs2\", \"keybcs2_general_ci\", \"Cp895\");\r\n+        putEntry(37, \"keybcs2\", \"keybcs2_general_ci\", \"Cp852\");\r\n         putEntry(38, \"macce\", \"macce_general_ci\", \"MacCentralEurope\");\r\n         putEntry(39, \"macroman\", \"macroman_general_ci\", \"MacRoman\");\r\n         putEntry(40, \"cp852\", \"cp852_general_ci\", \"Cp852\");\r\n@@ -129,7 +129,7 @@\n         putEntry(70, \"greek\", \"greek_bin\", \"ISO8859_7\");\r\n         putEntry(71, \"hebrew\", \"hebrew_bin\", \"ISO8859_8\");\r\n         putEntry(72, \"hp8\", \"hp8_bin\", \"US-ASCII\");\r\n-        putEntry(73, \"keybcs2\", \"keybcs2_bin\", \"Cp895\");\r\n+        putEntry(73, \"keybcs2\", \"keybcs2_bin\", \"Cp852\");\r\n         putEntry(74, \"koi8r\", \"koi8r_bin\", \"KOI8_R\");\r\n         putEntry(75, \"koi8u\", \"koi8u_bin\", \"KOI8_U\");\r\n         putEntry(77, \"latin2\", \"latin2_bin\", \"ISO8859_2\");\r\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 35,
        "bugNodeStartChar": 1117,
        "bugNodeLength": 15,
        "fixLineNum": 35,
        "fixNodeStartChar": 1083,
        "fixNodeLength": 15,
        "sourceBeforeFix": "new Entry[0xff]",
        "sourceAfterFix": "new Entry[2048]"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51c2b049c21582fcf9db82244063e67196cabad5",
        "fixCommitParentSHA1": "c1101e7eb22ae383bd24374c7991f26c54f93905",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java\nindex f35d4d9..69794cf 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.java\n@@ -55,9 +55,9 @@\n \t\tpublic CodecCustomizer jacksonCodecCustomizer(ObjectMapper objectMapper) {\n \t\t\treturn (configurer) -> {\n \t\t\t\tCodecConfigurer.DefaultCodecs defaults = configurer.defaultCodecs();\n-\t\t\t\tdefaults.jackson2Decoder(\n+\t\t\t\tdefaults.jackson2JsonDecoder(\n \t\t\t\t\t\tnew Jackson2JsonDecoder(objectMapper, EMPTY_MIME_TYPES));\n-\t\t\t\tdefaults.jackson2Encoder(\n+\t\t\t\tdefaults.jackson2JsonEncoder(\n \t\t\t\t\t\tnew Jackson2JsonEncoder(objectMapper, EMPTY_MIME_TYPES));\n \t\t\t};\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 60,
        "bugNodeStartChar": 2365,
        "bugNodeLength": 88,
        "fixLineNum": 60,
        "fixNodeStartChar": 2365,
        "fixNodeLength": 92,
        "sourceBeforeFix": "defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))",
        "sourceAfterFix": "defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "7ebe053ac1abce6e3b218beaee801ebbc6da2ecb",
        "fixCommitParentSHA1": "4a64ce37ed3207c858a1dee41e2a6d366218d8be",
        "bugFilePath": "server/src/main/java/com/metamx/druid/loading/OmniSegmentLoader.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/loading/OmniSegmentLoader.java b/server/src/main/java/com/metamx/druid/loading/OmniSegmentLoader.java\nindex 38b811c..ffe4192 100644\n--- a/server/src/main/java/com/metamx/druid/loading/OmniSegmentLoader.java\n+++ b/server/src/main/java/com/metamx/druid/loading/OmniSegmentLoader.java\n@@ -211,7 +211,7 @@\n \n     private synchronized void addSegment(DataSegment segment)\n     {\n-      if (! segments.add(segment)) {\n+      if (segments.add(segment)) {\n         currSize += segment.getSize();\n       }\n     }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 214,
        "bugNodeStartChar": 6207,
        "bugNodeLength": 23,
        "fixLineNum": 214,
        "fixNodeStartChar": 6207,
        "fixNodeLength": 21,
        "sourceBeforeFix": "!segments.add(segment)",
        "sourceAfterFix": "segments.add(segment)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae4c271f7068895d43ad42712cb64b5bc81525a3",
        "fixCommitParentSHA1": "a7892257e1e4d040a7a54d82048758eba74f2a89",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketReader.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketReader.java b/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketReader.java\nindex 5d9a07a..520f443 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketReader.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/LocalFilePacketReader.java\n@@ -93,7 +93,7 @@\n    */\n   public static class Factory implements PacketReader.Factory {\n     private static final long READ_TIMEOUT_MS =\n-        Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n+        Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS);\n \n     private final FileSystemContext mContext;\n     private final WorkerNetAddress mAddress;\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 96,
        "bugNodeStartChar": 2848,
        "bugNodeLength": 64,
        "fixLineNum": 96,
        "fixNodeStartChar": 2848,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)",
        "sourceAfterFix": "Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/TestLeftRecursion.java\nindex f6c8946..45db596 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(254);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(253);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {std::cout << $ctx->toStringTree(this) << std::endl;} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(254);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(253);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {std::cout << $ctx->toStringTree(this) << std::endl;} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(254);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(253);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {std::cout << $ctx->toStringTree(this) << std::endl;} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1918,7 +1918,7 @@\n \t\tgrammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}                       # parens\\n\");\n \t\tgrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}      # unary\\n\");\n \t\tgrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}      # unary\\n\");\n-\t\tgrammarBuilder.append(\"  | ID          {$v = 3}                                                     # anID\\n\");\n+\t\tgrammarBuilder.append(\"  | ID          {$v = 3;}                                                     # anID\\n\");\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");\n@@ -1951,7 +1951,7 @@\n \t\tgrammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}                       # parens\\n\");\n \t\tgrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}      # unary\\n\");\n \t\tgrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}      # unary\\n\");\n-\t\tgrammarBuilder.append(\"  | ID          {$v = 3}                                                     # anID\\n\");\n+\t\tgrammarBuilder.append(\"  | ID          {$v = 3;}                                                     # anID\\n\");\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");\n@@ -1984,7 +1984,7 @@\n \t\tgrammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}                       # parens\\n\");\n \t\tgrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}      # unary\\n\");\n \t\tgrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}      # unary\\n\");\n-\t\tgrammarBuilder.append(\"  | ID          {$v = 3}                                                     # anID\\n\");\n+\t\tgrammarBuilder.append(\"  | ID          {$v = 3;}                                                     # anID\\n\");\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");\n@@ -2017,7 +2017,7 @@\n \t\tgrammarBuilder.append(\"  | '(' e ')'   {$v = $e.v;}                       # parens\\n\");\n \t\tgrammarBuilder.append(\"  | left=e INC  {$v = $left.v + 1;}      # unary\\n\");\n \t\tgrammarBuilder.append(\"  | left=e DEC  {$v = $left.v - 1;}      # unary\\n\");\n-\t\tgrammarBuilder.append(\"  | ID          {$v = 3}                                                     # anID\\n\");\n+\t\tgrammarBuilder.append(\"  | ID          {$v = 3;}                                                     # anID\\n\");\n \t\tgrammarBuilder.append(\"  ;\\n\");\n \t\tgrammarBuilder.append(\"ID : 'a'..'z'+ ;\\n\");\n \t\tgrammarBuilder.append(\"INT : '0'..'9'+ ;\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1810,
        "bugNodeStartChar": 81872,
        "bugNodeLength": 22,
        "fixLineNum": 1810,
        "fixNodeStartChar": 81872,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(254)",
        "sourceAfterFix": "new StringBuilder(253)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f",
        "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 323,
        "bugNodeStartChar": 9897,
        "bugNodeLength": 51,
        "fixLineNum": 323,
        "fixNodeStartChar": 9897,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Foundation.NSLog(\"[debug] \" + tag + \": \"+ message)",
        "sourceAfterFix": "Foundation.log(\"[debug] \" + tag + \": \"+ message)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "7b998a45ff6bd91e340027dc7d51c65f932e441b",
        "fixCommitParentSHA1": "30a79c41ab2fa3fe2d1d64b4f0773353aac59d60",
        "bugFilePath": "src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java b/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\nindex fdb88d4..bc06fee 100644\n--- a/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\n+++ b/src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java\n@@ -967,7 +967,7 @@\n             return false;\r\n         }\r\n \r\n-        if (\"LEVEL\".equalsIgnoreCase(ident)) {\r\n+        if (\"LEVEL\".equalsIgnoreCase(ident) || \"CONNECT_BY_ISCYCLE\".equalsIgnoreCase(ident)) {\r\n             SQLObject parent = x.getParent();\r\n             if (parent instanceof SQLSelectItem) {\r\n                 SQLObject parent2 = parent.getParent();\r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 970,
        "bugNodeStartChar": 32070,
        "bugNodeLength": 31,
        "fixLineNum": 970,
        "fixNodeStartChar": 31101,
        "fixNodeLength": 79,
        "sourceBeforeFix": "\"LEVEL\".equalsIgnoreCase(ident)",
        "sourceAfterFix": "\"LEVEL\".equalsIgnoreCase(ident) || \"CONNECT_BY_ISCYCLE\".equalsIgnoreCase(ident)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0bf18ee3843b60bbd95b5d4dac20a1ab505a2f41",
        "fixCommitParentSHA1": "8c07e2d1a96ec1adea9bc06bc86df366368cffa2",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\nindex b54c5b7..7db4ad9 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n@@ -643,8 +643,9 @@\n         }\n     }\n \n+    // Highly bogus nased on which I/O layer we are using.\n     private boolean allowedCloseCode(int closeCode) {\n-        return closeCode < 1002 || closeCode > 1004 ? true : false;\n+        return closeCode < 1001 || closeCode > 1004 ? true : false;\n     }\n \n     private void finish(WebSocket webSocket, AtmosphereResource resource, AtmosphereRequest r, AtmosphereResponse s, boolean closeWebSocket) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 647,
        "bugNodeStartChar": 30433,
        "bugNodeLength": 16,
        "fixLineNum": 647,
        "fixNodeStartChar": 30433,
        "fixNodeLength": 16,
        "sourceBeforeFix": "closeCode < 1002",
        "sourceAfterFix": "closeCode < 1001"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ceedf8077728da8d462bbdf607a89da82e9a5f2b",
        "fixCommitParentSHA1": "45379946e7cc7bcd45b5b587b7c1232400aea4f6",
        "bugFilePath": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java",
        "fixPatch": "diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\nindex 01e7c1e..214fad7 100644\n--- a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\n+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputMagicNumber.java\n@@ -182,19 +182,19 @@\n         int z=101;\n     }\n \n-    @IntMethodAnnotation(42)\n+    @InputIntMethodAnnotation(42)\n     public void another() {\n     }\n \n-    @IntMethodAnnotation(value=43)\n+    @InputIntMethodAnnotation(value=43)\n     public void another2() {\n     }\n     \n-    @IntMethodAnnotation(-44)\n+    @InputIntMethodAnnotation(-44)\n     public void anotherNegative() {\n     }\n \n-    @IntMethodAnnotation(value=-45)\n+    @InputIntMethodAnnotation(value=-45)\n     public void anotherNegative2() {\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 193,
        "bugNodeStartChar": 4287,
        "bugNodeLength": 25,
        "fixLineNum": 193,
        "fixNodeStartChar": 4287,
        "fixNodeLength": 30,
        "sourceBeforeFix": "@IntMethodAnnotation(-44)",
        "sourceAfterFix": "@InputIntMethodAnnotation(-44)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0d3c78b6f28fb3cad00c12605209c524702adb0a",
        "fixCommitParentSHA1": "4256555545f49406b00df2f077289e5c9cdb7a0a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\nindex 192e1fa..7d061ee 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n@@ -294,7 +294,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return true;\n@@ -318,7 +319,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return null;\n@@ -378,7 +380,7 @@\n                 record.setExpirationTime(expiryTime);\n                 if (isEventsEnabled()) {\n                     CacheEventContext cacheEventContext =\n-                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toHeapData(key),\n+                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toEventData(key),\n                                                    toEventData(record.getValue()), expiryTime, null, IGNORE_COMPLETION);\n                     cacheEventContext.setAccessHit(record.getAccessHit());\n                     publishEvent(cacheEventContext);\n@@ -493,7 +495,8 @@\n         final R record = createRecord(value, expirationTime);\n         updateHasExpiringEntry(record);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCreatedEvent(keyData, toEventData(value), expirationTime, origin, completionId));\n+            publishEvent(createCacheCreatedEvent(toEventData(keyData), toEventData(value),\n+                                                 expirationTime, origin, completionId));\n         }\n         return record;\n     }\n@@ -514,7 +517,7 @@\n             return record;\n         }\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                   origin, completionId));\n         }\n         return null;\n@@ -1002,7 +1005,7 @@\n             } else {\n                 result = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onPutIfAbsent(key, value, expiryPolicy, source, disableWriteThrough,\n@@ -1046,7 +1049,7 @@\n             if (record == null || isExpired) {\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1099,7 +1102,7 @@\n             }\n             if (!replaced) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onReplace(key, oldValue, newValue, expiryPolicy, source, false, record, isExpired, replaced);\n@@ -1131,7 +1134,7 @@\n                 obj = null;\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1182,7 +1185,7 @@\n             if (record == null || isExpired) {\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n@@ -1235,7 +1238,7 @@\n             }\n             if (!removed) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             }\n@@ -1284,7 +1287,7 @@\n                 obj = null;\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 381,
        "bugNodeStartChar": 16111,
        "bugNodeLength": 15,
        "fixLineNum": 381,
        "fixNodeStartChar": 16111,
        "fixNodeLength": 16,
        "sourceBeforeFix": "toHeapData(key)",
        "sourceAfterFix": "toEventData(key)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a204cc6e5f02a11438c0fc399f4c9a12f7888ea5",
        "fixCommitParentSHA1": "1f1151c0853fb6bc70972c0f04a8a27d120638cf",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java b/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\nindex 2afc620..4325b17 100644\n--- a/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\n+++ b/presto-main/src/test/java/com/facebook/presto/execution/TestSqlStageExecution.java\n@@ -173,7 +173,7 @@\n \n         // The stage scheduler will block and this will cause a timeout exception\n         try {\n-            future1.get(1, TimeUnit.SECONDS);\n+            future1.get(2, TimeUnit.SECONDS);\n         }\n         catch (TimeoutException e) {\n             // expected\n@@ -512,7 +512,7 @@\n             @Override\n             public int getQueuedPartitionedSplitCount()\n             {\n-                return 0;\n+                return getPartitionedSplitCount();\n             }\n         }\n     }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 176,
        "bugNodeStartChar": 8325,
        "bugNodeLength": 32,
        "fixLineNum": 176,
        "fixNodeStartChar": 8325,
        "fixNodeLength": 32,
        "sourceBeforeFix": "future1.get(1,TimeUnit.SECONDS)",
        "sourceAfterFix": "future1.get(2,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "54d3c99469b923b409ce1a52b6d1181984470b11",
        "fixCommitParentSHA1": "b5a587fadfd0821088d37d9d23388c343d73eb45",
        "bugFilePath": "transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java b/transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java\nindex a5547f4..fd17e88 100644\n--- a/transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java\n+++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java\n@@ -237,7 +237,8 @@\n                     t = newT;\n                 }\n \n-                connectPromise.setFailure(t);\n+                // Use tryFailure() instead of setFailure() to avoid the race against cancel().\n+                connectPromise.tryFailure(t);\n                 closeIfClosed();\n             } finally {\n                 // Check for null as the connectTimeoutFuture is only created if a connectTimeoutMillis > 0 is used\n",
        "projectName": "netty.netty",
        "bugLineNum": 240,
        "bugNodeStartChar": 8391,
        "bugNodeLength": 28,
        "fixLineNum": 241,
        "fixNodeStartChar": 8487,
        "fixNodeLength": 28,
        "sourceBeforeFix": "connectPromise.setFailure(t)",
        "sourceAfterFix": "connectPromise.tryFailure(t)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "20d8ac67dc04e9e0c4484af769b156bcd75ef00b",
        "fixCommitParentSHA1": "19a56fb77e3e67366382edade55376e7cce80009",
        "bugFilePath": "driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java",
        "fixPatch": "diff --git a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\nindex 0b6c11c..f2f072c 100644\n--- a/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n+++ b/driver/src/main/java/com/alibaba/otter/canal/parse/driver/mysql/MysqlUpdateExecutor.java\n@@ -23,9 +23,9 @@\n \r\n     private SocketChannel       channel;\r\n \r\n-    public MysqlUpdateExecutor(MysqlConnector connector){\r\n+    public MysqlUpdateExecutor(MysqlConnector connector) throws IOException{\r\n         if (!connector.isConnected()) {\r\n-            throw new RuntimeException(\"should execute connector.connect() first\");\r\n+            throw new IOException(\"should execute connector.connect() first\");\r\n         }\r\n \r\n         this.channel = connector.getChannel();\r\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 28,
        "bugNodeStartChar": 935,
        "bugNodeLength": 64,
        "fixLineNum": 28,
        "fixNodeStartChar": 908,
        "fixNodeLength": 59,
        "sourceBeforeFix": "new RuntimeException(\"should execute connector.connect() first\")",
        "sourceAfterFix": "new IOException(\"should execute connector.connect() first\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40b42074591383a3bda2daabe2646863f783fd47",
        "fixCommitParentSHA1": "b1aafc51a369a1662d9e4230716fd3501f5ec7bc",
        "bugFilePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/PropertyContainerLocker.java",
        "fixPatch": "diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/PropertyContainerLocker.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/PropertyContainerLocker.java\nindex 0c34101..ee62fdb 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/PropertyContainerLocker.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/PropertyContainerLocker.java\n@@ -87,7 +87,7 @@\n             else if(container instanceof Relationship )\n             {\n                 statement.readOperations().acquireShared( ResourceTypes.RELATIONSHIP, ((Relationship) container).getId() );\n-                return new CoreAPILock(stmtProvider, ResourceTypes.RELATIONSHIP, ((Node) container).getId())\n+                return new CoreAPILock(stmtProvider, ResourceTypes.RELATIONSHIP, ((Relationship) container).getId())\n                 {\n                     @Override\n                     void release( Statement statement, Locks.ResourceType type, long resourceId )\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 90,
        "bugNodeStartChar": 3862,
        "bugNodeLength": 16,
        "fixLineNum": 90,
        "fixNodeStartChar": 3862,
        "fixNodeLength": 24,
        "sourceBeforeFix": "(Node)container",
        "sourceAfterFix": "(Relationship)container"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5bbc7807c15d0918a7d228998f5ad333649945f3",
        "fixCommitParentSHA1": "624a0e1c014b7b589db531167a9c5f171b2555a9",
        "bugFilePath": "src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java",
        "fixPatch": "diff --git a/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java b/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java\nindex 1c0215c..b02efe1 100644\n--- a/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java\n+++ b/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java\n@@ -154,7 +154,7 @@\n      * Number of times the system attempts to acquire a unique id block before giving up and throwing an exception.\n      */\n     public static final String IDAUTHORITY_RETRY_COUNT_KEY = \"idauthority-retries\";\n-    public static final int IDAUTHORITY_RETRY_COUNT_DEFAULT = 3;\n+    public static final int IDAUTHORITY_RETRY_COUNT_DEFAULT = 20;\n     /**\n      * Size of the block to be acquired. Larger block sizes require fewer block applications but also leave a larger\n      * fraction of the id pool occupied and potentially lost. For write heavy applications, larger block sizes should\n",
        "projectName": "thinkaurelius.titan",
        "bugLineNum": 157,
        "bugNodeStartChar": 6923,
        "bugNodeLength": 35,
        "fixLineNum": 157,
        "fixNodeStartChar": 6923,
        "fixNodeLength": 36,
        "sourceBeforeFix": "IDAUTHORITY_RETRY_COUNT_DEFAULT=3",
        "sourceAfterFix": "IDAUTHORITY_RETRY_COUNT_DEFAULT=20"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b9c0d31c3c2d6d6e91791308db92fd6a1cb5db43",
        "fixCommitParentSHA1": "41ab0faeedc4873d0ea32b20250e3ae913e96bbe",
        "bugFilePath": "testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\nindex 48a0618..e0a3493 100644\n--- a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n+++ b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n@@ -107,7 +107,7 @@\n             Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatusLine().getStatusCode());\n             Assert.assertEquals(2, Integer.parseInt(response.getFirstHeader(\"value\").getValue()));\n             // This won't be true unless we have somewhere to which to replicate\n-            Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n+            Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n             response.getEntity().getContent().close();\n         } finally {\n             client.getConnectionManager().shutdown();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 110,
        "bugNodeStartChar": 4726,
        "bugNodeLength": 85,
        "fixLineNum": 110,
        "fixNodeStartChar": 4726,
        "fixNodeLength": 84,
        "sourceBeforeFix": "Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))",
        "sourceAfterFix": "Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0682e8dd41045e3375b61d3d76f6e6991e98c869",
        "fixCommitParentSHA1": "24e01f17149ea3690d1fe4d2fabe4c78a5d88225",
        "bugFilePath": "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java",
        "fixPatch": "diff --git a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\nindex 661973f..8262c14 100644\n--- a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n+++ b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n@@ -142,7 +142,7 @@\n             }\n         }\n         if (simple.getToSentDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getToSentDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset));\n@@ -153,7 +153,7 @@\n             }\n         }\n         if (simple.getFromReceivedDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getFromReceivedDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset));\n@@ -164,7 +164,7 @@\n             }\n         }\n         if (simple.getToReceivedDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getToReceivedDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset));\n",
        "projectName": "apache.camel",
        "bugLineNum": 167,
        "bugNodeStartChar": 6507,
        "bugNodeLength": 24,
        "fixLineNum": 167,
        "fixNodeStartChar": 6507,
        "fixNodeLength": 26,
        "sourceBeforeFix": "simple.getFromSentDate()",
        "sourceAfterFix": "simple.getToReceivedDate()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 581,
        "bugNodeStartChar": 21673,
        "bugNodeLength": 10,
        "fixLineNum": 581,
        "fixNodeStartChar": 21673,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15848",
        "sourceAfterFix": "id=10995"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "888d20138863d627e56808fdcc6288133a8ad4ff",
        "fixCommitParentSHA1": "2342c0104870354b7dd6ac0de9ad9dda7e71b99c",
        "bugFilePath": "src/main/java/org/bukkit/Material.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex 715c6c6..c29e29e 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -117,7 +117,7 @@\n     DIAMOND(264),\n     IRON_INGOT(265),\n     GOLD_INGOT(266),\n-    IRON_SWORD(267, 1, 59),\n+    IRON_SWORD(267, 1, 250),\n     WOOD_SWORD(268, 1, 59),\n     WOOD_SPADE(269, 1, 59),\n     WOOD_PICKAXE(270, 1, 59),\n@@ -196,7 +196,7 @@\n     POWERED_MINECART(343, 1),\n     EGG(344, 16),\n     COMPASS(345),\n-    FISHING_ROD(346, 1, 64),\n+    FISHING_ROD(346, 1, 32),\n     WATCH(347),\n     GLOWSTONE_DUST(348),\n     RAW_FISH(349),\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 120,
        "bugNodeStartChar": 3102,
        "bugNodeLength": 22,
        "fixLineNum": 120,
        "fixNodeStartChar": 3102,
        "fixNodeLength": 23,
        "sourceBeforeFix": "IRON_SWORD(267,1,59)",
        "sourceAfterFix": "IRON_SWORD(267,1,250)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "2d592d60961db355a017024266e3dc4bb2a63ab7",
        "fixCommitParentSHA1": "0014d130387614ce1602773d13d657cf928255c5",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\nindex 5fbbb87..f3e9bf7 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/variable/JPAEntityScanner.java\n@@ -70,7 +70,7 @@\n     Id idAnnotation = null;\n     for (Method method : methods) {\n       idAnnotation = method.getAnnotation(Id.class);\n-      if (idAnnotation != null) {\n+      if(idAnnotation != null && !method.isBridge()) {\n         idMethod = method;\n         break;\n       }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 73,
        "bugNodeStartChar": 2496,
        "bugNodeLength": 20,
        "fixLineNum": 73,
        "fixNodeStartChar": 2495,
        "fixNodeLength": 42,
        "sourceBeforeFix": "idAnnotation != null",
        "sourceAfterFix": "idAnnotation != null && !method.isBridge()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6190e5a019d5009864d47bf4b08ceef4ac52cf91",
        "fixCommitParentSHA1": "bf9117495d878ded66f60301df07db886eab0605",
        "bugFilePath": "clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java",
        "fixPatch": "diff --git a/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java b/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\nindex 964fe53..6461108 100644\n--- a/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\n+++ b/clients/unshaded/src/test/java/tachyon/client/block/BufferedBlockOutStreamTest.java\n@@ -111,10 +111,10 @@\n   @Test\n   public void doubleFlush() throws Exception {\n     mTestStream.write(INCREASING_BYTES, 1, 10);\n-    Assert.assertEquals(0, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(0, mTestStream.getFlushedBytes());\n     mTestStream.flush();\n-    Assert.assertEquals(10, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(10, mTestStream.getFlushedBytes());\n     mTestStream.flush();\n-    Assert.assertEquals(10, mTestStream.getBytesFlushed());\n+    Assert.assertEquals(10, mTestStream.getFlushedBytes());\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 116,
        "bugNodeStartChar": 4381,
        "bugNodeLength": 29,
        "fixLineNum": 116,
        "fixNodeStartChar": 4381,
        "fixNodeLength": 29,
        "sourceBeforeFix": "mTestStream.getBytesFlushed()",
        "sourceAfterFix": "mTestStream.getFlushedBytes()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 90,
        "bugNodeStartChar": 4284,
        "bugNodeLength": 30,
        "fixLineNum": 90,
        "fixNodeStartChar": 4195,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(2)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 187,
        "bugNodeStartChar": 7093,
        "bugNodeLength": 10,
        "fixLineNum": 187,
        "fixNodeStartChar": 7093,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15842",
        "sourceAfterFix": "id=10842"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b3c2d1521f396a5d30a132be0d4e6d648ddc6444",
        "fixCommitParentSHA1": "2c619232b3a734510f2901bc2e01dc6bedf25275",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetricReader.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetricReader.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetricReader.java\nindex c898557..ba68424 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetricReader.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/integration/SpringIntegrationMetricReader.java\n@@ -55,8 +55,8 @@\n \t\t\tString prefix = \"integration.channel.\" + name;\n \t\t\tmetrics.addAll(getStatistics(prefix + \".errorRate\",\n \t\t\t\t\texporter.getChannelErrorRate(name)));\n-\t\t\tmetrics.add(new Metric<Integer>(prefix + \".sendCount\", exporter\n-\t\t\t\t\t.getChannelSendCount(name)));\n+\t\t\tmetrics.add(new Metric<Long>(prefix + \".sendCount\", exporter\n+\t\t\t\t\t.getChannelSendCountLong(name)));\n \t\t\tmetrics.addAll(getStatistics(prefix + \".sendRate\",\n \t\t\t\t\texporter.getChannelSendRate(name)));\n \t\t\tmetrics.add(new Metric<Long>(prefix + \".receiveCount\", exporter\n@@ -66,8 +66,8 @@\n \t\t\tmetrics.addAll(getStatistics(\"integration.handler.\" + name + \".duration\",\n \t\t\t\t\texporter.getHandlerDuration(name)));\n \t\t}\n-\t\tmetrics.add(new Metric<Long>(\"integration.activeHandlerCount\", exporter\n-\t\t\t\t.getActiveHandlerCountLong()));\n+\t\tmetrics.add(new Metric<Integer>(\"integration.activeHandlerCount\", exporter\n+\t\t\t\t.getActiveHandlerCount()));\n \t\tmetrics.add(new Metric<Integer>(\"integration.handlerCount\", exporter\n \t\t\t\t.getHandlerCount()));\n \t\tmetrics.add(new Metric<Integer>(\"integration.channelCount\", exporter\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 58,
        "bugNodeStartChar": 1921,
        "bugNodeLength": 15,
        "fixLineNum": 58,
        "fixNodeStartChar": 1921,
        "fixNodeLength": 12,
        "sourceBeforeFix": "Metric<Integer>",
        "sourceAfterFix": "Metric<Long>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 693,
        "bugNodeStartChar": 23480,
        "bugNodeLength": 61,
        "fixLineNum": 693,
        "fixNodeStartChar": 22788,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GL20.glUniform2(location,toIntBuffer(v,offset,count << 1))",
        "sourceAfterFix": "GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1aaffaf8df78d17e71243df6d94d687893802bb5",
        "fixCommitParentSHA1": "f2773eee696a81aefd01212b86b4f3cc272f57f1",
        "bugFilePath": "core/common/src/main/java/tachyon/wire/ThriftUtils.java",
        "fixPatch": "diff --git a/core/common/src/main/java/tachyon/wire/ThriftUtils.java b/core/common/src/main/java/tachyon/wire/ThriftUtils.java\nindex 01afd0d..6cf3d15 100644\n--- a/core/common/src/main/java/tachyon/wire/ThriftUtils.java\n+++ b/core/common/src/main/java/tachyon/wire/ThriftUtils.java\n@@ -98,7 +98,7 @@\n     result.setFileId(fileInfo.getFileId());\n     result.setName(fileInfo.getName());\n     result.setPath(fileInfo.getPath());\n-    result.setUfsPath(fileInfo.getPath());\n+    result.setUfsPath(fileInfo.getUfsPath());\n     result.setLength(fileInfo.getLength());\n     result.setBlockSizeBytes(fileInfo.getBlockSizeBytes());\n     result.setCreationTimeMs(fileInfo.getCreationTimeMs());\n@@ -144,7 +144,7 @@\n     result.setJob(fromThrift(lineageInfo.getJob()));\n     result.setCreationTimeMs(lineageInfo.getCreationTimeMs());\n     result.setParents(lineageInfo.getParents());\n-    result.setChildren(lineageInfo.getParents());\n+    result.setChildren(lineageInfo.getChildren());\n     return result;\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 147,
        "bugNodeStartChar": 5694,
        "bugNodeLength": 24,
        "fixLineNum": 147,
        "fixNodeStartChar": 5694,
        "fixNodeLength": 25,
        "sourceBeforeFix": "lineageInfo.getParents()",
        "sourceAfterFix": "lineageInfo.getChildren()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "41eef9a090e49f4b0efc537d0c158e590316ccd6",
        "fixCommitParentSHA1": "9ae6c0c8639b9df9417506e9184f827914c7453a",
        "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java",
        "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\nindex 67332cf..b299165 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n@@ -267,7 +267,8 @@\n \n             Header header = createHeader(binlogFileName, event.getHeader(), schemaName, tableName, type);\n             RowChange.Builder rowChangeBuider = RowChange.newBuilder();\n-            if (type != EventType.QUERY) {\n+            if (type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE\n+                && type != EventType.DELETE) {\n                 rowChangeBuider.setIsDdl(true);\n             }\n             rowChangeBuider.setSql(queryString);\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 270,
        "bugNodeStartChar": 13728,
        "bugNodeLength": 23,
        "fixLineNum": 270,
        "fixNodeStartChar": 13728,
        "fixNodeLength": 123,
        "sourceBeforeFix": "type != EventType.QUERY",
        "sourceAfterFix": "type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 80,
        "bugNodeStartChar": 3408,
        "bugNodeLength": 40,
        "fixLineNum": 80,
        "fixNodeStartChar": 3408,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bb562c242d8b01af3b54696ee9bb81d03fdeb66a",
        "fixCommitParentSHA1": "d393a713adc87f73572a23389eef9cf25e8d644c",
        "bugFilePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamContextEnvironment.java",
        "fixPatch": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamContextEnvironment.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamContextEnvironment.java\nindex 010628f..c0216e5 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamContextEnvironment.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamContextEnvironment.java\n@@ -48,7 +48,7 @@\n \n \t@Override\n \tpublic JobExecutionResult execute(String jobName) throws Exception {\n-\t\tPreconditions.checkNotNull(\"Streaming Job name should not be null.\");\n+\t\tPreconditions.checkNotNull(jobName, \"Streaming Job name should not be null.\");\n \n \t\tStreamGraph streamGraph = this.getStreamGraph();\n \t\tstreamGraph.setJobName(jobName);\n",
        "projectName": "apache.flink",
        "bugLineNum": 51,
        "bugNodeStartChar": 1981,
        "bugNodeLength": 68,
        "fixLineNum": 51,
        "fixNodeStartChar": 1981,
        "fixNodeLength": 77,
        "sourceBeforeFix": "Preconditions.checkNotNull(\"Streaming Job name should not be null.\")",
        "sourceAfterFix": "Preconditions.checkNotNull(jobName,\"Streaming Job name should not be null.\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 78,
        "bugNodeStartChar": 3202,
        "bugNodeLength": 10,
        "fixLineNum": 78,
        "fixNodeStartChar": 3202,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15801",
        "sourceAfterFix": "id=10801"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "347894fc4ee82d26280c3a95665fdee04fb48966",
        "fixCommitParentSHA1": "d9559d3f29568c720cd967b2abf0e47745a33a36",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\nindex e8e5fe4..c67449e 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\n@@ -88,14 +88,14 @@\n \t\t\tbreak;\n \t\tcase ADD_NODE_STATUS_DONE:\n \t\t\tlogger.debug(\"Done.\");\n-\t\t\tzController.sendData(doRequestStop());\n+\t\t\tzController.enqueue(doRequestStop());\n \t\t\t// If the node ID is 0, ignore!\n \t\t\tif(incomingMessage.getMessagePayloadByte(2) != 0)\n \t\t\t\tzController.notifyEventListeners(new ZWaveInclusionEvent(ZWaveInclusionEvent.Type.IncludeDone, incomingMessage.getMessagePayloadByte(2)));\n \t\t\tbreak;\n \t\tcase ADD_NODE_STATUS_FAILED:\n \t\t\tlogger.debug(\"Failed.\");\n-\t\t\tzController.sendData(doRequestStop());\n+\t\t\tzController.enqueue(doRequestStop());\n \t\t\tzController.notifyEventListeners(new ZWaveInclusionEvent(ZWaveInclusionEvent.Type.IncludeFail));\n \t\t\tbreak;\n \t\tdefault:\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 91,
        "bugNodeStartChar": 4003,
        "bugNodeLength": 37,
        "fixLineNum": 91,
        "fixNodeStartChar": 4003,
        "fixNodeLength": 36,
        "sourceBeforeFix": "zController.sendData(doRequestStop())",
        "sourceAfterFix": "zController.enqueue(doRequestStop())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c5e7dea98700e040d6dd872015b8dac472b9aa2d",
        "fixCommitParentSHA1": "2f1b20f220a0325b2ca5f0c84b691fabbbb94126",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java\nindex 6ee4c32..40fab2f 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java\n@@ -64,6 +64,6 @@\n     public void testGetRequiredTokens() {\n         InterfaceIsTypeCheck obj = new InterfaceIsTypeCheck();\n         int[] expected = {TokenTypes.INTERFACE_DEF};\n-        assertArrayEquals(expected, obj.getAcceptableTokens());\n+        assertArrayEquals(expected, obj.getRequiredTokens());\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 67,
        "bugNodeStartChar": 2774,
        "bugNodeLength": 25,
        "fixLineNum": 67,
        "fixNodeStartChar": 2774,
        "fixNodeLength": 23,
        "sourceBeforeFix": "obj.getAcceptableTokens()",
        "sourceAfterFix": "obj.getRequiredTokens()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "854af53a74b461754392f0b9e854e8fefe8c0ade",
        "fixCommitParentSHA1": "d038f3abff680835cd2d9d4d9e68428dee0e15dd",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\nindex 7db4ad9..9148579 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n@@ -609,7 +609,7 @@\n                 }\n \n                 logger.trace(\"About to close AtmosphereResource for {} with code {}\", resource, closeCode);\n-                if (!resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()) {\n+                if (!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()) {\n                     // See https://github.com/Atmosphere/atmosphere/issues/1590\n                     // Better to call onDisconnect that onResume.\n                     if (allowedToClose) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 612,
        "bugNodeStartChar": 28512,
        "bugNodeLength": 89,
        "fixLineNum": 612,
        "fixNodeStartChar": 28512,
        "fixNodeLength": 150,
        "sourceBeforeFix": "!resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()",
        "sourceAfterFix": "!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cb2fec4fd92bd8a2f21737e4d1618946ae6170bd",
        "fixCommitParentSHA1": "67e8cb0706ece341bb993ab1f0364d5a904a716c",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/TachyonFS.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java b/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\nindex 1d84345..a70ef6f 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\n@@ -331,7 +331,7 @@\n     if (blockSizeByte > 0) {\n       return (int) mFSMasterClient.createFile(path.getPath(), blockSizeByte, recursive);\n     } else {\n-      return (int) mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.getPath(),\n+      return (int) mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(),\n           blockSizeByte, recursive);\n     }\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 334,
        "bugNodeStartChar": 13366,
        "bugNodeLength": 17,
        "fixLineNum": 334,
        "fixNodeStartChar": 13366,
        "fixNodeLength": 18,
        "sourceBeforeFix": "ufsPath.getPath()",
        "sourceAfterFix": "ufsPath.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "28474aa30adebc397ecdb993d62317e5659fce4a",
        "fixCommitParentSHA1": "f21e7940ba9d86cfdd6acd8a3d40d5f5e24806a2",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\nindex d4e0774..356c9fb 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\n@@ -43,6 +43,7 @@\n  *\n  * @author Gary Russell\n  * @author Stephane Nicoll\n+ * @author Artem Bilan\n  * @since 1.5.0\n  */\n @ConfigurationProperties(prefix = \"spring.kafka\")\n@@ -199,7 +200,7 @@\n \t\t * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka\n \t\t * if 'enable.auto.commit' true.\n \t\t */\n-\t\tprivate Long autoCommitInterval;\n+\t\tprivate Integer autoCommitInterval;\n \n \t\t/**\n \t\t * What to do when there is no initial offset in Kafka or if the current offset\n@@ -264,11 +265,11 @@\n \t\t\treturn this.ssl;\n \t\t}\n \n-\t\tpublic Long getAutoCommitInterval() {\n+\t\tpublic Integer getAutoCommitInterval() {\n \t\t\treturn this.autoCommitInterval;\n \t\t}\n \n-\t\tpublic void setAutoCommitInterval(Long autoCommitInterval) {\n+\t\tpublic void setAutoCommitInterval(Integer autoCommitInterval) {\n \t\t\tthis.autoCommitInterval = autoCommitInterval;\n \t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 198,
        "bugNodeStartChar": 5905,
        "bugNodeLength": 164,
        "fixLineNum": 198,
        "fixNodeStartChar": 5905,
        "fixNodeLength": 167,
        "sourceBeforeFix": "/**   * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true.  */ private Long autoCommitInterval; ",
        "sourceAfterFix": "/**   * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true.  */ private Integer autoCommitInterval; "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1adccc7a5bdc515f01ae6bd644097ab85336bd84",
        "fixCommitParentSHA1": "ac703759a1cede64d1b718cc8e7be84f6b7916d9",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\nindex c907ba8..6c7dc17 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n@@ -997,7 +997,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.clear();\n \n@@ -1019,7 +1019,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1051,7 +1051,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // call evictAll\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.evictAll();\n \n@@ -1073,7 +1073,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1109,7 +1109,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.loadAll(true);\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1054,
        "bugNodeStartChar": 37744,
        "bugNodeLength": 37,
        "fixLineNum": 1054,
        "fixNodeStartChar": 37744,
        "fixNodeLength": 54,
        "sourceBeforeFix": "hazelcastFactory.newHazelcastClient()",
        "sourceAfterFix": "hazelcastFactory.newHazelcastClient(newClientConfig())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cb84b2788aeed6aad2bc4b1acb98290e060861e2",
        "fixCommitParentSHA1": "01c26c5311d462a0d78fbf88dfd79dbcceeb3a21",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java\nindex 8ee00b8..d9a7ca9 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestHbck.java\n@@ -253,7 +253,7 @@\n       Assert.assertEquals(1, result.size());\n       hbck.assigns(Arrays.asList(result.keySet().toArray(new String[0])).stream()\n           .map(regionName -> regionName.split(\"\\\\.\")[1]).collect(Collectors.toList()));\n-      ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor());\n+      ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor());\n       // now the state should be fixed\n       result = hbck.getFailedSplitMergeLegacyRegions(Arrays.asList(TableName.valueOf(testTable)));\n       Assert.assertEquals(0, result.size());\n@@ -290,7 +290,7 @@\n       Assert.assertEquals(2, result.size());\n       hbck.assigns(Arrays.asList(result.keySet().toArray(new String[0])).stream()\n           .map(regionName -> regionName.split(\"\\\\.\")[1]).collect(Collectors.toList()));\n-      ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor());\n+      ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor());\n       // now the state should be fixed\n       result = hbck.getFailedSplitMergeLegacyRegions(Arrays.asList(TableName.valueOf(testTable)));\n       Assert.assertEquals(0, result.size());\n@@ -310,7 +310,7 @@\n       Assert.assertEquals(2, result.size());\n       hbck.assigns(Arrays.asList(result.keySet().toArray(new String[0])).stream()\n           .map(regionName -> regionName.split(\"\\\\.\")[1]).collect(Collectors.toList()));\n-      ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor());\n+      ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor());\n       // now the state should be fixed\n       result = hbck.getFailedSplitMergeLegacyRegions(Arrays.asList(TableName.valueOf(testTable)));\n       Assert.assertEquals(0, result.size());\n",
        "projectName": "apache.hbase",
        "bugLineNum": 313,
        "bugNodeStartChar": 14031,
        "bugNodeLength": 83,
        "fixLineNum": 313,
        "fixNodeStartChar": 14031,
        "fixNodeLength": 78,
        "sourceBeforeFix": "ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor())",
        "sourceAfterFix": "ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0355f17f04738ad9315d0c8ecad1b282f836e7f3",
        "fixCommitParentSHA1": "fdc46c53e6d885307d0ff3f8ceea5474267d1f64",
        "bugFilePath": "tool/src/org/antlr/v4/tool/DOTGenerator.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/tool/DOTGenerator.java b/tool/src/org/antlr/v4/tool/DOTGenerator.java\nindex 3788310..59ade76 100644\n--- a/tool/src/org/antlr/v4/tool/DOTGenerator.java\n+++ b/tool/src/org/antlr/v4/tool/DOTGenerator.java\n@@ -284,7 +284,7 @@\n \t\t\t\t\tSetTransition set = (SetTransition)edge;\n \t\t\t\t\tString label = set.label().toString();\n \t\t\t\t\tif ( isLexer ) label = set.label().toString(true);\n-\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tif ( edge instanceof NotSetTransition ) label = \"~\"+label;\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n@@ -293,7 +293,7 @@\n \t\t\t\t\tRangeTransition range = (RangeTransition)edge;\n \t\t\t\t\tString label = range.label().toString();\n \t\t\t\t\tif ( isLexer ) label = range.toString();\n-\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n \t\t\t\telse {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 287,
        "bugNodeStartChar": 10574,
        "bugNodeLength": 23,
        "fixLineNum": 287,
        "fixNodeStartChar": 10574,
        "fixNodeLength": 30,
        "sourceBeforeFix": "grammar.getTokenNames()",
        "sourceAfterFix": "grammar.getTokenDisplayNames()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d298a84f8d65d9b4edf47c7b742921ec134648d1",
        "fixCommitParentSHA1": "aee808a686afac2b9bafd0f7dca8fcca094072c9",
        "bugFilePath": "components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java",
        "fixPatch": "diff --git a/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java b/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\nindex 1123c29..0f2984a 100644\n--- a/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\n+++ b/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\n@@ -72,11 +72,11 @@\n     private Boolean throwExceptionOnFailure;\n     @UriParam\n     private Boolean transferException;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean keepAlive = Boolean.TRUE;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean tcpNoDelay = Boolean.TRUE;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean reuseAddresses = Boolean.TRUE;\n     @UriParam(label = \"producer\", prefix = \"option.\", multiValue = true)\n     private Map<String, Object> options;\n",
        "projectName": "apache.camel",
        "bugLineNum": 79,
        "bugNodeStartChar": 3213,
        "bugNodeLength": 51,
        "fixLineNum": 79,
        "fixNodeStartChar": 3213,
        "fixNodeLength": 52,
        "sourceBeforeFix": "@UriPath(label=\"producer\",defaultValue=\"true\")",
        "sourceAfterFix": "@UriParam(label=\"producer\",defaultValue=\"true\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586",
        "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Array.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java\nindex e088c30..73562d8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Array.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Array.java\n@@ -311,7 +311,7 @@\n \t * @return {@link #items} */\r\n \tpublic T[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 314,
        "bugNodeStartChar": 11487,
        "bugNodeLength": 26,
        "fixLineNum": 314,
        "fixNodeStartChar": 11174,
        "fixNodeLength": 25,
        "sourceBeforeFix": "sizeNeeded >= items.length",
        "sourceAfterFix": "sizeNeeded > items.length"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\nindex 72e8341..87fa26f 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1758,
        "bugNodeStartChar": 79217,
        "bugNodeLength": 22,
        "fixLineNum": 1758,
        "fixNodeStartChar": 79217,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(239)",
        "sourceAfterFix": "new StringBuilder(238)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "21b9d7485fe3df950479157067bbd1da306592e0",
        "fixCommitParentSHA1": "2ec24808ef09ddf5108dc9cc8e88764e8e83acc3",
        "bugFilePath": "pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/OptimizerNode.java",
        "fixPatch": "diff --git a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/OptimizerNode.java b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/OptimizerNode.java\nindex 73bcc6d..f38866f 100644\n--- a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/OptimizerNode.java\n+++ b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/OptimizerNode.java\n@@ -1525,7 +1525,7 @@\n \t\n \tpublic boolean keepsUniqueProperty(FieldSet uniqueSet, int input) {\n \t\tfor (Integer uniqueField : uniqueSet) {\n-\t\t\tif (isFieldKept(uniqueField, input) == false) {\n+\t\t\tif (isFieldKept(input, uniqueField) == false) {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 1528,
        "bugNodeStartChar": 50409,
        "bugNodeLength": 31,
        "fixLineNum": 1528,
        "fixNodeStartChar": 50409,
        "fixNodeLength": 31,
        "sourceBeforeFix": "isFieldKept(uniqueField,input)",
        "sourceAfterFix": "isFieldKept(input,uniqueField)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d2b1bc5c1f0762f06b72792cbf2885b40599d905",
        "fixCommitParentSHA1": "03eaeaf76d01f836c3a12e0c24f5ab9ca2701720",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 331,
        "bugNodeStartChar": 12651,
        "bugNodeLength": 26,
        "fixLineNum": 331,
        "fixNodeStartChar": 12651,
        "fixNodeLength": 27,
        "sourceBeforeFix": "Integer.valueOf(tokens[3])",
        "sourceAfterFix": "Integer.parseInt(tokens[3])"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cc848a1c24959c2f6941234b77399fbd58ecd3ca",
        "fixCommitParentSHA1": "187d9a29a5b1862534c0ae529b1f1b017f19aed9",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\nindex 15caa76..5ac6121 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n@@ -174,11 +174,11 @@\n \n     @Override\n     public String apiFileFolder() {\n-        return (outputFolder + File.separator + apiFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + apiFolder).replace(\"/\", File.separator);\n     }\n \n     public String modelFileFolder() {\n-        return (outputFolder + File.separator + modelFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + modelFolder).replace(\"/\", File.separator);\n     }\n \n     @Override\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 177,
        "bugNodeStartChar": 6872,
        "bugNodeLength": 75,
        "fixLineNum": 177,
        "fixNodeStartChar": 6872,
        "fixNodeLength": 72,
        "sourceBeforeFix": "(outputFolder + File.separator + apiFolder).replaceAll(\"/\",File.separator)",
        "sourceAfterFix": "(outputFolder + File.separator + apiFolder).replace(\"/\",File.separator)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8a34e1589d4d35e5f00328e562922023d4e616fd",
        "fixCommitParentSHA1": "9fb28cb721600113962069a8b2dbe19a0cd4a844",
        "bugFilePath": "titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java",
        "fixPatch": "diff --git a/titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java b/titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java\nindex 85961d9..16bbd6e 100644\n--- a/titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java\n+++ b/titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java\n@@ -49,7 +49,7 @@\n \n     public void testGraphTestSuite() throws Exception {\n         this.stopWatch();                       //Excluded test case because toString representation is non-standard\n-        doTestSuite(new GraphTestSuite(this), ImmutableSet.of(\"testStringRepresentation\"));\n+        doTestSuite(new GraphTestSuite(this), ImmutableSet.of(\"testStringRepresentation\",\"testDataTypeValidationOnProperties\"));\n         printTestPerformance(\"GraphTestSuite\", this.stopWatch());\n     }\n \n",
        "projectName": "thinkaurelius.titan",
        "bugLineNum": 52,
        "bugNodeStartChar": 2013,
        "bugNodeLength": 43,
        "fixLineNum": 52,
        "fixNodeStartChar": 2013,
        "fixNodeLength": 80,
        "sourceBeforeFix": "ImmutableSet.of(\"testStringRepresentation\")",
        "sourceAfterFix": "ImmutableSet.of(\"testStringRepresentation\",\"testDataTypeValidationOnProperties\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ad626ae51a157306ddf4165f13ff5eb5b4d5e8b",
        "fixCommitParentSHA1": "45397fe974e1390cd39a34fc2eb216f3771ddf06",
        "bugFilePath": "flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KvStateServerTest.java",
        "fixPatch": "diff --git a/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KvStateServerTest.java b/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KvStateServerTest.java\nindex 8af9cf5..79c23ad 100644\n--- a/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KvStateServerTest.java\n+++ b/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KvStateServerTest.java\n@@ -79,7 +79,8 @@\n \t@AfterClass\n \tpublic static void tearDown() throws Exception {\n \t\tif (NIO_GROUP != null) {\n-\t\t\tNIO_GROUP.shutdownGracefully();\n+\t\t\t// note: no \"quiet period\" to not trigger Netty#4357\n+\t\t\tNIO_GROUP.shutdownGracefully(0, 10, TimeUnit.SECONDS);\n \t\t}\n \t}\n \n@@ -191,7 +192,8 @@\n \t\t\tif (bootstrap != null) {\n \t\t\t\tEventLoopGroup group = bootstrap.group();\n \t\t\t\tif (group != null) {\n-\t\t\t\t\tgroup.shutdownGracefully();\n+\t\t\t\t\t// note: no \"quiet period\" to not trigger Netty#4357\n+\t\t\t\t\tgroup.shutdownGracefully(0, 10, TimeUnit.SECONDS);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 194,
        "bugNodeStartChar": 7344,
        "bugNodeLength": 26,
        "fixLineNum": 195,
        "fixNodeStartChar": 7402,
        "fixNodeLength": 49,
        "sourceBeforeFix": "group.shutdownGracefully()",
        "sourceAfterFix": "group.shutdownGracefully(0,10,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9e76b5319ef9790d8bce27eacbc2aff4ba312cac",
        "fixCommitParentSHA1": "1848e73ce6ce563af315b6a51b60e2cd1a164fbe",
        "bugFilePath": "resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java",
        "fixPatch": "diff --git a/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java b/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java\nindex 8738969..9218a0c 100644\n--- a/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java\n+++ b/resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java\n@@ -499,7 +499,7 @@\n         try {\n             InetAddress address = resolver.resolve(\"10.0.0.1\").syncUninterruptibly().getNow();\n \n-            assertEquals(\"10.0.0.1\", address.getHostName());\n+            assertEquals(\"10.0.0.1\", address.getHostAddress());\n         } finally {\n             resolver.close();\n         }\n",
        "projectName": "netty.netty",
        "bugLineNum": 502,
        "bugNodeStartChar": 18159,
        "bugNodeLength": 21,
        "fixLineNum": 502,
        "fixNodeStartChar": 18159,
        "fixNodeLength": 24,
        "sourceBeforeFix": "address.getHostName()",
        "sourceAfterFix": "address.getHostAddress()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b6555180a56d77e9043823160de051498ff480da",
        "fixCommitParentSHA1": "4e37f07aaad1d895ff0195cf580a28d0cfebe178",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java b/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\nindex 87ce4cd..9ed7930 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/impl/nearcache/invalidation/InvalidationMemberAddRemoveTest.java\n@@ -153,7 +153,7 @@\n         //stop threads\n         stopTest.set(true);\n         shadowMember.join();\n-        clearFromMember.start();\n+        clearFromMember.join();\n         populateClientNearCache.join();\n         putFromMember.join();\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 156,
        "bugNodeStartChar": 5641,
        "bugNodeLength": 23,
        "fixLineNum": 156,
        "fixNodeStartChar": 5641,
        "fixNodeLength": 22,
        "sourceBeforeFix": "clearFromMember.start()",
        "sourceAfterFix": "clearFromMember.join()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b7dfbc0a93d9a7135a1bbb1cc32fd715b2091eae",
        "fixCommitParentSHA1": "fa46812ffcb2f205c9b2d3fddd642b614354ae69",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 1ebeec5..96190fb 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1569,7 +1569,7 @@\n         value.setTestWhileIdle(this.isTestWhileIdle());\n \n         value.setDefaultAutoCommit(this.isDefaultAutoCommit());\n-        value.setDefaultReadOnly(this.isDefaultAutoCommit());\n+        value.setDefaultReadOnly(this.getDefaultReadOnly());\n         value.setDefaultTransactionIsolation(this.getDefaultTransactionIsolation());\n \n         value.setLogicConnectErrorCount(connectErrorCount.getAndSet(0));\n@@ -2294,7 +2294,7 @@\n         dataMap.put(\"TestWhileIdle\", this.isTestWhileIdle());\n \n         dataMap.put(\"DefaultAutoCommit\", this.isDefaultAutoCommit());\n-        dataMap.put(\"DefaultReadOnly\", this.isDefaultAutoCommit());\n+        dataMap.put(\"DefaultReadOnly\", this.getDefaultReadOnly());\n         dataMap.put(\"DefaultTransactionIsolation\", this.getDefaultTransactionIsolation());\n \n         dataMap.put(\"LogicConnectCount\", connectCount);\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 2297,
        "bugNodeStartChar": 78160,
        "bugNodeLength": 26,
        "fixLineNum": 2297,
        "fixNodeStartChar": 78160,
        "fixNodeLength": 25,
        "sourceBeforeFix": "this.isDefaultAutoCommit()",
        "sourceAfterFix": "this.getDefaultReadOnly()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "284988f0cd9275e98b31a72440965fb4ce60c1c8",
        "fixCommitParentSHA1": "3f236dc95190c3304d69013888846e4f3c0ce8df",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java\nindex e79441c..5872f56 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/security/SecurityFilterAutoConfiguration.java\n@@ -52,7 +52,7 @@\n @EnableConfigurationProperties\n @ConditionalOnClass({ AbstractSecurityWebApplicationInitializer.class,\n \t\tSessionCreationPolicy.class })\n-@AutoConfigureAfter(SpringBootWebSecurityConfiguration.class)\n+@AutoConfigureAfter(SecurityAutoConfiguration.class)\n public class SecurityFilterAutoConfiguration {\n \n \tprivate static final String DEFAULT_FILTER_NAME = AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME;\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 55,
        "bugNodeStartChar": 2361,
        "bugNodeLength": 40,
        "fixLineNum": 55,
        "fixNodeStartChar": 2361,
        "fixNodeLength": 31,
        "sourceBeforeFix": "SpringBootWebSecurityConfiguration.class",
        "sourceAfterFix": "SecurityAutoConfiguration.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6031e948694c50252def3e1df5a65323567e03ed",
        "fixCommitParentSHA1": "baa9d88d9f8679d07c0a506ba3994790d6a1b505",
        "bugFilePath": "security/src/test/java/org/jboss/as/security/test/SecurityDomainModelv1UnitTestCase.java",
        "fixPatch": "diff --git a/security/src/test/java/org/jboss/as/security/test/SecurityDomainModelv1UnitTestCase.java b/security/src/test/java/org/jboss/as/security/test/SecurityDomainModelv1UnitTestCase.java\nindex 2c2ac81..43a8689 100644\n--- a/security/src/test/java/org/jboss/as/security/test/SecurityDomainModelv1UnitTestCase.java\n+++ b/security/src/test/java/org/jboss/as/security/test/SecurityDomainModelv1UnitTestCase.java\n@@ -75,6 +75,6 @@\n         //Make sure the models from the two controllers are identical\n         super.compare(modelA, modelB);\n \n-        assertRemoveSubsystemResources(servicesA);\n+        assertRemoveSubsystemResources(servicesB);\n    }\n }\n\\ No newline at end of file\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 78,
        "bugNodeStartChar": 3488,
        "bugNodeLength": 41,
        "fixLineNum": 78,
        "fixNodeStartChar": 3488,
        "fixNodeLength": 41,
        "sourceBeforeFix": "assertRemoveSubsystemResources(servicesA)",
        "sourceAfterFix": "assertRemoveSubsystemResources(servicesB)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "8308774c0daeeab64404f34333d927a666dd31d6",
        "fixCommitParentSHA1": "9837d651146a9006b363a535ae957e537b1dac8a",
        "bugFilePath": "modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java",
        "fixPatch": "diff --git a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\nindex 960cfc5..8f8c9a0 100644\n--- a/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n+++ b/modules/activiti-diagram-rest/src/main/java/org/activiti/rest/diagram/services/BaseProcessDefinitionDiagramLayoutResource.java\n@@ -436,7 +436,7 @@\n \r\n         // If active activities nas no instance of this callActivity then add\r\n         // last definition\r\n-        if (processInstanceArray.size() == 0) {\r\n+        if (processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())) {\r\n           // Get last definition by key\r\n           ProcessDefinition lastProcessDefinition = repositoryService\r\n               .createProcessDefinitionQuery()\r\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 439,
        "bugNodeStartChar": 19694,
        "bugNodeLength": 32,
        "fixLineNum": 439,
        "fixNodeStartChar": 19256,
        "fixNodeLength": 105,
        "sourceBeforeFix": "processInstanceArray.size() == 0",
        "sourceAfterFix": "processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "27fd2f243c6ed593596d06ca42e1892059ae6ffc",
        "fixCommitParentSHA1": "8b901b146a139c8e59983d81c1d4574ac7bc9ca5",
        "bugFilePath": "src/test/java/spark/BooksIntegrationTest.java",
        "fixPatch": "diff --git a/src/test/java/spark/BooksIntegrationTest.java b/src/test/java/spark/BooksIntegrationTest.java\nindex 00284df..529b715 100644\n--- a/src/test/java/spark/BooksIntegrationTest.java\n+++ b/src/test/java/spark/BooksIntegrationTest.java\n@@ -167,7 +167,7 @@\n     @Test\n     public void wontFindBook() {\n         try {\n-            doMethod(\"GET\", \"/books/\" + bookId, null);\n+            getResponse(\"GET\", \"/books/\" + bookId, null);\n         } catch (Exception e) {\n             if (e instanceof FileNotFoundException) {\n                 assertTrue(true);\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 170,
        "bugNodeStartChar": 4642,
        "bugNodeLength": 41,
        "fixLineNum": 170,
        "fixNodeStartChar": 4642,
        "fixNodeLength": 44,
        "sourceBeforeFix": "doMethod(\"GET\",\"/books/\" + bookId,null)",
        "sourceAfterFix": "getResponse(\"GET\",\"/books/\" + bookId,null)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "651d6ce8d5e0d95dabb54d924e7a098c0770028b",
        "fixCommitParentSHA1": "ab6feae737b3038532d057e87fd83c58bad3b3cc",
        "bugFilePath": "webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java",
        "fixPatch": "diff --git a/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java b/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\nindex ed32dd7..4b615b7 100644\n--- a/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\n+++ b/webserver/src/main/java/fi/iki/elonen/SimpleWebServer.java\n@@ -527,7 +527,7 @@\n                     } else if (len < 1024 * 1024) {\n                         msg.append(len / 1024).append(\".\").append(len % 1024 / 10 % 100).append(\" KB\");\n                     } else {\n-                        msg.append(len / (1024 * 1024)).append(\".\").append(len % (1024 * 1024) / 10 % 100).append(\" MB\");\n+                        msg.append(len / (1024 * 1024)).append(\".\").append(len % (1024 * 1024) / 10000 % 100).append(\" MB\");\n                     }\n                     msg.append(\")</span></li>\");\n                 }\n",
        "projectName": "NanoHttpd.nanohttpd",
        "bugLineNum": 530,
        "bugNodeStartChar": 21690,
        "bugNodeLength": 24,
        "fixLineNum": 530,
        "fixNodeStartChar": 21690,
        "fixNodeLength": 27,
        "sourceBeforeFix": "len % (1024 * 1024) / 10",
        "sourceAfterFix": "len % (1024 * 1024) / 10000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1483181d1cddaba1aaa283fae5f1d5b7c347802f",
        "fixCommitParentSHA1": "a0fbd5b93f93eec0189ead0109f4e08a3db82c71",
        "bugFilePath": "src/com/google/javascript/jscomp/lint/CheckForInOverArray.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/lint/CheckForInOverArray.java b/src/com/google/javascript/jscomp/lint/CheckForInOverArray.java\nindex 52efeb7..9169141 100644\n--- a/src/com/google/javascript/jscomp/lint/CheckForInOverArray.java\n+++ b/src/com/google/javascript/jscomp/lint/CheckForInOverArray.java\n@@ -89,6 +89,6 @@\n \n   @Override\n   public void hotSwapScript(Node scriptRoot, Node originalRoot) {\n-    NodeTraversal.traverseEs6(compiler, originalRoot, this);\n+    NodeTraversal.traverseEs6(compiler, scriptRoot, this);\n   }\n }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 92,
        "bugNodeStartChar": 2919,
        "bugNodeLength": 55,
        "fixLineNum": 92,
        "fixNodeStartChar": 2919,
        "fixNodeLength": 53,
        "sourceBeforeFix": "NodeTraversal.traverseEs6(compiler,originalRoot,this)",
        "sourceAfterFix": "NodeTraversal.traverseEs6(compiler,scriptRoot,this)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3d732616366b93a75351f4f43ecaa80d2d544abe",
        "fixCommitParentSHA1": "6b264008a9bcdf5ffc9ebf0f6a4b71be07766208",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\nindex be1c154..dacaae9 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n@@ -431,7 +431,7 @@\n         if (!root.exists()) {\n           // storage directory does not exist\n           if (startOpt != StartupOption.FORMAT) {\n-            LOG.info(\"Storage directory \" + rootPath + \" does not exist\");\n+            LOG.warn(\"Storage directory \" + rootPath + \" does not exist\");\n             return StorageState.NON_EXISTENT;\n           }\n           LOG.info(rootPath + \" does not exist. Creating ...\");\n@@ -440,15 +440,15 @@\n         }\n         // or is inaccessible\n         if (!root.isDirectory()) {\n-          LOG.info(rootPath + \"is not a directory\");\n+          LOG.warn(rootPath + \"is not a directory\");\n           return StorageState.NON_EXISTENT;\n         }\n         if (!root.canWrite()) {\n-          LOG.info(\"Cannot access storage directory \" + rootPath);\n+          LOG.warn(\"Cannot access storage directory \" + rootPath);\n           return StorageState.NON_EXISTENT;\n         }\n       } catch(SecurityException ex) {\n-        LOG.info(\"Cannot access storage directory \" + rootPath, ex);\n+        LOG.warn(\"Cannot access storage directory \" + rootPath, ex);\n         return StorageState.NON_EXISTENT;\n       }\n \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 443,
        "bugNodeStartChar": 15088,
        "bugNodeLength": 41,
        "fixLineNum": 443,
        "fixNodeStartChar": 15088,
        "fixNodeLength": 41,
        "sourceBeforeFix": "LOG.info(rootPath + \"is not a directory\")",
        "sourceAfterFix": "LOG.warn(rootPath + \"is not a directory\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b302cf93edee0e2ab3c9998f380ede8e8ea7727",
        "fixCommitParentSHA1": "aa7627455539a95dd6bd4e8e20b2b98ea9ffb1ab",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\nindex 6e25f77..05169f6 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n@@ -995,12 +995,12 @@\n      * {@inheritDoc}\n      */\n     @Override\n-    public AtmosphereResource addAtmosphereResource(AtmosphereResource r) {\n+    public Broadcaster addAtmosphereResource(AtmosphereResource r) {\n \n         try {\n             if (destroyed.get()) {\n                 logger.debug(DESTROYED, getID(), \"addAtmosphereResource(AtmosphereResource<?, ?> r\");\n-                return r;\n+                return this;\n             }\n \n             start();\n@@ -1027,7 +1027,7 @@\n             }\n \n             if (resources.contains(r)) {\n-                return r;\n+                return this;\n             }\n \n             // We need to synchronize here to let the push method cache message.\n@@ -1051,7 +1051,7 @@\n                 }\n             }\n         }\n-        return r;\n+        return this;\n     }\n \n     private boolean isAtmosphereResourceValid(AtmosphereResource r) {\n@@ -1064,15 +1064,15 @@\n      * {@inheritDoc}\n      */\n     @Override\n-    public AtmosphereResource removeAtmosphereResource(AtmosphereResource r) {\n+    public Broadcaster removeAtmosphereResource(AtmosphereResource r) {\n \n         if (destroyed.get()) {\n             logger.debug(DESTROYED, getID(), \"removeAtmosphereResource(AtmosphereResource r)\");\n-            return r;\n+            return this;\n         }\n \n         if (!resources.contains(r)) {\n-            return null;\n+            return this;\n         }\n         // Prevent two thread to mix operation\n         boolean removed = resources.remove(r);\n@@ -1089,7 +1089,7 @@\n                 }\n             }\n         }\n-        return r;\n+        return this;\n     }\n \n     private void notifyIdleListener() {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 994,
        "bugNodeStartChar": 37483,
        "bugNodeLength": 2416,
        "fixLineNum": 994,
        "fixNodeStartChar": 37483,
        "fixNodeLength": 2409,
        "sourceBeforeFix": "/**   * {@inheritDoc}  */ @Override public AtmosphereResource addAtmosphereResource(AtmosphereResource r){   try {     if (destroyed.get()) {       logger.debug(DESTROYED,getID(),\"addAtmosphereResource(AtmosphereResource<?, ?> r\");       return r;     }     start();     if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) {       throw new IllegalStateException(\"Broadcaster \" + this + \" cannot be used as its scope is set to REQUEST\");     }     if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) {       if (policy == POLICY.FIFO) {         AtmosphereResource resource=resources.poll();         try {           logger.warn(\"Too many resource. Forcing resume of {} \",resource);           resource.resume();         }  catch (        Throwable t) {           logger.warn(\"failed to resume resource {} \",resource,t);         }       }  else       if (policy == POLICY.REJECT) {         throw new RejectedExecutionException(String.format(\"Maximum suspended AtmosphereResources %s\",maxSuspendResource));       }     }     if (resources.contains(r)) {       return r;     } synchronized (concurrentSuspendBroadcast) {       if (resources.isEmpty()) {         BroadcasterFactory.getDefault().add(this,name);       }       checkCachedAndPush(r,r.getAtmosphereResourceEvent());       if (isAtmosphereResourceValid(r)) {         resources.add(r);       }     }   }   finally {     if (resources.size() > 0) { synchronized (awaitBarrier) {         awaitBarrier.notifyAll();       }     }   }   return r; } ",
        "sourceAfterFix": "/**   * {@inheritDoc}  */ @Override public Broadcaster addAtmosphereResource(AtmosphereResource r){   try {     if (destroyed.get()) {       logger.debug(DESTROYED,getID(),\"addAtmosphereResource(AtmosphereResource<?, ?> r\");       return r;     }     start();     if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) {       throw new IllegalStateException(\"Broadcaster \" + this + \" cannot be used as its scope is set to REQUEST\");     }     if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) {       if (policy == POLICY.FIFO) {         AtmosphereResource resource=resources.poll();         try {           logger.warn(\"Too many resource. Forcing resume of {} \",resource);           resource.resume();         }  catch (        Throwable t) {           logger.warn(\"failed to resume resource {} \",resource,t);         }       }  else       if (policy == POLICY.REJECT) {         throw new RejectedExecutionException(String.format(\"Maximum suspended AtmosphereResources %s\",maxSuspendResource));       }     }     if (resources.contains(r)) {       return r;     } synchronized (concurrentSuspendBroadcast) {       if (resources.isEmpty()) {         BroadcasterFactory.getDefault().add(this,name);       }       checkCachedAndPush(r,r.getAtmosphereResourceEvent());       if (isAtmosphereResourceValid(r)) {         resources.add(r);       }     }   }   finally {     if (resources.size() > 0) { synchronized (awaitBarrier) {         awaitBarrier.notifyAll();       }     }   }   return r; } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a3385db7759264357d7b1a88e736b3b015e0c4bd",
        "fixCommitParentSHA1": "e301c4602d9eb7361d905e48cf6cd5b6234c016e",
        "bugFilePath": "servers/src/main/java/tachyon/worker/block/evictor/GreedyEvictor.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/block/evictor/GreedyEvictor.java b/servers/src/main/java/tachyon/worker/block/evictor/GreedyEvictor.java\nindex 4328f80..3694f09 100644\n--- a/servers/src/main/java/tachyon/worker/block/evictor/GreedyEvictor.java\n+++ b/servers/src/main/java/tachyon/worker/block/evictor/GreedyEvictor.java\n@@ -52,12 +52,12 @@\n       throws IOException {\n     // 1. Select a StorageDir that has enough capacity for required bytes.\n     StorageDir selectedDir = null;\n-    if (location.belongTo(BlockStoreLocation.anyTier())) {\n+    if (location.equals(BlockStoreLocation.anyTier())) {\n       selectedDir = selectDirToEvictBlocksFromAnyTier(availableBytes);\n     } else {\n       int tierAlias = location.tierAlias();\n       StorageTier tier = mMetaManager.getTier(tierAlias);\n-      if (location.belongTo(BlockStoreLocation.anyDirInTier(tierAlias))) {\n+      if (location.equals(BlockStoreLocation.anyDirInTier(tierAlias))) {\n         selectedDir = selectDirToEvictBlocksFromTier(tier, availableBytes);\n       } else {\n         int dirIndex = location.dir();\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 60,
        "bugNodeStartChar": 2375,
        "bugNodeLength": 61,
        "fixLineNum": 60,
        "fixNodeStartChar": 2375,
        "fixNodeLength": 59,
        "sourceBeforeFix": "location.belongTo(BlockStoreLocation.anyDirInTier(tierAlias))",
        "sourceAfterFix": "location.equals(BlockStoreLocation.anyDirInTier(tierAlias))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b8c3e8445524a78fda3e7823893a4ef8415d7fa3",
        "fixCommitParentSHA1": "227a1699ac041b9e99e31ba3dfcff5d2307ee77b",
        "bugFilePath": "dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java",
        "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\nindex b613787..28d43fc 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/org/apache/dubbo/config/spring/util/PropertySourcesUtils.java\n@@ -55,7 +55,7 @@\n                     if (name.startsWith(normalizedPrefix)) {\n                         String subName = name.substring(normalizedPrefix.length());\n                         String value = propertyResolver.getProperty(name);\n-                        subProperties.put(subName, value);\n+                        subProperties.putIfAbsent(subName, value);\n                     }\n                 }\n             }\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 58,
        "bugNodeStartChar": 3156,
        "bugNodeLength": 33,
        "fixLineNum": 58,
        "fixNodeStartChar": 3156,
        "fixNodeLength": 41,
        "sourceBeforeFix": "subProperties.put(subName,value)",
        "sourceAfterFix": "subProperties.putIfAbsent(subName,value)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java b/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\nindex c0fbf2f..64f4805 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\n@@ -346,7 +346,7 @@\n         final List<String> propertyRefs = new ArrayList<>();\n         parsePropertyString(value, fragments, propertyRefs);\n \n-        final StringBuilder sb = new StringBuilder();\n+        final StringBuilder sb = new StringBuilder(256);\n         final Iterator<String> fragmentsIterator = fragments.iterator();\n         final Iterator<String> propertyRefsIterator = propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 349,
        "bugNodeStartChar": 15460,
        "bugNodeLength": 19,
        "fixLineNum": 349,
        "fixNodeStartChar": 15460,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "898c6236741d2a46907350d1ad116c9509050bc2",
        "fixCommitParentSHA1": "02b875e4b9a1af770c32346f649176787a84fdde",
        "bugFilePath": "src/test/java/io/vertx/test/core/HATest.java",
        "fixPatch": "diff --git a/src/test/java/io/vertx/test/core/HATest.java b/src/test/java/io/vertx/test/core/HATest.java\nindex 984e355..7e5558d 100644\n--- a/src/test/java/io/vertx/test/core/HATest.java\n+++ b/src/test/java/io/vertx/test/core/HATest.java\n@@ -424,7 +424,7 @@\n       } catch (Exception e) {\n         fut.fail(e);\n       }\n-    }, ar -> {\n+    }, false, ar -> {\n       if (!ar.succeeded()) {\n         fail(ar.cause());\n       }\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 420,
        "bugNodeStartChar": 14779,
        "bugNodeLength": 232,
        "fixLineNum": 420,
        "fixNodeStartChar": 14779,
        "fixNodeLength": 239,
        "sourceBeforeFix": "v.executeBlocking(fut -> {   try {     v.simulateKill();     fut.complete();   }  catch (  Exception e) {     fut.fail(e);   } } ,ar -> {   if (!ar.succeeded()) {     fail(ar.cause());   } } )",
        "sourceAfterFix": "v.executeBlocking(fut -> {   try {     v.simulateKill();     fut.complete();   }  catch (  Exception e) {     fut.fail(e);   } } ,false,ar -> {   if (!ar.succeeded()) {     fail(ar.cause());   } } )"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6ec426667bbf19be4fca84eec48e03152e2cfffe",
        "fixCommitParentSHA1": "ff0ad46407f9d0b70f6a074d14d3bd33dadf8f5e",
        "bugFilePath": "jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java",
        "fixPatch": "diff --git a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\nindex 725d665..e39afca 100644\n--- a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n+++ b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n@@ -58,7 +58,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -74,7 +74,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -99,7 +99,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(nullValue()));\n         assertThat(args.isGenerateBuilders(), is(false));\n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 77,
        "bugNodeStartChar": 2835,
        "bugNodeLength": 18,
        "fixLineNum": 77,
        "fixNodeStartChar": 2835,
        "fixNodeLength": 24,
        "sourceBeforeFix": "is(\"/home/source\")",
        "sourceAfterFix": "endsWith(\"/home/source\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "91809146310a94d68249a1e9ef6e2652b0d05843",
        "fixCommitParentSHA1": "5f9ae8a67f4f4ab05048805b31d5a892f7e3e7ed",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex 56712f6..ecfb47e 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -1834,7 +1834,7 @@\n                         try {\n                             notEmpty.signalAll();\n                         } finally {\n-                            lock.lock();\n+                            lock.unlock();\n                         }\n                     }\n \n",
        "projectName": "alibaba.druid",
        "bugLineNum": 1837,
        "bugNodeStartChar": 62572,
        "bugNodeLength": 11,
        "fixLineNum": 1837,
        "fixNodeStartChar": 62572,
        "fixNodeLength": 13,
        "sourceBeforeFix": "lock.lock()",
        "sourceAfterFix": "lock.unlock()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9f941db913334b4b5ed48833522200710e30bb84",
        "fixCommitParentSHA1": "75283481bdcb4d300fbba168187b00793756edd6",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java b/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\nindex a47d327..5f51c49 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\n@@ -130,7 +130,7 @@\n \n             fc.setFilterName(filterName);\n             filterChain.addFilter(fc);\n-            logger.info(\"Installing Filter {}\", servletClassName);\n+            logger.info(\"Installing Filter {}\", filterName);\n         }\n \n     }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 133,
        "bugNodeStartChar": 5977,
        "bugNodeLength": 53,
        "fixLineNum": 133,
        "fixNodeStartChar": 5977,
        "fixNodeLength": 47,
        "sourceBeforeFix": "logger.info(\"Installing Filter {}\",servletClassName)",
        "sourceAfterFix": "logger.info(\"Installing Filter {}\",filterName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5ba6ded7e01cc902e75403dac6cb5c5f9d74f74d",
        "fixCommitParentSHA1": "1d64eaa19505c0791d097a0c3f27e847f7db9c90",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/PacketWriter.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/PacketWriter.java b/core/client/fs/src/main/java/alluxio/client/block/stream/PacketWriter.java\nindex 77f2090..de681b4 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/PacketWriter.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/PacketWriter.java\n@@ -58,10 +58,10 @@\n       if (CommonUtils.isLocalHost(address) && Configuration\n           .getBoolean(PropertyKey.USER_SHORT_CIRCUIT_ENABLED) && !NettyUtils\n           .isDomainSocketSupported(address)) {\n-        LOG.info(\"Creating short circuit output stream for block {} @ {}\", blockId, address);\n+        LOG.debug(\"Creating short circuit output stream for block {} @ {}\", blockId, address);\n         return LocalFilePacketWriter.create(context, address, blockId, options);\n       } else {\n-        LOG.info(\"Creating netty output stream for block {} @ {} from client {}\", blockId, address,\n+        LOG.debug(\"Creating netty output stream for block {} @ {} from client {}\", blockId, address,\n             NetworkAddressUtils.getClientHostName());\n         return NettyPacketWriter\n             .create(context, address, blockId, blockSize, Protocol.RequestType.ALLUXIO_BLOCK,\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 61,
        "bugNodeStartChar": 2126,
        "bugNodeLength": 84,
        "fixLineNum": 61,
        "fixNodeStartChar": 2126,
        "fixNodeLength": 85,
        "sourceBeforeFix": "LOG.info(\"Creating short circuit output stream for block {} @ {}\",blockId,address)",
        "sourceAfterFix": "LOG.debug(\"Creating short circuit output stream for block {} @ {}\",blockId,address)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a7f54a539a4c8f92f4895934480061a2ccbcd499",
        "fixCommitParentSHA1": "77f5f05936af7437ca38ef12ee82f6e2666ed55b",
        "bugFilePath": "clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonXMLWriter.java",
        "fixPatch": "diff --git a/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonXMLWriter.java b/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonXMLWriter.java\nindex 5e66731..14279dd 100644\n--- a/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonXMLWriter.java\n+++ b/clustering/singleton/extension/src/main/java/org/wildfly/extension/clustering/singleton/SingletonXMLWriter.java\n@@ -107,7 +107,7 @@\n     }\n \n     private static void writeAttribute(XMLExtendedStreamWriter writer, ModelNode model, Attribute attribute) throws XMLStreamException {\n-        attribute.getDefinition().getAttributeMarshaller().marshallAsAttribute(attribute.getDefinition(), model, false, writer);\n+        attribute.getDefinition().getMarshaller().marshallAsAttribute(attribute.getDefinition(), model, false, writer);\n     }\n \n     private static <A extends Enum<A> & Attribute> void writeElements(XMLExtendedStreamWriter writer, ModelNode model, Class<A> attributeClass) throws XMLStreamException {\n@@ -121,6 +121,6 @@\n     }\n \n     private static void writeElement(XMLExtendedStreamWriter writer, ModelNode model, Attribute attribute) throws XMLStreamException {\n-        attribute.getDefinition().getAttributeMarshaller().marshallAsElement(attribute.getDefinition(), model, false, writer);\n+        attribute.getDefinition().getMarshaller().marshallAsElement(attribute.getDefinition(), model, false, writer);\n     }\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 110,
        "bugNodeStartChar": 4800,
        "bugNodeLength": 50,
        "fixLineNum": 110,
        "fixNodeStartChar": 4800,
        "fixNodeLength": 41,
        "sourceBeforeFix": "attribute.getDefinition().getAttributeMarshaller()",
        "sourceAfterFix": "attribute.getDefinition().getMarshaller()"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "bd23d1bddd1154c7bc2a249b76d4ffdd5e4cfd92",
        "fixCommitParentSHA1": "6b85df0846dcc8c39c33fb50f19369122090ea63",
        "bugFilePath": "ee/src/main/java/org/jboss/as/ee/subsystem/ManagedExecutorServiceResourceDefinition.java",
        "fixPatch": "diff --git a/ee/src/main/java/org/jboss/as/ee/subsystem/ManagedExecutorServiceResourceDefinition.java b/ee/src/main/java/org/jboss/as/ee/subsystem/ManagedExecutorServiceResourceDefinition.java\nindex 5dbca04..6416034 100644\n--- a/ee/src/main/java/org/jboss/as/ee/subsystem/ManagedExecutorServiceResourceDefinition.java\n+++ b/ee/src/main/java/org/jboss/as/ee/subsystem/ManagedExecutorServiceResourceDefinition.java\n@@ -208,7 +208,7 @@\n             // Validate an unbounded queue\n             if (!queueLength.isDefined() || queueLength.asInt() == Integer.MAX_VALUE) {\n                 if (coreThreads.isDefined() && coreThreads.asInt() <= 0) {\n-                    throw EeLogger.ROOT_LOGGER.invalidCoreThreadsSize(coreThreads.asString());\n+                    throw EeLogger.ROOT_LOGGER.invalidCoreThreadsSize(queueLength.asString());\n                 }\n \n             }\n@@ -216,7 +216,7 @@\n             // Validate a hand-off queue\n             if (queueLength.isDefined() && queueLength.asInt() == 0) {\n                 if (coreThreads.isDefined() && coreThreads.asInt() <= 0) {\n-                    throw EeLogger.ROOT_LOGGER.invalidCoreThreadsSize(coreThreads.asString());\n+                    throw EeLogger.ROOT_LOGGER.invalidCoreThreadsSize(queueLength.asString());\n                 }\n             }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 211,
        "bugNodeStartChar": 11405,
        "bugNodeLength": 22,
        "fixLineNum": 211,
        "fixNodeStartChar": 11405,
        "fixNodeLength": 22,
        "sourceBeforeFix": "coreThreads.asString()",
        "sourceAfterFix": "queueLength.asString()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586",
        "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/LongArray.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/LongArray.java b/gdx/src/com/badlogic/gdx/utils/LongArray.java\nindex be1c6f7..3db12ca 100644\n--- a/gdx/src/com/badlogic/gdx/utils/LongArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/LongArray.java\n@@ -95,7 +95,7 @@\n \tpublic void addAll (long[] array, int offset, int length) {\r\n \t\tlong[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -238,7 +238,7 @@\n \t * @return {@link #items} */\r\n \tpublic long[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 98,
        "bugNodeStartChar": 3878,
        "bugNodeLength": 26,
        "fixLineNum": 98,
        "fixNodeStartChar": 3781,
        "fixNodeLength": 25,
        "sourceBeforeFix": "sizeNeeded >= items.length",
        "sourceAfterFix": "sizeNeeded > items.length"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "bf0147af96c7a48511e897e106c1d5885194c1d7",
        "fixCommitParentSHA1": "5621bd3d860cbfa08bcc9585607695920ebaf0d2",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/util/toolbox/FlexibleAggregationStrategiesTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/util/toolbox/FlexibleAggregationStrategiesTest.java b/camel-core/src/test/java/org/apache/camel/util/toolbox/FlexibleAggregationStrategiesTest.java\nindex bbb2aa9..8d050b4 100644\n--- a/camel-core/src/test/java/org/apache/camel/util/toolbox/FlexibleAggregationStrategiesTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/util/toolbox/FlexibleAggregationStrategiesTest.java\n@@ -173,12 +173,12 @@\n \n         template.sendBody(\"direct:start.timeoutAndCompletionAware\", \"AGGREGATE1\");\n         \n-        assertTrue(timeoutLatch.await(1200, TimeUnit.MILLISECONDS));\n+        assertTrue(timeoutLatch.await(2500, TimeUnit.MILLISECONDS));\n         \n         template.sendBody(\"direct:start.timeoutAndCompletionAware\", \"AGGREGATE2\");\n         template.sendBody(\"direct:start.timeoutAndCompletionAware\", \"AGGREGATE3\");\n \n-        assertTrue(completionLatch.await(1200, TimeUnit.MILLISECONDS));\n+        assertTrue(completionLatch.await(2500, TimeUnit.MILLISECONDS));\n \n         getMockEndpoint(\"mock:result.timeoutAndCompletionAware\").getReceivedExchanges();\n         assertMockEndpointsSatisfied();\n",
        "projectName": "apache.camel",
        "bugLineNum": 181,
        "bugNodeStartChar": 8377,
        "bugNodeLength": 50,
        "fixLineNum": 181,
        "fixNodeStartChar": 8377,
        "fixNodeLength": 50,
        "sourceBeforeFix": "completionLatch.await(1200,TimeUnit.MILLISECONDS)",
        "sourceAfterFix": "completionLatch.await(2500,TimeUnit.MILLISECONDS)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b2eec07c6682767e23d09d688fd784afbfee9add",
        "fixCommitParentSHA1": "55929fd44dbdf69f203d9dacd70ecaa6a30b5b34",
        "bugFilePath": "core/src/test/java/tachyon/UnderFileSystemCluster.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/UnderFileSystemCluster.java b/core/src/test/java/tachyon/UnderFileSystemCluster.java\nindex d328d60..6094918 100644\n--- a/core/src/test/java/tachyon/UnderFileSystemCluster.java\n+++ b/core/src/test/java/tachyon/UnderFileSystemCluster.java\n@@ -72,8 +72,8 @@\n     if (mUfsClz != null && !mUfsClz.equals(\"\")) {\n       try {\n         UnderFileSystemCluster ufsCluster =\n-            (UnderFileSystemCluster) Class.forName(mUfsClz).getConstructor(String.class)\n-                .newInstance(baseDir);\n+            (UnderFileSystemCluster) Class.forName(mUfsClz).getConstructor(String.class,\n+                TachyonConf.class).newInstance(baseDir, tachyonConf);\n         return ufsCluster;\n       } catch (Exception e) {\n         System.out.println(\"Failed to initialize the ufsCluster of \" + mUfsClz\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 75,
        "bugNodeStartChar": 2404,
        "bugNodeLength": 51,
        "fixLineNum": 75,
        "fixNodeStartChar": 2404,
        "fixNodeLength": 86,
        "sourceBeforeFix": "Class.forName(mUfsClz).getConstructor(String.class)",
        "sourceAfterFix": "Class.forName(mUfsClz).getConstructor(String.class,TachyonConf.class)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "63b7cec3050338899e04957cbc7039cd509cd214",
        "fixCommitParentSHA1": "462bc816369822d38dfc34c164fdbe1ac2461e6f",
        "bugFilePath": "junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java",
        "fixPatch": "diff --git a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\nindex b26310c..604d4f8 100644\n--- a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n+++ b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n@@ -113,7 +113,7 @@\n         RuntimeOptionsFactory runtimeOptionsFactory = new RuntimeOptionsFactory(SubClassWithMonoChromeTrue.class);\n         RuntimeOptions runtimeOptions = runtimeOptionsFactory.create();\n \n-        assertFalse(runtimeOptions.isMonochrome());\n+        assertTrue(runtimeOptions.isMonochrome());\n     }\n \n \n@@ -166,12 +166,12 @@\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = false)\n+    @Cucumber.Options(monochrome = true)\n     static class SubClassWithMonoChromeTrue extends BaseClassWithMonoChromeFalse {\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = true)\n+    @Cucumber.Options(monochrome = false)\n     static class BaseClassWithMonoChromeFalse {\n         // empty\n     }\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 116,
        "bugNodeStartChar": 4631,
        "bugNodeLength": 42,
        "fixLineNum": 116,
        "fixNodeStartChar": 4631,
        "fixNodeLength": 41,
        "sourceBeforeFix": "assertFalse(runtimeOptions.isMonochrome())",
        "sourceAfterFix": "assertTrue(runtimeOptions.isMonochrome())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3a82878c2163e69855a8dac520d1e22971d19ff4",
        "fixCommitParentSHA1": "dfe5c9562b476d65d8dc83bb326a3517e2c4b2bc",
        "bugFilePath": "components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java",
        "fixPatch": "diff --git a/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java b/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\nindex 6a9e3f4..4df53bc 100644\n--- a/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\n+++ b/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\n@@ -39,7 +39,7 @@\n         MockEndpoint endpointB = getMockEndpoint(\"mock:b\");\n         MockEndpoint endpointC = getMockEndpoint(\"mock:c\");\n         \n-        endpointA.expectedBodiesReceived(\"A blue car!\", \"A blue car, again!\");\n+        endpointA.expectedBodiesReceivedInAnyOrder(\"A blue car!\", \"A blue car, again!\");\n         endpointA.expectedHeaderReceived(\"color\", \"blue\");\n         endpointB.expectedHeaderReceived(\"color\", \"red\");\n         endpointB.expectedBodiesReceived(\"A red car!\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1694,
        "bugNodeLength": 69,
        "fixLineNum": 42,
        "fixNodeStartChar": 1694,
        "fixNodeLength": 79,
        "sourceBeforeFix": "endpointA.expectedBodiesReceived(\"A blue car!\",\"A blue car, again!\")",
        "sourceAfterFix": "endpointA.expectedBodiesReceivedInAnyOrder(\"A blue car!\",\"A blue car, again!\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f64bf581e7987690846b820cb4e2af554d49165e",
        "fixCommitParentSHA1": "cad45f9bbea8b5dc7b2491b512132367c9577b00",
        "bugFilePath": "examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/webservice/version/LoanBroker.java",
        "fixPatch": "diff --git a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/webservice/version/LoanBroker.java b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/webservice/version/LoanBroker.java\nindex 7abb5c9..0dfe60f 100644\n--- a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/webservice/version/LoanBroker.java\n+++ b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/webservice/version/LoanBroker.java\n@@ -96,7 +96,7 @@\n                 .multicast(new BankResponseAggregationStrategy())\n                     // Camel will create a thread pool with the size of the send to endpoints\n                     // for sending the message in parallel\n-                    .setParallelProcessing(true)\n+                    .parallelProcessing(true)\n                     .to(Constants.BANK1_URI, Constants.BANK2_URI, Constants.BANK3_URI);\n \n     //END SNIPPET: dsl\n",
        "projectName": "apache.camel",
        "bugLineNum": 93,
        "bugNodeStartChar": 3529,
        "bugNodeLength": 501,
        "fixLineNum": 93,
        "fixNodeStartChar": 3529,
        "fixNodeLength": 498,
        "sourceBeforeFix": "from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true)",
        "sourceAfterFix": "from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 710,
        "bugNodeStartChar": 35337,
        "bugNodeLength": 104,
        "fixLineNum": 710,
        "fixNodeStartChar": 35337,
        "fixNodeLength": 104,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,true))"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "48e77d65c60772ad50c7459401021bce60ae3629",
        "fixCommitParentSHA1": "a361d1704398f92f4a1b1071c5e82ee2283bcd6c",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\nindex c493279..d90b4ea 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\n@@ -51,8 +51,8 @@\n     private static final String EXTRA_HTML = \"javadoc.extrahtml\";\n \n     /** HTML tags that do not require a close tag. */\n-    private static final Set<String> SINGLE_TAGS = ImmutableSortedSet.of(\"p\",\n-            \"br\", \"li\", \"dt\", \"dd\", \"td\", \"hr\", \"img\", \"tr\", \"th\", \"td\");\n+    private static final Set<String> SINGLE_TAGS = ImmutableSortedSet.of(\n+            \"br\", \"li\", \"dt\", \"dd\", \"hr\", \"img\", \"p\", \"td\", \"tr\", \"th\");\n \n     /** HTML tags that are allowed in java docs.\n      * From http://www.w3schools.com/tags/default.asp\n@@ -60,11 +60,12 @@\n      */\n     private static final Set<String> ALLOWED_TAGS = ImmutableSortedSet.of(\n             \"a\", \"abbr\", \"acronym\", \"address\", \"area\", \"b\", \"bdo\", \"big\",\n-            \"blockquote\", \"br\", \"caption\", \"cite\", \"code\", \"colgroup\", \"del\",\n-            \"div\", \"dfn\", \"dl\", \"em\", \"fieldset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\",\n-            \"h6\", \"hr\", \"i\", \"img\", \"ins\", \"kbd\", \"li\", \"ol\", \"p\", \"pre\", \"q\",\n-            \"samp\", \"small\", \"span\", \"strong\", \"style\", \"sub\", \"sup\", \"table\",\n-            \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"tt\", \"ul\");\n+            \"blockquote\", \"br\", \"caption\", \"cite\", \"code\", \"colgroup\", \"dd\",\n+            \"del\", \"div\", \"dfn\", \"dl\", \"dt\", \"em\", \"fieldset\", \"h1\", \"h2\",\n+            \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"i\", \"img\", \"ins\", \"kbd\", \"li\",\n+            \"ol\", \"p\", \"pre\", \"q\", \"samp\", \"small\", \"span\", \"strong\",\n+            \"style\", \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\",\n+            \"thead\", \"tr\", \"tt\", \"ul\");\n \n     /** The scope to check. */\n     private Scope mScope = Scope.PRIVATE;\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 54,
        "bugNodeStartChar": 2325,
        "bugNodeLength": 99,
        "fixLineNum": 54,
        "fixNodeStartChar": 2325,
        "fixNodeLength": 94,
        "sourceBeforeFix": "ImmutableSortedSet.of(\"p\",\"br\",\"li\",\"dt\",\"dd\",\"td\",\"hr\",\"img\",\"tr\",\"th\",\"td\")",
        "sourceAfterFix": "ImmutableSortedSet.of(\"br\",\"li\",\"dt\",\"dd\",\"hr\",\"img\",\"p\",\"td\",\"tr\",\"th\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a80ce3d0a97440d2c91afa9a6043901acdca0170",
        "fixCommitParentSHA1": "ee0cc1d23d31cde6fd134420d821f9a23615d910",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/meta/LockedInodePath.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/meta/LockedInodePath.java b/core/server/master/src/main/java/alluxio/master/file/meta/LockedInodePath.java\nindex 4e45ec6..69036a6 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/meta/LockedInodePath.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/meta/LockedInodePath.java\n@@ -231,15 +231,17 @@\n    * it does not close the existing path.\n    *\n    * @param child the inode of the direct child\n+   * @param lockMode the desired locking mode for the child\n    * @return a {@link LockedInodePath} for the direct child\n    * @throws InvalidPathException if the path is invalid\n    * @throws FileDoesNotExistException if the file does not exist\n    */\n-  public synchronized LockedInodePath createTempPathForExistingChild(Inode<?> child)\n+  public synchronized LockedInodePath createTempPathForExistingChild(\n+      Inode<?> child, InodeTree.LockMode lockMode)\n       throws InvalidPathException, FileDoesNotExistException {\n     InodeLockList lockList = new CompositeInodeLockList(mLockList);\n     LockedInodePath lockedDescendantPath;\n-    if (mLockMode == InodeTree.LockMode.READ) {\n+    if (lockMode == InodeTree.LockMode.READ) {\n       lockList.lockReadAndCheckParent(child, getInode());\n       lockedDescendantPath = new MutableLockedInodePath(\n           getUri().join(child.getName()), this, lockList);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 242,
        "bugNodeStartChar": 8741,
        "bugNodeLength": 36,
        "fixLineNum": 242,
        "fixNodeStartChar": 8741,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mLockMode == InodeTree.LockMode.READ",
        "sourceAfterFix": "lockMode == InodeTree.LockMode.READ"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "125e26bde0269dd286e8088a7b232e5c931664db",
        "fixCommitParentSHA1": "085928c6c642192464c00305bc1a6086b27ee619",
        "bugFilePath": "src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java b/src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java\nindex d8aeacd..f881a25 100644\n--- a/src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java\n+++ b/src/com/google/javascript/jscomp/Es6ConvertSuperConstructorCalls.java\n@@ -319,10 +319,8 @@\n             IR.assign(\n                 IR.getprop(IR.thisNode(), IR.string(\"stack\")),\n                 IR.getprop(IR.name(TMP_ERROR), IR.string(\"stack\"))));\n-    // TODO(bradfordcsmith): The spec says super() should return `this`, but Angular2 errors.ts\n-    //     currently depends on it returning the newly created Error object.\n     Node superErrorExpr =\n-        IR.comma(IR.comma(IR.comma(getTmpError, copyMessage), setStack), IR.name(TMP_ERROR))\n+        IR.comma(IR.comma(IR.comma(getTmpError, copyMessage), setStack), IR.thisNode())\n             .useSourceInfoIfMissingFromForTree(superCall);\n     superCall.replaceWith(superErrorExpr);\n   }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 325,
        "bugNodeStartChar": 14100,
        "bugNodeLength": 18,
        "fixLineNum": 325,
        "fixNodeStartChar": 14100,
        "fixNodeLength": 13,
        "sourceBeforeFix": "IR.name(TMP_ERROR)",
        "sourceAfterFix": "IR.thisNode()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "ab6298d6feedb99b827f708e1f269d1996894b1d",
        "fixCommitParentSHA1": "418d3ef5544c6107e04e68c5be42f05bf2e47a0b",
        "bugFilePath": "advanced/kernel/src/main/java/org/neo4j/kernel/Version.java",
        "fixPatch": "diff --git a/advanced/kernel/src/main/java/org/neo4j/kernel/Version.java b/advanced/kernel/src/main/java/org/neo4j/kernel/Version.java\nindex a3bbc13..a330cfe 100644\n--- a/advanced/kernel/src/main/java/org/neo4j/kernel/Version.java\n+++ b/advanced/kernel/src/main/java/org/neo4j/kernel/Version.java\n@@ -62,7 +62,7 @@\n      */\n     public String getVersion()\n     {\n-        if ( version == null )\n+        if ( version == null || version.equals( \"\" ) )\n         {\n             return \"<unknown>\";\n         }\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 65,
        "bugNodeStartChar": 1977,
        "bugNodeLength": 15,
        "fixLineNum": 65,
        "fixNodeStartChar": 1977,
        "fixNodeLength": 39,
        "sourceBeforeFix": "version == null",
        "sourceAfterFix": "version == null || version.equals(\"\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\nindex b3b91fd..c6de456 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n@@ -1553,7 +1553,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1574,7 +1574,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1595,7 +1595,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1676,7 +1676,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1704,7 +1704,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1732,7 +1732,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1760,7 +1760,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1577,
        "bugNodeStartChar": 79206,
        "bugNodeLength": 22,
        "fixLineNum": 1577,
        "fixNodeStartChar": 79206,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(246)",
        "sourceAfterFix": "new StringBuilder(245)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "882f385eacea73737f9b0bb0d7c772e80b8dc63a",
        "fixCommitParentSHA1": "9628584ddde247fda914fd50f2d60362e53cea9f",
        "bugFilePath": "core/src/main/java/fi/iki/elonen/NanoHTTPD.java",
        "fixPatch": "diff --git a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\nindex de4bc83..50e074f 100644\n--- a/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n+++ b/core/src/main/java/fi/iki/elonen/NanoHTTPD.java\n@@ -1293,7 +1293,7 @@\n \n         private void sendBodyWithCorrectEncoding(OutputStream outputStream, long pending) throws IOException {\n             if (encodeAsGzip) {\n-                GZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream, true);\n+                GZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream);\n                 sendBody(gzipOutputStream, -1);\n                 gzipOutputStream.finish();\n             } else {\n",
        "projectName": "NanoHttpd.nanohttpd",
        "bugLineNum": 1296,
        "bugNodeStartChar": 48824,
        "bugNodeLength": 40,
        "fixLineNum": 1296,
        "fixNodeStartChar": 48824,
        "fixNodeLength": 34,
        "sourceBeforeFix": "new GZIPOutputStream(outputStream,true)",
        "sourceAfterFix": "new GZIPOutputStream(outputStream)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0559e4a6a1c956394bf3ce184be7bf4f9a91108e",
        "fixCommitParentSHA1": "93ecfc6406298b0e91e5298907e165fe391b3f6f",
        "bugFilePath": "stratosphere-addons/avro/src/test/java/eu/stratosphere/api/avro/AvroExternalJarProgramITCase.java",
        "fixPatch": "diff --git a/stratosphere-addons/avro/src/test/java/eu/stratosphere/api/avro/AvroExternalJarProgramITCase.java b/stratosphere-addons/avro/src/test/java/eu/stratosphere/api/avro/AvroExternalJarProgramITCase.java\nindex a34666d..cb4eb35 100644\n--- a/stratosphere-addons/avro/src/test/java/eu/stratosphere/api/avro/AvroExternalJarProgramITCase.java\n+++ b/stratosphere-addons/avro/src/test/java/eu/stratosphere/api/avro/AvroExternalJarProgramITCase.java\n@@ -36,7 +36,7 @@\n \tprivate static final String TEST_DATA_FILE = \"/testdata.avro\";\n \n \tstatic {\n-\t\tLogUtils.initializeDefaultConsoleLogger();\n+\t\tLogUtils.initializeDefaultTestConsoleLogger();\n \t}\n \t\n \t@Test\n",
        "projectName": "apache.flink",
        "bugLineNum": 39,
        "bugNodeStartChar": 1511,
        "bugNodeLength": 41,
        "fixLineNum": 39,
        "fixNodeStartChar": 1511,
        "fixNodeLength": 45,
        "sourceBeforeFix": "LogUtils.initializeDefaultConsoleLogger()",
        "sourceAfterFix": "LogUtils.initializeDefaultTestConsoleLogger()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7feb5bc8aa102782bd8c1ce381449c839207646d",
        "fixCommitParentSHA1": "10e98ce6bb32c21573b5645014968bba750d324c",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java\nindex bbb73c5..bc1eebc 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java\n@@ -54,7 +54,7 @@\n   private final static long USER_GROUP_STRID_MASK = (1 << 24) - 1;\n   private final static int USER_STRID_OFFSET = 40;\n   private final static int GROUP_STRID_OFFSET = 16;\n-  private static final Log LOG = LogFactory.getLog(FSImageFormatProtobuf.class);\n+  private static final Log LOG = LogFactory.getLog(FSImageFormatPBINode.class);\n \n   public final static class Loader {\n     public static PermissionStatus loadPermission(long id,\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 57,
        "bugNodeStartChar": 2647,
        "bugNodeLength": 27,
        "fixLineNum": 57,
        "fixNodeStartChar": 2647,
        "fixNodeLength": 26,
        "sourceBeforeFix": "FSImageFormatProtobuf.class",
        "sourceAfterFix": "FSImageFormatPBINode.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "35b36bca468581e8e8b5152a99c562f18a7d44b5",
        "fixCommitParentSHA1": "1bf2445ea4ac70b2f35655dda0914e1ea2759f5e",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java b/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\nindex fcccd09..0832f3a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/cluster/AbstractJoinTest.java\n@@ -24,8 +24,10 @@\n \n         h1.shutdown();\n         h1 = Hazelcast.newHazelcastInstance(config);\n+        // when h1 is returned, it's guaranteed that it should see 2 members\n         assertClusterSize(2, h1);\n-        assertClusterSize(2, h2);\n+        // but h2 will report newly joining member eventually\n+        assertClusterSizeEventually(2, h2);\n     }\n \n     protected void testJoin_With_DifferentBuildNumber(Config config) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 28,
        "bugNodeStartChar": 1016,
        "bugNodeLength": 24,
        "fixLineNum": 29,
        "fixNodeStartChar": 1078,
        "fixNodeLength": 34,
        "sourceBeforeFix": "assertClusterSize(2,h2)",
        "sourceAfterFix": "assertClusterSizeEventually(2,h2)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "b73b4c73108ed9718f84ff901ff6dfa49ed24cb9",
        "fixCommitParentSHA1": "2faf059ddd9402e9a9e6f40eceae3a1f523d035d",
        "bugFilePath": "src/main/java/org/graylog2/indexer/Indexer.java",
        "fixPatch": "diff --git a/src/main/java/org/graylog2/indexer/Indexer.java b/src/main/java/org/graylog2/indexer/Indexer.java\nindex afaddc7..24a0003 100644\n--- a/src/main/java/org/graylog2/indexer/Indexer.java\n+++ b/src/main/java/org/graylog2/indexer/Indexer.java\n@@ -60,11 +60,12 @@\n         URL url = new URL(Indexer.buildIndexURL());\n         HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n         conn.setRequestMethod(\"HEAD\");\n-        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\n+        // Older versions of ElasticSearch return 400 Bad Request in cse of an existing index.\n+        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST) {\n             return true;\n         } else {\n             if (conn.getResponseCode() != HttpURLConnection.HTTP_NOT_FOUND) {\n-                LOG.warn(\"Indexer response code was not 200 or 404, but \" + conn.getResponseCode());\n+                LOG.warn(\"Indexer response code was not (200 or 400) or 404, but \" + conn.getResponseCode());\n             }\n \n             return false;\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 63,
        "bugNodeStartChar": 2118,
        "bugNodeLength": 51,
        "fixLineNum": 64,
        "fixNodeStartChar": 2213,
        "fixNodeLength": 115,
        "sourceBeforeFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK",
        "sourceAfterFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0d3c78b6f28fb3cad00c12605209c524702adb0a",
        "fixCommitParentSHA1": "4256555545f49406b00df2f077289e5c9cdb7a0a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\nindex 192e1fa..7d061ee 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n@@ -294,7 +294,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return true;\n@@ -318,7 +319,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return null;\n@@ -378,7 +380,7 @@\n                 record.setExpirationTime(expiryTime);\n                 if (isEventsEnabled()) {\n                     CacheEventContext cacheEventContext =\n-                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toHeapData(key),\n+                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toEventData(key),\n                                                    toEventData(record.getValue()), expiryTime, null, IGNORE_COMPLETION);\n                     cacheEventContext.setAccessHit(record.getAccessHit());\n                     publishEvent(cacheEventContext);\n@@ -493,7 +495,8 @@\n         final R record = createRecord(value, expirationTime);\n         updateHasExpiringEntry(record);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCreatedEvent(keyData, toEventData(value), expirationTime, origin, completionId));\n+            publishEvent(createCacheCreatedEvent(toEventData(keyData), toEventData(value),\n+                                                 expirationTime, origin, completionId));\n         }\n         return record;\n     }\n@@ -514,7 +517,7 @@\n             return record;\n         }\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                   origin, completionId));\n         }\n         return null;\n@@ -1002,7 +1005,7 @@\n             } else {\n                 result = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onPutIfAbsent(key, value, expiryPolicy, source, disableWriteThrough,\n@@ -1046,7 +1049,7 @@\n             if (record == null || isExpired) {\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1099,7 +1102,7 @@\n             }\n             if (!replaced) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onReplace(key, oldValue, newValue, expiryPolicy, source, false, record, isExpired, replaced);\n@@ -1131,7 +1134,7 @@\n                 obj = null;\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1182,7 +1185,7 @@\n             if (record == null || isExpired) {\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n@@ -1235,7 +1238,7 @@\n             }\n             if (!removed) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             }\n@@ -1284,7 +1287,7 @@\n                 obj = null;\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 381,
        "bugNodeStartChar": 16111,
        "bugNodeLength": 15,
        "fixLineNum": 381,
        "fixNodeStartChar": 16111,
        "fixNodeLength": 16,
        "sourceBeforeFix": "toHeapData(key)",
        "sourceAfterFix": "toEventData(key)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6fe8de61d192f14262b455497dc5cc174d88659c",
        "fixCommitParentSHA1": "960b570162e21d809fc8c9f406462277b4f9168f",
        "bugFilePath": "web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java",
        "fixPatch": "diff --git a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\nindex b72e9e6..0cb67c7 100644\n--- a/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n+++ b/web/src/test/java/com/navercorp/pinpoint/web/service/BFSLinkSelectorTest.java\n@@ -75,7 +75,7 @@\n \n         LinkDataDuplexMap select = bfsLinkSelector.select(APP_A, range, option);\n \n-        Assert.assertEquals(select.size(), 1);\n+        Assert.assertEquals(select.size(), 0);\n \n \n     }\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 78,
        "bugNodeStartChar": 2984,
        "bugNodeLength": 37,
        "fixLineNum": 78,
        "fixNodeStartChar": 2984,
        "fixNodeLength": 37,
        "sourceBeforeFix": "Assert.assertEquals(select.size(),1)",
        "sourceAfterFix": "Assert.assertEquals(select.size(),0)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "ad3c1adb1c911a348c35bec42a1ec102de7dfdde",
        "fixCommitParentSHA1": "eeeb5b726698f1230b45c9eaae9699b4eccb28ed",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/TachyonFileSystem.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/TachyonFileSystem.java b/clients/unshaded/src/main/java/tachyon/client/file/TachyonFileSystem.java\nindex fabf8ea..c30cc34 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/TachyonFileSystem.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/TachyonFileSystem.java\n@@ -99,8 +99,8 @@\n   }\n \n   /**\n-   * Convenience method for delete with recursive set. This is the same as calling delete(file,\n-   * true).\n+   * Convenience method for delete without recursive set. This is the same as calling delete(file,\n+   * false).\n    *\n    * @param file the handler for the file to delete recursively\n    * @throws FileDoesNotExistException if the file does not exist in Tachyon space\n@@ -111,7 +111,7 @@\n   }\n \n   /**\n-   * Convenience method for free with recursive set. This is the same as calling free(file, true).\n+   * Convenience method for free without recursive set. This is the same as calling free(file, false).\n    *\n    * @param file the handler for the file to free recursively\n    * @throws FileDoesNotExistException if the file does not exist in Tachyon space\n@@ -228,7 +228,7 @@\n    * @throws IOException if the master fails to pin the file\n    */\n   public void pin(TachyonFile file) throws FileDoesNotExistException, IOException {\n-    setPin(file, false);\n+    setPin(file, true);\n   }\n \n   // TODO: Move this to lineage client\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 231,
        "bugNodeStartChar": 10071,
        "bugNodeLength": 19,
        "fixLineNum": 231,
        "fixNodeStartChar": 10071,
        "fixNodeLength": 18,
        "sourceBeforeFix": "setPin(file,false)",
        "sourceAfterFix": "setPin(file,true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "93732941ac3e2f40c6a807c4b11577646b5668d4",
        "fixCommitParentSHA1": "8d5b4c1e9acc499377da0d807e7ca2245d5c3bdf",
        "bugFilePath": "src/main/java/org/bukkit/command/defaults/DeopCommand.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/DeopCommand.java b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\nindex 1b71d49..c46750a 100644\n--- a/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/DeopCommand.java\n@@ -49,9 +49,9 @@\n \n         if (args.length == 1) {\n             List<String> completions = new ArrayList<String>();\n-            for (OfflinePlayer player : Bukkit.getOfflinePlayers()) {\n+            for (OfflinePlayer player : Bukkit.getOperators()) {\n                 String playerName = player.getName();\n-                if (player.isOp() && StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n+                if (StringUtil.startsWithIgnoreCase(playerName, args[0])) {\n                     completions.add(playerName);\n                 }\n             }\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 52,
        "bugNodeStartChar": 1795,
        "bugNodeLength": 26,
        "fixLineNum": 52,
        "fixNodeStartChar": 1795,
        "fixNodeLength": 21,
        "sourceBeforeFix": "Bukkit.getOfflinePlayers()",
        "sourceAfterFix": "Bukkit.getOperators()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "09c8b466c280738cdce89b83e0ee6a92dc02710f",
        "fixCommitParentSHA1": "bba623ca486d1034253569d8cd3f3c159be27eec",
        "bugFilePath": "src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java b/src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java\nindex d6caf3c..107369c 100644\n--- a/src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java\n+++ b/src/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java\n@@ -179,7 +179,7 @@\n     }\n   }\n \n-  private static final Pattern pQuoted = Pattern.compile(\"\\\".+\\\"\");\n+  private static final Pattern pQuoted = Pattern.compile(\"\\\"(.+)\\\"\");\n \n   /**\n    * Return the (single or multiple) words which make up the given\n@@ -190,7 +190,7 @@\n     if (quoteMatcher.matches()) {\n       String[] ret = new String[3];\n       ret[0] = \"\\\"\";\n-      ret[1] = quoteMatcher.group(0);\n+      ret[1] = quoteMatcher.group(1);\n       ret[2] = \"\\\"\";\n \n       return ret;\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 193,
        "bugNodeStartChar": 5988,
        "bugNodeLength": 21,
        "fixLineNum": 193,
        "fixNodeStartChar": 5988,
        "fixNodeLength": 21,
        "sourceBeforeFix": "quoteMatcher.group(0)",
        "sourceAfterFix": "quoteMatcher.group(1)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "364ae9baf3824dc4e0e56b2b681f8302731e8cdd",
        "fixCommitParentSHA1": "6b386d4b81f63bc3afd05888529550572da04c06",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex 6c2aeb4..bad5ea2 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -3104,7 +3104,7 @@\n       try {\n         statsObj = getMS().getTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_table: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_table: \", statsObj != null, null);\n       }\n       return statsObj;\n     }\n@@ -3126,7 +3126,7 @@\n         statsObj = getMS().getPartitionColumnStatistics(dbName, tableName, convertedPartName,\n                                                             partVals, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_partition: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_partition: \", statsObj != null, null);\n       }\n       return statsObj;\n    }\n@@ -3165,7 +3165,7 @@\n         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n-        endFunction(\"write_column_statistics: \", ret != false);\n+        endFunction(\"write_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3211,7 +3211,7 @@\n         ret = getMS().updatePartitionColumnStatistics(colStats, partVals);\n         return ret;\n       } finally {\n-        endFunction(\"write_partition_column_statistics: \", ret != false);\n+        endFunction(\"write_partition_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3234,7 +3234,7 @@\n         ret = getMS().deletePartitionColumnStatistics(dbName, tableName,\n                                                       convertedPartName, partVals, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_partition: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_partition: \", ret != false, null);\n       }\n       return ret;\n     }\n@@ -3256,7 +3256,7 @@\n       try {\n         ret = getMS().deleteTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_table: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_table: \", ret != false, null);\n       }\n       return ret;\n    }\n",
        "projectName": "apache.hive",
        "bugLineNum": 3129,
        "bugNodeStartChar": 112144,
        "bugNodeLength": 69,
        "fixLineNum": 3129,
        "fixNodeStartChar": 112144,
        "fixNodeLength": 75,
        "sourceBeforeFix": "endFunction(\"get_column_statistics_by_partition: \",statsObj != null)",
        "sourceAfterFix": "endFunction(\"get_column_statistics_by_partition: \",statsObj != null,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "af87fe0e2580cafb6b563688f119b3d40ae100f2",
        "fixCommitParentSHA1": "a98d4bec0586a7d7982120c3557d89224fe48760",
        "bugFilePath": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\nindex cceeae5..7b2ef5d 100644\n--- a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n+++ b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n@@ -180,7 +180,7 @@\n     }\n \n     private static ModelControllerClient createClient2() throws UnknownHostException {\n-        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddress()),\n+        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddressNode1()),\n                 TestSuiteEnvironment.getServerPort() + 300,\n                 Authentication.getCallbackHandler());\n     }\n@@ -239,7 +239,8 @@\n                     new ModelNode[] { removeDwm, removeContext });\n             mcc.execute(compositeOp);\n             ServerReload.executeReloadAndWaitForCompletion(mcc, 60000, false,\n-                    TestSuiteEnvironment.getServerAddress(), serverPort);\n+                    CONTAINER_0.equals(containerId) ? TestSuiteEnvironment.getServerAddress() : TestSuiteEnvironment.getServerAddressNode1(),\n+                    serverPort);\n         }\n \n         protected abstract Policy getPolicy();\n@@ -333,7 +334,7 @@\n     @Before\n     public void setUpAdminObjects() throws NamingException {\n         server1Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8280\");\n-        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8380\");\n+        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddressNode1(), \"8380\");\n         Assert.assertNotNull(server1Proxy);\n         Assert.assertNotNull(server2Proxy);\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 183,
        "bugNodeStartChar": 8446,
        "bugNodeLength": 39,
        "fixLineNum": 183,
        "fixNodeStartChar": 8446,
        "fixNodeLength": 44,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getServerAddressNode1()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae95d478d3a59cdfd39d7621309f9a00b4b1bfc8",
        "fixCommitParentSHA1": "f8e0767386d08929f289068f44c3336ea02e40ab",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\nindex c341073..1a7bb97 100644\n--- a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\n@@ -551,7 +551,7 @@\n             } else if (config.getUserAgent() != null) {\n                 urlConnection.setRequestProperty(\"User-Agent\", config.getUserAgent());\n             } else {\n-                urlConnection.setRequestProperty(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(NettyAsyncHttpProvider.class));\n+                urlConnection.setRequestProperty(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(JDKAsyncHttpProvider.class));\n             }\n \n             if (request.getCookies() != null && !request.getCookies().isEmpty()) {\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 554,
        "bugNodeStartChar": 24993,
        "bugNodeLength": 28,
        "fixLineNum": 554,
        "fixNodeStartChar": 24993,
        "fixNodeLength": 26,
        "sourceBeforeFix": "NettyAsyncHttpProvider.class",
        "sourceAfterFix": "JDKAsyncHttpProvider.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f8cc32b31367f0cc4e42435a20793897cb432a40",
        "fixCommitParentSHA1": "aa0c34f66ba727cb353739c95107ca67d81de896",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\nindex 4ece8a3..651234d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n+++ b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n@@ -64,7 +64,7 @@\n \tpublic void tick() {\n \t\tfinal long t = System.nanoTime();\n \t\tif (lastTick > 0L)\n-\t\t\ttick((lastTick - t) * nano2seconds);\n+\t\t\ttick((t - lastTick) * nano2seconds);\n \t\tlastTick = t;\n \t}\n \t\n@@ -78,7 +78,7 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\ttime.put(delta);\n+\t\ttime.put(current);\n \t\t\n \t\tfinal float currentLoad = delta == 0f ? 0f : current / delta;\n \t\tload.put((delta > 1f) ? currentLoad : delta * currentLoad + (1f - delta) * load.latest);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 81,
        "bugNodeStartChar": 3076,
        "bugNodeLength": 15,
        "fixLineNum": 81,
        "fixNodeStartChar": 3076,
        "fixNodeLength": 17,
        "sourceBeforeFix": "time.put(delta)",
        "sourceAfterFix": "time.put(current)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fa5635c39e3000406103657977b98efa79bd4512",
        "fixCommitParentSHA1": "0321d14bf299628af7459267c317e347a7f00d46",
        "bugFilePath": "twitter4j-core/src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/Twitter.java b/twitter4j-core/src/main/java/twitter4j/Twitter.java\nindex 069622c..a391273 100644\n--- a/twitter4j-core/src/main/java/twitter4j/Twitter.java\n+++ b/twitter4j-core/src/main/java/twitter4j/Twitter.java\n@@ -237,21 +237,21 @@\n      * {@inheritDoc}\n      */\n     public Trends getTrends() throws TwitterException {\n-        return new TrendsJSONImpl(http.get(conf.getSearchBaseURL() + \"trends.json\"));\n+        return new TrendsJSONImpl(http.get(conf.getRestBaseURL() + \"trends.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\")).get(0);\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\")).get(0);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/current.json\"\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"))).get(0);\n     }\n \n@@ -259,14 +259,14 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL() + \"trends/daily.json\"));\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL() + \"trends/daily.json\"));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n@@ -283,7 +283,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json\"));\n     }\n \n@@ -291,7 +291,7 @@\n      * {@inheritDoc}\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return TrendsJSONImpl.createTrendsList(http.get(conf.getSearchBaseURL()\n+        return TrendsJSONImpl.createTrendsList(http.get(conf.getRestBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\")));\n     }\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 247,
        "bugNodeStartChar": 9871,
        "bugNodeLength": 23,
        "fixLineNum": 247,
        "fixNodeStartChar": 9871,
        "fixNodeLength": 21,
        "sourceBeforeFix": "conf.getSearchBaseURL()",
        "sourceAfterFix": "conf.getRestBaseURL()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "127108d1005124b8d33651569780b08fa2b5d5b8",
        "fixCommitParentSHA1": "06c166c9f45758afbb1ebcff4214b4c3796ac624",
        "bugFilePath": "platforms/spring-boot/components-starter/camel-properties-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java",
        "fixPatch": "diff --git a/platforms/spring-boot/components-starter/camel-properties-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-properties-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java\nindex ed5f9b1..606df5c 100644\n--- a/platforms/spring-boot/components-starter/camel-properties-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java\n+++ b/platforms/spring-boot/components-starter/camel-properties-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java\n@@ -93,7 +93,7 @@\n      * use OS environment variables if present, and override any existing\n      * properties.\n      */\n-    private Integer environmentVariableMode = 1;\n+    private Integer environmentVariableMode = 2;\n     /**\n      * Whether the component should resolve property placeholders on itself when\n      * starting. Only properties which are of String type can use property\n",
        "projectName": "apache.camel",
        "bugLineNum": 96,
        "bugNodeStartChar": 3879,
        "bugNodeLength": 27,
        "fixLineNum": 96,
        "fixNodeStartChar": 3879,
        "fixNodeLength": 27,
        "sourceBeforeFix": "environmentVariableMode=1",
        "sourceAfterFix": "environmentVariableMode=2"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a0f2bac065232855e4f8bb1221a60b0cbf7fd2a9",
        "fixCommitParentSHA1": "03a15583ca8b257f4159b27ace4d80cc71f0b174",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\nindex 38b8be4..d090042 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n@@ -472,13 +472,13 @@\n     @Test\n     public void test_1168408_1() throws Exception {\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_01.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_01.java\"), expected);\n     }\n \n     @Test\n     public void test_1168408_2() throws Exception {\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_02.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_02.java\"), expected);\n     }\n \n     @Test\n@@ -486,7 +486,7 @@\n         checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");\n         checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_03.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_03.java\"), expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 475,
        "bugNodeStartChar": 24840,
        "bugNodeLength": 42,
        "fixLineNum": 475,
        "fixNodeStartChar": 24840,
        "fixNodeLength": 39,
        "sourceBeforeFix": "getSrcPath(\"checks/javadoc/Input_01.java\")",
        "sourceAfterFix": "getPath(\"checks/javadoc/Input_01.java\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "742bf71003d62c9d41881aa7c59740993a749243",
        "fixCommitParentSHA1": "7e0466d0699b23a6da4557597d3489eb9c54a36b",
        "bugFilePath": "src/jvm/clojure/lang/PersistentVector.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/PersistentVector.java b/src/jvm/clojure/lang/PersistentVector.java\nindex 4e93dc9..3910d11 100644\n--- a/src/jvm/clojure/lang/PersistentVector.java\n+++ b/src/jvm/clojure/lang/PersistentVector.java\n@@ -324,7 +324,7 @@\n \t\t{\n \t\treturn (PersistentVector) EMPTY.withMeta(meta());\n \t\t}\n-\tif(newroot.length == 1)\n+\tif(shift > 0 && newroot.length == 1)\n \t\t{\n \t\tnewroot = (Object[]) newroot[0];\n \t\tnewshift -= 5;\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 327,
        "bugNodeStartChar": 6579,
        "bugNodeLength": 19,
        "fixLineNum": 327,
        "fixNodeStartChar": 6579,
        "fixNodeLength": 32,
        "sourceBeforeFix": "newroot.length == 1",
        "sourceAfterFix": "shift > 0 && newroot.length == 1"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941",
        "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592",
        "bugFilePath": "core/src/com/google/inject/util/Modules.java",
        "fixPatch": "diff --git a/core/src/com/google/inject/util/Modules.java b/core/src/com/google/inject/util/Modules.java\nindex 70cab05..27eed97 100644\n--- a/core/src/com/google/inject/util/Modules.java\n+++ b/core/src/com/google/inject/util/Modules.java\n@@ -100,7 +100,7 @@\n    * Returns a new module that installs all of {@code modules}.\n    */\n   public static Module combine(Module... modules) {\n-    return combine(ImmutableSet.of(modules));\n+    return combine(ImmutableSet.copyOf(modules));\n   }\n \n   /**\n",
        "projectName": "google.guice",
        "bugLineNum": 103,
        "bugNodeStartChar": 4017,
        "bugNodeLength": 24,
        "fixLineNum": 103,
        "fixNodeStartChar": 4017,
        "fixNodeLength": 28,
        "sourceBeforeFix": "ImmutableSet.of(modules)",
        "sourceAfterFix": "ImmutableSet.copyOf(modules)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9467bef8ea9a62658b32dd43a76f4f98087d1986",
        "fixCommitParentSHA1": "0ef751797e78f04798933bb87cf8bbb291248753",
        "bugFilePath": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java",
        "fixPatch": "diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\nindex 6b24a25..e22949ee 100644\n--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n@@ -161,7 +161,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -174,7 +174,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -187,7 +187,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -216,7 +216,7 @@\n     config.set(KeyProviderFactory.KEY_PROVIDER_PATH, \"user:///\");\n     ks.setConf(config);\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -262,19 +262,19 @@\n     final String[] args2 = {\"create\", \"keyattr2\", \"--provider\", jceksProvider,\n             \"--attr\", \"=bar\"};\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Not in attribute = value form */\n     outContent.reset();\n     args2[5] = \"foo\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* No attribute or value */\n     outContent.reset();\n     args2[5] = \"=\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Legal: attribute is a, value is b=c */\n     outContent.reset();\n@@ -308,7 +308,7 @@\n             \"--attr\", \"foo=bar\",\n             \"--attr\", \"foo=glarch\"};\n     rc = ks.run(args4);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Clean up to be a good citizen */\n     deleteKey(ks, \"keyattr1\");\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 177,
        "bugNodeStartChar": 5835,
        "bugNodeLength": 2,
        "fixLineNum": 177,
        "fixNodeStartChar": 5835,
        "fixNodeLength": 1,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "1"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "40df84d16df6f97c250dd9768f5b9826f29d9e63",
        "fixCommitParentSHA1": "23b8ad3dfaac57c7708ec96905df8345b7130b35",
        "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java",
        "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\nindex ab3ef49..b6d5290 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/http/HttpClientImpl.java\n@@ -298,7 +298,7 @@\n                             }\n                         }\n                     }\n-                    if (responseCode < OK && MULTIPLE_CHOICES <= responseCode) {\n+                    if (responseCode < OK || MULTIPLE_CHOICES <= responseCode) {\n                         if (responseCode == ENHANCE_YOUR_CLAIM ||\n                                 responseCode == SERVICE_UNAVAILABLE ||\n                                 responseCode == BAD_REQUEST ||\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 301,
        "bugNodeStartChar": 12117,
        "bugNodeLength": 53,
        "fixLineNum": 301,
        "fixNodeStartChar": 12117,
        "fixNodeLength": 53,
        "sourceBeforeFix": "responseCode < OK && MULTIPLE_CHOICES <= responseCode",
        "sourceAfterFix": "responseCode < OK || MULTIPLE_CHOICES <= responseCode"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3b0e5ccc430c5ae4187e6139535c32cc17bb2a2b",
        "fixCommitParentSHA1": "4bcf757f94474ea232667b7f36c38142f3b9273c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\nindex bbc113e..a58e9fa 100644\n--- a/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/cli/StatusPrinter.java\n@@ -185,7 +185,7 @@\n             String splitsSummary = String.format(\"Splits: %,4d total, %,4d pending, %,4d running, %,4d done\",\n                     globalExecutionStats.getSplits(),\n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(splitsSummary);\n \n@@ -243,7 +243,7 @@\n                     formatDataRate(globalExecutionStats.getOutputDataSize(), elapsedTime, false),\n \n                     max(0, globalExecutionStats.getSplits() - globalExecutionStats.getStartedSplits()),\n-                    max(0, globalExecutionStats.getSplits() - globalExecutionStats.getCompletedSplits()),\n+                    max(0, globalExecutionStats.getStartedSplits() - globalExecutionStats.getCompletedSplits()),\n                     globalExecutionStats.getCompletedSplits());\n             reprintLine(querySummary);\n         }\n@@ -282,7 +282,7 @@\n                 formatDataRate(executionStats.getCompletedDataSize(), elapsedTime, false),\n \n                 max(0, executionStats.getSplits() - executionStats.getStartedSplits()),\n-                max(0, executionStats.getSplits() - executionStats.getCompletedSplits()),\n+                max(0, executionStats.getStartedSplits() - executionStats.getCompletedSplits()),\n                 executionStats.getCompletedSplits());\n         reprintLine(stageSummary);\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 285,
        "bugNodeStartChar": 12393,
        "bugNodeLength": 26,
        "fixLineNum": 285,
        "fixNodeStartChar": 12393,
        "fixNodeLength": 33,
        "sourceBeforeFix": "executionStats.getSplits()",
        "sourceAfterFix": "executionStats.getStartedSplits()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4031a54f71a1df311b0b9ab24640297e0d526bfe",
        "fixCommitParentSHA1": "9c1eea2dc00e2feb14c13e9a00d6a392f680df17",
        "bugFilePath": "src/com/google/javascript/jscomp/VarCheck.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/VarCheck.java b/src/com/google/javascript/jscomp/VarCheck.java\nindex 19b4d21..8de8c93 100644\n--- a/src/com/google/javascript/jscomp/VarCheck.java\n+++ b/src/com/google/javascript/jscomp/VarCheck.java\n@@ -53,7 +53,7 @@\n       \"module {1}\");\n \n   static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR =\n-    DiagnosticType.error(\n+    DiagnosticType.warning(\n       \"JSC_NAME_REFERENCE_IN_EXTERNS\",\n       \"accessing name {0} in externs has no effect\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 56,
        "bugNodeStartChar": 2062,
        "bugNodeLength": 113,
        "fixLineNum": 56,
        "fixNodeStartChar": 2062,
        "fixNodeLength": 115,
        "sourceBeforeFix": "DiagnosticType.error(\"JSC_NAME_REFERENCE_IN_EXTERNS\",\"accessing name {0} in externs has no effect\")",
        "sourceAfterFix": "DiagnosticType.warning(\"JSC_NAME_REFERENCE_IN_EXTERNS\",\"accessing name {0} in externs has no effect\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "727dd12852290f48840a8aeac91c37823112bdc7",
        "fixCommitParentSHA1": "e8e728106e87be40cf2c5aff3cc296c8e42ce295",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java\nindex 1467107..5024b1b 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/jetty/JettyEmbeddedServletContainerFactory.java\n@@ -259,7 +259,7 @@\n \t\tif (getSslStoreProvider() != null) {\n \t\t\ttry {\n \t\t\t\tfactory.setKeyStore(getSslStoreProvider().getKeyStore());\n-\t\t\t\tfactory.setTrustStore(getSslStoreProvider().getKeyStore());\n+\t\t\t\tfactory.setTrustStore(getSslStoreProvider().getTrustStore());\n \t\t\t}\n \t\t\tcatch (Exception ex) {\n \t\t\t\tthrow new IllegalStateException(\"Unable to set SSL store\", ex);\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 262,
        "bugNodeStartChar": 9908,
        "bugNodeLength": 35,
        "fixLineNum": 262,
        "fixNodeStartChar": 9908,
        "fixNodeLength": 37,
        "sourceBeforeFix": "getSslStoreProvider().getKeyStore()",
        "sourceAfterFix": "getSslStoreProvider().getTrustStore()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "c115ee1550ecf4bc8164e59a4f69b59addd50cc6",
        "fixCommitParentSHA1": "0e0ea7f00ad2350ff048661d6e99b199fbbc7508",
        "bugFilePath": "spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactoryTests.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactoryTests.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactoryTests.java\nindex 04681f1..0cea053 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactoryTests.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/test/java/org/springframework/boot/actuate/autoconfigure/endpoint/jmx/DefaultEndpointObjectNameFactoryTests.java\n@@ -42,8 +42,7 @@\n \n \tprivate final MockEnvironment environment = new MockEnvironment();\n \n-\tprivate final JmxEndpointProperties properties = new JmxEndpointProperties(\n-\t\t\tthis.environment);\n+\tprivate final JmxEndpointProperties properties = new JmxEndpointProperties();\n \n \tprivate final MBeanServer mBeanServer = mock(MBeanServer.class);\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 45,
        "bugNodeStartChar": 1519,
        "bugNodeLength": 47,
        "fixLineNum": 45,
        "fixNodeStartChar": 1519,
        "fixNodeLength": 27,
        "sourceBeforeFix": "new JmxEndpointProperties(this.environment)",
        "sourceAfterFix": "new JmxEndpointProperties()"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "15cdc5cc799e2ceb78af974d32feff2096f6571e",
        "fixCommitParentSHA1": "105b30686f76dc2d6affcf6cdf3eb41f322df53a",
        "bugFilePath": "flink-queryable-state/flink-queryable-state-runtime/src/main/java/org/apache/flink/queryablestate/client/proxy/KvStateClientProxyHandler.java",
        "fixPatch": "diff --git a/flink-queryable-state/flink-queryable-state-runtime/src/main/java/org/apache/flink/queryablestate/client/proxy/KvStateClientProxyHandler.java b/flink-queryable-state/flink-queryable-state-runtime/src/main/java/org/apache/flink/queryablestate/client/proxy/KvStateClientProxyHandler.java\nindex 2e24431..8201305 100644\n--- a/flink-queryable-state/flink-queryable-state-runtime/src/main/java/org/apache/flink/queryablestate/client/proxy/KvStateClientProxyHandler.java\n+++ b/flink-queryable-state/flink-queryable-state-runtime/src/main/java/org/apache/flink/queryablestate/client/proxy/KvStateClientProxyHandler.java\n@@ -197,14 +197,14 @@\n \t\tfinal CompletableFuture<KvStateLocation> cachedFuture = lookupCache.get(cacheKey);\n \n \t\tif (!forceUpdate && cachedFuture != null && !cachedFuture.isCompletedExceptionally()) {\n-\t\t\tLOG.debug(\"Retrieving location for state={} of job={} from the cache.\", jobId, queryableStateName);\n+\t\t\tLOG.debug(\"Retrieving location for state={} of job={} from the cache.\", queryableStateName, jobId);\n \t\t\treturn cachedFuture;\n \t\t}\n \n \t\tfinal KvStateLocationOracle kvStateLocationOracle = proxy.getKvStateLocationOracle(jobId);\n \n \t\tif (kvStateLocationOracle != null) {\n-\t\t\tLOG.debug(\"Retrieving location for state={} of job={} from the key-value state location oracle.\", jobId, queryableStateName);\n+\t\t\tLOG.debug(\"Retrieving location for state={} of job={} from the key-value state location oracle.\", queryableStateName, jobId);\n \t\t\tfinal CompletableFuture<KvStateLocation> location = new CompletableFuture<>();\n \t\t\tlookupCache.put(cacheKey, location);\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 200,
        "bugNodeStartChar": 8460,
        "bugNodeLength": 98,
        "fixLineNum": 200,
        "fixNodeStartChar": 8460,
        "fixNodeLength": 98,
        "sourceBeforeFix": "LOG.debug(\"Retrieving location for state={} of job={} from the cache.\",jobId,queryableStateName)",
        "sourceAfterFix": "LOG.debug(\"Retrieving location for state={} of job={} from the cache.\",queryableStateName,jobId)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e56cc97612a07cedd5c67ff3c3b1e22bee525dfb",
        "fixCommitParentSHA1": "d17d59b2b28c796b7e978e8642c8c31a59b4e08d",
        "bugFilePath": "components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java",
        "fixPatch": "diff --git a/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java b/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\nindex d57850e..9b903da 100644\n--- a/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\n+++ b/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\n@@ -39,10 +39,10 @@\n                           List<Object> out) throws Exception {\n         if (msg.content() instanceof Serializable) {\n             Serializable payload = (Serializable) msg.content();\n-            ByteBuf buf = ctx.alloc().heapBuffer();\n+            ByteBuf buf = ctx.alloc().buffer();\n             delegateObjectEncoder.encode(ctx, payload, buf);\n             AddressedEnvelope<Object, InetSocketAddress> addressedEnvelop = \n-                new DefaultAddressedEnvelope<Object, InetSocketAddress>(buf.retain(), msg.recipient(), msg.sender());\n+                new DefaultAddressedEnvelope<Object, InetSocketAddress>(buf, msg.recipient(), msg.sender());\n             out.add(addressedEnvelop);\n         }\n         \n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1833,
        "bugNodeLength": 24,
        "fixLineNum": 42,
        "fixNodeStartChar": 1833,
        "fixNodeLength": 20,
        "sourceBeforeFix": "ctx.alloc().heapBuffer()",
        "sourceAfterFix": "ctx.alloc().buffer()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8dad775af94f89faba78ef282c475cf9da02147a",
        "fixCommitParentSHA1": "1948e888a5afa58834523cac08d8539b8d5fd715",
        "bugFilePath": "domain-management/src/main/java/org/jboss/as/domain/management/parsing/ManagementXml.java",
        "fixPatch": "diff --git a/domain-management/src/main/java/org/jboss/as/domain/management/parsing/ManagementXml.java b/domain-management/src/main/java/org/jboss/as/domain/management/parsing/ManagementXml.java\nindex ebf2210..6f6dec7 100644\n--- a/domain-management/src/main/java/org/jboss/as/domain/management/parsing/ManagementXml.java\n+++ b/domain-management/src/main/java/org/jboss/as/domain/management/parsing/ManagementXml.java\n@@ -2922,7 +2922,7 @@\n             PropertiesAuthenticationResourceDefinition.PATH.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.RELATIVE_TO.marshallAsAttribute(properties, writer);\n             PropertiesAuthenticationResourceDefinition.PLAIN_TEXT.marshallAsAttribute(properties, writer);\n-        } else if (authentication.hasDefined(USERS)) {\n+        } else if (authentication.has(USERS)) {\n             ModelNode userDomain = authentication.get(USERS);\n             ModelNode users = userDomain.hasDefined(USER) ? userDomain.require(USER) : new ModelNode().setEmptyObject();\n             writer.writeStartElement(Element.USERS.getLocalName());\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 2925,
        "bugNodeStartChar": 132608,
        "bugNodeLength": 32,
        "fixLineNum": 2925,
        "fixNodeStartChar": 132608,
        "fixNodeLength": 25,
        "sourceBeforeFix": "authentication.hasDefined(USERS)",
        "sourceAfterFix": "authentication.has(USERS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a4d8f930af1f17a6c48a9abd94f49e5fd719fc31",
        "fixCommitParentSHA1": "e85d43739819e6408c3a4a4e2f9e71bcf6905a2e",
        "bugFilePath": "codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java",
        "fixPatch": "diff --git a/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java b/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\nindex 0e243ce..dfdc856 100644\n--- a/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\n+++ b/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\n@@ -82,7 +82,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).byteAt(0);\n         }\n-        return Byte.valueOf(value.toString());\n+        return Byte.parseByte(value.toString());\n     }\n \n     @Override\n@@ -100,7 +100,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseShort();\n         }\n-        return Short.valueOf(value.toString());\n+        return Short.parseShort(value.toString());\n     }\n \n     @Override\n@@ -139,7 +139,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseFloat();\n         }\n-        return Float.valueOf(value.toString());\n+        return Float.parseFloat(value.toString());\n     }\n \n     @Override\n@@ -147,6 +147,6 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseDouble();\n         }\n-        return Double.valueOf(value.toString());\n+        return Double.parseDouble(value.toString());\n     }\n }\n",
        "projectName": "netty.netty",
        "bugLineNum": 85,
        "bugNodeStartChar": 2525,
        "bugNodeLength": 30,
        "fixLineNum": 85,
        "fixNodeStartChar": 2525,
        "fixNodeLength": 32,
        "sourceBeforeFix": "Byte.valueOf(value.toString())",
        "sourceAfterFix": "Byte.parseByte(value.toString())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "00644912992eceb3de7d2dc0213a05bf2844c1b2",
        "fixCommitParentSHA1": "1af0e4bcd8878a1e01d2bc0121985d07beddcc63",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/ClientRegressionTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/ClientRegressionTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/ClientRegressionTest.java\nindex b2449a1..0901dbf 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/ClientRegressionTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/ClientRegressionTest.java\n@@ -195,7 +195,7 @@\n                 } catch (InterruptedException e) {\n                     e.printStackTrace();\n                 }\n-                hz1.getLifecycleService().terminate();\n+                hz1.getLifecycleService().shutdown();\n             }\n         };\n \n@@ -226,7 +226,7 @@\n                 } catch (InterruptedException e) {\n                     e.printStackTrace();\n                 }\n-                hz1.getLifecycleService().terminate();\n+                hz1.getLifecycleService().shutdown();\n             }\n         };\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 229,
        "bugNodeStartChar": 8169,
        "bugNodeLength": 37,
        "fixLineNum": 229,
        "fixNodeStartChar": 8169,
        "fixNodeLength": 36,
        "sourceBeforeFix": "hz1.getLifecycleService().terminate()",
        "sourceAfterFix": "hz1.getLifecycleService().shutdown()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0cae1dd2419de0832f496dad480d8a11a9d6074f",
        "fixCommitParentSHA1": "1b7a8767f3019d121e0698f5dcd66b6412eb0bd9",
        "bugFilePath": "pact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.java",
        "fixPatch": "diff --git a/pact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.java b/pact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.java\nindex cf3d9cc..1bd7e40 100644\n--- a/pact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.java\n+++ b/pact/pact-runtime/src/main/java/eu/stratosphere/pact/runtime/task/PartitionTask.java\n@@ -262,7 +262,7 @@\n \t\t\n \t\t// determine distribution pattern for reader from input ship strategy\n \t\tDistributionPattern dpReader = null;\n-\t\tswitch (config.getInputShipStrategy(0)) {\n+\t\tswitch (config.getInputShipStrategy(1)) {\n \t\tcase FORWARD:\n \t\t\t// forward requires Pointwise DP\n \t\t\tdpReader = new PointwiseDistributionPattern();\n",
        "projectName": "apache.flink",
        "bugLineNum": 265,
        "bugNodeStartChar": 9431,
        "bugNodeLength": 30,
        "fixLineNum": 265,
        "fixNodeStartChar": 9431,
        "fixNodeLength": 30,
        "sourceBeforeFix": "config.getInputShipStrategy(0)",
        "sourceAfterFix": "config.getInputShipStrategy(1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "38d82701494c7ca1364976fcf7a7a10f50bcfa77",
        "fixCommitParentSHA1": "b4bdd15632e398f48f119cf814e5b7169148e699",
        "bugFilePath": "integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java",
        "fixPatch": "diff --git a/integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java b/integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java\nindex 4329f43..b6d3c46 100644\n--- a/integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java\n+++ b/integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java\n@@ -137,14 +137,14 @@\n \n     FileStat stat = new FileStat(Runtime.getSystemRuntime());\n     assertEquals(0, mFuseFs.getattr(\"/foo\", stat));\n-    assertEquals(status.getLength(), stat.st_size.get());\n+    assertEquals(status.getLength(), stat.st_size.longValue());\n     assertEquals(status.getLastModificationTimeMs() / 1000, stat.st_ctim.tv_sec.get());\n-    assertEquals((status.getLastModificationTimeMs() % 1000) * 1000, stat.st_ctim.tv_nsec.get());\n+    assertEquals((status.getLastModificationTimeMs() % 1000) * 1000, stat.st_ctim.tv_nsec.longValue());\n     assertEquals(status.getLastModificationTimeMs() / 1000, stat.st_mtim.tv_sec.get());\n-    assertEquals((status.getLastModificationTimeMs() % 1000) * 1000, stat.st_mtim.tv_nsec.get());\n+    assertEquals((status.getLastModificationTimeMs() % 1000) * 1000, stat.st_mtim.tv_nsec.longValue());\n     assertEquals(AlluxioFuseUtils.getUid(System.getProperty(\"user.name\")), stat.st_uid.get());\n     assertEquals(AlluxioFuseUtils.getGid(System.getProperty(\"user.name\")), stat.st_gid.get());\n-    assertEquals(123 | FileStat.S_IFDIR, stat.st_mode.get());\n+    assertEquals(123 | FileStat.S_IFDIR, stat.st_mode.intValue());\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 140,
        "bugNodeStartChar": 4902,
        "bugNodeLength": 18,
        "fixLineNum": 140,
        "fixNodeStartChar": 4902,
        "fixNodeLength": 24,
        "sourceBeforeFix": "stat.st_size.get()",
        "sourceAfterFix": "stat.st_size.longValue()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "68e8a46f67e0d42bc3ae4ca828be1ba3c079c786",
        "fixCommitParentSHA1": "41b768d0380e29250aa44de006dd7c2ece310a04",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\nindex 5c660c9..5560f22 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n@@ -363,7 +363,7 @@\n         WebSocketHandler webSocketHandler = webSocket.webSocketHandler();\n         try {\n             if (webSocketHandler == null) {\n-                if (!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())) {\n+                if (WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())) {\n                     List<AtmosphereRequest> list = WebSocketProtocolStream.class.cast(webSocketProtocol).onBinaryStream(webSocket, stream);\n                     dispatch(webSocket, list);\n                 } else {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 366,
        "bugNodeStartChar": 15603,
        "bugNodeLength": 77,
        "fixLineNum": 366,
        "fixNodeStartChar": 15603,
        "fixNodeLength": 76,
        "sourceBeforeFix": "!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())",
        "sourceAfterFix": "WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9e6f96dbfc8bf1ae1ffbe0115f53f1de0fc86ffc",
        "fixCommitParentSHA1": "4256555545f49406b00df2f077289e5c9cdb7a0a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\nindex 192e1fa..7d061ee 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n@@ -294,7 +294,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return true;\n@@ -318,7 +319,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return null;\n@@ -378,7 +380,7 @@\n                 record.setExpirationTime(expiryTime);\n                 if (isEventsEnabled()) {\n                     CacheEventContext cacheEventContext =\n-                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toHeapData(key),\n+                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toEventData(key),\n                                                    toEventData(record.getValue()), expiryTime, null, IGNORE_COMPLETION);\n                     cacheEventContext.setAccessHit(record.getAccessHit());\n                     publishEvent(cacheEventContext);\n@@ -493,7 +495,8 @@\n         final R record = createRecord(value, expirationTime);\n         updateHasExpiringEntry(record);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCreatedEvent(keyData, toEventData(value), expirationTime, origin, completionId));\n+            publishEvent(createCacheCreatedEvent(toEventData(keyData), toEventData(value),\n+                                                 expirationTime, origin, completionId));\n         }\n         return record;\n     }\n@@ -514,7 +517,7 @@\n             return record;\n         }\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                   origin, completionId));\n         }\n         return null;\n@@ -1002,7 +1005,7 @@\n             } else {\n                 result = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onPutIfAbsent(key, value, expiryPolicy, source, disableWriteThrough,\n@@ -1046,7 +1049,7 @@\n             if (record == null || isExpired) {\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1099,7 +1102,7 @@\n             }\n             if (!replaced) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onReplace(key, oldValue, newValue, expiryPolicy, source, false, record, isExpired, replaced);\n@@ -1131,7 +1134,7 @@\n                 obj = null;\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1182,7 +1185,7 @@\n             if (record == null || isExpired) {\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n@@ -1235,7 +1238,7 @@\n             }\n             if (!removed) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             }\n@@ -1284,7 +1287,7 @@\n                 obj = null;\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 381,
        "bugNodeStartChar": 16111,
        "bugNodeLength": 15,
        "fixLineNum": 381,
        "fixNodeStartChar": 16111,
        "fixNodeLength": 16,
        "sourceBeforeFix": "toHeapData(key)",
        "sourceAfterFix": "toEventData(key)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0673ae2adcc189937b5d30a361202d2e80ad9e0e",
        "fixCommitParentSHA1": "45aec56daca2c57598c8cbb0c348798ab2353f95",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\nindex 3d2d6de..d2981eb 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SliceArrayBlock.java\n@@ -131,7 +131,7 @@\n             Slice distinct = distinctValues.get(slice);\n             if (distinct == null) {\n                 distinct = Slices.copyOf(slice);\n-                distinctValues.put(distinct, distinct);\n+                distinctValues.put(slice, distinct);\n             }\n             newValues[i] = distinct;\n         }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 134,
        "bugNodeStartChar": 3987,
        "bugNodeLength": 38,
        "fixLineNum": 134,
        "fixNodeStartChar": 3987,
        "fixNodeLength": 35,
        "sourceBeforeFix": "distinctValues.put(distinct,distinct)",
        "sourceAfterFix": "distinctValues.put(slice,distinct)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3fcda6a67e8e859de3fc41ed93903832a30fc126",
        "fixCommitParentSHA1": "58b75feac96b31f18ad19e12e9835b43e12d3e0e",
        "bugFilePath": "core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java b/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\nindex 30de836..d4febbe 100644\n--- a/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\n+++ b/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\n@@ -100,19 +100,19 @@\n     private final String mServiceName;\n \n     // the key of connect hostname\n-    private final String mHostNameKey;\n+    private final PropertyKey mHostNameKey;\n \n     // the key of bind hostname\n-    private final String mBindHostKey;\n+    private final PropertyKey mBindHostKey;\n \n     // the key of service port\n-    private final String mPortKey;\n+    private final PropertyKey mPortKey;\n \n     // default port number\n     private final int mDefaultPort;\n \n-    ServiceType(String serviceName, String hostNameKey, String bindHostKey, String portKey,\n-        int defaultPort) {\n+    ServiceType(String serviceName, PropertyKey hostNameKey, PropertyKey bindHostKey,\n+        PropertyKey portKey, int defaultPort) {\n       mServiceName = serviceName;\n       mHostNameKey = hostNameKey;\n       mBindHostKey = bindHostKey;\n@@ -134,7 +134,7 @@\n      *\n      * @return key of connect hostname\n      */\n-    public String getHostNameKey() {\n+    public PropertyKey getHostNameKey() {\n       return mHostNameKey;\n     }\n \n@@ -143,7 +143,7 @@\n      *\n      * @return key of bind hostname\n      */\n-    public String getBindHostKey() {\n+    public PropertyKey getBindHostKey() {\n       return mBindHostKey;\n     }\n \n@@ -152,7 +152,7 @@\n      *\n      * @return key of service port\n      */\n-    public String getPortKey() {\n+    public PropertyKey getPortKey() {\n       return mPortKey;\n     }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 150,
        "bugNodeStartChar": 4351,
        "bugNodeLength": 152,
        "fixLineNum": 150,
        "fixNodeStartChar": 4351,
        "fixNodeLength": 157,
        "sourceBeforeFix": "/**   * Gets the key of service port.  * @return key of service port  */ public String getPortKey(){   return mPortKey; } ",
        "sourceAfterFix": "/**   * Gets the key of service port.  * @return key of service port  */ public PropertyKey getPortKey(){   return mPortKey; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cad6e4d396e7b901b8c83257312860021f01c060",
        "fixCommitParentSHA1": "5ee5dbf3dd9e5240ed13c8c3eaff6cca158010b3",
        "bugFilePath": "flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerHandler.java",
        "fixPatch": "diff --git a/flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerHandler.java b/flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerHandler.java\nindex b2f7a47..fb835e3 100644\n--- a/flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerHandler.java\n+++ b/flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerHandler.java\n@@ -165,7 +165,7 @@\n \t@Override\n \tpublic void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n \t\tfinal String msg = \"Exception in server pipeline. Caused by: \" + ExceptionUtils.stringifyException(cause);\n-\t\tfinal ByteBuf err = serializer.serializeServerFailure(ctx.alloc(), new RuntimeException(msg));\n+\t\tfinal ByteBuf err = MessageSerializer.serializeServerFailure(ctx.alloc(), new RuntimeException(msg));\n \n \t\tLOG.debug(msg);\n \t\tctx.writeAndFlush(err).addListener(ChannelFutureListener.CLOSE);\n",
        "projectName": "apache.flink",
        "bugLineNum": 168,
        "bugNodeStartChar": 6248,
        "bugNodeLength": 73,
        "fixLineNum": 168,
        "fixNodeStartChar": 6248,
        "fixNodeLength": 80,
        "sourceBeforeFix": "serializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))",
        "sourceAfterFix": "MessageSerializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "788f17bef1ee997c7652cf6c560682d37edc24eb",
        "fixCommitParentSHA1": "0be5408023ff52e6acf6baa6922c66f768e9dcdd",
        "bugFilePath": "api/src/test/java/org/openmrs/api/ConceptServiceTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/api/ConceptServiceTest.java b/api/src/test/java/org/openmrs/api/ConceptServiceTest.java\nindex ba5b2e5..83f5cdf 100644\n--- a/api/src/test/java/org/openmrs/api/ConceptServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/ConceptServiceTest.java\n@@ -1415,7 +1415,7 @@\n \t\tconceptService.saveConceptStopWord(conceptStopWord);\r\n \t\t\r\n \t\tList<String> conceptStopWords = conceptService.getConceptStopWords(Locale.US);\r\n-\t\tassertEquals(2, conceptStopWords.size());\r\n+\t\tassertEquals(1, conceptStopWords.size());\r\n \t}\r\n \t\r\n \t/**\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 1418,
        "bugNodeStartChar": 58874,
        "bugNodeLength": 40,
        "fixLineNum": 1418,
        "fixNodeStartChar": 57457,
        "fixNodeLength": 40,
        "sourceBeforeFix": "assertEquals(2,conceptStopWords.size())",
        "sourceAfterFix": "assertEquals(1,conceptStopWords.size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "da8362a2da7950fb84cba182a17a41e3b5152668",
        "fixCommitParentSHA1": "95e7fbeb1d96f7ebcc48ef582859d210d1828d2e",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/SkipPatternJarScanner.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/SkipPatternJarScanner.java b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/SkipPatternJarScanner.java\nindex f5665b4..4f4c190 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/SkipPatternJarScanner.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/embedded/tomcat/SkipPatternJarScanner.java\n@@ -50,7 +50,7 @@\n \n \tSkipPatternJarScanner(JarScanner jarScanner, Set<String> patterns) {\n \t\tAssert.notNull(jarScanner, \"JarScanner must not be null\");\n-\t\tAssert.notNull(jarScanner, \"Patterns must not be null\");\n+\t\tAssert.notNull(patterns, \"Patterns must not be null\");\n \t\tthis.jarScanner = jarScanner;\n \t\tthis.patterns = patterns;\n \t\tsetPatternToTomcat8SkipFilter();\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 53,
        "bugNodeStartChar": 1838,
        "bugNodeLength": 55,
        "fixLineNum": 53,
        "fixNodeStartChar": 1838,
        "fixNodeLength": 53,
        "sourceBeforeFix": "Assert.notNull(jarScanner,\"Patterns must not be null\")",
        "sourceAfterFix": "Assert.notNull(patterns,\"Patterns must not be null\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "e0e43deaec26384766a61874db4aaa6bda4ae415",
        "fixCommitParentSHA1": "8138d96f9d84d2d16dfc59f2187f3b57d52f5aed",
        "bugFilePath": "processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java",
        "fixPatch": "diff --git a/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java b/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\nindex ea58501..b8f63a5 100644\n--- a/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\n+++ b/processing/src/main/java/io/druid/query/groupby/GroupByQueryEngine.java\n@@ -182,7 +182,7 @@\n \n         final DimensionSelector dimSelector = dims.get(0);\n         final IndexedInts row = dimSelector.getRow();\n-        if (row.size() == 0) {\n+        if (row == null || row.size() == 0) {\n           ByteBuffer newKey = key.duplicate();\n           newKey.putInt(dimSelector.getValueCardinality());\n           unaggregatedBuffers = updateValues(newKey, dims.subList(1, dims.size()));\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 185,
        "bugNodeStartChar": 6277,
        "bugNodeLength": 15,
        "fixLineNum": 185,
        "fixNodeStartChar": 6277,
        "fixNodeLength": 30,
        "sourceBeforeFix": "row.size() == 0",
        "sourceAfterFix": "row == null || row.size() == 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0209b7e44013c785bb6a7ed3e1c4bf6c842cb918",
        "fixCommitParentSHA1": "7d592939c59ab258f8e92b92ca2b3d8effdade50",
        "bugFilePath": "services/src/main/java/io/druid/cli/CliBridge.java",
        "fixPatch": "diff --git a/services/src/main/java/io/druid/cli/CliBridge.java b/services/src/main/java/io/druid/cli/CliBridge.java\nindex 6da1ec2..a1f893f 100644\n--- a/services/src/main/java/io/druid/cli/CliBridge.java\n+++ b/services/src/main/java/io/druid/cli/CliBridge.java\n@@ -71,7 +71,7 @@\n           public void configure(Binder binder)\n           {\n             binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/bridge\");\n-            binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(8081);\n+            binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(8089);\n \n             ConfigProvider.bind(binder, BridgeCuratorConfig.class);\n \n",
        "projectName": "druid-io.druid",
        "bugLineNum": 74,
        "bugNodeStartChar": 2687,
        "bugNodeLength": 72,
        "fixLineNum": 74,
        "fixNodeStartChar": 2687,
        "fixNodeLength": 72,
        "sourceBeforeFix": "binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(8081)",
        "sourceAfterFix": "binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(8089)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9",
        "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713",
        "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java",
        "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\nindex c3649f2..230f452 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java\n@@ -45,12 +45,12 @@\n   private final ImmutableSortedSet<String> implementingTypes;\n   private final boolean publicType;\n   private final ImmutableSet<FactoryMethodDescriptor> methodDescriptors;\n-  private final ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors;\n+  private final ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors;\n   private final ImmutableMap<Key, String> providerNames;\n \n   FactoryDescriptor(String name, String extendingType, ImmutableSortedSet<String> implementingTypes,\n       boolean publicType, ImmutableSet<FactoryMethodDescriptor> methodDescriptors,\n-      ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors) {\n+      ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors) {\n     this.name = checkNotNull(name);\n     this.extendingType = checkNotNull(extendingType);\n     this.implementingTypes = checkNotNull(implementingTypes);\n@@ -101,7 +101,7 @@\n     return methodDescriptors;\n   }\n \n-  ImmutableSet<ImplemetationMethodDescriptor> implementationMethodDescriptors() {\n+  ImmutableSet<ImplementationMethodDescriptor> implementationMethodDescriptors() {\n     return implementationMethodDescriptors;\n   }\n \n",
        "projectName": "google.auto",
        "bugLineNum": 48,
        "bugNodeStartChar": 1619,
        "bugNodeLength": 43,
        "fixLineNum": 48,
        "fixNodeStartChar": 1619,
        "fixNodeLength": 44,
        "sourceBeforeFix": "ImmutableSet<ImplemetationMethodDescriptor>",
        "sourceAfterFix": "ImmutableSet<ImplementationMethodDescriptor>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e1d89ddbf6028369fd3117ff648fc6f16a1786fe",
        "fixCommitParentSHA1": "b5bdecd350ec54128fb0ea18690fd880d817712c",
        "bugFilePath": "components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java",
        "fixPatch": "diff --git a/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java b/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\nindex f3d15d4..3ae9fc1 100644\n--- a/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\n+++ b/components/camel-opentracing/src/main/java/org/apache/camel/opentracing/OpenTracingTracer.java\n@@ -242,7 +242,8 @@\n                     managedSpan.deactivate();\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n \n@@ -283,7 +284,8 @@\n                     LOG.trace(\"OpenTracing: start server span=\" + span);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n \n@@ -303,7 +305,8 @@\n                     LOG.warn(\"OpenTracing: could not find managed span for exchange=\" + exchange);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n         }\n     }\n@@ -327,7 +330,8 @@\n                     span.log(fields);\n                 }\n             } catch (Throwable t) {\n-                LOG.error(\"OpenTracing: Failed to capture tracing data\", t);\n+                // This exception is ignored\n+                LOG.warn(\"OpenTracing: Failed to capture tracing data\", t);\n             }\n             return message;\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 306,
        "bugNodeStartChar": 13026,
        "bugNodeLength": 59,
        "fixLineNum": 307,
        "fixNodeStartChar": 13071,
        "fixNodeLength": 58,
        "sourceBeforeFix": "LOG.error(\"OpenTracing: Failed to capture tracing data\",t)",
        "sourceAfterFix": "LOG.warn(\"OpenTracing: Failed to capture tracing data\",t)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "80ab41dff6ec63a591cb2f7450a6c8582f7b3fcb",
        "fixCommitParentSHA1": "ad782e750d50102743cf121f3a45a4823c9909c3",
        "bugFilePath": "app/lib/notifications/CheckServerClocksNotification.java",
        "fixPatch": "diff --git a/app/lib/notifications/CheckServerClocksNotification.java b/app/lib/notifications/CheckServerClocksNotification.java\nindex 23674fe..92a5593 100644\n--- a/app/lib/notifications/CheckServerClocksNotification.java\n+++ b/app/lib/notifications/CheckServerClocksNotification.java\n@@ -43,6 +43,6 @@\n \n     @Override\n     public boolean isCloseable() {\n-        return false;\n+        return true;\n     }\n }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 46,
        "bugNodeStartChar": 1660,
        "bugNodeLength": 13,
        "fixLineNum": 46,
        "fixNodeStartChar": 1660,
        "fixNodeLength": 12,
        "sourceBeforeFix": "return false; ",
        "sourceAfterFix": "return true; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dfce500be84e220ac42f32a09f0a4fa55fd3fbb9",
        "fixCommitParentSHA1": "998f6100a358e4054159781219f59bc84a0901d0",
        "bugFilePath": "components/camel-mybatis/src/test/java/org/apache/camel/component/mybatis/MyBatisPollingDelayRouteTest.java",
        "fixPatch": "diff --git a/components/camel-mybatis/src/test/java/org/apache/camel/component/mybatis/MyBatisPollingDelayRouteTest.java b/components/camel-mybatis/src/test/java/org/apache/camel/component/mybatis/MyBatisPollingDelayRouteTest.java\nindex c777c28..ed3b384 100644\n--- a/components/camel-mybatis/src/test/java/org/apache/camel/component/mybatis/MyBatisPollingDelayRouteTest.java\n+++ b/components/camel-mybatis/src/test/java/org/apache/camel/component/mybatis/MyBatisPollingDelayRouteTest.java\n@@ -26,7 +26,7 @@\n     public void testSendAccountBean() throws Exception {\n         long start = System.currentTimeMillis();\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(2);\n+        mock.expectedMinimumMessageCount(2);\n \n         assertMockEndpointsSatisfied();\n         long delta = System.currentTimeMillis() - start;\n",
        "projectName": "apache.camel",
        "bugLineNum": 29,
        "bugNodeStartChar": 1228,
        "bugNodeLength": 28,
        "fixLineNum": 29,
        "fixNodeStartChar": 1228,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(2)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "5f959c557973923b797770cac7e01032e89d63c9",
        "fixCommitParentSHA1": "fb195b2ad7db40ac019a50335eb778d131120ecc",
        "bugFilePath": "spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java",
        "fixPatch": "diff --git a/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\nindex f326ae6..0c31c16 100644\n--- a/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n+++ b/spring-boot/src/test/java/org/springframework/boot/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n@@ -377,7 +377,8 @@\n \t\t\tthrows Exception {\n \t\tAbstractEmbeddedServletContainerFactory factory = getFactory();\n \t\taddTestTxtFile(factory);\n-\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"src/test/resources/test.jks\"));\n+\t\tfactory.setSsl(getSsl(ClientAuth.NEED, \"password\", \"src/test/resources/test.jks\",\n+\t\t\t\t\"src/test/resources/test.jks\"));\n \t\tthis.container = factory.getEmbeddedServletContainer();\n \t\tthis.container.start();\n \t\tKeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 380,
        "bugNodeStartChar": 14293,
        "bugNodeLength": 66,
        "fixLineNum": 380,
        "fixNodeStartChar": 14293,
        "fixNodeLength": 101,
        "sourceBeforeFix": "getSsl(ClientAuth.NEED,\"password\",\"src/test/resources/test.jks\")",
        "sourceAfterFix": "getSsl(ClientAuth.NEED,\"password\",\"src/test/resources/test.jks\",\"src/test/resources/test.jks\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "5e12bb4e2c2a79b5af4dd4ab5e3547066e866580",
        "fixCommitParentSHA1": "34557cb76bd5cf3bc7ad81437541cdccda619034",
        "bugFilePath": "src/web/org/openmrs/web/controller/patient/PatientFormController.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/controller/patient/PatientFormController.java b/src/web/org/openmrs/web/controller/patient/PatientFormController.java\nindex f77c0f2..e02f9ab 100644\n--- a/src/web/org/openmrs/web/controller/patient/PatientFormController.java\n+++ b/src/web/org/openmrs/web/controller/patient/PatientFormController.java\n@@ -598,7 +598,7 @@\n \t\t\r\n \t\tif (reasonForExitConcept != null && patient.getPatientId() != null) {\r\n \t\t\tList<Obs> patientExitObs = Context.getObsService().getObservationsByPersonAndConcept(patient, reasonForExitConcept);\r\n-\t\t\tif (patientExitObs != null) {\r\n+\t\t\tif (patientExitObs != null && patientExitObs.size() > 0) {\r\n \t\t\t\tlog.debug(\"Exit obs is size \" + patientExitObs.size());\r\n \t\t\t\tif (patientExitObs.size() == 1) {\r\n \t\t\t\t\tObs exitObs = patientExitObs.iterator().next();\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 601,
        "bugNodeStartChar": 25170,
        "bugNodeLength": 22,
        "fixLineNum": 601,
        "fixNodeStartChar": 24570,
        "fixNodeLength": 51,
        "sourceBeforeFix": "patientExitObs != null",
        "sourceAfterFix": "patientExitObs != null && patientExitObs.size() > 0"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b47d226858ebcd6e4f6368a3c7132897456dfdb0",
        "fixCommitParentSHA1": "3335127493c2b7876657ea02f0a38dca4ae7e52c",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\nindex dbc7631..86b9f97 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\n@@ -199,7 +199,7 @@\n         return new BinaryPredicateSupport<E>(left, right) {\n \n             protected boolean matches(E exchange, Object leftValue, Object rightValue) {\n-                return compare(leftValue, rightValue) < 0;\n+                return compare(leftValue, rightValue) >= 0;\n             }\n \n             protected String getOperationText() {\n",
        "projectName": "apache.camel",
        "bugLineNum": 202,
        "bugNodeStartChar": 7165,
        "bugNodeLength": 34,
        "fixLineNum": 202,
        "fixNodeStartChar": 7165,
        "fixNodeLength": 35,
        "sourceBeforeFix": "compare(leftValue,rightValue) < 0",
        "sourceAfterFix": "compare(leftValue,rightValue) >= 0"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1135,
        "bugNodeStartChar": 60689,
        "bugNodeLength": 136,
        "fixLineNum": 1135,
        "fixNodeStartChar": 60689,
        "fixNodeLength": 130,
        "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))",
        "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists/memberships.json?cursor=\"+ cursor,true))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\nindex 72e8341..87fa26f 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 2010,
        "bugNodeStartChar": 89972,
        "bugNodeLength": 22,
        "fixLineNum": 2010,
        "fixNodeStartChar": 89972,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(561)",
        "sourceAfterFix": "new StringBuilder(560)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3d76925f31db8747ba6726e1c0d568441479de6e",
        "fixCommitParentSHA1": "8459387c93407382b251f01eca24eba5fdcb4d5f",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/impl/mapstore/MapStoreWriteBehindTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/impl/mapstore/MapStoreWriteBehindTest.java b/hazelcast/src/test/java/com/hazelcast/map/impl/mapstore/MapStoreWriteBehindTest.java\nindex c2f55a6..e92c5ce 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/impl/mapstore/MapStoreWriteBehindTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/impl/mapstore/MapStoreWriteBehindTest.java\n@@ -245,7 +245,7 @@\n     public void testOneMemberWriteBehindFlush() {\n         TestMapStore testMapStore = new TestMapStore(1, 1, 1);\n         testMapStore.setLoadAllKeys(false);\n-        int writeDelaySeconds = 2;\n+        int writeDelaySeconds = 10;\n         Config config = newConfig(testMapStore, writeDelaySeconds);\n         TestHazelcastInstanceFactory nodeFactory = createHazelcastInstanceFactory(3);\n         HazelcastInstance instance = nodeFactory.newHazelcastInstance(config);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 248,
        "bugNodeStartChar": 10294,
        "bugNodeLength": 21,
        "fixLineNum": 248,
        "fixNodeStartChar": 10294,
        "fixNodeLength": 22,
        "sourceBeforeFix": "writeDelaySeconds=2",
        "sourceAfterFix": "writeDelaySeconds=10"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d37d345f6b168a610f2dfc2879dc00bce089f72b",
        "fixCommitParentSHA1": "00553b349552e3c802f8f51d60ee773a81f4e4a6",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\nindex 4968ae3..f2b25e8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n+++ b/presto-main/src/test/java/com/facebook/presto/spiller/TestBinaryFileSpiller.java\n@@ -62,7 +62,7 @@\n \n         BlockBuilder col1 = BIGINT.createBlockBuilder(new BlockBuilderStatus(), 1);\n         BlockBuilder col2 = DOUBLE.createBlockBuilder(new BlockBuilderStatus(), 1);\n-        BlockBuilder col3 = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 1);\n+        BlockBuilder col3 = VARBINARY.createBlockBuilder(new BlockBuilderStatus(), 1);\n \n         col1.writeLong(42).closeEntry();\n         col2.writeLong(doubleToLongBits(43.0)).closeEntry();\n",
        "projectName": "facebook.presto",
        "bugLineNum": 65,
        "bugNodeStartChar": 2678,
        "bugNodeLength": 55,
        "fixLineNum": 65,
        "fixNodeStartChar": 2678,
        "fixNodeLength": 57,
        "sourceBeforeFix": "VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)",
        "sourceAfterFix": "VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a4662237bc467310f0dc1c28aa621f84571225b1",
        "fixCommitParentSHA1": "ad69603a419c345ab963288ec2ff0a737d11db5f",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\nindex e390609..01472b3 100755\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/event/JobEventsTest.java\n@@ -105,7 +105,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testRepetitionJobEvents\");\n     Job theJob = managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();\n     assertNotNull(theJob);\n@@ -156,7 +156,7 @@\n \n     processEngineConfiguration.setClock(testClock);\n \n-    testClock.setCurrentTime(new Date(0));\n+    testClock.setCurrentTime(new Date(1));\n     runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n@@ -170,7 +170,7 @@\n   @Deployment(resources = \"org/activiti/engine/test/api/event/JobEventsTest.testJobCanceledEventOnBoundaryEvent.bpmn20.xml\")\n   public void testJobCanceledEventByManagementService() throws Exception {\n     // GIVEN\n-    processEngineConfiguration.getClock().setCurrentTime(new Date(0));\n+    processEngineConfiguration.getClock().setCurrentTime(new Date(1));\n     ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(\"testTimerCancelledEvent\");\n     listener.clearEventsReceived();\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 108,
        "bugNodeStartChar": 4051,
        "bugNodeLength": 11,
        "fixLineNum": 108,
        "fixNodeStartChar": 4051,
        "fixNodeLength": 11,
        "sourceBeforeFix": "new Date(0)",
        "sourceAfterFix": "new Date(1)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cca814afdb1449e3bfc309dc892c0185c783622c",
        "fixCommitParentSHA1": "413b4f4a4c5f5fe4919135c7cbb0b9e842967764",
        "bugFilePath": "components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelThreadPoolFactoryBean.java",
        "fixPatch": "diff --git a/components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelThreadPoolFactoryBean.java b/components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelThreadPoolFactoryBean.java\nindex 5426590..d4200df 100644\n--- a/components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelThreadPoolFactoryBean.java\n+++ b/components/camel-core-xml/src/main/java/org/apache/camel/core/xml/AbstractCamelThreadPoolFactoryBean.java\n@@ -76,7 +76,7 @@\n \n         int queueSize = -1;\n         if (maxQueueSize != null) {\n-            queueSize = CamelContextHelper.parseInteger(getCamelContext(), keepAliveTime);\n+            queueSize = CamelContextHelper.parseInteger(getCamelContext(), maxQueueSize);\n         }\n \n         ExecutorService answer = getCamelContext().getExecutorServiceStrategy().newThreadPool(getId(), getThreadName(),\n",
        "projectName": "apache.camel",
        "bugLineNum": 79,
        "bugNodeStartChar": 2975,
        "bugNodeLength": 65,
        "fixLineNum": 79,
        "fixNodeStartChar": 2975,
        "fixNodeLength": 64,
        "sourceBeforeFix": "CamelContextHelper.parseInteger(getCamelContext(),keepAliveTime)",
        "sourceAfterFix": "CamelContextHelper.parseInteger(getCamelContext(),maxQueueSize)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "14eade7f6e21e560a08de348504584cba5e94c94",
        "fixCommitParentSHA1": "c22f3a47ab5fa466aeb34fd3a1a3a094d0e8d957",
        "bugFilePath": "testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\nindex 3341b58..48a0618 100644\n--- a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n+++ b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n@@ -71,7 +71,7 @@\n     public static Archive<?> deployment0() {\n         WebArchive war = ShrinkWrap.create(WebArchive.class, \"distributable.war\");\n         war.addClass(SimpleServlet.class);\n-        war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(), \"web.xml\");\n+        war.setWebXML(ClusteredWebTestCase.class.getPackage(), \"web.xml\");\n         System.out.println(war.toString(true));\n         return war;\n     }\n@@ -81,7 +81,7 @@\n     public static Archive<?> deployment1() {\n         WebArchive war = ShrinkWrap.create(WebArchive.class, \"distributable.war\");\n         war.addClass(SimpleServlet.class);\n-        war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(), \"web.xml\");\n+        war.setWebXML(ClusteredWebTestCase.class.getPackage(), \"web.xml\");\n         war.addAsWebInfResource(EmptyAsset.INSTANCE, \"force-hashcode-change.txt\");\n         System.out.println(war.toString(true));\n         return war;\n@@ -115,7 +115,7 @@\n     }\n \n     @Test\n-    @Ignore(\"AS7-2738 and AS7-2837\")\n+    @Ignore(\"AS7-2704 StackOverflowError on creating a web session in cluster\")\n     @OperateOnDeployment(\"deployment-1\") // For change, operate on the 2nd deployment first\n     public void testSessionReplication(@ArquillianResource(SimpleServlet.class) URL baseURL) throws IllegalStateException, IOException, InterruptedException {\n         DefaultHttpClient client = new DefaultHttpClient();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 74,
        "bugNodeStartChar": 2874,
        "bugNodeLength": 75,
        "fixLineNum": 74,
        "fixNodeStartChar": 2874,
        "fixNodeLength": 65,
        "sourceBeforeFix": "war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(),\"web.xml\")",
        "sourceAfterFix": "war.setWebXML(ClusteredWebTestCase.class.getPackage(),\"web.xml\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f8c20919f9c2e18e48142c2712e34298f98b983e",
        "fixCommitParentSHA1": "018231d20a291587dc17c2be3c9f0d13c450bcb0",
        "bugFilePath": "spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java",
        "fixPatch": "diff --git a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\nindex d9f6f41..f231c1d 100644\n--- a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n+++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/AbstractEmbeddedServletContainerFactoryTests.java\n@@ -81,7 +81,7 @@\n \tpublic void startServlet() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8080/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -90,7 +90,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(0);\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tthis.thrown.expectMessage(\"Connection refused\");\n \t\tgetResponse(\"http://localhost:8080/hello\");\n@@ -100,7 +100,7 @@\n \tpublic void stopServlet() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.container.stop();\n \t\tthis.thrown.expect(ConnectException.class);\n \t\tgetResponse(\"http://localhost:8080/hello\");\n@@ -111,7 +111,7 @@\n \tpublic void restartWithKeepAlive() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \n \t\tMultiThreadedHttpConnectionManager connectionManager = new MultiThreadedHttpConnectionManager();\n \t\tHttpClient client = new HttpClient(connectionManager);\n@@ -121,7 +121,7 @@\n \n \t\tthis.container.stop();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \n \t\tGetMethod get2 = new GetMethod(\"http://localhost:8080/hello\");\n \t\tassertThat(client.executeMethod(get2), equalTo(200));\n@@ -131,7 +131,7 @@\n \t@Test\n \tpublic void startServletAndFilter() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n-\t\tthis.container = factory.getEmbdeddedServletContainer(\n+\t\tthis.container = factory.getEmbeddedServletContainer(\n \t\t\t\texampleServletRegistration(), new FilterRegistrationBean(\n \t\t\t\t\t\tnew ExampleFilter()));\n \t\tassertThat(getResponse(\"http://localhost:8080/hello\"), equalTo(\"[Hello World]\"));\n@@ -143,7 +143,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfinal Date[] date = new Date[1];\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(new ServletContextInitializer() {\n+\t\t\t\t.getEmbeddedServletContainer(new ServletContextInitializer() {\n \t\t\t\t\t@Override\n \t\t\t\t\tpublic void onStartup(ServletContext servletContext)\n \t\t\t\t\t\t\tthrows ServletException {\n@@ -163,7 +163,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setPort(8081);\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8081/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -172,7 +172,7 @@\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setContextPath(\"/say\");\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tassertThat(getResponse(\"http://localhost:8080/say/hello\"), equalTo(\"Hello World\"));\n \t}\n \n@@ -202,7 +202,7 @@\n \tpublic void doubleStop() throws Exception {\n \t\tConfigurableEmbeddedServletContainerFactory factory = getFactory();\n \t\tthis.container = factory\n-\t\t\t\t.getEmbdeddedServletContainer(exampleServletRegistration());\n+\t\t\t\t.getEmbeddedServletContainer(exampleServletRegistration());\n \t\tthis.container.stop();\n \t\tthis.container.stop();\n \t}\n@@ -216,7 +216,7 @@\n \t\t}\n \t\tfactory.setInitializers(Arrays.asList(initializers[2], initializers[3]));\n \t\tfactory.addInitializers(initializers[4], initializers[5]);\n-\t\tthis.container = factory.getEmbdeddedServletContainer(initializers[0],\n+\t\tthis.container = factory.getEmbeddedServletContainer(initializers[0],\n \t\t\t\tinitializers[1]);\n \t\tInOrder ordered = inOrder((Object[]) initializers);\n \t\tfor (ServletContextInitializer initializer : initializers) {\n@@ -230,7 +230,7 @@\n \t\t\t\tnew FileWriter(this.temporaryFolder.newFile(\"test.txt\")));\n \t\tAbstractEmbeddedServletContainerFactory factory = getFactory();\n \t\tfactory.setDocumentRoot(this.temporaryFolder.getRoot());\n-\t\tthis.container = factory.getEmbdeddedServletContainer();\n+\t\tthis.container = factory.getEmbeddedServletContainer();\n \t\tassertThat(getResponse(\"http://localhost:8080/test.txt\"), equalTo(\"test\"));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 134,
        "bugNodeStartChar": 4468,
        "bugNodeLength": 127,
        "fixLineNum": 134,
        "fixNodeStartChar": 4468,
        "fixNodeLength": 126,
        "sourceBeforeFix": "factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))",
        "sourceAfterFix": "factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3439fb13b3fa16d5e42d0e064065be5ae7462eb",
        "fixCommitParentSHA1": "a9985cbe64988960f30426fd36cbb4487e6d10b4",
        "bugFilePath": "src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\nindex cb35755..8377fbe 100644\n--- a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n+++ b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n@@ -407,12 +407,12 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n+        public Builder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n             configBuilder.setMaximumConnectionsPerHost(defaultMaxConnectionPerHost);\n             return this;\n         }\n \n-        public DerivedBuilder setConnectionTimeoutInMs(int connectionTimeuot) {\n+        public Builder setConnectionTimeoutInMs(int connectionTimeuot) {\n             configBuilder.setConnectionTimeoutInMs(connectionTimeuot);\n             return this;\n         }\n@@ -427,52 +427,52 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n+        public Builder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n             configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);\n             return this;\n         }\n \n-        public DerivedBuilder setCompressionEnabled(boolean compressionEnabled) {\n+        public Builder setCompressionEnabled(boolean compressionEnabled) {\n             configBuilder.setCompressionEnabled(compressionEnabled);\n             return this;\n         }\n \n-        public DerivedBuilder setUserAgent(String userAgent) {\n+        public Builder setUserAgent(String userAgent) {\n             configBuilder.setUserAgent(userAgent);\n             return this;\n         }\n \n-        public DerivedBuilder setAllowPoolingConnection(boolean allowPoolingConnection) {\n+        public Builder setAllowPoolingConnection(boolean allowPoolingConnection) {\n             configBuilder.setAllowPoolingConnection(allowPoolingConnection);\n             return this;\n         }\n \n-        public DerivedBuilder setScheduledExecutorService(ScheduledExecutorService reaper) {\n+        public Builder setScheduledExecutorService(ScheduledExecutorService reaper) {\n             configBuilder.setScheduledExecutorService(reaper);\n             return this;\n         }\n \n-        public DerivedBuilder setExecutorService(ExecutorService applicationThreadPool) {\n+        public Builder setExecutorService(ExecutorService applicationThreadPool) {\n             configBuilder.setExecutorService(applicationThreadPool);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n+        public Builder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n             configBuilder.setSSLEngineFactory(sslEngineFactory);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLContext(final SSLContext sslContext) {\n+        public Builder setSSLContext(final SSLContext sslContext) {\n             configBuilder.setSSLContext(sslContext);\n             return this;\n         }\n \n-        public DerivedBuilder setRequestCompressionLevel(int requestCompressionLevel) {\n+        public Builder setRequestCompressionLevel(int requestCompressionLevel) {\n             configBuilder.setRequestCompressionLevel(requestCompressionLevel);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmDomain(String domain) {\n+        public Builder setRealmDomain(String domain) {\n             realm().setDomain(domain);\n             return this;\n         }\n@@ -482,27 +482,27 @@\n             return this;\n         }\n \n-        public DerivedBuilder setRealmPassword(String password) {\n+        public Builder setRealmPassword(String password) {\n             realm().setPassword(password);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmScheme(Realm.AuthScheme scheme) {\n+        public Builder setRealmScheme(Realm.AuthScheme scheme) {\n             realm().setScheme(scheme);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmName(String realmName) {\n+        public Builder setRealmName(String realmName) {\n             realm().setRealmName(realmName);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n+        public Builder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n             realm().setUsePreemptiveAuth(usePreemptiveAuth);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmEnconding(String enc) {\n+        public Builder setRealmEnconding(String enc) {\n             realm().setEnconding(enc);\n             return this;\n         }\n@@ -517,22 +517,22 @@\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPrincipal(String principal) {\n+        public Builder setProxyPrincipal(String principal) {\n             this.proxyPrincipal = principal;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPassword(String password) {\n+        public Builder setProxyPassword(String password) {\n             this.proxyPassword = password;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPort(int port) {\n+        public Builder setProxyPort(int port) {\n             this.proxyPort = port;\n             return this;\n         }\n         \n-        public DerivedBuilder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n+        public Builder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n         {\n             this.defaultThrowableHandler = throwableHandler;\n             return this;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 485,
        "bugNodeStartChar": 18758,
        "bugNodeLength": 135,
        "fixLineNum": 485,
        "fixNodeStartChar": 18758,
        "fixNodeLength": 128,
        "sourceBeforeFix": "public DerivedBuilder setRealmPassword(String password){   realm().setPassword(password);   return this; } ",
        "sourceAfterFix": "public Builder setRealmPassword(String password){   realm().setPassword(password);   return this; } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "68e2bde0e098378e60387fa1de6fbecd26fcb9b6",
        "fixCommitParentSHA1": "01a32d6361e24469516d1b440bd0b7841ef1bd28",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/operation/MapReplicationOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/operation/MapReplicationOperation.java b/hazelcast/src/main/java/com/hazelcast/map/operation/MapReplicationOperation.java\nindex 844d3e8..a4e6491 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/operation/MapReplicationOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/operation/MapReplicationOperation.java\n@@ -68,7 +68,7 @@\n                 mapInitialLoadInfo.put(name, recordStore.isLoaded());\n             }\n             // now prepare data to migrate records\n-            Set<RecordReplicationInfo> recordSet = new HashSet<RecordReplicationInfo>();\n+            Set<RecordReplicationInfo> recordSet = new HashSet<RecordReplicationInfo>(recordStore.size());\n             for (Entry<Data, Record> recordEntry : recordStore.getReadonlyRecordMap().entrySet()) {\n                 Data key = recordEntry.getKey();\n                 Record record = recordEntry.getValue();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 71,
        "bugNodeStartChar": 2884,
        "bugNodeLength": 36,
        "fixLineNum": 71,
        "fixNodeStartChar": 2884,
        "fixNodeLength": 54,
        "sourceBeforeFix": "new HashSet<RecordReplicationInfo>()",
        "sourceAfterFix": "new HashSet<RecordReplicationInfo>(recordStore.size())"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "36861f2d8c45c809ce7d13944320bb144dbc6757",
        "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 191,
        "bugNodeStartChar": 8265,
        "bugNodeLength": 13,
        "fixLineNum": 191,
        "fixNodeStartChar": 8075,
        "fixNodeLength": 16,
        "sourceBeforeFix": "tiled != null",
        "sourceAfterFix": "drawable != null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "7df28adfe32361be1a4d69a3282f8c8f197ac278",
        "fixCommitParentSHA1": "e0545ba58359599a5beb7b69726530369412dda5",
        "bugFilePath": "src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java",
        "fixPatch": "diff --git a/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java b/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java\nindex 27c81a0..777e5ab 100644\n--- a/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java\n+++ b/src/main/java/org/jboss/netty/handler/codec/http/HttpHeaders.java\n@@ -631,14 +631,14 @@\n             if (HttpMethod.GET.equals(req.getMethod()) &&\n                 req.containsHeader(Names.SEC_WEBSOCKET_KEY1) &&\n                 req.containsHeader(Names.SEC_WEBSOCKET_KEY2)) {\n-                return 10;\n+                return 8;\n             }\n         } else if (message instanceof HttpResponse) {\n             HttpResponse res = (HttpResponse) message;\n             if (res.getStatus().getCode() == 101 &&\n                 res.containsHeader(Names.SEC_WEBSOCKET_ORIGIN) &&\n                 res.containsHeader(Names.SEC_WEBSOCKET_LOCATION)) {\n-                return 18;\n+                return 16;\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 641,
        "bugNodeStartChar": 20644,
        "bugNodeLength": 10,
        "fixLineNum": 641,
        "fixNodeStartChar": 20644,
        "fixNodeLength": 10,
        "sourceBeforeFix": "return 18; ",
        "sourceAfterFix": "return 16; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6e0e38f09f74fb633a33cfd5c59265518bcf85be",
        "fixCommitParentSHA1": "e1dd149ca6b686fbed3abc3054e87244505139d0",
        "bugFilePath": "codec-http/src/test/java/io/netty/handler/codec/http/HttpInvalidMessageTest.java",
        "fixPatch": "diff --git a/codec-http/src/test/java/io/netty/handler/codec/http/HttpInvalidMessageTest.java b/codec-http/src/test/java/io/netty/handler/codec/http/HttpInvalidMessageTest.java\nindex a99efa5..bae6eee 100644\n--- a/codec-http/src/test/java/io/netty/handler/codec/http/HttpInvalidMessageTest.java\n+++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpInvalidMessageTest.java\n@@ -37,7 +37,7 @@\n         HttpRequest req = (HttpRequest) ch.readInbound();\n         DecoderResult dr = req.getDecoderResult();\n         assertFalse(dr.isSuccess());\n-        assertFalse(dr.isFailure());\n+        assertTrue(dr.isFailure());\n         ensureInboundTrafficDiscarded(ch);\n     }\n \n@@ -64,7 +64,7 @@\n         HttpResponse res = (HttpResponse) ch.readInbound();\n         DecoderResult dr = res.getDecoderResult();\n         assertFalse(dr.isSuccess());\n-        assertFalse(dr.isFailure());\n+        assertTrue(dr.isFailure());\n         ensureInboundTrafficDiscarded(ch);\n     }\n \n@@ -97,7 +97,7 @@\n         HttpContent chunk = (HttpContent) ch.readInbound();\n         DecoderResult dr = chunk.getDecoderResult();\n         assertFalse(dr.isSuccess());\n-        assertFalse(dr.isFailure());\n+        assertTrue(dr.isFailure());\n         ensureInboundTrafficDiscarded(ch);\n     }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 67,
        "bugNodeStartChar": 2838,
        "bugNodeLength": 27,
        "fixLineNum": 67,
        "fixNodeStartChar": 2838,
        "fixNodeLength": 26,
        "sourceBeforeFix": "assertFalse(dr.isFailure())",
        "sourceAfterFix": "assertTrue(dr.isFailure())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4f0afdcf8ee593023a10e3783e1689bd957018c5",
        "fixCommitParentSHA1": "e604167abbeb66260f47fc0fe59c2cbbcf8ce92d",
        "bugFilePath": "tool/src/org/antlr/v4/tool/ErrorType.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/tool/ErrorType.java b/tool/src/org/antlr/v4/tool/ErrorType.java\nindex 6b94f9d..4868931 100644\n--- a/tool/src/org/antlr/v4/tool/ErrorType.java\n+++ b/tool/src/org/antlr/v4/tool/ErrorType.java\n@@ -956,7 +956,7 @@\n \t */\n \tCHANNELS_BLOCK_IN_COMBINED_GRAMMAR(164, \"custom channels are not supported in combined grammars\", ErrorSeverity.ERROR),\n \n-\tNONCONFORMING_LR_RULE(165, \"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle\", ErrorSeverity.ERROR),\n+\tNONCONFORMING_LR_RULE(169, \"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle\", ErrorSeverity.ERROR),\n \n \t/*\n \t * Backward incompatibility errors\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 959,
        "bugNodeStartChar": 31487,
        "bugNodeLength": 129,
        "fixLineNum": 959,
        "fixNodeStartChar": 31487,
        "fixNodeLength": 129,
        "sourceBeforeFix": "NONCONFORMING_LR_RULE(165,\"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle\",ErrorSeverity.ERROR)",
        "sourceAfterFix": "NONCONFORMING_LR_RULE(169,\"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle\",ErrorSeverity.ERROR)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "4541df6610696f68d6e8b1506ecb753be54e6368",
        "fixCommitParentSHA1": "205263cc98cc6455c8054f3e552e331934712f48",
        "bugFilePath": "components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java b/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java\nindex 7805489..d18af27 100644\n--- a/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java\n+++ b/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanWithBusTest.java\n@@ -43,7 +43,9 @@\n         CxfEndpoint endpoint = (CxfEndpoint)camelContext.getEndpoint(\"cxf:bean:routerEndpoint\");\n         \n         // verify the interceptor that is added by the logging feature\n-        assertTrue(endpoint.getBus().getInInterceptors().size() == 1);\n+        // Spring 3.0.0 has an issue of SPR-6589 which will call the BusApplicationListener twice for the same event,\n+        // so we will get more one InInterceptors here\n+        assertTrue(endpoint.getBus().getInInterceptors().size() >= 1);\n         assertEquals(LoggingInInterceptor.class, endpoint.getBus().getInInterceptors().get(0).getClass());\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 46,
        "bugNodeStartChar": 1838,
        "bugNodeLength": 49,
        "fixLineNum": 48,
        "fixNodeStartChar": 2011,
        "fixNodeLength": 49,
        "sourceBeforeFix": "endpoint.getBus().getInInterceptors().size() == 1",
        "sourceAfterFix": "endpoint.getBus().getInInterceptors().size() >= 1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c0f265384f09d5b36e2065083922ba428edef798",
        "fixCommitParentSHA1": "17007685c1ad2c4b7e672afaaf43b50f6c3a7c5c",
        "bugFilePath": "hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ColumnPaginationFilter.java",
        "fixPatch": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ColumnPaginationFilter.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ColumnPaginationFilter.java\nindex 696f868..2ce9746 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ColumnPaginationFilter.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/ColumnPaginationFilter.java\n@@ -207,7 +207,7 @@\n \n     ColumnPaginationFilter other = (ColumnPaginationFilter)o;\n     if (this.columnOffset != null) {\n-      return this.getLimit() == this.getLimit() &&\n+      return this.getLimit() == other.getLimit() &&\n           Bytes.equals(this.getColumnOffset(), other.getColumnOffset());\n     }\n     return this.getLimit() == other.getLimit() && this.getOffset() == other.getOffset();\n",
        "projectName": "apache.hbase",
        "bugLineNum": 210,
        "bugNodeStartChar": 7365,
        "bugNodeLength": 4,
        "fixLineNum": 210,
        "fixNodeStartChar": 7365,
        "fixNodeLength": 5,
        "sourceBeforeFix": "this.getLimit()",
        "sourceAfterFix": "other.getLimit()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "874e959e0940032af2b854bc32e6fcf7e86f8bd5",
        "fixCommitParentSHA1": "545867ca1ded62f15be8ef88067988494a60b967",
        "bugFilePath": "src/main/java/org/scribe/model/OAuthRequest.java",
        "fixPatch": "diff --git a/src/main/java/org/scribe/model/OAuthRequest.java b/src/main/java/org/scribe/model/OAuthRequest.java\nindex a712ae9..ec7f023 100644\n--- a/src/main/java/org/scribe/model/OAuthRequest.java\n+++ b/src/main/java/org/scribe/model/OAuthRequest.java\n@@ -41,7 +41,7 @@\n \n   private String checkKey(String key)\n   {\n-    if (!key.startsWith(OAUTH_PREFIX) || key.equals(OAuthConstants.SCOPE))\n+    if (!key.startsWith(OAUTH_PREFIX) || !key.equals(OAuthConstants.SCOPE))\n     {\n       throw new IllegalArgumentException(String.format(\"OAuth parameters must either be %s or start with '%s'\", OAuthConstants.SCOPE, OAUTH_PREFIX));\n     } else\n",
        "projectName": "scribejava.scribejava",
        "bugLineNum": 44,
        "bugNodeStartChar": 998,
        "bugNodeLength": 32,
        "fixLineNum": 44,
        "fixNodeStartChar": 998,
        "fixNodeLength": 33,
        "sourceBeforeFix": "key.equals(OAuthConstants.SCOPE)",
        "sourceAfterFix": "!key.equals(OAuthConstants.SCOPE)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "ec850bd48804a670b56d49d9e3d8d36c26f7674b",
        "fixCommitParentSHA1": "fbdc8f67cfd7f659e599283f8cf69c3c9ec47c54",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\nindex a6917cc..b661e6a 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n@@ -537,7 +537,7 @@\n \t\t\t// If we have all the data, set stageAdvanced to true to tell the\n \t\t\t// system\n \t\t\t// that we're starting again, then loop around again.\n-\t\t\tif (sendMessage() == false) {\n+\t\t\tif (currentStage != NodeStage.DONE && sendMessage() == false) {\n \t\t\t\t// Move on to the next stage\n \t\t\t\tcurrentStage = currentStage.getNextStage();\n \t\t\t\tstageAdvanced = true;\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 540,
        "bugNodeStartChar": 23254,
        "bugNodeLength": 22,
        "fixLineNum": 540,
        "fixNodeStartChar": 23254,
        "fixNodeLength": 56,
        "sourceBeforeFix": "sendMessage() == false",
        "sourceAfterFix": "currentStage != NodeStage.DONE && sendMessage() == false"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "2b6d45508192c28f6b957a1ec18eb4fc075f9a97",
        "fixCommitParentSHA1": "8a666af5ccbd66908324012686c72f22a70cfd7f",
        "bugFilePath": "servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java",
        "fixPatch": "diff --git a/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java b/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\nindex 4a24ff9..8f92a4a 100644\n--- a/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\n+++ b/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\n@@ -73,19 +73,19 @@\n \n     InetSocketAddress masterAddress = BlockWorkerUtils.getMasterAddress(mCustomPropsTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(\"RemoteMaster1\", 10000));\n+    Assert.assertEquals(new InetSocketAddress(\"RemoteMaster1\", 10000), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullMasterHostNameTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(defaultHostname, 20000));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, 20000), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullMasterPortTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(\"RemoteMaster3\", defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(\"RemoteMaster3\", defaultPort), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(defaultHostname, defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, defaultPort), masterAddress);\n   }\n \n   @Test\n@@ -95,10 +95,10 @@\n \n     InetSocketAddress workerAddress = BlockWorkerUtils.getWorkerAddress(mCustomPropsTachyonConf);\n     Assert.assertNotNull(workerAddress);\n-    Assert.assertEquals(workerAddress, new InetSocketAddress(defaultHostname, 10001));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, 10001), workerAddress);\n \n     workerAddress = BlockWorkerUtils.getWorkerAddress(mNullTachyonConf);\n     Assert.assertNotNull(workerAddress);\n-    Assert.assertEquals(workerAddress, new InetSocketAddress(defaultHostname, defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, defaultPort), workerAddress);\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 76,
        "bugNodeStartChar": 3036,
        "bugNodeLength": 81,
        "fixLineNum": 76,
        "fixNodeStartChar": 3036,
        "fixNodeLength": 81,
        "sourceBeforeFix": "Assert.assertEquals(masterAddress,new InetSocketAddress(\"RemoteMaster1\",10000))",
        "sourceAfterFix": "Assert.assertEquals(new InetSocketAddress(\"RemoteMaster1\",10000),masterAddress)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f78f74f5a2cf1f73f974487816f998a6e37a9cf1",
        "fixCommitParentSHA1": "f6baae0bcbd712ac642db6d84dab026470d36f1c",
        "bugFilePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java",
        "fixPatch": "diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\nindex e7ab873..5c1a557 100644\n--- a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n@@ -352,7 +352,7 @@\n   }\n \n   void writeWindowUpdateLater(final int streamId, final long unacknowledgedBytesRead) {\n-    executor.submit(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n+    executor.execute(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           frameWriter.windowUpdate(streamId, unacknowledgedBytesRead);\n@@ -384,7 +384,7 @@\n \n   private void writePingLater(\n       final boolean reply, final int payload1, final int payload2, final Ping ping) {\n-    executor.submit(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n+    executor.execute(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n         hostName, payload1, payload2) {\n       @Override public void execute() {\n         try {\n@@ -636,7 +636,7 @@\n               inFinished, headerBlock);\n           lastGoodStreamId = streamId;\n           streams.put(streamId, newStream);\n-          executor.submit(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n+          executor.execute(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n             @Override public void execute() {\n               try {\n                 handler.receive(newStream);\n@@ -704,7 +704,7 @@\n     }\n \n     private void ackSettingsLater(final Settings peerSettings) {\n-      executor.submit(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n+      executor.execute(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n         @Override public void execute() {\n           try {\n             frameWriter.ackSettings(peerSettings);\n@@ -798,7 +798,7 @@\n       }\n       currentPushRequests.add(streamId);\n     }\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onRequest(streamId, requestHeaders);\n         try {\n@@ -816,7 +816,7 @@\n \n   private void pushHeadersLater(final int streamId, final List<Header> requestHeaders,\n       final boolean inFinished) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onHeaders(streamId, requestHeaders, inFinished);\n         try {\n@@ -842,7 +842,7 @@\n     source.require(byteCount); // Eagerly read the frame before firing client thread.\n     source.read(buffer, byteCount);\n     if (buffer.size() != byteCount) throw new IOException(buffer.size() + \" != \" + byteCount);\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           boolean cancel = pushObserver.onData(streamId, buffer, byteCount, inFinished);\n@@ -859,7 +859,7 @@\n   }\n \n   private void pushResetLater(final int streamId, final ErrorCode errorCode) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         pushObserver.onReset(streamId, errorCode);\n         synchronized (SpdyConnection.this) {\n",
        "projectName": "square.okhttp",
        "bugLineNum": 845,
        "bugNodeStartChar": 29074,
        "bugNodeLength": 532,
        "fixLineNum": 845,
        "fixNodeStartChar": 29074,
        "fixNodeLength": 533,
        "sourceBeforeFix": "pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Data[%s]\",hostName,streamId){   @Override public void execute(){     try {       boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished);       if (cancel)       frameWriter.rstStream(streamId,ErrorCode.CANCEL);       if (cancel || inFinished) { synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )",
        "sourceAfterFix": "pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Data[%s]\",hostName,streamId){   @Override public void execute(){     try {       boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished);       if (cancel)       frameWriter.rstStream(streamId,ErrorCode.CANCEL);       if (cancel || inFinished) { synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "92efd947a2a65d8aca99acd968fa4387a0f35f1d",
        "fixCommitParentSHA1": "6728119c4c942cb84b421ddd3997c5c6c285839d",
        "bugFilePath": "testsuite/domain/src/test/java/org/jboss/as/test/integration/respawn/RespawnTestCase.java",
        "fixPatch": "diff --git a/testsuite/domain/src/test/java/org/jboss/as/test/integration/respawn/RespawnTestCase.java b/testsuite/domain/src/test/java/org/jboss/as/test/integration/respawn/RespawnTestCase.java\nindex 5dc6a87..b6225de 100644\n--- a/testsuite/domain/src/test/java/org/jboss/as/test/integration/respawn/RespawnTestCase.java\n+++ b/testsuite/domain/src/test/java/org/jboss/as/test/integration/respawn/RespawnTestCase.java\n@@ -78,7 +78,7 @@\n  */\n public class RespawnTestCase {\n \n-    private static final int TIMEOUT = 15000;\n+    private static final int TIMEOUT = 30000;\n     private static final String HOST_CONTROLLER = \"host-controller\";\n     private static final String PROCESS_CONTROLLER = \"process\";\n     private static final String SERVER_ONE = \"respawn-one\";\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 81,
        "bugNodeStartChar": 3602,
        "bugNodeLength": 15,
        "fixLineNum": 81,
        "fixNodeStartChar": 3602,
        "fixNodeLength": 15,
        "sourceBeforeFix": "TIMEOUT=15000",
        "sourceAfterFix": "TIMEOUT=30000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7aea38118e7af7d2c5e1ce54ca135b8c0261a2df",
        "fixCommitParentSHA1": "8a8b7de760a33c8195e287975d5b4a337d71b1fa",
        "bugFilePath": "hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java",
        "fixPatch": "diff --git a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java\nindex 4465332..27d5437 100644\n--- a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java\n+++ b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceImpl.java\n@@ -242,7 +242,7 @@\n           .addCounter(Interns.info(MOB_FILE_CACHE_ACCESS_COUNT, MOB_FILE_CACHE_ACCESS_COUNT_DESC),\n               rsWrap.getMobFileCacheAccessCount())\n           .addCounter(Interns.info(MOB_FILE_CACHE_MISS_COUNT, MOB_FILE_CACHE_MISS_COUNT_DESC),\n-              rsWrap.getMobFileCacheAccessCount())\n+              rsWrap.getMobFileCacheMissCount())\n           .addCounter(\n               Interns.info(MOB_FILE_CACHE_EVICTED_COUNT, MOB_FILE_CACHE_EVICTED_COUNT_DESC),\n               rsWrap.getMobFileCacheEvictedCount())\n",
        "projectName": "apache.hbase",
        "bugLineNum": 245,
        "bugNodeStartChar": 11209,
        "bugNodeLength": 35,
        "fixLineNum": 245,
        "fixNodeStartChar": 11209,
        "fixNodeLength": 33,
        "sourceBeforeFix": "rsWrap.getMobFileCacheAccessCount()",
        "sourceAfterFix": "rsWrap.getMobFileCacheMissCount()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6a6e67b3003df3da728a2366f951b7efe857a6e7",
        "fixCommitParentSHA1": "8a8669f6190a306b48030c5453adb57286660b20",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTest.java b/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTest.java\nindex db12ca4..d462ab3 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTest.java\n@@ -27,7 +27,7 @@\n \n     public void testRecipientListParallel() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedBodiesReceived(\"c\", \"b\", \"a\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"c\", \"b\", \"a\");\n \n         template.sendBodyAndHeader(\"direct:start\", \"Hello World\", \"foo\", \"direct:a,direct:b,direct:c\");\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 30,
        "bugNodeStartChar": 1216,
        "bugNodeLength": 42,
        "fixLineNum": 30,
        "fixNodeStartChar": 1216,
        "fixNodeLength": 52,
        "sourceBeforeFix": "mock.expectedBodiesReceived(\"c\",\"b\",\"a\")",
        "sourceAfterFix": "mock.expectedBodiesReceivedInAnyOrder(\"c\",\"b\",\"a\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1ff20529a2099ff20a8d6af0751ee410541c770f",
        "fixCommitParentSHA1": "13f4d0816620fa0d07ae852c163a873ea9fea7a1",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\nindex 073d4e4..172009a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n@@ -49,7 +49,7 @@\n     @Parameters(name = \"precision:{0}, errorRange:{1}\")\n     public static Collection<Object[]> parameters() {\n         return asList(new Object[][]{\n-                {11, 6.5f},\n+                {11, 7.0f},\n                 {12, 5.5f},\n                 {13, 3.5f},\n                 {14, 3.0f},\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 52,
        "bugNodeStartChar": 1906,
        "bugNodeLength": 10,
        "fixLineNum": 52,
        "fixNodeStartChar": 1906,
        "fixNodeLength": 10,
        "sourceBeforeFix": "{11,6.5f}",
        "sourceAfterFix": "{11,7.0f}"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bafb1f877934f826d5f74f9f33e824dd1aa30432",
        "fixCommitParentSHA1": "fdfbb0ca84342d5b4f328e1f9a3bfb2058552145",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\nindex bd9ea17..e1627c3 100644\n--- a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n+++ b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n@@ -50,7 +50,7 @@\n         return getOutputFactory().createXMLEventWriter(out, IOConverter.getCharsetName(exchange));\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventWriter createXMLEventWriter(OutputStream out) throws XMLStreamException {\n         return getOutputFactory().createXMLEventWriter(out);\n     }\n@@ -65,7 +65,7 @@\n         return getOutputFactory().createXMLEventWriter(result);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLStreamWriter createXMLStreamWriter(OutputStream outputStream) throws XMLStreamException {\n         return getOutputFactory().createXMLStreamWriter(outputStream);\n     }\n@@ -85,7 +85,7 @@\n         return getOutputFactory().createXMLStreamWriter(result);\n     }\n \n-    @Converter\n+    @Deprecated\n     public XMLStreamReader createXMLStreamReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLStreamReader(in);\n     }\n@@ -105,7 +105,7 @@\n         return getInputFactory().createXMLStreamReader(in);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventReader createXMLEventReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLEventReader(in);\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 108,
        "bugNodeStartChar": 3956,
        "bugNodeLength": 10,
        "fixLineNum": 108,
        "fixNodeStartChar": 3956,
        "fixNodeLength": 11,
        "sourceBeforeFix": "@Converter",
        "sourceAfterFix": "@Deprecated"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\nindex 72e8341..87fa26f 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1977,
        "bugNodeStartChar": 88401,
        "bugNodeLength": 22,
        "fixLineNum": 1977,
        "fixNodeStartChar": 88401,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(561)",
        "sourceAfterFix": "new StringBuilder(560)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d8d9e5711a908603f73f92872b127fe4d7ab4a15",
        "fixCommitParentSHA1": "cd6414e41c13cab60abb983a480dd9be2e7c389a",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/ManagedNonManagedServiceTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/ManagedNonManagedServiceTest.java b/camel-core/src/test/java/org/apache/camel/management/ManagedNonManagedServiceTest.java\nindex a2ed6ed..c3fcaad 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/ManagedNonManagedServiceTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/ManagedNonManagedServiceTest.java\n@@ -48,7 +48,7 @@\n         MBeanServer mbeanServer = getMBeanServer();\n \n         Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n-        assertEquals(9, set.size());\n+        assertEquals(10, set.size());\n     }\n \n     public void testNonManagedService() throws Exception {\n@@ -69,7 +69,7 @@\n         MBeanServer mbeanServer = getMBeanServer();\n \n         Set<ObjectName> set = mbeanServer.queryNames(new ObjectName(\"*:type=services,*\"), null);\n-        assertEquals(8, set.size());\n+        assertEquals(9, set.size());\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 51,
        "bugNodeStartChar": 1949,
        "bugNodeLength": 27,
        "fixLineNum": 51,
        "fixNodeStartChar": 1949,
        "fixNodeLength": 28,
        "sourceBeforeFix": "assertEquals(9,set.size())",
        "sourceAfterFix": "assertEquals(10,set.size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "bd79617dcf4a6de30069484736cb556705d1ca8f",
        "fixCommitParentSHA1": "472c863b70dd013280b86ec4ffd87744607d99c2",
        "bugFilePath": "src/main/java/redis/clients/jedis/BinaryJedisCluster.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/BinaryJedisCluster.java b/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\nindex d4141b5..706291f 100644\n--- a/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\n+++ b/src/main/java/redis/clients/jedis/BinaryJedisCluster.java\n@@ -1188,7 +1188,7 @@\n     return new JedisClusterCommand<Set<byte[]>>(connectionHandler, maxRedirections) {\n       @Override\n       public Set<byte[]> execute(Jedis connection) {\n-        return connection.zrangeByLex(key, max, min);\n+        return connection.zrevrangeByLex(key, max, min);\n       }\n     }.runBinary(key);\n   }\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 1191,
        "bugNodeStartChar": 37896,
        "bugNodeLength": 37,
        "fixLineNum": 1191,
        "fixNodeStartChar": 37896,
        "fixNodeLength": 40,
        "sourceBeforeFix": "connection.zrangeByLex(key,max,min)",
        "sourceAfterFix": "connection.zrevrangeByLex(key,max,min)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "79946366e1ab141ef2b595e0079dcac7b913da2b",
        "fixCommitParentSHA1": "840e7143a58542da18227e443df935e1ea429fc9",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\nindex a729bab..80827df 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n@@ -76,7 +76,8 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n     }\n \n     @Test\n@@ -87,7 +88,9 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -99,7 +102,8 @@\n         };\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -108,7 +112,8 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig, getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -117,7 +122,9 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -127,7 +134,8 @@\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 102,
        "bugNodeStartChar": 3972,
        "bugNodeLength": 64,
        "fixLineNum": 102,
        "fixNodeStartChar": 3972,
        "fixNodeLength": 77,
        "sourceBeforeFix": "getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")",
        "sourceAfterFix": "getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d57bfb94a942885fce3d93f7cfc8f49191762d5f",
        "fixCommitParentSHA1": "96c789aaab40588f7831afb12162324b91c0c577",
        "bugFilePath": "src/main/java/redis/clients/jedis/Jedis.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/Jedis.java b/src/main/java/redis/clients/jedis/Jedis.java\nindex 4780e6c..9aabda0 100644\n--- a/src/main/java/redis/clients/jedis/Jedis.java\n+++ b/src/main/java/redis/clients/jedis/Jedis.java\n@@ -3072,7 +3072,7 @@\n     public String clientSetname(final String name) {\n     \tcheckIsInMulti();\n     \tclient.clientSetname(name);\n-    \treturn client.getBulkReply();\n+    \treturn client.getStatusCodeReply();\n     }\n     \n     public String migrate(final String host, final int port, final String key, final int destinationDb, final int timeout) {\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 3075,
        "bugNodeStartChar": 107266,
        "bugNodeLength": 21,
        "fixLineNum": 3075,
        "fixNodeStartChar": 107266,
        "fixNodeLength": 27,
        "sourceBeforeFix": "client.getBulkReply()",
        "sourceAfterFix": "client.getStatusCodeReply()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "01d18f2c3db799d144cc8e3308da3fb2ade19417",
        "fixCommitParentSHA1": "2f6370343200faec3de904a5cf2e39345acb33e7",
        "bugFilePath": "guava/src/com/google/common/util/concurrent/Striped.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/util/concurrent/Striped.java b/guava/src/com/google/common/util/concurrent/Striped.java\nindex cd43294..36fa929 100644\n--- a/guava/src/com/google/common/util/concurrent/Striped.java\n+++ b/guava/src/com/google/common/util/concurrent/Striped.java\n@@ -321,9 +321,9 @@\n     private final Lock delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeLock(Lock delegate, Object strongReference) {\n+    WeakSafeLock(Lock delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n@@ -344,9 +344,9 @@\n     private final Condition delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeCondition(Condition delegate, Object strongReference) {\n+    WeakSafeCondition(Condition delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n",
        "projectName": "google.guava",
        "bugLineNum": 323,
        "bugNodeStartChar": 13165,
        "bugNodeLength": 69,
        "fixLineNum": 323,
        "fixNodeStartChar": 13165,
        "fixNodeLength": 84,
        "sourceBeforeFix": "@SuppressWarnings(\"unused\") private final Object strongReference; ",
        "sourceAfterFix": "@SuppressWarnings(\"unused\") private final WeakSafeReadWriteLock strongReference; "
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "0a7e90fe8e5edd548432677f8fbf3e6d1888961d",
        "fixCommitParentSHA1": "9ef75603ce1edf335c198a6299fd86cdd8f48fcb",
        "bugFilePath": "runtime/Java/src/org/antlr/v4/runtime/CommonTokenStream.java",
        "fixPatch": "diff --git a/runtime/Java/src/org/antlr/v4/runtime/CommonTokenStream.java b/runtime/Java/src/org/antlr/v4/runtime/CommonTokenStream.java\nindex a510bc4..fd6a8eb 100644\n--- a/runtime/Java/src/org/antlr/v4/runtime/CommonTokenStream.java\n+++ b/runtime/Java/src/org/antlr/v4/runtime/CommonTokenStream.java\n@@ -77,7 +77,7 @@\n         int i = p;\n         int n = 1;\n         // find k good tokens looking backwards\n-        while ( n<=k ) {\n+        while ( n<=k && i>0 ) {\n             // skip off-channel tokens\n             i = previousTokenOnChannel(i - 1, channel);\n             n++;\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 80,
        "bugNodeStartChar": 2703,
        "bugNodeLength": 4,
        "fixLineNum": 80,
        "fixNodeStartChar": 2703,
        "fixNodeLength": 11,
        "sourceBeforeFix": "n <= k",
        "sourceAfterFix": "n <= k && i > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "595fada2ff221b76c33da09b327973ed6a17ad2d",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 90,
        "bugNodeStartChar": 2429,
        "bugNodeLength": 43,
        "fixLineNum": 90,
        "fixNodeStartChar": 2429,
        "fixNodeLength": 50,
        "sourceBeforeFix": "this.thrown.equals(\"File must not be null\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must not be null\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "67e8cb0706ece341bb993ab1f0364d5a904a716c",
        "fixCommitParentSHA1": "323f1d590f403e72531c84643e54c0b8ed870fec",
        "bugFilePath": "servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java b/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\nindex 7061cb6..cecbef8 100644\n--- a/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\n+++ b/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\n@@ -35,7 +35,7 @@\n     mWorkerId = workerId;\n     mFileId = fileId;\n     mLength = length;\n-    mCheckpointPath = checkpointPath.getPath();\n+    mCheckpointPath = checkpointPath.toString();\n     mOpTimeMs = opTimeMs;\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 38,
        "bugNodeStartChar": 1448,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1448,
        "fixNodeLength": 25,
        "sourceBeforeFix": "checkpointPath.getPath()",
        "sourceAfterFix": "checkpointPath.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "15ca69b22b2bcdde426fa8e806c7748f2dfe22fe",
        "fixCommitParentSHA1": "743138e410228c29862624b548e02d019579a4f0",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\nindex 0cbbb78..9ea9c8d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/ExchangeOperator.java\n@@ -185,7 +185,7 @@\n \n             int neededPages = maxBufferedPages - bufferedPages;\n             int clientCount = (int) ((1.0 * neededPages / expectedPagesPerRequest) * concurrentRequestMultiplier);\n-            clientCount = Math.min(clientCount, 1);\n+            clientCount = Math.max(clientCount, 1);\n \n             int pendingClients = allClients.size() - queuedClients.size() - completedClients.size();\n             clientCount -= pendingClients;\n",
        "projectName": "facebook.presto",
        "bugLineNum": 188,
        "bugNodeStartChar": 7163,
        "bugNodeLength": 24,
        "fixLineNum": 188,
        "fixNodeStartChar": 7163,
        "fixNodeLength": 24,
        "sourceBeforeFix": "Math.min(clientCount,1)",
        "sourceAfterFix": "Math.max(clientCount,1)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "469c7f4b816a3fb7952e7ce9ebdf5aa6f4c15346",
        "fixCommitParentSHA1": "7a4a550234873f589a42618547ab73bf0b8cadd6",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/DelegatingAddressPicker.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/DelegatingAddressPicker.java b/hazelcast/src/main/java/com/hazelcast/instance/DelegatingAddressPicker.java\nindex 3b4f8da..8fc8d8e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/DelegatingAddressPicker.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/DelegatingAddressPicker.java\n@@ -60,7 +60,7 @@\n     public void pickAddress() throws Exception {\n         try {\n             bindAddress = memberAddressProvider.getBindAddress();\n-            logger.info(\"Using bind address: \" + publicAddress);\n+            logger.info(\"Using bind address: \" + bindAddress);\n \n             publicAddress = memberAddressProvider.getPublicAddress();\n             validatePublicAddress(publicAddress);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 63,
        "bugNodeStartChar": 2318,
        "bugNodeLength": 38,
        "fixLineNum": 63,
        "fixNodeStartChar": 2318,
        "fixNodeLength": 36,
        "sourceBeforeFix": "\"Using bind address: \" + publicAddress",
        "sourceAfterFix": "\"Using bind address: \" + bindAddress"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "2477b255ffe38f6ad5eb2bc1fa94f8db66c0fbc3",
        "fixCommitParentSHA1": "90369ceb3e091d516aa2957e6276dbd2da1eb483",
        "bugFilePath": "jta/user-transaction/src/test/java/org/javaee7/jta/UserTransactionTest.java",
        "fixPatch": "diff --git a/jta/user-transaction/src/test/java/org/javaee7/jta/UserTransactionTest.java b/jta/user-transaction/src/test/java/org/javaee7/jta/UserTransactionTest.java\nindex 41fb57e..a0cf1b2 100644\n--- a/jta/user-transaction/src/test/java/org/javaee7/jta/UserTransactionTest.java\n+++ b/jta/user-transaction/src/test/java/org/javaee7/jta/UserTransactionTest.java\n@@ -23,8 +23,7 @@\n     @Deployment\n     public static Archive<?> deploy() {\n         return ShrinkWrap.create(JavaArchive.class)\n-                         .addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\");\n-        // WF 8.0.0.Beta1 needs the beans.xml file. Shouldn't be the case with JavaEE 7\n+                         .addAsManifestResource(\"beans.xml\");\n     }\n \n     @Inject UserTransaction ut;\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 25,
        "bugNodeStartChar": 699,
        "bugNodeLength": 118,
        "fixLineNum": 25,
        "fixNodeStartChar": 699,
        "fixNodeLength": 97,
        "sourceBeforeFix": "ShrinkWrap.create(JavaArchive.class).addAsManifestResource(EmptyAsset.INSTANCE,\"beans.xml\")",
        "sourceAfterFix": "ShrinkWrap.create(JavaArchive.class).addAsManifestResource(\"beans.xml\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "93b1b656013a941b03c51936ea2c95cd7952fbc5",
        "fixCommitParentSHA1": "47bcf3ebe7067e86846057cbca2466d7349b0d98",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java b/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\nindex 89ef028..8653010 100644\n--- a/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\n+++ b/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\n@@ -103,6 +103,6 @@\n     }\n     \n     private IBatchBolt newTransactionalBolt() {\n-        return Utils.deserialize(_boltSer, IBatchBolt.class);\n+        return Utils.javaDeserialize(_boltSer, IBatchBolt.class);\n     }\n }\n",
        "projectName": "apache.storm",
        "bugLineNum": 106,
        "bugNodeStartChar": 3540,
        "bugNodeLength": 45,
        "fixLineNum": 106,
        "fixNodeStartChar": 3540,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Utils.deserialize(_boltSer,IBatchBolt.class)",
        "sourceAfterFix": "Utils.javaDeserialize(_boltSer,IBatchBolt.class)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
        "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 86,
        "bugNodeStartChar": 5050,
        "bugNodeLength": 33,
        "fixLineNum": 86,
        "fixNodeStartChar": 5050,
        "fixNodeLength": 39,
        "sourceBeforeFix": "deletionRetentionStrategy == null",
        "sourceAfterFix": "deletionRetentionStrategyConfig == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6e5b82f6f987d5dee5e5dba4dfbf3e3873f5a777",
        "fixCommitParentSHA1": "58cc1a5de11a664037ece5cd51d85b296cfc6e7b",
        "bugFilePath": "src/main/java/org/apache/ibatis/executor/BaseExecutor.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\nindex 68586fe..839a0d0 100644\n--- a/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n+++ b/src/main/java/org/apache/ibatis/executor/BaseExecutor.java\n@@ -79,7 +79,7 @@\n       }\n     } catch (SQLException e) {\n       // Ignore.  There's nothing that can be done at this point.\n-      log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e);\n+      log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e);\n     } finally {\n       transaction = null;\n       deferredLoads = null;\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 82,
        "bugNodeStartChar": 3047,
        "bugNodeLength": 70,
        "fixLineNum": 82,
        "fixNodeStartChar": 3047,
        "fixNodeLength": 69,
        "sourceBeforeFix": "log.debug(\"Unexpected exception on closing transaction.  Cause: \" + e)",
        "sourceAfterFix": "log.warn(\"Unexpected exception on closing transaction.  Cause: \" + e)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0adf369fda5c2d4231881d66e3bc0bd12fb86c9a",
        "fixCommitParentSHA1": "efbd23012372ae763f661549a45985ace88488a5",
        "bugFilePath": "src/edu/stanford/nlp/examples/BasicPipelineExample.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/examples/BasicPipelineExample.java b/src/edu/stanford/nlp/examples/BasicPipelineExample.java\nindex f590e02..d1a87b4 100644\n--- a/src/edu/stanford/nlp/examples/BasicPipelineExample.java\n+++ b/src/edu/stanford/nlp/examples/BasicPipelineExample.java\n@@ -34,7 +34,7 @@\n     // examples\n \n     // 10th token of the document\n-    CoreLabel token = document.tokens().get(10);\n+    CoreLabel token = document.tokens().get(9);\n     System.out.println(\"Example: token\");\n     System.out.println(token);\n     System.out.println();\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 37,
        "bugNodeStartChar": 1462,
        "bugNodeLength": 25,
        "fixLineNum": 37,
        "fixNodeStartChar": 1462,
        "fixNodeLength": 24,
        "sourceBeforeFix": "document.tokens().get(10)",
        "sourceAfterFix": "document.tokens().get(9)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d2314c583d3463e3fa020e9d42aecf91b55c582c",
        "fixCommitParentSHA1": "62497eb64fdf8a92fe09c0165886c260cd1f488c",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\nindex efe0721..e289ad5 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java\n@@ -526,7 +526,7 @@\n \n   private void setTrackingUrlToRMAppPage() {\n     originalTrackingUrl = pjoin(\n-        WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf),\n+        WebAppUtils.getResolvedRMWebAppURLWithScheme(conf),\n         \"cluster\", \"app\", getAppAttemptId().getApplicationId());\n     proxiedTrackingUrl = originalTrackingUrl;\n   }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 529,
        "bugNodeStartChar": 23719,
        "bugNodeLength": 53,
        "fixLineNum": 529,
        "fixNodeStartChar": 23719,
        "fixNodeLength": 50,
        "sourceBeforeFix": "WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf)",
        "sourceAfterFix": "WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "ed6478e736bf181ca05f5ee9a88be25de7474847",
        "fixCommitParentSHA1": "1c4cc5202b210c1f96d6d55ad1f2812b44a5b86b",
        "bugFilePath": "undertow/src/main/java/org/wildfly/extension/undertow/UndertowSubsystemParser_1_1.java",
        "fixPatch": "diff --git a/undertow/src/main/java/org/wildfly/extension/undertow/UndertowSubsystemParser_1_1.java b/undertow/src/main/java/org/wildfly/extension/undertow/UndertowSubsystemParser_1_1.java\nindex 620bac9..84020b8 100644\n--- a/undertow/src/main/java/org/wildfly/extension/undertow/UndertowSubsystemParser_1_1.java\n+++ b/undertow/src/main/java/org/wildfly/extension/undertow/UndertowSubsystemParser_1_1.java\n@@ -113,7 +113,7 @@\n                                                     .addAttributes(FilterRefDefinition.PREDICATE)\n                                         ).addChild(\n                                                 builder(SingleSignOnDefinition.INSTANCE)\n-                                                    .addAttributes(SingleSignOnDefinition.DOMAIN, SingleSignOnDefinition.PATH, SingleSignOnDefinition.HTTP_ONLY, SingleSignOnDefinition.SECURE)\n+                                                    .addAttributes(SingleSignOnDefinition.DOMAIN, SingleSignOnDefinition.PATH, SingleSignOnDefinition.HTTP_ONLY, SingleSignOnDefinition.SECURE, SingleSignOnDefinition.COOKIE_NAME)\n                                         )\n                         )\n                 )\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 115,
        "bugNodeStartChar": 9780,
        "bugNodeLength": 232,
        "fixLineNum": 115,
        "fixNodeStartChar": 9780,
        "fixNodeLength": 268,
        "sourceBeforeFix": "builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE)",
        "sourceAfterFix": "builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "85081893d8afd856a9a9e10d5f99255d45bce79a",
        "fixCommitParentSHA1": "daaaaa485920ffbda3766bf7a1f702b2280b24fc",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\nindex 9e241e9..494bd6d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n@@ -383,7 +383,7 @@\n \n         if (store != null) {\n             store.deleteAll(keysObject);\n-            toBeRemovedKeys.clear();\n+            toBeRemovedKeys.removeAll(keysToDelete);\n         }\n \n         clearRecordsMap(lockedRecords);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 386,
        "bugNodeStartChar": 14263,
        "bugNodeLength": 23,
        "fixLineNum": 386,
        "fixNodeStartChar": 14263,
        "fixNodeLength": 39,
        "sourceBeforeFix": "toBeRemovedKeys.clear()",
        "sourceAfterFix": "toBeRemovedKeys.removeAll(keysToDelete)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c5ccaee5065a52110a4124505002d6afeb7c13ca",
        "fixCommitParentSHA1": "a54217053f54e06a6f2f8f89709b1568e5d00827",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\nindex a5f1705..32d981c 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n@@ -1186,18 +1186,19 @@\n     private String readLineStandard() throws NotEnoughDataDecoderException {\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (undecodedChunk.readable()) {\n                 byte nextByte = undecodedChunk.readByte();\n                 if (nextByte == HttpConstants.CR) {\n                     nextByte = undecodedChunk.readByte();\n                     if (nextByte == HttpConstants.LF) {\n-                        return sb.toString();\n+                        return line.toString(charset);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n@@ -1225,7 +1226,8 @@\n         }\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (sao.pos < sao.limit) {\n                 byte nextByte = sao.bytes[sao.pos++];\n                 if (nextByte == HttpConstants.CR) {\n@@ -1233,16 +1235,16 @@\n                         nextByte = sao.bytes[sao.pos++];\n                         if (nextByte == HttpConstants.LF) {\n                             sao.setReadPosition(0);\n-                            return sb.toString();\n+                            return line.toString(charset);\n                         }\n                     } else {\n-                        sb.append((char) nextByte);\n+                        line.writeByte(nextByte);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n                     sao.setReadPosition(0);\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 1236,
        "bugNodeStartChar": 50639,
        "bugNodeLength": 13,
        "fixLineNum": 1236,
        "fixNodeStartChar": 50639,
        "fixNodeLength": 22,
        "sourceBeforeFix": "sb.toString()",
        "sourceAfterFix": "line.toString(charset)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "eec0eb1b562479c66cd8505be1901872be4475ec",
        "fixCommitParentSHA1": "c916e20c5c6ce08740f20f281aef497c7339c6dd",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\nindex 3735bc7..b7c8255 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JavassistClass.java\n@@ -525,7 +525,7 @@\n \n     @Override\n     public int addGroupedInterceptor(MethodFilter filter, String interceptorClassName, InterceptorGroup group, ExecutionPolicy executionPolicy) throws InstrumentException {\n-        return addGroupedInterceptor(filter, interceptorClassName, group, executionPolicy);\n+        return addGroupedInterceptor(filter, interceptorClassName, null, group, executionPolicy);\n     }\n \n     @Override\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 528,
        "bugNodeStartChar": 22370,
        "bugNodeLength": 75,
        "fixLineNum": 528,
        "fixNodeStartChar": 22370,
        "fixNodeLength": 81,
        "sourceBeforeFix": "addGroupedInterceptor(filter,interceptorClassName,group,executionPolicy)",
        "sourceAfterFix": "addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2a4442771eee1cc9e857f6999b3ead8e7cc43fd4",
        "fixCommitParentSHA1": "bccfa52d8df8eb135fdeb5bbcfbfa7d68f078a39",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex 8e1bf22..6e77c75 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -137,7 +137,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.error(\"Error while closing command context\", exception);\n+              log.debug(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 140,
        "bugNodeStartChar": 6484,
        "bugNodeLength": 59,
        "fixLineNum": 140,
        "fixNodeStartChar": 6484,
        "fixNodeLength": 59,
        "sourceBeforeFix": "log.error(\"Error while closing command context\",exception)",
        "sourceAfterFix": "log.debug(\"Error while closing command context\",exception)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "53b0527a5dd35cd2e36650a6352b882cc32f714f",
        "fixCommitParentSHA1": "1ddddec0180252872f3ef595b69745ba253ac800",
        "bugFilePath": "src/java/org/apache/hadoop/hbase/regionserver/HRegion.java",
        "fixPatch": "diff --git a/src/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/src/java/org/apache/hadoop/hbase/regionserver/HRegion.java\nindex f985ef8..51e4612 100644\n--- a/src/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n+++ b/src/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n@@ -1199,7 +1199,7 @@\n    * @throws IOException\n    */\n   public void put(Put put) throws IOException {\n-    this.put(put, null, put.writeToWAL());\n+    this.put(put, null, put.getWriteToWAL());\n   }\n   \n   /**\n@@ -1217,7 +1217,7 @@\n    * @throws IOException\n    */\n   public void put(Put put, Integer lockid) throws IOException {\n-    this.put(put, lockid, put.writeToWAL());\n+    this.put(put, lockid, put.getWriteToWAL());\n   }\n \n   /**\n",
        "projectName": "apache.hbase",
        "bugLineNum": 1220,
        "bugNodeStartChar": 42992,
        "bugNodeLength": 16,
        "fixLineNum": 1220,
        "fixNodeStartChar": 42992,
        "fixNodeLength": 19,
        "sourceBeforeFix": "put.writeToWAL()",
        "sourceAfterFix": "put.getWriteToWAL()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8368e79de7092308557d39acadd54283c2c8d220",
        "fixCommitParentSHA1": "a5d2dc8187b9fd7b9b62ebf78f8c7de77f0193cf",
        "bugFilePath": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AOutputStream.java",
        "fixPatch": "diff --git a/underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AOutputStream.java b/underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AOutputStream.java\nindex 72fa3fa..f1cff5b 100644\n--- a/underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AOutputStream.java\n+++ b/underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AOutputStream.java\n@@ -142,7 +142,7 @@\n         meta.setContentMD5(new String(Base64.encode(mHash.digest())));\n       }\n       meta.setContentLength(mFile.length());\n-      meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM);\n+      meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM);\n \n       // Generate the put request and wait for the transfer manager to complete the upload, then\n       // delete the temporary file on the local machine\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 145,
        "bugNodeStartChar": 5198,
        "bugNodeLength": 56,
        "fixLineNum": 145,
        "fixNodeStartChar": 5198,
        "fixNodeLength": 52,
        "sourceBeforeFix": "meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM)",
        "sourceAfterFix": "meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "365fd641701665905bcb96589b94fada65a5227a",
        "fixCommitParentSHA1": "f65578c8909107a472b837af98d072827d67e6dc",
        "bugFilePath": "webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ServiceContainerEndpointRegistry.java",
        "fixPatch": "diff --git a/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ServiceContainerEndpointRegistry.java b/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ServiceContainerEndpointRegistry.java\nindex 179ebd5..f0bae70 100644\n--- a/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ServiceContainerEndpointRegistry.java\n+++ b/webservices/server-integration/src/main/java/org/jboss/as/webservices/util/ServiceContainerEndpointRegistry.java\n@@ -43,10 +43,10 @@\n         Set<ObjectName> endpoints = new CopyOnWriteArraySet<ObjectName>();\n         for (ServiceName sname : WSServices.getContainerRegistry().getServiceNames()) {\n             if (sname.getCanonicalName().startsWith(endpointPrefix)) {\n-                String contextPath = sname.getParent().getSimpleName().substring(9);\n+                String contextPath = sname.getParent().getSimpleName().substring(8);\n                 String endpointName = sname.getSimpleName();\n                 final StringBuilder name = new StringBuilder(Endpoint.SEPID_DOMAIN + \":\");\n-                name.append(Endpoint.SEPID_PROPERTY_CONTEXT + \"=\" + contextPath);\n+                name.append(Endpoint.SEPID_PROPERTY_CONTEXT + \"=\" + contextPath + \",\");\n                 name.append(Endpoint.SEPID_PROPERTY_ENDPOINT + \"=\" + endpointName);\n                 endpoints.add(ObjectNameFactory.create(name.toString()));\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 46,
        "bugNodeStartChar": 1980,
        "bugNodeLength": 46,
        "fixLineNum": 46,
        "fixNodeStartChar": 1980,
        "fixNodeLength": 46,
        "sourceBeforeFix": "sname.getParent().getSimpleName().substring(9)",
        "sourceAfterFix": "sname.getParent().getSimpleName().substring(8)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 209,
        "bugNodeStartChar": 8079,
        "bugNodeLength": 10,
        "fixLineNum": 209,
        "fixNodeStartChar": 8079,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15844",
        "sourceAfterFix": "id=10844"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "acb1b41805a108bf3b9052af416510b5b5f4636d",
        "fixCommitParentSHA1": "bcfba9fcab5a4cd297b0c4fc056cb9ae15406cf5",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\nindex 110ea49..cce1eaf 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n@@ -85,7 +85,7 @@\n     {\n         checkState(canAdd(page), \"page buffer is full\");\n         pages.add(page);\n-        usedMemoryBytes += page.getSizeInBytes();\n+        usedMemoryBytes += page.getRetainedSizeInBytes();\n         rowCount = addExact(rowCount, page.getPositionCount());\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 88,
        "bugNodeStartChar": 3108,
        "bugNodeLength": 21,
        "fixLineNum": 88,
        "fixNodeStartChar": 3108,
        "fixNodeLength": 29,
        "sourceBeforeFix": "page.getSizeInBytes()",
        "sourceAfterFix": "page.getRetainedSizeInBytes()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f40a8efd0788a6385a62ef5052f71f3e6b7db295",
        "fixCommitParentSHA1": "fcda34896499d9f0c29ea5f000aee28854bdbfe2",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex f3b83ab..2531881 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -224,7 +224,7 @@\n \r\n \t/** Divides this vector by the given vector */\r\n \tpublic Vector3 div (float vx, float vy, float vz) {\r\n-\t\treturn this.set(x/vx, y/vy, y/vz);\r\n+\t\treturn this.set(x/vx, y/vy, z/vz);\r\n \t}\r\n \r\n \t/** Divides this vector by the given vector */\r\n@@ -262,7 +262,7 @@\n \t * \r\n \t * @return This vector for chaining */\r\n \tpublic Vector3 nor () {\r\n-\t\tfloat len2 = this.len2();\r\n+\t\tfinal float len2 = this.len2();\r\n \t\tif (len2 == 0f || len2 == 1f)\r\n \t\t\treturn this;\r\n \t\treturn this.div((float)Math.sqrt(len2));\r\n@@ -392,9 +392,9 @@\n \t\tfinal float ty = target.y - y * dot;\r\n \t\tfinal float tz = target.z - z * dot;\r\n \t\tfinal float l2 = tx * tx + ty * ty + tz * tz;\r\n-\t\tfinal float dl = (l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2);\r\n+\t\tfinal float dl = st * ((l2 == 0 || l2 == 1f) ? 1f : 1f / (float)Math.sqrt(l2));\r\n \t\t\r\n-\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl * st, ty * dl * st, tz * dl * st).nor();\r\n+\t\treturn this.mul((float)Math.cos(theta)).add(tx * dl, ty * dl, tz * dl).nor();\r\n \t}\r\n \r\n \t/** {@inheritDoc} */\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 227,
        "bugNodeStartChar": 7425,
        "bugNodeLength": 4,
        "fixLineNum": 227,
        "fixNodeStartChar": 7199,
        "fixNodeLength": 4,
        "sourceBeforeFix": "y / vz",
        "sourceAfterFix": "z / vz"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0940ca6f4588c99837f551bd1bdf64dec5392a45",
        "fixCommitParentSHA1": "df0af78877bc0b6915add353dbeccfb835940771",
        "bugFilePath": "test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java b/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java\nindex 7154c06..b1c93da 100644\n--- a/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java\n+++ b/test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java\n@@ -1039,12 +1039,12 @@\n \n   public void testInvalidGoogBase14() {\n     testError(\"class Foo extends BaseFoo { constructor() { Foo.base(this); } }\",\n-        GOOG_BASE_CLASS_ERROR);\n+        BASE_CLASS_ERROR);\n   }\n \n   public void testInvalidGoogBase14b() {\n     testError(\"class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }\",\n-        GOOG_BASE_CLASS_ERROR);\n+        BASE_CLASS_ERROR);\n   }\n \n   public void testValidBase1() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1046,
        "bugNodeStartChar": 37387,
        "bugNodeLength": 112,
        "fixLineNum": 1046,
        "fixNodeStartChar": 37387,
        "fixNodeLength": 107,
        "sourceBeforeFix": "testError(\"class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }\",GOOG_BASE_CLASS_ERROR)",
        "sourceAfterFix": "testError(\"class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }\",BASE_CLASS_ERROR)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5d9193eb8fcb699722980d5e5680557553c3ee39",
        "fixCommitParentSHA1": "570e618706b2cf996bc054087d19142b169bab74",
        "bugFilePath": "components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java",
        "fixPatch": "diff --git a/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java b/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\nindex 1e1e3a8..c140753 100644\n--- a/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\n+++ b/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\n@@ -41,7 +41,7 @@\n     @Before\n     public void setup() throws Exception {\n         SimpleRegistry registry = new SimpleRegistry();\n-        registry.put(\"kinesisClient\", amazonKinesisClient);\n+        registry.bind(\"kinesisClient\", amazonKinesisClient);\n         camelContext = new DefaultCamelContext(registry);\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1633,
        "bugNodeLength": 50,
        "fixLineNum": 44,
        "fixNodeStartChar": 1633,
        "fixNodeLength": 51,
        "sourceBeforeFix": "registry.put(\"kinesisClient\",amazonKinesisClient)",
        "sourceAfterFix": "registry.bind(\"kinesisClient\",amazonKinesisClient)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "be46bcbdc1b71801e798e0d1ed0102fd1ff5d678",
        "fixCommitParentSHA1": "1a7d0eb20f0542c02477224ed05dc7586c913345",
        "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 205,
        "bugNodeStartChar": 6289,
        "bugNodeLength": 154,
        "fixLineNum": 205,
        "fixNodeStartChar": 6289,
        "fixNodeLength": 181,
        "sourceBeforeFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\")",
        "sourceAfterFix": "addKeys(externalClasses,DATE_TIME,\"org.joda.time.DateTime\",\"org.joda.time.ReadableDateTime\",\"javax.xml.datatype.XMLGregorianCalendar\",\"java.time.LocalDateTime\")"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "2ba203f659a7690bedf91a48e8d33e77a829a63f",
        "fixCommitParentSHA1": "b0731df6f0598d704ac8cd06a8bc8af41399bdf2",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\nindex bd57e95..01dc1a1 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java\n@@ -269,7 +269,7 @@\n     public Optional<Object> getInfo(ConnectorTableLayoutHandle layoutHandle)\n     {\n         HiveTableLayoutHandle tableLayoutHandle = checkType(layoutHandle, HiveTableLayoutHandle.class, \"layoutHandle\");\n-        if (!tableLayoutHandle.getPartitions().isPresent()) {\n+        if (tableLayoutHandle.getPartitions().isPresent()) {\n             return Optional.of(new HiveInputInfo(tableLayoutHandle.getPartitions().get().stream()\n                     .map(HivePartition::getPartitionId)\n                     .collect(Collectors.toList())));\n",
        "projectName": "facebook.presto",
        "bugLineNum": 272,
        "bugNodeStartChar": 14075,
        "bugNodeLength": 46,
        "fixLineNum": 272,
        "fixNodeStartChar": 14075,
        "fixNodeLength": 45,
        "sourceBeforeFix": "!tableLayoutHandle.getPartitions().isPresent()",
        "sourceAfterFix": "tableLayoutHandle.getPartitions().isPresent()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0fdbc8a43243c636f2d551e904c39f580ad69bf0",
        "fixCommitParentSHA1": "d8385279a3ad73e5402badfbf5cae27b4d312aa6",
        "bugFilePath": "modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java",
        "fixPatch": "diff --git a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\nindex ebf8114..ed39b9f 100644\n--- a/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n+++ b/modules/activiti5-test/src/test/java/org/activiti5/engine/test/bpmn/event/timer/compatibility/StartTimerEventRepeatCompatibilityTest.java\n@@ -88,7 +88,7 @@\n     // advance the clock after 9 days from starting the process ->\n     // the system will execute the pending job and will create a new one (day by day)\n     moveByMinutes(9 * 60 * 24);\n-    waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000, 200);\n+    executeJobExecutorForTime(10000, 200);\n     \n     // there must be a pending job because the endDate is not reached yet\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 91,
        "bugNodeStartChar": 3569,
        "bugNodeLength": 68,
        "fixLineNum": 91,
        "fixNodeStartChar": 3569,
        "fixNodeLength": 37,
        "sourceBeforeFix": "waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)",
        "sourceAfterFix": "executeJobExecutorForTime(10000,200)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "98dfe7e6b2c2d098a216c1bd60cf9deaa83098ef",
        "fixCommitParentSHA1": "d3b07f2c4fcc7a86781e885f0b502fe47af8423d",
        "bugFilePath": "src/main/java/redis/clients/jedis/JedisCluster.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/JedisCluster.java b/src/main/java/redis/clients/jedis/JedisCluster.java\nindex 7e9799f..7eed097 100644\n--- a/src/main/java/redis/clients/jedis/JedisCluster.java\n+++ b/src/main/java/redis/clients/jedis/JedisCluster.java\n@@ -1553,7 +1553,7 @@\n     new JedisClusterCommand<Integer>(connectionHandler, maxRedirections) {\n       @Override\n       public Integer execute(Jedis connection) {\n-        connection.subscribe(jedisPubSub, patterns);\n+        connection.psubscribe(jedisPubSub, patterns);\n         return 0;\n       }\n     }.runWithAnyNode();\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 1556,
        "bugNodeStartChar": 49343,
        "bugNodeLength": 43,
        "fixLineNum": 1556,
        "fixNodeStartChar": 49343,
        "fixNodeLength": 44,
        "sourceBeforeFix": "connection.subscribe(jedisPubSub,patterns)",
        "sourceAfterFix": "connection.psubscribe(jedisPubSub,patterns)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "0a526774d5a012e0f1cb1adef2a5e3d982e39395",
        "fixCommitParentSHA1": "8260a7975ccae12786bbcc1435f6880a28a97f2c",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/RexNodeConverter.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/RexNodeConverter.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/RexNodeConverter.java\nindex 9c929af..ee4f4ea 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/RexNodeConverter.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/RexNodeConverter.java\n@@ -455,7 +455,7 @@\n         // An alternative would be to throw CboSemanticException and fall back\n         // to no CBO.\n         RelDataType relType = cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,\n-            bd.scale(), unscaled.toString().length());\n+            unscaled.toString().length(), bd.scale());\n         calciteLiteral = rexBuilder.makeExactLiteral(bd, relType);\n       }\n       break;\n",
        "projectName": "apache.hive",
        "bugLineNum": 457,
        "bugNodeStartChar": 20262,
        "bugNodeLength": 113,
        "fixLineNum": 457,
        "fixNodeStartChar": 20262,
        "fixNodeLength": 113,
        "sourceBeforeFix": "cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length())",
        "sourceAfterFix": "cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "251bb1a73961f785ad12dbb3ae92830eca70b8cd",
        "fixCommitParentSHA1": "95b02e49ac914972ac27c35bcb3272f8ca3956a4",
        "bugFilePath": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java",
        "fixPatch": "diff --git a/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java\nindex 020f651..fcab02e 100644\n--- a/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java\n+++ b/transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java\n@@ -248,7 +248,7 @@\n     protected final ByteBuf newDirectBuffer(Object holder, ByteBuf buf) {\n         final int readableBytes = buf.readableBytes();\n         if (readableBytes == 0) {\n-            ReferenceCountUtil.safeRelease(holder);\n+            ReferenceCountUtil.release(holder);\n             return Unpooled.EMPTY_BUFFER;\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 251,
        "bugNodeStartChar": 9653,
        "bugNodeLength": 38,
        "fixLineNum": 251,
        "fixNodeStartChar": 9653,
        "fixNodeLength": 34,
        "sourceBeforeFix": "ReferenceCountUtil.safeRelease(holder)",
        "sourceAfterFix": "ReferenceCountUtil.release(holder)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "24690edd29ec6049f2456b3ec463d8d1ae0b1663",
        "fixCommitParentSHA1": "c76f2db729cd5eaa045ce793a93372c4508d3f67",
        "bugFilePath": "gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java",
        "fixPatch": "diff --git a/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java b/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\nindex 9fe598a..aa0cd64 100644\n--- a/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\n+++ b/gemfire/src/main/java/com/yahoo/ycsb/db/GemFireClient.java\n@@ -133,7 +133,7 @@\n     if (val != null) {\n       if (fields == null) {\n         for (String k : val.keySet()) {\n-          result.put(key, new ByteArrayByteIterator(val.get(key)));\n+          result.put(key, new ByteArrayByteIterator(val.get(k)));\n         }\n       } else {\n         for (String field : fields) {\n",
        "projectName": "brianfrankcooper.YCSB",
        "bugLineNum": 136,
        "bugNodeStartChar": 5285,
        "bugNodeLength": 12,
        "fixLineNum": 136,
        "fixNodeStartChar": 5285,
        "fixNodeLength": 10,
        "sourceBeforeFix": "val.get(key)",
        "sourceAfterFix": "val.get(k)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ecfa6bd1b16a9e2a5a80cf4dd3ff1146c48353c2",
        "fixCommitParentSHA1": "22c3296aa3fa12b453b7cd20e221d7ea9a305f5f",
        "bugFilePath": "processing/src/main/java/io/druid/query/topn/TopNNumericResultBuilder.java",
        "fixPatch": "diff --git a/processing/src/main/java/io/druid/query/topn/TopNNumericResultBuilder.java b/processing/src/main/java/io/druid/query/topn/TopNNumericResultBuilder.java\nindex a806c79..bfe142e 100644\n--- a/processing/src/main/java/io/druid/query/topn/TopNNumericResultBuilder.java\n+++ b/processing/src/main/java/io/druid/query/topn/TopNNumericResultBuilder.java\n@@ -76,7 +76,7 @@\n     }\n \n     for (PostAggregator postAgg : postAggs) {\n-      if (postAgg.getName().equals(metricName)) {\n+      if (postAgg.getName().equalsIgnoreCase(metricName)) {\n         metricValues.put(postAgg.getName(), postAgg.compute(metricValues));\n         break;\n       }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 79,
        "bugNodeStartChar": 2438,
        "bugNodeLength": 36,
        "fixLineNum": 79,
        "fixNodeStartChar": 2438,
        "fixNodeLength": 46,
        "sourceBeforeFix": "postAgg.getName().equals(metricName)",
        "sourceAfterFix": "postAgg.getName().equalsIgnoreCase(metricName)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "322fa14393f4ab34e22f0e3ad569afe12415ad1d",
        "fixCommitParentSHA1": "99e1c87ce21d2420a149abfa71a87ec8734c4d90",
        "bugFilePath": "bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java",
        "fixPatch": "diff --git a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\nindex 7e64485..790e2cd 100644\n--- a/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n+++ b/bootstrap/src/main/java/com/navercorp/pinpoint/bootstrap/interceptor/InterceptorRegistry.java\n@@ -13,7 +13,7 @@\n \r\n     public static final InterceptorRegistry REGISTRY = new InterceptorRegistry();\r\n \r\n-    private final static int DEFAULT_MAX = 1024;\r\n+    private final static int DEFAULT_MAX = 4096;\n     private final int max;\r\n \r\n     private final AtomicInteger id = new AtomicInteger(0);\r\n@@ -38,7 +38,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n@@ -56,7 +56,7 @@\n             return -1;\r\n         }\r\n         int newId = nextId();\r\n-        if (newId > max) {\r\n+        if (newId >= max) {\n             throw new IndexOutOfBoundsException(\"size=\" + index.length + \" id=\" + id);\r\n         }\r\n \r\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 59,
        "bugNodeStartChar": 1780,
        "bugNodeLength": 11,
        "fixLineNum": 59,
        "fixNodeStartChar": 1722,
        "fixNodeLength": 12,
        "sourceBeforeFix": "newId > max",
        "sourceAfterFix": "newId >= max"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 623,
        "bugNodeStartChar": 30437,
        "bugNodeLength": 98,
        "fixLineNum": 623,
        "fixNodeStartChar": 30437,
        "fixNodeLength": 98,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,true))"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "339f3ee107cdfd72dbee9201de4b5c1994168b5b",
        "fixCommitParentSHA1": "345389a8a106a9405248e03e54224bc453f504c4",
        "bugFilePath": "bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\nindex 3615998..eb5c42e 100644\n--- a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n+++ b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n@@ -115,13 +115,13 @@\n \t\tcase HeatingThermostatPlus:\n \t\t\tHeatingThermostat heatingThermostat = (HeatingThermostat) device;\n \t\t\t// \"xxxx xx00 = automatic, xxxx xx01 = manual, xxxx xx10 = vacation, xxxx xx11 = boost\":\n-\t\t\tif (bits2[0] == false && bits2[0] == false) {\n+\t\t\tif (bits2[1] == false && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.AUTOMATIC);\n-\t\t\t} else if (bits2[0] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == false && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.MANUAL);\n-\t\t\t} else if (bits2[1] == false && bits2[0] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.VACATION);\n-\t\t\t} else if (bits2[1] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.BOOST);\n \t\t\t} else {\n \t\t\t\t// TODO: handel malformed message\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 122,
        "bugNodeStartChar": 3722,
        "bugNodeLength": 17,
        "fixLineNum": 122,
        "fixNodeStartChar": 3722,
        "fixNodeLength": 16,
        "sourceBeforeFix": "bits2[1] == false",
        "sourceAfterFix": "bits2[1] == true"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
        "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
        "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
        "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 202,
        "bugNodeStartChar": 7721,
        "bugNodeLength": 67,
        "fixLineNum": 202,
        "fixNodeStartChar": 7721,
        "fixNodeLength": 67,
        "sourceBeforeFix": "assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7)",
        "sourceAfterFix": "assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c25f3ff3d88976933957e6a2e89e60607e9fe436",
        "fixCommitParentSHA1": "2243cc2e8130b961992e0676a9ff5cd2781fed12",
        "bugFilePath": "runtime/Java/src/org/antlr/v4/runtime/BailErrorStrategy.java",
        "fixPatch": "diff --git a/runtime/Java/src/org/antlr/v4/runtime/BailErrorStrategy.java b/runtime/Java/src/org/antlr/v4/runtime/BailErrorStrategy.java\nindex cf6d939..af29fbd 100644\n--- a/runtime/Java/src/org/antlr/v4/runtime/BailErrorStrategy.java\n+++ b/runtime/Java/src/org/antlr/v4/runtime/BailErrorStrategy.java\n@@ -32,14 +32,14 @@\n /** Bail out of parser at first syntax error. Do this to use it:\n  *      myparser.setErrorHandler(new BailErrorStrategy<Token>());\n  */\n-public class BailErrorStrategy extends DefaultErrorStrategy<Token> {\n+public class BailErrorStrategy<Symbol> extends DefaultErrorStrategy<Symbol> {\n     /** Instead of recovering from exception e, Re-throw wrote it wrapped\n      *  in a generic RuntimeException so it is not caught by the\n      *  rule function catches.  Exception e is the \"cause\" of the\n      *  RuntimeException.\n      */\n     @Override\n-    public void recover(BaseRecognizer recognizer, RecognitionException e) {\n+    public void recover(BaseRecognizer<Symbol> recognizer, RecognitionException e) {\n         throw new RuntimeException(e);\n     }\n \n@@ -47,7 +47,7 @@\n      *  successfully recovers, it won't throw an exception.\n      */\n     @Override\n-    public Token recoverInline(BaseRecognizer recognizer)\n+    public Symbol recoverInline(BaseRecognizer<Symbol> recognizer)\n         throws RecognitionException\n     {\n         throw new RuntimeException(new InputMismatchException(recognizer));\n@@ -55,5 +55,5 @@\n \n     /** Make sure we don't attempt to recover from problems in subrules. */\n     @Override\n-    public void sync(BaseRecognizer recognizer) { }\n+    public void sync(BaseRecognizer<Symbol> recognizer) { }\n }\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 46,
        "bugNodeStartChar": 2058,
        "bugNodeLength": 327,
        "fixLineNum": 46,
        "fixNodeStartChar": 2058,
        "fixNodeLength": 336,
        "sourceBeforeFix": "/**   * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception.  */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException {   throw new RuntimeException(new InputMismatchException(recognizer)); } ",
        "sourceAfterFix": "/**   * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception.  */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException {   throw new RuntimeException(new InputMismatchException(recognizer)); } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ee201465a3287e5700c5cba712852a8f4de4bca",
        "fixCommitParentSHA1": "81189e975542a4c5274b418834f3b1c1fccc31d1",
        "bugFilePath": "components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java",
        "fixPatch": "diff --git a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\nindex 4872957..141056a 100644\n--- a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n+++ b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n@@ -35,7 +35,7 @@\n     @Test\r\n     public void testHttpUndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -43,7 +43,7 @@\n     @Test\r\n     public void testHttpsUndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -51,7 +51,7 @@\n     @Test\r\n     public void testHttp4UndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -59,7 +59,7 @@\n     @Test\r\n     public void testHttps4UndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -67,7 +67,7 @@\n     @Test\r\n     public void testHttpPort80ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if http and port 80 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -75,7 +75,7 @@\n     @Test\r\n     public void testHttpsPort443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null,null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if https and port 443 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -83,7 +83,7 @@\n     @Test\r\n     public void testHttpPort8080ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if http and port other than 80 specified\", \"localhost:8080\", result[0]);\r\n     }\r\n@@ -91,7 +91,7 @@\n     @Test\r\n     public void testHttpsPort8443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if https and port other than 443 specified\", \"localhost:8443\", result[0]);\r\n     }\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 86,
        "bugNodeStartChar": 3782,
        "bugNodeLength": 63,
        "fixLineNum": 86,
        "fixNodeStartChar": 3697,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new DynamicAwareEntry(\"http://localhost:8080/test\",null,null)",
        "sourceAfterFix": "new DynamicAwareEntry(\"http://localhost:8080/test\",null,null,null)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "61ea8aa1ba14bf079c0dff341c7b7ae708994a54",
        "fixCommitParentSHA1": "91a22eda7a750101e6c91abda8ba6ffc322aa59e",
        "bugFilePath": "app/controllers/MessagesController.java",
        "fixPatch": "diff --git a/app/controllers/MessagesController.java b/app/controllers/MessagesController.java\nindex d4e3b2a..e44326f 100644\n--- a/app/controllers/MessagesController.java\n+++ b/app/controllers/MessagesController.java\n@@ -127,7 +127,7 @@\n             Map<String, Object> result = Maps.newHashMap();\n             result.put(\"id\", message.getId());\n             if (filtered)\n-                result.put(\"fields\", message.getFormattedFields());\n+                result.put(\"fields\", message.getFilteredFields());\n             else\n                 result.put(\"fields\", message.getFields());\n \n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 130,
        "bugNodeStartChar": 4946,
        "bugNodeLength": 28,
        "fixLineNum": 130,
        "fixNodeStartChar": 4946,
        "fixNodeLength": 27,
        "sourceBeforeFix": "message.getFormattedFields()",
        "sourceAfterFix": "message.getFilteredFields()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "73b39f0f9d0221f0e932ea27f9ba779d6f5bb71b",
        "fixCommitParentSHA1": "af38b55b3c5e9bf2bd5fbe08f68e1d659340c66a",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex e56294b..547d8e6 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -117,7 +117,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -154,7 +154,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -229,7 +229,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -290,7 +290,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -316,14 +316,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 319,
        "bugNodeStartChar": 11191,
        "bugNodeLength": 59,
        "fixLineNum": 319,
        "fixNodeStartChar": 11191,
        "fixNodeLength": 54,
        "sourceBeforeFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "69b950bf50cc482a7bac2631a0d4d5afae964a94",
        "fixCommitParentSHA1": "646d305cafc7de6ae1573b20033006636b2d8d89",
        "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\nindex 46505bd..8c49809 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/util/PrimitiveType.java\n@@ -201,9 +201,9 @@\n         BASE_CLASSES = Collections.unmodifiableMap(baseClasses);\n \n         final Map<String, PrimitiveType> externalClasses = new HashMap<String, PrimitiveType>();\n-        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\");\n+        addKeys(externalClasses, DATE, \"org.joda.time.LocalDate\", \"java.time.LocalDate\");\n         addKeys(externalClasses, DATE_TIME, \"org.joda.time.DateTime\", \"org.joda.time.ReadableDateTime\",\n-                \"javax.xml.datatype.XMLGregorianCalendar\");\n+                \"javax.xml.datatype.XMLGregorianCalendar\", \"java.time.LocalDateTime\");\n         EXTERNAL_CLASSES = Collections.unmodifiableMap(externalClasses);\n \n         final Map<String, PrimitiveType> names = new TreeMap<String, PrimitiveType>(String.CASE_INSENSITIVE_ORDER);\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 204,
        "bugNodeStartChar": 6222,
        "bugNodeLength": 57,
        "fixLineNum": 204,
        "fixNodeStartChar": 6222,
        "fixNodeLength": 80,
        "sourceBeforeFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\")",
        "sourceAfterFix": "addKeys(externalClasses,DATE,\"org.joda.time.LocalDate\",\"java.time.LocalDate\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "62daee8bf2d60c90827d2adc864662c9db6c4713",
        "fixCommitParentSHA1": "17192c873c62e527859f80085a07e89d5b098dd7",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/config/managed/MeteorServiceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/config/managed/MeteorServiceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/config/managed/MeteorServiceInterceptor.java\nindex eb11b0b..4a6f8f2 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/config/managed/MeteorServiceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/config/managed/MeteorServiceInterceptor.java\n@@ -119,10 +119,10 @@\n                                     r.setServlet(config.framework().newClassInstance(s.getClass()));\n                                     r.init(config);\n                                     config.framework().addAtmosphereHandler(path, r,\n-                                            config.getBroadcasterFactory().lookup(m.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(m.broadcaster(), path, true), w.interceptors);\n                                 } else {\n                                     config.framework().addAtmosphereHandler(path, w.atmosphereHandler,\n-                                            config.getBroadcasterFactory().lookup(m.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(m.broadcaster(), path, true), w.interceptors);\n                                 }\n                                 request.setAttribute(FrameworkConfig.NEW_MAPPING, \"true\");\n                             } catch (Throwable e) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 122,
        "bugNodeStartChar": 4717,
        "bugNodeLength": 60,
        "fixLineNum": 122,
        "fixNodeStartChar": 4717,
        "fixNodeLength": 66,
        "sourceBeforeFix": "config.getBroadcasterFactory().lookup(m.broadcaster(),true)",
        "sourceAfterFix": "config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "1abf653a0774560f3da680505689e05978d75e07",
        "fixCommitParentSHA1": "4d08f3890b5901468b0887e42bb59f37bf64535b",
        "bugFilePath": "src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java b/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\nindex d73a8b5..ad3dbd8 100644\n--- a/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\n+++ b/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java\n@@ -37,7 +37,7 @@\n   private String username;\n   private String password;\n \n-  private boolean autoCommit;\n+  private Boolean autoCommit;\n   private Integer defaultTransactionIsolationLevel;\n \n   static {\n@@ -148,11 +148,11 @@\n     this.password = password;\n   }\n \n-  public boolean isAutoCommit() {\n+  public Boolean isAutoCommit() {\n     return autoCommit;\n   }\n \n-  public void setAutoCommit(boolean autoCommit) {\n+  public void setAutoCommit(Boolean autoCommit) {\n     this.autoCommit = autoCommit;\n   }\n \n@@ -198,7 +198,7 @@\n   }\n \n   private void configureConnection(Connection conn) throws SQLException {\n-    if (autoCommit != conn.getAutoCommit()) {\n+    if (autoCommit != null && autoCommit != conn.getAutoCommit()) {\n       conn.setAutoCommit(autoCommit);\n     }\n     if (defaultTransactionIsolationLevel != null) {\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 201,
        "bugNodeStartChar": 5524,
        "bugNodeLength": 34,
        "fixLineNum": 201,
        "fixNodeStartChar": 5524,
        "fixNodeLength": 56,
        "sourceBeforeFix": "autoCommit != conn.getAutoCommit()",
        "sourceAfterFix": "autoCommit != null && autoCommit != conn.getAutoCommit()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f3a55f30abec0d1445ef65a89b16e49e3a8e2a2d",
        "fixCommitParentSHA1": "18c91c9a1d0596c6fa73a924ecd86182f9a5d985",
        "bugFilePath": "modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java",
        "fixPatch": "diff --git a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\nindex d5eb567..73d8a86 100644\n--- a/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n+++ b/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/DefaultParameterExtension.java\n@@ -114,7 +114,7 @@\n \n                 // Gather the field's details\n                 if (field != null) {\n-                    paramType = field.getRawType();\n+                \tparamType = field.getType();\n \n                     for (final Annotation fieldAnnotation : field.annotations()) {\n                         if (!paramAnnotations.contains(fieldAnnotation)) {\n@@ -127,7 +127,8 @@\n                 if (setter != null) {\n                     // Do not set the param class/type from the setter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = setter.getRawParameterTypes() != null ? setter.getRawParameterTypes()[0] : null;\n+                    \t// paramType will stay null if there is no parameter\n+                    \tparamType = setter.getParameterType(0); \n                     }\n \n                     for (final Annotation fieldAnnotation : setter.annotations()) {\n@@ -141,7 +142,7 @@\n                 if (getter != null) {\n                     // Do not set the param class/type from the getter if the values are already identified\n                     if (paramType == null) {\n-                        paramType = getter.getRawReturnType();\n+                        paramType = getter.getType();\n                     }\n \n                     for (final Annotation fieldAnnotation : getter.annotations()) {\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 144,
        "bugNodeStartChar": 6144,
        "bugNodeLength": 25,
        "fixLineNum": 144,
        "fixNodeStartChar": 6144,
        "fixNodeLength": 16,
        "sourceBeforeFix": "getter.getRawReturnType()",
        "sourceAfterFix": "getter.getType()"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "907ddc126cd19f6a1c464608faa6da739483e682",
        "fixCommitParentSHA1": "60bbedcda1870593bd25ff5da276ee6af9737651",
        "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\nindex 3c15918..08235b2 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/model/override/OverrideTest.java\n@@ -27,8 +27,8 @@\n \n         final Model model = read.get(GenericModel.class.getSimpleName());\n         assertTrue(model.getProperties().containsKey(NAME));\n-        assertEquals(model.getProperties().get(NAME).getType(), \"string\");\n+        assertEquals(\"string\", model.getProperties().get(NAME).getType());\n         assertTrue(model.getProperties().containsKey(COUNT));\n-        assertEquals(model.getProperties().get(COUNT).getType(), \"integer\");\n+        assertEquals(\"integer\", model.getProperties().get(COUNT).getType());\n     }\n }\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 30,
        "bugNodeStartChar": 1008,
        "bugNodeLength": 65,
        "fixLineNum": 30,
        "fixNodeStartChar": 1008,
        "fixNodeLength": 65,
        "sourceBeforeFix": "assertEquals(model.getProperties().get(NAME).getType(),\"string\")",
        "sourceAfterFix": "assertEquals(\"string\",model.getProperties().get(NAME).getType())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "0c587bb3062930d4ce05fbd5924efa1d3ff5aaa0",
        "fixCommitParentSHA1": "7a89149b232878751287fa05592eb1e33b38ef93",
        "bugFilePath": "src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java",
        "fixPatch": "diff --git a/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java b/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java\nindex 1885344..99b1357 100644\n--- a/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java\n+++ b/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java\n@@ -120,7 +120,7 @@\n     /**\n      * See https://issues.sonatype.org/browse/AHC-5\n      */\n-    @Test(groups = {\"standalone\", \"default_provider\"}, enabled = false)\n+    @Test(groups = {\"standalone\", \"default_provider\"}, enabled = true)\n     public void testPutZeroBytesFileTest() throws Throwable {\n         System.err.println(\"setting up client\");\n         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder()\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 123,
        "bugNodeStartChar": 4955,
        "bugNodeLength": 15,
        "fixLineNum": 123,
        "fixNodeStartChar": 4955,
        "fixNodeLength": 14,
        "sourceBeforeFix": "enabled=false",
        "sourceAfterFix": "enabled=true"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0b70c36eb0dff06c81010d1569797c727712bddd",
        "fixCommitParentSHA1": "2ebdce20b1797858f8b20144eabfb46e3574f3e0",
        "bugFilePath": "core/src/main/java/org/apache/druid/math/expr/ExprEval.java",
        "fixPatch": "diff --git a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\nindex 2b649d4..4dad810 100644\n--- a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n+++ b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n@@ -197,7 +197,7 @@\n           return this;\n         case LONG:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofLong(null);\n           } else {\n             return ExprEval.of(asLong());\n           }\n@@ -239,7 +239,7 @@\n       switch (castTo) {\n         case DOUBLE:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofDouble(null);\n           } else {\n             return ExprEval.of(asDouble());\n           }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 200,
        "bugNodeStartChar": 4625,
        "bugNodeLength": 17,
        "fixLineNum": 200,
        "fixNodeStartChar": 4625,
        "fixNodeLength": 21,
        "sourceBeforeFix": "ExprEval.of(null)",
        "sourceAfterFix": "ExprEval.ofLong(null)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b407c818d8a8fbc9d2c7e865df67b9ebfde952ae",
        "fixCommitParentSHA1": "e4d46ca401d9c016252d3cb1c7eeb98da22b123c",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/internal/util/collection/MPSCQueueStressTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/internal/util/collection/MPSCQueueStressTest.java b/hazelcast/src/test/java/com/hazelcast/internal/util/collection/MPSCQueueStressTest.java\nindex bcfea97..014774d 100644\n--- a/hazelcast/src/test/java/com/hazelcast/internal/util/collection/MPSCQueueStressTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/internal/util/collection/MPSCQueueStressTest.java\n@@ -107,7 +107,7 @@\n                 itemCount++;\n                 queue.offer(new Item(id, itemCount));\n \n-                while (queue.size() < 100000) {\n+                while (queue.size() > 100000) {\n                     sleepMillis(random.nextInt(100));\n                 }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 110,
        "bugNodeStartChar": 3453,
        "bugNodeLength": 21,
        "fixLineNum": 110,
        "fixNodeStartChar": 3453,
        "fixNodeLength": 21,
        "sourceBeforeFix": "queue.size() < 100000",
        "sourceAfterFix": "queue.size() > 100000"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6ec426667bbf19be4fca84eec48e03152e2cfffe",
        "fixCommitParentSHA1": "ff0ad46407f9d0b70f6a074d14d3bd33dadf8f5e",
        "bugFilePath": "jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java",
        "fixPatch": "diff --git a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\nindex 725d665..e39afca 100644\n--- a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n+++ b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n@@ -58,7 +58,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -74,7 +74,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -99,7 +99,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(nullValue()));\n         assertThat(args.isGenerateBuilders(), is(false));\n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 61,
        "bugNodeStartChar": 2075,
        "bugNodeLength": 18,
        "fixLineNum": 61,
        "fixNodeStartChar": 2075,
        "fixNodeLength": 24,
        "sourceBeforeFix": "is(\"/home/source\")",
        "sourceAfterFix": "endsWith(\"/home/source\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a6dc024ed1176e0a4c523b1a64e8e907e1394d7b",
        "fixCommitParentSHA1": "c15acce17f82e2b055c66c179ea82367a30dee1c",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\nindex 5ff300c..28a8b51 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\n@@ -1178,7 +1178,7 @@\n \t    \t\t\t\tsendAllowed.release();\n \t    \t\t\t}\n \t\t\t\t\trecvMessage = recvQueue.take();\n-\t\t\t\t\tlogger.trace(\"Receive queue TAKE: Length={}\", recvQueue.size());\n+\t\t\t\t\tlogger.debug(\"Receive queue TAKE: Length={}\", recvQueue.size());\n \t\t\t\t\tlogger.debug(\"Process Message = {}\", SerialMessage.bb2hex(recvMessage.getMessageBuffer()));\n \n \t\t    \t\thandleIncomingMessage(recvMessage);\n@@ -1420,7 +1420,7 @@\n     \t\t}\n \n     \t\trecvQueue.add(recvMessage);\n-\t\t\tlogger.trace(\"Receive queue ADD: Length={}\", recvQueue.size());\n+\t\t\tlogger.debug(\"Receive queue ADD: Length={}\", recvQueue.size());\n         }\n \n \t\t/**\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 1181,
        "bugNodeStartChar": 41260,
        "bugNodeLength": 63,
        "fixLineNum": 1181,
        "fixNodeStartChar": 41260,
        "fixNodeLength": 63,
        "sourceBeforeFix": "logger.trace(\"Receive queue TAKE: Length={}\",recvQueue.size())",
        "sourceAfterFix": "logger.debug(\"Receive queue TAKE: Length={}\",recvQueue.size())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "c8b6b7ad22c1d315fa94ecb681f868be1df27744",
        "fixCommitParentSHA1": "57afee6a6bb2e7284fe0886ca64e92f404a51419",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java\nindex 6d32122..8711c82 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/cleaner/CleanerChore.java\n@@ -218,7 +218,7 @@\n     }\n     // delete this file if it passes all the cleaners\n     LOG.debug(\"Removing:\" + filePath + \" from archive\");\n-    if (this.fs.delete(filePath, false)) {\n+    if (!this.fs.delete(filePath, false)) {\n       LOG.warn(\"Attempted to delete:\" + filePath\n           + \", but couldn't. Run cleaner chain and attempt to delete on next pass.\");\n     }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 221,
        "bugNodeStartChar": 8425,
        "bugNodeLength": 31,
        "fixLineNum": 221,
        "fixNodeStartChar": 8425,
        "fixNodeLength": 32,
        "sourceBeforeFix": "this.fs.delete(filePath,false)",
        "sourceAfterFix": "!this.fs.delete(filePath,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
        "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
        "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java",
        "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\nindex bfb0b61..798cfbf 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/ServiceTaskXMLConverter.java\n@@ -126,7 +126,7 @@\n         } else {\n           xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_FIELD_STRING, ACTIVITI_EXTENSIONS_NAMESPACE);\n         }\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n         xtw.writeEndElement();\n       }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 129,
        "bugNodeStartChar": 6623,
        "bugNodeLength": 52,
        "fixLineNum": 129,
        "fixNodeStartChar": 6623,
        "fixNodeLength": 47,
        "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
        "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1c73643546435df54d620cd3ada4df83bf71a7a6",
        "fixCommitParentSHA1": "6cfa71484e3a74c522b0da65ff5a167d94600aac",
        "bugFilePath": "components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java",
        "fixPatch": "diff --git a/components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java b/components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java\nindex 48639f8..c9ef129 100644\n--- a/components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java\n+++ b/components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyContentExchange.java\n@@ -199,7 +199,7 @@\n             } else {\n                 // some kind of other error\n                 if (exchange.getException() != null) {\n-                    exchange.setException(new CamelExchangeException(\"JettyClient failed with state \" + exchangeState, exchange));\n+                    exchange.setException(new CamelExchangeException(\"JettyClient failed with state \" + exchangeState, exchange, exchange.getException()));\n                 }\n             }\n         } finally {\n",
        "projectName": "apache.camel",
        "bugLineNum": 202,
        "bugNodeStartChar": 6812,
        "bugNodeLength": 86,
        "fixLineNum": 202,
        "fixNodeStartChar": 6812,
        "fixNodeLength": 111,
        "sourceBeforeFix": "new CamelExchangeException(\"JettyClient failed with state \" + exchangeState,exchange)",
        "sourceAfterFix": "new CamelExchangeException(\"JettyClient failed with state \" + exchangeState,exchange,exchange.getException())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "7ebe053ac1abce6e3b218beaee801ebbc6da2ecb",
        "fixCommitParentSHA1": "4a64ce37ed3207c858a1dee41e2a6d366218d8be",
        "bugFilePath": "server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java b/server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java\nindex a9fe23d..e7aa60d 100644\n--- a/server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java\n+++ b/server/src/main/java/com/metamx/druid/loading/SingleSegmentLoader.java\n@@ -210,7 +210,7 @@\n \n     private synchronized void addSegment(DataSegment segment)\n     {\n-      if (! segments.add(segment)) {\n+      if (segments.add(segment)) {\n         currSize += segment.getSize();\n       }\n     }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 213,
        "bugNodeStartChar": 6546,
        "bugNodeLength": 23,
        "fixLineNum": 213,
        "fixNodeStartChar": 6546,
        "fixNodeLength": 21,
        "sourceBeforeFix": "!segments.add(segment)",
        "sourceAfterFix": "segments.add(segment)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f3c01ca3b39c23758a34d711579a567a5f841944",
        "fixCommitParentSHA1": "f3be632a57b836560635d4ab97583a363d257e45",
        "bugFilePath": "src/test/java/io/vertx/test/core/FaultToleranceTest.java",
        "fixPatch": "diff --git a/src/test/java/io/vertx/test/core/FaultToleranceTest.java b/src/test/java/io/vertx/test/core/FaultToleranceTest.java\nindex d63519e..b938af1 100644\n--- a/src/test/java/io/vertx/test/core/FaultToleranceTest.java\n+++ b/src/test/java/io/vertx/test/core/FaultToleranceTest.java\n@@ -66,12 +66,12 @@\n       Process process = startExternalNode(i);\n       externalNodes.add(process);\n     }\n-    waitUntil(() -> externalNodesStarted.get() == NODE_COUNT, 30_000);\n+    waitUntil(() -> externalNodesStarted.get() == NODE_COUNT, 60_000);\n \n     JsonArray message1 = new JsonArray();\n     IntStream.range(0, NODE_COUNT).forEach(message1::add);\n     vertx.eventBus().publish(\"ping\", message1);\n-    waitUntil(() -> pongsReceived.get() == NODE_COUNT * NODE_COUNT * ADDRESSES_COUNT, 30_000);\n+    waitUntil(() -> pongsReceived.get() == NODE_COUNT * NODE_COUNT * ADDRESSES_COUNT, 60_000);\n \n     for (int i = 0; i < NODE_COUNT - 1; i++) {\n       externalNodes.get(i).destroyForcibly();\n@@ -81,17 +81,17 @@\n     pongsReceived.set(0);\n     JsonArray message2 = new JsonArray().add(NODE_COUNT - 1);\n     vertx.eventBus().publish(\"ping\", message2);\n-    waitUntil(() -> pongsReceived.get() == ADDRESSES_COUNT, 30_000);\n+    waitUntil(() -> pongsReceived.get() == ADDRESSES_COUNT, 60_000);\n \n     JsonArray message3 = new JsonArray();\n     IntStream.range(0, NODE_COUNT - 1).forEach(message3::add);\n     vertx.eventBus().publish(\"ping\", message3);\n-    waitUntil(() -> noHandlersErrors.get() == (NODE_COUNT - 1) * ADDRESSES_COUNT, 30_000);\n+    waitUntil(() -> noHandlersErrors.get() == (NODE_COUNT - 1) * ADDRESSES_COUNT, 60_000);\n   }\n \n   protected void waitForClusterStability(VertxInternal vertx) throws Exception {\n     ClusterManager clusterManager = vertx.getClusterManager();\n-    waitUntil(() -> clusterManager.getNodes().size() == 2, 30_000);\n+    waitUntil(() -> clusterManager.getNodes().size() == 2, 60_000);\n   }\n \n   private Process startExternalNode(int id) throws Exception {\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 94,
        "bugNodeStartChar": 3188,
        "bugNodeLength": 62,
        "fixLineNum": 94,
        "fixNodeStartChar": 3188,
        "fixNodeLength": 62,
        "sourceBeforeFix": "waitUntil(() -> clusterManager.getNodes().size() == 2,30_000)",
        "sourceAfterFix": "waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c9a1cc9df3dc4fe2eef78ad6090a9b1d95a02557",
        "fixCommitParentSHA1": "adccab823675fb33685c5c0268388fc9857b7047",
        "bugFilePath": "clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheResourceDefinition.java",
        "fixPatch": "diff --git a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheResourceDefinition.java b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheResourceDefinition.java\nindex 9839918..25c9b46 100644\n--- a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheResourceDefinition.java\n+++ b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ClusteredCacheResourceDefinition.java\n@@ -65,7 +65,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(10))\n+            .setDefaultValue(new ModelNode().set(10L))\n             .build();\n \n     static final SimpleAttributeDefinition QUEUE_SIZE = new SimpleAttributeDefinitionBuilder(ModelKeys.QUEUE_SIZE, ModelType.INT, true)\n@@ -80,7 +80,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(17500))\n+            .setDefaultValue(new ModelNode().set(17500L))\n             .build();\n \n     static final AttributeDefinition[] ATTRIBUTES = new AttributeDefinition[] { ASYNC_MARSHALLING, MODE, QUEUE_SIZE, QUEUE_FLUSH_INTERVAL, REMOTE_TIMEOUT };\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 4272,
        "bugNodeLength": 26,
        "fixLineNum": 83,
        "fixNodeStartChar": 4272,
        "fixNodeLength": 27,
        "sourceBeforeFix": "new ModelNode().set(17500)",
        "sourceAfterFix": "new ModelNode().set(17500L)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ee8bd325463cae737e0ffd836a3d5376fe695f3f",
        "fixCommitParentSHA1": "3d542f7c5084070ba61ca84dbaa7e84d7013d724",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/ShutdownDeferTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/ShutdownDeferTest.java b/camel-core/src/test/java/org/apache/camel/processor/ShutdownDeferTest.java\nindex b1ed53b..cd805b4 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/ShutdownDeferTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/ShutdownDeferTest.java\n@@ -32,7 +32,7 @@\n \n         MockEndpoint bar = getMockEndpoint(\"mock:bar\");\n         bar.expectedMinimumMessageCount(1);\n-        bar.setResultWaitTime(3000);\n+        bar.setResultWaitTime(1000);\n \n         template.sendBody(\"seda:foo\", \"A\");\n         template.sendBody(\"seda:foo\", \"B\");\n@@ -59,7 +59,7 @@\n             public void configure() throws Exception {\n                 from(\"seda:foo\")\n                     .startupOrder(1)\n-                    .delay(1000).to(\"file://target/deferred\");\n+                    .delay(500).to(\"file://target/deferred\");\n \n                 // use file component to transfer files from route 1 -> route 2 as it\n                 // will normally suspend, but by deferring this we can let route 1\n",
        "projectName": "apache.camel",
        "bugLineNum": 35,
        "bugNodeStartChar": 1341,
        "bugNodeLength": 27,
        "fixLineNum": 35,
        "fixNodeStartChar": 1341,
        "fixNodeLength": 27,
        "sourceBeforeFix": "bar.setResultWaitTime(3000)",
        "sourceAfterFix": "bar.setResultWaitTime(1000)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2071f9b5421f853e8515f309b2874399c895c43a",
        "fixCommitParentSHA1": "b43c32ad0a3674fcda782d2e28d0975b72382470",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java\nindex 767ef08..07040d3 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java\n@@ -38,7 +38,7 @@\n      */\n     public SeverityLevelCounter(SeverityLevel level) {\n         if (level == null) {\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"'level' cannot be null\");\n         }\n         this.level = level;\n     }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 41,
        "bugNodeStartChar": 1687,
        "bugNodeLength": 30,
        "fixLineNum": 41,
        "fixNodeStartChar": 1687,
        "fixNodeLength": 54,
        "sourceBeforeFix": "new IllegalArgumentException()",
        "sourceAfterFix": "new IllegalArgumentException(\"'level' cannot be null\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
        "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
        "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 47,
        "bugNodeStartChar": 1184,
        "bugNodeLength": 23,
        "fixLineNum": 47,
        "fixNodeStartChar": 1184,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Color.fromRGB(0x434343)",
        "sourceAfterFix": "Color.fromRGB(0xABABAB)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "1a5b454c115a5c4ea1239834dd236d806ce0e949",
        "fixCommitParentSHA1": "56eeb2d4e618b1a4619d3b69f82b131b594efcd6",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/Sprite.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\nindex 6938ab8..ef4409f 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/Sprite.java\n@@ -181,7 +181,7 @@\n \t */\r\n \tpublic void scrollTexture (float xAmount, float yAmount) {\r\n \t\tfloat[] vertices = this.vertices;\r\n-\t\tif (xAmount > 0) {\r\n+\t\tif (xAmount != 0) {\r\n \t\t\tfloat u = (vertices[U1] + xAmount) % 1;\r\n \t\t\tfloat u2 = u + width / texture.getWidth();\r\n \t\t\tvertices[U1] = u;\r\n@@ -189,7 +189,7 @@\n \t\t\tvertices[U3] = u2;\r\n \t\t\tvertices[U4] = u2;\r\n \t\t}\r\n-\t\tif (yAmount > 0) {\r\n+\t\tif (yAmount != 0) {\r\n \t\t\tfloat v = (vertices[V1] + yAmount) % 1;\r\n \t\t\tfloat v2 = v + height / texture.getHeight();\r\n \t\t\tvertices[V1] = v;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 184,
        "bugNodeStartChar": 5618,
        "bugNodeLength": 11,
        "fixLineNum": 184,
        "fixNodeStartChar": 5435,
        "fixNodeLength": 12,
        "sourceBeforeFix": "xAmount > 0",
        "sourceAfterFix": "xAmount != 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7bdcee5e3dfc368e8ba9c5752aa07d049ca5b5ae",
        "fixCommitParentSHA1": "dc31f617b39fdea955403a6eccd5f82d5c6383d9",
        "bugFilePath": "spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/dependencies/Dependency.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/dependencies/Dependency.java b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/dependencies/Dependency.java\nindex e703714..52f7b6d 100644\n--- a/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/dependencies/Dependency.java\n+++ b/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/dependencies/Dependency.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2018 the original author or authors.\n+ * Copyright 2012-2019 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -145,7 +145,7 @@\n \n \t\tExclusion(String groupId, String artifactId) {\n \t\t\tAssert.notNull(groupId, \"GroupId must not be null\");\n-\t\t\tAssert.notNull(groupId, \"ArtifactId must not be null\");\n+\t\t\tAssert.notNull(artifactId, \"ArtifactId must not be null\");\n \t\t\tthis.groupId = groupId;\n \t\t\tthis.artifactId = artifactId;\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 148,
        "bugNodeStartChar": 3749,
        "bugNodeLength": 54,
        "fixLineNum": 148,
        "fixNodeStartChar": 3749,
        "fixNodeLength": 57,
        "sourceBeforeFix": "Assert.notNull(groupId,\"ArtifactId must not be null\")",
        "sourceAfterFix": "Assert.notNull(artifactId,\"ArtifactId must not be null\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "aa2e0a36d1bf926dade3a92cdca38f6d6ee834b3",
        "fixCommitParentSHA1": "b1e433081ffdaa614da574f58c340bca2e178289",
        "bugFilePath": "retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java",
        "fixPatch": "diff --git a/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\nindex 6756dd8..fd30344 100644\n--- a/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\n+++ b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\n@@ -64,7 +64,7 @@\n     try {\n       converter.fromBody(decodeBase64(\"////\", \"yummy/bytes\"), Person.class);\n       fail();\n-    } catch (IllegalArgumentException e) {\n+    } catch (ConversionException e) {\n       assertThat(e).hasMessage(\"Expected a proto but was: yummy/bytes\");\n     }\n   }\n",
        "projectName": "square.retrofit",
        "bugLineNum": 67,
        "bugNodeStartChar": 2327,
        "bugNodeLength": 26,
        "fixLineNum": 67,
        "fixNodeStartChar": 2327,
        "fixNodeLength": 21,
        "sourceBeforeFix": "IllegalArgumentException e",
        "sourceAfterFix": "ConversionException e"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\nindex fcc2ed7..2a2030a 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n@@ -72,10 +72,10 @@\n         if (channel == null) {\n             initializeChannel();\n             if (endpoint.isSynchronous()) {\n-                LOG.info(\"Getting synchronous method stub from channel\");\n+                LOG.debug(\"Getting synchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcBlockingStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             } else {\n-                LOG.info(\"Getting asynchronous method stub from channel\");\n+                LOG.debug(\"Getting asynchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcAsyncStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             }\n         }\n@@ -84,7 +84,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (channel != null) {\n-            LOG.trace(\"Terminating channel to the remote gRPC server\");\n+            LOG.debug(\"Terminating channel to the remote gRPC server\");\n             channel.shutdown().shutdownNow();\n             channel = null;\n             grpcStub = null;\n",
        "projectName": "apache.camel",
        "bugLineNum": 87,
        "bugNodeStartChar": 3480,
        "bugNodeLength": 58,
        "fixLineNum": 87,
        "fixNodeStartChar": 3480,
        "fixNodeLength": 58,
        "sourceBeforeFix": "LOG.trace(\"Terminating channel to the remote gRPC server\")",
        "sourceAfterFix": "LOG.debug(\"Terminating channel to the remote gRPC server\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "79946366e1ab141ef2b595e0079dcac7b913da2b",
        "fixCommitParentSHA1": "840e7143a58542da18227e443df935e1ea429fc9",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\nindex a729bab..80827df 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n@@ -76,7 +76,8 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n     }\n \n     @Test\n@@ -87,7 +88,9 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -99,7 +102,8 @@\n         };\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -108,7 +112,8 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig, getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -117,7 +122,9 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -127,7 +134,8 @@\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 120,
        "bugNodeStartChar": 4826,
        "bugNodeLength": 60,
        "fixLineNum": 121,
        "fixNodeStartChar": 4842,
        "fixNodeLength": 73,
        "sourceBeforeFix": "getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\")",
        "sourceAfterFix": "getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "e81be4536f5156b105fff4b7328fc3e4e7a24931",
        "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d",
        "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java",
        "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n",
        "projectName": "junit-team.junit",
        "bugLineNum": 114,
        "bugNodeStartChar": 3419,
        "bugNodeLength": 51,
        "fixLineNum": 114,
        "fixNodeStartChar": 3419,
        "fixNodeLength": 37,
        "sourceBeforeFix": "testClass.getMethod(SUITE_METHODNAME,new Class[0])",
        "sourceAfterFix": "testClass.getMethod(SUITE_METHODNAME)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "aa0714dac503e8245e19db415d50b9f17ebdeff9",
        "fixCommitParentSHA1": "0b57e784358d0f004ff3eff9a5367f483faf024d",
        "bugFilePath": "src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java b/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\nindex b9e6eb6..2f0f37d 100644\n--- a/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\n+++ b/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\n@@ -232,7 +232,7 @@\n     SimpleMatrix fullVector = RNNUtils.concatenate(leftVector, rightVector);\n     for (int slice = 0; slice < size; ++slice) {\n       SimpleMatrix scaledFullVector = fullVector.scale(deltaFull.get(slice));\n-      deltaTensor = deltaTensor.plus(Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose()).mult(scaledFullVector));\n+      deltaTensor = deltaTensor.plus(Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose()).mult(scaledFullVector));\n     }\n     return deltaTensor.plus(WTDeltaNoBias);\n   }\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 235,
        "bugNodeStartChar": 11518,
        "bugNodeLength": 55,
        "fixLineNum": 235,
        "fixNodeStartChar": 11518,
        "fixNodeLength": 55,
        "sourceBeforeFix": "Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose())",
        "sourceAfterFix": "Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "762fa1b98d95fff88c642627d2cd546999afbc9a",
        "fixCommitParentSHA1": "3868f65226e64584ef7056f6022d0b5f4bbdcd20",
        "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java",
        "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\nindex 76ea222..cfdc922 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java\n@@ -112,7 +112,7 @@\n                         nodeColumns.addAvailableColumn(column);\n                     }\n                 } else if (EDGE_COLUMN.equalsIgnoreCase(name)) {\n-                    String id = reader.getAttributeValue(null, \"id\");\n+                    Integer id = Integer.parseInt(reader.getAttributeValue(null, \"id\"));\n                     AttributeColumn column = edgesTable.getColumn(id);\n                     if (column != null) {\n                         edgeColumns.addAvailableColumn(column);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 115,
        "bugNodeStartChar": 4970,
        "bugNodeLength": 49,
        "fixLineNum": 115,
        "fixNodeStartChar": 4970,
        "fixNodeLength": 68,
        "sourceBeforeFix": "String id=reader.getAttributeValue(null,\"id\"); ",
        "sourceAfterFix": "Integer id=Integer.parseInt(reader.getAttributeValue(null,\"id\")); "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "049530d90ae7f619525a7f523132552961146fbc",
        "fixCommitParentSHA1": "fc62a0ce98eaefff5f95d866179e35271fc64320",
        "bugFilePath": "src/edu/stanford/nlp/math/SloppyMath.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/math/SloppyMath.java b/src/edu/stanford/nlp/math/SloppyMath.java\nindex 0daa3cb..97b2462 100644\n--- a/src/edu/stanford/nlp/math/SloppyMath.java\n+++ b/src/edu/stanford/nlp/math/SloppyMath.java\n@@ -351,7 +351,7 @@\n       if (e == 1) {\n         return b;\n       } else {\n-        return 0; // this is also what you get for e < 0 !\n+        return 1; // this is also what you get for e < 0 !\n       }\n     } else {\n       if (e == 2) {\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 354,
        "bugNodeStartChar": 11045,
        "bugNodeLength": 9,
        "fixLineNum": 354,
        "fixNodeStartChar": 11045,
        "fixNodeLength": 9,
        "sourceBeforeFix": "return 0; ",
        "sourceAfterFix": "return 1; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941",
        "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592",
        "bugFilePath": "core/src/com/google/inject/spi/InterceptorBinding.java",
        "fixPatch": "diff --git a/core/src/com/google/inject/spi/InterceptorBinding.java b/core/src/com/google/inject/spi/InterceptorBinding.java\nindex 4d87157..a16e701 100644\n--- a/core/src/com/google/inject/spi/InterceptorBinding.java\n+++ b/core/src/com/google/inject/spi/InterceptorBinding.java\n@@ -56,7 +56,7 @@\n     this.source = checkNotNull(source, \"source\");\n     this.classMatcher = checkNotNull(classMatcher, \"classMatcher\");\n     this.methodMatcher = checkNotNull(methodMatcher, \"methodMatcher\");\n-    this.interceptors = ImmutableList.of(interceptors);\n+    this.interceptors = ImmutableList.copyOf(interceptors);\n   }\n \n   public Object getSource() {\n",
        "projectName": "google.guice",
        "bugLineNum": 59,
        "bugNodeStartChar": 2262,
        "bugNodeLength": 30,
        "fixLineNum": 59,
        "fixNodeStartChar": 2262,
        "fixNodeLength": 34,
        "sourceBeforeFix": "ImmutableList.of(interceptors)",
        "sourceAfterFix": "ImmutableList.copyOf(interceptors)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8abe81aaa656d78ac8b9e1a631a849025c9560b0",
        "fixCommitParentSHA1": "0c0fd67082d8f807c9bedabba4c99cdebf6d1de8",
        "bugFilePath": "tool/src/org/antlr/v4/tool/DOTGenerator.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/tool/DOTGenerator.java b/tool/src/org/antlr/v4/tool/DOTGenerator.java\nindex 3788310..59ade76 100644\n--- a/tool/src/org/antlr/v4/tool/DOTGenerator.java\n+++ b/tool/src/org/antlr/v4/tool/DOTGenerator.java\n@@ -284,7 +284,7 @@\n \t\t\t\t\tSetTransition set = (SetTransition)edge;\n \t\t\t\t\tString label = set.label().toString();\n \t\t\t\t\tif ( isLexer ) label = set.label().toString(true);\n-\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = set.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tif ( edge instanceof NotSetTransition ) label = \"~\"+label;\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n@@ -293,7 +293,7 @@\n \t\t\t\t\tRangeTransition range = (RangeTransition)edge;\n \t\t\t\t\tString label = range.label().toString();\n \t\t\t\t\tif ( isLexer ) label = range.toString();\n-\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenNames());\n+\t\t\t\t\telse if ( grammar!=null ) label = range.label().toString(grammar.getTokenDisplayNames());\n \t\t\t\t\tedgeST.add(\"label\", getEdgeLabel(label));\n \t\t\t\t}\n \t\t\t\telse {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 296,
        "bugNodeStartChar": 11016,
        "bugNodeLength": 23,
        "fixLineNum": 296,
        "fixNodeStartChar": 11016,
        "fixNodeLength": 30,
        "sourceBeforeFix": "grammar.getTokenNames()",
        "sourceAfterFix": "grammar.getTokenDisplayNames()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2933e220ed5118e606b3d5cf4eabeb77e4b7acf8",
        "fixCommitParentSHA1": "5bfe67887fdd8a002bbe1919d93687be8b5a56a9",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/impl/tx/TxnSetOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/impl/tx/TxnSetOperation.java b/hazelcast/src/main/java/com/hazelcast/map/impl/tx/TxnSetOperation.java\nindex 182d5fa..356e758 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/impl/tx/TxnSetOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/impl/tx/TxnSetOperation.java\n@@ -112,7 +112,7 @@\n     public Operation getBackupOperation() {\n         final Record record = recordStore.getRecord(dataKey);\n         final RecordInfo replicationInfo = Records.buildRecordInfo(record);\n-        return new PutBackupOperation(name, dataKey, dataValue, replicationInfo, true);\n+        return new PutBackupOperation(name, dataKey, dataValue, replicationInfo, true, false);\n     }\n \n     public void onWaitExpire() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 115,
        "bugNodeStartChar": 3779,
        "bugNodeLength": 71,
        "fixLineNum": 115,
        "fixNodeStartChar": 3779,
        "fixNodeLength": 78,
        "sourceBeforeFix": "new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true)",
        "sourceAfterFix": "new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true,false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1c1d6418e06a6cf1d8441d8ef329e1c8f48868e0",
        "fixCommitParentSHA1": "c22e4183fa5ef0ff22530a67b6adbb6eff19eacc",
        "bugFilePath": "samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java",
        "fixPatch": "diff --git a/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java b/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\nindex 1593487..f25980a 100644\n--- a/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n+++ b/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java\n@@ -60,7 +60,7 @@\n     }\n   }\n \n-  @PATCH\n+  @DELETE\n   @Path(\"/{petId}\")\n   @ApiOperation(value = \"Deletes a pet\")\n   @ApiResponses(value = { @ApiResponse(code = 400, message = \"Invalid pet value\")})\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 63,
        "bugNodeStartChar": 2336,
        "bugNodeLength": 6,
        "fixLineNum": 63,
        "fixNodeStartChar": 2336,
        "fixNodeLength": 7,
        "sourceBeforeFix": "@PATCH",
        "sourceAfterFix": "@DELETE"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ab72c059c55e01140f4c844e32686b1bc1daf591",
        "fixCommitParentSHA1": "c4cd886db20e8c5f63d0487be98ed6c56b671388",
        "bugFilePath": "tests/src/test/java/alluxio/client/RemoteBlockInStreamIntegrationTest.java",
        "fixPatch": "diff --git a/tests/src/test/java/alluxio/client/RemoteBlockInStreamIntegrationTest.java b/tests/src/test/java/alluxio/client/RemoteBlockInStreamIntegrationTest.java\nindex 610bf38..21204df 100644\n--- a/tests/src/test/java/alluxio/client/RemoteBlockInStreamIntegrationTest.java\n+++ b/tests/src/test/java/alluxio/client/RemoteBlockInStreamIntegrationTest.java\n@@ -431,7 +431,7 @@\n       Assert.assertEquals(k / 2, is.skip(k / 2));\n       Assert.assertEquals(k / 2, is.read());\n       is.close();\n-      Assert.assertFalse(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100);\n+      Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100);\n \n       if (k >= 3) {\n         is = mFileSystem.openFile(uri, mReadCache);\n@@ -441,7 +441,7 @@\n         Assert.assertEquals(t, is.skip(t));\n         Assert.assertEquals(2 * t + 1, is.read());\n         is.close();\n-        Assert.assertFalse(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100);\n+        Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100);\n       }\n     }\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 444,
        "bugNodeStartChar": 16619,
        "bugNodeLength": 77,
        "fixLineNum": 444,
        "fixNodeStartChar": 16619,
        "fixNodeLength": 76,
        "sourceBeforeFix": "Assert.assertFalse(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)",
        "sourceAfterFix": "Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ca588103009cd6ffe00ee721ac9bb9832d3a182f",
        "fixCommitParentSHA1": "0694aa13c8328956aa79d0c5ac86cd314a10b10b",
        "bugFilePath": "bundles/binding/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java b/bundles/binding/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java\nindex 6bb8b5e..b9ba834 100644\n--- a/bundles/binding/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java\n+++ b/bundles/binding/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/util/DateTimeUtils.java\n@@ -38,7 +38,7 @@\n \tpublic static Range getRange(int startMonth, int startDay, int endMonth, int endDay) {\n \t\tCalendar start = Calendar.getInstance();\n \t\tstart.set(Calendar.MONTH, startMonth);\n-\t\tstart.set(Calendar.DAY_OF_MONTH, startMonth);\n+\t\tstart.set(Calendar.DAY_OF_MONTH, startDay);\n \t\tstart = truncateToMidnight(start);\n \n \t\tCalendar end = Calendar.getInstance();\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 41,
        "bugNodeStartChar": 1254,
        "bugNodeLength": 44,
        "fixLineNum": 41,
        "fixNodeStartChar": 1254,
        "fixNodeLength": 42,
        "sourceBeforeFix": "start.set(Calendar.DAY_OF_MONTH,startMonth)",
        "sourceAfterFix": "start.set(Calendar.DAY_OF_MONTH,startDay)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "223311f4239069b578d3e7c0cf7f586289af4edb",
        "fixCommitParentSHA1": "a06f53b073e261f2307975f207c3e4268de67c2f",
        "bugFilePath": "dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java",
        "fixPatch": "diff --git a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\nindex 9eb0135..d20254a 100644\n--- a/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n+++ b/dropwizard-metrics/src/main/java/io/dropwizard/metrics/CsvReporterFactory.java\n@@ -51,7 +51,7 @@\n     public ScheduledReporter build(MetricRegistry registry) {\n         return CsvReporter.forRegistry(registry)\n                           .convertDurationsTo(getDurationUnit())\n-                          .convertDurationsTo(getRateUnit())\n+                          .convertRatesTo(getRateUnit())\n                           .filter(getFilter())\n                           .formatFor(getLocale())\n                           .build(getFile());\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 52,
        "bugNodeStartChar": 1363,
        "bugNodeLength": 159,
        "fixLineNum": 52,
        "fixNodeStartChar": 1363,
        "fixNodeLength": 155,
        "sourceBeforeFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())",
        "sourceAfterFix": "CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7388b4b76881e97b9e80396c847aae4f6f72c4f3",
        "fixCommitParentSHA1": "cc8a1fc3b9730f6afa08180570ddd5592496d48a",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\nindex 0036dd3..e6c472a 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\n@@ -94,7 +94,7 @@\n \tpublic Mono<Health> health() {\n \t\treturn Flux.fromIterable(this.indicators.entrySet())\n \t\t\t\t.flatMap((entry) -> Mono.just(entry.getKey())\n-\t\t\t\t\t\t.and(entry.getValue().health().compose(this.timeoutCompose)))\n+\t\t\t\t\t\t.zipWith(entry.getValue().health().compose(this.timeoutCompose)))\n \t\t\t\t.collectMap(Tuple2::getT1, Tuple2::getT2)\n \t\t\t\t.map(this.healthAggregator::aggregate);\n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 96,
        "bugNodeStartChar": 3259,
        "bugNodeLength": 92,
        "fixLineNum": 96,
        "fixNodeStartChar": 3259,
        "fixNodeLength": 96,
        "sourceBeforeFix": "Mono.just(entry.getKey()).and(entry.getValue().health().compose(this.timeoutCompose))",
        "sourceAfterFix": "Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "21ca7ec66eb0be7576b62766d4b51fdea7d05110",
        "fixCommitParentSHA1": "5f937c0864d88852b0decd4492330b05c7da83f5",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\nindex 073d4e4..172009a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/cardinality/impl/hyperloglog/impl/HyperLogLogImplTest.java\n@@ -49,7 +49,7 @@\n     @Parameters(name = \"precision:{0}, errorRange:{1}\")\n     public static Collection<Object[]> parameters() {\n         return asList(new Object[][]{\n-                {11, 6.5f},\n+                {11, 7.0f},\n                 {12, 5.5f},\n                 {13, 3.5f},\n                 {14, 3.0f},\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 52,
        "bugNodeStartChar": 1906,
        "bugNodeLength": 10,
        "fixLineNum": 52,
        "fixNodeStartChar": 1906,
        "fixNodeLength": 10,
        "sourceBeforeFix": "{11,6.5f}",
        "sourceAfterFix": "{11,7.0f}"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "8b0fec4451e8147bbe5bdbf29d235744c9aca01a",
        "fixCommitParentSHA1": "ead4c3a90e18ae863fb73be984f1448b8f701a7e",
        "bugFilePath": "ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java",
        "fixPatch": "diff --git a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\nindex 283a029..2fb28bc 100644\n--- a/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n+++ b/ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java\n@@ -202,7 +202,7 @@\n             positionKey2E.setAttribute(\"attr.type\", \"float\");\n             positionKey2E.setAttribute(\"for\", \"node\");\n             root.appendChild(positionKey2E);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionKey3E = document.createElement(\"key\");\n                 positionKey3E.setAttribute(\"id\", \"z\");\n                 positionKey3E.setAttribute(\"attr.name\", \"z\");\n@@ -388,7 +388,7 @@\n             nodeE.appendChild(positionXE);\n             Element positionYE = createNodePositionY(document, n);\n             nodeE.appendChild(positionYE);\n-            if (minZ != 0f && maxZ != 0f) {\n+            if (minZ != 0f || maxZ != 0f) {\n                 Element positionZE = createNodePositionZ(document, n);\n                 nodeE.appendChild(positionZE);\n             }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 205,
        "bugNodeStartChar": 7676,
        "bugNodeLength": 24,
        "fixLineNum": 205,
        "fixNodeStartChar": 7676,
        "fixNodeLength": 24,
        "sourceBeforeFix": "minZ != 0f && maxZ != 0f",
        "sourceAfterFix": "minZ != 0f || maxZ != 0f"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "6442298e28c835ed3add70f22bc193c31bb200f4",
        "fixCommitParentSHA1": "39199d8acf19a1897f5b311d16bfb2f0814d8c4e",
        "bugFilePath": "src/com/google/javascript/jscomp/NewTypeInference.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/NewTypeInference.java b/src/com/google/javascript/jscomp/NewTypeInference.java\nindex 53de964..83962b9 100644\n--- a/src/com/google/javascript/jscomp/NewTypeInference.java\n+++ b/src/com/google/javascript/jscomp/NewTypeInference.java\n@@ -2560,7 +2560,7 @@\n   private EnvTypePair analyzeCallNodeArgumentsBwd(\n       Node callNode, TypeEnv outEnv) {\n     TypeEnv env = outEnv;\n-    for (int i = callNode.getChildCount() - 1; i >= 0; i--) {\n+    for (int i = callNode.getChildCount() - 1; i > 0; i--) {\n       Node arg = callNode.getChildAtIndex(i);\n       env = analyzeExprBwd(arg, env).env;\n     }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 2563,
        "bugNodeStartChar": 102347,
        "bugNodeLength": 6,
        "fixLineNum": 2563,
        "fixNodeStartChar": 102347,
        "fixNodeLength": 5,
        "sourceBeforeFix": "i >= 0",
        "sourceAfterFix": "i > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5992b8ccbc9bc21d353ec3738c3f8994dfc3bbf8",
        "fixCommitParentSHA1": "5f9a7741ef180ca39da78f77e56978fb1be69857",
        "bugFilePath": "core/client/src/main/java/alluxio/client/file/FileSystemUtils.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java b/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\nindex 9e9be66..ff54336 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileSystemUtils.java\n@@ -170,7 +170,7 @@\n       URIStatus uriStatus = fs.getStatus(uri);\n       Permission perm = new Permission(uriStatus.getOwner(), uriStatus.getGroup(),\n           (short) uriStatus.getMode());\n-      OutputStream out = closer.register(ufs.create(dstPath.getPath(),\n+      OutputStream out = closer.register(ufs.create(dstPath.toString(),\n           new CreateOptions().setPermission(perm)));\n       ret = IOUtils.copyLarge(in, out);\n     } catch (Exception e) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 173,
        "bugNodeStartChar": 7755,
        "bugNodeLength": 17,
        "fixLineNum": 173,
        "fixNodeStartChar": 7755,
        "fixNodeLength": 18,
        "sourceBeforeFix": "dstPath.getPath()",
        "sourceAfterFix": "dstPath.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6300d45eec61b4b5c86c289ea08a77b0903b1b12",
        "fixCommitParentSHA1": "a1a1f32d11317e694749f1f54c332150e8337bae",
        "bugFilePath": "server/src/main/java/org/jboss/as/server/ServerEnvironment.java",
        "fixPatch": "diff --git a/server/src/main/java/org/jboss/as/server/ServerEnvironment.java b/server/src/main/java/org/jboss/as/server/ServerEnvironment.java\nindex 0c462ea..109fc07 100644\n--- a/server/src/main/java/org/jboss/as/server/ServerEnvironment.java\n+++ b/server/src/main/java/org/jboss/as/server/ServerEnvironment.java\n@@ -46,7 +46,7 @@\n \n     public static enum LaunchType {\n         DOMAIN,\n-        STANADALONE,\n+        STANDALONE,\n         EMBEDDED\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 49,
        "bugNodeStartChar": 1748,
        "bugNodeLength": 11,
        "fixLineNum": 49,
        "fixNodeStartChar": 1748,
        "fixNodeLength": 10,
        "sourceBeforeFix": "STANADALONE",
        "sourceAfterFix": "STANDALONE"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 175,
        "bugNodeStartChar": 6621,
        "bugNodeLength": 10,
        "fixLineNum": 175,
        "fixNodeStartChar": 6621,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15841",
        "sourceAfterFix": "id=10841"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "09f2dfd9a7d6ff6ef6ba810de47da813ba11081d",
        "fixCommitParentSHA1": "8ab76344acdbe4929aa4df29f1c712ef655790ec",
        "bugFilePath": "components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java",
        "fixPatch": "diff --git a/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java b/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\nindex 0416573..393bcb4 100644\n--- a/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\n+++ b/components/camel-jdbc/src/main/java/org/apache/camel/component/jdbc/DefaultBeanRowMapper.java\n@@ -39,7 +39,7 @@\n                 continue;\n             }\n             if (toUpper) {\n-                char upper = Character.toLowerCase(ch);\n+                char upper = Character.toUpperCase(ch);\n                 sb.append(upper);\n                 // reset flag\n                 toUpper = false;\n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1666,
        "bugNodeLength": 25,
        "fixLineNum": 42,
        "fixNodeStartChar": 1666,
        "fixNodeLength": 25,
        "sourceBeforeFix": "Character.toLowerCase(ch)",
        "sourceAfterFix": "Character.toUpperCase(ch)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3eb03ea8da9525d9615fcef99c0f3dcc3f1218c9",
        "fixCommitParentSHA1": "38b20e6d9e1897e3ee869930f390d664f18c087b",
        "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java",
        "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\nindex dfd7d87..88c596d 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/AstVisitor.java\n@@ -389,11 +389,11 @@\n \n     protected R visitCreateTable(CreateTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n \n     protected R visitDropTable(DropTable node, C context)\n     {\n-        return visitNode(node, context);\n+        return visitStatement(node, context);\n     }\n }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 397,
        "bugNodeStartChar": 9851,
        "bugNodeLength": 24,
        "fixLineNum": 397,
        "fixNodeStartChar": 9851,
        "fixNodeLength": 29,
        "sourceBeforeFix": "visitNode(node,context)",
        "sourceAfterFix": "visitStatement(node,context)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bbb28b514aadd4fc649dd0b7a47c6ece4d629fa7",
        "fixCommitParentSHA1": "fee5b47c3038207e4e88ed1470df25bda2d41c47",
        "bugFilePath": "components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java b/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\nindex 8e0c4c6..ea4ea43 100644\n--- a/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\n+++ b/components/camel-sjms/src/test/java/org/apache/camel/component/sjms/tx/BatchTransactedTopicConsumerTest.java\n@@ -46,7 +46,7 @@\n         // We should get two sets of 10 messages.  10 before the rollback and 10 after the rollback.\n         getMockEndpoint(\"mock:test.before.1\").expectedMessageCount(10);\n         getMockEndpoint(\"mock:test.before.2\").expectedMessageCount(10);\n-        getMockEndpoint(\"mock:test.after.1\").expectedMinimumMessageCount(10);\n+        getMockEndpoint(\"mock:test.after.1\").expectedMessageCount(10);\n         getMockEndpoint(\"mock:test.after.2\").expectedMessageCount(10);\n \n         // Send only 10 messages\n@@ -101,7 +101,7 @@\n                                         // Try failing in two places to\n                                         // ensure we still get the number of messages that\n                                         // we expect across the topics\n-                                        if (body.endsWith(\"6\")) {\n+                                        if (body.endsWith(\"6\") || body.endsWith(\"10\")) {\n                                             log.info(\"5th message received.  Rolling back.\");\n                                             exchange.getOut().setFault(true);\n                                             exchange.getOut().setBody(\"5th message received.  Rolling back.\");\n@@ -129,7 +129,7 @@\n                                         // Try failing in two places to\n                                         // ensure we still get the number of messages that\n                                         // we expect across the topics\n-                                        if (body.endsWith(\"3\") || body.endsWith(\"7\")) {\n+                                        if (body.endsWith(\"3\") || body.endsWith(\"10\")) {\n                                             log.info(\"5th message received.  Rolling back.\");\n                                             exchange.getOut().setFault(true);\n                                             exchange.getOut().setBody(\"5th message received.  Rolling back.\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 49,
        "bugNodeStartChar": 2081,
        "bugNodeLength": 68,
        "fixLineNum": 49,
        "fixNodeStartChar": 2081,
        "fixNodeLength": 61,
        "sourceBeforeFix": "getMockEndpoint(\"mock:test.after.1\").expectedMinimumMessageCount(10)",
        "sourceAfterFix": "getMockEndpoint(\"mock:test.after.1\").expectedMessageCount(10)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6b415679e1fd7d46122b8a4ddadd4fa422c635ca",
        "fixCommitParentSHA1": "e97cd820e3487689109924f2bdce4d5697c5915b",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\nindex 5a16900..eb7eae4 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java\n@@ -327,7 +327,7 @@\n \t\t\t\t\tif (i < start + 2 || i > start + 9) break; // Illegal number of hex digits.\n \t\t\t\t\tColor color = colorPool.obtain();\n \t\t\t\t\tcolorStack.add(color);\n-\t\t\t\t\tColor.rgb888ToColor(color, colorInt);\n+\t\t\t\t\tColor.rgba8888ToColor(color, colorInt);\n \t\t\t\t\tif (i <= start + 7) color.a = 1f; // RRGGBB\n \t\t\t\t\treturn i - start;\n \t\t\t\t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 330,
        "bugNodeStartChar": 12084,
        "bugNodeLength": 36,
        "fixLineNum": 330,
        "fixNodeStartChar": 12084,
        "fixNodeLength": 38,
        "sourceBeforeFix": "Color.rgb888ToColor(color,colorInt)",
        "sourceAfterFix": "Color.rgba8888ToColor(color,colorInt)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "406d52b271b8669c5461c97e88a17480cfd8a674",
        "fixCommitParentSHA1": "258ac300fce65be8caaf6a91eda2f5a5f2612b05",
        "bugFilePath": "src/test/java/redis/clients/jedis/tests/commands/AllKindOfValuesCommandsTest.java",
        "fixPatch": "diff --git a/src/test/java/redis/clients/jedis/tests/commands/AllKindOfValuesCommandsTest.java b/src/test/java/redis/clients/jedis/tests/commands/AllKindOfValuesCommandsTest.java\nindex d7df713..855a35d 100644\n--- a/src/test/java/redis/clients/jedis/tests/commands/AllKindOfValuesCommandsTest.java\n+++ b/src/test/java/redis/clients/jedis/tests/commands/AllKindOfValuesCommandsTest.java\n@@ -300,7 +300,7 @@\n     @Test\n     public void ttl() {\n         long ttl = jedis.ttl(\"foo\");\n-        assertEquals(-1, ttl);\n+        assertEquals(-2, ttl);\n \n         jedis.set(\"foo\", \"bar\");\n         ttl = jedis.ttl(\"foo\");\n@@ -312,7 +312,7 @@\n \n         // Binary\n         long bttl = jedis.ttl(bfoo);\n-        assertEquals(-1, bttl);\n+        assertEquals(-2, bttl);\n \n         jedis.set(bfoo, bbar);\n         bttl = jedis.ttl(bfoo);\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 303,
        "bugNodeStartChar": 7846,
        "bugNodeLength": 2,
        "fixLineNum": 303,
        "fixNodeStartChar": 7846,
        "fixNodeLength": 2,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "-2"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 212,
        "bugNodeStartChar": 6009,
        "bugNodeLength": 119,
        "fixLineNum": 212,
        "fixNodeStartChar": 6009,
        "fixNodeLength": 116,
        "sourceBeforeFix": "GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))",
        "sourceAfterFix": "GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2f77b4e6a3f1ab8bd855476a15a4ab2f6f7ae32c",
        "fixCommitParentSHA1": "53e191bd7b603d8bdaf87cca863dfcfdc689721f",
        "bugFilePath": "community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java",
        "fixPatch": "diff --git a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java\nindex 116be2a..25f3973 100644\n--- a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java\n+++ b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java\n@@ -562,7 +562,7 @@\n     String executeCypher( String cypher )\n     {\n         return engine.execute( cypher )\n-                .toString();\n+                .dumpToString();\n     }\n \n     String executeSql( String sql ) throws SQLException\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 564,
        "bugNodeStartChar": 24201,
        "bugNodeLength": 52,
        "fixLineNum": 564,
        "fixNodeStartChar": 24201,
        "fixNodeLength": 56,
        "sourceBeforeFix": "engine.execute(cypher).toString()",
        "sourceAfterFix": "engine.execute(cypher).dumpToString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dfdb8015332767b0678bff667e07b82a084a86fd",
        "fixCommitParentSHA1": "4b9cb6afeed1b85ca1084bd1d2b72c4bdbf836c0",
        "bugFilePath": "spring-boot-samples/spring-boot-sample-web-ui/src/test/java/sample/ui/MessageControllerWebTests.java",
        "fixPatch": "diff --git a/spring-boot-samples/spring-boot-sample-web-ui/src/test/java/sample/ui/MessageControllerWebTests.java b/spring-boot-samples/spring-boot-sample-web-ui/src/test/java/sample/ui/MessageControllerWebTests.java\nindex 7ba7c35..48cfa67 100755\n--- a/spring-boot-samples/spring-boot-sample-web-ui/src/test/java/sample/ui/MessageControllerWebTests.java\n+++ b/spring-boot-samples/spring-boot-sample-web-ui/src/test/java/sample/ui/MessageControllerWebTests.java\n@@ -68,7 +68,7 @@\n \t@Test\n \tpublic void testCreate() throws Exception {\n \t\tthis.mockMvc.perform(post(\"/\").param(\"text\", \"FOO text\").param(\"summary\", \"FOO\"))\n-\t\t\t\t.andExpect(status().isMovedTemporarily())\n+\t\t\t\t.andExpect(status().isFound())\n \t\t\t\t.andExpect(header().string(\"location\", RegexMatcher.matches(\"/[0-9]+\")));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 71,
        "bugNodeStartChar": 2563,
        "bugNodeLength": 29,
        "fixLineNum": 71,
        "fixNodeStartChar": 2563,
        "fixNodeLength": 18,
        "sourceBeforeFix": "status().isMovedTemporarily()",
        "sourceAfterFix": "status().isFound()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ff34b04700d0417df1049e4d749fdf430076965b",
        "fixCommitParentSHA1": "adff4c86f5a74c13b6b26c7c2ee3db798c93e552",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\nindex eb9a09b..cbc1081 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsJavaDocsTest.java\n@@ -272,7 +272,7 @@\n     }\n \n     private static String getNodeText(Node node, boolean fixLinks) {\n-        final StringBuffer result = new StringBuffer(20);\n+        final StringBuilder result = new StringBuilder(20);\n \n         for (Node child = node.getFirstChild(); child != null; child = child.getNextSibling()) {\n             if (child.getNodeType() == Node.TEXT_NODE) {\n@@ -297,7 +297,7 @@\n     }\n \n     // -@cs[CyclomaticComplexity] No simple way to split this apart.\n-    private static void appendNodeText(StringBuffer result, Node node, boolean fixLinks) {\n+    private static void appendNodeText(StringBuilder result, Node node, boolean fixLinks) {\n         final String name = transformXmlToJavaDocName(node.getNodeName());\n         final boolean list = \"ol\".equals(name) || \"ul\".equals(name);\n         final boolean newLineOpenBefore = list || \"p\".equals(name) || \"pre\".equals(name)\n@@ -351,7 +351,7 @@\n         }\n     }\n \n-    private static boolean shouldAppendSpace(StringBuffer text, char firstCharToAppend) {\n+    private static boolean shouldAppendSpace(StringBuilder text, char firstCharToAppend) {\n         final boolean result;\n \n         if (text.length() == 0) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 275,
        "bugNodeStartChar": 9691,
        "bugNodeLength": 49,
        "fixLineNum": 275,
        "fixNodeStartChar": 9691,
        "fixNodeLength": 51,
        "sourceBeforeFix": "final StringBuffer result=new StringBuffer(20); ",
        "sourceAfterFix": "final StringBuilder result=new StringBuilder(20); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6",
        "fixCommitParentSHA1": "3a55941f33dcd9111d6b61b0505217f47973a39d",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\nindex 07c40e6..afebf11 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\n@@ -32,11 +32,11 @@\n \n /** Tests SuppressElementFilter. */\n public class FilterSetTest {\n-    private CSVFilter filter;\n+    private CsvFilter filter;\n \n     @Before\n     public void setUp() {\n-        filter = new CSVFilter(\"\");\n+        filter = new CsvFilter(\"\");\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 35,
        "bugNodeStartChar": 1481,
        "bugNodeLength": 25,
        "fixLineNum": 35,
        "fixNodeStartChar": 1481,
        "fixNodeLength": 25,
        "sourceBeforeFix": "private CSVFilter filter; ",
        "sourceAfterFix": "private CsvFilter filter; "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6ee3e54020bc8b28badd689fae4cd34948f78e7a",
        "fixCommitParentSHA1": "619460f025719dfa6cf208476b8a176aa59b1947",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\nindex c6b9f1c..43c8670 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n@@ -125,13 +125,13 @@\n     public void testRetweetMethods() throws Exception {\n         List<Status> statuses;\n \n-        statuses = twitter1.getRetweets(18594701629l);\n+        statuses = twitter1.getRetweets(1021608606934822912L);\n         assertNotNull(TwitterObjectFactory.getRawJSON(statuses));\n         assertEquals(statuses.get(0), TwitterObjectFactory.createStatus(TwitterObjectFactory.getRawJSON(statuses.get(0))));\n         assertIsRetweet(statuses);\n-        assertTrue(20 < statuses.size());\n+        assertTrue(2 < statuses.size());\n \n-        IDs retweeters = twitter1.getRetweeterIds(18594701629l, -1);\n+        IDs retweeters = twitter1.getRetweeterIds(1021608606934822912L, -1);\n         assertTrue(0 < retweeters.getIDs().length);\n     }\n \n@@ -213,7 +213,7 @@\n         assertEquals(1, medias.length);\n         MediaEntity media = medias[0];\n         assertEquals(\"pic.twitter.com/qbJx26r\", media.getDisplayURL());\n-        assertEquals(\"http://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n+        assertEquals(\"https://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n         assertEquals(76360760611180544L, media.getId());\n         assertEquals(\"http://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURL());\n         assertEquals(\"https://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURLHttps());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 128,
        "bugNodeStartChar": 7439,
        "bugNodeLength": 34,
        "fixLineNum": 128,
        "fixNodeStartChar": 7439,
        "fixNodeLength": 42,
        "sourceBeforeFix": "twitter1.getRetweets(18594701629l)",
        "sourceAfterFix": "twitter1.getRetweets(1021608606934822912L)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "dd71f595b4d5b44ae6b98a34ef85d23e97187a19",
        "fixCommitParentSHA1": "06ec0d169119cf8ca627c6a992e16a509757f6a2",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java b/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\nindex c5cd3b8..d8c423c 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\n@@ -31,7 +31,7 @@\n  */\n public class RoutePerformanceTest extends ContextTestSupport {\n \n-    private int size = 500;\n+    private int size = 250;\n     private SimpleDataSet dataSet = new SimpleDataSet(size);\n     private String uri = \"mock:results\";\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 34,
        "bugNodeStartChar": 1368,
        "bugNodeLength": 10,
        "fixLineNum": 34,
        "fixNodeStartChar": 1368,
        "fixNodeLength": 10,
        "sourceBeforeFix": "size=500",
        "sourceAfterFix": "size=250"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f4c336b16bb9219f438551ba069707c21e555de5",
        "fixCommitParentSHA1": "bb26c9e1b7ed16c78cf4c3b3ae2d4483c526e5c3",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\nindex 1819120..66740c7 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\n@@ -74,12 +74,12 @@\n \t\t\t\t\tString msg = String.format(\"Failed to rollback to savepoint %s. \" +\n \t\t\t\t\t\t\t\t\t\"Max parallelism mismatch between savepoint state and new program. \" +\n \t\t\t\t\t\t\t\t\t\"Cannot map operator %s with max parallelism %d to new program with \" +\n-\t\t\t\t\t\t\t\t\t\"parallelism %d. This indicates that the program has been changed \" +\n+\t\t\t\t\t\t\t\t\t\"max parallelism %d. This indicates that the program has been changed \" +\n \t\t\t\t\t\t\t\t\t\"in a non-compatible way after the savepoint.\",\n \t\t\t\t\t\t\tsavepoint,\n \t\t\t\t\t\t\ttaskState.getJobVertexID(),\n \t\t\t\t\t\t\ttaskState.getMaxParallelism(),\n-\t\t\t\t\t\t\texecutionJobVertex.getParallelism());\n+\t\t\t\t\t\t\texecutionJobVertex.getMaxParallelism());\n \n \t\t\t\t\tthrow new IllegalStateException(msg);\n \t\t\t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 82,
        "bugNodeStartChar": 3457,
        "bugNodeLength": 35,
        "fixLineNum": 82,
        "fixNodeStartChar": 3457,
        "fixNodeLength": 38,
        "sourceBeforeFix": "executionJobVertex.getParallelism()",
        "sourceAfterFix": "executionJobVertex.getMaxParallelism()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "204c2156da54922cb0bfc9d944036e3503056a2f",
        "fixCommitParentSHA1": "609a3d70cb290251ddc4cc37e87c9c878e6a3b4c",
        "bugFilePath": "src/com/activeandroid/ModelInfo.java",
        "fixPatch": "diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java\nindex f86d05c..0790073 100644\n--- a/src/com/activeandroid/ModelInfo.java\n+++ b/src/com/activeandroid/ModelInfo.java\n@@ -156,7 +156,7 @@\n \t\t\t\t}\n \t\t\t\telse if (ReflectionUtils.isTypeSerializer(discoveredClass)) {\n \t\t\t\t\tTypeSerializer typeSerializer = (TypeSerializer) discoveredClass.newInstance();\n-\t\t\t\t\tmTypeSerializers.put(typeSerializer.getClass(), typeSerializer);\n+\t\t\t\t\tmTypeSerializers.put(typeSerializer.getDeserializedType(), typeSerializer);\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch (ClassNotFoundException e) {\n",
        "projectName": "pardom.ActiveAndroid",
        "bugLineNum": 159,
        "bugNodeStartChar": 4933,
        "bugNodeLength": 25,
        "fixLineNum": 159,
        "fixNodeStartChar": 4933,
        "fixNodeLength": 36,
        "sourceBeforeFix": "typeSerializer.getClass()",
        "sourceAfterFix": "typeSerializer.getDeserializedType()"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "3a564d67f9c0fa529d7c930a0109cff96d882fb8",
        "fixCommitParentSHA1": "e4a6c58306e27be51734776c9634f392b9c97b60",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/dd/DeploymentDescriptorMethodProcessor.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/dd/DeploymentDescriptorMethodProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/dd/DeploymentDescriptorMethodProcessor.java\nindex 45ff387..9dc8ea1 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/dd/DeploymentDescriptorMethodProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/dd/DeploymentDescriptorMethodProcessor.java\n@@ -179,7 +179,7 @@\n             final SessionBeanMetaData sessionBeanMetadata = (SessionBeanMetaData) metaData;\n             // pre-passivate(s) of the interceptor configured (if any) in the deployment descriptor\n             final LifecycleCallbacksMetaData prePassivates = sessionBeanMetadata.getPrePassivates();\n-            if (preDestroys != null) {\n+            if (prePassivates != null) {\n                 for (final LifecycleCallbackMetaData prePassivate : prePassivates) {\n                     final InterceptorClassDescription.Builder builder = InterceptorClassDescription.builder();\n                     final String methodName = prePassivate.getMethodName();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 182,
        "bugNodeStartChar": 10636,
        "bugNodeLength": 19,
        "fixLineNum": 182,
        "fixNodeStartChar": 10636,
        "fixNodeLength": 21,
        "sourceBeforeFix": "preDestroys != null",
        "sourceAfterFix": "prePassivates != null"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d4468b05034b3c4166195394e88eed6633bec842",
        "fixCommitParentSHA1": "1c4a7b96ac6f2d3466702fe92faaf73a82c82742",
        "bugFilePath": "core-common/src/main/java/org/glassfish/jersey/internal/Errors.java",
        "fixPatch": "diff --git a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\nindex 6e4be4b..d73284b 100644\n--- a/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n+++ b/core-common/src/main/java/org/glassfish/jersey/internal/Errors.java\n@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 2012-2015 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012-2016 Oracle and/or its affiliates. All rights reserved.\n  *\n  * The contents of this file are subject to the terms of either the GNU\n  * General Public License Version 2 only (\"GPL\") or the Common Development\n@@ -178,7 +178,7 @@\n                         warnings.append(LocalizationMessages.WARNING_MSG(error.getMessage())).append('\\n');\n                         break;\n                     case HINT:\n-                        warnings.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n+                        hints.append(LocalizationMessages.HINT_MSG(error.getMessage())).append('\\n');\n                         break;\n                 }\n             }\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 181,
        "bugNodeStartChar": 7205,
        "bugNodeLength": 66,
        "fixLineNum": 181,
        "fixNodeStartChar": 7205,
        "fixNodeLength": 63,
        "sourceBeforeFix": "warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))",
        "sourceAfterFix": "hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e56cc97612a07cedd5c67ff3c3b1e22bee525dfb",
        "fixCommitParentSHA1": "d17d59b2b28c796b7e978e8642c8c31a59b4e08d",
        "bugFilePath": "components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java",
        "fixPatch": "diff --git a/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java b/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\nindex d57850e..9b903da 100644\n--- a/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\n+++ b/components/camel-netty4/src/main/java/org/apache/camel/component/netty4/codec/DatagramPacketObjectEncoder.java\n@@ -39,10 +39,10 @@\n                           List<Object> out) throws Exception {\n         if (msg.content() instanceof Serializable) {\n             Serializable payload = (Serializable) msg.content();\n-            ByteBuf buf = ctx.alloc().heapBuffer();\n+            ByteBuf buf = ctx.alloc().buffer();\n             delegateObjectEncoder.encode(ctx, payload, buf);\n             AddressedEnvelope<Object, InetSocketAddress> addressedEnvelop = \n-                new DefaultAddressedEnvelope<Object, InetSocketAddress>(buf.retain(), msg.recipient(), msg.sender());\n+                new DefaultAddressedEnvelope<Object, InetSocketAddress>(buf, msg.recipient(), msg.sender());\n             out.add(addressedEnvelop);\n         }\n         \n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1833,
        "bugNodeLength": 24,
        "fixLineNum": 42,
        "fixNodeStartChar": 1833,
        "fixNodeLength": 20,
        "sourceBeforeFix": "ctx.alloc().heapBuffer()",
        "sourceAfterFix": "ctx.alloc().buffer()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "3e1c4d53a4730e2660c191def7615501a6fe982f",
        "fixCommitParentSHA1": "343d8ad1d36b18ab8d697bfcc2c3566bae34229b",
        "bugFilePath": "modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex df1d55f..739a52d 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -445,7 +445,7 @@\n             final AnnotatedMember member = propDef.getPrimaryMember();\n             if (member != null && !ignore(member, xmlAccessorTypeAnnotation, propName, propertiesToIgnore)) {\n \n-                JavaType propType = member.getType(beanDesc.bindingsForBeanType());\n+                JavaType propType = member.getType();\n                 property = resolveAnnotatedType(propType, member, propName, context, model, (t, a) -> {\n                     JsonUnwrapped uw = member.getAnnotation(JsonUnwrapped.class);\n                     if (uw != null && uw.enabled()) {\n@@ -636,7 +636,7 @@\n                     final String name = def.getName();\n                     if (name != null && name.equals(propertyName)) {\n                         final AnnotatedMember propMember = def.getPrimaryMember();\n-                        final JavaType propType = propMember.getType(beanDesc.bindingsForBeanType());\n+                        final JavaType propType = propMember.getType();\n                         if (PrimitiveType.fromType(propType) != null) {\n                             return PrimitiveType.createProperty(propType);\n                         } else {\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 448,
        "bugNodeStartChar": 19757,
        "bugNodeLength": 46,
        "fixLineNum": 448,
        "fixNodeStartChar": 19757,
        "fixNodeLength": 16,
        "sourceBeforeFix": "member.getType(beanDesc.bindingsForBeanType())",
        "sourceAfterFix": "member.getType()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "000334ea2a717a2b5bf2a61f021aad85bb79d9cb",
        "fixCommitParentSHA1": "56910ddee72b670983f2c402192c34619bd680ce",
        "bugFilePath": "nd4j/nd4j-tensorflow/src/main/java/org/nd4j/tensorflow/conversion/TensorflowConversion.java",
        "fixPatch": "diff --git a/nd4j/nd4j-tensorflow/src/main/java/org/nd4j/tensorflow/conversion/TensorflowConversion.java b/nd4j/nd4j-tensorflow/src/main/java/org/nd4j/tensorflow/conversion/TensorflowConversion.java\nindex c5ae881..b47cd30 100644\n--- a/nd4j/nd4j-tensorflow/src/main/java/org/nd4j/tensorflow/conversion/TensorflowConversion.java\n+++ b/nd4j/nd4j-tensorflow/src/main/java/org/nd4j/tensorflow/conversion/TensorflowConversion.java\n@@ -296,7 +296,7 @@\n      * @return\n      */\n     public static String defaultDeviceForThread() {\n-        Integer deviceForThread = Nd4j.getAffinityManager().getDeviceForThread(Thread.currentThread());\n+        Integer deviceForThread = Nd4j.getAffinityManager().getDeviceForCurrentThread();\n         String deviceName = null;\n         //gpu\n         if(Nd4j.getBackend().getClass().getName().contains(\"JCublasBackend\")) {\n",
        "projectName": "deeplearning4j.deeplearning4j",
        "bugLineNum": 299,
        "bugNodeStartChar": 11583,
        "bugNodeLength": 68,
        "fixLineNum": 299,
        "fixNodeStartChar": 11583,
        "fixNodeLength": 53,
        "sourceBeforeFix": "Nd4j.getAffinityManager().getDeviceForThread(Thread.currentThread())",
        "sourceAfterFix": "Nd4j.getAffinityManager().getDeviceForCurrentThread()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "5c2c075b4b31b12c4970f6a77ab0cc6e3702421a",
        "fixCommitParentSHA1": "b4a6dbd103ec611f70879cfc78fc5cce5c63a4e6",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex 421ad83..dfc12a3 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -208,7 +208,7 @@\n             if (asyncHttpProviderConfig.getProperty(NettyAsyncHttpProviderConfig.EXECUTE_ASYNC_CONNECT) != null) {\n                 executeConnectAsync = true;\n             } else if (asyncHttpProviderConfig.getProperty(NettyAsyncHttpProviderConfig.DISABLE_NESTED_REQUEST) != null) {\n-                DefaultChannelFuture.setUseDeadLockChecker(false);\n+                DefaultChannelFuture.setUseDeadLockChecker(true);\n             }\n         }\n     }\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 211,
        "bugNodeStartChar": 9249,
        "bugNodeLength": 49,
        "fixLineNum": 211,
        "fixNodeStartChar": 9249,
        "fixNodeLength": 48,
        "sourceBeforeFix": "DefaultChannelFuture.setUseDeadLockChecker(false)",
        "sourceAfterFix": "DefaultChannelFuture.setUseDeadLockChecker(true)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "cc3afab8cec819419e52eb1fdc990625e0afd688",
        "fixCommitParentSHA1": "37e4372f2e5fb00241ad9514bbd4bee12e24d896",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 31b5ff0..411c7b0 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -52,7 +52,7 @@\n \n   public static void createFiles() throws IOException {\n     long startTimeMs = CommonUtils.getCurrentMs();\n-    for (int k = 0; k < THREADS; k ++) {\n+    for (int k = 0; k < FILES; k++) {\n       int fileId = MTC.createFile(FILE_NAME + (k + BASE_FILE_NUMBER));\n       CommonUtils.printTimeTakenMs(startTimeMs, LOG, \"user_createFiles with fileId \" + fileId);\n     }\n@@ -109,7 +109,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -134,7 +134,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -180,7 +180,7 @@\n       mBuf.flip();\n       for (int pId = mLeft; pId < mRight; pId ++) {\n         long startTimeMs = System.currentTimeMillis();\n-        TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+        TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n         OutStream os = file.getOutStream(WriteType.MUST_CACHE);\n         for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n           mBuf.putInt(0, k + mWorkerId);\n@@ -216,7 +216,7 @@\n         LOG.info(\"Verifying the reading data...\");\n \n         for (int pId = mLeft; pId < mRight; pId ++) {\n-          TachyonFile file = mTC.getFile(FILE_NAME + mWorkerId);\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           IntBuffer intBuf;\n           intBuf = buf.DATA.order(ByteOrder.nativeOrder()).asIntBuffer();\n@@ -238,7 +238,7 @@\n       if (TACHYON_STREAMING_READ) {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           InputStream is = file.getInStream(ReadType.CACHE);\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n@@ -253,7 +253,7 @@\n       } else {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             buf.DATA.get(mBuf.array());\n@@ -323,7 +323,7 @@\n       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n             mBuf.putInt(0, k + mWorkerId);\n@@ -335,7 +335,7 @@\n       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 256,
        "bugNodeStartChar": 8463,
        "bugNodeLength": 28,
        "fixLineNum": 256,
        "fixNodeStartChar": 8463,
        "fixNodeLength": 22,
        "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER",
        "sourceAfterFix": "pId + BASE_FILE_NUMBER"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 98,
        "bugNodeStartChar": 3122,
        "bugNodeLength": 79,
        "fixLineNum": 98,
        "fixNodeStartChar": 3122,
        "fixNodeLength": 76,
        "sourceBeforeFix": "GL.glCopyTexSubImage2DEXT(target,level,xoffset,yoffset,x,y,width,height)",
        "sourceAfterFix": "GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dbd841562137595e365ccf2ad1524ecfdee958c9",
        "fixCommitParentSHA1": "7a86ce9f50025df73cb31bc8561430f85b04d713",
        "bugFilePath": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java",
        "fixPatch": "diff --git a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\nindex d9a3a7b..9c20e8c 100644\n--- a/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n+++ b/factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java\n@@ -94,7 +94,7 @@\n \n     ImmutableListMultimap.Builder<String, FactoryMethodDescriptor> indexedMethods =\n         ImmutableListMultimap.builder();\n-    ImmutableSet.Builder<ImplemetationMethodDescriptor> implemetationMethodDescriptors =\n+    ImmutableSet.Builder<ImplementationMethodDescriptor> implementationMethodDescriptors =\n         ImmutableSet.builder();\n     for (Element element : roundEnv.getElementsAnnotatedWith(AutoFactory.class)) {\n       Optional<AutoFactoryDeclaration> declaration = declarationFactory.createIfValid(element);\n@@ -106,7 +106,7 @@\n           if (supertypeMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n             ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                 types, supertypeMethod, extendingType);\n-            implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+            implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                 .name(supertypeMethod.getSimpleName().toString())\n                 .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                 .publicMethod()\n@@ -122,7 +122,7 @@\n             if (interfaceMethod.getModifiers().contains(Modifier.ABSTRACT)) {\n               ExecutableType methodType = Elements2.getExecutableElementAsMemberOf(\n                   types, interfaceMethod, implementingType);\n-              implemetationMethodDescriptors.add(new ImplemetationMethodDescriptor.Builder()\n+              implementationMethodDescriptors.add(new ImplementationMethodDescriptor.Builder()\n                   .name(interfaceMethod.getSimpleName().toString())\n                   .returnType(getAnnotatedType(element).getQualifiedName().toString())\n                   .publicMethod()\n@@ -165,7 +165,7 @@\n                 publicType,\n                 ImmutableSet.copyOf(entry.getValue()),\n                 // TODO(gak): this needs to be indexed too\n-                implemetationMethodDescriptors.build()));\n+                implementationMethodDescriptors.build()));\n       } catch (IOException e) {\n         messager.printMessage(Kind.ERROR, \"failed\");\n       }\n",
        "projectName": "google.auto",
        "bugLineNum": 97,
        "bugNodeStartChar": 3535,
        "bugNodeLength": 51,
        "fixLineNum": 97,
        "fixNodeStartChar": 3535,
        "fixNodeLength": 52,
        "sourceBeforeFix": "ImmutableSet.Builder<ImplemetationMethodDescriptor>",
        "sourceAfterFix": "ImmutableSet.Builder<ImplementationMethodDescriptor>"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dd20434290eb6ae6dff133d70073e35a3998d362",
        "fixCommitParentSHA1": "cb0dee8b09d8cd27f0b817b0317b68501fbac924",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex 989bda8..92adc88 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -121,7 +121,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -158,7 +158,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -232,7 +232,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -292,7 +292,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -318,14 +318,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 321,
        "bugNodeStartChar": 11493,
        "bugNodeLength": 59,
        "fixLineNum": 321,
        "fixNodeStartChar": 11493,
        "fixNodeLength": 54,
        "sourceBeforeFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 111,
        "bugNodeStartChar": 4786,
        "bugNodeLength": 10,
        "fixLineNum": 111,
        "fixNodeStartChar": 4786,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15804",
        "sourceAfterFix": "id=10804"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fa829ec763703ed534b7fa1d79271857a28f4142",
        "fixCommitParentSHA1": "20f2e3ba56c27ab9afe4acb59dce86b639bbdd78",
        "bugFilePath": "bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComTemperatureRainMessage.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComTemperatureRainMessage.java b/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComTemperatureRainMessage.java\nindex 8410fb9..0012bf3 100644\n--- a/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComTemperatureRainMessage.java\n+++ b/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComTemperatureRainMessage.java\n@@ -108,9 +108,9 @@\n \n     @Override\n     public byte[] decodeMessage() {\n-        byte[] data = new byte[10];\n+        byte[] data = new byte[11];\n \n-        data[0] = 0x0B;\n+        data[0] = (byte)(data.length-1);\n         data[1] = RFXComBaseMessage.PacketType.TEMPERATURE_RAIN.toByte();\n         data[2] = subType.toByte();\n         data[3] = seqNbr;\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 111,
        "bugNodeStartChar": 3288,
        "bugNodeLength": 12,
        "fixLineNum": 111,
        "fixNodeStartChar": 3288,
        "fixNodeLength": 12,
        "sourceBeforeFix": "new byte[10]",
        "sourceAfterFix": "new byte[11]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3d3aad91880410164be0372875fe702af44fa279",
        "fixCommitParentSHA1": "ddafeb24041d0ea2fd85d92115f08b84fc77e662",
        "bugFilePath": "core/server/worker/src/main/java/alluxio/worker/block/meta/StorageTier.java",
        "fixPatch": "diff --git a/core/server/worker/src/main/java/alluxio/worker/block/meta/StorageTier.java b/core/server/worker/src/main/java/alluxio/worker/block/meta/StorageTier.java\nindex 4eb6e79..99b84e5 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/meta/StorageTier.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/meta/StorageTier.java\n@@ -119,7 +119,7 @@\n     try {\n       info = ShellUtils.getUnixMountInfo();\n     } catch (IOException e) {\n-      LOG.warn(\"Failed to get mount information: {}\", e.getMessage());\n+      LOG.debug(\"Failed to get mount information: {}\", e.getMessage());\n       return;\n     }\n     for (UnixMountInfo mountInfo : info) {\n@@ -142,8 +142,9 @@\n       if ((fsType.equalsIgnoreCase(\"tmpfs\") || fsType.equalsIgnoreCase(\"ramfs\"))\n           && size < storageDir.getCapacityBytes()) {\n         throw new IllegalStateException(String.format(\n-            \"tmpfs is smaller than the configured size: tmpfs size: %s, configured size: %s\", size,\n-            storageDir.getCapacityBytes()));\n+            \"tmpfs is smaller than the configured size: tmpfs size: %s, configured size: %s\",\n+            FormatUtils.getSizeFromBytes(size),\n+            FormatUtils.getSizeFromBytes(storageDir.getCapacityBytes())));\n       }\n     }\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 122,
        "bugNodeStartChar": 4678,
        "bugNodeLength": 63,
        "fixLineNum": 122,
        "fixNodeStartChar": 4678,
        "fixNodeLength": 64,
        "sourceBeforeFix": "LOG.warn(\"Failed to get mount information: {}\",e.getMessage())",
        "sourceAfterFix": "LOG.debug(\"Failed to get mount information: {}\",e.getMessage())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a975408b7c90e2d545a7a490687cddb717d43807",
        "fixCommitParentSHA1": "29a192ef3cbe3b9cc12a6ee38f39e1199ac9790f",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\nindex 7242791..85b3913 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\n@@ -460,7 +460,7 @@\n \n   public static boolean matchingRow(final Cell left, final byte[] buf) {\n     if (buf == null) {\n-      return left.getQualifierLength() == 0;\n+      return left.getRowLength() == 0;\n     }\n     return matchingRow(left, buf, 0, buf.length);\n   }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 463,
        "bugNodeStartChar": 16750,
        "bugNodeLength": 25,
        "fixLineNum": 463,
        "fixNodeStartChar": 16750,
        "fixNodeLength": 19,
        "sourceBeforeFix": "left.getQualifierLength()",
        "sourceAfterFix": "left.getRowLength()"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "dacf0f9826f67cbb4f6773c79ebacbaa1b9deb03",
        "fixCommitParentSHA1": "6eeda76af7ba6d298299277a56fb5ac4cf72c8b2",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java\nindex ddc765a..73f3025 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.java\n@@ -125,7 +125,7 @@\n \t\t\t\t\tclusterProperties.getNodes());\n \n \t\t\tif (clusterProperties.getMaxRedirects() != null) {\n-\t\t\t\tconfig.setMaxRedirects(config.getMaxRedirects());\n+\t\t\t\tconfig.setMaxRedirects(clusterProperties.getMaxRedirects());\n \t\t\t}\n \t\t\treturn config;\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 128,
        "bugNodeStartChar": 4879,
        "bugNodeLength": 24,
        "fixLineNum": 128,
        "fixNodeStartChar": 4879,
        "fixNodeLength": 35,
        "sourceBeforeFix": "config.getMaxRedirects()",
        "sourceAfterFix": "clusterProperties.getMaxRedirects()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
        "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
        "bugFilePath": "modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java",
        "fixPatch": "diff --git a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\nindex d5cf7ae..b90a554 100644\n--- a/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti5-engine/src/main/java/org/activiti5/engine/impl/interceptor/CommandContext.java\n@@ -171,7 +171,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 174,
        "bugNodeStartChar": 8013,
        "bugNodeLength": 59,
        "fixLineNum": 174,
        "fixNodeStartChar": 8013,
        "fixNodeLength": 59,
        "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
        "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "9ec7c71e0fa14638eb82f170e7a57433b2951417",
        "fixCommitParentSHA1": "61ceadbd579408106c9ea79ab58bc6ed9119b557",
        "bugFilePath": "server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java",
        "fixPatch": "diff --git a/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java b/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\nindex 2da5854..19c104a 100644\n--- a/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\n+++ b/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\n@@ -63,7 +63,7 @@\n                         null\n                     )\n                 ),\n-                null, null, null\n+                null, null, null, null\n             ),\n             new AggregatorFactory[]{\n                 new CountAggregatorFactory(\"count\")\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 54,
        "bugNodeStartChar": 1968,
        "bugNodeLength": 432,
        "fixLineNum": 54,
        "fixNodeStartChar": 1968,
        "fixNodeLength": 438,
        "sourceBeforeFix": "new StringInputRowParser(new JSONParseSpec(new TimestampSpec(\"timestamp\",\"auto\"),new DimensionsSpec(Arrays.asList(\"dim1\",\"dim2\"),null,null)),null,null,null)",
        "sourceAfterFix": "new StringInputRowParser(new JSONParseSpec(new TimestampSpec(\"timestamp\",\"auto\"),new DimensionsSpec(Arrays.asList(\"dim1\",\"dim2\"),null,null)),null,null,null,null)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "cffa2d9c2a33800708e8835ac6be9ccdbcfdc7ae",
        "fixCommitParentSHA1": "6011c8baf644ce8d0fa8c670d4806740267efefb",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\nindex 87bf583..776f804 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n@@ -91,7 +91,7 @@\n \n public class ClientConnectionManagerImpl extends MembershipAdapter implements ClientConnectionManager, MembershipListener {\n \n-    static final int BUFFER_SIZE = 16 << 10;\n+    static final int BUFFER_SIZE = 32 << 10;\n     // 32k\n \n     static final int KILO_BYTE = 1024;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 94,
        "bugNodeStartChar": 4175,
        "bugNodeLength": 8,
        "fixLineNum": 94,
        "fixNodeStartChar": 4175,
        "fixNodeLength": 8,
        "sourceBeforeFix": "16 << 10",
        "sourceAfterFix": "32 << 10"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0b70c36eb0dff06c81010d1569797c727712bddd",
        "fixCommitParentSHA1": "2ebdce20b1797858f8b20144eabfb46e3574f3e0",
        "bugFilePath": "core/src/main/java/org/apache/druid/math/expr/ExprEval.java",
        "fixPatch": "diff --git a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\nindex 2b649d4..4dad810 100644\n--- a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n+++ b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n@@ -197,7 +197,7 @@\n           return this;\n         case LONG:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofLong(null);\n           } else {\n             return ExprEval.of(asLong());\n           }\n@@ -239,7 +239,7 @@\n       switch (castTo) {\n         case DOUBLE:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofDouble(null);\n           } else {\n             return ExprEval.of(asDouble());\n           }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 242,
        "bugNodeStartChar": 5501,
        "bugNodeLength": 17,
        "fixLineNum": 242,
        "fixNodeStartChar": 5501,
        "fixNodeLength": 23,
        "sourceBeforeFix": "ExprEval.of(null)",
        "sourceAfterFix": "ExprEval.ofDouble(null)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 580,
        "bugNodeStartChar": 28062,
        "bugNodeLength": 118,
        "fixLineNum": 580,
        "fixNodeStartChar": 28062,
        "fixNodeLength": 118,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 696,
        "bugNodeStartChar": 34519,
        "bugNodeLength": 135,
        "fixLineNum": 696,
        "fixNodeStartChar": 34519,
        "fixNodeLength": 135,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,paging.asPostParameterList(),true))"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "c64fbc67c3358437202bb923b45037e5921942d4",
        "fixCommitParentSHA1": "f0ec6ef2e90b01d40f4c03d92021fc85c88800a4",
        "bugFilePath": "security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java",
        "fixPatch": "diff --git a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\nindex ce3d19f..3354a04 100644\n--- a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n+++ b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n@@ -86,7 +86,7 @@\n      * @return {@link Consumer} object for the newly registered consumer.\n      */\n     public Consumer registerConsumer(final String owner, final MultivaluedMap<String, String> attributes) {\n-        return registerConsumer(newUUIDString(), newUUIDString(), owner, attributes);\n+        return registerConsumer(owner, newUUIDString(), newUUIDString(), attributes);\n     }\n \n     /**\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 89,
        "bugNodeStartChar": 4051,
        "bugNodeLength": 69,
        "fixLineNum": 89,
        "fixNodeStartChar": 4051,
        "fixNodeLength": 69,
        "sourceBeforeFix": "registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)",
        "sourceAfterFix": "registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "884163c6775a5600123a026c4cd7e0d91b57338e",
        "fixCommitParentSHA1": "cc021433b0fb4f166081e0e8aef1928d2e57a021",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/internal/dynamicconfig/ClusterWideConfigurationService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/dynamicconfig/ClusterWideConfigurationService.java b/hazelcast/src/main/java/com/hazelcast/internal/dynamicconfig/ClusterWideConfigurationService.java\nindex 9d84fcb..ac4e3d9 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/dynamicconfig/ClusterWideConfigurationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/dynamicconfig/ClusterWideConfigurationService.java\n@@ -318,7 +318,7 @@\n \n     private void registerEventJournalConfig(EventJournalConfig eventJournalConfig, ConfigCheckMode configCheckMode) {\n         String mapName = eventJournalConfig.getMapName();\n-        String cacheName = eventJournalConfig.getMapName();\n+        String cacheName = eventJournalConfig.getCacheName();\n         synchronized (journalMutex) {\n             EventJournalConfig currentMapJournalConfig = null;\n             if (mapName != null) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 321,
        "bugNodeStartChar": 16058,
        "bugNodeLength": 31,
        "fixLineNum": 321,
        "fixNodeStartChar": 16058,
        "fixNodeLength": 33,
        "sourceBeforeFix": "eventJournalConfig.getMapName()",
        "sourceAfterFix": "eventJournalConfig.getCacheName()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f9c863f126519ad2cfd7af4cef3eed04e8f87ea3",
        "fixCommitParentSHA1": "5bc5afe6ab16d53a0bbfbf022f4a5016d8782a91",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\nindex 44ab970..f11e267 100644\n--- a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n@@ -533,7 +533,7 @@\n         mw.visitVarInsn(ALOAD, context.var(\"out\"));\n         mw.visitVarInsn(ILOAD, context.var(\"seperator\"));\n         mw.visitVarInsn(ALOAD, context.fieldName());\n-        mw.visitVarInsn(LLOAD, context.var(\"long\"));\n+        mw.visitVarInsn(LLOAD, context.var(\"long\", 2));\n         mw.visitMethodInsn(INVOKEVIRTUAL, getType(SerializeWriter.class), \"writeFieldValue\", \"(CLjava/lang/String;J)V\");\n \n         _seperator(mw, context);\n@@ -566,14 +566,14 @@\n \n         _nameApply(mw, property, context, _end);\n         _get(mw, context, property);\n-        mw.visitVarInsn(DSTORE, context.var(\"double\"));\n+        mw.visitVarInsn(DSTORE, context.var(\"double\", 2));\n \n         _filters(mw, property, context, _end);\n \n         mw.visitVarInsn(ALOAD, context.var(\"out\"));\n         mw.visitVarInsn(ILOAD, context.var(\"seperator\"));\n         mw.visitVarInsn(ALOAD, context.fieldName());\n-        mw.visitVarInsn(DLOAD, context.var(\"double\"));\n+        mw.visitVarInsn(DLOAD, context.var(\"double\", 2));\n         mw.visitMethodInsn(INVOKEVIRTUAL, getType(SerializeWriter.class), \"writeFieldValue\", \"(CLjava/lang/String;D)V\");\n \n         _seperator(mw, context);\n@@ -1080,7 +1080,7 @@\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"apply\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Z\");\n         } else if (propertyClass == long.class) {\n-            mw.visitVarInsn(LLOAD, context.var(\"long\"));\n+            mw.visitVarInsn(LLOAD, context.var(\"long\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"apply\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Z\");\n         } else if (propertyClass == float.class) {\n@@ -1088,7 +1088,7 @@\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"apply\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;F)Z\");\n         } else if (propertyClass == double.class) {\n-            mw.visitVarInsn(DLOAD, context.var(\"double\"));\n+            mw.visitVarInsn(DLOAD, context.var(\"double\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"apply\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;D)Z\");\n         } else if (propertyClass == boolean.class) {\n@@ -1138,13 +1138,13 @@\n             mw.visitVarInsn(ILOAD, context.var(\"char\"));\n             mw.visitMethodInsn(INVOKESTATIC, getType(Character.class), \"valueOf\", \"(C)Ljava/lang/Character;\");\n         } else if (propertyClass == long.class) {\n-            mw.visitVarInsn(LLOAD, context.var(\"long\"));\n+            mw.visitVarInsn(LLOAD, context.var(\"long\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(Long.class), \"valueOf\", \"(J)Ljava/lang/Long;\");\n         } else if (propertyClass == float.class) {\n             mw.visitVarInsn(FLOAD, context.var(\"float\"));\n             mw.visitMethodInsn(INVOKESTATIC, getType(Float.class), \"valueOf\", \"(F)Ljava/lang/Float;\");\n         } else if (propertyClass == double.class) {\n-            mw.visitVarInsn(DLOAD, context.var(\"double\"));\n+            mw.visitVarInsn(DLOAD, context.var(\"double\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(Double.class), \"valueOf\", \"(D)Ljava/lang/Double;\");\n         } else if (propertyClass == boolean.class) {\n             mw.visitVarInsn(ILOAD, context.var(\"boolean\"));\n@@ -1196,7 +1196,7 @@\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Ljava/lang/String;\");\n         } else if (propertyClass == long.class) {\n-            mw.visitVarInsn(LLOAD, context.var(\"long\"));\n+            mw.visitVarInsn(LLOAD, context.var(\"long\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/String;\");\n         } else if (propertyClass == float.class) {\n@@ -1204,7 +1204,7 @@\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;F)Ljava/lang/String;\");\n         } else if (propertyClass == double.class) {\n-            mw.visitVarInsn(DLOAD, context.var(\"double\"));\n+            mw.visitVarInsn(DLOAD, context.var(\"double\", 2));\n             mw.visitMethodInsn(INVOKESTATIC, getType(FilterUtils.class), \"processKey\",\n                                \"(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;D)Ljava/lang/String;\");\n         } else if (propertyClass == boolean.class) {\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 1207,
        "bugNodeStartChar": 52149,
        "bugNodeLength": 21,
        "fixLineNum": 1207,
        "fixNodeStartChar": 52149,
        "fixNodeLength": 24,
        "sourceBeforeFix": "context.var(\"double\")",
        "sourceAfterFix": "context.var(\"double\",2)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2956fca2f1fd1c8609d682fa58e72e3ccc54826a",
        "fixCommitParentSHA1": "4266cf6a0325835e4cd71172afc17989955bebbd",
        "bugFilePath": "components/camel-reactor/src/main/java/org/apache/camel/component/reactor/engine/ReactorCamelProcessor.java",
        "fixPatch": "diff --git a/components/camel-reactor/src/main/java/org/apache/camel/component/reactor/engine/ReactorCamelProcessor.java b/components/camel-reactor/src/main/java/org/apache/camel/component/reactor/engine/ReactorCamelProcessor.java\nindex 548cace..d3c270f 100644\n--- a/components/camel-reactor/src/main/java/org/apache/camel/component/reactor/engine/ReactorCamelProcessor.java\n+++ b/components/camel-reactor/src/main/java/org/apache/camel/component/reactor/engine/ReactorCamelProcessor.java\n@@ -49,12 +49,11 @@\n         this.camelProducer = null;\n         this.camelSink = new AtomicReference<>();\n \n-\n-        // TODO: A emitter processor with buffer-size 0 would be perfect\n-        // The effect of having a prefetch of 1 element is that the chain buffers at least 2 elements instead of only one\n-        // (one in the FluxSink and one in the EmitterProcessor) when using the \"latest\" or \"oldest\" strategy.\n-        // This affects slightly the behavior of the backpressure strategy \"latest\" (but it doesn't change the semantics).\n-        this.publisher = EmitterProcessor.create(1);\n+        // TODO: The perfect emitter processor would have no buffer (0 sized)\n+        // The chain caches one more item than expected.\n+        // This implementation has (almost) full control over backpressure, but it's too chatty.\n+        // There's a ticket to improve chattiness of the reactive-streams internal impl.\n+        this.publisher = EmitterProcessor.create(1, false);\n     }\n \n     @Override\n@@ -76,7 +75,7 @@\n             detach();\n \n             ReactiveStreamsBackpressureStrategy strategy = producer.getEndpoint().getBackpressureStrategy();\n-            Flux<Exchange> flux = Flux.create(camelSink::set);\n+            Flux<Exchange> flux = Flux.create(camelSink::set, FluxSink.OverflowStrategy.IGNORE);\n \n             if (ObjectHelper.equal(strategy, ReactiveStreamsBackpressureStrategy.OLDEST)) {\n                 // signal item emitted for non-dropped items only\n",
        "projectName": "apache.camel",
        "bugLineNum": 79,
        "bugNodeStartChar": 3335,
        "bugNodeLength": 27,
        "fixLineNum": 79,
        "fixNodeStartChar": 3335,
        "fixNodeLength": 61,
        "sourceBeforeFix": "Flux.create(camelSink::set)",
        "sourceAfterFix": "Flux.create(camelSink::set,FluxSink.OverflowStrategy.IGNORE)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\nindex 50f43e2..8259c17 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n@@ -35,10 +35,10 @@\n \n     private TransactionManager transactionManager;\n \n-    @Resource(name = \"java:jboss/mail\")\n+    @Resource(lookup = \"java:jboss/mail\")\n     private Context context;\n \n-    @Resource(name = \"java:/TransactionManager\")\n+    @Resource(lookup = \"java:/TransactionManager\")\n     public void setTransactionManager(TransactionManager transactionManager) {\n         this.transactionManager = transactionManager;\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 38,
        "bugNodeStartChar": 1339,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1339,
        "fixNodeLength": 26,
        "sourceBeforeFix": "name=\"java:jboss/mail\"",
        "sourceAfterFix": "lookup=\"java:jboss/mail\""
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1a5ec9791516322cfeb14508732b4a7025bef2e0",
        "fixCommitParentSHA1": "0283dec62a767c1ce3b7777423ca0bfc25a6d9c1",
        "bugFilePath": "src/main/java/org/graylog2/restclient/models/Extractor.java",
        "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Extractor.java b/src/main/java/org/graylog2/restclient/models/Extractor.java\nindex 3b6f22c..0a0921a 100644\n--- a/src/main/java/org/graylog2/restclient/models/Extractor.java\n+++ b/src/main/java/org/graylog2/restclient/models/Extractor.java\n@@ -185,7 +185,7 @@\n         request.conditionValue = conditionValue;\n         request.order = order;\n \n-        final Map response = api.path(routes.ExtractorsResource().list(input.getId()), Map.class)\n+        final Map response = api.path(routes.ExtractorsResource().create(input.getId()), Map.class)\n                 .node(node)\n                 .expect(Http.Status.CREATED)\n                 .body(request)\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 188,
        "bugNodeStartChar": 6896,
        "bugNodeLength": 47,
        "fixLineNum": 188,
        "fixNodeStartChar": 6896,
        "fixNodeLength": 49,
        "sourceBeforeFix": "routes.ExtractorsResource().list(input.getId())",
        "sourceAfterFix": "routes.ExtractorsResource().create(input.getId())"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "eebcaa5425216fdc9a9c4349090fa68c6a2504d3",
        "fixCommitParentSHA1": "43e4684a43da4b8232bf59e1028f3e77d253d61c",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\nindex f0aabd9..0b06f01 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n@@ -1067,12 +1067,12 @@\n       ResultSet tables = null;\n \n       String catalog = this.connectionMetadataDefaultCatalog;\n-      if (dbSqlSessionFactory.getDatabaseCatalog() != null) {\n+      if (dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0) {\n         catalog = dbSqlSessionFactory.getDatabaseCatalog();\n       }\n \n       String schema = this.connectionMetadataDefaultSchema;\n-      if (dbSqlSessionFactory.getDatabaseSchema()!=null) {\n+      if (dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0) {\n         schema = dbSqlSessionFactory.getDatabaseSchema();\n       }\n       \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 1070,
        "bugNodeStartChar": 40146,
        "bugNodeLength": 48,
        "fixLineNum": 1070,
        "fixNodeStartChar": 40146,
        "fixNodeLength": 105,
        "sourceBeforeFix": "dbSqlSessionFactory.getDatabaseCatalog() != null",
        "sourceAfterFix": "dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "72d409c6065de1209ad00289f147b0f65accef16",
        "fixCommitParentSHA1": "f9184624f18094beb1bb7e9f60e5665225dfb0ee",
        "bugFilePath": "storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java b/storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java\nindex 774e8fd..764c198 100644\n--- a/storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java\n+++ b/storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java\n@@ -38,7 +38,7 @@\n                 Integer workerCount = distribution.get(executorCount);\n                 if (workerCount != null && workerCount > 0) {\n                     slots.add(entry.getKey());\n-                    executorCount--;\n+                    workerCount--;\n                     distribution.put(executorCount, workerCount);\n                 }\n             }\n",
        "projectName": "apache.storm",
        "bugLineNum": 41,
        "bugNodeStartChar": 1766,
        "bugNodeLength": 15,
        "fixLineNum": 41,
        "fixNodeStartChar": 1766,
        "fixNodeLength": 13,
        "sourceBeforeFix": "executorCount--",
        "sourceAfterFix": "workerCount--"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "cb1dc659281f50d33e4039bbc2804a724f08649c",
        "fixCommitParentSHA1": "43fcca94b404cc6658c7b89a21e9d4e21bf260db",
        "bugFilePath": "src/web/org/openmrs/module/web/WebModuleUtil.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/module/web/WebModuleUtil.java b/src/web/org/openmrs/module/web/WebModuleUtil.java\nindex 6ed18eb..e4f9b18 100644\n--- a/src/web/org/openmrs/module/web/WebModuleUtil.java\n+++ b/src/web/org/openmrs/module/web/WebModuleUtil.java\n@@ -313,7 +313,7 @@\n \t\t\t\t\t\tlog.warn(msg + \" for module: \" + mod.getModuleId(), e);\r\n \t\t\t\t\t\r\n \t\t\t\t\ttry {\r\n-\t\t\t\t\t\tModuleFactory.stopModule(mod); //remove jar from classloader play \r\n+\t\t\t\t\t\tModuleFactory.stopModule(mod, true, true); //remove jar from classloader play \r\n \t\t\t\t\t\tstopModule(mod, servletContext, true);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tcatch (Exception e2) {\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 316,
        "bugNodeStartChar": 12101,
        "bugNodeLength": 29,
        "fixLineNum": 316,
        "fixNodeStartChar": 11786,
        "fixNodeLength": 41,
        "sourceBeforeFix": "ModuleFactory.stopModule(mod)",
        "sourceAfterFix": "ModuleFactory.stopModule(mod,true,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e5d3850776174a63ddc2e0b5ead58409ca7c8706",
        "fixCommitParentSHA1": "0c86d83e1f966b5e0c72e53664f7e9ff5a71e488",
        "bugFilePath": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithMOB.java",
        "fixPatch": "diff --git a/hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithMOB.java b/hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithMOB.java\nindex 4697eed..b021cc4 100644\n--- a/hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithMOB.java\n+++ b/hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestIngestWithMOB.java\n@@ -60,7 +60,7 @@\n   protected String[] getArgsForLoadTestToolInitTable() {\n     List<String> args = new ArrayList<String>();\n     args.add(\"-tn\");\n-    args.add(getTablename());\n+    args.add(getTablename().getNameAsString());\n     // pass all remaining args from conf with keys <test class name>.<load test tool arg>\n     String clazz = this.getClass().getSimpleName();\n     for (String arg : LOAD_TEST_TOOL_MOB_INIT_ARGS) {\n@@ -104,7 +104,7 @@\n   protected void initTable() throws IOException {\n     super.initTable();\n \n-    byte[] tableName = getTablename().getBytes();\n+    byte[] tableName = getTablename().getName();\n     HBaseAdmin admin = new HBaseAdmin(conf);\n     HTableDescriptor tableDesc = admin.getTableDescriptor(tableName);\n     LOG.info(\"Disabling table \" + getTablename());\n",
        "projectName": "apache.hbase",
        "bugLineNum": 107,
        "bugNodeStartChar": 3986,
        "bugNodeLength": 25,
        "fixLineNum": 107,
        "fixNodeStartChar": 3986,
        "fixNodeLength": 24,
        "sourceBeforeFix": "getTablename().getBytes()",
        "sourceAfterFix": "getTablename().getName()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "65f815b3aaa4ca2aff782b35c1fa0d318f10387c",
        "fixCommitParentSHA1": "310c9fa03d4cc95941fff7812e5c0c05bd7b76bc",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/util/DefaultEndpointMapper.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/util/DefaultEndpointMapper.java b/modules/cpr/src/main/java/org/atmosphere/util/DefaultEndpointMapper.java\nindex c50c442..2fb979d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/util/DefaultEndpointMapper.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/util/DefaultEndpointMapper.java\n@@ -44,10 +44,10 @@\n             final Map<String, String> m = new HashMap<String, String>();\n             for (Map.Entry<String, U> e : handlers.entrySet()) {\n                 UriTemplate t = new UriTemplate(e.getKey());\n-                logger.debug(\"Trying to map {} to {}\", t, path);\n+                logger.trace(\"Trying to map {} to {}\", t, path);\n                 if (t.match(path, m)) {\n                     handler = e.getValue();\n-                    logger.debug(\"Mapped {} to {}\", t, e.getValue());\n+                    logger.trace(\"Mapped {} to {}\", t, e.getValue());\n                     break;\n                 }\n             }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 47,
        "bugNodeStartChar": 1658,
        "bugNodeLength": 47,
        "fixLineNum": 47,
        "fixNodeStartChar": 1658,
        "fixNodeLength": 47,
        "sourceBeforeFix": "logger.debug(\"Trying to map {} to {}\",t,path)",
        "sourceAfterFix": "logger.trace(\"Trying to map {} to {}\",t,path)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "364ae9baf3824dc4e0e56b2b681f8302731e8cdd",
        "fixCommitParentSHA1": "6b386d4b81f63bc3afd05888529550572da04c06",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex 6c2aeb4..bad5ea2 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -3104,7 +3104,7 @@\n       try {\n         statsObj = getMS().getTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_table: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_table: \", statsObj != null, null);\n       }\n       return statsObj;\n     }\n@@ -3126,7 +3126,7 @@\n         statsObj = getMS().getPartitionColumnStatistics(dbName, tableName, convertedPartName,\n                                                             partVals, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_partition: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_partition: \", statsObj != null, null);\n       }\n       return statsObj;\n    }\n@@ -3165,7 +3165,7 @@\n         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n-        endFunction(\"write_column_statistics: \", ret != false);\n+        endFunction(\"write_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3211,7 +3211,7 @@\n         ret = getMS().updatePartitionColumnStatistics(colStats, partVals);\n         return ret;\n       } finally {\n-        endFunction(\"write_partition_column_statistics: \", ret != false);\n+        endFunction(\"write_partition_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3234,7 +3234,7 @@\n         ret = getMS().deletePartitionColumnStatistics(dbName, tableName,\n                                                       convertedPartName, partVals, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_partition: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_partition: \", ret != false, null);\n       }\n       return ret;\n     }\n@@ -3256,7 +3256,7 @@\n       try {\n         ret = getMS().deleteTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_table: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_table: \", ret != false, null);\n       }\n       return ret;\n    }\n",
        "projectName": "apache.hive",
        "bugLineNum": 3214,
        "bugNodeStartChar": 115014,
        "bugNodeLength": 64,
        "fixLineNum": 3214,
        "fixNodeStartChar": 115014,
        "fixNodeLength": 70,
        "sourceBeforeFix": "endFunction(\"write_partition_column_statistics: \",ret != false)",
        "sourceAfterFix": "endFunction(\"write_partition_column_statistics: \",ret != false,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f78f74f5a2cf1f73f974487816f998a6e37a9cf1",
        "fixCommitParentSHA1": "f6baae0bcbd712ac642db6d84dab026470d36f1c",
        "bugFilePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java",
        "fixPatch": "diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\nindex e7ab873..5c1a557 100644\n--- a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n@@ -352,7 +352,7 @@\n   }\n \n   void writeWindowUpdateLater(final int streamId, final long unacknowledgedBytesRead) {\n-    executor.submit(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n+    executor.execute(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           frameWriter.windowUpdate(streamId, unacknowledgedBytesRead);\n@@ -384,7 +384,7 @@\n \n   private void writePingLater(\n       final boolean reply, final int payload1, final int payload2, final Ping ping) {\n-    executor.submit(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n+    executor.execute(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n         hostName, payload1, payload2) {\n       @Override public void execute() {\n         try {\n@@ -636,7 +636,7 @@\n               inFinished, headerBlock);\n           lastGoodStreamId = streamId;\n           streams.put(streamId, newStream);\n-          executor.submit(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n+          executor.execute(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n             @Override public void execute() {\n               try {\n                 handler.receive(newStream);\n@@ -704,7 +704,7 @@\n     }\n \n     private void ackSettingsLater(final Settings peerSettings) {\n-      executor.submit(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n+      executor.execute(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n         @Override public void execute() {\n           try {\n             frameWriter.ackSettings(peerSettings);\n@@ -798,7 +798,7 @@\n       }\n       currentPushRequests.add(streamId);\n     }\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onRequest(streamId, requestHeaders);\n         try {\n@@ -816,7 +816,7 @@\n \n   private void pushHeadersLater(final int streamId, final List<Header> requestHeaders,\n       final boolean inFinished) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onHeaders(streamId, requestHeaders, inFinished);\n         try {\n@@ -842,7 +842,7 @@\n     source.require(byteCount); // Eagerly read the frame before firing client thread.\n     source.read(buffer, byteCount);\n     if (buffer.size() != byteCount) throw new IOException(buffer.size() + \" != \" + byteCount);\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           boolean cancel = pushObserver.onData(streamId, buffer, byteCount, inFinished);\n@@ -859,7 +859,7 @@\n   }\n \n   private void pushResetLater(final int streamId, final ErrorCode errorCode) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         pushObserver.onReset(streamId, errorCode);\n         synchronized (SpdyConnection.this) {\n",
        "projectName": "square.okhttp",
        "bugLineNum": 862,
        "bugNodeStartChar": 29696,
        "bugNodeLength": 296,
        "fixLineNum": 862,
        "fixNodeStartChar": 29696,
        "fixNodeLength": 297,
        "sourceBeforeFix": "pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Reset[%s]\",hostName,streamId){   @Override public void execute(){     pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) {       currentPushRequests.remove(streamId);     }   } } )",
        "sourceAfterFix": "pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Reset[%s]\",hostName,streamId){   @Override public void execute(){     pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) {       currentPushRequests.remove(streamId);     }   } } )"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "1c7750f426c0b90c0ac107b404ecbb8b7d33553d",
        "fixCommitParentSHA1": "77c6d31553d0e23f45032e700ca4a8c398240e1e",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\nindex 23490af..f9915a2 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\n@@ -250,7 +250,7 @@\n     private void _sendAndHandle(ConnectionFactory connectionFactory, Object obj, ResponseHandler handler) throws IOException {\n         ResponseStream stream = null;\n         while (stream == null) {\n-            if (active){\n+            if (!active){\n                 throw new HazelcastInstanceNotActiveException();\n             }\n             Connection conn = null;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 253,
        "bugNodeStartChar": 9804,
        "bugNodeLength": 6,
        "fixLineNum": 253,
        "fixNodeStartChar": 9804,
        "fixNodeLength": 7,
        "sourceBeforeFix": "active",
        "sourceAfterFix": "!active"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1621,
        "bugNodeStartChar": 89176,
        "bugNodeLength": 109,
        "fixLineNum": 1621,
        "fixNodeStartChar": 89176,
        "fixNodeLength": 109,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id+ \".json\",\"page\",String.valueOf(page),true))"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "6c44dfbaf789d4ebc47f3e5615399a8849347e68",
        "fixCommitParentSHA1": "edf7bad146079ed1f330bff880227a1f841d32f0",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\nindex 489178b..be4fdb4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java\n@@ -424,7 +424,8 @@\n         {\n             StreamPreferredProperties requiredProperties;\n             StreamPreferredProperties preferredProperties;\n-            if (getTaskWriterCount(session) > 1) {\n+            // Force single writer when partition function exists\n+            if (getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()) {\n                 requiredProperties = fixedParallelism(getTaskWriterCount(session));\n                 preferredProperties = fixedParallelism(getTaskWriterCount(session));\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 427,
        "bugNodeStartChar": 21036,
        "bugNodeLength": 31,
        "fixLineNum": 428,
        "fixNodeStartChar": 21102,
        "fixNodeLength": 76,
        "sourceBeforeFix": "getTaskWriterCount(session) > 1",
        "sourceAfterFix": "getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "533c5cb8f6bda878779fffb1a4adc792f62a81a7",
        "fixCommitParentSHA1": "5932e1e31f5ca4566fca5f93acfddf29614a3422",
        "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java",
        "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\nindex 37ea0d0..e066dd9 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/dbsync/LogEventConvert.java\n@@ -350,7 +350,7 @@\n             rowChangeBuider.setEventType(eventType);\n             RowsLogBuffer buffer = event.getRowsBuf(charset.name());\n             BitSet columns = event.getColumns();\n-            BitSet changeColumns = event.getColumns();\n+            BitSet changeColumns = event.getChangeColumns();\n             boolean tableError = false;\n             TableMeta tableMeta = null;\n             if (tableMetaCache != null) {// \u5165\u9519\u5b58\u5728table meta cache\n@@ -380,7 +380,7 @@\n                         break;\n                     }\n \n-                    tableError |= parseOneRow(rowDataBuilder, event, buffer, event.getChangeColumns(), true, tableMeta);\n+                    tableError |= parseOneRow(rowDataBuilder, event, buffer, changeColumns, true, tableMeta);\n                 }\n \n                 rowChangeBuider.addRowDatas(rowDataBuilder.build());\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 353,
        "bugNodeStartChar": 16448,
        "bugNodeLength": 18,
        "fixLineNum": 353,
        "fixNodeStartChar": 16448,
        "fixNodeLength": 24,
        "sourceBeforeFix": "event.getColumns()",
        "sourceAfterFix": "event.getChangeColumns()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "bfb6c2c775a2bfb0d50c870218878bdacd306eed",
        "fixCommitParentSHA1": "8755801a237e936245c97a62415ff93308eed49f",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/PipelineConcurrentTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/PipelineConcurrentTest.java b/camel-core/src/test/java/org/apache/camel/processor/PipelineConcurrentTest.java\nindex f5995c3..90917cf 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/PipelineConcurrentTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/PipelineConcurrentTest.java\n@@ -30,10 +30,10 @@\n  */\n public class PipelineConcurrentTest extends ContextTestSupport {\n \n-    private String uri = \"seda:in?size=10000&concurrentConsumers=10\";\n+    private String uri = \"seda:in?size=2000&concurrentConsumers=10\";\n \n     public void testConcurrentPipeline() throws Exception {\n-        int total = 10000;\n+        int total = 2000;\n         final int group = total / 20;\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n         mock.expectedMessageCount(total);\n",
        "projectName": "apache.camel",
        "bugLineNum": 36,
        "bugNodeStartChar": 1422,
        "bugNodeLength": 13,
        "fixLineNum": 36,
        "fixNodeStartChar": 1422,
        "fixNodeLength": 12,
        "sourceBeforeFix": "total=10000",
        "sourceAfterFix": "total=2000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "be9816e087e65c306879308f425ce4b024640e4c",
        "fixCommitParentSHA1": "bcfc87cd8c6076ecc5606ee7c249d93455492760",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereInterceptorWriter.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereInterceptorWriter.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereInterceptorWriter.java\nindex 47cf31a..8150d3b 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereInterceptorWriter.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereInterceptorWriter.java\n@@ -29,7 +29,7 @@\n  */\n public class AtmosphereInterceptorWriter extends AsyncIOWriterAdapter {\n \n-    private static final Logger logger = LoggerFactory.getLogger(AsyncIOWriterAdapter.class);\n+    private static final Logger logger = LoggerFactory.getLogger(AtmosphereInterceptorWriter.class);\n     private final AtmosphereResponse response;\n \n     private final ArrayList<AsyncIOInterceptor> filters = new ArrayList<AsyncIOInterceptor>();\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 32,
        "bugNodeStartChar": 1132,
        "bugNodeLength": 26,
        "fixLineNum": 32,
        "fixNodeStartChar": 1132,
        "fixNodeLength": 33,
        "sourceBeforeFix": "AsyncIOWriterAdapter.class",
        "sourceAfterFix": "AtmosphereInterceptorWriter.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ebe03bfed0dbdf644542846734931457fcd964b5",
        "fixCommitParentSHA1": "7345107a4c7486f9dced49e7478217ad61f7aea5",
        "bugFilePath": "stratosphere-addons/spargel/src/main/java/eu/stratosphere/spargel/java/MessagingFunction.java",
        "fixPatch": "diff --git a/stratosphere-addons/spargel/src/main/java/eu/stratosphere/spargel/java/MessagingFunction.java b/stratosphere-addons/spargel/src/main/java/eu/stratosphere/spargel/java/MessagingFunction.java\nindex c2edd6e..9ef07c4 100644\n--- a/stratosphere-addons/spargel/src/main/java/eu/stratosphere/spargel/java/MessagingFunction.java\n+++ b/stratosphere-addons/spargel/src/main/java/eu/stratosphere/spargel/java/MessagingFunction.java\n@@ -105,7 +105,7 @@\n \t\t\n \t\twhile (edges.hasNext()) {\n \t\t\tTuple next = (Tuple) edges.next();\n-\t\t\tVertexKey k = next.getField(0);\n+\t\t\tVertexKey k = next.getField(1);\n \t\t\toutValue.f0 = k;\n \t\t\tout.collect(outValue);\n \t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 108,
        "bugNodeStartChar": 4690,
        "bugNodeLength": 16,
        "fixLineNum": 108,
        "fixNodeStartChar": 4690,
        "fixNodeLength": 16,
        "sourceBeforeFix": "next.getField(0)",
        "sourceAfterFix": "next.getField(1)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3f71a4a3020bd65a54ae8753ff8f6c5540eec97c",
        "fixCommitParentSHA1": "67b47c982f22b8543988701099beec27c4aa5a9c",
        "bugFilePath": "indexing-service/src/main/java/io/druid/indexing/overlord/autoscaling/PendingTaskBasedWorkerResourceManagementStrategy.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/io/druid/indexing/overlord/autoscaling/PendingTaskBasedWorkerResourceManagementStrategy.java b/indexing-service/src/main/java/io/druid/indexing/overlord/autoscaling/PendingTaskBasedWorkerResourceManagementStrategy.java\nindex fe5fd8e..50b3e7e 100644\n--- a/indexing-service/src/main/java/io/druid/indexing/overlord/autoscaling/PendingTaskBasedWorkerResourceManagementStrategy.java\n+++ b/indexing-service/src/main/java/io/druid/indexing/overlord/autoscaling/PendingTaskBasedWorkerResourceManagementStrategy.java\n@@ -211,7 +211,7 @@\n     );\n \n     if (want > 0 && currValidWorkers >= maxWorkerCount) {\n-      log.warn(\"Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].\");\n+      log.warn(\"Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].\", currValidWorkers, maxWorkerCount);\n       return 0;\n     }\n     want = Math.min(want, maxWorkerCount - currValidWorkers);\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 214,
        "bugNodeStartChar": 8247,
        "bugNodeLength": 94,
        "fixLineNum": 214,
        "fixNodeStartChar": 8247,
        "fixNodeLength": 128,
        "sourceBeforeFix": "log.warn(\"Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].\")",
        "sourceAfterFix": "log.warn(\"Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].\",currValidWorkers,maxWorkerCount)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "eba7e984d0999606f90689ca3b89ee644b1e92a4",
        "fixCommitParentSHA1": "7db8e2ad2c7ecd5c3502a7068241a7e469447921",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 7b59f8f..8aa312c 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -221,7 +221,7 @@\n         stats.order(TermsStatsFacet.ComparatorType.fromString(order.toString().toLowerCase()));\n         stats.size(size);\n \n-        terms.facetFilter(standardFilters(range, filter));\n+        stats.facetFilter(standardFilters(range, filter));\n \n         srb.addFacet(stats);\n \n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 224,
        "bugNodeStartChar": 9563,
        "bugNodeLength": 49,
        "fixLineNum": 224,
        "fixNodeStartChar": 9563,
        "fixNodeLength": 49,
        "sourceBeforeFix": "terms.facetFilter(standardFilters(range,filter))",
        "sourceAfterFix": "stats.facetFilter(standardFilters(range,filter))"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "a9609b959492ff428061f06faff767fa9cbe2263",
        "fixCommitParentSHA1": "4e9486f68e4f4ce329bf32924d125d6f3b9aa0fa",
        "bugFilePath": "titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/RexsterTitanServer.java",
        "fixPatch": "diff --git a/titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/RexsterTitanServer.java b/titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/RexsterTitanServer.java\nindex 0d50563..30e14f7 100644\n--- a/titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/RexsterTitanServer.java\n+++ b/titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/RexsterTitanServer.java\n@@ -97,7 +97,7 @@\n \n         // allow scriptengines to be configured so that folks can drop in different gremlin flavors.\n         final List configuredScriptEngineNames = properties.getConfiguredScriptEngines();\n-        if (configuredScriptEngineNames == null) {\n+        if (configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()) {\n             // configure to default with gremlin-groovy\n             log.info(\"No configuration for <script-engines>.  Using gremlin-groovy by default.\");\n             EngineController.configure(scriptEngineThreshold, scriptEngineInitFile);\n",
        "projectName": "thinkaurelius.titan",
        "bugLineNum": 100,
        "bugNodeStartChar": 4338,
        "bugNodeLength": 35,
        "fixLineNum": 100,
        "fixNodeStartChar": 4338,
        "fixNodeLength": 76,
        "sourceBeforeFix": "configuredScriptEngineNames == null",
        "sourceAfterFix": "configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "50418466a40024d626e2fce8e87693305be3958e",
        "fixCommitParentSHA1": "ce24d9cd009fbb0ae661075567427d04cd169882",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/JavaScriptProtocol.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/JavaScriptProtocol.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/JavaScriptProtocol.java\nindex c0ec4e4..57a7f08 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/JavaScriptProtocol.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/JavaScriptProtocol.java\n@@ -91,7 +91,7 @@\n                 String javascriptVersion = request.getHeader(HeaderConfig.X_ATMOSPHERE_FRAMEWORK);\n                 int version = Integer.valueOf(javascriptVersion.split(\"-\")[0].replace(\".\", \"\"));\n                 if (version < 221) {\n-                    logger.debug(\"Invalid Atmosphere Version {}\", javascriptVersion);\n+                    logger.error(\"Invalid Atmosphere Version {}\", javascriptVersion);\n                     response.setStatus(501);\n                     response.addHeader(X_ATMOSPHERE_ERROR, \"Atmosphere Protocol version not supported.\");\n                     try {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 94,
        "bugNodeStartChar": 3861,
        "bugNodeLength": 64,
        "fixLineNum": 94,
        "fixNodeStartChar": 3861,
        "fixNodeLength": 64,
        "sourceBeforeFix": "logger.debug(\"Invalid Atmosphere Version {}\",javascriptVersion)",
        "sourceAfterFix": "logger.error(\"Invalid Atmosphere Version {}\",javascriptVersion)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f135cc4188dd173e8fc175bc5d26cf1a970ac39e",
        "fixCommitParentSHA1": "e0d87acdc5dfcffb9208d2ba27893bcf42b8d39c",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/NewOperationContextImpl.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/NewOperationContextImpl.java b/controller/src/main/java/org/jboss/as/controller/NewOperationContextImpl.java\nindex 0defde8..fa37df4 100644\n--- a/controller/src/main/java/org/jboss/as/controller/NewOperationContextImpl.java\n+++ b/controller/src/main/java/org/jboss/as/controller/NewOperationContextImpl.java\n@@ -193,12 +193,12 @@\n         if (flags.contains(Flag.CANCELLED)) {\n             response.get(OUTCOME).set(CANCELLED);\n             response.get(FAILURE_DESCRIPTION).set(\"Operation cancelled\");\n-            response.set(ROLLED_BACK).set(true);\n+            response.get(ROLLED_BACK).set(true);\n             return ResultAction.ROLLBACK;\n         }\n         if (response.hasDefined(FAILURE_DESCRIPTION) && (contextFlags.contains(ContextFlag.ROLLBACK_ON_FAIL) || currentStage == Stage.MODEL)) {\n             response.get(OUTCOME).set(FAILED);\n-            response.set(ROLLED_BACK).set(true);\n+            response.get(ROLLED_BACK).set(true);\n             return ResultAction.ROLLBACK;\n         }\n         do {\n@@ -218,7 +218,7 @@\n                         flags.add(Flag.CANCELLED);\n                         response.get(OUTCOME).set(CANCELLED);\n                         response.get(FAILURE_DESCRIPTION).set(\"Operation cancelled\");\n-                        response.set(ROLLED_BACK).set(true);\n+                        response.get(ROLLED_BACK).set(true);\n                         return ResultAction.ROLLBACK;\n                     }\n                 }\n@@ -229,7 +229,7 @@\n                 ModelNode oldResponse = response;\n                 try {\n                     flags = EnumSet.noneOf(Flag.class);\n-                    response = step.response;\n+                    response = this.response = step.response;\n                     ModelNode newOperation = operation = step.operation;\n                     modelAddress = PathAddress.pathAddress(newOperation.get(ADDRESS));\n                     step.handler.execute(this, newOperation);\n@@ -243,12 +243,12 @@\n                             response.get(FAILURE_DESCRIPTION).set(\"Operation handler failed: \" + t);\n                         }\n                         response.get(OUTCOME).set(FAILED);\n-                        response.set(ROLLED_BACK).set(true);\n+                        response.get(ROLLED_BACK).set(true);\n                         // this result action will be overwritten in finally, but whatever\n                         return resultAction = ResultAction.ROLLBACK;\n                     } else {\n                         if (resultAction == ResultAction.ROLLBACK) {\n-                            response.set(ROLLED_BACK).set(true);\n+                            response.get(ROLLED_BACK).set(true);\n                         }\n                         response.get(OUTCOME).set(response.hasDefined(FAILURE_DESCRIPTION) ? FAILED : SUCCESS);\n                         // It failed after!  Just return, ignore the failure\n@@ -268,7 +268,7 @@\n                                 response.get(FAILURE_DESCRIPTION).set(\"Operation handler failed to complete\");\n                             }\n                             response.get(OUTCOME).set(FAILED);\n-                            response.set(ROLLED_BACK).set(true);\n+                            response.get(ROLLED_BACK).set(true);\n                             // We deliberately override the result to always roll back in this case!\n                             //noinspection ReturnInsideFinallyBlock\n                             return resultAction = ResultAction.ROLLBACK;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 201,
        "bugNodeStartChar": 8240,
        "bugNodeLength": 25,
        "fixLineNum": 201,
        "fixNodeStartChar": 8240,
        "fixNodeLength": 25,
        "sourceBeforeFix": "response.set(ROLLED_BACK)",
        "sourceAfterFix": "response.get(ROLLED_BACK)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926",
        "fixCommitParentSHA1": "1b31f4d19df1fabc7aaee5837f4d2c3439819495",
        "bugFilePath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
        "fixPatch": "diff --git a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\nindex 7cab2df..86b3322 100644\n--- a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n+++ b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n@@ -353,10 +353,10 @@\n \t * \n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> print() {\n+\tpublic DataStreamSink<OUT> print() {\n \t\tDataStream<OUT> inputStream = this.copy();\n \t\tPrintSinkFunction<OUT> printFunction = new PrintSinkFunction<OUT>();\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, printFunction, null);\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, printFunction, null);\n \n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \n@@ -373,7 +373,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}\n \n@@ -390,7 +390,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}\n \n@@ -408,7 +408,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}\n \n@@ -430,7 +430,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, endTuple);\n \t}\n \n@@ -453,7 +453,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, endTuple);\n \t}\n \n@@ -475,9 +475,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -503,9 +503,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -522,7 +522,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), 1, null);\n \t}\n \n@@ -539,7 +539,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, null);\n \t}\n \n@@ -557,7 +557,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), batchSize, null);\n \t}\n \n@@ -579,7 +579,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, endTuple);\n \t}\n \n@@ -602,7 +602,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}\n@@ -627,9 +627,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple));\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -655,9 +655,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -792,18 +792,18 @@\n \t *            The object containing the sink's invoke function.\n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n+\tpublic DataStreamSink<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(this.copy(), sinkFunction);\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(inputStream, sinkFunction, new FunctionTypeWrapper<OUT, Tuple, OUT>(\n \t\t\t\tsinkFunction, SinkFunction.class, 0, -1, 0));\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n \t\t\tTypeSerializerWrapper<OUT, Tuple, OUT> typeWrapper) {\n-\t\tDataStream<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n+\t\tDataStreamSink<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n \n \t\ttry {\n \t\t\tjobGraphBuilder.addSink(returnStream.getId(), new SinkInvokable<OUT>(sinkFunction),\n",
        "projectName": "apache.flink",
        "bugLineNum": 433,
        "bugNodeStartChar": 16377,
        "bugNodeLength": 15,
        "fixLineNum": 433,
        "fixNodeStartChar": 16377,
        "fixNodeLength": 19,
        "sourceBeforeFix": "DataStream<OUT>",
        "sourceAfterFix": "DataStreamSink<OUT>"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "077e2fe62b1c9eb661028983af6d3405ebd81449",
        "fixCommitParentSHA1": "4453eb50bf30d18422f98ffbcab6a617cf0785f7",
        "bugFilePath": "src/web/org/openmrs/web/controller/user/UserFormController.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/controller/user/UserFormController.java b/src/web/org/openmrs/web/controller/user/UserFormController.java\nindex 82e6b04..5a9aa36 100644\n--- a/src/web/org/openmrs/web/controller/user/UserFormController.java\n+++ b/src/web/org/openmrs/web/controller/user/UserFormController.java\n@@ -256,7 +256,7 @@\n \t\t\t\t}\r\n \t\t\t}\r\n             \r\n-            if (StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)) {\r\n+            if (StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)) {\r\n             \tus.changeQuestionAnswer(user, secretQuestion, secretAnswer);\r\n             }\r\n             \r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 259,
        "bugNodeStartChar": 9959,
        "bugNodeLength": 76,
        "fixLineNum": 259,
        "fixNodeStartChar": 9701,
        "fixNodeLength": 76,
        "sourceBeforeFix": "StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)",
        "sourceAfterFix": "StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "81a287652365a2b0d8e656e61d6d93f668fac845",
        "fixCommitParentSHA1": "31b57e8ab6762cf4539353aee9a0a608a4d73dfa",
        "bugFilePath": "storm-core/src/jvm/org/apache/storm/daemon/metrics/MetricsUtils.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/org/apache/storm/daemon/metrics/MetricsUtils.java b/storm-core/src/jvm/org/apache/storm/daemon/metrics/MetricsUtils.java\nindex aa5ce28..eb72939 100644\n--- a/storm-core/src/jvm/org/apache/storm/daemon/metrics/MetricsUtils.java\n+++ b/storm-core/src/jvm/org/apache/storm/daemon/metrics/MetricsUtils.java\n@@ -86,7 +86,7 @@\n     public static File getCsvLogDir(Map stormConf) {\n         String csvMetricsLogDirectory = Utils.getString(stormConf.get(Config.STORM_DAEMON_METRICS_REPORTER_CSV_LOG_DIR), null);\n         if (csvMetricsLogDirectory == null) {\n-            csvMetricsLogDirectory = ConfigUtils.absoluteHealthCheckDir(stormConf);\n+            csvMetricsLogDirectory = ConfigUtils.absoluteStormLocalDir(stormConf);\n             csvMetricsLogDirectory = csvMetricsLogDirectory + ConfigUtils.FILE_SEPARATOR + \"csvmetrics\";\n         }\n         File csvMetricsDir = new File(csvMetricsLogDirectory);\n",
        "projectName": "apache.storm",
        "bugLineNum": 89,
        "bugNodeStartChar": 3548,
        "bugNodeLength": 45,
        "fixLineNum": 89,
        "fixNodeStartChar": 3548,
        "fixNodeLength": 44,
        "sourceBeforeFix": "ConfigUtils.absoluteHealthCheckDir(stormConf)",
        "sourceAfterFix": "ConfigUtils.absoluteStormLocalDir(stormConf)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "546f336e25b26d072f96e2cda139b885858ed5b0",
        "fixCommitParentSHA1": "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java b/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\nindex fa6e7c8..d085d48 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\n@@ -112,7 +112,7 @@\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n-                    details.put(CONFIG_HASH_KEY, currentConfigHash);\n+                    details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n@@ -121,7 +121,7 @@\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n-            details.put(CONFIG_HASH_KEY, currentConfigHash);\n+            details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n \n@@ -169,7 +169,7 @@\n      * @param timestamp the timestamp of the file\n      */\n     void put(String fileName, long timestamp) {\n-        details.put(fileName, Long.toString(timestamp));\n+        details.setProperty(fileName, Long.toString(timestamp));\n     }\n \n     /**\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 115,
        "bugNodeStartChar": 4322,
        "bugNodeLength": 47,
        "fixLineNum": 115,
        "fixNodeStartChar": 4322,
        "fixNodeLength": 55,
        "sourceBeforeFix": "details.put(CONFIG_HASH_KEY,currentConfigHash)",
        "sourceAfterFix": "details.setProperty(CONFIG_HASH_KEY,currentConfigHash)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "f86ca3388be359e2c2b8b78164cd6878c25cde74",
        "fixCommitParentSHA1": "41d9e25a2b7c04dc322b77b9e9cffde2891b594a",
        "bugFilePath": "core/camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java",
        "fixPatch": "diff --git a/core/camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java b/core/camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java\nindex 74ea4f4..46392c9 100644\n--- a/core/camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java\n+++ b/core/camel-core/src/main/java/org/apache/camel/component/mock/MockEndpoint.java\n@@ -482,7 +482,7 @@\n      * the assertion is satisfied when 5 or more message arrives. To ensure that\n      * exactly 5 messages arrives, then you would need to wait a little period\n      * to ensure no further message arrives. This is what you can use this\n-     * {@link #setAssertPeriod(long)} method for.\n+     * method for.\n      * <p/>\n      * By default this period is disabled.\n      *\n@@ -508,11 +508,9 @@\n      * <p/>\n      * You can set multiple expectations for different header names.\n      * If you set a value of <tt>null</tt> that means we accept either the header is absent, or its value is <tt>null</tt>\n-     * <p/>\n-     * <b>Important:</b> This overrides any previous set value using {@link #expectedMessageCount(int)}\n      */\n     public void expectedHeaderReceived(final String name, final Object value) {\n-        if (expectedMinimumCount == -1) {\n+        if (expectedMinimumCount == -1 && expectedCount <= 0) {\n             expectedMinimumMessageCount(1);\n         }\n         if (expectedHeaderValues == null) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 515,
        "bugNodeStartChar": 21059,
        "bugNodeLength": 26,
        "fixLineNum": 515,
        "fixNodeStartChar": 21059,
        "fixNodeLength": 48,
        "sourceBeforeFix": "expectedMinimumCount == -1",
        "sourceAfterFix": "expectedMinimumCount == -1 && expectedCount <= 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f669009481babd71c3f6440db080a78b7fccfd64",
        "fixCommitParentSHA1": "1c89d48b9d152b3e7caeff1f03fbe5f0e946732b",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/bug/Bug_127_for_qiuyan81.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/bug/Bug_127_for_qiuyan81.java b/src/test/java/com/alibaba/json/bvt/bug/Bug_127_for_qiuyan81.java\nindex 26a1056..d2024e2 100644\n--- a/src/test/java/com/alibaba/json/bvt/bug/Bug_127_for_qiuyan81.java\n+++ b/src/test/java/com/alibaba/json/bvt/bug/Bug_127_for_qiuyan81.java\n@@ -26,7 +26,7 @@\n         JSONObject json = (JSONObject) JSON.parse(jsonString);\n         Assert.assertEquals(1001, json.get(\"ext\"));\n         Assert.assertEquals(0, json.get(\"PayStatus\"));\n-        Assert.assertEquals(2, json.size());\n+        Assert.assertEquals(3, json.size());\n     }\n     \n     public void test_parserUndefined_array() {\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 29,
        "bugNodeStartChar": 987,
        "bugNodeLength": 35,
        "fixLineNum": 29,
        "fixNodeStartChar": 987,
        "fixNodeLength": 35,
        "sourceBeforeFix": "Assert.assertEquals(2,json.size())",
        "sourceAfterFix": "Assert.assertEquals(3,json.size())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
        "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
        "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 63,
        "bugNodeStartChar": 1642,
        "bugNodeLength": 23,
        "fixLineNum": 63,
        "fixNodeStartChar": 1642,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Color.fromRGB(0x6689D3)",
        "sourceAfterFix": "Color.fromRGB(0x51301A)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "63b7cec3050338899e04957cbc7039cd509cd214",
        "fixCommitParentSHA1": "462bc816369822d38dfc34c164fdbe1ac2461e6f",
        "bugFilePath": "junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java",
        "fixPatch": "diff --git a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\nindex b26310c..604d4f8 100644\n--- a/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n+++ b/junit/src/test/java/cucumber/runtime/junit/RuntimeOptionsFactoryTest.java\n@@ -113,7 +113,7 @@\n         RuntimeOptionsFactory runtimeOptionsFactory = new RuntimeOptionsFactory(SubClassWithMonoChromeTrue.class);\n         RuntimeOptions runtimeOptions = runtimeOptionsFactory.create();\n \n-        assertFalse(runtimeOptions.isMonochrome());\n+        assertTrue(runtimeOptions.isMonochrome());\n     }\n \n \n@@ -166,12 +166,12 @@\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = false)\n+    @Cucumber.Options(monochrome = true)\n     static class SubClassWithMonoChromeTrue extends BaseClassWithMonoChromeFalse {\n         // empty\n     }\n \n-    @Cucumber.Options(monochrome = true)\n+    @Cucumber.Options(monochrome = false)\n     static class BaseClassWithMonoChromeFalse {\n         // empty\n     }\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 116,
        "bugNodeStartChar": 4631,
        "bugNodeLength": 42,
        "fixLineNum": 116,
        "fixNodeStartChar": 4631,
        "fixNodeLength": 41,
        "sourceBeforeFix": "assertFalse(runtimeOptions.isMonochrome())",
        "sourceAfterFix": "assertTrue(runtimeOptions.isMonochrome())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7dbefbb69705e60542031bf5c402d0f0f1bd7955",
        "fixCommitParentSHA1": "a69c3655d6f2ec76146fd4a51979fd3cfcc04aee",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/ClientContext.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\nindex c6a75f3..e395301 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n@@ -70,7 +70,7 @@\n     sClientMetrics = new ClientMetrics();\n \n     if (sExecutorService != null) {\n-      sExecutorService.shutdown();\n+      sExecutorService.shutdownNow();\n     }\n     sExecutorService = Executors.newFixedThreadPool(\n         sTachyonConf.getInt(Constants.USER_BLOCK_WORKER_CLIENT_THREADS),\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 73,
        "bugNodeStartChar": 2460,
        "bugNodeLength": 27,
        "fixLineNum": 73,
        "fixNodeStartChar": 2460,
        "fixNodeLength": 30,
        "sourceBeforeFix": "sExecutorService.shutdown()",
        "sourceAfterFix": "sExecutorService.shutdownNow()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4386fa36b154102760ddf440bbbeb4790de65d52",
        "fixCommitParentSHA1": "75ec3cb5382e06ea4f8e0920f75ea4afe73d7b37",
        "bugFilePath": "hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java",
        "fixPatch": "diff --git a/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java b/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\nindex 65d8824..23a25ee 100644\n--- a/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\n+++ b/hazelcast-spring/src/test/java/com/hazelcast/spring/TestFullApplicationContext.java\n@@ -310,7 +310,7 @@\n         assertEquals(\"sample-tag-key\", aws.getTagKey());\n         assertEquals(\"sample-tag-value\", aws.getTagValue());\n \n-        assertFalse(\"reuse-address\", networkConfig.isReuseAddress());\n+        assertTrue(\"reuse-address\", networkConfig.isReuseAddress());\n     }\n \n //    @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 313,
        "bugNodeStartChar": 13837,
        "bugNodeLength": 60,
        "fixLineNum": 313,
        "fixNodeStartChar": 13837,
        "fixNodeLength": 59,
        "sourceBeforeFix": "assertFalse(\"reuse-address\",networkConfig.isReuseAddress())",
        "sourceAfterFix": "assertTrue(\"reuse-address\",networkConfig.isReuseAddress())"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "6bd0ee7bd9734e71b9ef61da7c0417770d9d877b",
        "fixCommitParentSHA1": "9f20474e6f5945dea27dd349a7a4611acf8a42ad",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/BindHandler.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/tcp/BindHandler.java b/hazelcast/src/main/java/com/hazelcast/nio/tcp/BindHandler.java\nindex 69b8907..97b67a6 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/tcp/BindHandler.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/tcp/BindHandler.java\n@@ -191,7 +191,7 @@\n         }\n         boolean returnValue = tcpIpEndpointManager.registerConnection(remoteEndpoint, connection);\n \n-        if (remoteAddressAliases != null) {\n+        if (remoteAddressAliases != null && returnValue) {\n             for (Address remoteAddressAlias : remoteAddressAliases) {\n                 if (logger.isLoggable(Level.FINEST)) {\n                     logger.finest(\"Registering connection \" + connection + \" to address alias \" + remoteAddressAlias);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 194,
        "bugNodeStartChar": 9195,
        "bugNodeLength": 28,
        "fixLineNum": 194,
        "fixNodeStartChar": 9195,
        "fixNodeLength": 43,
        "sourceBeforeFix": "remoteAddressAliases != null",
        "sourceAfterFix": "remoteAddressAliases != null && returnValue"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1854,
        "bugNodeLength": 30,
        "fixLineNum": 44,
        "fixNodeStartChar": 1811,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(3)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(3)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b899af7d7c2b9d461ee1741e98ee861e2ed55785",
        "fixCommitParentSHA1": "b5c4c6a675a420930223c9e7a7071d5752582395",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\nindex 1020585..d04f5f3 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/AbstractPollingReporter.java\n@@ -32,7 +32,7 @@\n      * @param unit      the unit for {@code period}\n      */\n     public void start(long period, TimeUnit unit) {\n-        executor.scheduleWithFixedDelay(this, period, period, unit);\n+        executor.scheduleAtFixedRate(this, period, period, unit);\n     }\n \n     /**\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 35,
        "bugNodeStartChar": 1235,
        "bugNodeLength": 59,
        "fixLineNum": 35,
        "fixNodeStartChar": 1235,
        "fixNodeLength": 56,
        "sourceBeforeFix": "executor.scheduleWithFixedDelay(this,period,period,unit)",
        "sourceAfterFix": "executor.scheduleAtFixedRate(this,period,period,unit)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "a8c6a40fd192cd5692c550a3311db004535cd0a6",
        "fixCommitParentSHA1": "7bc94baa71ade05764f5d5b4e37729139213b090",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 980e476..de646ad 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -251,9 +251,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n@@ -294,9 +294,9 @@\n \n         SearchRequestBuilder srb;\n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n \n@@ -378,9 +378,9 @@\n         SearchRequestBuilder srb;\n \n         if (filter == null) {\n-            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = standardSearchRequest(query, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         } else {\n-            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range));\n+            srb = filteredSearchRequest(query, filter, IndexHelper.determineAffectedIndices(indexRangeService, deflector, range), range);\n         }\n \n         FilterAggregationBuilder builder = AggregationBuilders.filter(AGG_FILTER)\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 297,
        "bugNodeStartChar": 12351,
        "bugNodeLength": 103,
        "fixLineNum": 297,
        "fixNodeStartChar": 12351,
        "fixNodeLength": 110,
        "sourceBeforeFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))",
        "sourceAfterFix": "standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "133d8bf48f66bebefef85ac5814058a5409cffde",
        "fixCommitParentSHA1": "ff7169ceb12d22a2f08e5899cffca7138986440e",
        "bugFilePath": "tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java",
        "fixPatch": "diff --git a/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java b/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java\nindex 3527b8f..b3b2ded 100644\n--- a/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java\n+++ b/tests/camel-itest-osgi/src/test/java/org/apache/camel/itest/osgi/OSGiIntegrationTestSupport.java\n@@ -131,7 +131,7 @@\n \n             // using the features to install the camel components             \n             scanFeatures(getCamelKarafFeatureUrl(),                         \n-                \"camel-core\", \"camel-spring\", \"camel-test\"),\n+                \"xml-specs-api\", \"camel-core\", \"camel-spring\", \"camel-test\"),\n                                    \n             workingDirectory(\"target/paxrunner/\"));\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 133,
        "bugNodeStartChar": 5744,
        "bugNodeLength": 124,
        "fixLineNum": 133,
        "fixNodeStartChar": 5744,
        "fixNodeLength": 141,
        "sourceBeforeFix": "scanFeatures(getCamelKarafFeatureUrl(),\"camel-core\",\"camel-spring\",\"camel-test\")",
        "sourceAfterFix": "scanFeatures(getCamelKarafFeatureUrl(),\"xml-specs-api\",\"camel-core\",\"camel-spring\",\"camel-test\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b0662ce83b466318ce8dcec13428846b1b190aaf",
        "fixCommitParentSHA1": "9a12d6357cf48534678723286b4741f55eb7009c",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\nindex 98bc0b6..c33dc62 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n@@ -327,11 +327,11 @@\n             throw new IOException(\"Address is required!\");\n         }\n \n-        ClientConnection clientConnection = connections.get(address);\n+        ClientConnection clientConnection = connections.get(target);\n         if (clientConnection == null) {\n-            final Object lock = getLock(address);\n+            final Object lock = getLock(target);\n             synchronized (lock) {\n-                clientConnection = connections.get(address);\n+                clientConnection = connections.get(target);\n                 if (clientConnection == null) {\n                     final ConnectionProcessor connectionProcessor = new ConnectionProcessor(address, authenticator, false);\n                     final ICompletableFuture<ClientConnection> future = executionService.submitInternal(connectionProcessor);\n@@ -341,7 +341,7 @@\n                         future.cancel(true);\n                         throw ExceptionUtil.rethrow(e, IOException.class);\n                     }\n-                    ClientConnection current = connections.putIfAbsent(address, clientConnection);\n+                    ClientConnection current = connections.putIfAbsent(clientConnection.getRemoteEndpoint(), clientConnection);\n                     if (current != null) {\n                         clientConnection.close();\n                         clientConnection = current;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 330,
        "bugNodeStartChar": 13401,
        "bugNodeLength": 24,
        "fixLineNum": 330,
        "fixNodeStartChar": 13401,
        "fixNodeLength": 23,
        "sourceBeforeFix": "connections.get(address)",
        "sourceAfterFix": "connections.get(target)"
    }
]