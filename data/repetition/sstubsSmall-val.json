[
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
        "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
        "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
        "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 139,
        "bugNodeStartChar": 5521,
        "bugNodeLength": 52,
        "fixLineNum": 139,
        "fixNodeStartChar": 5521,
        "fixNodeLength": 51,
        "sourceBeforeFix": "LOG.error(\"Unable to read HTTP response content\",e)",
        "sourceAfterFix": "LOG.info(\"Unable to read HTTP response content\",e)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f217096cd36383639a7f7384e6ce34c78cf5d954",
        "fixCommitParentSHA1": "396bc61992e1c41407b9ed92c02260d467a5ea8e",
        "bugFilePath": "external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/AbstractUserTopology.java",
        "fixPatch": "diff --git a/external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/AbstractUserTopology.java b/external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/AbstractUserTopology.java\nindex 700f83e..6d2f8e9 100644\n--- a/external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/AbstractUserTopology.java\n+++ b/external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/AbstractUserTopology.java\n@@ -93,7 +93,7 @@\n             cluster.shutdown();\n             System.exit(0);\n         } else {\n-            StormSubmitter.submitTopology(args[5], config, getTopology());\n+            StormSubmitter.submitTopology(args[4], config, getTopology());\n         }\n     }\n \n",
        "projectName": "apache.storm",
        "bugLineNum": 96,
        "bugNodeStartChar": 4476,
        "bugNodeLength": 7,
        "fixLineNum": 96,
        "fixNodeStartChar": 4476,
        "fixNodeLength": 7,
        "sourceBeforeFix": "args[5]",
        "sourceAfterFix": "args[4]"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ab062b1386856b7666e3a207c191bcd4a15a9b33",
        "fixCommitParentSHA1": "2c52cc1d86010a9e8d67ee9e773e0317dc487172",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/DefaultCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/DefaultCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/DefaultCodegen.java\nindex 8c2d0e7..219c5a5 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/DefaultCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/DefaultCodegen.java\n@@ -1496,15 +1496,15 @@\n             p.pattern = qp.getPattern();\n             \n             p.maximum = qp.getMaximum();\n-            p.exclusiveMaximum = qp.getExclusiveMaximum();\n+            p.exclusiveMaximum = qp.isExclusiveMaximum();\n             p.minimum = qp.getMinimum();\n-            p.exclusiveMinimum = qp.getExclusiveMinimum();\n+            p.exclusiveMinimum = qp.isExclusiveMinimum();\n             p.maxLength = qp.getMaxLength();\n             p.minLength = qp.getMinLength();\n             p.pattern = qp.getPattern();\n             p.maxItems = qp.getMaxItems();\n             p.minItems = qp.getMinItems();\n-            p.uniqueItems = qp.getUniqueItems();\n+            p.uniqueItems = qp.isUniqueItems();\n             p.multipleOf = qp.getMultipleOf();\n         } else {\n             if (!(param instanceof BodyParameter)) {\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 1501,
        "bugNodeStartChar": 58811,
        "bugNodeLength": 24,
        "fixLineNum": 1501,
        "fixNodeStartChar": 58811,
        "fixNodeLength": 23,
        "sourceBeforeFix": "qp.getExclusiveMinimum()",
        "sourceAfterFix": "qp.isExclusiveMinimum()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "0ee5eebaefe8c07c0c10f8595e241aa49ed12cc5",
        "fixCommitParentSHA1": "d7a2fe9b984acb5b2521eebd79055ddfcca750ba",
        "bugFilePath": "src/api/org/openmrs/hl7/handler/ADTA28Handler.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/hl7/handler/ADTA28Handler.java b/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\nindex ad5a952..2c78d85 100644\n--- a/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\n+++ b/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\n@@ -288,7 +288,7 @@\n \t\t\r\n \t\t// Date of Birth\r\n \t\tTS dateOfBirth = pid.getDateTimeOfBirth();\r\n-\t    if (dateOfBirth == null)\t\r\n+\t    if (dateOfBirth == null || dateOfBirth.getTime() == null || dateOfBirth.getTime().getValue() == null)\t\r\n \t\t\tthrow new HL7Exception(\"Missing birth date in the PID segment\");\r\n \t\tpatient.setBirthdate(tsToDate(dateOfBirth));\r\n \t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 291,
        "bugNodeStartChar": 10658,
        "bugNodeLength": 19,
        "fixLineNum": 291,
        "fixNodeStartChar": 10368,
        "fixNodeLength": 96,
        "sourceBeforeFix": "dateOfBirth == null",
        "sourceAfterFix": "dateOfBirth == null || dateOfBirth.getTime() == null || dateOfBirth.getTime().getValue() == null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7b7249ad2cc3f33406ab319cdf53ad86121fe177",
        "fixCommitParentSHA1": "af6a4908c4dd38c0f935803ab6b8ed99387219f2",
        "bugFilePath": "bundles/binding/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/bus/KNXBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/bus/KNXBinding.java b/bundles/binding/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/bus/KNXBinding.java\nindex 3a2f6cc..94c6c83 100644\n--- a/bundles/binding/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/bus/KNXBinding.java\n+++ b/bundles/binding/org.openhab.binding.knx/src/main/java/org/openhab/binding/knx/internal/bus/KNXBinding.java\n@@ -68,7 +68,7 @@\n \tprivate boolean mKNXConnectionEstablished;\n \n \tpublic void activate(ComponentContext componentContext) {\n-\t\tlogger.info(\"Calimero library version {}\", Settings.getLibraryVersion());\n+\t\tlogger.debug(\"Calimero library version {}\", Settings.getLibraryVersion());\n \t\tlogger.trace(\"KNXBinding: activating\");\n \t\tKNXConnection.addConnectionListener(this);\n \t\tmKNXBusReaderScheduler.start();\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 71,
        "bugNodeStartChar": 2666,
        "bugNodeLength": 72,
        "fixLineNum": 71,
        "fixNodeStartChar": 2666,
        "fixNodeLength": 73,
        "sourceBeforeFix": "logger.info(\"Calimero library version {}\",Settings.getLibraryVersion())",
        "sourceAfterFix": "logger.debug(\"Calimero library version {}\",Settings.getLibraryVersion())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0592e84a3c07b4451e81d2eecc0c51af384858d2",
        "fixCommitParentSHA1": "04c93e8b98250230c4d22423372acd1c29e2c770",
        "bugFilePath": "dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java",
        "fixPatch": "diff --git a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\nindex 19d581f..6b07cc8 100644\n--- a/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n+++ b/dubbo-common/src/main/java/com/alibaba/dubbo/common/utils/ExecutorUtil.java\n@@ -34,9 +34,9 @@\n             new LinkedBlockingQueue<Runnable>(100),\n             new NamedThreadFactory(\"Close-ExecutorService-Timer\", true));\n \n-    public static boolean isShutdown(Executor executor) {\n+    public static boolean isTerminated(Executor executor) {\n         if (executor instanceof ExecutorService) {\n-            if (((ExecutorService) executor).isShutdown()) {\n+            if (((ExecutorService) executor).isTerminated()) {\n                 return true;\n             }\n         }\n@@ -44,7 +44,7 @@\n     }\n \n     public static void gracefulShutdown(Executor executor, int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -63,13 +63,13 @@\n             es.shutdownNow();\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     public static void shutdownNow(Executor executor, final int timeout) {\n-        if (!(executor instanceof ExecutorService) || isShutdown(executor)) {\n+        if (!(executor instanceof ExecutorService) || isTerminated(executor)) {\n             return;\n         }\n         final ExecutorService es = (ExecutorService) executor;\n@@ -85,13 +85,13 @@\n         } catch (InterruptedException ex) {\n             Thread.currentThread().interrupt();\n         }\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             newThreadToCloseExecutor(es);\n         }\n     }\n \n     private static void newThreadToCloseExecutor(final ExecutorService es) {\n-        if (!isShutdown(es)) {\n+        if (!isTerminated(es)) {\n             shutdownExecutor.execute(new Runnable() {\n                 @Override\n                 public void run() {\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 39,
        "bugNodeStartChar": 1741,
        "bugNodeLength": 41,
        "fixLineNum": 39,
        "fixNodeStartChar": 1741,
        "fixNodeLength": 43,
        "sourceBeforeFix": "((ExecutorService)executor).isShutdown()",
        "sourceAfterFix": "((ExecutorService)executor).isTerminated()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5be7bae54f193a7a9c6adf15e323af1e187a7592",
        "fixCommitParentSHA1": "9191877f3b292f844374ca02134faa199cf89306",
        "bugFilePath": "src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\nindex 6aee143..9c80680 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n@@ -75,7 +75,7 @@\n           Transition transition = parser.transitionIndex.get(predictedTransition.object());\n           State newState = transition.apply(state, predictedTransition.score());\n           // System.err.println(\"  Transition: \" + transition + \" (\" + predictedTransition.score() + \")\");\n-          if (bestState == null || newState.score() < bestState.score()) {\n+          if (bestState == null || bestState.score() < newState.score()) {\n             bestState = newState;\n           }\n           beam.add(newState);\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 78,
        "bugNodeStartChar": 2935,
        "bugNodeLength": 16,
        "fixLineNum": 78,
        "fixNodeStartChar": 2935,
        "fixNodeLength": 17,
        "sourceBeforeFix": "newState.score()",
        "sourceAfterFix": "bestState.score()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6ee0105ac80d34691c4a073e87397ed0fc6b68c4",
        "fixCommitParentSHA1": "e91b8db8a93ddccf5ddaeba557aed1a5869e5ce5",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\nindex 6370303..4ec778a 100644\n--- a/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n+++ b/presto-main/src/test/java/com/facebook/presto/block/BlockAssertions.java\n@@ -144,7 +144,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n@@ -254,7 +254,7 @@\n         }\n         int[] ids = new int[length];\n         for (int i = 0; i < length; i++) {\n-            ids[i] = length % dictionarySize;\n+            ids[i] = i % dictionarySize;\n         }\n         return new DictionaryBlock(length, builder.build(), wrappedIntArray(ids));\n     }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 257,
        "bugNodeStartChar": 8467,
        "bugNodeLength": 23,
        "fixLineNum": 257,
        "fixNodeStartChar": 8467,
        "fixNodeLength": 18,
        "sourceBeforeFix": "length % dictionarySize",
        "sourceAfterFix": "i % dictionarySize"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "8d133e14729b78621a02916a0ce96a56363c8e0c",
        "fixCommitParentSHA1": "64eb17f8d0efc7070a0f1e19394b7eb15086cec7",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java b/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\nindex d5ae64a..c5cd3b8 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/RoutePerformanceTest.java\n@@ -31,7 +31,7 @@\n  */\n public class RoutePerformanceTest extends ContextTestSupport {\n \n-    private int size = 10000;\n+    private int size = 500;\n     private SimpleDataSet dataSet = new SimpleDataSet(size);\n     private String uri = \"mock:results\";\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 34,
        "bugNodeStartChar": 1368,
        "bugNodeLength": 12,
        "fixLineNum": 34,
        "fixNodeStartChar": 1368,
        "fixNodeLength": 10,
        "sourceBeforeFix": "size=10000",
        "sourceAfterFix": "size=500"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "ed5e5d7b4665a39f7141d266098f21f29620e976",
        "fixCommitParentSHA1": "68ae71b650b17ad97b04ee6ab6557195577dac2a",
        "bugFilePath": "src/web/org/openmrs/module/web/WebModuleUtil.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/module/web/WebModuleUtil.java b/src/web/org/openmrs/module/web/WebModuleUtil.java\nindex 6ed18eb..e4f9b18 100644\n--- a/src/web/org/openmrs/module/web/WebModuleUtil.java\n+++ b/src/web/org/openmrs/module/web/WebModuleUtil.java\n@@ -313,7 +313,7 @@\n \t\t\t\t\t\tlog.warn(msg + \" for module: \" + mod.getModuleId(), e);\r\n \t\t\t\t\t\r\n \t\t\t\t\ttry {\r\n-\t\t\t\t\t\tModuleFactory.stopModule(mod); //remove jar from classloader play \r\n+\t\t\t\t\t\tModuleFactory.stopModule(mod, true, true); //remove jar from classloader play \r\n \t\t\t\t\t\tstopModule(mod, servletContext, true);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tcatch (Exception e2) {\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 316,
        "bugNodeStartChar": 12101,
        "bugNodeLength": 29,
        "fixLineNum": 316,
        "fixNodeStartChar": 11786,
        "fixNodeLength": 41,
        "sourceBeforeFix": "ModuleFactory.stopModule(mod)",
        "sourceAfterFix": "ModuleFactory.stopModule(mod,true,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dd6dbd5cf29795ac5bd8f76b76c562d4737917b8",
        "fixCommitParentSHA1": "6b8d323e5538c37030c8eb89653e0da61218574c",
        "bugFilePath": "servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java b/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\nindex 7061cb6..cecbef8 100644\n--- a/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\n+++ b/servers/src/main/java/tachyon/master/file/journal/AddCheckpointEntry.java\n@@ -35,7 +35,7 @@\n     mWorkerId = workerId;\n     mFileId = fileId;\n     mLength = length;\n-    mCheckpointPath = checkpointPath.getPath();\n+    mCheckpointPath = checkpointPath.toString();\n     mOpTimeMs = opTimeMs;\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 38,
        "bugNodeStartChar": 1448,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1448,
        "fixNodeLength": 25,
        "sourceBeforeFix": "checkpointPath.getPath()",
        "sourceAfterFix": "checkpointPath.toString()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "41b10e978c454e91df3b6bd472e1fe27ec72e456",
        "fixCommitParentSHA1": "d2e13098e5373cb09bb4ebffef1a0e1ddf54f350",
        "bugFilePath": "core/server/src/main/java/alluxio/web/UIFileInfo.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/web/UIFileInfo.java b/core/server/src/main/java/alluxio/web/UIFileInfo.java\nindex f4acea2..b80bf48 100644\n--- a/core/server/src/main/java/alluxio/web/UIFileInfo.java\n+++ b/core/server/src/main/java/alluxio/web/UIFileInfo.java\n@@ -279,7 +279,7 @@\n    * @return the percentage of the file stored in the given tier\n    */\n   public int getOnTierPercentage(String tierAlias) {\n-    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0;\n+    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L;\n     return (int) (100 * sizeOnTier / mSize);\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 282,
        "bugNodeStartChar": 8298,
        "bugNodeLength": 67,
        "fixLineNum": 282,
        "fixNodeStartChar": 8298,
        "fixNodeLength": 68,
        "sourceBeforeFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0",
        "sourceAfterFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9aa49c8f6d2b30577565f87984819e1df0d62d0f",
        "fixCommitParentSHA1": "536bc20b48637fa85025b790736114d5dcb7a385",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\nindex da90b2f..cf423bb 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\n@@ -52,8 +52,8 @@\n      * Optional prefix for warning suppressions that are only intended to be\n      * recognized by checkstyle. For instance, to suppress {@code\n      * FallThroughCheck} only in checkstyle (and not in javac), use the\n-     * suppression {@code \"checkstyle:fallthrough\"}. To suppress the warning in\n-     * both tools, just use {@code \"fallthrough\"}.\n+     * suppression {@code \"checkstyle:fallthrough\"} or {@code \"checkstyle:FallThrough\"}.\n+     * To suppress the warning in both tools, just use {@code \"fallthrough\"}.\n      */\n     public static final String CHECKSTYLE_PREFIX = \"checkstyle:\";\n \n@@ -163,7 +163,7 @@\n                         .getLastColumn() >= column;\n             final boolean nameMatches =\n                 ALL_WARNING_MATCHING_ID.equals(entry.getCheckName())\n-                    || entry.getCheckName().equals(checkAlias);\n+                    || entry.getCheckName().equalsIgnoreCase(checkAlias);\n             if (afterStart && beforeEnd && nameMatches) {\n                 return true;\n             }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 166,
        "bugNodeStartChar": 6782,
        "bugNodeLength": 39,
        "fixLineNum": 166,
        "fixNodeStartChar": 6782,
        "fixNodeLength": 49,
        "sourceBeforeFix": "entry.getCheckName().equals(checkAlias)",
        "sourceAfterFix": "entry.getCheckName().equalsIgnoreCase(checkAlias)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e981384cc21ca3c1958acd4b494a6ddd147c0a60",
        "fixCommitParentSHA1": "e4262ff29940c300db4fc9739ebefb9039f12ba3",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\nindex d52f996..435ac50 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n@@ -132,7 +132,7 @@\n             if (ssl.has(CommonAttributes.CIPHER_SUITE))\n                 config.setSslCiphers(ssl.get(CommonAttributes.CIPHER_SUITE).asString());\n             if (ssl.has(CommonAttributes.PROTOCOL))\n-                config.setSslKeyAlias(ssl.get(CommonAttributes.PROTOCOL).asString());\n+                config.setSslProtocol(ssl.get(CommonAttributes.PROTOCOL).asString());\n             if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE))\n                 config.setSslTrustStore(ssl.get(CommonAttributes.CA_CERTIFICATE_FILE).asString());\n             if (ssl.has(CommonAttributes.CA_REVOCATION_URL))\n@@ -144,9 +144,9 @@\n             config.setProxyList(modelconf.get(CommonAttributes.PROXY_LIST).asString());\n         }\n         if (modelconf.hasDefined(CommonAttributes.PROXY_URL))\n-            config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString());\n+            config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString());\n         if (modelconf.has(CommonAttributes.ADVERTISE_SECURITY_KEY))\n-            config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n+            config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n \n         if (modelconf.hasDefined(CommonAttributes.EXCLUDED_CONTEXTS)) {\n             // read the default host.\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 147,
        "bugNodeStartChar": 6810,
        "bugNodeLength": 73,
        "fixLineNum": 147,
        "fixNodeStartChar": 6810,
        "fixNodeLength": 72,
        "sourceBeforeFix": "config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString())",
        "sourceAfterFix": "config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "89fc7248e8d0a2ba5a7f8ce300b5519e9c6570da",
        "fixCommitParentSHA1": "19f19e1590aaaae525149e162e0084aca587cfac",
        "bugFilePath": "core/src/main/java/cucumber/runtime/Runtime.java",
        "fixPatch": "diff --git a/core/src/main/java/cucumber/runtime/Runtime.java b/core/src/main/java/cucumber/runtime/Runtime.java\nindex fb459d6..1e6399c 100644\n--- a/core/src/main/java/cucumber/runtime/Runtime.java\n+++ b/core/src/main/java/cucumber/runtime/Runtime.java\n@@ -86,12 +86,12 @@\n     }\n \n     public Runtime(ResourceLoader resourceLoader, ClassLoader classLoader, Collection<? extends Backend> backends,\n-                   RuntimeOptions runtimeOptions, RuntimeGlue optionalGlue) {\n+                   RuntimeOptions runtimeOptions, Glue optionalGlue) {\n         this(resourceLoader, classLoader, backends, runtimeOptions, TimeService.SYSTEM, optionalGlue);\n     }\n \n     public Runtime(ResourceLoader resourceLoader, ClassLoader classLoader, Collection<? extends Backend> backends,\n-                   RuntimeOptions runtimeOptions, TimeService stopWatch, RuntimeGlue optionalGlue) {\n+                   RuntimeOptions runtimeOptions, TimeService stopWatch, Glue optionalGlue) {\n         if (backends.isEmpty()) {\n             throw new CucumberException(\"No backends were found. Please make sure you have a backend module on your CLASSPATH.\");\n         }\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 94,
        "bugNodeStartChar": 3684,
        "bugNodeLength": 24,
        "fixLineNum": 94,
        "fixNodeStartChar": 3684,
        "fixNodeLength": 17,
        "sourceBeforeFix": "RuntimeGlue optionalGlue",
        "sourceAfterFix": "Glue optionalGlue"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\nindex b3b91fd..c6de456 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n@@ -1553,7 +1553,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1574,7 +1574,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1595,7 +1595,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1676,7 +1676,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1704,7 +1704,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1732,7 +1732,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1760,7 +1760,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1598,
        "bugNodeStartChar": 80251,
        "bugNodeLength": 22,
        "fixLineNum": 1598,
        "fixNodeStartChar": 80251,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(246)",
        "sourceAfterFix": "new StringBuilder(245)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "950656a1fa6775e52d13648e6646bdadbfb4e173",
        "fixCommitParentSHA1": "c9f7bbfd83f0daf94c36cc5b246afa9153fb8fd4",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java b/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\nindex 9059937..3fc88fd 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/client/TxnMapRequest.java\n@@ -83,7 +83,7 @@\n                 return map.putIfAbsent(key, value);\n             case REPLACE:\n                 return map.replace(key, value);\n-            case REPLACE_IS_SAME:\n+            case REPLACE_IF_SAME:\n                 return map.replace(key, value, newValue);\n             case SET:\n                 map.set(key, value);\n@@ -142,7 +142,7 @@\n         PUT(4),\n         PUT_IF_ABSENT(5),\n         REPLACE(6),\n-        REPLACE_IS_SAME(7),\n+        REPLACE_IF_SAME(7),\n         SET(8),\n         REMOVE(9),\n         DELETE(10),\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 145,
        "bugNodeStartChar": 4524,
        "bugNodeLength": 18,
        "fixLineNum": 145,
        "fixNodeStartChar": 4524,
        "fixNodeLength": 18,
        "sourceBeforeFix": "REPLACE_IS_SAME(7)",
        "sourceAfterFix": "REPLACE_IF_SAME(7)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9467bef8ea9a62658b32dd43a76f4f98087d1986",
        "fixCommitParentSHA1": "0ef751797e78f04798933bb87cf8bbb291248753",
        "bugFilePath": "hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java",
        "fixPatch": "diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\nindex 6b24a25..e22949ee 100644\n--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/TestKeyShell.java\n@@ -161,7 +161,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -174,7 +174,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"key1 has not been created.\"));\n   }\n \n@@ -187,7 +187,7 @@\n     KeyShell ks = new KeyShell();\n     ks.setConf(new Configuration());\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -216,7 +216,7 @@\n     config.set(KeyProviderFactory.KEY_PROVIDER_PATH, \"user:///\");\n     ks.setConf(config);\n     rc = ks.run(args1);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n     assertTrue(outContent.toString().contains(\"There are no valid \" +\n \t\t\"KeyProviders configured.\"));\n   }\n@@ -262,19 +262,19 @@\n     final String[] args2 = {\"create\", \"keyattr2\", \"--provider\", jceksProvider,\n             \"--attr\", \"=bar\"};\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Not in attribute = value form */\n     outContent.reset();\n     args2[5] = \"foo\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* No attribute or value */\n     outContent.reset();\n     args2[5] = \"=\";\n     rc = ks.run(args2);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Legal: attribute is a, value is b=c */\n     outContent.reset();\n@@ -308,7 +308,7 @@\n             \"--attr\", \"foo=bar\",\n             \"--attr\", \"foo=glarch\"};\n     rc = ks.run(args4);\n-    assertEquals(-1, rc);\n+    assertEquals(1, rc);\n \n     /* Clean up to be a good citizen */\n     deleteKey(ks, \"keyattr1\");\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 311,
        "bugNodeStartChar": 10006,
        "bugNodeLength": 2,
        "fixLineNum": 311,
        "fixNodeStartChar": 10006,
        "fixNodeLength": 1,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "270185aba54cef1d8ce59ec347b5623f2e502afe",
        "fixCommitParentSHA1": "2474dad2a56b32527bb6ee10545ee3de476bc583",
        "bugFilePath": "src/jvm/clojure/lang/Numbers.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 043f9ae..8d5fd85 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1436,7 +1436,7 @@\n \t\telse\n \t\t\t{\n \t\t\tISeq s = RT.seq(sizeOrSeq);\n-\t\t\tint size = s.count();\n+\t\t\tint size = RT.count(s);\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\t\tret[i] = ((Number) s.first()).floatValue();\n@@ -1467,7 +1467,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).doubleValue();\n@@ -1498,7 +1498,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tint[] ret = new int[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).intValue();\n@@ -1529,7 +1529,7 @@\n \telse\n \t\t{\n \t\tISeq s = RT.seq(sizeOrSeq);\n-\t\tint size = s.count();\n+\t\tint size = RT.count(s);\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.next())\n \t\t\tret[i] = ((Number) s.first()).longValue();\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 1439,
        "bugNodeStartChar": 31374,
        "bugNodeLength": 9,
        "fixLineNum": 1439,
        "fixNodeStartChar": 31374,
        "fixNodeLength": 11,
        "sourceBeforeFix": "s.count()",
        "sourceAfterFix": "RT.count(s)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a7f54a539a4c8f92f4895934480061a2ccbcd499",
        "fixCommitParentSHA1": "77f5f05936af7437ca38ef12ee82f6e2666ed55b",
        "bugFilePath": "clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java",
        "fixPatch": "diff --git a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java\nindex b3b8b5a..fc4f038 100644\n--- a/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java\n+++ b/clustering/jgroups/extension/src/main/java/org/jboss/as/clustering/jgroups/subsystem/JGroupsSubsystemXMLWriter.java\n@@ -224,10 +224,10 @@\n     }\n \n     private static void writeAttribute(XMLExtendedStreamWriter writer, ModelNode model, Attribute attribute) throws XMLStreamException {\n-        attribute.getDefinition().getAttributeMarshaller().marshallAsAttribute(attribute.getDefinition(), model, true, writer);\n+        attribute.getDefinition().getMarshaller().marshallAsAttribute(attribute.getDefinition(), model, true, writer);\n     }\n \n     private static void writeElement(XMLExtendedStreamWriter writer, ModelNode model, Attribute attribute) throws XMLStreamException {\n-        attribute.getDefinition().getAttributeMarshaller().marshallAsElement(attribute.getDefinition(), model, true, writer);\n+        attribute.getDefinition().getMarshaller().marshallAsElement(attribute.getDefinition(), model, true, writer);\n     }\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 231,
        "bugNodeStartChar": 13595,
        "bugNodeLength": 50,
        "fixLineNum": 231,
        "fixNodeStartChar": 13595,
        "fixNodeLength": 41,
        "sourceBeforeFix": "attribute.getDefinition().getAttributeMarshaller()",
        "sourceAfterFix": "attribute.getDefinition().getMarshaller()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "e8a74c8ad07bbf497026a6b8bde532cd61f79f17",
        "fixCommitParentSHA1": "f34fc73e89e88da32c36786c8634afa9dc090207",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\nindex e94e5dc..cb5d3c6 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/DefaultCookie.java\n@@ -273,7 +273,7 @@\n \n         if (getPath() == null && that.getPath() != null) {\n             return false;\n-        } else if (that.getPath() == null) {\n+        } else if (that.getPath() == null && getPath() != null) {\n             return false;\n         }\n         if (!getPath().equals(that.getPath())) {\n@@ -282,7 +282,7 @@\n \n         if (getDomain() == null && that.getDomain() != null) {\n             return false;\n-        } else if (that.getDomain() == null) {\n+        } else if (that.getDomain() == null && getDomain() != null) {\n             return false;\n         }\n         return getDomain().equalsIgnoreCase(that.getDomain());\n@@ -298,7 +298,7 @@\n \n         if (getPath() == null && c.getPath() != null) {\n             return -1;\n-        } else if (c.getPath() == null) {\n+        } else if (c.getPath() == null && getPath() != null) {\n             return 1;\n         }\n         v = getPath().compareTo(c.getPath());\n@@ -308,7 +308,7 @@\n \n         if (getDomain() == null && c.getDomain() != null) {\n             return -1;\n-        } else if (c.getDomain() == null) {\n+        } else if (c.getDomain() == null && getDomain() != null) {\n             return 1;\n         }\n         v = getDomain().compareToIgnoreCase(c.getDomain());\n",
        "projectName": "netty.netty",
        "bugLineNum": 285,
        "bugNodeStartChar": 7448,
        "bugNodeLength": 24,
        "fixLineNum": 285,
        "fixNodeStartChar": 7448,
        "fixNodeLength": 47,
        "sourceBeforeFix": "that.getDomain() == null",
        "sourceAfterFix": "that.getDomain() == null && getDomain() != null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "8e94cd6e2655a4e1c4efc5a41b700e24bd1f96cf",
        "fixCommitParentSHA1": "35518019a6870e18c9bb063714754a30f6d50225",
        "bugFilePath": "src/main/java/org/b3log/solo/model/UserExt.java",
        "fixPatch": "diff --git a/src/main/java/org/b3log/solo/model/UserExt.java b/src/main/java/org/b3log/solo/model/UserExt.java\nindex 77d56f1..6202abe 100644\n--- a/src/main/java/org/b3log/solo/model/UserExt.java\n+++ b/src/main/java/org/b3log/solo/model/UserExt.java\n@@ -37,7 +37,7 @@\n     /**\n      * Max user name length.\n      */\n-    public static final int MAX_USER_NAME_LENGTH = 20;\n+    public static final int MAX_USER_NAME_LENGTH = 64;\n \n     /**\n      * Min user name length.\n@@ -59,8 +59,8 @@\n      * <p>\n      * A valid user name:\n      * <ul>\n-     * <li>length [1, 20]</li>\n-     * <li>content {a-z, A-Z, 0-9}</li>\n+     * <li>length [1, 64]</li>\n+     * <li>content {a-z, A-Z, 0-9, -}</li>\n      * <li>Not contains \"admin\"/\"Admin\"</li>\n      * </ul>\n      * </p>\n@@ -77,8 +77,7 @@\n         char c;\n         for (int i = 0; i < length; i++) {\n             c = name.charAt(i);\n-\n-            if (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z') || '0' <= c && c <= '9') {\n+            if (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z') || ('0' <= c && c <= '9') || '-' == c) {\n                 continue;\n             }\n \n",
        "projectName": "b3log.solo",
        "bugLineNum": 40,
        "bugNodeStartChar": 1285,
        "bugNodeLength": 25,
        "fixLineNum": 40,
        "fixNodeStartChar": 1285,
        "fixNodeLength": 25,
        "sourceBeforeFix": "MAX_USER_NAME_LENGTH=20",
        "sourceAfterFix": "MAX_USER_NAME_LENGTH=64"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "ea252e39da774a9dc81718f19019ba533209f774",
        "fixCommitParentSHA1": "3b016b86ecf0e167ceaa67456b170ef7b0cb0354",
        "bugFilePath": "src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java b/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\nindex 71531d3..c48448a 100644\n--- a/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\n+++ b/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java\n@@ -106,7 +106,7 @@\n   private void configurationElement(XNode context) {\n     try {\n       String namespace = context.getStringAttribute(\"namespace\");\n-      if (namespace.equals(\"\")) {\n+      if (namespace == null || namespace.equals(\"\")) {\n         throw new BuilderException(\"Mapper's namespace cannot be empty\");\n       }\n       builderAssistant.setCurrentNamespace(namespace);\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 109,
        "bugNodeStartChar": 4145,
        "bugNodeLength": 20,
        "fixLineNum": 109,
        "fixNodeStartChar": 4145,
        "fixNodeLength": 41,
        "sourceBeforeFix": "namespace.equals(\"\")",
        "sourceAfterFix": "namespace == null || namespace.equals(\"\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "53fd1f7f2e34c70008553640fdf2123e41a02592",
        "fixCommitParentSHA1": "6cdb02050d2081f4fd265e80737b9736440c3c17",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java\nindex bb60f04..34111a6 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java\n@@ -89,7 +89,7 @@\n \n \t\t@Override\n \t\tprotected boolean removeEldestEntry(Map.Entry<K, List<PropertyMapping>> eldest) {\n-\t\t\treturn size() >= this.capacity;\n+\t\t\treturn size() > this.capacity;\n \n \t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 92,
        "bugNodeStartChar": 2980,
        "bugNodeLength": 23,
        "fixLineNum": 92,
        "fixNodeStartChar": 2980,
        "fixNodeLength": 22,
        "sourceBeforeFix": "size() >= this.capacity",
        "sourceAfterFix": "size() > this.capacity"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9716d2ae673a576cb345c3bfb24cf71654d8f112",
        "fixCommitParentSHA1": "3181f10fb9e6b330d1effee25be3ef87872f8fa0",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\nindex 89010de..010aef6 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n@@ -98,7 +98,7 @@\n \t */\n \tpublic GarageDoorData getGarageData() throws InvalidLoginException,\n \t\t\tIOException {\n-\t\tlogger.debug(\"Retreiveing door data\");\n+\t\tlogger.trace(\"Retreiveing door data\");\n \t\tString url = String.format(\n \t\t\t\t\"%s/api/v4/userdevicedetails/get?appId=%s&SecurityToken=%s\",\n \t\t\t\tWEBSITE, enc(appId), enc(getSecurityToken()));\n@@ -112,7 +112,7 @@\n \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n-\t\tlogger.debug(\"attempting to login\");\n+\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));\n@@ -183,13 +183,13 @@\n \t\t\tString payload, String payloadType, boolean retry)\n \t\t\tthrows IOException, InvalidLoginException {\n \n-\t\tlogger.debug(\"Requsting URL {}\", url);\n+\t\tlogger.trace(\"Requsting URL {}\", url);\n \n \t\tString dataString = executeUrl(method, url, header,\n \t\t\t\tpayload == null ? null : IOUtils.toInputStream(payload),\n \t\t\t\tpayloadType, timeout);\n \n-\t\tlogger.debug(\"Received MyQ  JSON: {}\", dataString);\n+\t\tlogger.trace(\"Received MyQ  JSON: {}\", dataString);\n \n \t\tif (dataString == null) {\n \t\t\tthrow new IOException(\"Null response from MyQ server\");\n@@ -199,7 +199,7 @@\n \t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tJsonNode rootNode = mapper.readTree(dataString);\n \t\t\tint returnCode = rootNode.get(\"ReturnCode\").asInt();\n-\t\t\tlogger.debug(\"myq ReturnCode: {}\", returnCode);\n+\t\t\tlogger.trace(\"myq ReturnCode: {}\", returnCode);\n \n \t\t\tMyQResponseCode rc = MyQResponseCode.fromCode(returnCode);\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 202,
        "bugNodeStartChar": 6156,
        "bugNodeLength": 46,
        "fixLineNum": 202,
        "fixNodeStartChar": 6156,
        "fixNodeLength": 46,
        "sourceBeforeFix": "logger.debug(\"myq ReturnCode: {}\",returnCode)",
        "sourceAfterFix": "logger.trace(\"myq ReturnCode: {}\",returnCode)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 321,
        "bugNodeStartChar": 12441,
        "bugNodeLength": 10,
        "fixLineNum": 321,
        "fixNodeStartChar": 12441,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15854",
        "sourceAfterFix": "id=10854"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f0ef082c1a25d4d371167c751ac5d1941f2777f8",
        "fixCommitParentSHA1": "28ae94f260d01f723b692bfbec688b542ebb49ad",
        "bugFilePath": "src/com/google/javascript/jscomp/ClosureCheckModule.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ClosureCheckModule.java b/src/com/google/javascript/jscomp/ClosureCheckModule.java\nindex a809416..f95a0bb 100644\n--- a/src/com/google/javascript/jscomp/ClosureCheckModule.java\n+++ b/src/com/google/javascript/jscomp/ClosureCheckModule.java\n@@ -45,9 +45,8 @@\n           \"@export is not allowed here in a non-legacy goog.module.\"\n           + \" Consider using goog.exportSymbol instead.\");\n \n-  // TODO(tbreisacher): Make this an error when existing violations are fixed.\n   static final DiagnosticType GOOG_MODULE_IN_NON_MODULE =\n-      DiagnosticType.disabled(\n+      DiagnosticType.error(\n           \"JSC_GOOG_MODULE_IN_NON_MODULE\",\n           \"goog.module() call must be the first statement in a module.\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 50,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 140,
        "fixLineNum": 50,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 137,
        "sourceBeforeFix": "DiagnosticType.disabled(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca",
        "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 35,
        "bugNodeStartChar": 1324,
        "bugNodeLength": 33,
        "fixLineNum": 35,
        "fixNodeStartChar": 1324,
        "fixNodeLength": 27,
        "sourceBeforeFix": "targetActor.addListener(listener)",
        "sourceAfterFix": "actor.addListener(listener)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "e3b94b6ab4c29b8dddb99ce9fd2efa36e097d455",
        "fixCommitParentSHA1": "d033d51116738b9bd5cedabec5b1f8236ab5b201",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java b/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\nindex 414ef09..446e929 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SharedBuffer.java\n@@ -343,7 +343,7 @@\n             }\n \n             // refill buffer from queued pages\n-            while (!queuedPages.isEmpty() && bufferedBytes >= maxBufferedBytes) {\n+            while (!queuedPages.isEmpty() && bufferedBytes < maxBufferedBytes) {\n                 QueuedPage queuedPage = queuedPages.removeFirst();\n                 addInternal(queuedPage.getPage());\n                 queuedPage.getFuture().set(null);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 346,
        "bugNodeStartChar": 11504,
        "bugNodeLength": 33,
        "fixLineNum": 346,
        "fixNodeStartChar": 11504,
        "fixNodeLength": 32,
        "sourceBeforeFix": "bufferedBytes >= maxBufferedBytes",
        "sourceAfterFix": "bufferedBytes < maxBufferedBytes"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "5bcda0dcda632007620256bcc654628a81ab50f0",
        "fixCommitParentSHA1": "eb3e40c95cba207661acd7f8c5d79cc40625ec9c",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/udf/UDFRegExpExtract.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFRegExpExtract.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFRegExpExtract.java\nindex 8bdf8be..cec996d 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFRegExpExtract.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFRegExpExtract.java\n@@ -43,7 +43,7 @@\n     if (s == null || regex == null) {\n       return null;\n     }\n-    if (!regex.equals(lastRegex)) {\n+    if (!regex.equals(lastRegex) || p == null) {\n       lastRegex = regex;\n       p = Pattern.compile(regex);\n     }\n",
        "projectName": "apache.hive",
        "bugLineNum": 46,
        "bugNodeStartChar": 1672,
        "bugNodeLength": 24,
        "fixLineNum": 46,
        "fixNodeStartChar": 1672,
        "fixNodeLength": 37,
        "sourceBeforeFix": "!regex.equals(lastRegex)",
        "sourceAfterFix": "!regex.equals(lastRegex) || p == null"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "979ce2a33924be23a6343640ed0c038af5a33740",
        "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 33,
        "bugNodeStartChar": 1272,
        "bugNodeLength": 40,
        "fixLineNum": 33,
        "fixNodeStartChar": 1272,
        "fixNodeLength": 34,
        "sourceBeforeFix": "targetActor.addCaptureListener(listener)",
        "sourceAfterFix": "actor.addCaptureListener(listener)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "eb9527a17038c6a44b4e1afa1fd82eb195baacb8",
        "fixCommitParentSHA1": "858199a2fa14f835369ede30deb3de7fdfcc98c9",
        "bugFilePath": "spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\nindex b70d337..faf21eb 100644\n--- a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\n+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/MetricsWebFilter.java\n@@ -85,7 +85,7 @@\n \t\tif (!this.autoTimer.isEnabled()) {\n \t\t\treturn chain.filter(exchange);\n \t\t}\n-\t\treturn chain.filter(exchange).compose((call) -> filter(exchange, call));\n+\t\treturn chain.filter(exchange).transformDeferred((call) -> filter(exchange, call));\n \t}\n \n \tprivate Publisher<Void> filter(ServerWebExchange exchange, Mono<Void> call) {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 88,
        "bugNodeStartChar": 3103,
        "bugNodeLength": 64,
        "fixLineNum": 88,
        "fixNodeStartChar": 3103,
        "fixNodeLength": 74,
        "sourceBeforeFix": "chain.filter(exchange).compose((call) -> filter(exchange,call))",
        "sourceAfterFix": "chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java\nindex 58de618..1e78b89 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java\n@@ -163,7 +163,7 @@\n      */\n     private static String getSummarySentence(DetailNode ast) {\n         boolean flag = true;\n-        final StringBuilder result = new StringBuilder();\n+        final StringBuilder result = new StringBuilder(256);\n         for (DetailNode child : ast.getChildren()) {\n             if (ALLOWED_TYPES.contains(child.getType())) {\n                 result.append(child.getText());\n@@ -193,7 +193,7 @@\n      * @return content of child nodes as string.\n      */\n     private static String getContentOfChild(DetailNode child) {\n-        final StringBuilder contents = new StringBuilder();\n+        final StringBuilder contents = new StringBuilder(256);\n         for (DetailNode node : child.getChildren()) {\n             contents.append(node.getText().trim());\n         }\n@@ -224,7 +224,7 @@\n      * @return first sentence.\n      */\n     private static String getFirstSentence(DetailNode ast) {\n-        final StringBuilder result = new StringBuilder();\n+        final StringBuilder result = new StringBuilder(256);\n         final String periodSuffix = PERIOD + ' ';\n         for (DetailNode child : ast.getChildren()) {\n             final String text;\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 166,
        "bugNodeStartChar": 5981,
        "bugNodeLength": 19,
        "fixLineNum": 166,
        "fixNodeStartChar": 5981,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
        "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 115,
        "bugNodeStartChar": 6047,
        "bugNodeLength": 126,
        "fixLineNum": 115,
        "fixNodeStartChar": 6047,
        "fixNodeLength": 126,
        "sourceBeforeFix": "assertEquals(1,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())",
        "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c888434580c601ac9c4734e19d8eefac63518031",
        "fixCommitParentSHA1": "8818cf9ff4c491391eea41952031a91036dd62e0",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\nindex c20a70d..d80afd1 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\n@@ -762,9 +762,11 @@\n             + (StringUtils.isEmpty(modelPackage) ? \"\" : (modelPackage + \"/\")) + dataType;\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenModel cm, CodegenProperty cp) {\n         return \"{\" + getJSDocType(cm, cp) + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenModel cm, CodegenProperty cp) {\n         if (Boolean.TRUE.equals(cp.isContainer)) {\n@@ -787,9 +789,11 @@\n         return cp.isEnum || !languageSpecificPrimitives.contains(cp.baseType == null ? cp.datatype : cp.baseType);\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenParameter cp) {\n         return \"{\" + getJSDocType(cp) + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenParameter cp) {\n         String dataType = trimBrackets(cp.dataType);\n@@ -808,10 +812,12 @@\n         return cp.isEnum || !languageSpecificPrimitives.contains(cp.baseType == null ? cp.dataType : cp.baseType);\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenOperation co) {\n         String jsDocType = getJSDocType(co);\n         return jsDocType == null ? null : \"{\" + jsDocType + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenOperation co) {\n         String returnType = trimBrackets(co.returnType);\n@@ -860,10 +866,10 @@\n \n                 // Store JSDoc type specification into vendor-extension: x-jsdoc-type.\n                 for (CodegenParameter cp : operation.allParams) {\n-                    String jsdocType = getJSDocTypeWithBraces(cp);\n+                    String jsdocType = getJSDocType(cp);\n                     cp.vendorExtensions.put(\"x-jsdoc-type\", jsdocType);\n                 }\n-                String jsdocType = getJSDocTypeWithBraces(operation);\n+                String jsdocType = getJSDocType(operation);\n                 operation.vendorExtensions.put(\"x-jsdoc-type\", jsdocType);\n             }\n         }\n@@ -889,7 +895,7 @@\n \n             for (CodegenProperty var : cm.vars) {\n                 // Add JSDoc @type value for this property.\n-                String jsDocType = getJSDocTypeWithBraces(cm, var);\n+                String jsDocType = getJSDocType(cm, var);\n                 var.vendorExtensions.put(\"x-jsdoc-type\", jsDocType);\n \n                 if (Boolean.TRUE.equals(var.required)) {\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 892,
        "bugNodeStartChar": 35985,
        "bugNodeLength": 31,
        "fixLineNum": 892,
        "fixNodeStartChar": 35985,
        "fixNodeLength": 21,
        "sourceBeforeFix": "getJSDocTypeWithBraces(cm,var)",
        "sourceAfterFix": "getJSDocType(cm,var)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b61375cec50559b26f5b22fb359e7f920a458dab",
        "fixCommitParentSHA1": "110f4f01d35551e30ef1cfe23b0a27edbdcaa08a",
        "bugFilePath": "cli/src/main/java/org/jboss/as/cli/impl/CommandContextImpl.java",
        "fixPatch": "diff --git a/cli/src/main/java/org/jboss/as/cli/impl/CommandContextImpl.java b/cli/src/main/java/org/jboss/as/cli/impl/CommandContextImpl.java\nindex a8e6c73..80276c8 100644\n--- a/cli/src/main/java/org/jboss/as/cli/impl/CommandContextImpl.java\n+++ b/cli/src/main/java/org/jboss/as/cli/impl/CommandContextImpl.java\n@@ -850,7 +850,7 @@\n         if (trustManager == null || (lastChain = trustManager.getLastFailedCertificateChain()) == null) {\n             return false;\n         }\n-        error(\"Unable to connect due to unrecognised server certificate\");\n+        printLine(\"Unable to connect due to unrecognised server certificate\");\n         for (Certificate current : lastChain) {\n             if (current instanceof X509Certificate) {\n                 X509Certificate x509Current = (X509Certificate) current;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 853,
        "bugNodeStartChar": 35246,
        "bugNodeLength": 65,
        "fixLineNum": 853,
        "fixNodeStartChar": 35246,
        "fixNodeLength": 69,
        "sourceBeforeFix": "error(\"Unable to connect due to unrecognised server certificate\")",
        "sourceAfterFix": "printLine(\"Unable to connect due to unrecognised server certificate\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "75fccf13c0a0323179f37083f4249f8a4be38d85",
        "fixCommitParentSHA1": "56c311cdc3bd362df9a497bb32678e75a399e500",
        "bugFilePath": "twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java",
        "fixPatch": "diff --git a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\nindex c6fa950..c1736eb 100644\n--- a/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n+++ b/twitter4j-core/src/main/java/twitter4j/internal/async/DispatcherImpl.java\n@@ -87,7 +87,7 @@\n                 thread.shutdown();\n             }\n             synchronized (ticket) {\n-                ticket.notify();\n+                ticket.notifyAll();\n             }\n         }\n     }\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 90,
        "bugNodeStartChar": 2603,
        "bugNodeLength": 15,
        "fixLineNum": 90,
        "fixNodeStartChar": 2603,
        "fixNodeLength": 18,
        "sourceBeforeFix": "ticket.notify()",
        "sourceAfterFix": "ticket.notifyAll()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9f0d922f042d7342252ad2e1476ae45002c89cfd",
        "fixCommitParentSHA1": "aedb000cb50d123d7c13ba89fbd6b8c51e1fd80a",
        "bugFilePath": "bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\nindex 0758542..b3938ed 100644\n--- a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n+++ b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n@@ -178,8 +178,7 @@\n                     } else {\r\n                         sendColor(command, bridgeId, bulb);\r\n                     }\r\n-                }\r\n-                if (command instanceof PercentType) {\r\n+                } else if (command instanceof PercentType) {\r\n                     sendPercent(bulb, rgbwSteps, bridgeId, (PercentType) command, BindingType.brightness);\r\n                 }\r\n             }\r\n@@ -219,7 +218,7 @@\n                         command.toString(), repeatCount);\r\n                 if (command.compareTo(oldPercent) > 0) {\r\n                     for (int i = 0; i < repeatCount; i++) {\r\n-                        Thread.sleep(50);\r\n+                        Thread.sleep(100);\r\n                         if (BindingType.brightness.equals(type)) {\r\n                             sendIncrease(bulb, rgbwSteps, bridgeId);\r\n                         } else if (BindingType.colorTemperature.equals(type)) {\r\n@@ -228,7 +227,7 @@\n                     }\r\n                 } else if (command.compareTo(oldPercent) < 0) {\r\n                     for (int i = 0; i < repeatCount; i++) {\r\n-                        Thread.sleep(50);\r\n+                        Thread.sleep(100);\r\n                         if (BindingType.brightness.equals(type)) {\r\n                             sendDecrease(bulb, rgbwSteps, bridgeId);\r\n                         } else if (BindingType.colorTemperature.equals(type)) {\r\n@@ -716,7 +715,7 @@\n             for (int i = 0; i < 10; i++) {\r\n                 sendDecrease(bulb, 27, bridgeId);\r\n                 try {\r\n-                    Thread.sleep(50);\r\n+                    Thread.sleep(100);\r\n                 } catch (InterruptedException e) {\r\n                 }\r\n             }\r\n@@ -739,7 +738,7 @@\n             }\r\n             if (bulb > 5) {\r\n                 sendOn(bulb, bridgeId);\r\n-                Thread.sleep(50);\r\n+                Thread.sleep(100);\r\n                 String messageBytes = \"40:\" + Integer.toHexString(milightColorNo) + \":55\";\r\n                 sendMessage(messageBytes, bridgeId);\r\n             }\r\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 222,
        "bugNodeStartChar": 10388,
        "bugNodeLength": 16,
        "fixLineNum": 222,
        "fixNodeStartChar": 10167,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(50)",
        "sourceAfterFix": "Thread.sleep(100)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "486d1df6b22e089bfe2f62b7f487ad09fb4d5fc3",
        "fixCommitParentSHA1": "8c24d882e69b50b29742953c424596716ef82fb5",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 77fc5a6..1ef7eb9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -894,7 +894,7 @@\n                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         // A task should only be in the aborted state if the STAGE is done (ABORTED or FAILED)\n                         stageState.set(StageState.FAILED);\n-                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + stageState));\n+                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + currentState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {\n                         // all tasks are now scheduled, so we can check the finished state\n",
        "projectName": "facebook.presto",
        "bugLineNum": 897,
        "bugNodeStartChar": 36742,
        "bugNodeLength": 59,
        "fixLineNum": 897,
        "fixNodeStartChar": 36742,
        "fixNodeLength": 61,
        "sourceBeforeFix": "\"A task is in the ABORTED state but stage is \" + stageState",
        "sourceAfterFix": "\"A task is in the ABORTED state but stage is \" + currentState"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "f3ab698aab76ed690b1255a704d57d5cafb97e78",
        "fixCommitParentSHA1": "9b2cfa49cb6d7bcaa962acb726c6a27523961be0",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\nindex ccbbad0..ded7eb5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java\n@@ -661,7 +661,7 @@\n \t\t\t\tevent.setRelatedActor(oldScrollFocus);\n \t\t\t\tactor.fire(event);\n \t\t\t\tsuccess = !event.isCancelled();\n-\t\t\t\tif (success) setScrollFocus(oldScrollFocus);\n+\t\t\t\tif (!success) setScrollFocus(oldScrollFocus);\n \t\t\t}\n \t\t}\n \t\tPools.free(event);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 664,
        "bugNodeStartChar": 25352,
        "bugNodeLength": 7,
        "fixLineNum": 664,
        "fixNodeStartChar": 25352,
        "fixNodeLength": 8,
        "sourceBeforeFix": "success",
        "sourceAfterFix": "!success"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bc1adbde03308cb046dbc14e562a85b5e42d6ed1",
        "fixCommitParentSHA1": "4e76f946c28b6ce828fc6c1a6f8d53678a71124b",
        "bugFilePath": "graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java",
        "fixPatch": "diff --git a/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java b/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\nindex 0a817cd..017cb2c 100644\n--- a/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\n+++ b/graylog2-shared/src/main/java/org/graylog2/shared/inputs/InputRegistry.java\n@@ -92,7 +92,7 @@\n         if (inputState != null)\n             inputState.setState(IOState.Type.TERMINATED);\n \n-        return super.remove(input);\n+        return super.remove(inputState);\n     }\n \n     public boolean remove(IOState<MessageInput> inputState) {\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 95,
        "bugNodeStartChar": 2990,
        "bugNodeLength": 19,
        "fixLineNum": 95,
        "fixNodeStartChar": 2990,
        "fixNodeLength": 24,
        "sourceBeforeFix": "super.remove(input)",
        "sourceAfterFix": "super.remove(inputState)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a",
        "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39",
        "bugFilePath": "scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java",
        "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\nindex 645c455..93d3c01 100644\n--- a/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n+++ b/scribejava-httpclient-okhttp/src/test/java/com/github/scribejava/httpclient/okhttp/OAuthAsyncCompletionHandlerTest.java\n@@ -78,7 +78,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNotNull(callback.getResponse());\n@@ -98,7 +98,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n@@ -124,7 +124,7 @@\n                 .protocol(Protocol.HTTP_1_1)\n                 .code(200)\n                 .message(\"ok\")\n-                .body(ResponseBody.create(MediaType.get(\"text/plain\"), new byte[0]))\n+                .body(ResponseBody.create(new byte[0], MediaType.get(\"text/plain\")))\n                 .build();\n         handler.onResponse(call, response);\n         assertNull(callback.getResponse());\n",
        "projectName": "scribejava.scribejava",
        "bugLineNum": 127,
        "bugNodeStartChar": 4441,
        "bugNodeLength": 61,
        "fixLineNum": 127,
        "fixNodeStartChar": 4441,
        "fixNodeLength": 61,
        "sourceBeforeFix": "ResponseBody.create(MediaType.get(\"text/plain\"),new byte[0])",
        "sourceAfterFix": "ResponseBody.create(new byte[0],MediaType.get(\"text/plain\"))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "af87fe0e2580cafb6b563688f119b3d40ae100f2",
        "fixCommitParentSHA1": "a98d4bec0586a7d7982120c3557d89224fe48760",
        "bugFilePath": "testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\nindex cceeae5..7b2ef5d 100644\n--- a/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n+++ b/testsuite/integration/manualmode/src/test/java/org/jboss/as/test/manualmode/jca/workmanager/distributed/AbstractDwmTestCase.java\n@@ -180,7 +180,7 @@\n     }\n \n     private static ModelControllerClient createClient2() throws UnknownHostException {\n-        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddress()),\n+        return ModelControllerClient.Factory.create(InetAddress.getByName(TestSuiteEnvironment.getServerAddressNode1()),\n                 TestSuiteEnvironment.getServerPort() + 300,\n                 Authentication.getCallbackHandler());\n     }\n@@ -239,7 +239,8 @@\n                     new ModelNode[] { removeDwm, removeContext });\n             mcc.execute(compositeOp);\n             ServerReload.executeReloadAndWaitForCompletion(mcc, 60000, false,\n-                    TestSuiteEnvironment.getServerAddress(), serverPort);\n+                    CONTAINER_0.equals(containerId) ? TestSuiteEnvironment.getServerAddress() : TestSuiteEnvironment.getServerAddressNode1(),\n+                    serverPort);\n         }\n \n         protected abstract Policy getPolicy();\n@@ -333,7 +334,7 @@\n     @Before\n     public void setUpAdminObjects() throws NamingException {\n         server1Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8280\");\n-        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddress(), \"8380\");\n+        server2Proxy = lookupAdminObject(TestSuiteEnvironment.getServerAddressNode1(), \"8380\");\n         Assert.assertNotNull(server1Proxy);\n         Assert.assertNotNull(server2Proxy);\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 336,
        "bugNodeStartChar": 15047,
        "bugNodeLength": 39,
        "fixLineNum": 336,
        "fixNodeStartChar": 15047,
        "fixNodeLength": 44,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getServerAddressNode1()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "af233c9c353322adf1fa91d5e6ca706b9d9d98b7",
        "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 50,
        "bugNodeStartChar": 1572,
        "bugNodeLength": 24,
        "fixLineNum": 50,
        "fixNodeStartChar": 1572,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getServletPath()",
        "sourceAfterFix": "request.getPathInfo()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "80f6215ed3e0c1fe902342b2cd9a55f460dc08be",
        "fixCommitParentSHA1": "9c34ed16ff762ea4170b9449ee7da89247afdb5c",
        "bugFilePath": "src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java",
        "fixPatch": "diff --git a/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java b/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\nindex e404bd8..3f7be8d 100644\n--- a/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\n+++ b/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\n@@ -91,7 +91,7 @@\n             while (iterator.hasNext())\n             {\n                 IWord current = iterator.next();\n-                if (current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\"))\n+                if (current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\") && !pre.getValue().equals(Predefine.TAG_BIGIN))\n                 {\n                     pre.setLabel(NS.A.toString());\n                 }\n",
        "projectName": "hankcs.HanLP",
        "bugLineNum": 94,
        "bugNodeStartChar": 3021,
        "bugNodeLength": 71,
        "fixLineNum": 94,
        "fixNodeStartChar": 3021,
        "fixNodeLength": 118,
        "sourceBeforeFix": "current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\")",
        "sourceAfterFix": "current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\") && !pre.getValue().equals(Predefine.TAG_BIGIN)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "0c04572d3c4dfd164456a085aaa9782541c8d718",
        "fixCommitParentSHA1": "919146994feb63d842e414be882d7543bcbedcde",
        "bugFilePath": "bundles/core/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java",
        "fixPatch": "diff --git a/bundles/core/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java b/bundles/core/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\nindex b3fd47b..89ae9cc 100644\n--- a/bundles/core/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n+++ b/bundles/core/org.openhab.core.persistence/src/main/java/org/openhab/core/persistence/extensions/PersistenceExtensions.java\n@@ -461,7 +461,7 @@\n \t */\n \tstatic public DecimalType deltaSince(Item item, AbstractInstant timestamp, String serviceName) {\n \t\tDecimalType result = null;\n-\t\tHistoricItem itemThen = historicState(item, timestamp);\n+\t\tHistoricItem itemThen = historicState(item, timestamp, serviceName);\n \t\tif (itemThen != null) {\n \t\t\tDecimalType valueThen = (DecimalType) itemThen.getState();\n \t\t\tDecimalType valueNow = (DecimalType) item.getStateAs(DecimalType.class);\n@@ -503,7 +503,7 @@\n \t */\n \tstatic public DecimalType evolutionRate(Item item, AbstractInstant timestamp, String serviceName) {\n \t\tDecimalType result = null;\n-\t\tHistoricItem itemThen = historicState(item, timestamp);\n+\t\tHistoricItem itemThen = historicState(item, timestamp, serviceName);\n \t\tif (itemThen != null) {\n \t\t\tDecimalType valueThen = (DecimalType) itemThen.getState();\n \t\t\tDecimalType valueNow = (DecimalType) item.getStateAs(DecimalType.class);\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 464,
        "bugNodeStartChar": 16179,
        "bugNodeLength": 30,
        "fixLineNum": 464,
        "fixNodeStartChar": 16179,
        "fixNodeLength": 43,
        "sourceBeforeFix": "historicState(item,timestamp)",
        "sourceAfterFix": "historicState(item,timestamp,serviceName)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1adccc7a5bdc515f01ae6bd644097ab85336bd84",
        "fixCommitParentSHA1": "ac703759a1cede64d1b718cc8e7be84f6b7916d9",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\nindex c907ba8..6c7dc17 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n@@ -997,7 +997,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.clear();\n \n@@ -1019,7 +1019,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1051,7 +1051,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // call evictAll\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.evictAll();\n \n@@ -1073,7 +1073,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1109,7 +1109,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.loadAll(true);\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1112,
        "bugNodeStartChar": 40176,
        "bugNodeLength": 37,
        "fixLineNum": 1112,
        "fixNodeStartChar": 40176,
        "fixNodeLength": 54,
        "sourceBeforeFix": "hazelcastFactory.newHazelcastClient()",
        "sourceAfterFix": "hazelcastFactory.newHazelcastClient(newClientConfig())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "028700818ccf660a02586a19fc31399684cb1b2e",
        "fixCommitParentSHA1": "a01e2bd3ab8615bc24364d32c3e7a856f473eccd",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/converter/IOConverterCharsetTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/converter/IOConverterCharsetTest.java b/camel-core/src/test/java/org/apache/camel/converter/IOConverterCharsetTest.java\nindex 4d30291..fe74d75 100644\n--- a/camel-core/src/test/java/org/apache/camel/converter/IOConverterCharsetTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/converter/IOConverterCharsetTest.java\n@@ -31,7 +31,8 @@\n     public void testToInputStreamFileWithCharsetUTF8() throws Exception {\n         File file = new File(\"src/test/resources/org/apache/camel/converter/german.utf-8.txt\");\n         InputStream in = IOConverter.toInputStream(file, \"UTF-8\");\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        // need to specify the encoding of the input stream bytes\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n         BufferedReader naiveReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"));\n         try {   \n             String line = reader.readLine();\n@@ -48,7 +49,8 @@\n     public void testToInputStreamFileWithCharsetLatin1() throws Exception {\n         File file = new File(\"src/test/resources/org/apache/camel/converter/german.iso-8859-1.txt\");\n         InputStream in = IOConverter.toInputStream(file, \"ISO-8859-1\");\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        // need to specify the encoding of the input stream bytes\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(in, \"UTF-8\"));\n         BufferedReader naiveReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"ISO-8859-1\"));\n         try {\n             String line = reader.readLine();\n",
        "projectName": "apache.camel",
        "bugLineNum": 34,
        "bugNodeStartChar": 1512,
        "bugNodeLength": 25,
        "fixLineNum": 35,
        "fixNodeStartChar": 1578,
        "fixNodeLength": 34,
        "sourceBeforeFix": "new InputStreamReader(in)",
        "sourceAfterFix": "new InputStreamReader(in,\"UTF-8\")"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "bbe22e599c7516a08f1a0c5aff540d4ef5a02eb3",
        "fixCommitParentSHA1": "654e00d8bb3168b7063760c26ca6d17e50fe6147",
        "bugFilePath": "src/com/google/javascript/jscomp/SourceMap.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/SourceMap.java b/src/com/google/javascript/jscomp/SourceMap.java\nindex 6c96be7..7ac8421 100644\n--- a/src/com/google/javascript/jscomp/SourceMap.java\n+++ b/src/com/google/javascript/jscomp/SourceMap.java\n@@ -180,7 +180,9 @@\n         lineNo = sourceMapping.getLineNumber();\n         charNo = sourceMapping.getColumnPosition();\n         String identifier = sourceMapping.getIdentifier();\n-        if (sourceMapping != null && !identifier.isEmpty()) {\n+        // TODO(bradfordcsmith): When we move off of GWT we should be able\n+        //     to use sourceMapping.hasIdentifier() instead of a null check.\n+        if (identifier != null && !identifier.isEmpty()) {\n           originalName = identifier;\n         }\n       }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 183,
        "bugNodeStartChar": 5860,
        "bugNodeLength": 21,
        "fixLineNum": 185,
        "fixNodeStartChar": 6012,
        "fixNodeLength": 18,
        "sourceBeforeFix": "sourceMapping != null",
        "sourceAfterFix": "identifier != null"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "0e8e5ba702fbbea71f8cffc063e2d873cbebe83e",
        "fixCommitParentSHA1": "c5d1b676e2638bd1e65c812b39bf4bab4fdfbd19",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\nindex 57fb3d0..38d5638 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n@@ -310,7 +310,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -330,7 +330,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -350,7 +350,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 353,
        "bugNodeStartChar": 14960,
        "bugNodeLength": 93,
        "fixLineNum": 353,
        "fixNodeStartChar": 14960,
        "fixNodeLength": 93,
        "sourceBeforeFix": "Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage(\"helloForNone\"))",
        "sourceAfterFix": "Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"),e.getCause().getMessage())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "423fca2f16ef73c1e4bce7cf11660a510be1456e",
        "fixCommitParentSHA1": "f63ecc9a063d9db0be6c787648cf69317002cf4e",
        "bugFilePath": "src/java/org/apache/hadoop/hbase/master/BaseScanner.java",
        "fixPatch": "diff --git a/src/java/org/apache/hadoop/hbase/master/BaseScanner.java b/src/java/org/apache/hadoop/hbase/master/BaseScanner.java\nindex cdcd77b..3ef9898 100644\n--- a/src/java/org/apache/hadoop/hbase/master/BaseScanner.java\n+++ b/src/java/org/apache/hadoop/hbase/master/BaseScanner.java\n@@ -240,7 +240,8 @@\n       return false;\n     }\n     if (!info.isOffline()) {\n-      LOG.warn(\"Region is split but not offline: \" + info.getRegionName());\n+      LOG.warn(\"Region is split but not offline: \" +\n+        info.getRegionNameAsString());\n     }\n     return true;\n   }\n@@ -268,7 +269,7 @@\n         parent.getRegionName(), rowContent, COL_SPLITB);\n     \n     if (!hasReferencesA && !hasReferencesB) {\n-      LOG.info(\"Deleting region \" + parent.getRegionName() +\n+      LOG.info(\"Deleting region \" + parent.getRegionNameAsString() +\n         \" because daughter splits no longer hold references\");\n       HRegion.deleteRegion(master.fs, master.rootdir, parent);\n       \n@@ -334,8 +335,8 @@\n     }\n     \n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(split.getRegionName().toString()\n-          +\" no longer has references to \" + parent.toString());\n+      LOG.debug(split.getRegionNameAsString() +\n+        \" no longer has references to \" + parent.toString());\n     }\n     \n     BatchUpdate b = new BatchUpdate(parent);\n@@ -365,7 +366,7 @@\n         // Skip if region is on kill list\n         if(LOG.isDebugEnabled()) {\n           LOG.debug(\"not assigning region (on kill list): \" +\n-            info.getRegionName());\n+            info.getRegionNameAsString());\n         }\n         return;\n       }\n@@ -385,7 +386,7 @@\n       // The current assignment is invalid\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Current assignment of \" +\n-          Bytes.toString(info.getRegionName()) +\n+          info.getRegionNameAsString() +\n           \" is not valid: serverInfo: \" + storedInfo + \", passed startCode: \" +\n           startCode + \", storedInfo.startCode: \" +\n           ((storedInfo != null)? storedInfo.getStartCode(): -1) +\n",
        "projectName": "apache.hbase",
        "bugLineNum": 271,
        "bugNodeStartChar": 10150,
        "bugNodeLength": 22,
        "fixLineNum": 271,
        "fixNodeStartChar": 10150,
        "fixNodeLength": 30,
        "sourceBeforeFix": "parent.getRegionName()",
        "sourceAfterFix": "parent.getRegionNameAsString()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
        "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
        "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
        "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 211,
        "bugNodeStartChar": 8975,
        "bugNodeLength": 11,
        "fixLineNum": 211,
        "fixNodeStartChar": 8975,
        "fixNodeLength": 11,
        "sourceBeforeFix": "(byte)0xff",
        "sourceAfterFix": "(byte)0xe2"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 420,
        "bugNodeStartChar": 13738,
        "bugNodeLength": 41,
        "fixLineNum": 420,
        "fixNodeStartChar": 13319,
        "fixNodeLength": 43,
        "sourceBeforeFix": "GL20.glGetProgram(program,pname,params)",
        "sourceAfterFix": "GL20.glGetProgramiv(program,pname,params)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57",
        "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b",
        "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java",
        "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 97,
        "bugNodeStartChar": 3332,
        "bugNodeLength": 29,
        "fixLineNum": 97,
        "fixNodeStartChar": 3332,
        "fixNodeLength": 36,
        "sourceBeforeFix": "graphVersion.incNodeVersion()",
        "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "60ef304601539a6ed91ba9ae88c31114d4b098a6",
        "fixCommitParentSHA1": "90d07a5b752ef02b7d8d425eb6b05b1e72adc19a",
        "bugFilePath": "modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java",
        "fixPatch": "diff --git a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\nindex d588c3d..fb523c6 100644\n--- a/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n+++ b/modules/activiti-bpmn-converter/src/main/java/org/activiti/bpmn/converter/UserTaskXMLConverter.java\n@@ -162,7 +162,7 @@\n           didWriteExtensionStartElement = true;\n         }\n         xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, customProperty.getName(), ACTIVITI_EXTENSIONS_NAMESPACE);\n-        xtw.writeCharacters(customProperty.getSimpleValue());\n+        xtw.writeCData(customProperty.getSimpleValue());\n         xtw.writeEndElement();\n       }\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 165,
        "bugNodeStartChar": 8479,
        "bugNodeLength": 52,
        "fixLineNum": 165,
        "fixNodeStartChar": 8479,
        "fixNodeLength": 47,
        "sourceBeforeFix": "xtw.writeCharacters(customProperty.getSimpleValue())",
        "sourceAfterFix": "xtw.writeCData(customProperty.getSimpleValue())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "c25203e1409ed2a2474fd267259e85e1a67e7942",
        "fixCommitParentSHA1": "8f7f497b55b3223229ab478eab41ede9d63a2691",
        "bugFilePath": "server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java",
        "fixPatch": "diff --git a/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java b/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\nindex d212342..5fca643 100644\n--- a/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\n+++ b/server/src/test/java/io/druid/segment/realtime/FireDepartmentTest.java\n@@ -61,8 +61,7 @@\n                         Arrays.asList(\"dim1\", \"dim2\"),\n                         null,\n                         null\n-                    ),\n-                    JSONParseSpec.JSON\n+                    )\n                 ),\n                 null, null, null, null\n             ),\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 55,
        "bugNodeStartChar": 2010,
        "bugNodeLength": 382,
        "fixLineNum": 55,
        "fixNodeStartChar": 2010,
        "fixNodeLength": 342,
        "sourceBeforeFix": "new JSONParseSpec(new TimestampSpec(\"timestamp\",\"auto\"),new DimensionsSpec(Arrays.asList(\"dim1\",\"dim2\"),null,null),JSONParseSpec.JSON)",
        "sourceAfterFix": "new JSONParseSpec(new TimestampSpec(\"timestamp\",\"auto\"),new DimensionsSpec(Arrays.asList(\"dim1\",\"dim2\"),null,null))"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "src/com/google/javascript/jscomp/RenameProperties.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/RenameProperties.java b/src/com/google/javascript/jscomp/RenameProperties.java\nindex 4a93fee..faeb59f 100644\n--- a/src/com/google/javascript/jscomp/RenameProperties.java\n+++ b/src/com/google/javascript/jscomp/RenameProperties.java\n@@ -255,7 +255,7 @@\n \n     compiler.setLifeCycleStage(LifeCycleStage.NORMALIZED_OBFUSCATED);\n     // This pass may rename getter or setter properties\n-    GatherGettersAndSetterProperties.update(compiler, externs, root);\n+    GatherGetterAndSetterProperties.update(compiler, externs, root);\n   }\n \n   /**\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 258,
        "bugNodeStartChar": 9770,
        "bugNodeLength": 64,
        "fixLineNum": 258,
        "fixNodeStartChar": 9770,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externs,root)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externs,root)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "dd287e0057702c15b34db99de389a1c51023c2f3",
        "fixCommitParentSHA1": "26241383028eb6fe5a097bdfe3fde9c72d86ad45",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\nindex a19e12a..6750354 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereResourceImpl.java\n@@ -124,7 +124,7 @@\n         injectCacheHeaders = nocache != null ? false : true;\n \n         String ac = config.getInitParameter(ApplicationConfig.DROP_ACCESS_CONTROL_ALLOW_ORIGIN_HEADER);\n-        enableAccessControl = ac != null ? Boolean.parseBoolean(ac) : true;\n+        enableAccessControl = ac != null ? !Boolean.parseBoolean(ac) : true;\n \n         String wh = config.getInitParameter(FrameworkConfig.WRITE_HEADERS);\n         writeHeaders = wh != null ? Boolean.parseBoolean(wh) : true;\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 127,
        "bugNodeStartChar": 5951,
        "bugNodeLength": 24,
        "fixLineNum": 127,
        "fixNodeStartChar": 5951,
        "fixNodeLength": 25,
        "sourceBeforeFix": "Boolean.parseBoolean(ac)",
        "sourceAfterFix": "!Boolean.parseBoolean(ac)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3174f898c6f3256427d08907ed4b8a1ad6513df1",
        "fixCommitParentSHA1": "6746a0af7bd5a5217891d2f5de4d6755db5a0a7a",
        "bugFilePath": "spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java",
        "fixPatch": "diff --git a/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java b/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java\nindex 35d0c75..1db49ae 100644\n--- a/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java\n+++ b/spring-boot/src/test/java/org/springframework/boot/logging/logback/LogbackLoggingSystemTests.java\n@@ -173,7 +173,7 @@\n \t@Test\n \tpublic void loggingLevelIsPropagatedToJulI() {\n \t\tthis.loggingSystem.beforeInitialize();\n-\t\tthis.loggingSystem.initialize(null, null);\n+\t\tthis.loggingSystem.initialize(this.initializationContext, null, null);\n \t\tthis.loggingSystem.setLogLevel(getClass().getName(), LogLevel.DEBUG);\n \t\tjava.util.logging.Logger julLogger = java.util.logging.Logger\n \t\t\t\t.getLogger(getClass().getName());\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 176,
        "bugNodeStartChar": 6366,
        "bugNodeLength": 41,
        "fixLineNum": 176,
        "fixNodeStartChar": 6366,
        "fixNodeLength": 69,
        "sourceBeforeFix": "this.loggingSystem.initialize(null,null)",
        "sourceAfterFix": "this.loggingSystem.initialize(this.initializationContext,null,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ee9057ad99b9cc95140ee3e56265f32b6a28d709",
        "fixCommitParentSHA1": "473f6a6edb8353728ea8e711ac8241ddc21adf08",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java\nindex f4b5552..9e77565 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsHandler.java\n@@ -205,7 +205,7 @@\n                 setExposeHeaders(response);\n             }\n         }\n-        ctx.writeAndFlush(msg, promise);\n+        ctx.write(msg, promise);\n     }\n \n     private static void forbidden(final ChannelHandlerContext ctx, final HttpRequest request) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 208,
        "bugNodeStartChar": 8148,
        "bugNodeLength": 31,
        "fixLineNum": 208,
        "fixNodeStartChar": 8148,
        "fixNodeLength": 23,
        "sourceBeforeFix": "ctx.writeAndFlush(msg,promise)",
        "sourceAfterFix": "ctx.write(msg,promise)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "35bb9eb5c0f3b2b4a2e7c212cdd97edeca4b0594",
        "fixCommitParentSHA1": "718d7821a7793145e8cd520cecec3b3eecca74fa",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\nindex 51787f4..17a06ec 100644\n--- a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n@@ -35,7 +35,7 @@\n     }\n \n     public void testFavoriteMethods() throws Exception {\n-        Status status = twitter1.getHomeTimeline(new Paging().count(1)).get(0);\n+        Status status = twitter1.getPublicTimeline().get(0);\n         assertNotNull(DataObjectFactory.getRawJSON(status));\n         assertEquals(status, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status)));\n         status = twitter2.createFavorite(status.getId());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 38,
        "bugNodeStartChar": 1115,
        "bugNodeLength": 47,
        "fixLineNum": 38,
        "fixNodeStartChar": 1115,
        "fixNodeLength": 28,
        "sourceBeforeFix": "twitter1.getHomeTimeline(new Paging().count(1))",
        "sourceAfterFix": "twitter1.getPublicTimeline()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6aff6baea9a815da5528f09bf1dac322a002fdc5",
        "fixCommitParentSHA1": "d49cd70632f03d68a19e9329308af4d89813b836",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\nindex ccf4183..0cb3d71 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\n@@ -55,7 +55,7 @@\n                 InputStream inputStream = r.getRequest().getInputStream();\n                 if (inputStream != null) {\n                     bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n-                    char[] charBuffer = new char[128];\n+                    char[] charBuffer = new char[8192];\n                     int bytesRead = -1;\n                     while ((bytesRead = bufferedReader.read(charBuffer)) > 0) {\n                         stringBuilder.append(charBuffer, 0, bytesRead);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 58,
        "bugNodeStartChar": 2171,
        "bugNodeLength": 13,
        "fixLineNum": 58,
        "fixNodeStartChar": 2171,
        "fixNodeLength": 14,
        "sourceBeforeFix": "new char[128]",
        "sourceAfterFix": "new char[8192]"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ac8a4e23ff95e6795598adf0d1e73763978e49b0",
        "fixCommitParentSHA1": "67282e129ac00353659b5597f231bd019532ef02",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java b/camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java\nindex 7f35ec1..0d5f021 100644\n--- a/camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java\n+++ b/camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java\n@@ -157,7 +157,7 @@\n         buffer.append(KEY_CONTEXT + \"=\").append(ctxid).append(\",\");\n         buffer.append(KEY_ROUTE + \"=\").append(id).append(\",\");\n         buffer.append(KEY_TYPE + \"=\" + TYPE_PROCESSOR + \",\");\n-        buffer.append(KEY_NODE_ID + \"=\").append(id).append(\",\");\n+        buffer.append(KEY_NODE_ID + \"=\").append(nodeId).append(\",\");\n         buffer.append(KEY_NAME + \"=\").append(ObjectName.quote(processor.toString()));\n         return createObjectName(buffer);\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 160,
        "bugNodeStartChar": 7328,
        "bugNodeLength": 43,
        "fixLineNum": 160,
        "fixNodeStartChar": 7328,
        "fixNodeLength": 47,
        "sourceBeforeFix": "buffer.append(KEY_NODE_ID + \"=\").append(id)",
        "sourceAfterFix": "buffer.append(KEY_NODE_ID + \"=\").append(nodeId)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e75b06a12cc6de7b6ffaa998c4c8540230ef5514",
        "fixCommitParentSHA1": "cc1a2ee025849b3d7ca58d42e780be310a1f6130",
        "bugFilePath": "pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java",
        "fixPatch": "diff --git a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\nindex 073164ca..78c9a0f 100644\n--- a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\n+++ b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\n@@ -142,7 +142,7 @@\n \t\t\tcase SORT_BOTH_MERGE:      return 2;\n \t\t\tcase SORT_FIRST_MERGE:     return 1;\n \t\t\tcase SORT_SECOND_MERGE:    return 1;\n-\t\t\tcase MERGE:                return 0;\n+\t\t\tcase MERGE:                return 1;\n \t\t\tcase HYBRIDHASH_FIRST:     return 1;\n \t\t\tcase HYBRIDHASH_SECOND:    return 1;\n \t\t\tcase MMHASH_FIRST:         return 1;\n",
        "projectName": "apache.flink",
        "bugLineNum": 145,
        "bugNodeStartChar": 6057,
        "bugNodeLength": 9,
        "fixLineNum": 145,
        "fixNodeStartChar": 6057,
        "fixNodeLength": 9,
        "sourceBeforeFix": "return 0; ",
        "sourceAfterFix": "return 1; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e981384cc21ca3c1958acd4b494a6ddd147c0a60",
        "fixCommitParentSHA1": "e4262ff29940c300db4fc9739ebefb9039f12ba3",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\nindex d52f996..435ac50 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n@@ -132,7 +132,7 @@\n             if (ssl.has(CommonAttributes.CIPHER_SUITE))\n                 config.setSslCiphers(ssl.get(CommonAttributes.CIPHER_SUITE).asString());\n             if (ssl.has(CommonAttributes.PROTOCOL))\n-                config.setSslKeyAlias(ssl.get(CommonAttributes.PROTOCOL).asString());\n+                config.setSslProtocol(ssl.get(CommonAttributes.PROTOCOL).asString());\n             if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE))\n                 config.setSslTrustStore(ssl.get(CommonAttributes.CA_CERTIFICATE_FILE).asString());\n             if (ssl.has(CommonAttributes.CA_REVOCATION_URL))\n@@ -144,9 +144,9 @@\n             config.setProxyList(modelconf.get(CommonAttributes.PROXY_LIST).asString());\n         }\n         if (modelconf.hasDefined(CommonAttributes.PROXY_URL))\n-            config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString());\n+            config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString());\n         if (modelconf.has(CommonAttributes.ADVERTISE_SECURITY_KEY))\n-            config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n+            config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n \n         if (modelconf.hasDefined(CommonAttributes.EXCLUDED_CONTEXTS)) {\n             // read the default host.\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 149,
        "bugNodeStartChar": 6965,
        "bugNodeLength": 86,
        "fixLineNum": 149,
        "fixNodeStartChar": 6965,
        "fixNodeLength": 97,
        "sourceBeforeFix": "config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString())",
        "sourceAfterFix": "config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/NameAnonymousFunctions.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/NameAnonymousFunctions.java b/src/com/google/javascript/jscomp/NameAnonymousFunctions.java\nindex d58507a..9f85ad0 100644\n--- a/src/com/google/javascript/jscomp/NameAnonymousFunctions.java\n+++ b/src/com/google/javascript/jscomp/NameAnonymousFunctions.java\n@@ -53,7 +53,7 @@\n     AnonymousFunctionNamingCallback namingCallback =\n         new AnonymousFunctionNamingCallback(new AnonymousFunctionNamer());\n     NodeTraversal.traverse(compiler, root, namingCallback);\n-    logger.info(\"Named \" + namedCount + \" anon functions using \" +\n+    logger.fine(\"Named \" + namedCount + \" anon functions using \" +\n         bytesUsed + \" bytes\");\n   }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 56,
        "bugNodeStartChar": 1675,
        "bugNodeLength": 92,
        "fixLineNum": 56,
        "fixNodeStartChar": 1675,
        "fixNodeLength": 92,
        "sourceBeforeFix": "logger.info(\"Named \" + namedCount + \" anon functions using \"+ bytesUsed+ \" bytes\")",
        "sourceAfterFix": "logger.fine(\"Named \" + namedCount + \" anon functions using \"+ bytesUsed+ \" bytes\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6",
        "fixCommitParentSHA1": "3a55941f33dcd9111d6b61b0505217f47973a39d",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\nindex 7c6cd90..b288cff 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\n@@ -57,16 +57,16 @@\n     private String moduleId;\n \n     /** Line number filter. */\n-    private CSVFilter lineFilter;\n+    private CsvFilter lineFilter;\n \n     /** CSV for line number filter. */\n-    private String linesCSV;\n+    private String linesCsv;\n \n     /** Column number filter. */\n-    private CSVFilter columnFilter;\n+    private CsvFilter columnFilter;\n \n     /** CSV for column number filter. */\n-    private String columnsCSV;\n+    private String columnsCsv;\n \n     /**\n      * Constructs a {@code SuppressElement} for a\n@@ -102,12 +102,12 @@\n      * @param lines CSV values and ranges for line number filtering.\n      */\n     public void setLines(String lines) {\n-        linesCSV = lines;\n+        linesCsv = lines;\n         if (lines == null) {\n             lineFilter = null;\n         }\n         else {\n-            lineFilter = new CSVFilter(lines);\n+            lineFilter = new CsvFilter(lines);\n         }\n     }\n \n@@ -117,12 +117,12 @@\n      * @param columns CSV values and ranges for column number filtering.\n      */\n     public void setColumns(String columns) {\n-        columnsCSV = columns;\n+        columnsCsv = columns;\n         if (columns == null) {\n             columnFilter = null;\n         }\n         else {\n-            columnFilter = new CSVFilter(columns);\n+            columnFilter = new CsvFilter(columns);\n         }\n     }\n \n@@ -154,7 +154,7 @@\n \n     @Override\n     public int hashCode() {\n-        return Objects.hash(filePattern, checkPattern, moduleId, linesCSV, columnsCSV);\n+        return Objects.hash(filePattern, checkPattern, moduleId, linesCsv, columnsCsv);\n     }\n \n     @Override\n@@ -169,7 +169,7 @@\n         return Objects.equals(filePattern, suppressElement.filePattern)\n                 && Objects.equals(checkPattern, suppressElement.checkPattern)\n                 && Objects.equals(moduleId, suppressElement.moduleId)\n-                && Objects.equals(linesCSV, suppressElement.linesCSV)\n-                && Objects.equals(columnsCSV, suppressElement.columnsCSV);\n+                && Objects.equals(linesCsv, suppressElement.linesCsv)\n+                && Objects.equals(columnsCsv, suppressElement.columnsCsv);\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 65,
        "bugNodeStartChar": 2371,
        "bugNodeLength": 64,
        "fixLineNum": 65,
        "fixNodeStartChar": 2371,
        "fixNodeLength": 64,
        "sourceBeforeFix": "/**   * Column number filter.   */ private CSVFilter columnFilter; ",
        "sourceAfterFix": "/**   * Column number filter.   */ private CsvFilter columnFilter; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2d45a874c45b154bd3ab0ce56f2ecc6a2ae6e8e2",
        "fixCommitParentSHA1": "45460ac1e488d6f2d1fb39f1ecf600642f9e42c9",
        "bugFilePath": "packaging/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java",
        "fixPatch": "diff --git a/packaging/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java b/packaging/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java\nindex 1798b7a..5485c2a 100644\n--- a/packaging/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java\n+++ b/packaging/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java\n@@ -610,7 +610,7 @@\n     }\n \n     @DELETE\n-    @Path(PATH_NODE_INDEX_ID)\n+    @Path(PATH_RELATIONSHIP_INDEX_ID)\n     public Response deleteFromRelationshipIndex( @PathParam(\"indexName\") String indexName,\n                                                  @PathParam(\"key\") String key, @PathParam(\"value\") String value,\n                                                  @PathParam(\"id\") long id )\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 613,
        "bugNodeStartChar": 19846,
        "bugNodeLength": 25,
        "fixLineNum": 613,
        "fixNodeStartChar": 19846,
        "fixNodeLength": 33,
        "sourceBeforeFix": "@Path(PATH_NODE_INDEX_ID)",
        "sourceAfterFix": "@Path(PATH_RELATIONSHIP_INDEX_ID)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9b649ac6da4293d736676de895a67aaf87fc5979",
        "fixCommitParentSHA1": "7161a504bbbdb06c5141b0fcee643b19eda7860e",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\nindex 6335125..7604803 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/cfg/ProcessEngineConfigurationImpl.java\n@@ -1209,7 +1209,7 @@\n \n       // Special care for MSSQL, as it has a hard limit of 2000 params per statement (incl bulk statement).\n       // Especially with executions, with 100 as default, this limit is passed.\n-      if (DATABASE_TYPE_MYSQL.equals(databaseType)) {\n+      if (DATABASE_TYPE_MSSQL.equals(databaseType)) {\n         maxNrOfStatementsInBulkInsert = DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER;\n       }\n       \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 1212,
        "bugNodeStartChar": 58872,
        "bugNodeLength": 40,
        "fixLineNum": 1212,
        "fixNodeStartChar": 58872,
        "fixNodeLength": 40,
        "sourceBeforeFix": "DATABASE_TYPE_MYSQL.equals(databaseType)",
        "sourceAfterFix": "DATABASE_TYPE_MSSQL.equals(databaseType)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a772531235259480a08e539c706b5884fbe6bfd6",
        "fixCommitParentSHA1": "8bbf9cc98df8cf2de4004bb52439376a1ae4f0e1",
        "bugFilePath": "src/edu/stanford/nlp/parser/nndep/Classifier.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/parser/nndep/Classifier.java b/src/edu/stanford/nlp/parser/nndep/Classifier.java\nindex f57213d..a1b32e0 100644\n--- a/src/edu/stanford/nlp/parser/nndep/Classifier.java\n+++ b/src/edu/stanford/nlp/parser/nndep/Classifier.java\n@@ -654,7 +654,7 @@\n    */\n   public void preCompute(Set<Integer> toPreCompute) {\n     long startTime = System.currentTimeMillis();\n-    saved = new double[toPreCompute.size()][config.hiddenSize];\n+    saved = new double[preMap.size()][config.hiddenSize];\n     for (int x : toPreCompute) {\n       int mapX = preMap.get(x);\n       int tok = x / config.numTokens;\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 657,
        "bugNodeStartChar": 20652,
        "bugNodeLength": 19,
        "fixLineNum": 657,
        "fixNodeStartChar": 20652,
        "fixNodeLength": 13,
        "sourceBeforeFix": "toPreCompute.size()",
        "sourceAfterFix": "preMap.size()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f8d278fe37db3f41735b89ef557d42da47e95228",
        "fixCommitParentSHA1": "0c187419da170f3028329d407510abe18b7a8af2",
        "bugFilePath": "api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java b/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\nindex e0dacb4..75a0564 100644\n--- a/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\n+++ b/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\n@@ -93,7 +93,7 @@\n \t\t// do the checks for voided attributes (also in PersonVoidHandler)\r\n \t\tif (person.isPersonVoided()) {\r\n \t\t\t\r\n-\t\t\tif (!StringUtils.hasLength(person.getVoidReason()))\r\n+\t\t\tif (!StringUtils.hasLength(person.getPersonVoidReason()))\r\n \t\t\t\tthrow new APIException(\r\n \t\t\t\t        \"The voided bit was set to true, so a void reason is required at save time for person: \" + person);\r\n \t\t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 96,
        "bugNodeStartChar": 3181,
        "bugNodeLength": 22,
        "fixLineNum": 96,
        "fixNodeStartChar": 3086,
        "fixNodeLength": 28,
        "sourceBeforeFix": "person.getVoidReason()",
        "sourceAfterFix": "person.getPersonVoidReason()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "396216e7c45eb13cb0165b9abfa75cf8ebbe97f3",
        "fixCommitParentSHA1": "08b7fb0ba89fd8967be09a690f9572cee401eb08",
        "bugFilePath": "src/edu/stanford/nlp/math/ArrayMath.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/math/ArrayMath.java b/src/edu/stanford/nlp/math/ArrayMath.java\nindex cf690dd..97989fa 100644\n--- a/src/edu/stanford/nlp/math/ArrayMath.java\n+++ b/src/edu/stanford/nlp/math/ArrayMath.java\n@@ -280,7 +280,7 @@\n \n   public static void pairwiseAddInPlace(double[] to, double[] from) {\n     if (to.length != from.length) {\n-      throw new RuntimeException();\n+      throw new RuntimeException(\"to length:\" + to.length + \" from length:\" + from.length);\n     }\n     for (int i = 0; i < to.length; i++) {\n       to[i] = to[i] + from[i];\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 283,
        "bugNodeStartChar": 6888,
        "bugNodeLength": 22,
        "fixLineNum": 283,
        "fixNodeStartChar": 6888,
        "fixNodeLength": 78,
        "sourceBeforeFix": "new RuntimeException()",
        "sourceAfterFix": "new RuntimeException(\"to length:\" + to.length + \" from length:\"+ from.length)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "ee9817dbd92495886965eeecd65325e09a78d5fc",
        "fixCommitParentSHA1": "ded725c0a2cb7aeb3e97f0bf077153f80a4208e7",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/operation/PartitionWideEntryOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/operation/PartitionWideEntryOperation.java b/hazelcast/src/main/java/com/hazelcast/map/operation/PartitionWideEntryOperation.java\nindex fb7f184..20cc279 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/operation/PartitionWideEntryOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/operation/PartitionWideEntryOperation.java\n@@ -132,7 +132,7 @@\n                            Object valueAfterProcess, EntryEventType eventType) {\n         final String mapName = name;\n         final MapServiceContext mapServiceContext = getMapServiceContext();\n-        if (mapServiceContext.hasRegisteredListener(mapName) || eventType == NO_NEED_TO_FIRE_EVENT) {\n+        if (!mapServiceContext.hasRegisteredListener(mapName) || eventType == NO_NEED_TO_FIRE_EVENT) {\n             return;\n         }\n         final Data oldValue = mapServiceContext.toData(valueBeforeProcess);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 135,
        "bugNodeStartChar": 5912,
        "bugNodeLength": 48,
        "fixLineNum": 135,
        "fixNodeStartChar": 5912,
        "fixNodeLength": 49,
        "sourceBeforeFix": "mapServiceContext.hasRegisteredListener(mapName)",
        "sourceAfterFix": "!mapServiceContext.hasRegisteredListener(mapName)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "753b2e0167e38ea7698c498651224b118a51619e",
        "fixCommitParentSHA1": "f3e2b639c68bc979c90b1473fb75c399a9b77f69",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/util/EventHelper.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/util/EventHelper.java b/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\nindex bf751ef..50ee5b3 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\n@@ -818,7 +818,7 @@\n             if (notifier.isDisabled()) {\n                 continue;\n             }\n-            if (notifier.isIgnoreExchangeEvents() || notifier.isIgnoreExchangeSentEvents()) {\n+            if (notifier.isIgnoreExchangeEvents() || notifier.isIgnoreExchangeSendingEvents()) {\n                 continue;\n             }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 821,
        "bugNodeStartChar": 27290,
        "bugNodeLength": 37,
        "fixLineNum": 821,
        "fixNodeStartChar": 27290,
        "fixNodeLength": 40,
        "sourceBeforeFix": "notifier.isIgnoreExchangeSentEvents()",
        "sourceAfterFix": "notifier.isIgnoreExchangeSendingEvents()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1d577b1b8bd3f51bcf8d9d89bb4598a28020af07",
        "fixCommitParentSHA1": "d23c3b3382ff6b2dc7625cb0a0cd31d767efafc5",
        "bugFilePath": "example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java",
        "fixPatch": "diff --git a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\nindex 5421956..0e599fb 100644\n--- a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n+++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n@@ -47,10 +47,10 @@\n                 new GenericFutureListener<Future<Channel>>() {\n             @Override\n             public void operationComplete(Future<Channel> future) throws Exception {\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Welcome to \" + InetAddress.getLocalHost().getHostName() +\n                         \" secure chat service!\\n\");\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Your session is protected by \" +\n                         ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() +\n                         \" cipher suite.\\n\");\n@@ -65,10 +65,10 @@\n         // Send the received message to all channels but the current one.\n         for (Channel c: channels) {\n             if (c != ctx.channel()) {\n-                c.write(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n+                c.writeAndFlush(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n                         msg + '\\n');\n             } else {\n-                c.write(\"[you] \" + msg + '\\n');\n+                c.writeAndFlush(\"[you] \" + msg + '\\n');\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 53,
        "bugNodeStartChar": 2207,
        "bugNodeLength": 214,
        "fixLineNum": 53,
        "fixNodeStartChar": 2207,
        "fixNodeLength": 222,
        "sourceBeforeFix": "ctx.write(\"Your session is protected by \" + ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() + \" cipher suite.\\n\")",
        "sourceAfterFix": "ctx.writeAndFlush(\"Your session is protected by \" + ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() + \" cipher suite.\\n\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fcbae65716a5006d4adee83eeafe35ed48ef1278",
        "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
        "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
        "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 267,
        "bugNodeStartChar": 8888,
        "bugNodeLength": 23,
        "fixLineNum": 267,
        "fixNodeStartChar": 8888,
        "fixNodeLength": 31,
        "sourceBeforeFix": "options.getLambdaRole()",
        "sourceAfterFix": "optionsOverride.getLambdaRole()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "86f74100e3f5a30bf3ecaf4be00c0b59bda096ac",
        "fixCommitParentSHA1": "7b27f73c9e1df683e959ffe8cbb8a4b6bd858d7f",
        "bugFilePath": "core/src/main/java/tachyon/master/EditLog.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/master/EditLog.java b/core/src/main/java/tachyon/master/EditLog.java\nindex 713dbaa..e3b12f4 100644\n--- a/core/src/main/java/tachyon/master/EditLog.java\n+++ b/core/src/main/java/tachyon/master/EditLog.java\n@@ -112,7 +112,7 @@\n     UnderFileSystem ufs = UnderFileSystem.get(path);\n \n     DataInputStream is = new DataInputStream(ufs.open(path));\n-    JsonParser parser = JsonObject.createObjectMapper().getJsonFactory().createJsonParser(is);\n+    JsonParser parser = JsonObject.createObjectMapper().getFactory().createParser(is);\n \n     while (true) {\n       EditLogOperation op;\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 115,
        "bugNodeStartChar": 3856,
        "bugNodeLength": 48,
        "fixLineNum": 115,
        "fixNodeStartChar": 3856,
        "fixNodeLength": 44,
        "sourceBeforeFix": "JsonObject.createObjectMapper().getJsonFactory()",
        "sourceAfterFix": "JsonObject.createObjectMapper().getFactory()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ab3d6aa65220d2e024420b850bcc3078ef1cac15",
        "fixCommitParentSHA1": "bbcab8a8328b8d62d24a0ca58a4f425141241266",
        "bugFilePath": "nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/RemoteReceiver.java",
        "fixPatch": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/RemoteReceiver.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/RemoteReceiver.java\nindex 71dce5b..b9b6f43 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/RemoteReceiver.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/RemoteReceiver.java\n@@ -132,7 +132,7 @@\n \t\tfinal InetAddress ia = this.connectionAddress.getAddress();\n \t\tout.writeInt(ia.getAddress().length);\n \t\tout.write(ia.getAddress());\n-\t\tout.write(this.connectionAddress.getPort());\n+\t\tout.writeInt(this.connectionAddress.getPort());\n \n \t\tout.writeInt(this.connectionIndex);\n \t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 135,
        "bugNodeStartChar": 3765,
        "bugNodeLength": 43,
        "fixLineNum": 135,
        "fixNodeStartChar": 3765,
        "fixNodeLength": 46,
        "sourceBeforeFix": "out.write(this.connectionAddress.getPort())",
        "sourceAfterFix": "out.writeInt(this.connectionAddress.getPort())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 466,
        "bugNodeStartChar": 15307,
        "bugNodeLength": 44,
        "fixLineNum": 466,
        "fixNodeStartChar": 14842,
        "fixNodeLength": 46,
        "sourceBeforeFix": "GL20.glGetUniform(program,location,params)",
        "sourceAfterFix": "GL20.glGetUniformfv(program,location,params)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55c3c2a8feddf010b614a6bdb0c39ef19a8b9452",
        "fixCommitParentSHA1": "9a15276c2e163c196807cce5e811fd1fa672bf89",
        "bugFilePath": "messaging/src/main/java/org/jboss/as/messaging/jms/JMSQueueService.java",
        "fixPatch": "diff --git a/messaging/src/main/java/org/jboss/as/messaging/jms/JMSQueueService.java b/messaging/src/main/java/org/jboss/as/messaging/jms/JMSQueueService.java\nindex e6b101b..eb162cc 100644\n--- a/messaging/src/main/java/org/jboss/as/messaging/jms/JMSQueueService.java\n+++ b/messaging/src/main/java/org/jboss/as/messaging/jms/JMSQueueService.java\n@@ -67,7 +67,7 @@\n     public synchronized void stop(StopContext context) {\n         final JMSServerManager jmsManager = jmsServer.getValue();\n         try {\n-            jmsManager.destroyQueue(queueName);\n+            jmsManager.removeQueueFromJNDI(queueName);\n         } catch (Exception e) {\n             MESSAGING_LOGGER.failedToDestroy(e, \"queue\", queueName);\n         }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 70,
        "bugNodeStartChar": 2706,
        "bugNodeLength": 34,
        "fixLineNum": 70,
        "fixNodeStartChar": 2706,
        "fixNodeLength": 41,
        "sourceBeforeFix": "jmsManager.destroyQueue(queueName)",
        "sourceAfterFix": "jmsManager.removeQueueFromJNDI(queueName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5782007c46e67cd4264aa05298cf72988dbd3537",
        "fixCommitParentSHA1": "79c9963429c9298e9132200623b34a7c2e714ea9",
        "bugFilePath": "src/com/google/javascript/jscomp/DefaultPassConfig.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/DefaultPassConfig.java b/src/com/google/javascript/jscomp/DefaultPassConfig.java\nindex d27c2fa..e2600b2 100644\n--- a/src/com/google/javascript/jscomp/DefaultPassConfig.java\n+++ b/src/com/google/javascript/jscomp/DefaultPassConfig.java\n@@ -2416,7 +2416,7 @@\n \n         @Override\n         protected FeatureSet featureSet() {\n-          return ES5;\n+          return ES8_MODULES;\n         }\n       };\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 2419,
        "bugNodeStartChar": 84488,
        "bugNodeLength": 11,
        "fixLineNum": 2419,
        "fixNodeStartChar": 84488,
        "fixNodeLength": 19,
        "sourceBeforeFix": "return ES5; ",
        "sourceAfterFix": "return ES8_MODULES; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 652,
        "bugNodeStartChar": 22294,
        "bugNodeLength": 28,
        "fixLineNum": 652,
        "fixNodeStartChar": 21643,
        "fixNodeLength": 30,
        "sourceBeforeFix": "GL20.glUniform1(location,v)",
        "sourceAfterFix": "GL20.glUniform1fv(location,v)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "7ff29fca9771b86caa93d665ae547d4f66127ad0",
        "fixCommitParentSHA1": "d71c17f65efaefa50b3bce32982dd84433b8eca9",
        "bugFilePath": "clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/bean/InfinispanBean.java",
        "fixPatch": "diff --git a/clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/bean/InfinispanBean.java b/clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/bean/InfinispanBean.java\nindex 76f0661..92249c1 100644\n--- a/clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/bean/InfinispanBean.java\n+++ b/clustering/ejb/infinispan/src/main/java/org/wildfly/clustering/ejb/infinispan/bean/InfinispanBean.java\n@@ -80,7 +80,7 @@\n         if (this.timeout == null) return false;\n         Date lastAccessedTime = this.entry.getLastAccessedTime();\n         long timeout = this.timeout.convert(TimeUnit.MILLISECONDS);\n-        return (lastAccessedTime != null) && (timeout > 0) ? ((System.currentTimeMillis() - lastAccessedTime.getTime()) > timeout) : false;\n+        return (lastAccessedTime != null) && (timeout > 0) ? ((System.currentTimeMillis() - lastAccessedTime.getTime()) >= timeout) : false;\n     }\n \n     @Override\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 3120,
        "bugNodeLength": 67,
        "fixLineNum": 83,
        "fixNodeStartChar": 3120,
        "fixNodeLength": 68,
        "sourceBeforeFix": "(System.currentTimeMillis() - lastAccessedTime.getTime()) > timeout",
        "sourceAfterFix": "(System.currentTimeMillis() - lastAccessedTime.getTime()) >= timeout"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOuterTypeNumberTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOuterTypeNumberTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOuterTypeNumberTest.java\nindex 794ed2d..dfe2a21 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOuterTypeNumberTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOuterTypeNumberTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheck;\n \n-public class XpathRegressionOuterTypeNumberTest extends AbstractXpathTestSupport {\n+public class XpathRegressionOuterTypeNumberTest extends XpathTestSupport {\n \n     @Test\n     public void testOne() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1316,
        "bugNodeLength": 945,
        "fixLineNum": 31,
        "fixNodeStartChar": 1316,
        "fixNodeLength": 937,
        "sourceBeforeFix": "public class XpathRegressionOuterTypeNumberTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=OuterTypeNumberCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOuterTypeNumber.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OuterTypeNumberCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"1:1: \" + getCheckMessage(OuterTypeNumberCheck.class,OuterTypeNumberCheck.MSG_KEY,3,0)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/PACKAGE_DEF\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionOuterTypeNumberTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=OuterTypeNumberCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOuterTypeNumber.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OuterTypeNumberCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"1:1: \" + getCheckMessage(OuterTypeNumberCheck.class,OuterTypeNumberCheck.MSG_KEY,3,0)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/PACKAGE_DEF\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b66741edf56e097d77248c2d1b59ea19843586ce",
        "fixCommitParentSHA1": "1fc2a6980425d0132caa26c61980c9ef8f05b184",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/ProxyHelper.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/ProxyHelper.java b/hazelcast-client/src/main/java/com/hazelcast/client/ProxyHelper.java\nindex f652170..dc3bae1 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/ProxyHelper.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/ProxyHelper.java\n@@ -123,7 +123,7 @@\n         request.setOperation(operation);\n         request.setKey(key);\n         request.setValue(value);\n-        if (ttl > 0 && timeunit != null) {\n+        if (ttl >= 0 && timeunit != null) {\n             request.setTimeout(timeunit.toMillis(ttl));\n         }\n         return request;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 126,
        "bugNodeStartChar": 4130,
        "bugNodeLength": 7,
        "fixLineNum": 126,
        "fixNodeStartChar": 4130,
        "fixNodeLength": 8,
        "sourceBeforeFix": "ttl > 0",
        "sourceAfterFix": "ttl >= 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 642,
        "bugNodeStartChar": 24632,
        "bugNodeLength": 8,
        "fixLineNum": 642,
        "fixNodeStartChar": 24632,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15866",
        "sourceAfterFix": "id=16513"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6b39c5db276e94dd4295254ac279e482703716af",
        "fixCommitParentSHA1": "66c0ba83d19939203b0154caa28f1f90e3aeffd9",
        "bugFilePath": "bundles/binding/org.openhab.binding.plex/src/main/java/org/openhab/binding/plex/internal/PlexConnector.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.plex/src/main/java/org/openhab/binding/plex/internal/PlexConnector.java b/bundles/binding/org.openhab.binding.plex/src/main/java/org/openhab/binding/plex/internal/PlexConnector.java\nindex 3795cad..a4a0db5 100644\n--- a/bundles/binding/org.openhab.binding.plex/src/main/java/org/openhab/binding/plex/internal/PlexConnector.java\n+++ b/bundles/binding/org.openhab.binding.plex/src/main/java/org/openhab/binding/plex/internal/PlexConnector.java\n@@ -356,11 +356,11 @@\n \t\t\t\tThread.sleep(delay);\n \t\t\t\topen();\n \t\t\t} catch (IOException e) {\n-\t\t\t\tlogger.error(\"Error connecting to Plex\", e);\n+\t\t\t\tlogger.debug(\"Error connecting to Plex\", e);\n \t\t\t} catch (InterruptedException e) {\n-\t\t\t\tlogger.error(\"Interrupted while reconnecting to Plex\", e);\n+\t\t\t\tlogger.debug(\"Interrupted while connecting to Plex\", e);\n \t\t\t} catch (ExecutionException e) {\n-\t\t\t\tlogger.error(\"Error connecting to Plex\", e);\n+\t\t\t\tlogger.debug(\"Error connecting to Plex\", e);\n \t\t\t}\n \t\t\tdelay = RECONNECT_DELAY;\n \t\t}\n@@ -389,7 +389,7 @@\n \t\t\t} else if (e instanceof TimeoutException) {\n \t\t\t\tlogger.debug(\"[{}]: Websocket timeout error\", connection.getHost());\n \t\t\t} else {\n-\t\t\t\tlogger.error(\"[{}]: Websocket error: {}\", connection.getHost(), e.getMessage());\n+\t\t\t\tlogger.debug(\"[{}]: Websocket error: {}\", connection.getHost(), e.getMessage());\n \t\t\t}\n \t\t}\n \t\t\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 359,
        "bugNodeStartChar": 11260,
        "bugNodeLength": 43,
        "fixLineNum": 359,
        "fixNodeStartChar": 11260,
        "fixNodeLength": 43,
        "sourceBeforeFix": "logger.error(\"Error connecting to Plex\",e)",
        "sourceAfterFix": "logger.debug(\"Error connecting to Plex\",e)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "addd22c9cfa473eecf99779227f1952d52ad7af5",
        "fixCommitParentSHA1": "68b6c7755ed493d96b08dc1bccb1c0246cc11db9",
        "bugFilePath": "core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java",
        "fixPatch": "diff --git a/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java b/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\nindex 3782da2..22a0dce 100644\n--- a/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\n+++ b/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\n@@ -322,9 +322,9 @@\n     AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n     AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n     MountOptions mountOptions = MountOptions.defaults();\n-    Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions);\n     mFileSystem.mount(alluxioPath, ufsPath, mountOptions);\n-    Mockito.verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions);\n   }\n \n   /**\n@@ -337,7 +337,8 @@\n     AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n     AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n     MountOptions mountOptions = MountOptions.defaults();\n-    Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient)\n+        .mount(alluxioPath, ufsPath, mountOptions);\n     try {\n       mFileSystem.mount(alluxioPath, ufsPath, mountOptions);\n       Assert.fail(SHOULD_HAVE_PROPAGATED_MESSAGE);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 325,
        "bugNodeStartChar": 12029,
        "bugNodeLength": 77,
        "fixLineNum": 325,
        "fixNodeStartChar": 12029,
        "fixNodeLength": 91,
        "sourceBeforeFix": "Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath,ufsPath)",
        "sourceAfterFix": "Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath,ufsPath,mountOptions)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5f2f072d694275f750d1ee139386cc64a0670f4f",
        "fixCommitParentSHA1": "c153fd5bd099ed2490a9914b7379661fb24078b3",
        "bugFilePath": "src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java",
        "fixPatch": "diff --git a/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java b/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java\nindex 42752a1..9cf8fe5 100644\n--- a/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java\n+++ b/src/main/java/org/jboss/netty/handler/timeout/IdleStateHandler.java\n@@ -237,7 +237,7 @@\n                 writerIdleTimeout =\n                     timer.newTimeout(this, writerIdleTimeMillis, TimeUnit.MILLISECONDS);\n                 try {\n-                    channelIdle(ctx, IdleState.WRITER_IDLE, lastReadTime);\n+                    channelIdle(ctx, IdleState.WRITER_IDLE, lastWriteTime);\n                 } catch (Throwable t) {\n                     fireExceptionCaught(ctx, t);\n                 }\n@@ -271,7 +271,7 @@\n                 allIdleTimeout =\n                     timer.newTimeout(this, allIdleTimeMillis, TimeUnit.MILLISECONDS);\n                 try {\n-                    channelIdle(ctx, IdleState.ALL_IDLE, lastReadTime);\n+                    channelIdle(ctx, IdleState.ALL_IDLE, lastIoTime);\n                 } catch (Throwable t) {\n                     fireExceptionCaught(ctx, t);\n                 }\n",
        "projectName": "netty.netty",
        "bugLineNum": 274,
        "bugNodeStartChar": 9759,
        "bugNodeLength": 50,
        "fixLineNum": 274,
        "fixNodeStartChar": 9759,
        "fixNodeLength": 48,
        "sourceBeforeFix": "channelIdle(ctx,IdleState.ALL_IDLE,lastReadTime)",
        "sourceAfterFix": "channelIdle(ctx,IdleState.ALL_IDLE,lastIoTime)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e9cad4da3a814bcde46c10c0e4da2fc84f99d815",
        "fixCommitParentSHA1": "20a464f5bd2a911d93262638d76015083ef49dd7",
        "bugFilePath": "flink-contrib/flink-storm-compatibility/flink-storm-compatibility-examples/src/main/java/org/apache/flink/stormcompatibility/excamation/StormExclamationLocal.java",
        "fixPatch": "diff --git a/flink-contrib/flink-storm-compatibility/flink-storm-compatibility-examples/src/main/java/org/apache/flink/stormcompatibility/excamation/StormExclamationLocal.java b/flink-contrib/flink-storm-compatibility/flink-storm-compatibility-examples/src/main/java/org/apache/flink/stormcompatibility/excamation/StormExclamationLocal.java\nindex c87fe8f..a25e5e0 100644\n--- a/flink-contrib/flink-storm-compatibility/flink-storm-compatibility-examples/src/main/java/org/apache/flink/stormcompatibility/excamation/StormExclamationLocal.java\n+++ b/flink-contrib/flink-storm-compatibility/flink-storm-compatibility-examples/src/main/java/org/apache/flink/stormcompatibility/excamation/StormExclamationLocal.java\n@@ -42,7 +42,7 @@\n \t\tfinal FlinkLocalCluster cluster = FlinkLocalCluster.getLocalCluster();\n \t\tcluster.submitTopology(topologyId, null, builder.createTopology());\n \n-\t\tUtils.sleep(5 * 1000);\n+\t\tUtils.sleep(10 * 1000);\n \n \t\t// TODO kill does no do anything so far\n \t\tcluster.killTopology(topologyId);\n",
        "projectName": "apache.flink",
        "bugLineNum": 45,
        "bugNodeStartChar": 1736,
        "bugNodeLength": 8,
        "fixLineNum": 45,
        "fixNodeStartChar": 1736,
        "fixNodeLength": 9,
        "sourceBeforeFix": "5 * 1000",
        "sourceAfterFix": "10 * 1000"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
        "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
        "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java",
        "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\nindex bf2b3c0..64209db 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n@@ -36,7 +36,7 @@\n     assertEquals(-1, counter.getCount());\n \n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 38,
        "bugNodeStartChar": 1510,
        "bugNodeLength": 67,
        "fixLineNum": 38,
        "fixNodeStartChar": 1510,
        "fixNodeLength": 54,
        "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
        "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3ae343b768bae5973a5634c8e287ae1173e30248",
        "fixCommitParentSHA1": "86edc88448ce0f27304f33b788afa1d003edb284",
        "bugFilePath": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java",
        "fixPatch": "diff --git a/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java\nindex c99c87a..b8f9fea 100644\n--- a/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java\n+++ b/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java\n@@ -465,7 +465,7 @@\n             assert amt > 0;\n             prioritizableForTree += amt;\n             if (parent != null && parent != oldParent) {\n-                parent.incrementPrioritizableForTree(amt, oldParent);\n+                parent.incrementPrioritizableForTree0(amt, oldParent);\n             }\n         }\n \n@@ -487,7 +487,7 @@\n             assert amt > 0;\n             prioritizableForTree -= amt;\n             if (parent != null) {\n-                parent.decrementPrioritizableForTree(amt);\n+                parent.decrementPrioritizableForTree0(amt);\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 490,
        "bugNodeStartChar": 17020,
        "bugNodeLength": 41,
        "fixLineNum": 490,
        "fixNodeStartChar": 17020,
        "fixNodeLength": 42,
        "sourceBeforeFix": "parent.decrementPrioritizableForTree(amt)",
        "sourceAfterFix": "parent.decrementPrioritizableForTree0(amt)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/AliasStrings.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/AliasStrings.java b/src/com/google/javascript/jscomp/AliasStrings.java\nindex 36ed3e9..9e7625c 100644\n--- a/src/com/google/javascript/jscomp/AliasStrings.java\n+++ b/src/com/google/javascript/jscomp/AliasStrings.java\n@@ -110,7 +110,7 @@\n \n   @Override\n   public void process(Node externs, Node root) {\n-    logger.info(\"Aliasing common strings\");\n+    logger.fine(\"Aliasing common strings\");\n \n     // Traverse the tree and collect strings\n     NodeTraversal.traverse(compiler, root, this);\n@@ -330,7 +330,7 @@\n       }\n     }\n     // TODO(user): Make this save to file OR output to the application\n-    logger.info(sb.toString());\n+    logger.fine(sb.toString());\n   }\n \n   // -------------------------------------------------------------------------\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 113,
        "bugNodeStartChar": 3869,
        "bugNodeLength": 38,
        "fixLineNum": 113,
        "fixNodeStartChar": 3869,
        "fixNodeLength": 38,
        "sourceBeforeFix": "logger.info(\"Aliasing common strings\")",
        "sourceAfterFix": "logger.fine(\"Aliasing common strings\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a295b91c37f681199a83fdb963344c19e0d015c0",
        "fixCommitParentSHA1": "639746c600fda2645e33223cb7c6607cf7163783",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/examples/TestApp.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\nindex c8b085e..e583dd5 100644\n--- a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n+++ b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n@@ -631,7 +631,7 @@\n     private void handleAtomicNumberSet(String[] args) {\n         long v = 0;\n         if (args.length > 1) {\n-            v = Long.valueOf(args[1]);\n+            v = Long.parseLong(args[1]);\n         }\n         getAtomicNumber().set(v);\n         println(getAtomicNumber().get());\n@@ -848,7 +848,7 @@\n \n     protected void handleMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMap().tryLock(key);\n@@ -971,7 +971,7 @@\n \n     protected void handleMultiMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMultiMap().tryLock(key);\n@@ -1019,7 +1019,7 @@\n             if (timeout == null) {\n                 println(lock.tryLock());\n             } else {\n-                long time = Long.valueOf(timeout);\n+                long time = Long.parseLong(timeout);\n                 try {\n                     println(lock.tryLock(time, TimeUnit.SECONDS));\n                 } catch (InterruptedException e) {\n@@ -1232,7 +1232,7 @@\n     protected void handleQOffer(String[] args) {\n         long timeout = 0;\n         if (args.length > 2) {\n-            timeout = Long.valueOf(args[2]);\n+            timeout = Long.parseLong(args[2]);\n         }\n         try {\n             boolean offered = getQueue().offer(args[1], timeout, TimeUnit.SECONDS);\n@@ -1253,7 +1253,7 @@\n     protected void handleQPoll(String[] args) {\n         long timeout = 0;\n         if (args.length > 1) {\n-            timeout = Long.valueOf(args[1]);\n+            timeout = Long.parseLong(args[1]);\n         }\n         try {\n             println(getQueue().poll(timeout, TimeUnit.SECONDS));\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1256,
        "bugNodeStartChar": 42768,
        "bugNodeLength": 21,
        "fixLineNum": 1256,
        "fixNodeStartChar": 42768,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Long.valueOf(args[1])",
        "sourceAfterFix": "Long.parseLong(args[1])"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8049779a0f559d938dfb8259deb9d77acbed9dc1",
        "fixCommitParentSHA1": "a2f3d407d4c468ff0c33f3996725f675983ee649",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\nindex b6eec62..b758ac0 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/IndexBufferObject.java\n@@ -139,12 +139,12 @@\n \t * \r\n \t * @param indices the vertex data\r\n \t * @param offset the offset to start copying the data from\r\n-\t * @param count the number of floats to copy\r\n+\t * @param count the number of shorts to copy\r\n \t */\r\n \tpublic void setIndices (short[] indices, int offset, int count) {\r\n \t\tisDirty = true;\r\n \t\tbuffer.clear();\r\n-\t\tbuffer.put(indices);\r\n+\t\tbuffer.put(indices, offset, count);\r\n \t\tbuffer.flip();\r\n \t\tbyteBuffer.position(0);\r\n \t\tbyteBuffer.limit(count << 1);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 147,
        "bugNodeStartChar": 4786,
        "bugNodeLength": 19,
        "fixLineNum": 147,
        "fixNodeStartChar": 4640,
        "fixNodeLength": 34,
        "sourceBeforeFix": "buffer.put(indices)",
        "sourceAfterFix": "buffer.put(indices,offset,count)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e669002a9698f48bc48ee0138798f7acf655c33d",
        "fixCommitParentSHA1": "c0f553de3542ff22797c3ac4b4f2b917c7bc2a00",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java b/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\nindex fa0dcda..15f9cd2 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\n@@ -43,16 +43,16 @@\n  * This tracer allows to store message tracers per node in the Camel routes. The tracers\n  * is stored in a backlog queue (FIFO based) which allows to pull the traced messages on demand.\n  */\n-public class BacklogTracer extends ServiceSupport implements InterceptStrategy {\n+public final class BacklogTracer extends ServiceSupport implements InterceptStrategy {\n \n-    // lets limit the tracer to 100 thousand messages in total\n-    public static final int MAX_BACKLOG_SIZE = 100 * 1000;\n+    // lets limit the tracer to 10 thousand messages in total\n+    public static final int MAX_BACKLOG_SIZE = 10 * 1000;\n     private static final Logger LOG = LoggerFactory.getLogger(BacklogTracer.class);\n     private final CamelContext camelContext;\n     private boolean enabled;\n     private final AtomicLong traceCounter = new AtomicLong(0);\n     // use a queue with a upper limit to avoid storing too many messages\n-    private final Queue<BacklogTracerEventMessage> queue = new LinkedBlockingQueue<>(MAX_BACKLOG_SIZE);\n+    private final Queue<BacklogTracerEventMessage> queue = new LinkedBlockingQueue<BacklogTracerEventMessage>(MAX_BACKLOG_SIZE);\n     // how many of the last messages to keep in the backlog at total\n     private int backlogSize = 1000;\n     private boolean removeOnDump = true;\n@@ -262,7 +262,7 @@\n     }\n \n     public List<BacklogTracerEventMessage> dumpTracedMessages(String nodeId) {\n-        List<BacklogTracerEventMessage> answer = new ArrayList<>();\n+        List<BacklogTracerEventMessage> answer = new ArrayList<BacklogTracerEventMessage>();\n         if (nodeId != null) {\n             for (BacklogTracerEventMessage message : queue) {\n                 if (nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId())) {\n@@ -291,7 +291,7 @@\n     }\n \n     public List<BacklogTracerEventMessage> dumpAllTracedMessages() {\n-        List<BacklogTracerEventMessage> answer = new ArrayList<>();\n+        List<BacklogTracerEventMessage> answer = new ArrayList<BacklogTracerEventMessage>();\n         answer.addAll(queue);\n         if (isRemoveOnDump()) {\n             queue.clear();\n",
        "projectName": "apache.camel",
        "bugLineNum": 49,
        "bugNodeStartChar": 2119,
        "bugNodeLength": 10,
        "fixLineNum": 49,
        "fixNodeStartChar": 2118,
        "fixNodeLength": 9,
        "sourceBeforeFix": "100 * 1000",
        "sourceAfterFix": "10 * 1000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "291fedc4f37709813c3544740c0563ee79358e65",
        "fixCommitParentSHA1": "e7d0513f3dc54fd08275ab7c26941edf07c98f3f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\nindex 4ece8a3..651234d 100644\n--- a/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n+++ b/gdx/src/com/badlogic/gdx/utils/PerformanceCounter.java\n@@ -64,7 +64,7 @@\n \tpublic void tick() {\n \t\tfinal long t = System.nanoTime();\n \t\tif (lastTick > 0L)\n-\t\t\ttick((lastTick - t) * nano2seconds);\n+\t\t\ttick((t - lastTick) * nano2seconds);\n \t\tlastTick = t;\n \t}\n \t\n@@ -78,7 +78,7 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\ttime.put(delta);\n+\t\ttime.put(current);\n \t\t\n \t\tfinal float currentLoad = delta == 0f ? 0f : current / delta;\n \t\tload.put((delta > 1f) ? currentLoad : delta * currentLoad + (1f - delta) * load.latest);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 81,
        "bugNodeStartChar": 3076,
        "bugNodeLength": 15,
        "fixLineNum": 81,
        "fixNodeStartChar": 3076,
        "fixNodeLength": 17,
        "sourceBeforeFix": "time.put(delta)",
        "sourceAfterFix": "time.put(current)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "ed5a73fae62dba1bae5786445be7e535f9a3cfd1",
        "fixCommitParentSHA1": "a49d301514ca14bc78c02445db9bc9e5dcc9b177",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java b/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\nindex da2c969..713fa70 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSourceC3P0Adapter.java\n@@ -25,7 +25,7 @@\n         this.setAcquireIncrement(3);\r\n         this.setAcquireIncrement(30);\r\n         this.setAcquireRetryDelay(1000);\r\n-        this.setAutoCommitOnClose(false);\r\n+        this.setAutoCommitOnClose(true);\r\n         this.setAutomaticTestTable(null);\r\n         this.setCheckoutTimeout(0);\r\n         this.setDebugUnreturnedConnectionStackTraces(false);\r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 28,
        "bugNodeStartChar": 783,
        "bugNodeLength": 32,
        "fixLineNum": 28,
        "fixNodeStartChar": 756,
        "fixNodeLength": 31,
        "sourceBeforeFix": "this.setAutoCommitOnClose(false)",
        "sourceAfterFix": "this.setAutoCommitOnClose(true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6a95dd35511f4216481d8d0ffd4952ed1893a1c4",
        "fixCommitParentSHA1": "27cf749af884edae55454c885c7fb066f0a33c79",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java\nindex 9a45116..11aa5db 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java\n@@ -232,7 +232,7 @@\n     htd.addFamily(hcd);\n     htd.setOwner(USER_OWNER);\n     admin.createTable(htd, new byte[][] { Bytes.toBytes(\"s\") });\n-    TEST_UTIL.waitTableEnabled(TEST_TABLE.getTableName());\n+    TEST_UTIL.waitUntilAllRegionsAssigned(TEST_TABLE.getTableName());\n \n     HRegion region = TEST_UTIL.getHBaseCluster().getRegions(TEST_TABLE.getTableName()).get(0);\n     RegionCoprocessorHost rcpHost = region.getCoprocessorHost();\n@@ -930,7 +930,7 @@\n       setPermission(loadPath, FsPermission.valueOf(\"-rwxrwxrwx\"));\n \n       try (HTable table = (HTable)TEST_UTIL.getConnection().getTable(tableName)) {\n-        TEST_UTIL.waitTableEnabled(tableName);\n+        TEST_UTIL.waitUntilAllRegionsAssigned(tableName);\n         LoadIncrementalHFiles loader = new LoadIncrementalHFiles(conf);\n         loader.doBulkLoad(loadPath, table);\n       }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 933,
        "bugNodeStartChar": 34298,
        "bugNodeLength": 37,
        "fixLineNum": 933,
        "fixNodeStartChar": 34298,
        "fixNodeLength": 48,
        "sourceBeforeFix": "TEST_UTIL.waitTableEnabled(tableName)",
        "sourceAfterFix": "TEST_UTIL.waitUntilAllRegionsAssigned(tableName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7c0c5dae32338cc013c7107d41a3ecc8711e59a1",
        "fixCommitParentSHA1": "bd9b7d0df98f20b3cf8e19b1332e75376e81d75c",
        "bugFilePath": "components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java",
        "fixPatch": "diff --git a/components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java b/components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java\nindex 8f70be2..a79314a 100644\n--- a/components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java\n+++ b/components/camel-jms/src/test/java/org/apache/camel/component/jms/discovery/JmsDiscoveryTest.java\n@@ -38,7 +38,7 @@\n     @Test\n     public void testDiscovery() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(3);\n+        mock.expectedMinimumMessageCount(3);\n \n         assertMockEndpointsSatisfied();\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 41,
        "bugNodeStartChar": 1599,
        "bugNodeLength": 28,
        "fixLineNum": 41,
        "fixNodeStartChar": 1599,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(3)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(3)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "deabd5b0187c1825c686c7f6a593db918bd043dc",
        "fixCommitParentSHA1": "773f6cef58630ce1ef99105030ceaffb40330c33",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\nindex e78b257..1b5e9fa 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\n@@ -87,7 +87,7 @@\n             AtmosphereRequest req = AtmosphereResourceImpl.class.cast(r).getRequest(false);\n             try {\n                 if (req.getAttribute(MAX_INACTIVE) == null) {\n-                    logger.error(\"Invalid state {}\", r);\n+                    logger.warn(\"Invalid state {}\", r);\n                     r.removeFromAllBroadcasters();\n                     config.resourcesFactory().unRegisterUuidForFindCandidate(r);\n                     continue;\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 90,
        "bugNodeStartChar": 3271,
        "bugNodeLength": 35,
        "fixLineNum": 90,
        "fixNodeStartChar": 3271,
        "fixNodeLength": 34,
        "sourceBeforeFix": "logger.error(\"Invalid state {}\",r)",
        "sourceAfterFix": "logger.warn(\"Invalid state {}\",r)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "efa5b54542e6ccd1357433f3ae340e94efdd9f6e",
        "fixCommitParentSHA1": "4a14cfc01b6c06817899290b6d2c5f0849cb44dd",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex b43b4df..5b353c4 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -2031,7 +2031,7 @@\n             transactionalListenerResponses =\n                 MetaStoreListenerNotifier.notifyEvent(transactionalListeners,\n                                                       EventType.DROP_TABLE,\n-                                                      new DropTableEvent(tbl, deleteData, true, this),\n+                                                      new DropTableEvent(tbl, true, deleteData, this),\n                                                       envContext);\n           }\n           success = ms.commitTransaction();\n@@ -2051,7 +2051,7 @@\n         if (!listeners.isEmpty()) {\n           MetaStoreListenerNotifier.notifyEvent(listeners,\n                                                 EventType.DROP_TABLE,\n-                                                new DropTableEvent(tbl, deleteData, success, this),\n+                                                new DropTableEvent(tbl, success, deleteData, this),\n                                                 envContext,\n                                                 transactionalListenerResponses, ms);\n         }\n",
        "projectName": "apache.hive",
        "bugLineNum": 2034,
        "bugNodeStartChar": 79703,
        "bugNodeLength": 47,
        "fixLineNum": 2034,
        "fixNodeStartChar": 79703,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new DropTableEvent(tbl,deleteData,true,this)",
        "sourceAfterFix": "new DropTableEvent(tbl,true,deleteData,this)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bd942a35fbf90739b19b5d1e292bed63cfc0a865",
        "fixCommitParentSHA1": "0b24a4417a6a4d33ecd964a5679e673bf4241d85",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java\nindex b3c1fff..8c66a5c 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012-2014 the original author or authors.\n+ * Copyright 2012-2015 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -101,7 +101,7 @@\n \t\t\t\tobjectMapper.registerModule(new Jackson2HalModule());\n \t\t\t\tJackson2HalModule.HalHandlerInstantiator instantiator = new Jackson2HalModule.HalHandlerInstantiator(\n \t\t\t\t\t\tHalObjectMapperConfiguration.this.relProvider,\n-\t\t\t\t\t\tHalObjectMapperConfiguration.this.curieProvider);\n+\t\t\t\t\t\tHalObjectMapperConfiguration.this.curieProvider, null);\n \t\t\t\tobjectMapper.setHandlerInstantiator(instantiator);\n \t\t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 102,
        "bugNodeStartChar": 4308,
        "bugNodeLength": 153,
        "fixLineNum": 102,
        "fixNodeStartChar": 4308,
        "fixNodeLength": 159,
        "sourceBeforeFix": "new Jackson2HalModule.HalHandlerInstantiator(HalObjectMapperConfiguration.this.relProvider,HalObjectMapperConfiguration.this.curieProvider)",
        "sourceAfterFix": "new Jackson2HalModule.HalHandlerInstantiator(HalObjectMapperConfiguration.this.relProvider,HalObjectMapperConfiguration.this.curieProvider,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c799126efce58248261e9c993680798d2ed3eeb1",
        "fixCommitParentSHA1": "828d7f1d8463daa31ab5aaf6414cb0710b0f6ad5",
        "bugFilePath": "shell/src/main/java/alluxio/cli/ConfigurationDocGenerator.java",
        "fixPatch": "diff --git a/shell/src/main/java/alluxio/cli/ConfigurationDocGenerator.java b/shell/src/main/java/alluxio/cli/ConfigurationDocGenerator.java\nindex 3e6b440..e5306d9 100644\n--- a/shell/src/main/java/alluxio/cli/ConfigurationDocGenerator.java\n+++ b/shell/src/main/java/alluxio/cli/ConfigurationDocGenerator.java\n@@ -198,7 +198,7 @@\n     String filePath = PathUtils.concatPath(homeDir, CSV_FILE_DIR);\n     writeCSVFile(defaultKeys, filePath);\n     // generate YML files\n-    filePath = PathUtils.concatPath(filePath, YML_FILE_DIR);\n+    filePath = PathUtils.concatPath(homeDir, YML_FILE_DIR);\n     writeYMLFile(defaultKeys, filePath);\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 201,
        "bugNodeStartChar": 7247,
        "bugNodeLength": 44,
        "fixLineNum": 201,
        "fixNodeStartChar": 7247,
        "fixNodeLength": 43,
        "sourceBeforeFix": "PathUtils.concatPath(filePath,YML_FILE_DIR)",
        "sourceAfterFix": "PathUtils.concatPath(homeDir,YML_FILE_DIR)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dbc0ca8d1cb03f2da2c8fc0062e5d4b681fef11a",
        "fixCommitParentSHA1": "d9c72eadecbf3507c6188e9edae3fb8512597ade",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThreadTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThreadTest.java b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThreadTest.java\nindex 9fb462d..61c0258 100644\n--- a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThreadTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/OperationThreadTest.java\n@@ -29,7 +29,7 @@\n         DummyOperation operation = new DummyOperation(Operation.GENERIC_PARTITION_ID);\n         Data data = serializationService.toData(operation);\n \n-        Packet packet = new Packet(data, operation.getPartitionId(), serializationService.getPortableContext());\n+        Packet packet = new Packet(data, operation.getPartitionId());\n         packet.setHeader(Packet.HEADER_OP);\n \n         doThrow(new OutOfMemoryError()).when(handler).run(packet);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 32,
        "bugNodeStartChar": 1273,
        "bugNodeLength": 87,
        "fixLineNum": 32,
        "fixNodeStartChar": 1273,
        "fixNodeLength": 44,
        "sourceBeforeFix": "new Packet(data,operation.getPartitionId(),serializationService.getPortableContext())",
        "sourceAfterFix": "new Packet(data,operation.getPartitionId())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7369734ba2477dc5f208c9bcdbf438d42e92ac25",
        "fixCommitParentSHA1": "01196f282535b641f0c3c19933c214286e0cac2f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 7dc5690..eb02c1b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -14,7 +14,7 @@\n  * {@link Table} with a single cell but is more lightweight.\n  * @author Nathan Sweet */\n public class Container<T extends Actor> extends WidgetGroup {\n-\tprivate Actor actor;\n+\tprivate T actor;\n \tprivate Value minWidth = Value.minWidth, minHeight = Value.minHeight;\n \tprivate Value prefWidth = Value.prefWidth, prefHeight = Value.prefHeight;\n \tprivate Value maxWidth = Value.zero, maxHeight = Value.zero;\n@@ -31,7 +31,7 @@\n \t\tsetTransform(false);\n \t}\n \n-\tpublic Container (Actor actor) {\n+\tpublic Container (T actor) {\n \t\tthis();\n \t\tsetActor(actor);\n \t}\n@@ -151,7 +151,7 @@\n \t}\n \n \t/** @param actor May be null. */\n-\tpublic void setActor (Actor actor) {\n+\tpublic void setActor (T actor) {\n \t\tif (actor == this) throw new IllegalArgumentException(\"actor cannot be the Container.\");\n \t\tif (this.actor != null) super.removeActor(this.actor);\n \t\tthis.actor = actor;\n@@ -160,7 +160,7 @@\n \n \t/** @return May be null. */\n \tpublic T getActor () {\n-\t\treturn (T)actor;\n+\t\treturn actor;\n \t}\n \n \t/** @deprecated Container may have only a single child.\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 34,
        "bugNodeStartChar": 1333,
        "bugNodeLength": 11,
        "fixLineNum": 34,
        "fixNodeStartChar": 1333,
        "fixNodeLength": 7,
        "sourceBeforeFix": "Actor actor",
        "sourceAfterFix": "T actor"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "4c66566e398558597a5058384d85a020b2418dab",
        "fixCommitParentSHA1": "6aec89b242034a79d122d8032b9dd4e90f5f2039",
        "bugFilePath": "vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java",
        "fixPatch": "diff --git a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\nindex 5eeea03..90940ce 100644\n--- a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n+++ b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n@@ -439,7 +439,7 @@\n \n   @Test\n   public void testListenOnWildcardPort() throws Exception {\n-    startTest(getMethodName(), false);\n+    startTest(getMethodName());\n   }\n \n   @Test\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 442,
        "bugNodeStartChar": 13911,
        "bugNodeLength": 33,
        "fixLineNum": 442,
        "fixNodeStartChar": 13911,
        "fixNodeLength": 26,
        "sourceBeforeFix": "startTest(getMethodName(),false)",
        "sourceAfterFix": "startTest(getMethodName())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketComponentRouteExampleTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketComponentRouteExampleTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketComponentRouteExampleTest.java\nindex 76b14a0..211856f 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketComponentRouteExampleTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketComponentRouteExampleTest.java\n@@ -92,7 +92,7 @@\n                 WebsocketComponent websocketComponent = getContext().getComponent(\"websocket\", WebsocketComponent.class);\n                 websocketComponent.setHost(\"localhost\");\n                 websocketComponent.setPort(port);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n                 websocketComponent.setMinThreads(1);\n \n                 from(\"websocket://echo\")\n",
        "projectName": "apache.camel",
        "bugLineNum": 95,
        "bugNodeStartChar": 3446,
        "bugNodeLength": 36,
        "fixLineNum": 95,
        "fixNodeStartChar": 3446,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "2128c76abd417bcdc41c6120d924b618593e9fca",
        "fixCommitParentSHA1": "9cc1a8339e4bcd2ff3e4855c39dede3d5a260e29",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\nindex 8509aed..2292c3c 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java\n@@ -30,9 +30,9 @@\n \tpublic boolean act (float delta) {\n \t\tActor actor = (targetActor != null ? targetActor : this.actor);\n \t\tif (capture)\n-\t\t\ttargetActor.addCaptureListener(listener);\n+\t\t\tactor.addCaptureListener(listener);\n \t\telse\n-\t\t\ttargetActor.addListener(listener);\n+\t\t\tactor.addListener(listener);\n \t\treturn true;\n \t}\n \n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 35,
        "bugNodeStartChar": 1324,
        "bugNodeLength": 33,
        "fixLineNum": 35,
        "fixNodeStartChar": 1324,
        "fixNodeLength": 27,
        "sourceBeforeFix": "targetActor.addListener(listener)",
        "sourceAfterFix": "actor.addListener(listener)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "706147277ab44d4d6a1483eca9f592446aa62993",
        "fixCommitParentSHA1": "b4ae08e35226d83b91b9279f0f8392d2172c3f05",
        "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java",
        "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java b/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\nindex 1cfd029..6981c91 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/view/TransactionInfoViewModel.java\n@@ -94,7 +94,7 @@\n \n     @JsonProperty(\"logPageUrl\")\n     public String getLogPageUrl() {\n-        if (logPageUrl != null || logPageUrl.length() > 0) {\n+        if (logPageUrl != null && logPageUrl.length() > 0) {\n             try {\n                 URL url = new URL(logPageUrl);\n                 StringBuilder sb = new StringBuilder();\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 97,
        "bugNodeStartChar": 2954,
        "bugNodeLength": 45,
        "fixLineNum": 97,
        "fixNodeStartChar": 2954,
        "fixNodeLength": 45,
        "sourceBeforeFix": "logPageUrl != null || logPageUrl.length() > 0",
        "sourceAfterFix": "logPageUrl != null && logPageUrl.length() > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "src/com/google/javascript/jscomp/StripCode.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/StripCode.java b/src/com/google/javascript/jscomp/StripCode.java\nindex 7dc99ec..9d15e95 100644\n--- a/src/com/google/javascript/jscomp/StripCode.java\n+++ b/src/com/google/javascript/jscomp/StripCode.java\n@@ -96,7 +96,7 @@\n \n     NodeTraversal.traverse(compiler, root, new Strip());\n     // This pass may remove definitions of getter or setter properties\n-    GatherGettersAndSetterProperties.update(compiler, externs, root);\n+    GatherGetterAndSetterProperties.update(compiler, externs, root);\n   }\n \n   // -------------------------------------------------------------------------\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 99,
        "bugNodeStartChar": 3889,
        "bugNodeLength": 64,
        "fixLineNum": 99,
        "fixNodeStartChar": 3889,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externs,root)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externs,root)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "guava/src/com/google/common/graph/DirectedGraphConnections.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/graph/DirectedGraphConnections.java b/guava/src/com/google/common/graph/DirectedGraphConnections.java\nindex 809046b..668b569 100644\n--- a/guava/src/com/google/common/graph/DirectedGraphConnections.java\n+++ b/guava/src/com/google/common/graph/DirectedGraphConnections.java\n@@ -166,7 +166,7 @@\n \n   @SuppressWarnings(\"unchecked\")\n   @Override\n-  public V value(Object node) {\n+  public V value(N node) {\n     Object value = adjacentNodeValues.get(node);\n     if (value == PRED) {\n       return null;\n@@ -179,7 +179,7 @@\n \n   @SuppressWarnings(\"unchecked\")\n   @Override\n-  public void removePredecessor(Object node) {\n+  public void removePredecessor(N node) {\n     Object previousValue = adjacentNodeValues.get(node);\n     if (previousValue == PRED) {\n       adjacentNodeValues.remove(node);\n",
        "projectName": "google.guava",
        "bugLineNum": 169,
        "bugNodeStartChar": 5569,
        "bugNodeLength": 11,
        "fixLineNum": 169,
        "fixNodeStartChar": 5569,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object node",
        "sourceAfterFix": "N node"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d18446f8da47a778fa65b9c0ca77019740879a21",
        "fixCommitParentSHA1": "da067cd627411116af86c4e5f4bb8d105eb75a40",
        "bugFilePath": "core/src/test/java/cucumber/runtime/LinePredicateTest.java",
        "fixPatch": "diff --git a/core/src/test/java/cucumber/runtime/LinePredicateTest.java b/core/src/test/java/cucumber/runtime/LinePredicateTest.java\nindex c63ffd4..414cc53 100644\n--- a/core/src/test/java/cucumber/runtime/LinePredicateTest.java\n+++ b/core/src/test/java/cucumber/runtime/LinePredicateTest.java\n@@ -22,11 +22,14 @@\n     private static final List<PickleTag> NO_TAGS = Collections.<PickleTag>emptyList();\n \n     @Test\n-    public void does_not_match_pickles_from_files_not_in_the_predicate_map() {\n+    public void matches_pickles_from_files_not_in_the_predicate_map() {\n+        // the argument \"path/file.feature another_path/file.feature:8\"\n+        // results in only line predicates only for another_path/file.feature,\n+        // but all pickles from path/file.feature shall also be executed.\n         PickleEvent pickleEvent = createPickleEventWithLocations(\"path/file.feature\", asList(pickleLocation(4)));\n-        LinePredicate predicate = new LinePredicate(singletonMap(\"another_path/file.feature\", asList(4L)));\n+        LinePredicate predicate = new LinePredicate(singletonMap(\"another_path/file.feature\", asList(8L)));\n \n-        assertFalse(predicate.apply(pickleEvent));\n+        assertTrue(predicate.apply(pickleEvent));\n     }\n \n     @Test\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 29,
        "bugNodeStartChar": 1090,
        "bugNodeLength": 41,
        "fixLineNum": 29,
        "fixNodeStartChar": 1090,
        "fixNodeLength": 40,
        "sourceBeforeFix": "assertFalse(predicate.apply(pickleEvent))",
        "sourceAfterFix": "assertTrue(predicate.apply(pickleEvent))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5ba6ded7e01cc902e75403dac6cb5c5f9d74f74d",
        "fixCommitParentSHA1": "1d64eaa19505c0791d097a0c3f27e847f7db9c90",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\nindex 235eea3..91889a0 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n@@ -89,7 +89,7 @@\n         && !NettyUtils.isDomainSocketSupported(address)\n         && blockSource == BlockInStreamSource.LOCAL) {\n       try {\n-        LOG.info(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n+        LOG.debug(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n         return createLocalBlockInStream(context, address, blockId, blockSize, options);\n       } catch (NotFoundException e) {\n         // Failed to do short circuit read because the block is not available in Alluxio.\n@@ -103,7 +103,7 @@\n       builder.setOpenUfsBlockOptions(openUfsBlockOptions);\n     }\n \n-    LOG.info(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n+    LOG.debug(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n         NetworkAddressUtils.getClientHostName());\n     return createNettyBlockInStream(context, address, blockSource, builder.buildPartial(),\n         blockSize, options);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 106,
        "bugNodeStartChar": 4222,
        "bugNodeLength": 139,
        "fixLineNum": 106,
        "fixNodeStartChar": 4222,
        "fixNodeLength": 140,
        "sourceBeforeFix": "LOG.info(\"Creating netty input stream for block {} @ {} from client {}\",blockId,address,NetworkAddressUtils.getClientHostName())",
        "sourceAfterFix": "LOG.debug(\"Creating netty input stream for block {} @ {} from client {}\",blockId,address,NetworkAddressUtils.getClientHostName())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0258c8ad89e63130480ff5e15d7d4a12be92ff1c",
        "fixCommitParentSHA1": "820d5b8cbc50c18679380516ce9f35145b9217d4",
        "bugFilePath": "modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java",
        "fixPatch": "diff --git a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\nindex bf2b3c0..64209db 100644\n--- a/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n+++ b/modules/activiti-cxf/src/test/java/org/activiti/engine/test/bpmn/sendtask/WebServiceUELTest.java\n@@ -36,7 +36,7 @@\n     assertEquals(-1, counter.getCount());\n \n     ProcessDefinitionEntity processDefinition = processEngineConfiguration\n-      .getCommandExecutorTxRequiresNew()\n+      .getCommandExecutor()\n       .execute(new Command<ProcessDefinitionEntity>() {\n         public ProcessDefinitionEntity execute(CommandContext commandContext) {\n           return Context\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 38,
        "bugNodeStartChar": 1510,
        "bugNodeLength": 67,
        "fixLineNum": 38,
        "fixNodeStartChar": 1510,
        "fixNodeLength": 54,
        "sourceBeforeFix": "processEngineConfiguration.getCommandExecutorTxRequiresNew()",
        "sourceAfterFix": "processEngineConfiguration.getCommandExecutor()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d3df587543605323d2a3432e896ea49a81bc8306",
        "fixCommitParentSHA1": "269c3e6c64739fbb1e32773d24dca0f7f9258446",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\nindex 89ef0ac..5306b51 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n@@ -292,7 +292,7 @@\n \t\tif (currentLocalTransform != renderable.localTransform)\n \t\t\tset(u_localTrans, (currentLocalTransform = renderable.localTransform) == null ? idtMatrix : renderable.localTransform);\n \t\tif (currentModelTransform != renderable.modelTransform)\n-\t\t\tset(u_modelTrans, (currentWorldTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n+\t\t\tset(u_modelTrans, (currentModelTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n \t\tif (currentLocalTransform == null && currentModelTransform == null)\n \t\t\tsetWorldTransform(idtMatrix, false);\n \t\telse if (currentLocalTransform == null)\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 295,
        "bugNodeStartChar": 13829,
        "bugNodeLength": 49,
        "fixLineNum": 295,
        "fixNodeStartChar": 13829,
        "fixNodeLength": 49,
        "sourceBeforeFix": "currentWorldTransform=renderable.modelTransform",
        "sourceAfterFix": "currentModelTransform=renderable.modelTransform"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "2b6d45508192c28f6b957a1ec18eb4fc075f9a97",
        "fixCommitParentSHA1": "8a666af5ccbd66908324012686c72f22a70cfd7f",
        "bugFilePath": "servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java",
        "fixPatch": "diff --git a/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java b/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\nindex 4a24ff9..8f92a4a 100644\n--- a/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\n+++ b/servers/src/test/java/tachyon/worker/block/BlockWorkerUtilsTest.java\n@@ -73,19 +73,19 @@\n \n     InetSocketAddress masterAddress = BlockWorkerUtils.getMasterAddress(mCustomPropsTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(\"RemoteMaster1\", 10000));\n+    Assert.assertEquals(new InetSocketAddress(\"RemoteMaster1\", 10000), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullMasterHostNameTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(defaultHostname, 20000));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, 20000), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullMasterPortTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(\"RemoteMaster3\", defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(\"RemoteMaster3\", defaultPort), masterAddress);\n \n     masterAddress = BlockWorkerUtils.getMasterAddress(mNullTachyonConf);\n     Assert.assertNotNull(masterAddress);\n-    Assert.assertEquals(masterAddress, new InetSocketAddress(defaultHostname, defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, defaultPort), masterAddress);\n   }\n \n   @Test\n@@ -95,10 +95,10 @@\n \n     InetSocketAddress workerAddress = BlockWorkerUtils.getWorkerAddress(mCustomPropsTachyonConf);\n     Assert.assertNotNull(workerAddress);\n-    Assert.assertEquals(workerAddress, new InetSocketAddress(defaultHostname, 10001));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, 10001), workerAddress);\n \n     workerAddress = BlockWorkerUtils.getWorkerAddress(mNullTachyonConf);\n     Assert.assertNotNull(workerAddress);\n-    Assert.assertEquals(workerAddress, new InetSocketAddress(defaultHostname, defaultPort));\n+    Assert.assertEquals(new InetSocketAddress(defaultHostname, defaultPort), workerAddress);\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 98,
        "bugNodeStartChar": 4095,
        "bugNodeLength": 81,
        "fixLineNum": 98,
        "fixNodeStartChar": 4095,
        "fixNodeLength": 81,
        "sourceBeforeFix": "Assert.assertEquals(workerAddress,new InetSocketAddress(defaultHostname,10001))",
        "sourceAfterFix": "Assert.assertEquals(new InetSocketAddress(defaultHostname,10001),workerAddress)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dd20434290eb6ae6dff133d70073e35a3998d362",
        "fixCommitParentSHA1": "cb0dee8b09d8cd27f0b817b0317b68501fbac924",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex 989bda8..92adc88 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -121,7 +121,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -158,7 +158,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -232,7 +232,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -292,7 +292,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -318,14 +318,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 124,
        "bugNodeStartChar": 4810,
        "bugNodeLength": 89,
        "fixLineNum": 124,
        "fixNodeStartChar": 4810,
        "fixNodeLength": 84,
        "sourceBeforeFix": "LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0dbcd0f3bc0441dcd2a52d1fff38d8aba6a088cc",
        "fixCommitParentSHA1": "5b32c047b5fbd8683a372f5cb074798463b7b4b5",
        "bugFilePath": "ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java",
        "fixPatch": "diff --git a/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java b/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\nindex 045e168..566c73b 100644\n--- a/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\n+++ b/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\n@@ -82,7 +82,7 @@\n         final Class<?> componentClass;\n         try {\n             componentClass = ClassLoadingUtils.loadClass(description.getComponentClassName(), deploymentUnit);\n-        } catch (ClassNotFoundException e) {\n+        } catch (Throwable e) {\n             //just ignore the class for now.\n             //if it is an optional component this is ok, if it is not an optional component\n             //it will fail at configure time anyway\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 85,
        "bugNodeStartChar": 4084,
        "bugNodeLength": 24,
        "fixLineNum": 85,
        "fixNodeStartChar": 4084,
        "fixNodeLength": 11,
        "sourceBeforeFix": "ClassNotFoundException e",
        "sourceAfterFix": "Throwable e"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "e8fe993bb02c2db455a8636cf2dd861e79fee7d2",
        "fixCommitParentSHA1": "099d639bc9ce1cb387d2e3db36fd1fde1ef45e49",
        "bugFilePath": "dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java",
        "fixPatch": "diff --git a/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java b/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\nindex 528ac61..0c050b2 100644\n--- a/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\n+++ b/dubbo-config/src/main/java/com/alibaba/dubbo/config/ServiceConfig.java\n@@ -250,7 +250,7 @@\n     }\r\n \r\n     public synchronized void unexport() {\r\n-        if (exported) {\r\n+        if (!exported) {\r\n             throw new IllegalStateException(\"No exported!\");\r\n         }\r\n         if (unexported) {\r\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 253,
        "bugNodeStartChar": 9814,
        "bugNodeLength": 8,
        "fixLineNum": 253,
        "fixNodeStartChar": 9562,
        "fixNodeLength": 9,
        "sourceBeforeFix": "exported",
        "sourceAfterFix": "!exported"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4597da262b00311e03c657db986f712387def622",
        "fixCommitParentSHA1": "3f1c673602646cd2bb1fc7af3b47ec12d7708112",
        "bugFilePath": "modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java",
        "fixPatch": "diff --git a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\nindex adbdcec..07b33c3 100644\n--- a/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n+++ b/modules/swagger-core/src/test/java/io/swagger/ModelSerializerTest.java\n@@ -324,7 +324,7 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertTrue(model.getUniqueItems());\n+        assertFalse(model.getUniqueItems());\n     }\n \n     @Test\n@@ -336,6 +336,6 @@\n \n         final ModelImpl model = Json.mapper().readValue(json, ModelImpl.class);\n \n-        assertFalse(model.getUniqueItems());\n+        assertTrue(model.getUniqueItems());\n     }\n }\n\\ No newline at end of file\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 339,
        "bugNodeStartChar": 13524,
        "bugNodeLength": 35,
        "fixLineNum": 339,
        "fixNodeStartChar": 13524,
        "fixNodeLength": 34,
        "sourceBeforeFix": "assertFalse(model.getUniqueItems())",
        "sourceAfterFix": "assertTrue(model.getUniqueItems())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "ef8206551c0ec51f70ec25e7371333dc5c8d99b1",
        "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d",
        "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java",
        "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n",
        "projectName": "junit-team.junit",
        "bugLineNum": 114,
        "bugNodeStartChar": 3419,
        "bugNodeLength": 51,
        "fixLineNum": 114,
        "fixNodeStartChar": 3419,
        "fixNodeLength": 37,
        "sourceBeforeFix": "testClass.getMethod(SUITE_METHODNAME,new Class[0])",
        "sourceAfterFix": "testClass.getMethod(SUITE_METHODNAME)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3439fb13b3fa16d5e42d0e064065be5ae7462eb",
        "fixCommitParentSHA1": "a9985cbe64988960f30426fd36cbb4487e6d10b4",
        "bugFilePath": "src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\nindex cb35755..8377fbe 100644\n--- a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n+++ b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n@@ -407,12 +407,12 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n+        public Builder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n             configBuilder.setMaximumConnectionsPerHost(defaultMaxConnectionPerHost);\n             return this;\n         }\n \n-        public DerivedBuilder setConnectionTimeoutInMs(int connectionTimeuot) {\n+        public Builder setConnectionTimeoutInMs(int connectionTimeuot) {\n             configBuilder.setConnectionTimeoutInMs(connectionTimeuot);\n             return this;\n         }\n@@ -427,52 +427,52 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n+        public Builder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n             configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);\n             return this;\n         }\n \n-        public DerivedBuilder setCompressionEnabled(boolean compressionEnabled) {\n+        public Builder setCompressionEnabled(boolean compressionEnabled) {\n             configBuilder.setCompressionEnabled(compressionEnabled);\n             return this;\n         }\n \n-        public DerivedBuilder setUserAgent(String userAgent) {\n+        public Builder setUserAgent(String userAgent) {\n             configBuilder.setUserAgent(userAgent);\n             return this;\n         }\n \n-        public DerivedBuilder setAllowPoolingConnection(boolean allowPoolingConnection) {\n+        public Builder setAllowPoolingConnection(boolean allowPoolingConnection) {\n             configBuilder.setAllowPoolingConnection(allowPoolingConnection);\n             return this;\n         }\n \n-        public DerivedBuilder setScheduledExecutorService(ScheduledExecutorService reaper) {\n+        public Builder setScheduledExecutorService(ScheduledExecutorService reaper) {\n             configBuilder.setScheduledExecutorService(reaper);\n             return this;\n         }\n \n-        public DerivedBuilder setExecutorService(ExecutorService applicationThreadPool) {\n+        public Builder setExecutorService(ExecutorService applicationThreadPool) {\n             configBuilder.setExecutorService(applicationThreadPool);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n+        public Builder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n             configBuilder.setSSLEngineFactory(sslEngineFactory);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLContext(final SSLContext sslContext) {\n+        public Builder setSSLContext(final SSLContext sslContext) {\n             configBuilder.setSSLContext(sslContext);\n             return this;\n         }\n \n-        public DerivedBuilder setRequestCompressionLevel(int requestCompressionLevel) {\n+        public Builder setRequestCompressionLevel(int requestCompressionLevel) {\n             configBuilder.setRequestCompressionLevel(requestCompressionLevel);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmDomain(String domain) {\n+        public Builder setRealmDomain(String domain) {\n             realm().setDomain(domain);\n             return this;\n         }\n@@ -482,27 +482,27 @@\n             return this;\n         }\n \n-        public DerivedBuilder setRealmPassword(String password) {\n+        public Builder setRealmPassword(String password) {\n             realm().setPassword(password);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmScheme(Realm.AuthScheme scheme) {\n+        public Builder setRealmScheme(Realm.AuthScheme scheme) {\n             realm().setScheme(scheme);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmName(String realmName) {\n+        public Builder setRealmName(String realmName) {\n             realm().setRealmName(realmName);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n+        public Builder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n             realm().setUsePreemptiveAuth(usePreemptiveAuth);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmEnconding(String enc) {\n+        public Builder setRealmEnconding(String enc) {\n             realm().setEnconding(enc);\n             return this;\n         }\n@@ -517,22 +517,22 @@\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPrincipal(String principal) {\n+        public Builder setProxyPrincipal(String principal) {\n             this.proxyPrincipal = principal;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPassword(String password) {\n+        public Builder setProxyPassword(String password) {\n             this.proxyPassword = password;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPort(int port) {\n+        public Builder setProxyPort(int port) {\n             this.proxyPort = port;\n             return this;\n         }\n         \n-        public DerivedBuilder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n+        public Builder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n         {\n             this.defaultThrowableHandler = throwableHandler;\n             return this;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 475,
        "bugNodeStartChar": 18479,
        "bugNodeLength": 127,
        "fixLineNum": 475,
        "fixNodeStartChar": 18479,
        "fixNodeLength": 120,
        "sourceBeforeFix": "public DerivedBuilder setRealmDomain(String domain){   realm().setDomain(domain);   return this; } ",
        "sourceAfterFix": "public Builder setRealmDomain(String domain){   realm().setDomain(domain);   return this; } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ccd35ff388a3e7c5001779f44d74f57d8b1261c5",
        "fixCommitParentSHA1": "63e702a83fad67102e0107bd74fd1fd7c5e0b0ea",
        "bugFilePath": "src/test/java/com/facebook/presto/TestQueries.java",
        "fixPatch": "diff --git a/src/test/java/com/facebook/presto/TestQueries.java b/src/test/java/com/facebook/presto/TestQueries.java\nindex f353f01..40b448d 100644\n--- a/src/test/java/com/facebook/presto/TestQueries.java\n+++ b/src/test/java/com/facebook/presto/TestQueries.java\n@@ -241,7 +241,7 @@\n     @Test\n     public void testCountWithAndPredicate()\n     {\n-        List<Tuple> expected = computeExpected(\"SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 10.0\", FIXED_INT_64);\n+        List<Tuple> expected = computeExpected(\"SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 0.05\", FIXED_INT_64);\n \n         TupleStream discount = createTupleStream(lineitemData, Column.LINEITEM_DISCOUNT, DOUBLE);\n         TupleStream filteredDiscount = new ApplyPredicateOperator(discount, new Predicate<Cursor>()\n@@ -249,7 +249,7 @@\n             @Override\n             public boolean apply(Cursor input)\n             {\n-                return input.getDouble(0) < 10.0;\n+                return input.getDouble(0) < 0.05;\n             }\n         });\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 252,
        "bugNodeStartChar": 9838,
        "bugNodeLength": 25,
        "fixLineNum": 252,
        "fixNodeStartChar": 9838,
        "fixNodeLength": 25,
        "sourceBeforeFix": "input.getDouble(0) < 10.0",
        "sourceAfterFix": "input.getDouble(0) < 0.05"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0cb756acf8ee44c28bee8b9ea626e2a65cee5880",
        "fixCommitParentSHA1": "60e108886fcb173ca21f3966965a0b57cf5b5797",
        "bugFilePath": "guava-tests/test/com/google/common/hash/HashTestUtils.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/hash/HashTestUtils.java b/guava-tests/test/com/google/common/hash/HashTestUtils.java\nindex f2b8971..8dfbdb0 100644\n--- a/guava-tests/test/com/google/common/hash/HashTestUtils.java\n+++ b/guava-tests/test/com/google/common/hash/HashTestUtils.java\n@@ -509,9 +509,9 @@\n     rng.nextBytes(bytes);\n     ByteBuffer littleEndian = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n-    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));\n+    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(bigEndian));\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHasherByteBufferPreservesByteOrder(HashFunction hashFunction) {\n@@ -522,9 +522,9 @@\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n     assertEquals(\n         hashFunction.newHasher().putBytes(littleEndian).hash(),\n-        hashFunction.newHasher().putBytes(littleEndian).hash());\n+        hashFunction.newHasher().putBytes(bigEndian).hash());\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHashBytesThrowsCorrectExceptions(HashFunction hashFunction) {\n",
        "projectName": "google.guava",
        "bugLineNum": 514,
        "bugNodeStartChar": 18286,
        "bugNodeLength": 20,
        "fixLineNum": 514,
        "fixNodeStartChar": 18286,
        "fixNodeLength": 17,
        "sourceBeforeFix": "littleEndian.order()",
        "sourceAfterFix": "bigEndian.order()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b3f7b13bf8c9eac4a0b9835152fd15859258978",
        "fixCommitParentSHA1": "a6df0407f41358da1ffb65cb698ba1868dc8a6e5",
        "bugFilePath": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java",
        "fixPatch": "diff --git a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\nindex 4ac945a..b0f3dc9 100644\n--- a/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n+++ b/value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java\n@@ -380,8 +380,9 @@\n           + \" interface; try using @AutoAnnotation instead\", type);\n     }\n \n-    ImmutableSet<ExecutableElement> methods = getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n-    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(methods);\n+    ImmutableSet<ExecutableElement> methods =\n+        getLocalAndInheritedMethods(type, processingEnv.getElementUtils());\n+    ImmutableSet<ExecutableElement> methodsToImplement = methodsToImplement(type, methods);\n \n     String fqExtClass = TypeSimplifier.classNameOf(type);\n     List<AutoValueExtension> appliedExtensions = new ArrayList<AutoValueExtension>();\n",
        "projectName": "google.auto",
        "bugLineNum": 384,
        "bugNodeStartChar": 14569,
        "bugNodeLength": 27,
        "fixLineNum": 385,
        "fixNodeStartChar": 14577,
        "fixNodeLength": 33,
        "sourceBeforeFix": "methodsToImplement(methods)",
        "sourceAfterFix": "methodsToImplement(type,methods)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d338970323b86d631a5c1a786768133a0aabff46",
        "fixCommitParentSHA1": "c78edb0afc398057a6ce3e29c2670ccb4b8938b1",
        "bugFilePath": "bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/chart/ChartServlet.java",
        "fixPatch": "diff --git a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/chart/ChartServlet.java b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/chart/ChartServlet.java\nindex a800e1b..51a622e 100644\n--- a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/chart/ChartServlet.java\n+++ b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/chart/ChartServlet.java\n@@ -246,9 +246,9 @@\n \t\t\t\t\treq.getParameter(\"items\"), req.getParameter(\"groups\"));\n \t\t\tImageIO.write(chart, provider.getChartType().toString(), res.getOutputStream());\n \t\t} catch (ItemNotFoundException e) {\n-\t\t\tlogger.debug(\"Item not found error while generating chart.\");\n+\t\t\tlogger.error(\"Item not found error while generating chart.\", e);\n \t\t} catch (IllegalArgumentException e) {\n-\t\t\tlogger.debug(\"Illegal argument in chart: {}\", e);\n+\t\t\tlogger.error(\"Illegal argument in chart\", e);\n \t\t}\n \t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 249,
        "bugNodeStartChar": 8389,
        "bugNodeLength": 60,
        "fixLineNum": 249,
        "fixNodeStartChar": 8389,
        "fixNodeLength": 63,
        "sourceBeforeFix": "logger.debug(\"Item not found error while generating chart.\")",
        "sourceAfterFix": "logger.error(\"Item not found error while generating chart.\",e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "92e7da30dab93cf23bcf64084f660426a0d9da85",
        "fixCommitParentSHA1": "e3d3b14391b2bd7742962835ea52b556137d421f",
        "bugFilePath": "nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobGraph.java",
        "fixPatch": "diff --git a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobGraph.java b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobGraph.java\nindex b206e52..16749b6 100644\n--- a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobGraph.java\n+++ b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobGraph.java\n@@ -770,7 +770,7 @@\n \tpublic void read(final Kryo kryo, final Input input) {\n \n \t\t// Read job id\n-\t\tthis.jobID = kryo.readObjectOrNull(input, JobID.class);\n+\t\tthis.jobID = kryo.readObject(input, JobID.class);\n \n \t\t// Read the job name\n \t\tthis.jobName = input.readString();\n",
        "projectName": "apache.flink",
        "bugLineNum": 773,
        "bugNodeStartChar": 21624,
        "bugNodeLength": 41,
        "fixLineNum": 773,
        "fixNodeStartChar": 21624,
        "fixNodeLength": 35,
        "sourceBeforeFix": "kryo.readObjectOrNull(input,JobID.class)",
        "sourceAfterFix": "kryo.readObject(input,JobID.class)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "eb4fd212d3307ddbab60a5acccef6473dfa0490f",
        "fixCommitParentSHA1": "f69b80b74eee464f63c93a2cbcca2a6343491cef",
        "bugFilePath": "examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java",
        "fixPatch": "diff --git a/examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java b/examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java\nindex 0b94e35..af3ad8d 100644\n--- a/examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java\n+++ b/examples/boot-api/src/main/java/org/springside/examples/bootapi/api/BookEndpoint.java\n@@ -42,7 +42,7 @@\n \tpublic List<BookDto> listAllBook(Pageable pageable) {\r\n \t\tIterable<Book> books = adminService.findAll(pageable);\r\n \r\n-\t\treturn BeanMapper.mapList(books, Book.class,BookDto.class);\r\n+\t\treturn BeanMapper.mapList(books, BookDto.class);\r\n \t}\r\n \r\n \t@RequestMapping(value = \"/api/books/{id}\", produces = MediaTypes.JSON_UTF_8)\r\n@@ -127,7 +127,7 @@\n \t\tcheckToken(token);\r\n \t\tAccount currentUser = accountService.getLoginUser(token);\r\n \t\tList<Book> books = adminService.listMyBook(currentUser.id, pageable);\r\n-\t\treturn BeanMapper.mapList(books, Book.class, BookDto.class);\r\n+\t\treturn BeanMapper.mapList(books, BookDto.class);\r\n \t}\r\n \r\n \t@RequestMapping(value = \"/api/myborrowedbook\", produces = MediaTypes.JSON_UTF_8)\r\n@@ -136,7 +136,7 @@\n \t\tcheckToken(token);\r\n \t\tAccount currentUser = accountService.getLoginUser(token);\r\n \t\tList<Book> books = borrowService.listMyBorrowedBook(currentUser.id, pageable);\r\n-\t\treturn BeanMapper.mapList(books, Book.class, BookDto.class);\r\n+\t\treturn BeanMapper.mapList(books, BookDto.class);\r\n \t}\r\n \r\n \tprivate void checkToken(String token) {\r\n",
        "projectName": "springside.springside4",
        "bugLineNum": 130,
        "bugNodeStartChar": 5320,
        "bugNodeLength": 52,
        "fixLineNum": 130,
        "fixNodeStartChar": 5191,
        "fixNodeLength": 40,
        "sourceBeforeFix": "BeanMapper.mapList(books,Book.class,BookDto.class)",
        "sourceAfterFix": "BeanMapper.mapList(books,BookDto.class)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "339f3ee107cdfd72dbee9201de4b5c1994168b5b",
        "fixCommitParentSHA1": "345389a8a106a9405248e03e54224bc453f504c4",
        "bugFilePath": "bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\nindex 3615998..eb5c42e 100644\n--- a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n+++ b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n@@ -115,13 +115,13 @@\n \t\tcase HeatingThermostatPlus:\n \t\t\tHeatingThermostat heatingThermostat = (HeatingThermostat) device;\n \t\t\t// \"xxxx xx00 = automatic, xxxx xx01 = manual, xxxx xx10 = vacation, xxxx xx11 = boost\":\n-\t\t\tif (bits2[0] == false && bits2[0] == false) {\n+\t\t\tif (bits2[1] == false && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.AUTOMATIC);\n-\t\t\t} else if (bits2[0] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == false && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.MANUAL);\n-\t\t\t} else if (bits2[1] == false && bits2[0] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.VACATION);\n-\t\t\t} else if (bits2[1] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.BOOST);\n \t\t\t} else {\n \t\t\t\t// TODO: handel malformed message\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 120,
        "bugNodeStartChar": 3608,
        "bugNodeLength": 8,
        "fixLineNum": 120,
        "fixNodeStartChar": 3608,
        "fixNodeLength": 8,
        "sourceBeforeFix": "bits2[0]",
        "sourceAfterFix": "bits2[1]"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "8c68c5a3ae4d3d907528b64ec4b3daa5512d4be6",
        "fixCommitParentSHA1": "b32316b33cad851a8e22b5bd4cbe1de2485f1416",
        "bugFilePath": "transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java b/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java\nindex d96200d..47581cc 100644\n--- a/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java\n+++ b/transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java\n@@ -112,7 +112,7 @@\n                 // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method\n                 //\n                 // See https://github.com/netty/netty/issues/2254\n-                if (config.isAutoRead() && !readPending) {\n+                if (!config.isAutoRead() && !readPending) {\n                     removeReadOp();\n                 }\n             }\n",
        "projectName": "netty.netty",
        "bugLineNum": 115,
        "bugNodeStartChar": 4298,
        "bugNodeLength": 19,
        "fixLineNum": 115,
        "fixNodeStartChar": 4298,
        "fixNodeLength": 20,
        "sourceBeforeFix": "config.isAutoRead()",
        "sourceAfterFix": "!config.isAutoRead()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "48ea8f3eaa9a3047893d0acd5304035912ebb681",
        "fixCommitParentSHA1": "686aaadd7959226f731e7161f5b08d4ab24055f8",
        "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java",
        "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\nindex bb6f353..5a579da 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/stream/OrcInputStream.java\n@@ -67,7 +67,7 @@\n         requireNonNull(systemMemoryContext, \"systemMemoryContext is null\");\n         this.bufferMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n         this.fixedMemoryUsage = systemMemoryContext.newLocalMemoryContext();\n-        this.fixedMemoryUsage.setBytes(sliceInput.length());\n+        this.fixedMemoryUsage.setBytes(sliceInput.getRetainedSize());\n \n         if (!decompressor.isPresent()) {\n             this.current = sliceInput;\n@@ -83,7 +83,7 @@\n     public void close()\n     {\n         current = null;\n-        fixedMemoryUsage.setBytes(compressedSliceInput.length()); // see comments above for fixedMemoryUsage\n+        fixedMemoryUsage.setBytes(compressedSliceInput.getRetainedSize()); // see comments above for fixedMemoryUsage\n \n         buffer = null;\n         bufferMemoryUsage.setBytes(0);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 70,
        "bugNodeStartChar": 3076,
        "bugNodeLength": 19,
        "fixLineNum": 70,
        "fixNodeStartChar": 3076,
        "fixNodeLength": 28,
        "sourceBeforeFix": "sliceInput.length()",
        "sourceAfterFix": "sliceInput.getRetainedSize()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "44fb6541bca9101e1144c25fc5561ebf8b06dfa0",
        "fixCommitParentSHA1": "9c3419568aac35228116cb63b1a5ae383a9fb53e",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java\nindex 908c1f8..289b3bc 100644\n--- a/src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/grizzly/GrizzlyAsyncHttpProvider.java\n@@ -522,9 +522,9 @@\n         int port = p;\n         if (port == -1) {\n             final String protocol = uri.getScheme().toLowerCase();\n-            if (\"http\".equals(protocol)) {\n+            if (\"http\".equals(protocol) || \"ws\".equals(protocol)) {\n                 port = 80;\n-            } else if (\"https\".equals(protocol)) {\n+            } else if (\"https\".equals(protocol) || \"wss\".equals(protocol)) {\n                 port = 443;\n             } else {\n                 throw new IllegalArgumentException(\"Unknown protocol: \" + protocol);\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 527,
        "bugNodeStartChar": 19954,
        "bugNodeLength": 24,
        "fixLineNum": 527,
        "fixNodeStartChar": 19954,
        "fixNodeLength": 50,
        "sourceBeforeFix": "\"https\".equals(protocol)",
        "sourceAfterFix": "\"https\".equals(protocol) || \"wss\".equals(protocol)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "4be7f3630491ebbb716abb50233b7b453c39eb53",
        "fixCommitParentSHA1": "b7df19acc0d036c045da3ee00f5fae8ff6b7db29",
        "bugFilePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\nindex 3ed3a24..382ed68 100644\n--- a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n+++ b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n@@ -61,15 +61,15 @@\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName) throws Exception {\n-        return createMessageConsumer(session, destinationName, null, false, null, true);\n+        return createMessageConsumer(session, destinationName, null, false, null);\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, false, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, false, null);\n     }\n \n     public static MessageConsumer createTopicConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, true, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, true, null);\n     }\n     \n     public static MessageConsumer createTemporaryMessageConsumer(\n@@ -88,7 +88,8 @@\n             String messageSelector, \n             boolean topic, \n             String durableSubscriptionId) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, true);\n+        // noLocal is default false accordingly to JMS spec\n+        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, false);\n     }\n     \n     public static MessageConsumer createMessageConsumer(\n",
        "projectName": "apache.camel",
        "bugLineNum": 64,
        "bugNodeStartChar": 2264,
        "bugNodeLength": 72,
        "fixLineNum": 64,
        "fixNodeStartChar": 2264,
        "fixNodeLength": 66,
        "sourceBeforeFix": "createMessageConsumer(session,destinationName,null,false,null,true)",
        "sourceAfterFix": "createMessageConsumer(session,destinationName,null,false,null)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0a5f26324cfe4eb39eb48947f11364ec39221fa6",
        "fixCommitParentSHA1": "f1a81618fdd6318df5edded64fbb07e085e10853",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\nindex 3fab7fb..a0b3b54 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\n@@ -104,7 +104,7 @@\n     CallRunner task = createMockTask();\n     task.setStatus(new MonitoredRPCHandlerImpl());\n     scheduler.dispatch(task);\n-    verify(task, timeout(1000)).run();\n+    verify(task, timeout(10000)).run();\n     scheduler.stop();\n   }\n \n@@ -218,7 +218,7 @@\n       scheduler.dispatch(task);\n     }\n     for (CallRunner task : tasks) {\n-      verify(task, timeout(1000)).run();\n+      verify(task, timeout(10000)).run();\n     }\n     scheduler.stop();\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 221,
        "bugNodeStartChar": 8107,
        "bugNodeLength": 13,
        "fixLineNum": 221,
        "fixNodeStartChar": 8107,
        "fixNodeLength": 14,
        "sourceBeforeFix": "timeout(1000)",
        "sourceAfterFix": "timeout(10000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 264,
        "bugNodeStartChar": 7534,
        "bugNodeLength": 53,
        "fixLineNum": 264,
        "fixNodeStartChar": 7534,
        "fixNodeLength": 50,
        "sourceBeforeFix": "GL.glGenTexturesEXT(n,toBuffer(textures,offset),0)",
        "sourceAfterFix": "GL.glGenTextures(n,toBuffer(textures,offset),0)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
        "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 38,
        "bugNodeStartChar": 1231,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1231,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getServletPath()",
        "sourceAfterFix": "request.getPathInfo()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "7eb33f6ead2bdf1a1e8bcf1c1c708781955561c5",
        "fixCommitParentSHA1": "5d12dec5b8867a15e196a049bc378865440bbbca",
        "bugFilePath": "metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java",
        "fixPatch": "diff --git a/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java b/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\nindex c8d946c..d66931b 100644\n--- a/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\n+++ b/metrics-sigar/src/main/java/com/yammer/metrics/sigar/CpuMetrics.java\n@@ -148,7 +148,7 @@\n     private CpuInfo cpuInfo() {\n         try {\n             CpuInfo[] infos = sigar.getCpuInfoList();\n-            if (infos == null | infos.length == 0) {\n+            if (infos == null || infos.length == 0) {\n                 return null;\n             }\n             return infos[0];\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 151,
        "bugNodeStartChar": 4637,
        "bugNodeLength": 33,
        "fixLineNum": 151,
        "fixNodeStartChar": 4637,
        "fixNodeLength": 34,
        "sourceBeforeFix": "infos == null | infos.length == 0",
        "sourceAfterFix": "infos == null || infos.length == 0"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "adbc8e2988688b80d6acf089c9ae7662ef1dca34",
        "fixCommitParentSHA1": "114a51685d143030d19bcc8f4f16c443070d6e86",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapIssueTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapIssueTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapIssueTest.java\nindex b0acefc..3326c3e 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapIssueTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapIssueTest.java\n@@ -87,7 +87,7 @@\n                 assertEquals(\"there should be only one registration\", 1, regs1.size());\n                 assertEquals(\"there should be only one registration\", 1, regs2.size());\n             }\n-        }, 10);\n+        });\n     }\n \n     @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 81,
        "bugNodeStartChar": 3051,
        "bugNodeLength": 556,
        "fixLineNum": 81,
        "fixNodeStartChar": 3051,
        "fixNodeLength": 552,
        "sourceBeforeFix": "assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals(\"there should be only one registration\",1,regs1.size());     assertEquals(\"there should be only one registration\",1,regs2.size());   } } ,10)",
        "sourceAfterFix": "assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals(\"there should be only one registration\",1,regs1.size());     assertEquals(\"there should be only one registration\",1,regs2.size());   } } )"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cf66836208a0532253d602721b3279db0b3e457d",
        "fixCommitParentSHA1": "c2ef444d97e9948cfc8425a11ea2f0434c3f16a0",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java b/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\nindex b9c26af..4546714 100644\n--- a/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/management/operation/UpdateMapConfigOperation.java\n@@ -52,7 +52,7 @@\n         newConfig.setEvictionPolicy(mapConfig.getEvictionPolicy());\n         newConfig.setEvictionPercentage(mapConfig.getEvictionPercentage());\n         newConfig.setReadBackupData(mapConfig.isReadBackupData());\n-        newConfig.setBackupCount(mapConfig.getTotalBackupCount());\n+        newConfig.setBackupCount(mapConfig.getBackupCount());\n         newConfig.setAsyncBackupCount(mapConfig.getAsyncBackupCount());\n         newConfig.setMaxSizeConfig(mapConfig.getMaxSizeConfig());\n         service.getMapContainer(mapName).setMapConfig(newConfig.getAsReadOnly());\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 55,
        "bugNodeStartChar": 1954,
        "bugNodeLength": 31,
        "fixLineNum": 55,
        "fixNodeStartChar": 1954,
        "fixNodeLength": 26,
        "sourceBeforeFix": "mapConfig.getTotalBackupCount()",
        "sourceAfterFix": "mapConfig.getBackupCount()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3d80e65129d23b622f3d926eb9b9273cc35757b8",
        "fixCommitParentSHA1": "c896f44305e86e20ceb3b8d5929bb371cd2304d0",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java b/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java\nindex 459df76..860d2cd7 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/mock/MockEndpointTest.java\n@@ -161,10 +161,10 @@\n         });\n \n         try {\n-            resultEndpoint.assertIsNotSatisfied();\n+            resultEndpoint.assertIsSatisfied();\n             fail(\"Should fail\");\n         } catch (AssertionError e) {\n-            assertEquals(\"mock://result Expected 2 properties with key[bar], received 1 properties. Expected property values: [456]\", e.getMessage());\n+            assertEquals(\"mock://result Expected 2 properties with key[foo], received 1 properties. Expected property values: [456]\", e.getMessage());\n         }\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 164,
        "bugNodeStartChar": 6022,
        "bugNodeLength": 37,
        "fixLineNum": 164,
        "fixNodeStartChar": 6022,
        "fixNodeLength": 34,
        "sourceBeforeFix": "resultEndpoint.assertIsNotSatisfied()",
        "sourceAfterFix": "resultEndpoint.assertIsSatisfied()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "guava/src/com/google/common/graph/UndirectedGraphConnections.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/graph/UndirectedGraphConnections.java b/guava/src/com/google/common/graph/UndirectedGraphConnections.java\nindex 9c5187e..bb5ed13 100644\n--- a/guava/src/com/google/common/graph/UndirectedGraphConnections.java\n+++ b/guava/src/com/google/common/graph/UndirectedGraphConnections.java\n@@ -65,18 +65,18 @@\n   }\n \n   @Override\n-  public V value(Object node) {\n+  public V value(N node) {\n     return adjacentNodeValues.get(node);\n   }\n \n   @Override\n-  public void removePredecessor(Object node) {\n+  public void removePredecessor(N node) {\n     @SuppressWarnings(\"unused\")\n     V unused = removeSuccessor(node);\n   }\n \n   @Override\n-  public V removeSuccessor(Object node) {\n+  public V removeSuccessor(N node) {\n     return adjacentNodeValues.remove(node);\n   }\n \n",
        "projectName": "google.guava",
        "bugLineNum": 73,
        "bugNodeStartChar": 2202,
        "bugNodeLength": 11,
        "fixLineNum": 73,
        "fixNodeStartChar": 2202,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object node",
        "sourceAfterFix": "N node"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "06ed1d48da4a57dc87cf3c1215bfe23bce4e78d8",
        "fixCommitParentSHA1": "07d477a7107ce6a50f98f3f6cc57d46c106a21f0",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java\nindex 8c2d48c..470134d 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java\n@@ -139,8 +139,7 @@\n     @Test\n     public void testGenericEndsTheLine() throws Exception {\n         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;\n-        verify(checkConfig, getNonCompilablePath(\"InputGenericWhitespaceEndsTheLine.java\"),\n-                expected);\n+        verify(checkConfig, getPath(\"InputGenericWhitespaceEndsTheLine.java\"), expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 142,
        "bugNodeStartChar": 6220,
        "bugNodeLength": 62,
        "fixLineNum": 142,
        "fixNodeStartChar": 6220,
        "fixNodeLength": 49,
        "sourceBeforeFix": "getNonCompilablePath(\"InputGenericWhitespaceEndsTheLine.java\")",
        "sourceAfterFix": "getPath(\"InputGenericWhitespaceEndsTheLine.java\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "fbc26e589318e29e5971fe526c114cb66e2fea5f",
        "fixCommitParentSHA1": "f4b969328cb5d47fc00f856c123363bc061afe33",
        "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java",
        "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\nindex cfa4598..a689af9 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/Unnest.java\n@@ -80,7 +80,7 @@\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash(expressions);\n+        return Objects.hash(expressions, withOrdinality);\n     }\n \n     @Override\n@@ -93,6 +93,6 @@\n             return false;\n         }\n         Unnest other = (Unnest) obj;\n-        return Objects.equals(this.expressions, other.expressions);\n+        return Objects.equals(expressions, other.expressions) && withOrdinality == other.withOrdinality;\n     }\n }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 83,
        "bugNodeStartChar": 2314,
        "bugNodeLength": 25,
        "fixLineNum": 83,
        "fixNodeStartChar": 2314,
        "fixNodeLength": 41,
        "sourceBeforeFix": "Objects.hash(expressions)",
        "sourceAfterFix": "Objects.hash(expressions,withOrdinality)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b302cf93edee0e2ab3c9998f380ede8e8ea7727",
        "fixCommitParentSHA1": "aa7627455539a95dd6bd4e8e20b2b98ea9ffb1ab",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\nindex 6e25f77..05169f6 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n@@ -995,12 +995,12 @@\n      * {@inheritDoc}\n      */\n     @Override\n-    public AtmosphereResource addAtmosphereResource(AtmosphereResource r) {\n+    public Broadcaster addAtmosphereResource(AtmosphereResource r) {\n \n         try {\n             if (destroyed.get()) {\n                 logger.debug(DESTROYED, getID(), \"addAtmosphereResource(AtmosphereResource<?, ?> r\");\n-                return r;\n+                return this;\n             }\n \n             start();\n@@ -1027,7 +1027,7 @@\n             }\n \n             if (resources.contains(r)) {\n-                return r;\n+                return this;\n             }\n \n             // We need to synchronize here to let the push method cache message.\n@@ -1051,7 +1051,7 @@\n                 }\n             }\n         }\n-        return r;\n+        return this;\n     }\n \n     private boolean isAtmosphereResourceValid(AtmosphereResource r) {\n@@ -1064,15 +1064,15 @@\n      * {@inheritDoc}\n      */\n     @Override\n-    public AtmosphereResource removeAtmosphereResource(AtmosphereResource r) {\n+    public Broadcaster removeAtmosphereResource(AtmosphereResource r) {\n \n         if (destroyed.get()) {\n             logger.debug(DESTROYED, getID(), \"removeAtmosphereResource(AtmosphereResource r)\");\n-            return r;\n+            return this;\n         }\n \n         if (!resources.contains(r)) {\n-            return null;\n+            return this;\n         }\n         // Prevent two thread to mix operation\n         boolean removed = resources.remove(r);\n@@ -1089,7 +1089,7 @@\n                 }\n             }\n         }\n-        return r;\n+        return this;\n     }\n \n     private void notifyIdleListener() {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 1071,
        "bugNodeStartChar": 40460,
        "bugNodeLength": 1,
        "fixLineNum": 1071,
        "fixNodeStartChar": 40460,
        "fixNodeLength": 4,
        "sourceBeforeFix": "return r; ",
        "sourceAfterFix": "return this; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "19558f8d98358fece627fda336050054a1fce211",
        "fixCommitParentSHA1": "fcc6ad1ae89a377ff91d93c61d3cdc4932fdacb9",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/container/version/Jetty8WebSocket.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty8WebSocket.java b/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty8WebSocket.java\nindex fce20a0..8182996 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty8WebSocket.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty8WebSocket.java\n@@ -51,7 +51,7 @@\n             logger.debug(\"The WebSocket handshake succeeded but the dispatched URI failed {}:{}. \" +\n                     \"The WebSocket connection is still open and client can continue sending messages.\", message, errorCode);\n         } else {\n-            logger.debug(\"{} {}\", errorCode, message);\n+            logger.warn(\"{} {}\", errorCode, message);\n         }\n     }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 54,
        "bugNodeStartChar": 1905,
        "bugNodeLength": 41,
        "fixLineNum": 54,
        "fixNodeStartChar": 1905,
        "fixNodeLength": 40,
        "sourceBeforeFix": "logger.debug(\"{} {}\",errorCode,message)",
        "sourceAfterFix": "logger.warn(\"{} {}\",errorCode,message)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\nindex d655239..aa1bc16 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1944,
        "bugNodeStartChar": 86832,
        "bugNodeLength": 22,
        "fixLineNum": 1944,
        "fixNodeStartChar": 86832,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(561)",
        "sourceAfterFix": "new StringBuilder(560)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2d0ea883af4aa38443d0a72b925a17b71bfd0f3b",
        "fixCommitParentSHA1": "6047e6e88cbc12d48ed3c20f0ce1e5e37624a585",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\nindex 5588505..8bb2b31 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/test/fork/ForkRunner.java\n@@ -328,7 +328,7 @@\n                 String trace = traceInText.get(i);\n                 String[] tokens = trace.split(\",\");\n \n-                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.valueOf(tokens[3]));\n+                stackTrace[i] = new StackTraceElement(tokens[0], tokens[1], tokens[2], Integer.parseInt(tokens[3]));\n             }\n \n             return new ChildProcessException(exceptionClass + \": \" + message, stackTrace);\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 331,
        "bugNodeStartChar": 12651,
        "bugNodeLength": 26,
        "fixLineNum": 331,
        "fixNodeStartChar": 12651,
        "fixNodeLength": 27,
        "sourceBeforeFix": "Integer.valueOf(tokens[3])",
        "sourceAfterFix": "Integer.parseInt(tokens[3])"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "deabd5b0187c1825c686c7f6a593db918bd043dc",
        "fixCommitParentSHA1": "773f6cef58630ce1ef99105030ceaffb40330c33",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\nindex e78b257..1b5e9fa 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/IdleResourceInterceptor.java\n@@ -87,7 +87,7 @@\n             AtmosphereRequest req = AtmosphereResourceImpl.class.cast(r).getRequest(false);\n             try {\n                 if (req.getAttribute(MAX_INACTIVE) == null) {\n-                    logger.error(\"Invalid state {}\", r);\n+                    logger.warn(\"Invalid state {}\", r);\n                     r.removeFromAllBroadcasters();\n                     config.resourcesFactory().unRegisterUuidForFindCandidate(r);\n                     continue;\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 90,
        "bugNodeStartChar": 3271,
        "bugNodeLength": 35,
        "fixLineNum": 90,
        "fixNodeStartChar": 3271,
        "fixNodeLength": 34,
        "sourceBeforeFix": "logger.error(\"Invalid state {}\",r)",
        "sourceAfterFix": "logger.warn(\"Invalid state {}\",r)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "ba402c8b87b5439ba3b66caa1bfadb088b53f13b",
        "fixCommitParentSHA1": "5948a9b944b26dc5b8d7cb6b9af0808cdc8ec4cd",
        "bugFilePath": "app/controllers/api/SearchApiController.java",
        "fixPatch": "diff --git a/app/controllers/api/SearchApiController.java b/app/controllers/api/SearchApiController.java\nindex 93cfe7d..c1384f8 100644\n--- a/app/controllers/api/SearchApiController.java\n+++ b/app/controllers/api/SearchApiController.java\n@@ -258,7 +258,7 @@\n         DateTime from;\n         if (allQuery) {\n             String firstTimestamp = histogramResults.entrySet().iterator().next().getKey();\n-            from = new DateTime(Long.parseLong(firstTimestamp) * 1000);\n+            from = new DateTime(Long.parseLong(firstTimestamp) * 1000, DateTimeZone.UTC);\n         } else {\n             from = DateTime.parse(histogram.getHistogramBoundaries().getFrom());\n         }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 261,
        "bugNodeStartChar": 10709,
        "bugNodeLength": 51,
        "fixLineNum": 261,
        "fixNodeStartChar": 10709,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new DateTime(Long.parseLong(firstTimestamp) * 1000)",
        "sourceAfterFix": "new DateTime(Long.parseLong(firstTimestamp) * 1000,DateTimeZone.UTC)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3c1e75d211f1a45d0e0e8042fd753b38c8c5d9f",
        "fixCommitParentSHA1": "e5d67bf37fca6a415455bc0cc75c8e1efe636cee",
        "bugFilePath": "googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java",
        "fixPatch": "diff --git a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\nindex b405d1a..86ab94e 100644\n--- a/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n+++ b/googlebigtable/src/main/java/com/yahoo/ycsb/db/GoogleBigtableClient.java\n@@ -74,8 +74,8 @@\n   private static final String ASYNC_MAX_INFLIGHT_RPCS = \"mutatorMaxInflightRPCs\";\n   private static final String CLIENT_SIDE_BUFFERING = \"clientbuffering\";\n   \n-  /** Must be an object for synchronization and tracking running thread counts. */ \n-  private static Integer threadCount = 0;\n+  /** Tracks running thread counts so we know when to close the session. */ \n+  private static int threadCount = 0;\n   \n   /** This will load the hbase-site.xml config file and/or store CLI options. */\n   private static final Configuration CONFIG = HBaseConfiguration.create();\n@@ -125,7 +125,7 @@\n     System.err.println(\"Running Google Bigtable with Proto API\" +\n          (clientSideBuffering ? \" and client side buffering.\" : \".\"));\n     \n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       ++threadCount;\n       if (session == null) {\n         try {\n@@ -176,7 +176,7 @@\n         throw new DBException(e);\n       }\n     }\n-    synchronized (threadCount) {\n+    synchronized (CONFIG) {\n       --threadCount;\n       if (threadCount <= 0) {\n         try {\n",
        "projectName": "brianfrankcooper.YCSB",
        "bugLineNum": 128,
        "bugNodeStartChar": 5003,
        "bugNodeLength": 1166,
        "fixLineNum": 128,
        "fixNodeStartChar": 5003,
        "fixNodeLength": 1161,
        "sourceBeforeFix": "synchronized (threadCount) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } ",
        "sourceAfterFix": "synchronized (CONFIG) {   ++threadCount;   if (session == null) {     try {       options=BigtableOptionsFactory.fromConfiguration(CONFIG);       session=new BigtableSession(options);       client=session.getDataClient();     }  catch (    IOException e) {       throw new DBException(\"Error loading options from config: \",e);     }   }  else {     client=session.getDataClient();   }   if (clientSideBuffering) {     heapSizeManager=new HeapSizeManager(Long.parseLong(getProperties().getProperty(ASYNC_MUTATOR_MAX_MEMORY,Long.toString(AsyncExecutor.ASYNC_MUTATOR_MAX_MEMORY_DEFAULT))),Integer.parseInt(getProperties().getProperty(ASYNC_MAX_INFLIGHT_RPCS,Integer.toString(AsyncExecutor.MAX_INFLIGHT_RPCS_DEFAULT))));     asyncExecutor=new AsyncExecutor(client,heapSizeManager);   } } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "964ff7c2dcd8169005995e40a0269124f89d90bc",
        "fixCommitParentSHA1": "e9f0b1d2aa886299c45aaf6a42cfa98a89dc6489",
        "bugFilePath": "modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java",
        "fixPatch": "diff --git a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\nindex 82d3915..a319ea8 100644\n--- a/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n+++ b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java\n@@ -489,7 +489,7 @@\n             io.swagger.models.auth.ApiKeyAuthDefinition apiKeyAuthDefinition = new io.swagger.models.auth.ApiKeyAuthDefinition();\n \n             apiKeyAuthDefinition.setName(apiKeyAuthConfig.name());\n-            apiKeyAuthDefinition.setIn(In.valueOf(apiKeyAuthConfig.in().toValue()));\n+            apiKeyAuthDefinition.setIn(In.forValue(apiKeyAuthConfig.in().toValue()));\n             apiKeyAuthDefinition.setDescription(apiKeyAuthConfig.description());\n \n             swagger.addSecurityDefinition(apiKeyAuthConfig.key(), apiKeyAuthDefinition);\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 492,
        "bugNodeStartChar": 22055,
        "bugNodeLength": 43,
        "fixLineNum": 492,
        "fixNodeStartChar": 22055,
        "fixNodeLength": 44,
        "sourceBeforeFix": "In.valueOf(apiKeyAuthConfig.in().toValue())",
        "sourceAfterFix": "In.forValue(apiKeyAuthConfig.in().toValue())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1f0ad1b1b10c4fe0bd0e721a813419d8de092b7a",
        "fixCommitParentSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8",
        "bugFilePath": "gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java",
        "fixPatch": "diff --git a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\nindex bd06ee4..6852610 100644\n--- a/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n+++ b/gdx-backend-desktop/src/com/badlogic/gdx/backends/desktop/JoglGL10.java\n@@ -46,21 +46,21 @@\n \tpublic JoglGL10( javax.media.opengl.GL gl )\r\n \t{\r\n \t\tthis.gl = gl;\r\n-\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\t\t\r\n+\t\tByteBuffer buffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\t\t\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tcolorBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 3 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 3 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tnormalBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n-\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\tbuffer.order(ByteOrder.nativeOrder());\r\n \t\tvertexBuffer = buffer.asFloatBuffer();\r\n \t\t\r\n \t\tfor( int i = 0; i < texCoordBuffer.length; i++ )\r\n \t\t{\r\n-\t\t\tbuffer = ByteBuffer.allocateDirect( 200000 * 4 * 4 );\r\n+\t\t\tbuffer = ByteBuffer.allocateDirect( 20000 * 4 * 4 );\r\n \t\t\tbuffer.order(ByteOrder.nativeOrder());\t\t\r\n \t\t\ttexCoordBuffer[i] = buffer.asFloatBuffer();\r\n \t\t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 63,
        "bugNodeStartChar": 2200,
        "bugNodeLength": 14,
        "fixLineNum": 63,
        "fixNodeStartChar": 2138,
        "fixNodeLength": 13,
        "sourceBeforeFix": "200000 * 4 * 4",
        "sourceAfterFix": "20000 * 4 * 4"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\nindex 509dedf..dec10b8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n@@ -28,61 +28,61 @@\n     @EncodeMethod(id = 1)\n     void offer(String name, Data value, long timeoutMillis);\n \n-    @EncodeMethod(id = 1)\n+    @EncodeMethod(id = 2)\n     void put(String name, Data value);\n \n-    @EncodeMethod(id = 2)\n+    @EncodeMethod(id = 3)\n     void size(String name);\n \n-    @EncodeMethod(id = 3)\n+    @EncodeMethod(id = 4)\n     void remove(String name, Data value);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 5)\n     void poll(String name, long timeoutMillis);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 6)\n     void take(String name);\n \n-    @EncodeMethod(id = 5)\n+    @EncodeMethod(id = 7)\n     void peek(String name);\n \n-    @EncodeMethod(id = 6)\n+    @EncodeMethod(id = 8)\n     void iterator(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 9)\n     void drainTo(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 10)\n     void drainToMaxSize(String name, int maxSize);\n \n-    @EncodeMethod(id = 8)\n+    @EncodeMethod(id = 11)\n     void contains(String name, Data value);\n \n-    @EncodeMethod(id = 9)\n+    @EncodeMethod(id = 12)\n     void containsAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 10)\n+    @EncodeMethod(id = 13)\n     void compareAndRemoveAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 11)\n+    @EncodeMethod(id = 14)\n     void compareAndRetainAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 12)\n+    @EncodeMethod(id = 15)\n     void clear(String name);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 16)\n     void addAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 17)\n     void addListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 18)\n     void removeListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 19)\n     void remainingCapacity(String name);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 20)\n     void isEmpty(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 67,
        "bugNodeStartChar": 1909,
        "bugNodeLength": 7,
        "fixLineNum": 67,
        "fixNodeStartChar": 1909,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=11",
        "sourceAfterFix": "id=14"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40ae31b260a4fe2205b21cc5c446ae9428faac06",
        "fixCommitParentSHA1": "aa95d0932957ba0142fc0d12d28a8d39568571e5",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/parsing/HostXml.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/parsing/HostXml.java b/controller/src/main/java/org/jboss/as/controller/parsing/HostXml.java\nindex 73c4621..8bbfe97 100644\n--- a/controller/src/main/java/org/jboss/as/controller/parsing/HostXml.java\n+++ b/controller/src/main/java/org/jboss/as/controller/parsing/HostXml.java\n@@ -517,10 +517,10 @@\n \n     private void writeDomainController(final XMLExtendedStreamWriter writer, final ModelNode modelNode) throws XMLStreamException {\n         writer.writeStartElement(Element.DOMAIN_CONTROLLER.getLocalName());\n-        if (modelNode.has(LOCAL)) {\n+        if (modelNode.hasDefined(LOCAL)) {\n             writer.writeEmptyElement(Element.LOCAL.getLocalName());\n         }\n-        if (modelNode.has(REMOTE)) {\n+        else if (modelNode.hasDefined(REMOTE)) {\n             writer.writeStartElement(Element.REMOTE.getLocalName());\n             final ModelNode remote = modelNode.get(REMOTE);\n             if (remote.has(HOST)) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 520,
        "bugNodeStartChar": 22837,
        "bugNodeLength": 20,
        "fixLineNum": 520,
        "fixNodeStartChar": 22837,
        "fixNodeLength": 27,
        "sourceBeforeFix": "modelNode.has(LOCAL)",
        "sourceAfterFix": "modelNode.hasDefined(LOCAL)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "810e352f3d599257e1b36b8118b5b4aabf12d988",
        "fixCommitParentSHA1": "fbc27c08421bb045bdcfc91ea0e6bde8ee781f33",
        "bugFilePath": "src/main/java/org/bukkit/material/Lever.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/material/Lever.java b/src/main/java/org/bukkit/material/Lever.java\nindex 737d16c..5d6e7f4 100644\n--- a/src/main/java/org/bukkit/material/Lever.java\n+++ b/src/main/java/org/bukkit/material/Lever.java\n@@ -40,7 +40,7 @@\n      * @return BlockFace attached to\n      */\n     public BlockFace getAttachedFace() {\n-        byte data = (byte) (getData() ^ 0x8);\n+        byte data = (byte) (getData() ^ 0x7);\n \n         switch (data) {\n             case 0x1:\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 43,
        "bugNodeStartChar": 935,
        "bugNodeLength": 15,
        "fixLineNum": 43,
        "fixNodeStartChar": 935,
        "fixNodeLength": 15,
        "sourceBeforeFix": "getData() ^ 0x8",
        "sourceAfterFix": "getData() ^ 0x7"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d14dbb24b052e208abd5a407e3f5fb0df46ba828",
        "fixCommitParentSHA1": "956e9a18218b94ef2016b081cfc9029c9d27889e",
        "bugFilePath": "src/api/org/openmrs/api/impl/PersonServiceImpl.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/api/impl/PersonServiceImpl.java b/src/api/org/openmrs/api/impl/PersonServiceImpl.java\nindex 1ffc8f8..893bfb2 100644\n--- a/src/api/org/openmrs/api/impl/PersonServiceImpl.java\n+++ b/src/api/org/openmrs/api/impl/PersonServiceImpl.java\n@@ -793,7 +793,7 @@\n \t\t\t}\r\n \t\t\telse {\r\n \t\t\t\tfirstName = names[1];\r\n-\t\t\t\tlastName = names[2];\r\n+\t\t\t\tlastName = names[0];\r\n \t\t\t}\r\n \t\t}\r\n \t\telse if (name.contains(\" \")) {\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 796,
        "bugNodeStartChar": 25887,
        "bugNodeLength": 8,
        "fixLineNum": 796,
        "fixNodeStartChar": 25092,
        "fixNodeLength": 8,
        "sourceBeforeFix": "names[2]",
        "sourceAfterFix": "names[0]"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "165540532a351f8c2c249f0aad2b1827441aa46e",
        "fixCommitParentSHA1": "f4a644df54da667a2052e6a57d5ce552ed2e48af",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\nindex 0f1b40d..1630216 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/aggregation/TestStateCompiler.java\n@@ -255,7 +255,7 @@\n                 field.setAccessible(true);\n                 if (type == BlockBigArray.class || type == BooleanBigArray.class || type == SliceBigArray.class ||\n                         type == ByteBigArray.class || type == DoubleBigArray.class || type == LongBigArray.class || type == IntBigArray.class) {\n-                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(type, \"sizeOf\");\n                     retainedSize += (long) sizeOf.invokeWithArguments(field.get(state));\n                 }\n             }\n@@ -283,7 +283,7 @@\n                         continue;\n                     }\n                     bigArrayField.setAccessible(true);\n-                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\", null);\n+                    MethodHandle sizeOf = Reflection.methodHandle(bigArrayField.getType(), \"sizeOf\");\n                     overhead += (long) sizeOf.invokeWithArguments(bigArrayField.get(stateField.get(state)));\n                 }\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 286,
        "bugNodeStartChar": 13718,
        "bugNodeLength": 64,
        "fixLineNum": 286,
        "fixNodeStartChar": 13718,
        "fixNodeLength": 58,
        "sourceBeforeFix": "Reflection.methodHandle(bigArrayField.getType(),\"sizeOf\",null)",
        "sourceAfterFix": "Reflection.methodHandle(bigArrayField.getType(),\"sizeOf\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "4aff5e0b2a9a8ba3b5b151efe57c5ef574c04c82",
        "fixCommitParentSHA1": "fbdc8f67cfd7f659e599283f8cf69c3c9ec47c54",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\nindex a6917cc..b661e6a 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n@@ -537,7 +537,7 @@\n \t\t\t// If we have all the data, set stageAdvanced to true to tell the\n \t\t\t// system\n \t\t\t// that we're starting again, then loop around again.\n-\t\t\tif (sendMessage() == false) {\n+\t\t\tif (currentStage != NodeStage.DONE && sendMessage() == false) {\n \t\t\t\t// Move on to the next stage\n \t\t\t\tcurrentStage = currentStage.getNextStage();\n \t\t\t\tstageAdvanced = true;\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 540,
        "bugNodeStartChar": 23254,
        "bugNodeLength": 22,
        "fixLineNum": 540,
        "fixNodeStartChar": 23254,
        "fixNodeLength": 56,
        "sourceBeforeFix": "sendMessage() == false",
        "sourceAfterFix": "currentStage != NodeStage.DONE && sendMessage() == false"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416",
        "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 141,
        "bugNodeStartChar": 5956,
        "bugNodeLength": 19,
        "fixLineNum": 141,
        "fixNodeStartChar": 5816,
        "fixNodeLength": 18,
        "sourceBeforeFix": "values[i] == values",
        "sourceAfterFix": "values[i] == value"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5d6b0ad639f597e0245d7b4591f383f4f12c23d7",
        "fixCommitParentSHA1": "2d625eb2f7ea6dc46fc4bb9fd35c94f50c944481",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java b/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\nindex b427842..00b353a 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/impl/operationservice/impl/IsStillRunningService.java\n@@ -81,12 +81,12 @@\n                     invocation.nodeEngine, invocation.serviceName, isStillExecuting,\n                     invocation.getTarget(), 0, 0, IS_EXECUTING_CALL_TIMEOUT, null, true);\n             Future f = inv.invoke();\n-            invocation.logger.warning(\"Asking if operation execution has been started: \" + invocation);\n+            invocation.logger.finest(\"Asking if operation execution has been started: \" + invocation);\n             executing = (Boolean) invocation.nodeEngine.toObject(f.get(IS_EXECUTING_CALL_TIMEOUT, TimeUnit.MILLISECONDS));\n         } catch (Exception e) {\n             invocation.logger.warning(\"While asking 'is-executing': \" + invocation, e);\n         }\n-        invocation.logger.warning(\"'is-executing': \" + executing + \" -> \" + invocation);\n+        invocation.logger.finest(\"'is-executing': \" + executing + \" -> \" + invocation);\n         return executing;\n     }\n \n@@ -224,7 +224,7 @@\n         @Override\n         public void onResponse(Object response) {\n             boolean executing = Boolean.TRUE.equals(response);\n-            invocation.logger.warning(\"'is-executing': \" + executing + \" -> \" + invocation);\n+            invocation.logger.finest(\"'is-executing': \" + executing + \" -> \" + invocation);\n             if (!executing) {\n                 setOperationTimeout();\n             }\n@@ -264,7 +264,7 @@\n                     invocation.nodeEngine, invocation.serviceName, isStillRunningOperation,\n                     invocation.getTarget(), 0, 0, IS_EXECUTING_CALL_TIMEOUT, callback, true);\n \n-            invocation.logger.warning(\"Asking if operation execution has been started: \" + invocation);\n+            invocation.logger.finest(\"Asking if operation execution has been started: \" + invocation);\n             inv.invoke();\n         }\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 227,
        "bugNodeStartChar": 10008,
        "bugNodeLength": 79,
        "fixLineNum": 227,
        "fixNodeStartChar": 10008,
        "fixNodeLength": 78,
        "sourceBeforeFix": "invocation.logger.warning(\"'is-executing': \" + executing + \" -> \"+ invocation)",
        "sourceAfterFix": "invocation.logger.finest(\"'is-executing': \" + executing + \" -> \"+ invocation)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "62e7eb06d62b50ba6a03c25070c6ee1164c0962f",
        "fixCommitParentSHA1": "08d401c1aa6396b9bb36be6474dda8e9a3183f79",
        "bugFilePath": "components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java",
        "fixPatch": "diff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\nindex d394b9f..69863ae 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\n@@ -1608,7 +1608,7 @@\n      * creation\n      */\n     protected ConnectionFactory createListenerConnectionFactory() {\n-        return getConnectionFactory();\n+        return getOrCreateConnectionFactory();\n     }\n \n     /**\n@@ -1616,7 +1616,7 @@\n      * creation\n      */\n     protected ConnectionFactory createTemplateConnectionFactory() {\n-        return getConnectionFactory();\n+        return getOrCreateConnectionFactory();\n     }\n \n     /**\n",
        "projectName": "apache.camel",
        "bugLineNum": 1611,
        "bugNodeStartChar": 84523,
        "bugNodeLength": 22,
        "fixLineNum": 1611,
        "fixNodeStartChar": 84523,
        "fixNodeLength": 30,
        "sourceBeforeFix": "getConnectionFactory()",
        "sourceAfterFix": "getOrCreateConnectionFactory()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "7109f6f55968c830c5f43ff798e106ef2f14c71c",
        "fixCommitParentSHA1": "fffd5a36c95b9e576a648c352eeb4c13c329ffb4",
        "bugFilePath": "components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java",
        "fixPatch": "diff --git a/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java b/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\nindex ce063b2..9b7152d 100644\n--- a/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\n+++ b/components/camel-smpp/src/test/java/org/apache/camel/component/smpp/SmppProducerTest.java\n@@ -184,7 +184,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_DEFAULT)),\n                 eq((byte) 0),\n@@ -231,7 +231,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_DEFAULT)),\n                 eq((byte) 0),\n@@ -295,7 +295,7 @@\n                 eq((byte) 0),\n                 eq(new GeneralDataCoding(\n                         false,\n-                        false,\n+                        true,\n                         MessageClass.CLASS1,\n                         Alphabet.ALPHA_8_BIT)),\n                 eq((byte) 0),\n",
        "projectName": "apache.camel",
        "bugLineNum": 296,
        "bugNodeStartChar": 12690,
        "bugNodeLength": 175,
        "fixLineNum": 296,
        "fixNodeStartChar": 12690,
        "fixNodeLength": 174,
        "sourceBeforeFix": "new GeneralDataCoding(false,false,MessageClass.CLASS1,Alphabet.ALPHA_8_BIT)",
        "sourceAfterFix": "new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_8_BIT)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5755cf96d1689e1eda7dd2d7e03f1eff3bf5a074",
        "fixCommitParentSHA1": "ddda7e5bae297e7f3c356a35d29134015262bb49",
        "bugFilePath": "src/main/java/spark/ExceptionHandlerImpl.java",
        "fixPatch": "diff --git a/src/main/java/spark/ExceptionHandlerImpl.java b/src/main/java/spark/ExceptionHandlerImpl.java\nindex 30e1136..d50c68d 100644\n--- a/src/main/java/spark/ExceptionHandlerImpl.java\n+++ b/src/main/java/spark/ExceptionHandlerImpl.java\n@@ -16,18 +16,19 @@\n  */\n package spark;\n \n-public abstract class ExceptionHandlerImpl implements ExceptionHandler {\n+public abstract class ExceptionHandlerImpl<T extends Exception> implements ExceptionHandler<T> {\n+\n     /**\n      * Holds the type of exception that this filter will handle\n      */\n-    protected Class<? extends Exception> exceptionClass;\n+    protected Class<? extends T> exceptionClass;\n \n     /**\n      * Initializes the filter with the provided exception type\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public ExceptionHandlerImpl(Class<? extends Exception> exceptionClass) {\n+    public ExceptionHandlerImpl(Class<T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -36,7 +37,7 @@\n      *\n      * @return Type of exception\n      */\n-    public Class<? extends Exception> exceptionClass() {\n+    public Class<? extends T> exceptionClass() {\n         return this.exceptionClass;\n     }\n \n@@ -45,7 +46,7 @@\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public void exceptionClass(Class<? extends Exception> exceptionClass) {\n+    public void exceptionClass(Class<? extends T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -56,5 +57,5 @@\n      * @param request   The request object providing information about the HTTP request\n      * @param response  The response object providing functionality for modifying the response\n      */\n-    public abstract void handle(Exception exception, Request request, Response response);\n+    public abstract void handle(T exception, Request request, Response response);\n }\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 59,
        "bugNodeStartChar": 1965,
        "bugNodeLength": 19,
        "fixLineNum": 59,
        "fixNodeStartChar": 1965,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Exception exception",
        "sourceAfterFix": "T exception"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1b7db61b0e56c54c771ab34206774a6b5a992430",
        "fixCommitParentSHA1": "76957b67fceb8c237729f486b36def4b2e508004",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\nindex 568c162..4e4cb0f 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n@@ -384,7 +384,7 @@\n \n         if (store != null) {\n             store.deleteAll(keysObject);\n-            toBeRemovedKeys.clear();\n+            toBeRemovedKeys.removeAll(keysToDelete);\n         }\n \n         clearRecordsMap(lockedRecords);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 387,
        "bugNodeStartChar": 14264,
        "bugNodeLength": 23,
        "fixLineNum": 387,
        "fixNodeStartChar": 14264,
        "fixNodeLength": 39,
        "sourceBeforeFix": "toBeRemovedKeys.clear()",
        "sourceAfterFix": "toBeRemovedKeys.removeAll(keysToDelete)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926",
        "fixCommitParentSHA1": "1b31f4d19df1fabc7aaee5837f4d2c3439819495",
        "bugFilePath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
        "fixPatch": "diff --git a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\nindex 7cab2df..86b3322 100644\n--- a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n+++ b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n@@ -353,10 +353,10 @@\n \t * \n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> print() {\n+\tpublic DataStreamSink<OUT> print() {\n \t\tDataStream<OUT> inputStream = this.copy();\n \t\tPrintSinkFunction<OUT> printFunction = new PrintSinkFunction<OUT>();\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, printFunction, null);\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, printFunction, null);\n \n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \n@@ -373,7 +373,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}\n \n@@ -390,7 +390,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}\n \n@@ -408,7 +408,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}\n \n@@ -430,7 +430,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, endTuple);\n \t}\n \n@@ -453,7 +453,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, endTuple);\n \t}\n \n@@ -475,9 +475,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -503,9 +503,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -522,7 +522,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), 1, null);\n \t}\n \n@@ -539,7 +539,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, null);\n \t}\n \n@@ -557,7 +557,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), batchSize, null);\n \t}\n \n@@ -579,7 +579,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, endTuple);\n \t}\n \n@@ -602,7 +602,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}\n@@ -627,9 +627,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple));\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -655,9 +655,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -792,18 +792,18 @@\n \t *            The object containing the sink's invoke function.\n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n+\tpublic DataStreamSink<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(this.copy(), sinkFunction);\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(inputStream, sinkFunction, new FunctionTypeWrapper<OUT, Tuple, OUT>(\n \t\t\t\tsinkFunction, SinkFunction.class, 0, -1, 0));\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n \t\t\tTypeSerializerWrapper<OUT, Tuple, OUT> typeWrapper) {\n-\t\tDataStream<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n+\t\tDataStreamSink<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n \n \t\ttry {\n \t\t\tjobGraphBuilder.addSink(returnStream.getId(), new SinkInvokable<OUT>(sinkFunction),\n",
        "projectName": "apache.flink",
        "bugLineNum": 804,
        "bugNodeStartChar": 30915,
        "bugNodeLength": 15,
        "fixLineNum": 804,
        "fixNodeStartChar": 30915,
        "fixNodeLength": 19,
        "sourceBeforeFix": "DataStream<OUT>",
        "sourceAfterFix": "DataStreamSink<OUT>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ef11886bf2190370a0f3fd287616763826239c48",
        "fixCommitParentSHA1": "ddb113a660630b9be8aaf72a2154a39547ab7dd4",
        "bugFilePath": "src/web/org/openmrs/web/dwr/DWRRelationshipService.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/dwr/DWRRelationshipService.java b/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\nindex 223eb26..c9530fb 100644\n--- a/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\n+++ b/src/web/org/openmrs/web/dwr/DWRRelationshipService.java\n@@ -37,7 +37,7 @@\n \t\trel.setPersonA(personA);\r\n \t\trel.setPersonB(personB);\r\n \t\trel.setRelationshipType(relType);\r\n-\t\tps.createRelationship(rel);\r\n+\t\tps.saveRelationship(rel);\r\n \t}\r\n \t\r\n \tpublic void voidRelationship(Integer relationshipId, String voidReason) {\r\n@@ -50,7 +50,7 @@\n \t\t\r\n \t\tVector<RelationshipListItem> ret = new Vector<RelationshipListItem>();\r\n \t\tList<Relationship> rels = Context.getPersonService()\r\n-\t\t        .getRelationships(Context.getPersonService().getPerson(personId));\r\n+\t\t        .getRelationshipsByPerson(Context.getPersonService().getPerson(personId));\r\n \t\tfor (Relationship rel : rels) {\r\n \t\t\tif (!rel.isVoided()\r\n \t\t\t        && (relationshipTypeId == null || rel.getRelationshipType().getRelationshipTypeId().equals(\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 40,
        "bugNodeStartChar": 1492,
        "bugNodeLength": 26,
        "fixLineNum": 40,
        "fixNodeStartChar": 1453,
        "fixNodeLength": 24,
        "sourceBeforeFix": "ps.createRelationship(rel)",
        "sourceAfterFix": "ps.saveRelationship(rel)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a85bc005400d000cdf9efd1cf791d3e2f0ead12e",
        "fixCommitParentSHA1": "75d90c6f8f237d59dee23d79fd845078e991ed52",
        "bugFilePath": "components/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelCloudServiceCallTest.java",
        "fixPatch": "diff --git a/components/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelCloudServiceCallTest.java b/components/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelCloudServiceCallTest.java\nindex 333561c..d793f3c 100644\n--- a/components/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelCloudServiceCallTest.java\n+++ b/components/camel-spring-cloud/src/test/java/org/apache/camel/spring/cloud/CamelCloudServiceCallTest.java\n@@ -35,7 +35,7 @@\n     classes = {\n         CamelAutoConfiguration.class,\n         CamelCloudAutoConfiguration.class,\n-        CamelCloudServiceCallConfiguration.class\n+        CamelCloudServiceCallRoutesAutoConfiguration.class\n     },\n     properties = {\n         \"camel.cloud.load-balancer.enabled=false\",\n",
        "projectName": "apache.camel",
        "bugLineNum": 38,
        "bugNodeStartChar": 1532,
        "bugNodeLength": 40,
        "fixLineNum": 38,
        "fixNodeStartChar": 1532,
        "fixNodeLength": 50,
        "sourceBeforeFix": "CamelCloudServiceCallConfiguration.class",
        "sourceAfterFix": "CamelCloudServiceCallRoutesAutoConfiguration.class"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1",
        "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 358,
        "bugNodeStartChar": 11565,
        "bugNodeLength": 52,
        "fixLineNum": 358,
        "fixNodeStartChar": 11208,
        "fixNodeLength": 58,
        "sourceBeforeFix": "GL20.glGetActiveAttrib(program,index,256,typeTmp)",
        "sourceAfterFix": "GL20.glGetActiveAttrib(program,index,256,size,typeTmp)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2ccd6714a1039f58ba171438af36ffada86343e1",
        "fixCommitParentSHA1": "bf832ee9d60b348f0b003631c411c5f3fe23226c",
        "bugFilePath": "src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\nindex 3dfb048..0cb5ca2 100644\n--- a/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/PlaySoundCommand.java\n@@ -74,10 +74,10 @@\n             final double delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ) / 2.0D;\n \n             if (delta > 0.0D) {\n-                soundLocation.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n+                location.add(deltaX / delta, deltaY / delta, deltaZ / delta);\n             }\n \n-            player.playSound(soundLocation, soundArg, (float) minimumVolume, (float) pitch);\n+            player.playSound(location, soundArg, (float) minimumVolume, (float) pitch);\n         } else {\n             player.playSound(soundLocation, soundArg, (float) volume, (float) pitch);\n         }\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 77,
        "bugNodeStartChar": 2760,
        "bugNodeLength": 65,
        "fixLineNum": 77,
        "fixNodeStartChar": 2760,
        "fixNodeLength": 60,
        "sourceBeforeFix": "soundLocation.add(deltaX / delta,deltaY / delta,deltaZ / delta)",
        "sourceAfterFix": "location.add(deltaX / delta,deltaY / delta,deltaZ / delta)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f5fe5ae0a963ee7db95d1f459280017de281af8f",
        "fixCommitParentSHA1": "dd6dbd5cf29795ac5bd8f76b76c562d4737917b8",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/TachyonFS.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java b/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\nindex 1d84345..a70ef6f 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/TachyonFS.java\n@@ -331,7 +331,7 @@\n     if (blockSizeByte > 0) {\n       return (int) mFSMasterClient.createFile(path.getPath(), blockSizeByte, recursive);\n     } else {\n-      return (int) mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.getPath(),\n+      return (int) mFSMasterClient.loadFileInfoFromUfs(path.getPath(), ufsPath.toString(),\n           blockSizeByte, recursive);\n     }\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 334,
        "bugNodeStartChar": 13366,
        "bugNodeLength": 17,
        "fixLineNum": 334,
        "fixNodeStartChar": 13366,
        "fixNodeLength": 18,
        "sourceBeforeFix": "ufsPath.getPath()",
        "sourceAfterFix": "ufsPath.toString()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f78f74f5a2cf1f73f974487816f998a6e37a9cf1",
        "fixCommitParentSHA1": "f6baae0bcbd712ac642db6d84dab026470d36f1c",
        "bugFilePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java",
        "fixPatch": "diff --git a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\nindex e7ab873..5c1a557 100644\n--- a/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n+++ b/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java\n@@ -352,7 +352,7 @@\n   }\n \n   void writeWindowUpdateLater(final int streamId, final long unacknowledgedBytesRead) {\n-    executor.submit(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n+    executor.execute(new NamedRunnable(\"OkHttp Window Update %s stream %d\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           frameWriter.windowUpdate(streamId, unacknowledgedBytesRead);\n@@ -384,7 +384,7 @@\n \n   private void writePingLater(\n       final boolean reply, final int payload1, final int payload2, final Ping ping) {\n-    executor.submit(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n+    executor.execute(new NamedRunnable(\"OkHttp %s ping %08x%08x\",\n         hostName, payload1, payload2) {\n       @Override public void execute() {\n         try {\n@@ -636,7 +636,7 @@\n               inFinished, headerBlock);\n           lastGoodStreamId = streamId;\n           streams.put(streamId, newStream);\n-          executor.submit(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n+          executor.execute(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n             @Override public void execute() {\n               try {\n                 handler.receive(newStream);\n@@ -704,7 +704,7 @@\n     }\n \n     private void ackSettingsLater(final Settings peerSettings) {\n-      executor.submit(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n+      executor.execute(new NamedRunnable(\"OkHttp %s ACK Settings\", hostName) {\n         @Override public void execute() {\n           try {\n             frameWriter.ackSettings(peerSettings);\n@@ -798,7 +798,7 @@\n       }\n       currentPushRequests.add(streamId);\n     }\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Request[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onRequest(streamId, requestHeaders);\n         try {\n@@ -816,7 +816,7 @@\n \n   private void pushHeadersLater(final int streamId, final List<Header> requestHeaders,\n       final boolean inFinished) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Headers[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         boolean cancel = pushObserver.onHeaders(streamId, requestHeaders, inFinished);\n         try {\n@@ -842,7 +842,7 @@\n     source.require(byteCount); // Eagerly read the frame before firing client thread.\n     source.read(buffer, byteCount);\n     if (buffer.size() != byteCount) throw new IOException(buffer.size() + \" != \" + byteCount);\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Data[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         try {\n           boolean cancel = pushObserver.onData(streamId, buffer, byteCount, inFinished);\n@@ -859,7 +859,7 @@\n   }\n \n   private void pushResetLater(final int streamId, final ErrorCode errorCode) {\n-    pushExecutor.submit(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n+    pushExecutor.execute(new NamedRunnable(\"OkHttp %s Push Reset[%s]\", hostName, streamId) {\n       @Override public void execute() {\n         pushObserver.onReset(streamId, errorCode);\n         synchronized (SpdyConnection.this) {\n",
        "projectName": "square.okhttp",
        "bugLineNum": 355,
        "bugNodeStartChar": 12757,
        "bugNodeLength": 282,
        "fixLineNum": 355,
        "fixNodeStartChar": 12757,
        "fixNodeLength": 283,
        "sourceBeforeFix": "executor.submit(new NamedRunnable(\"OkHttp Window Update %s stream %d\",hostName,streamId){   @Override public void execute(){     try {       frameWriter.windowUpdate(streamId,unacknowledgedBytesRead);     }  catch (    IOException ignored) {     }   } } )",
        "sourceAfterFix": "executor.execute(new NamedRunnable(\"OkHttp Window Update %s stream %d\",hostName,streamId){   @Override public void execute(){     try {       frameWriter.windowUpdate(streamId,unacknowledgedBytesRead);     }  catch (    IOException ignored) {     }   } } )"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "09c75753e4ce3f47457d4dc0f0c6d0f488a4ccf0",
        "fixCommitParentSHA1": "afcf81ca42cf3b457ee0cd1da58eb20f68e85fbc",
        "bugFilePath": "components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerAcceptContentTypeTest.java",
        "fixPatch": "diff --git a/components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerAcceptContentTypeTest.java b/components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerAcceptContentTypeTest.java\nindex 6f75773..0a6577f 100644\n--- a/components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerAcceptContentTypeTest.java\n+++ b/components/camel-restlet/src/test/java/org/apache/camel/component/restlet/RestletProducerAcceptContentTypeTest.java\n@@ -32,7 +32,7 @@\n             @Override\n             public void configure() throws Exception {                \n                 \n-                from(\"jetty://http://localhost:\" + + portNum + \"/users\")\n+                from(\"jetty://http://localhost:\" + portNum + \"/users\")\n                     .process(new Processor() {                    \n                         public void process(Exchange exchange) throws Exception {\n                             String body = exchange.getIn().getBody(String.class);\n",
        "projectName": "apache.camel",
        "bugLineNum": 35,
        "bugNodeStartChar": 1474,
        "bugNodeLength": 9,
        "fixLineNum": 35,
        "fixNodeStartChar": 1474,
        "fixNodeLength": 7,
        "sourceBeforeFix": "+portNum",
        "sourceAfterFix": "portNum"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "373e2c51564a4c2cca306394ba52e5bcde839cfd",
        "fixCommitParentSHA1": "4637c2a8f7820e2f499bffc8bbc6d93789f64399",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java\nindex bf829a6..fbaa5c6 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java\n@@ -182,9 +182,9 @@\n \t\t\t\t\t\"excludedViewNames\", String[].class));\n \t\t\tresolver.setViewNames(this.environment.getProperty(\"viewNames\",\n \t\t\t\t\tString[].class));\n-\t\t\t// Needs to come before any fallback resolver (e.g. a\n-\t\t\t// InternalResourceViewResolver)\n-\t\t\tresolver.setOrder(Ordered.LOWEST_PRECEDENCE - 20);\n+\t\t\t// This resolver acts as a fallback resolver (e.g. like a\n+\t\t\t// InternalResourceViewResolver) so it needs to have low precedence\n+\t\t\tresolver.setOrder(Ordered.LOWEST_PRECEDENCE - 5);\n \t\t\treturn resolver;\n \t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 187,
        "bugNodeStartChar": 6756,
        "bugNodeLength": 30,
        "fixLineNum": 187,
        "fixNodeStartChar": 6795,
        "fixNodeLength": 29,
        "sourceBeforeFix": "Ordered.LOWEST_PRECEDENCE - 20",
        "sourceAfterFix": "Ordered.LOWEST_PRECEDENCE - 5"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "93b1b656013a941b03c51936ea2c95cd7952fbc5",
        "fixCommitParentSHA1": "47bcf3ebe7067e86846057cbca2466d7349b0d98",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java b/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\nindex 89ef028..8653010 100644\n--- a/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\n+++ b/storm-core/src/jvm/backtype/storm/coordination/BatchBoltExecutor.java\n@@ -103,6 +103,6 @@\n     }\n     \n     private IBatchBolt newTransactionalBolt() {\n-        return Utils.deserialize(_boltSer, IBatchBolt.class);\n+        return Utils.javaDeserialize(_boltSer, IBatchBolt.class);\n     }\n }\n",
        "projectName": "apache.storm",
        "bugLineNum": 106,
        "bugNodeStartChar": 3540,
        "bugNodeLength": 45,
        "fixLineNum": 106,
        "fixNodeStartChar": 3540,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Utils.deserialize(_boltSer,IBatchBolt.class)",
        "sourceAfterFix": "Utils.javaDeserialize(_boltSer,IBatchBolt.class)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830",
        "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 94,
        "bugNodeStartChar": 3598,
        "bugNodeLength": 11,
        "fixLineNum": 94,
        "fixNodeStartChar": 3505,
        "fixNodeLength": 17,
        "sourceBeforeFix": "String text",
        "sourceAfterFix": "CharSequence text"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a0728fa8544488762715ed1ddda525469f0f90c5",
        "fixCommitParentSHA1": "57a3d97837f2e614dec1b875ca4111bb37852a4f",
        "bugFilePath": "indexing-service/src/main/java/io/druid/indexing/overlord/RemoteTaskRunner.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/io/druid/indexing/overlord/RemoteTaskRunner.java b/indexing-service/src/main/java/io/druid/indexing/overlord/RemoteTaskRunner.java\nindex 621c7fe..d022a43 100644\n--- a/indexing-service/src/main/java/io/druid/indexing/overlord/RemoteTaskRunner.java\n+++ b/indexing-service/src/main/java/io/druid/indexing/overlord/RemoteTaskRunner.java\n@@ -351,7 +351,7 @@\n   @Override\n   public Optional<ScalingStats> getScalingStats()\n   {\n-    return Optional.of(resourceManagement.getStats());\n+    return Optional.fromNullable(resourceManagement.getStats());\n   }\n \n   public ZkWorker findWorkerRunningTask(String taskId)\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 354,
        "bugNodeStartChar": 14442,
        "bugNodeLength": 42,
        "fixLineNum": 354,
        "fixNodeStartChar": 14442,
        "fixNodeLength": 52,
        "sourceBeforeFix": "Optional.of(resourceManagement.getStats())",
        "sourceAfterFix": "Optional.fromNullable(resourceManagement.getStats())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "1ec0bbefda8dfe8cb0c5a11005b62c17ab61c121",
        "fixCommitParentSHA1": "cb8447af2886a43d50cf72a3f6051343c5db645a",
        "bugFilePath": "src/test/java/io/vertx/core/logging/Recording.java",
        "fixPatch": "diff --git a/src/test/java/io/vertx/core/logging/Recording.java b/src/test/java/io/vertx/core/logging/Recording.java\nindex 6fb83cc..c393db4 100644\n--- a/src/test/java/io/vertx/core/logging/Recording.java\n+++ b/src/test/java/io/vertx/core/logging/Recording.java\n@@ -74,7 +74,7 @@\n     long now = System.currentTimeMillis();\n     StringBuilder acc = new StringBuilder(get());\n     while (!predicate.test(acc.toString())) {\n-      Assert.assertTrue(\"Was not expecting this output \" + acc, System.currentTimeMillis() - now < 5000);\n+      Assert.assertTrue(System.currentTimeMillis() - now < 5000);\n       try {\n         Thread.sleep(1);\n       } catch (InterruptedException e) {\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 77,
        "bugNodeStartChar": 2102,
        "bugNodeLength": 98,
        "fixLineNum": 77,
        "fixNodeStartChar": 2102,
        "fixNodeLength": 58,
        "sourceBeforeFix": "Assert.assertTrue(\"Was not expecting this output \" + acc,System.currentTimeMillis() - now < 5000)",
        "sourceAfterFix": "Assert.assertTrue(System.currentTimeMillis() - now < 5000)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "e5ae9753d043d292923efc4759c2b0e2e68daa27",
        "fixCommitParentSHA1": "ed8acf931a22fb02026970f78031f3a16b06034a",
        "bugFilePath": "components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java",
        "fixPatch": "diff --git a/components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java b/components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java\nindex d7aab9a..d0fc7bf 100644\n--- a/components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java\n+++ b/components/camel-saxon/src/main/java/org/apache/camel/component/xquery/XQueryBuilder.java\n@@ -640,7 +640,7 @@\n                 configuration = new Configuration();\n                 configuration.setHostLanguage(Configuration.XQUERY);\n                 configuration.setStripsWhiteSpace(isStripsAllWhiteSpace() ? Whitespace.ALL : Whitespace.IGNORABLE);\n-                LOG.debug(\"Created new Configuration {}\");\n+                LOG.debug(\"Created new Configuration {}\", configuration);\n             } else {\n                 LOG.debug(\"Using existing Configuration {}\", configuration);\n             }\n",
        "projectName": "apache.camel",
        "bugLineNum": 643,
        "bugNodeStartChar": 22840,
        "bugNodeLength": 41,
        "fixLineNum": 643,
        "fixNodeStartChar": 22840,
        "fixNodeLength": 56,
        "sourceBeforeFix": "LOG.debug(\"Created new Configuration {}\")",
        "sourceAfterFix": "LOG.debug(\"Created new Configuration {}\",configuration)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "595fada2ff221b76c33da09b327973ed6a17ad2d",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 97,
        "bugNodeStartChar": 2620,
        "bugNodeLength": 37,
        "fixLineNum": 97,
        "fixNodeStartChar": 2620,
        "fixNodeLength": 44,
        "sourceBeforeFix": "this.thrown.equals(\"File must exist\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must exist\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3847d03a4ac7e7f4e52bca451ddb5089a7402072",
        "fixCommitParentSHA1": "45484b163f343d8cf4b191efe35851e92ffe41ab",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex d054b5c..4b203e4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n",
        "projectName": "facebook.presto",
        "bugLineNum": 570,
        "bugNodeStartChar": 26835,
        "bugNodeLength": 45,
        "fixLineNum": 570,
        "fixNodeStartChar": 26835,
        "fixNodeLength": 32,
        "sourceBeforeFix": "analysis.getTypeWithCoercions(windowFunction)",
        "sourceAfterFix": "analysis.getType(windowFunction)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cdcc5397439b2e7441180a4712d7163afa451a6d",
        "fixCommitParentSHA1": "14d8ae4015e5e686f45d428c7e1879e689f818ff",
        "bugFilePath": "guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java",
        "fixPatch": "diff --git a/guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java b/guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java\nindex 344e374..491fe08 100644\n--- a/guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java\n+++ b/guava-testlib/src/com/google/common/collect/testing/features/FeatureUtil.java\n@@ -214,7 +214,7 @@\n   private static TesterRequirements buildTesterRequirements(\n       Annotation testerAnnotation)\n       throws ConflictingRequirementsException {\n-    Class<? extends Annotation> annotationClass = testerAnnotation.getClass();\n+    Class<? extends Annotation> annotationClass = testerAnnotation.annotationType();\n     final Feature<?>[] presentFeatures;\n     final Feature<?>[] absentFeatures;\n     try {\n",
        "projectName": "google.guava",
        "bugLineNum": 217,
        "bugNodeStartChar": 8211,
        "bugNodeLength": 27,
        "fixLineNum": 217,
        "fixNodeStartChar": 8211,
        "fixNodeLength": 33,
        "sourceBeforeFix": "testerAnnotation.getClass()",
        "sourceAfterFix": "testerAnnotation.annotationType()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d7cc7dde8f5bc3bf573ec4e7b4e500e5accdcd25",
        "fixCommitParentSHA1": "d37f3d68a339f98055b3f9e82d7ac12171e58fd6",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicDistributedTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicDistributedTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicDistributedTest.java\nindex 34890eb..006abba 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicDistributedTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicDistributedTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class AtomicLongBasicDistributedTest extends AtomicLongBasicTest {\n+public class AtomicLongBasicDistributedTest extends AtomicLongAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 331,
        "bugNodeLength": 306,
        "fixLineNum": 10,
        "fixNodeStartChar": 331,
        "fixNodeLength": 309,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicLongBasicDistributedTest extends AtomicLongBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicLongBasicDistributedTest extends AtomicLongAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } "
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "8d886e59bfc878cfbbbcd23160a7dd7c44e5fe94",
        "fixCommitParentSHA1": "c47032d5662b0f16d20db9e266195ea24d2f3208",
        "bugFilePath": "java-util/src/main/java/io/druid/java/util/common/CompressionUtils.java",
        "fixPatch": "diff --git a/java-util/src/main/java/io/druid/java/util/common/CompressionUtils.java b/java-util/src/main/java/io/druid/java/util/common/CompressionUtils.java\nindex 9729dc4..2fc4a37 100644\n--- a/java-util/src/main/java/io/druid/java/util/common/CompressionUtils.java\n+++ b/java-util/src/main/java/io/druid/java/util/common/CompressionUtils.java\n@@ -125,7 +125,7 @@\n     long totalSize = 0;\n     for (File file : directory.listFiles()) {\n       log.info(\"Adding file[%s] with size[%,d].  Total size so far[%,d]\", file, file.length(), totalSize);\n-      if (file.length() >= Integer.MAX_VALUE) {\n+      if (file.length() > Integer.MAX_VALUE) {\n         zipOut.finish();\n         throw new IOE(\"file[%s] too large [%,d]\", file, file.length());\n       }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 128,
        "bugNodeStartChar": 4934,
        "bugNodeLength": 34,
        "fixLineNum": 128,
        "fixNodeStartChar": 4934,
        "fixNodeLength": 33,
        "sourceBeforeFix": "file.length() >= Integer.MAX_VALUE",
        "sourceAfterFix": "file.length() > Integer.MAX_VALUE"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1c9a83a316dcb5c1d304c9c600627df5dc77c3f0",
        "fixCommitParentSHA1": "7835265ca9ee2324b28ccb315293bcba7c9ec94e",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl_timeoutTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl_timeoutTest.java b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl_timeoutTest.java\nindex a575f02..4e6fe0a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl_timeoutTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/OperationServiceImpl_timeoutTest.java\n@@ -175,7 +175,7 @@\n \n     @Test\n     public void testOperationTimeoutForLongRunningRemoteOperation() throws Exception {\n-        int callTimeoutMillis = 1000;\n+        int callTimeoutMillis = 3000;\n         Config config = new Config().setProperty(OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeoutMillis);\n \n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 178,
        "bugNodeStartChar": 6241,
        "bugNodeLength": 24,
        "fixLineNum": 178,
        "fixNodeStartChar": 6241,
        "fixNodeLength": 24,
        "sourceBeforeFix": "callTimeoutMillis=1000",
        "sourceAfterFix": "callTimeoutMillis=3000"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "312ba4238e15b4f95054ca33ee1b3604afbd8d74",
        "fixCommitParentSHA1": "1adb490974aa0d69fcb64a58f59576424993cb41",
        "bugFilePath": "api/src/main/java/org/openmrs/validator/ProgramValidator.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/validator/ProgramValidator.java b/api/src/main/java/org/openmrs/validator/ProgramValidator.java\nindex 7a551fa..5d1b9b2 100644\n--- a/api/src/main/java/org/openmrs/validator/ProgramValidator.java\n+++ b/api/src/main/java/org/openmrs/validator/ProgramValidator.java\n@@ -63,7 +63,7 @@\n \t\t\tValidationUtils.rejectIfEmptyOrWhitespace(errors, \"description\", \"error.description.required\");\r\n \t\t\tList<Program> programs = Context.getProgramWorkflowService().getAllPrograms(false);\r\n \t\t\tfor (Program program : programs) {\r\n-\t\t\t\tif (program.getName().equals(p.getName()) && !program.getProgramId().equals(p.getProgramId())) {\r\n+\t\t\t\tif (program.getName().equals(p.getName()) && !program.getUuid().equals(p.getUuid())) {\r\n \t\t\t\t\terrors.rejectValue(\"name\", \"general.error.nameAlreadyInUse\");\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t} else {\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 66,
        "bugNodeStartChar": 2544,
        "bugNodeLength": 22,
        "fixLineNum": 66,
        "fixNodeStartChar": 2479,
        "fixNodeLength": 17,
        "sourceBeforeFix": "program.getProgramId()",
        "sourceAfterFix": "program.getUuid()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "0a009cf81ca7080d309645be82248c86b0a108f4",
        "fixCommitParentSHA1": "55c5a02eefdebe33be2bf5930f6d56c227196468",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/Intersector.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Intersector.java b/gdx/src/com/badlogic/gdx/math/Intersector.java\nindex 6221fb2..50f38e8 100644\n--- a/gdx/src/com/badlogic/gdx/math/Intersector.java\n+++ b/gdx/src/com/badlogic/gdx/math/Intersector.java\n@@ -1056,13 +1056,13 @@\n \n \t\t// set number of triangles\n \t\tsplit.total = 3;\n-\t\tsplit.numFront = (r1 ? 1 : 0) + (r2 ? 1 : 0) + (r3 ? 1 : 0);\n+\t\tsplit.numFront = (r1 ? 0 : 1) + (r2 ? 0 : 1) + (r3 ? 0 : 1);\n \t\tsplit.numBack = split.total - split.numFront;\n \n \t\t// hard case, split the three edges on the plane\n \t\t// determine which array to fill first, front or back, flip if we\n \t\t// cross the plane\n-\t\tsplit.setSide(r1);\n+\t\tsplit.setSide(!r1);\n \n \t\t// split first edge\n \t\tint first = 0;\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 1065,
        "bugNodeStartChar": 39799,
        "bugNodeLength": 2,
        "fixLineNum": 1065,
        "fixNodeStartChar": 39799,
        "fixNodeLength": 3,
        "sourceBeforeFix": "r1",
        "sourceAfterFix": "!r1"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "dbded5e4db2154c25b07fbf890886487b30c522c",
        "fixCommitParentSHA1": "d7bcf83aa7737c3b625ab9a5b7fc4041c4d2fe08",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java b/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\nindex e93969f..4dcf0cb 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\n@@ -173,7 +173,8 @@\n         try {\n             this.sendModuleUnAvailability(new DeploymentModuleIdentifier[]{deploymentModuleIdentifier});\n         } catch (IOException e) {\n-            logger.warn(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \" + this.channel, e);\n+            // TODO: Change this to WARN once https://issues.jboss.org/browse/REM3-123 is fixed\n+            logger.debug(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \" + this.channel, e);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 176,
        "bugNodeStartChar": 7774,
        "bugNodeLength": 140,
        "fixLineNum": 177,
        "fixNodeStartChar": 7870,
        "fixNodeLength": 141,
        "sourceBeforeFix": "logger.warn(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \"+ this.channel,e)",
        "sourceAfterFix": "logger.debug(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \"+ this.channel,e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "24f4e5797f7957b42069dc0989afad49bf9918da",
        "fixCommitParentSHA1": "d64620802bf0ed0dad6881158da32acf25e8055a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\nindex 4029b8e..95b34e9 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java\n@@ -238,7 +238,7 @@\n \t\tdisposeColorTexture(colorTexture);\n \n \t\tif (hasDepthStencilPackedBuffer) {\n-\t\t\tgl.glDeleteBuffer(depthStencilPackedBufferHandle);\n+\t\t\tgl.glDeleteRenderbuffer(depthStencilPackedBufferHandle);\n \t\t} else {\n \t\t\tif (hasDepth) gl.glDeleteRenderbuffer(depthbufferHandle);\n \t\t\tif (hasStencil) gl.glDeleteRenderbuffer(stencilbufferHandle);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 241,
        "bugNodeStartChar": 9097,
        "bugNodeLength": 49,
        "fixLineNum": 241,
        "fixNodeStartChar": 9097,
        "fixNodeLength": 55,
        "sourceBeforeFix": "gl.glDeleteBuffer(depthStencilPackedBufferHandle)",
        "sourceAfterFix": "gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7540dd58cad2662684c60f7ebc5d86b4841382c3",
        "fixCommitParentSHA1": "e2862fe1fbad834faf83d83942fbf8e28a2d73f2",
        "bugFilePath": "server/src/test/java/com/metamx/druid/master/DruidMasterRuleRunnerTest.java",
        "fixPatch": "diff --git a/server/src/test/java/com/metamx/druid/master/DruidMasterRuleRunnerTest.java b/server/src/test/java/com/metamx/druid/master/DruidMasterRuleRunnerTest.java\nindex 81e8d5e..8679daf 100644\n--- a/server/src/test/java/com/metamx/druid/master/DruidMasterRuleRunnerTest.java\n+++ b/server/src/test/java/com/metamx/druid/master/DruidMasterRuleRunnerTest.java\n@@ -926,7 +926,8 @@\n         Lists.<String>newArrayList(),\n         Lists.<String>newArrayList(),\n         new NoneShardSpec(),\n-        1\n+        1,\n+        0\n     );\n \n     afterParams = ruleRunner.run(\n@@ -971,7 +972,8 @@\n         Lists.<String>newArrayList(),\n         Lists.<String>newArrayList(),\n         new NoneShardSpec(),\n-        1\n+        1,\n+        0\n     );\n     List<DataSegment> longerAvailableSegments = Lists.newArrayList(availableSegments);\n     longerAvailableSegments.add(overFlowSegment);\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 966,
        "bugNodeStartChar": 35307,
        "bugNodeLength": 278,
        "fixLineNum": 966,
        "fixNodeStartChar": 35307,
        "fixNodeLength": 289,
        "sourceBeforeFix": "new DataSegment(\"test\",new Interval(\"2012-02-01/2012-02-02\"),new DateTime().toString(),Maps.<String,Object>newHashMap(),Lists.<String>newArrayList(),Lists.<String>newArrayList(),new NoneShardSpec(),1)",
        "sourceAfterFix": "new DataSegment(\"test\",new Interval(\"2012-02-01/2012-02-02\"),new DateTime().toString(),Maps.<String,Object>newHashMap(),Lists.<String>newArrayList(),Lists.<String>newArrayList(),new NoneShardSpec(),1,0)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da",
        "fixCommitParentSHA1": "1435dad364fb6547de60d6f142211ccd6649bd06",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\nindex f3ece18..3c2b618 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n@@ -188,7 +188,7 @@\n         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {\n@@ -196,7 +196,7 @@\n                 } else {\n                     statistics.increaseCacheHits(1);\n                 }\n-                statistics.addGetTimeNano(System.nanoTime() - start);\n+                statistics.addGetTimeNanos(System.nanoTime() - start);\n             }\n         }\n     }\n@@ -230,7 +230,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n-            statistics.addPutTimeNano(System.nanoTime() - start);\n+            statistics.addPutTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -252,11 +252,11 @@\n             deleteRecord(key);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCacheRemovals(1);\n-                statistics.addRemoveTimeNano(System.nanoTime() - start);\n+                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -281,7 +281,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -315,7 +315,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             if (hitCount == 1) {\n                 statistics.increaseCacheHits(hitCount);\n             } else {\n@@ -357,11 +357,11 @@\n             result = updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result) {\n                 statistics.increaseCachePuts(1);\n                 statistics.increaseCacheHits(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -400,9 +400,9 @@\n         if (isStatisticsEnabled()) {\n             if (result) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (isHit) {\n                 statistics.increaseCacheHits(1);\n             } else {\n@@ -428,11 +428,11 @@\n             updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -587,7 +587,7 @@\n             }\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 360,
        "bugNodeStartChar": 14474,
        "bugNodeLength": 52,
        "fixLineNum": 360,
        "fixNodeStartChar": 14474,
        "fixNodeLength": 53,
        "sourceBeforeFix": "statistics.addGetTimeNano(System.nanoTime() - start)",
        "sourceAfterFix": "statistics.addGetTimeNanos(System.nanoTime() - start)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e74cd24ff2229b060e219af33c3abe5cbf1079d1",
        "fixCommitParentSHA1": "5b7f4bb5353977371d95e9ccb8e523f64d1ecd19",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java\nindex 9b68c5c..4b355f7 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/RecoverableZooKeeper.java\n@@ -441,7 +441,7 @@\n                   Bytes.toStringBinary(data));\n               throw e;\n             }\n-            LOG.error(\"Node \" + path + \" already exists and this is not a \" +\n+            LOG.info(\"Node \" + path + \" already exists and this is not a \" +\n                 \"retry\");\n             throw e;\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 444,
        "bugNodeStartChar": 15443,
        "bugNodeLength": 90,
        "fixLineNum": 444,
        "fixNodeStartChar": 15443,
        "fixNodeLength": 89,
        "sourceBeforeFix": "LOG.error(\"Node \" + path + \" already exists and this is not a \"+ \"retry\")",
        "sourceAfterFix": "LOG.info(\"Node \" + path + \" already exists and this is not a \"+ \"retry\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e896f6d400c7ad946141adbf7317df7c680fcdc6",
        "fixCommitParentSHA1": "1f2aadb80dacd061a2816d32a232db8bb5d54cb1",
        "bugFilePath": "src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java b/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\nindex 1647b02..a406839 100644\n--- a/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\n+++ b/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\n@@ -174,7 +174,7 @@\n     } catch (DoNotRetryIOException e) {\n       throw e;\n     } catch (IOException e) {\n-      LOG.debug(\"recovered from \" + StringUtils.stringifyException(e));\n+      LOG.info(\"recovered from \" + StringUtils.stringifyException(e));\n       if (lastSuccessfulRow == null) {\n         LOG.warn(\"We are restarting the first next() invocation,\" +\n             \" if your mapper's restarted a few other times like this\" +\n",
        "projectName": "apache.hbase",
        "bugLineNum": 177,
        "bugNodeStartChar": 5533,
        "bugNodeLength": 64,
        "fixLineNum": 177,
        "fixNodeStartChar": 5533,
        "fixNodeLength": 63,
        "sourceBeforeFix": "LOG.debug(\"recovered from \" + StringUtils.stringifyException(e))",
        "sourceAfterFix": "LOG.info(\"recovered from \" + StringUtils.stringifyException(e))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a",
        "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36",
        "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 48,
        "bugNodeStartChar": 1685,
        "bugNodeLength": 19,
        "fixLineNum": 48,
        "fixNodeStartChar": 1638,
        "fixNodeLength": 22,
        "sourceBeforeFix": "raw.getParameters()",
        "sourceAfterFix": "raw.getOutParameters()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8c31000efa3e7745855734a2babc18fc0ab20bed",
        "fixCommitParentSHA1": "e9057354c239fb081c961270c950f8b7bec634ef",
        "bugFilePath": "spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelectorTests.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelectorTests.java b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelectorTests.java\nindex cbd254b..d8e93fa 100644\n--- a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelectorTests.java\n+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelectorTests.java\n@@ -157,7 +157,7 @@\n \t\tSet<Object> set1 = this.importSelector.determineImports(\n \t\t\t\tgetAnnotationMetadata(ImportAutoConfigurationWithItemsOne.class));\n \t\tSet<Object> set2 = this.importSelector.determineImports(\n-\t\t\t\tgetAnnotationMetadata(ImportAutoConfigurationWithItemsOne.class));\n+\t\t\t\tgetAnnotationMetadata(ImportAutoConfigurationWithItemsTwo.class));\n \t\tassertThat(set1).isEqualTo(set2);\n \t}\n \n@@ -269,7 +269,7 @@\n \t}\n \n \t@ImportAutoConfiguration(classes = ThymeleafAutoConfiguration.class)\n-\t@UnrelatedOne\n+\t@UnrelatedTwo\n \tstatic class ImportAutoConfigurationWithItemsTwo {\n \n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 272,
        "bugNodeStartChar": 9156,
        "bugNodeLength": 13,
        "fixLineNum": 272,
        "fixNodeStartChar": 9156,
        "fixNodeLength": 13,
        "sourceBeforeFix": "@UnrelatedOne",
        "sourceAfterFix": "@UnrelatedTwo"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 94,
        "bugNodeStartChar": 2910,
        "bugNodeLength": 82,
        "fixLineNum": 94,
        "fixNodeStartChar": 2910,
        "fixNodeLength": 79,
        "sourceBeforeFix": "GL.glCopyTexImage2DEXT(target,level,internalformat,x,y,width,height,border)",
        "sourceAfterFix": "GL.glCopyTexImage2D(target,level,internalformat,x,y,width,height,border)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
        "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
        "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 52,
        "bugNodeStartChar": 1636,
        "bugNodeLength": 25,
        "fixLineNum": 51,
        "fixNodeStartChar": 1595,
        "fixNodeLength": 26,
        "sourceBeforeFix": "cs.getString(columnIndex)",
        "sourceAfterFix": "cs.getNString(columnIndex)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/FilterTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/FilterTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/FilterTest.java\nindex 8166ee6..208fe2e 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/FilterTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/FilterTest.java\n@@ -53,7 +53,7 @@\n \n \t\t// System.out.println(Sop);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 56,
        "bugNodeStartChar": 2391,
        "bugNodeLength": 38,
        "fixLineNum": 56,
        "fixNodeStartChar": 2391,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "24d0df5830912b3ad11fdbc6448eb68eeaced28b",
        "fixCommitParentSHA1": "c0e2ade3352b754b2f1de1f73fdbff77d5a34f99",
        "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 36cb83d..9118194 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -398,7 +398,7 @@\n                     Enchantment enchantment = Enchantment.getByName(entry.getKey().toString());\n \n                     if ((enchantment != null) && (entry.getValue() instanceof Integer)) {\n-                        result.addEnchantment(enchantment, (Integer) entry.getValue());\n+                        result.addUnsafeEnchantment(enchantment, (Integer) entry.getValue());\n                     }\n                 }\n             }\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 401,
        "bugNodeStartChar": 12034,
        "bugNodeLength": 62,
        "fixLineNum": 401,
        "fixNodeStartChar": 12034,
        "fixNodeLength": 68,
        "sourceBeforeFix": "result.addEnchantment(enchantment,(Integer)entry.getValue())",
        "sourceAfterFix": "result.addUnsafeEnchantment(enchantment,(Integer)entry.getValue())"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "ce8d80dd2543eaa821e861969cfb53b9b3a666de",
        "fixCommitParentSHA1": "0644e45a490f71bca4688b858a6923bf9fc6ce83",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/parser/ParserConfig.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\nindex 1a15216..a49d01f 100755\n--- a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n+++ b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n@@ -386,7 +386,7 @@\n                }\n                \n                superClass = superClass.getSuperclass();\n-               if (superClass == Object.class) {\n+               if (superClass == Object.class || superClass == null) {\n                    break;\n                }\n             }\n@@ -467,7 +467,7 @@\n                }\n                \n                superClass = superClass.getSuperclass();\n-               if (superClass == Object.class) {\n+               if (superClass == Object.class || superClass == null) {\n                    break;\n                }\n             }\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 389,
        "bugNodeStartChar": 17450,
        "bugNodeLength": 26,
        "fixLineNum": 389,
        "fixNodeStartChar": 17450,
        "fixNodeLength": 48,
        "sourceBeforeFix": "superClass == Object.class",
        "sourceAfterFix": "superClass == Object.class || superClass == null"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "04a010c8499fbc96b1e5a99bdbebaf0b38d24586",
        "fixCommitParentSHA1": "d5b978271f13513ccb20a7f3b1393e6dd4331d0d",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ShortArray.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ShortArray.java b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\nindex 0fb6379..940a321 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ShortArray.java\n@@ -102,7 +102,7 @@\n \tpublic void addAll (short[] array, int offset, int length) {\r\n \t\tshort[] items = this.items;\r\n \t\tint sizeNeeded = size + length;\r\n-\t\tif (sizeNeeded >= items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n+\t\tif (sizeNeeded > items.length) items = resize(Math.max(8, (int)(sizeNeeded * 1.75f)));\r\n \t\tSystem.arraycopy(array, offset, items, size, length);\r\n \t\tsize += length;\r\n \t}\r\n@@ -245,7 +245,7 @@\n \t * @return {@link #items} */\r\n \tpublic short[] ensureCapacity (int additionalCapacity) {\r\n \t\tint sizeNeeded = size + additionalCapacity;\r\n-\t\tif (sizeNeeded >= items.length) resize(Math.max(8, sizeNeeded));\r\n+\t\tif (sizeNeeded > items.length) resize(Math.max(8, sizeNeeded));\r\n \t\treturn items;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 248,
        "bugNodeStartChar": 8564,
        "bugNodeLength": 26,
        "fixLineNum": 248,
        "fixNodeStartChar": 8317,
        "fixNodeLength": 25,
        "sourceBeforeFix": "sizeNeeded >= items.length",
        "sourceAfterFix": "sizeNeeded > items.length"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6c0b2be41234c6593d1ca8283f1a766ecc861026",
        "fixCommitParentSHA1": "c07234ed7253bcc70e56db5c74cf34a649fa4568",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\nindex eadb9ce..28fc992 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n@@ -788,7 +788,7 @@\n             if (currentAttribute == null) {\n                 try {\n                     currentAttribute = factory.createAttribute(request,\n-                            decodeAttribute(nameAttribute.getValue(), charset));\n+                            cleanString(nameAttribute.getValue()));\n                 } catch (NullPointerException e) {\n                     throw new ErrorDataDecoderException(e);\n                 } catch (IllegalArgumentException e) {\n@@ -963,8 +963,7 @@\n                         Attribute attribute;\n                         try {\n                             attribute = factory.createAttribute(request,\n-                                    decodeAttribute(values[0].trim(), charset),\n-                                    decodeAttribute(cleanString(values[1]), charset));\n+                                    cleanString(values[0]), values[1]);\n                         } catch (NullPointerException e) {\n                             throw new ErrorDataDecoderException(e);\n                         } catch (IllegalArgumentException e) {\n@@ -1024,8 +1023,7 @@\n                             Attribute attribute;\n                             try {\n                                 attribute = factory.createAttribute(request,\n-                                        decodeAttribute(contents[0].trim(), charset),\n-                                        decodeAttribute(cleanString(contents[i]), charset));\n+                                        cleanString(contents[0]), contents[i]);\n                             } catch (NullPointerException e) {\n                                 throw new ErrorDataDecoderException(e);\n                             } catch (IllegalArgumentException e) {\n@@ -1126,8 +1124,7 @@\n             }\n             try {\n                 currentFileUpload = factory.createFileUpload(request,\n-                        decodeAttribute(nameAttribute.getValue(), charset),\n-                        decodeAttribute(filenameAttribute.getValue(), charset),\n+                        cleanString(nameAttribute.getValue()), cleanString(filenameAttribute.getValue()),\n                         contentTypeAttribute.getValue(), mechanism.value(), localCharset,\n                         size);\n             } catch (NullPointerException e) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 791,
        "bugNodeStartChar": 31295,
        "bugNodeLength": 50,
        "fixLineNum": 791,
        "fixNodeStartChar": 31295,
        "fixNodeLength": 37,
        "sourceBeforeFix": "decodeAttribute(nameAttribute.getValue(),charset)",
        "sourceAfterFix": "cleanString(nameAttribute.getValue())"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "56627bebd6356884336d99009b80f2573101a0c6",
        "fixCommitParentSHA1": "407812c326776d1e1bfa4c71d8faca3fcbba0525",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java\nindex c08c253..da3b1fe 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java\n@@ -202,7 +202,8 @@\n         }\n \n         if (prunerExpr == null) {\n-          // add all partitions corresponding to the table\n+          // This can happen when hive.mapred.mode=nonstrict and there is no predicates at all\n+          // Add all partitions to the unknown_parts so that a MR job is generated.\n           true_parts.addAll(Hive.get().getPartitions(tab));\n         } else {\n           // remove non-partition columns\n@@ -213,7 +214,9 @@\n               \"; filter w/o compacting: \" +\n               ((prunerExpr != null) ? prunerExpr.getExprString(): \"null\"));\n           if (compactExpr == null) {\n-            true_parts.addAll(Hive.get().getPartitions(tab));\n+            // This could happen when hive.mapred.mode=nonstrict and all the predicates\n+            // are on non-partition columns.\n+            unkn_parts.addAll(Hive.get().getPartitions(tab));\n           } else if (Utilities.checkJDOPushDown(tab, compactExpr)) {\n             String filter = compactExpr.getExprString();\n             String oldFilter = prunerExpr.getExprString();\n",
        "projectName": "apache.hive",
        "bugLineNum": 216,
        "bugNodeStartChar": 8263,
        "bugNodeLength": 48,
        "fixLineNum": 218,
        "fixNodeStartChar": 8396,
        "fixNodeLength": 48,
        "sourceBeforeFix": "true_parts.addAll(Hive.get().getPartitions(tab))",
        "sourceAfterFix": "unkn_parts.addAll(Hive.get().getPartitions(tab))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "041d650753ff4b846fc86e4266658fc64046bc45",
        "fixCommitParentSHA1": "ca05ef903e102e027f0e983d06dd075e479fff1e",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\nindex a215ea2..a3b31d8 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n@@ -102,7 +102,7 @@\n \n     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n-      if (entity instanceof ProcessDefinition) {\n+      if (entity instanceof ProcessDefinitionEntity) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 105,
        "bugNodeStartChar": 4050,
        "bugNodeLength": 35,
        "fixLineNum": 105,
        "fixNodeStartChar": 4050,
        "fixNodeLength": 41,
        "sourceBeforeFix": "entity instanceof ProcessDefinition",
        "sourceAfterFix": "entity instanceof ProcessDefinitionEntity"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e3c87cba0bbed00c739e01599e29a5621c9ef3b3",
        "fixCommitParentSHA1": "c44a6dee3d0bf523339972715f752e878e2b346a",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\nindex 3df1e33..34bf6b6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n@@ -71,7 +71,7 @@\n \t\tRSocketWebSocketNettyRouteProvider rSocketWebsocketRouteProvider(RSocketProperties properties,\n \t\t\t\tRSocketMessageHandler messageHandler) {\n \t\t\treturn new RSocketWebSocketNettyRouteProvider(properties.getServer().getMappingPath(),\n-\t\t\t\t\tmessageHandler.serverResponder());\n+\t\t\t\t\tmessageHandler.responder());\n \t\t}\n \n \t}\n@@ -104,7 +104,7 @@\n \t\t@ConditionalOnMissingBean\n \t\tRSocketServerBootstrap rSocketServerBootstrap(RSocketServerFactory rSocketServerFactory,\n \t\t\t\tRSocketMessageHandler rSocketMessageHandler) {\n-\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverResponder());\n+\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.responder());\n \t\t}\n \n \t\t@Bean\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 74,
        "bugNodeStartChar": 3665,
        "bugNodeLength": 32,
        "fixLineNum": 74,
        "fixNodeStartChar": 3665,
        "fixNodeLength": 26,
        "sourceBeforeFix": "messageHandler.serverResponder()",
        "sourceAfterFix": "messageHandler.responder()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "d0c64987a9cb694631a3e5bc77b669f49f93a30e",
        "fixCommitParentSHA1": "3b76f51ab2bbd4ae86dc7b333fc78bee52c1ec0b",
        "bugFilePath": "bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java b/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\nindex 5b3eeb8..909cfad 100644\n--- a/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\n+++ b/bundles/binding/org.openhab.binding.fritzboxtr064/src/main/java/org/openhab/binding/fritzboxtr064/internal/Tr064Comm.java\n@@ -224,7 +224,7 @@\n         // check if special \"soap value parser\" handler for extracting SOAP value is defined. If yes, use svp\n         if (itemMap.getSoapValueParser() == null) { // extract dataOutName1 as default, no handler used\n             NodeList nlDataOutNodes = response.getSOAPPart().getElementsByTagName(itemMap.getReadDataOutName());\n-            if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+            if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                 // extract value from soap response\n                 value = nlDataOutNodes.item(0).getTextContent();\n             } else {\n@@ -734,7 +734,7 @@\n                         }\n                     } else {\n                         NodeList nlDataOutNodes = sm.getSOAPPart().getElementsByTagName(mapping.getReadDataOutName()); // URL\n-                        if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+                        if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                             // extract URL from soap response\n                             String url = nlDataOutNodes.item(0).getTextContent();\n                             Document xmlTamInfo = getFboxXmlResponse(url);\n@@ -799,7 +799,7 @@\n                         }\n                     } else {\n                         NodeList nlDataOutNodes = sm.getSOAPPart().getElementsByTagName(mapping.getReadDataOutName()); // URL\n-                        if (nlDataOutNodes != null & nlDataOutNodes.getLength() > 0) {\n+                        if (nlDataOutNodes != null && nlDataOutNodes.getLength() > 0) {\n                             // extract URL from soap response\n                             String url = nlDataOutNodes.item(0).getTextContent();\n                             // only get missed calls of the last x days\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 227,
        "bugNodeStartChar": 9285,
        "bugNodeLength": 55,
        "fixLineNum": 227,
        "fixNodeStartChar": 9285,
        "fixNodeLength": 56,
        "sourceBeforeFix": "nlDataOutNodes != null & nlDataOutNodes.getLength() > 0",
        "sourceAfterFix": "nlDataOutNodes != null && nlDataOutNodes.getLength() > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "37a968f250d8e6b6cfadebb046f2eb1295cd95e4",
        "fixCommitParentSHA1": "df2638313bd7851fdba629ea00cd0192a895b356",
        "bugFilePath": "api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java b/api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java\nindex e4360b5..005ac5f 100644\n--- a/api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java\n+++ b/api/src/main/java/org/openmrs/util/OpenmrsClassLoader.java\n@@ -563,7 +563,7 @@\n \t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tcatch (Throwable t) {\n+\t\t\t\t\t\t\tcatch (Exception t) {\n \t\t\t\t\t\t\t\tif (log.isDebugEnabled()) {\n \t\t\t\t\t\t\t\t\tlog.debug(\"Could not set field \" + field.getName() + \" to null in class \"\n \t\t\t\t\t\t\t\t\t        + clazz.getName(), t);\n@@ -572,7 +572,7 @@\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tcatch (Throwable t) {\n+\t\t\t\tcatch (Exception t) {\n \t\t\t\t\tif (log.isDebugEnabled()) {\n \t\t\t\t\t\tlog.debug(\"Could not clean fields for class \" + clazz.getName(), t);\n \t\t\t\t\t}\n@@ -665,7 +665,7 @@\n \t\t\tif (!Context.isRefreshingContext())\n \t\t\t\tmementos.put(key, Context.getSchedulerService().saveToMemento());\n \t\t}\n-\t\tcatch (Throwable t) {\n+\t\tcatch (Exception t) {\n \t\t\t// pass\n \t\t}\n \t}\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 575,
        "bugNodeStartChar": 18674,
        "bugNodeLength": 11,
        "fixLineNum": 575,
        "fixNodeStartChar": 18674,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Throwable t",
        "sourceAfterFix": "Exception t"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "01760ff324bfe4218c34d648c53af46d782f14c1",
        "fixCommitParentSHA1": "d3439a8c28d1b8dc89bb6be81273ee673e1fb39a",
        "bugFilePath": "core/server/src/main/java/alluxio/RpcUtils.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/RpcUtils.java b/core/server/src/main/java/alluxio/RpcUtils.java\nindex 5476d29..d91b92f 100644\n--- a/core/server/src/main/java/alluxio/RpcUtils.java\n+++ b/core/server/src/main/java/alluxio/RpcUtils.java\n@@ -64,7 +64,7 @@\n       LOG.debug(\"Internal Alluxio error when running rpc\", e);\n       throw e.toThrift();\n     } catch (IOException e) {\n-      LOG.error(\"I/O error when running rpc\", e);\n+      LOG.warn(\"I/O error when running rpc\", e);\n       throw new ThriftIOException(e.getMessage());\n     } catch (Exception e) {\n       LOG.error(\"Unexpected error running rpc\", e);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 67,
        "bugNodeStartChar": 2407,
        "bugNodeLength": 42,
        "fixLineNum": 67,
        "fixNodeStartChar": 2407,
        "fixNodeLength": 41,
        "sourceBeforeFix": "LOG.error(\"I/O error when running rpc\",e)",
        "sourceAfterFix": "LOG.warn(\"I/O error when running rpc\",e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "10821c9f522d7897c0f84eaa2b14af6d90f2d2fe",
        "fixCommitParentSHA1": "6e71dd4fd5db289306bf0b3336939c6e379f2c54",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 59,
        "bugNodeStartChar": 2109,
        "bugNodeLength": 19,
        "fixLineNum": 59,
        "fixNodeStartChar": 2051,
        "fixNodeLength": 17,
        "sourceBeforeFix": "floatBuffer.clear()",
        "sourceAfterFix": "intBuffer.clear()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "fbabe43be4be0d8fa0aa55b9d83f41940a4c750a",
        "fixCommitParentSHA1": "f37a73acb831f005df60d65103e2f57715dd6e06",
        "bugFilePath": "extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java",
        "fixPatch": "diff --git a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\nindex df1c1e7..a83f1c9 100644\n--- a/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n+++ b/extensions/gdx-tools/src/com/badlogic/gdx/tools/texturepacker/TexturePacker.java\n@@ -89,7 +89,7 @@\n \r\n \tpublic void pack (File outputDir, String packFileName) {\r\n \t\tif (packFileName.endsWith(settings.atlasExtension))\r\n-\t\t\tpackFileName = packFileName.substring(packFileName.length() - settings.atlasExtension.length());\r\n+\t\t\tpackFileName = packFileName.substring(0, packFileName.length() - settings.atlasExtension.length());\r\n \t\toutputDir.mkdirs();\r\n \r\n \t\tfor (int i = 0, n = settings.scale.length; i < n; i++) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 92,
        "bugNodeStartChar": 3373,
        "bugNodeLength": 80,
        "fixLineNum": 92,
        "fixNodeStartChar": 3282,
        "fixNodeLength": 83,
        "sourceBeforeFix": "packFileName.substring(packFileName.length() - settings.atlasExtension.length())",
        "sourceAfterFix": "packFileName.substring(0,packFileName.length() - settings.atlasExtension.length())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e283de68318f4e0568cc703c357e695c72d8bce1",
        "fixCommitParentSHA1": "baedacf9708d9c04b373f83df3d75b6aaf72aaa9",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\nindex c5da481..94e1ff8 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/RemoteTaskRunner.java\n@@ -661,7 +661,7 @@\n         );\n         tasksToFail.addAll(zkWorker.getRunningTaskIds());\n         for (String assignedTask : tasksToFail) {\n-          RemoteTaskRunnerWorkItem taskRunnerWorkItem = runningTasks.get(assignedTask);\n+          RemoteTaskRunnerWorkItem taskRunnerWorkItem = runningTasks.remove(assignedTask);\n           if (taskRunnerWorkItem != null) {\n             String taskPath = JOINER.join(config.getIndexerTaskPath(), worker.getHost(), assignedTask);\n             if (cf.checkExists().forPath(taskPath) != null) {\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 664,
        "bugNodeStartChar": 24078,
        "bugNodeLength": 30,
        "fixLineNum": 664,
        "fixNodeStartChar": 24078,
        "fixNodeLength": 33,
        "sourceBeforeFix": "runningTasks.get(assignedTask)",
        "sourceAfterFix": "runningTasks.remove(assignedTask)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c131546eaadd07baf950bd6a44d07ee42d109e4c",
        "fixCommitParentSHA1": "c27e2a77005db355da9e72656af8b0df8b1dfe75",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/FencedAkkaInvocationHandler.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/FencedAkkaInvocationHandler.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/FencedAkkaInvocationHandler.java\nindex 3ca75e2..564b1ef 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/FencedAkkaInvocationHandler.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rpc/akka/FencedAkkaInvocationHandler.java\n@@ -60,7 +60,7 @@\n \t\t\tActorRef rpcEndpoint,\n \t\t\tTime timeout,\n \t\t\tlong maximumFramesize,\n-\t\t\t@Nullable CompletableFuture<Boolean> terminationFuture,\n+\t\t\t@Nullable CompletableFuture<Void> terminationFuture,\n \t\t\tSupplier<F> fencingTokenSupplier) {\n \t\tsuper(address, hostname, rpcEndpoint, timeout, maximumFramesize, terminationFuture);\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 63,
        "bugNodeStartChar": 2515,
        "bugNodeLength": 26,
        "fixLineNum": 63,
        "fixNodeStartChar": 2515,
        "fixNodeLength": 23,
        "sourceBeforeFix": "CompletableFuture<Boolean>",
        "sourceAfterFix": "CompletableFuture<Void>"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "df63f141ab829146a5586f2b8da43eb8119b536b",
        "fixCommitParentSHA1": "64375acbe20fad9ae86b6fc16aab9ababb0f02a8",
        "bugFilePath": "components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/core/DropboxAPIFacade.java",
        "fixPatch": "diff --git a/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/core/DropboxAPIFacade.java b/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/core/DropboxAPIFacade.java\nindex 4bfb887..1b43179 100644\n--- a/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/core/DropboxAPIFacade.java\n+++ b/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/core/DropboxAPIFacade.java\n@@ -111,7 +111,7 @@\n         // verify uploading of a single file\n         if (fileLocalPath.isFile()) {\n             // check if dropbox file exists\n-            if (entry != null) {\n+            if (entry != null && !DropboxUploadMode.force.equals(mode)) {\n                 throw new DropboxException(dropboxPath + \" exists on dropbox and is not a file!\");\n             }\n             // in case the entry not exists on dropbox check if the filename\n@@ -139,7 +139,7 @@\n             // verify uploading of a list of files inside a dir\n             LOG.debug(\"Uploading a dir...\");\n             // check if dropbox folder exists\n-            if (entry != null) {\n+            if (entry != null && !DropboxUploadMode.force.equals(mode)) {\n                 throw new DropboxException(dropboxPath + \" exists on dropbox and is not a folder!\");\n             }\n             if (!dropboxPath.endsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 114,
        "bugNodeStartChar": 4848,
        "bugNodeLength": 13,
        "fixLineNum": 114,
        "fixNodeStartChar": 4848,
        "fixNodeLength": 54,
        "sourceBeforeFix": "entry != null",
        "sourceAfterFix": "entry != null && !DropboxUploadMode.force.equals(mode)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2a8f12e49c15a3a369ce9fa67f5b1953c9f23578",
        "fixCommitParentSHA1": "35cbc93c6d27b31b8430181e35f4b0ca665e2cd0",
        "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java",
        "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\nindex 0e7b4d7..c4e7291 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/TestHiveClientConfig.java\n@@ -58,7 +58,7 @@\n                 .setForceLocalScheduling(false)\n                 .setMaxConcurrentFileRenames(20)\n                 .setRecursiveDirWalkerEnabled(false)\n-                .setDfsTimeout(new Duration(10, TimeUnit.SECONDS))\n+                .setDfsTimeout(new Duration(60, TimeUnit.SECONDS))\n                 .setIpcPingInterval(new Duration(10, TimeUnit.SECONDS))\n                 .setDfsConnectTimeout(new Duration(500, TimeUnit.MILLISECONDS))\n                 .setDfsConnectMaxRetries(5)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 61,
        "bugNodeStartChar": 2575,
        "bugNodeLength": 34,
        "fixLineNum": 61,
        "fixNodeStartChar": 2575,
        "fixNodeLength": 34,
        "sourceBeforeFix": "new Duration(10,TimeUnit.SECONDS)",
        "sourceAfterFix": "new Duration(60,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c9a1cc9df3dc4fe2eef78ad6090a9b1d95a02557",
        "fixCommitParentSHA1": "adccab823675fb33685c5c0268388fc9857b7047",
        "bugFilePath": "clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java",
        "fixPatch": "diff --git a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java\nindex 63f2aad..7010021 100644\n--- a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java\n+++ b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/ExpirationResourceDefinition.java\n@@ -55,7 +55,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(60000))\n+            .setDefaultValue(new ModelNode().set(60000L))\n             .build();\n \n     static final SimpleAttributeDefinition LIFESPAN = new SimpleAttributeDefinitionBuilder(ModelKeys.LIFESPAN, ModelType.LONG, true)\n@@ -63,7 +63,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(-1))\n+            .setDefaultValue(new ModelNode().set(-1L))\n             .build();\n \n     static final SimpleAttributeDefinition MAX_IDLE = new SimpleAttributeDefinitionBuilder(ModelKeys.MAX_IDLE, ModelType.LONG, true)\n@@ -71,7 +71,7 @@\n             .setMeasurementUnit(MeasurementUnit.MILLISECONDS)\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(-1))\n+            .setDefaultValue(new ModelNode().set(-1L))\n             .build();\n \n     static final AttributeDefinition[] ATTRIBUTES = new AttributeDefinition[] { MAX_IDLE, LIFESPAN, INTERVAL };\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 66,
        "bugNodeStartChar": 3323,
        "bugNodeLength": 2,
        "fixLineNum": 66,
        "fixNodeStartChar": 3323,
        "fixNodeLength": 3,
        "sourceBeforeFix": "-1",
        "sourceAfterFix": "-1L"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "72b86ae3aa6b084fc0cacf3ad86506ac9cf6486b",
        "fixCommitParentSHA1": "351c32722321f87f36fd8014dbaf7b28774a7574",
        "bugFilePath": "bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java",
        "fixPatch": "diff --git a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\nindex 190cb8f..fd8bc4e 100644\n--- a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\n+++ b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\n@@ -225,7 +225,7 @@\n \t\ttry {\n \t\t\titem = getItem(itemName);\n \t\t} catch (ItemNotFoundException e) {\n-\t\t\tlogger.error(\"Cannot retrieve item {} for widget {}\", itemName, w.eClass().getInstanceTypeName());\n+\t\t\tlogger.debug(\"Cannot retrieve item {} for widget {}\", itemName, w.eClass().getInstanceTypeName());\n \t\t}\n \t\treturn formatLabel(item, itemName, label);\n \t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 228,
        "bugNodeStartChar": 7348,
        "bugNodeLength": 97,
        "fixLineNum": 228,
        "fixNodeStartChar": 7348,
        "fixNodeLength": 97,
        "sourceBeforeFix": "logger.error(\"Cannot retrieve item {} for widget {}\",itemName,w.eClass().getInstanceTypeName())",
        "sourceAfterFix": "logger.debug(\"Cannot retrieve item {} for widget {}\",itemName,w.eClass().getInstanceTypeName())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\nindex fcc2ed7..2a2030a 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n@@ -72,10 +72,10 @@\n         if (channel == null) {\n             initializeChannel();\n             if (endpoint.isSynchronous()) {\n-                LOG.info(\"Getting synchronous method stub from channel\");\n+                LOG.debug(\"Getting synchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcBlockingStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             } else {\n-                LOG.info(\"Getting asynchronous method stub from channel\");\n+                LOG.debug(\"Getting asynchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcAsyncStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             }\n         }\n@@ -84,7 +84,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (channel != null) {\n-            LOG.trace(\"Terminating channel to the remote gRPC server\");\n+            LOG.debug(\"Terminating channel to the remote gRPC server\");\n             channel.shutdown().shutdownNow();\n             channel = null;\n             grpcStub = null;\n",
        "projectName": "apache.camel",
        "bugLineNum": 87,
        "bugNodeStartChar": 3480,
        "bugNodeLength": 58,
        "fixLineNum": 87,
        "fixNodeStartChar": 3480,
        "fixNodeLength": 58,
        "sourceBeforeFix": "LOG.trace(\"Terminating channel to the remote gRPC server\")",
        "sourceAfterFix": "LOG.debug(\"Terminating channel to the remote gRPC server\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dfdb8015332767b0678bff667e07b82a084a86fd",
        "fixCommitParentSHA1": "4b9cb6afeed1b85ca1084bd1d2b72c4bdbf836c0",
        "bugFilePath": "spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/ui/MessageControllerWebTests.java",
        "fixPatch": "diff --git a/spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/ui/MessageControllerWebTests.java b/spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/ui/MessageControllerWebTests.java\nindex e734013..7e0d7a4 100755\n--- a/spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/ui/MessageControllerWebTests.java\n+++ b/spring-boot-samples/spring-boot-sample-web-groovy-templates/src/test/java/sample/ui/MessageControllerWebTests.java\n@@ -70,7 +70,7 @@\n \t@Test\n \tpublic void testCreate() throws Exception {\n \t\tthis.mockMvc.perform(post(\"/\").param(\"text\", \"FOO text\").param(\"summary\", \"FOO\"))\n-\t\t\t\t.andExpect(status().isMovedTemporarily())\n+\t\t\t\t.andExpect(status().isFound())\n \t\t\t\t.andExpect(header().string(\"location\", RegexMatcher.matches(\"/[0-9]+\")));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 73,
        "bugNodeStartChar": 2664,
        "bugNodeLength": 29,
        "fixLineNum": 73,
        "fixNodeStartChar": 2664,
        "fixNodeLength": 18,
        "sourceBeforeFix": "status().isMovedTemporarily()",
        "sourceAfterFix": "status().isFound()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e78398ed32106c1c71bc47a1d5058fe3c8e5b9dd",
        "fixCommitParentSHA1": "6c8995d048138d7555d4a03af5a4f57fd3599dce",
        "bugFilePath": "dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java",
        "fixPatch": "diff --git a/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java b/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\nindex ed23f8e..4da6af8 100644\n--- a/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\n+++ b/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\n@@ -95,7 +95,7 @@\n         Type t2 = LocalType.type(e2.op1.value);\r\n         if (t2 == null && e2.op1.value.vt == VT.ARRAY) {\r\n             Type t3 = detectArray((E2Expr) e2.op1.value);\r\n-            if (t3 != null && t3.getSize() == Type.ARRAY) {\r\n+            if (t3 != null && t3.getSort() == Type.ARRAY) {\r\n                 Type t4 = Type.getType(t3.getDescriptor().substring(1));\r\n                 LocalType.type(e2, t4);\r\n                 return t4;\r\n",
        "projectName": "pxb1988.dex2jar",
        "bugLineNum": 98,
        "bugNodeStartChar": 3024,
        "bugNodeLength": 12,
        "fixLineNum": 98,
        "fixNodeStartChar": 2927,
        "fixNodeLength": 12,
        "sourceBeforeFix": "t3.getSize()",
        "sourceAfterFix": "t3.getSort()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "10c93df27435ffbc037cde5e6063c9dbc6c0eb3f",
        "fixCommitParentSHA1": "c7a5a207a917985a39726fcbc21d8cd5b79e10d8",
        "bugFilePath": "presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java",
        "fixPatch": "diff --git a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\nindex 819fc93..7b62737 100644\n--- a/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n+++ b/presto-cli/src/main/java/com/facebook/presto/cli/ClientOptions.java\n@@ -171,7 +171,7 @@\n \n         HostAndPort host = HostAndPort.fromString(server);\n         try {\n-            return new URI(\"http\", null, host.getHostText(), host.getPortOrDefault(80), null, null, null);\n+            return new URI(\"http\", null, host.getHost(), host.getPortOrDefault(80), null, null, null);\n         }\n         catch (URISyntaxException e) {\n             throw new IllegalArgumentException(e);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 174,
        "bugNodeStartChar": 7290,
        "bugNodeLength": 18,
        "fixLineNum": 174,
        "fixNodeStartChar": 7290,
        "fixNodeLength": 14,
        "sourceBeforeFix": "host.getHostText()",
        "sourceAfterFix": "host.getHost()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f56843207bb30d1e5e5f78484e7a3afc161585c6",
        "fixCommitParentSHA1": "ee3269b0d126056f3c8d63556ac6037aa1315c67",
        "bugFilePath": "src/api/org/openmrs/hl7/handler/ORUR01Handler.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/hl7/handler/ORUR01Handler.java b/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\nindex de5ed9e..68d8290 100644\n--- a/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\n+++ b/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\n@@ -260,7 +260,7 @@\n \t\t\tlog.debug(\"Current thread: \" + Thread.currentThread());\r\n \t\t\tlog.debug(\"Creating the encounter object\");\r\n \t\t}\r\n-\t\tContext.getEncounterService().createEncounter(encounter);\r\n+\t\tContext.getEncounterService().saveEncounter(encounter);\r\n \t\t\r\n \t\t// Notify HL7 service that we have created a new encounter, allowing\r\n \t\t// features/modules to trigger on HL7-generated encounters.\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 263,
        "bugNodeStartChar": 9273,
        "bugNodeLength": 56,
        "fixLineNum": 263,
        "fixNodeStartChar": 9011,
        "fixNodeLength": 54,
        "sourceBeforeFix": "Context.getEncounterService().createEncounter(encounter)",
        "sourceAfterFix": "Context.getEncounterService().saveEncounter(encounter)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0ff511d978c273a8eae317ecf9f4f1b98e2efb07",
        "fixCommitParentSHA1": "26a528ce95016c0d6f3a239b97aed4e0ecc9a763",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java\nindex b307ace..147239f 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java\n@@ -330,7 +330,7 @@\n \t\t\t}\n \t\t\treturn context;\n \t\t}\n-\t\tcatch (Exception ex) {\n+\t\tcatch (Throwable ex) {\n \t\t\ttry {\n \t\t\t\tfor (SpringApplicationRunListener runListener : runListeners) {\n \t\t\t\t\tfinishWithException(runListener, context, ex);\n@@ -696,7 +696,7 @@\n \t}\n \n \tprivate void finishWithException(SpringApplicationRunListener runListener,\n-\t\t\tConfigurableApplicationContext context, Exception exception) {\n+\t\t\tConfigurableApplicationContext context, Throwable exception) {\n \t\ttry {\n \t\t\trunListener.finished(context, exception);\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 333,
        "bugNodeStartChar": 12004,
        "bugNodeLength": 12,
        "fixLineNum": 333,
        "fixNodeStartChar": 12004,
        "fixNodeLength": 12,
        "sourceBeforeFix": "Exception ex",
        "sourceAfterFix": "Throwable ex"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1e5fc1daab8364f1d16614e9013135a115e66e2c",
        "fixCommitParentSHA1": "6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd",
        "bugFilePath": "core/test/com/google/inject/MethodInterceptionTest.java",
        "fixPatch": "diff --git a/core/test/com/google/inject/MethodInterceptionTest.java b/core/test/com/google/inject/MethodInterceptionTest.java\nindex 7331c32..1ce6966 100644\n--- a/core/test/com/google/inject/MethodInterceptionTest.java\n+++ b/core/test/com/google/inject/MethodInterceptionTest.java\n@@ -172,7 +172,7 @@\n       fail();\n     } catch (Exception e) {\n       // validate all causes.\n-      for (Throwable t = e; t != null; t = e.getCause()) {\n+      for (Throwable t = e; t != null; t = t.getCause()) {\n         StackTraceElement[] stackTraceElement = t.getStackTrace();\n         assertEquals(\"explode\", stackTraceElement[0].getMethodName());\n         assertEquals(\"invoke\", stackTraceElement[1].getMethodName());\n",
        "projectName": "google.guice",
        "bugLineNum": 175,
        "bugNodeStartChar": 6626,
        "bugNodeLength": 12,
        "fixLineNum": 175,
        "fixNodeStartChar": 6626,
        "fixNodeLength": 12,
        "sourceBeforeFix": "e.getCause()",
        "sourceAfterFix": "t.getCause()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1dc7ebfc26b5ef1f88e84702582715eb631202db",
        "fixCommitParentSHA1": "d9e13ceacf00bcfa4df8cb6a0b56fc344f6a9f96",
        "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java",
        "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\nindex b838bab..600a4ac 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n@@ -103,7 +103,7 @@\n \n     // Not part an Index model instance method because opening/closing can be applied to indices without calculated ranges.\n     public void delete(String index) throws APIException, IOException {\n-        api.path(routes.IndicesResource().single(index))\n+        api.path(routes.IndicesResource().delete(index))\n                 .timeout(apiTimeout(\"index_delete\", 60, TimeUnit.SECONDS))\n                 .expect(204)\n                 .execute();\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 106,
        "bugNodeStartChar": 4041,
        "bugNodeLength": 38,
        "fixLineNum": 106,
        "fixNodeStartChar": 4041,
        "fixNodeLength": 38,
        "sourceBeforeFix": "routes.IndicesResource().single(index)",
        "sourceAfterFix": "routes.IndicesResource().delete(index)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "19907030d105079fee4fe6db70431f7f6b928149",
        "fixCommitParentSHA1": "75a2ddd61c3df0b7a1e6db1cc5c588177b24c3cf",
        "bugFilePath": "buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java",
        "fixPatch": "diff --git a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\nindex 5cbd676..9cbf069 100644\n--- a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n+++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n@@ -251,7 +251,8 @@\n             short v = PlatformDependent.getShort(array, index);\n             return BIG_ENDIAN_NATIVE_ORDER ? v : Short.reverseBytes(v);\n         }\n-        return (short) (PlatformDependent.getByte(index) << 8 | PlatformDependent.getByte(index + 1) & 0xff);\n+        return (short) (PlatformDependent.getByte(array, index) << 8 |\n+                PlatformDependent.getByte(array, index + 1) & 0xff);\n     }\n \n     static short getShortLE(byte[] array, int index) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 254,
        "bugNodeStartChar": 11275,
        "bugNodeLength": 32,
        "fixLineNum": 254,
        "fixNodeStartChar": 11275,
        "fixNodeLength": 39,
        "sourceBeforeFix": "PlatformDependent.getByte(index)",
        "sourceAfterFix": "PlatformDependent.getByte(array,index)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6618cef776cf1c9ce67ff8ee461412110ca5ada7",
        "fixCommitParentSHA1": "948ab73523bed79d1672884207fd3a06f33d9572",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\nindex b9250d6..f157006 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n@@ -139,7 +139,7 @@\n \t\t\t\tqueryServiceAddressesFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<String> queryServiceAddresses, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting paths for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting paths for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tfor (String queryServiceAddress : queryServiceAddresses) {\n \t\t\t\t\t\t\t\tretrieveAndQueryMetrics(queryServiceAddress);\n@@ -157,7 +157,7 @@\n \t\t\t\ttaskManagerQueryServiceGatewaysFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<Tuple2<ResourceID, String>> queryServiceGateways, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting TaskManager's path for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting TaskManager's path for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tList<String> taskManagersToRetain = queryServiceGateways\n \t\t\t\t\t\t\t\t.stream()\n@@ -175,7 +175,7 @@\n \t\t\t\t\texecutor);\n \t\t\t}\n \t\t} catch (Exception e) {\n-\t\t\tLOG.warn(\"Exception while fetching metrics.\", e);\n+\t\t\tLOG.debug(\"Exception while fetching metrics.\", e);\n \t\t}\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 160,
        "bugNodeStartChar": 6286,
        "bugNodeLength": 79,
        "fixLineNum": 160,
        "fixNodeStartChar": 6286,
        "fixNodeLength": 80,
        "sourceBeforeFix": "LOG.warn(\"Requesting TaskManager's path for query services failed.\",throwable)",
        "sourceAfterFix": "LOG.debug(\"Requesting TaskManager's path for query services failed.\",throwable)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "13dc20d21b6b2e186cd7825fbf854e00810ba873",
        "fixCommitParentSHA1": "4fcec1b06595877bb2d41451006544eb0dde37d2",
        "bugFilePath": "components/camel-web/src/main/java/org/apache/camel/web/resources/RouteResource.java",
        "fixPatch": "diff --git a/components/camel-web/src/main/java/org/apache/camel/web/resources/RouteResource.java b/components/camel-web/src/main/java/org/apache/camel/web/resources/RouteResource.java\nindex 94ae2d2..a91a137 100644\n--- a/components/camel-web/src/main/java/org/apache/camel/web/resources/RouteResource.java\n+++ b/components/camel-web/src/main/java/org/apache/camel/web/resources/RouteResource.java\n@@ -158,7 +158,7 @@\n         DefaultCamelContext defaultCamelContext = (DefaultCamelContext)getCamelContext();\n         // stop and remove the original route\n         defaultCamelContext.stopRoute(id);\n-        defaultCamelContext.removeRouteDefinition(id);\n+        defaultCamelContext.removeRoute(id);\n \n         // add the routes in a route builder\n         defaultCamelContext.addRoutes(builder);\n",
        "projectName": "apache.camel",
        "bugLineNum": 161,
        "bugNodeStartChar": 5747,
        "bugNodeLength": 45,
        "fixLineNum": 161,
        "fixNodeStartChar": 5747,
        "fixNodeLength": 35,
        "sourceBeforeFix": "defaultCamelContext.removeRouteDefinition(id)",
        "sourceAfterFix": "defaultCamelContext.removeRoute(id)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c6e641e81964da8454021be53adb1e585eaf38e0",
        "fixCommitParentSHA1": "01dc787261af1989715258e7fe3b2d635e135d73",
        "bugFilePath": "client/src/main/java/com/metamx/druid/client/cache/MemcachedCacheBroker.java",
        "fixPatch": "diff --git a/client/src/main/java/com/metamx/druid/client/cache/MemcachedCacheBroker.java b/client/src/main/java/com/metamx/druid/client/cache/MemcachedCacheBroker.java\nindex 3ad6de4..5486a9e 100644\n--- a/client/src/main/java/com/metamx/druid/client/cache/MemcachedCacheBroker.java\n+++ b/client/src/main/java/com/metamx/druid/client/cache/MemcachedCacheBroker.java\n@@ -131,6 +131,6 @@\n   }\n \n   private String computeKey(String identifier, byte[] key) {\n-    return identifier + Base64.encodeBytes(key);\n+    return identifier + Base64.encodeBytes(key, Base64.DONT_BREAK_LINES);\n   }\n }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 134,
        "bugNodeStartChar": 4033,
        "bugNodeLength": 23,
        "fixLineNum": 134,
        "fixNodeStartChar": 4033,
        "fixNodeLength": 48,
        "sourceBeforeFix": "Base64.encodeBytes(key)",
        "sourceAfterFix": "Base64.encodeBytes(key,Base64.DONT_BREAK_LINES)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1d558cc635e458d5a50e3548a1e810f3d6944864",
        "fixCommitParentSHA1": "50da26094577b2535dbbfdc245fe568e3ad9574c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java b/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\nindex 7eb7497..947d38b 100644\n--- a/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/testing/NullOutputOperator.java\n@@ -33,9 +33,9 @@\n             implements OutputFactory\n     {\n         @Override\n-        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceType)\n+        public OperatorFactory createOutputOperator(int operatorId, List<Type> sourceTypes)\n         {\n-            return new NullOutputOperatorFactory(operatorId, sourceType);\n+            return new NullOutputOperatorFactory(operatorId, sourceTypes);\n         }\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 38,
        "bugNodeStartChar": 1357,
        "bugNodeLength": 53,
        "fixLineNum": 38,
        "fixNodeStartChar": 1357,
        "fixNodeLength": 54,
        "sourceBeforeFix": "new NullOutputOperatorFactory(operatorId,sourceType)",
        "sourceAfterFix": "new NullOutputOperatorFactory(operatorId,sourceTypes)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "ce9e66ca3737f8eb15884a42c7dd5a090c65fa11",
        "fixCommitParentSHA1": "a8d01090e54c94d76357f5234b83a9e3df9d3577",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/config/MapIndexConfig.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/config/MapIndexConfig.java b/hazelcast/src/main/java/com/hazelcast/config/MapIndexConfig.java\nindex b7b7ad4..ad20f76 100644\n--- a/hazelcast/src/main/java/com/hazelcast/config/MapIndexConfig.java\n+++ b/hazelcast/src/main/java/com/hazelcast/config/MapIndexConfig.java\n@@ -125,7 +125,7 @@\n     public static String validateIndexAttribute(String attribute) {\n         checkHasText(attribute, \"Map index attribute must contain text\");\n         String keyPrefix = KEY_ATTRIBUTE_NAME.value();\n-        if (attribute.startsWith(keyPrefix) & attribute.length() > keyPrefix.length()) {\n+        if (attribute.startsWith(keyPrefix) && attribute.length() > keyPrefix.length()) {\n             if (attribute.charAt(keyPrefix.length()) != '#') {\n                 LOG.warning(KEY_ATTRIBUTE_NAME.value() + \" used without a following '#' char in index attribute '\"\n                         + attribute + \"'. Don't you want to index a key?\");\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 128,
        "bugNodeStartChar": 4118,
        "bugNodeLength": 73,
        "fixLineNum": 128,
        "fixNodeStartChar": 4118,
        "fixNodeLength": 74,
        "sourceBeforeFix": "attribute.startsWith(keyPrefix) & attribute.length() > keyPrefix.length()",
        "sourceAfterFix": "attribute.startsWith(keyPrefix) && attribute.length() > keyPrefix.length()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "a18e8b3a4a095ccb7c02dec0f93510a2bc4a3f27",
        "fixCommitParentSHA1": "23d2bf5fe7821b00999cae8dfa6e75ecc7f43cd7",
        "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 531b4ba..fbbb6d3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -450,13 +450,13 @@\n                     return;\n                 case '?':\n                     scanChar();\n-                    if (ch == '?') {\n+                    if (ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESQUES;\n-                    } else if (ch == '|') {\n+                    } else if (ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESBAR;\n-                    } else if (ch == '&') {\n+                    } else if (ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESAMP;\n                     } else {\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 456,
        "bugNodeStartChar": 12281,
        "bugNodeLength": 9,
        "fixLineNum": 456,
        "fixNodeStartChar": 12281,
        "fixNodeLength": 52,
        "sourceBeforeFix": "ch == '|'",
        "sourceAfterFix": "ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "ea0f1f726181ba1a06ea0ca0735d090884e1baf9",
        "fixCommitParentSHA1": "690cc7f03efcee1d1b62180f3d8e871a820db9b9",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/container/Jetty7CometSupport.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/container/Jetty7CometSupport.java b/modules/cpr/src/main/java/org/atmosphere/container/Jetty7CometSupport.java\nindex 2cf969d..21f1b0b 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/container/Jetty7CometSupport.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/container/Jetty7CometSupport.java\n@@ -175,7 +175,7 @@\n     public void action(AtmosphereResourceImpl r) {\n         super.action(r);\n \n-        ServletRequest request = r.getRequest(false);\n+        ServletRequest request = r.getRequest(true);\n         while (request != null) {\n             try {\n                 Continuation c = (Continuation) request.getAttribute(Continuation.class.getName());\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 178,
        "bugNodeStartChar": 7631,
        "bugNodeLength": 19,
        "fixLineNum": 178,
        "fixNodeStartChar": 7631,
        "fixNodeLength": 18,
        "sourceBeforeFix": "r.getRequest(false)",
        "sourceAfterFix": "r.getRequest(true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da",
        "fixCommitParentSHA1": "1435dad364fb6547de60d6f142211ccd6649bd06",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\nindex f3ece18..3c2b618 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n@@ -188,7 +188,7 @@\n         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {\n@@ -196,7 +196,7 @@\n                 } else {\n                     statistics.increaseCacheHits(1);\n                 }\n-                statistics.addGetTimeNano(System.nanoTime() - start);\n+                statistics.addGetTimeNanos(System.nanoTime() - start);\n             }\n         }\n     }\n@@ -230,7 +230,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n-            statistics.addPutTimeNano(System.nanoTime() - start);\n+            statistics.addPutTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -252,11 +252,11 @@\n             deleteRecord(key);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCacheRemovals(1);\n-                statistics.addRemoveTimeNano(System.nanoTime() - start);\n+                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -281,7 +281,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -315,7 +315,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             if (hitCount == 1) {\n                 statistics.increaseCacheHits(hitCount);\n             } else {\n@@ -357,11 +357,11 @@\n             result = updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result) {\n                 statistics.increaseCachePuts(1);\n                 statistics.increaseCacheHits(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -400,9 +400,9 @@\n         if (isStatisticsEnabled()) {\n             if (result) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (isHit) {\n                 statistics.increaseCacheHits(1);\n             } else {\n@@ -428,11 +428,11 @@\n             updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -587,7 +587,7 @@\n             }\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 431,
        "bugNodeStartChar": 17205,
        "bugNodeLength": 52,
        "fixLineNum": 431,
        "fixNodeStartChar": 17205,
        "fixNodeLength": 53,
        "sourceBeforeFix": "statistics.addGetTimeNano(System.nanoTime() - start)",
        "sourceAfterFix": "statistics.addGetTimeNanos(System.nanoTime() - start)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "b55782ed056e6265eeee028f891f291eb11d736b",
        "fixCommitParentSHA1": "ce35362c49c9da5da79715b8f5729ba3c3f7b1fe",
        "bugFilePath": "arquillian/container-common/src/test/java/org/jboss/as/arquillian/container/common/ModuleApplicationProcessorTestCase.java",
        "fixPatch": "diff --git a/arquillian/container-common/src/test/java/org/jboss/as/arquillian/container/common/ModuleApplicationProcessorTestCase.java b/arquillian/container-common/src/test/java/org/jboss/as/arquillian/container/common/ModuleApplicationProcessorTestCase.java\nindex 83e7b48..6486c4a 100644\n--- a/arquillian/container-common/src/test/java/org/jboss/as/arquillian/container/common/ModuleApplicationProcessorTestCase.java\n+++ b/arquillian/container-common/src/test/java/org/jboss/as/arquillian/container/common/ModuleApplicationProcessorTestCase.java\n@@ -77,7 +77,7 @@\n         Node node = archive.get(MANIFEST);\n         Assert.assertNotNull(node);\n \n-        Manifest mf = processor.getOrCreateManifest(archive);\n+        Manifest mf = ManifestUtils.getOrCreateManifest(archive);\n         Attributes attributes = mf.getMainAttributes();\n         String value = attributes.getValue(\"Dependencies\");\n         Set<String> deps = new HashSet<String>();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 80,
        "bugNodeStartChar": 3034,
        "bugNodeLength": 38,
        "fixLineNum": 80,
        "fixNodeStartChar": 3034,
        "fixNodeLength": 42,
        "sourceBeforeFix": "processor.getOrCreateManifest(archive)",
        "sourceAfterFix": "ManifestUtils.getOrCreateManifest(archive)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926",
        "fixCommitParentSHA1": "1b31f4d19df1fabc7aaee5837f4d2c3439819495",
        "bugFilePath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
        "fixPatch": "diff --git a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\nindex 7cab2df..86b3322 100644\n--- a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n+++ b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n@@ -353,10 +353,10 @@\n \t * \n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> print() {\n+\tpublic DataStreamSink<OUT> print() {\n \t\tDataStream<OUT> inputStream = this.copy();\n \t\tPrintSinkFunction<OUT> printFunction = new PrintSinkFunction<OUT>();\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, printFunction, null);\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, printFunction, null);\n \n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \n@@ -373,7 +373,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}\n \n@@ -390,7 +390,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}\n \n@@ -408,7 +408,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}\n \n@@ -430,7 +430,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, endTuple);\n \t}\n \n@@ -453,7 +453,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, endTuple);\n \t}\n \n@@ -475,9 +475,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -503,9 +503,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -522,7 +522,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), 1, null);\n \t}\n \n@@ -539,7 +539,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, null);\n \t}\n \n@@ -557,7 +557,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), batchSize, null);\n \t}\n \n@@ -579,7 +579,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, endTuple);\n \t}\n \n@@ -602,7 +602,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}\n@@ -627,9 +627,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple));\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -655,9 +655,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -792,18 +792,18 @@\n \t *            The object containing the sink's invoke function.\n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n+\tpublic DataStreamSink<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(this.copy(), sinkFunction);\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(inputStream, sinkFunction, new FunctionTypeWrapper<OUT, Tuple, OUT>(\n \t\t\t\tsinkFunction, SinkFunction.class, 0, -1, 0));\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n \t\t\tTypeSerializerWrapper<OUT, Tuple, OUT> typeWrapper) {\n-\t\tDataStream<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n+\t\tDataStreamSink<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n \n \t\ttry {\n \t\t\tjobGraphBuilder.addSink(returnStream.getId(), new SinkInvokable<OUT>(sinkFunction),\n",
        "projectName": "apache.flink",
        "bugLineNum": 456,
        "bugNodeStartChar": 17321,
        "bugNodeLength": 15,
        "fixLineNum": 456,
        "fixNodeStartChar": 17321,
        "fixNodeLength": 19,
        "sourceBeforeFix": "DataStream<OUT>",
        "sourceAfterFix": "DataStreamSink<OUT>"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0b3166b35fac48f68ba84f1110421d99c4222244",
        "fixCommitParentSHA1": "4a8eb0aac0677a6aeb66472f4cac1c0e3cdf0fcc",
        "bugFilePath": "bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComWindMessage.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComWindMessage.java b/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComWindMessage.java\nindex 54b8255..1c8d002 100644\n--- a/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComWindMessage.java\n+++ b/bundles/binding/org.openhab.binding.rfxcom/src/main/java/org/openhab/binding/rfxcom/internal/messages/RFXComWindMessage.java\n@@ -137,7 +137,7 @@\n \r\n     @Override\r\n     public byte[] decodeMessage() {\r\n-        byte[] data = new byte[16];\r\n+        byte[] data = new byte[17];\r\n \r\n         data[0] = 0x10;\r\n         data[1] = RFXComBaseMessage.PacketType.RAIN.toByte();\r\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 140,
        "bugNodeStartChar": 4505,
        "bugNodeLength": 12,
        "fixLineNum": 140,
        "fixNodeStartChar": 4366,
        "fixNodeLength": 12,
        "sourceBeforeFix": "new byte[16]",
        "sourceAfterFix": "new byte[17]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5d105e75982c88ffc958ef9de14266ae8522a0f9",
        "fixCommitParentSHA1": "5e982752515dd52745d11d6dce6d6038dc482348",
        "bugFilePath": "server/src/main/java/io/druid/client/CachingQueryRunner.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/client/CachingQueryRunner.java b/server/src/main/java/io/druid/client/CachingQueryRunner.java\nindex d92db64..ad2718e 100644\n--- a/server/src/main/java/io/druid/client/CachingQueryRunner.java\n+++ b/server/src/main/java/io/druid/client/CachingQueryRunner.java\n@@ -82,7 +82,7 @@\n \n     final boolean useCache = query.getContextUseCache(true)\n         && strategy != null\n-        && cacheConfig.isPopulateCache();\n+        && cacheConfig.isUseCache();\n \n     final Cache.NamedKey key;\n     if(strategy != null && (useCache || populateCache)) {\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 85,
        "bugNodeStartChar": 2889,
        "bugNodeLength": 29,
        "fixLineNum": 85,
        "fixNodeStartChar": 2889,
        "fixNodeLength": 24,
        "sourceBeforeFix": "cacheConfig.isPopulateCache()",
        "sourceAfterFix": "cacheConfig.isUseCache()"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "96d28a7ac975cd67a0697d7010e89473bb0716e1",
        "fixCommitParentSHA1": "6c08d90042e8c018c52f16e2272b1e7dbb3fad89",
        "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java",
        "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\nindex d74374d..03ba598 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java\n@@ -226,7 +226,7 @@\n         // Write huge chunks direct to OutputStream\n         if (length >= DIRECT_FLUSH_SIZE) {\n             flushBufferToOutputStream();\n-            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (slice.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n+            writeDirectlyToOutputStream((byte[]) source.getBase(), sourceIndex + (int) (source.getAddress() - ARRAY_BYTE_BASE_OFFSET), length);\n             bufferOffset += length;\n         }\n         else {\n",
        "projectName": "facebook.presto",
        "bugLineNum": 229,
        "bugNodeStartChar": 6691,
        "bugNodeLength": 18,
        "fixLineNum": 229,
        "fixNodeStartChar": 6691,
        "fixNodeLength": 19,
        "sourceBeforeFix": "slice.getAddress()",
        "sourceAfterFix": "source.getAddress()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cb740fb45277664eb13dd1e4cae4c98485f88174",
        "fixCommitParentSHA1": "0fd04fda9ee52cc3950bdd17cb76ae60fb6165fc",
        "bugFilePath": "src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java b/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\nindex b9e6eb6..2f0f37d 100644\n--- a/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\n+++ b/src/edu/stanford/nlp/sentiment/SentimentCostAndGradient.java\n@@ -232,7 +232,7 @@\n     SimpleMatrix fullVector = RNNUtils.concatenate(leftVector, rightVector);\n     for (int slice = 0; slice < size; ++slice) {\n       SimpleMatrix scaledFullVector = fullVector.scale(deltaFull.get(slice));\n-      deltaTensor = deltaTensor.plus(Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose()).mult(scaledFullVector));\n+      deltaTensor = deltaTensor.plus(Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose()).mult(scaledFullVector));\n     }\n     return deltaTensor.plus(WTDeltaNoBias);\n   }\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 235,
        "bugNodeStartChar": 11518,
        "bugNodeLength": 55,
        "fixLineNum": 235,
        "fixNodeStartChar": 11518,
        "fixNodeLength": 55,
        "sourceBeforeFix": "Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose())",
        "sourceAfterFix": "Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "16123c79a01ae52fe40c908fbb94502e17cbe653",
        "fixCommitParentSHA1": "a19b9a3fefd575b8d683569b3911bad5f56fbec1",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\nindex dec0b29..0715992 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java\n@@ -188,12 +188,12 @@\n \t\tif (tiled != null) return tiled;\r\n \r\n \t\tDrawable drawable = optional(name, Drawable.class);\r\n-\t\tif (tiled != null) {\r\n+\t\tif (drawable != null) {\r\n \t\t\tif (!(drawable instanceof TiledDrawable)) {\r\n \t\t\t\tthrow new GdxRuntimeException(\"Drawable found but is not a TiledDrawable: \" + name + \", \"\r\n \t\t\t\t\t+ drawable.getClass().getName());\r\n \t\t\t}\r\n-\t\t\treturn tiled;\r\n+\t\t\treturn (TiledDrawable)drawable;\r\n \t\t}\r\n \r\n \t\ttiled = new TiledDrawable(getRegion(name));\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 191,
        "bugNodeStartChar": 8265,
        "bugNodeLength": 13,
        "fixLineNum": 191,
        "fixNodeStartChar": 8075,
        "fixNodeLength": 16,
        "sourceBeforeFix": "tiled != null",
        "sourceAfterFix": "drawable != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9cc9147adcd5143e5b1253b279f2e436adcbe7a3",
        "fixCommitParentSHA1": "becc961ecab5db5f66c9bcc4291f6c56e862fea3",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java b/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\nindex d2dfa3b..ce7120b 100644\n--- a/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\n+++ b/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\n@@ -863,9 +863,9 @@\n     \tfor (org.w3c.dom.Node child : new IterableNodeList(node.getChildNodes())) {\n     \t\tfinal String nodeName = cleanNodeName(child.getNodeName());\n     \t\tif(\"endpoints\".equals(nodeName)) {\n-    \t\t\thandleSecurityPermissionEndpoints(principalNode, permConfig);\n+    \t\t\thandleSecurityPermissionEndpoints(child, permConfig);\n     \t\t} else if(\"actions\".equals(nodeName)) {\n-    \t\t\thandleSecurityPermissionActions(principalNode, permConfig);\n+    \t\t\thandleSecurityPermissionActions(child, permConfig);\n     \t\t}\n     \t}\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 868,
        "bugNodeStartChar": 41365,
        "bugNodeLength": 58,
        "fixLineNum": 868,
        "fixNodeStartChar": 41365,
        "fixNodeLength": 50,
        "sourceBeforeFix": "handleSecurityPermissionActions(principalNode,permConfig)",
        "sourceAfterFix": "handleSecurityPermissionActions(child,permConfig)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "007ea4a7f2ba64fad78f78c1b798ca45455719e4",
        "fixCommitParentSHA1": "3688bb8b2bc1509380cbb160eb07861d1873f706",
        "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java",
        "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\nindex c0ac835..e00d1a1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/json/ObjectMapperFactory.java\n@@ -506,15 +506,15 @@\n         }\n \n         for (Map.Entry<JsonGenerator.Feature, Boolean> entry : generatorFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonParser.Feature, Boolean> entry : parserFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         for (Map.Entry<JsonFactory.Feature, Boolean> entry : factoryFeatures.entrySet()) {\n-            mapper.getJsonFactory().configure(entry.getKey(), entry.getValue());\n+            mapper.getFactory().configure(entry.getKey(), entry.getValue());\n         }\n \n         if (annotationIntrospector != null) {\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 509,
        "bugNodeStartChar": 16719,
        "bugNodeLength": 23,
        "fixLineNum": 509,
        "fixNodeStartChar": 16719,
        "fixNodeLength": 19,
        "sourceBeforeFix": "mapper.getJsonFactory()",
        "sourceAfterFix": "mapper.getFactory()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "62bef4ce7538572206d1f689d60a5a45d88f26af",
        "fixCommitParentSHA1": "52191d194f2a2429cc036a483b7aebb041a7b533",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/MapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/MapService.java b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\nindex 2fde1d3..fa78d49 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n@@ -874,9 +874,9 @@\n                 long total = Runtime.getRuntime().totalMemory();\n                 long used = (total - Runtime.getRuntime().freeMemory());\n                 if (maxSizePolicy == MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE) {\n-                    return maxSize > (used / 1024 / 1024);\n+                    return maxSize < (used / 1024 / 1024);\n                 } else {\n-                    return maxSize > (used / total);\n+                    return maxSize < (used / total);\n                 }\n             }\n             return false;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 879,
        "bugNodeStartChar": 41286,
        "bugNodeLength": 24,
        "fixLineNum": 879,
        "fixNodeStartChar": 41286,
        "fixNodeLength": 24,
        "sourceBeforeFix": "maxSize > (used / total)",
        "sourceAfterFix": "maxSize < (used / total)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b7c938af78d2414c72fbafed55816b176355036e",
        "fixCommitParentSHA1": "42826c96d9f9e5b8dc8cd14773face865a4c89a7",
        "bugFilePath": "patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java",
        "fixPatch": "diff --git a/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java b/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\nindex 1c654f2..24de1b6 100644\n--- a/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\n+++ b/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\n@@ -132,13 +132,13 @@\n             if(operation.hasDefined(Constants.OVERRIDE)) {\n                 final ModelNode overrides = operation.get(Constants.OVERRIDE);\n                 for(final ModelNode override : overrides.asList()) {\n-                    builder.overrideItem(override.toString());\n+                    builder.overrideItem(override.asString());\n                 }\n             }\n             if(operation.hasDefined(Constants.PRESERVE)) {\n                 final ModelNode preserves = operation.get(Constants.PRESERVE);\n                 for(final ModelNode preserve : preserves.asList()) {\n-                    builder.preserveItem(preserve.toString());\n+                    builder.preserveItem(preserve.asString());\n                 }\n             }\n             return builder.createPolicy();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 141,
        "bugNodeStartChar": 5089,
        "bugNodeLength": 19,
        "fixLineNum": 141,
        "fixNodeStartChar": 5089,
        "fixNodeLength": 19,
        "sourceBeforeFix": "preserve.toString()",
        "sourceAfterFix": "preserve.asString()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "79946366e1ab141ef2b595e0079dcac7b913da2b",
        "fixCommitParentSHA1": "840e7143a58542da18227e443df935e1ea429fc9",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\nindex a729bab..80827df 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n@@ -76,7 +76,8 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n     }\n \n     @Test\n@@ -87,7 +88,9 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -99,7 +102,8 @@\n         };\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -108,7 +112,8 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig, getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -117,7 +122,9 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -127,7 +134,8 @@\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 79,
        "bugNodeStartChar": 3168,
        "bugNodeLength": 52,
        "fixLineNum": 80,
        "fixNodeStartChar": 3184,
        "fixNodeLength": 65,
        "sourceBeforeFix": "getPath(\"InputPackageDeclarationDiffDirectory.java\")",
        "sourceAfterFix": "getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b9d5009798096f4568e109f00008f70d5f99c52b",
        "fixCommitParentSHA1": "86f505a90064d76f957edb1117471e161f86f8d7",
        "bugFilePath": "core/src/main/java/cucumber/runtime/RuntimeOptions.java",
        "fixPatch": "diff --git a/core/src/main/java/cucumber/runtime/RuntimeOptions.java b/core/src/main/java/cucumber/runtime/RuntimeOptions.java\nindex 4e681e9..8f7aa52 100644\n--- a/core/src/main/java/cucumber/runtime/RuntimeOptions.java\n+++ b/core/src/main/java/cucumber/runtime/RuntimeOptions.java\n@@ -47,7 +47,7 @@\n         }\n     }\n \n-    private void parse(ArrayList<String> args) {\n+    private void parse(List<String> args) {\n         FormatterConverter formatterConverter = new FormatterConverter();\n \n         while (!args.isEmpty()) {\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 50,
        "bugNodeStartChar": 1754,
        "bugNodeLength": 17,
        "fixLineNum": 50,
        "fixNodeStartChar": 1754,
        "fixNodeLength": 12,
        "sourceBeforeFix": "ArrayList<String>",
        "sourceAfterFix": "List<String>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d3742b6e39c174111d3b0a6177c25b93f9c926",
        "fixCommitParentSHA1": "1b31f4d19df1fabc7aaee5837f4d2c3439819495",
        "bugFilePath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
        "fixPatch": "diff --git a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\nindex 7cab2df..86b3322 100644\n--- a/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n+++ b/flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java\n@@ -353,10 +353,10 @@\n \t * \n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> print() {\n+\tpublic DataStreamSink<OUT> print() {\n \t\tDataStream<OUT> inputStream = this.copy();\n \t\tPrintSinkFunction<OUT> printFunction = new PrintSinkFunction<OUT>();\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, printFunction, null);\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, printFunction, null);\n \n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \n@@ -373,7 +373,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), 1, null);\n \t}\n \n@@ -390,7 +390,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, null);\n \t}\n \n@@ -408,7 +408,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, null);\n \t}\n \n@@ -430,7 +430,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, long millis, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), millis, endTuple);\n \t}\n \n@@ -453,7 +453,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsText(String path, int batchSize, OUT endTuple) {\n \t\treturn writeAsText(this, path, new WriteFormatAsText<OUT>(), batchSize, endTuple);\n \t}\n \n@@ -475,9 +475,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -503,9 +503,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsText(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsText<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -522,7 +522,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), 1, null);\n \t}\n \n@@ -539,7 +539,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, null);\n \t}\n \n@@ -557,7 +557,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), batchSize, null);\n \t}\n \n@@ -579,7 +579,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, long millis, OUT endTuple) {\n \t\treturn writeAsCsv(this, path, new WriteFormatAsCsv<OUT>(), millis, endTuple);\n \t}\n \n@@ -602,7 +602,7 @@\n \t * \n \t * @return The closed DataStream\n \t */\n-\tpublic DataStream<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n+\tpublic DataStreamSink<OUT> writeAsCsv(String path, int batchSize, OUT endTuple) {\n \t\tif (this instanceof SingleOutputStreamOperator) {\n \t\t\t((SingleOutputStreamOperator<?, ?>) this).setMutability(false);\n \t\t}\n@@ -627,9 +627,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, long millis, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByMillis<OUT>(\n \t\t\t\tpath, format, millis, endTuple));\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -655,9 +655,9 @@\n \t * \n \t * @return the data stream constructed\n \t */\n-\tprivate DataStream<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n+\tprivate DataStreamSink<OUT> writeAsCsv(DataStream<OUT> inputStream, String path,\n \t\t\tWriteFormatAsCsv<OUT> format, int batchSize, OUT endTuple) {\n-\t\tDataStream<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n+\t\tDataStreamSink<OUT> returnStream = addSink(inputStream, new WriteSinkFunctionByBatches<OUT>(\n \t\t\t\tpath, format, batchSize, endTuple), null);\n \t\tjobGraphBuilder.setBytesFrom(inputStream.getId(), returnStream.getId());\n \t\tjobGraphBuilder.setMutability(returnStream.getId(), false);\n@@ -792,18 +792,18 @@\n \t *            The object containing the sink's invoke function.\n \t * @return The closed DataStream.\n \t */\n-\tpublic DataStream<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n+\tpublic DataStreamSink<OUT> addSink(SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(this.copy(), sinkFunction);\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction) {\n \t\treturn addSink(inputStream, sinkFunction, new FunctionTypeWrapper<OUT, Tuple, OUT>(\n \t\t\t\tsinkFunction, SinkFunction.class, 0, -1, 0));\n \t}\n \n-\tprivate DataStream<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n+\tprivate DataStreamSink<OUT> addSink(DataStream<OUT> inputStream, SinkFunction<OUT> sinkFunction,\n \t\t\tTypeSerializerWrapper<OUT, Tuple, OUT> typeWrapper) {\n-\t\tDataStream<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n+\t\tDataStreamSink<OUT> returnStream = new DataStreamSink<OUT>(environment, \"sink\");\n \n \t\ttry {\n \t\t\tjobGraphBuilder.addSink(returnStream.getId(), new SinkInvokable<OUT>(sinkFunction),\n",
        "projectName": "apache.flink",
        "bugLineNum": 795,
        "bugNodeStartChar": 30563,
        "bugNodeLength": 15,
        "fixLineNum": 795,
        "fixNodeStartChar": 30563,
        "fixNodeLength": 19,
        "sourceBeforeFix": "DataStream<OUT>",
        "sourceAfterFix": "DataStreamSink<OUT>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7e53685310fa22abd12307e141511184fa6ede3a",
        "fixCommitParentSHA1": "70631bb4cff0c0cbd7055e843e091bfd4fae8e4e",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java\nindex 2e77bc4..9546191 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/metadata/Partition.java\n@@ -283,7 +283,7 @@\n   public void setOutputFormatClass(Class<? extends HiveOutputFormat> outputFormatClass) {\n     this.outputFormatClass = outputFormatClass;\n     tPartition.getSd().setOutputFormat(HiveFileFormatUtils\n-        .getOutputFormatSubstitute(outputFormatClass).toString());\n+        .getOutputFormatSubstitute(outputFormatClass).getName());\n   }\n \n   final public Class<? extends InputFormat> getInputFormatClass()\n",
        "projectName": "apache.hive",
        "bugLineNum": 285,
        "bugNodeStartChar": 9880,
        "bugNodeLength": 84,
        "fixLineNum": 285,
        "fixNodeStartChar": 9880,
        "fixNodeLength": 83,
        "sourceBeforeFix": "HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString()",
        "sourceAfterFix": "HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1a9bb447fd14415ef270f3dd7af8a0d4e0017177",
        "fixCommitParentSHA1": "20f724d2f2fab6996c7588e6d0115f35bfde8d32",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\nindex fe2b6df..994fe7d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n@@ -87,7 +87,7 @@\n      */\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a) {\n         AtmosphereResource r = null;\n@@ -114,7 +114,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler) {\n@@ -135,7 +135,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler,\n@@ -220,7 +220,7 @@\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n                 noOps,\n-                DefaultAtmosphereRequest.newInstance(),\n+                AtmosphereRequest.newInstance(),\n                 response,\n                 config.framework().getAsyncSupport(),\n                 noOpsHandler);\n@@ -231,11 +231,11 @@\n      *\n      * @param config an {@link AtmosphereConfig}\n      * @param uuid   a String representing a UUID\n-     * @param request a {@link DefaultAtmosphereRequest}\n+     * @param request a {@link AtmosphereRequest}\n      * @return\n      */\n     @Override\n-    public final AtmosphereResource create(AtmosphereConfig config, String uuid, DefaultAtmosphereRequest request) {\n+    public final AtmosphereResource create(AtmosphereConfig config, String uuid, AtmosphereRequest request) {\n         AtmosphereResponse response = AtmosphereResponse.newInstance();\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 138,
        "bugNodeStartChar": 5751,
        "bugNodeLength": 32,
        "fixLineNum": 138,
        "fixNodeStartChar": 5751,
        "fixNodeLength": 25,
        "sourceBeforeFix": "DefaultAtmosphereRequest request",
        "sourceAfterFix": "AtmosphereRequest request"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4fa38aeba48a4f6641e48b3f73e1bc0c55c18156",
        "fixCommitParentSHA1": "21234b36dee9c62358bbe45380e52dcda00a9358",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java\nindex 0ac9ce4..2d22769 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java\n@@ -417,7 +417,7 @@\n \t\t\tif (!super.supports(type)) {\n \t\t\t\treturn false;\n \t\t\t}\n-\t\t\tif (AnnotatedElementUtils.isAnnotated(type, Validated.class)) {\n+\t\t\tif (AnnotatedElementUtils.hasAnnotation(type, Validated.class)) {\n \t\t\t\treturn true;\n \t\t\t}\n \t\t\tif (type.getPackage().getName().startsWith(\"org.springframework.boot\")) {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 420,
        "bugNodeStartChar": 14355,
        "bugNodeLength": 56,
        "fixLineNum": 420,
        "fixNodeStartChar": 14355,
        "fixNodeLength": 58,
        "sourceBeforeFix": "AnnotatedElementUtils.isAnnotated(type,Validated.class)",
        "sourceAfterFix": "AnnotatedElementUtils.hasAnnotation(type,Validated.class)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3e3515f2af47dc0c1f9c080a257edb56f5eb72a7",
        "fixCommitParentSHA1": "a49af9eeea26f6c409d845278eb9b38edf344914",
        "bugFilePath": "components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java",
        "fixPatch": "diff --git a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\nindex 4ed7ceb..85bb5f5 100644\n--- a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n+++ b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n@@ -113,7 +113,7 @@\n         if (node.getNodeType() == Node.ELEMENT_NODE) {\n             Document doc = node.getOwnerDocument();\n             if (((Element) node).getNamespaceURI().equals(BLUEPRINT_NS)) {\n-                doc.renameNode(node, SPRING_NS, node.getNodeName());\n+                doc.renameNode(node, SPRING_NS, node.getLocalName());\n             }\n         }\n         NodeList list = node.getChildNodes();\n@@ -133,19 +133,19 @@\n \n     public Metadata parse(Element element, ParserContext context) {\n         renameNamespaceRecursive(element);\n-        if (element.getNodeName().equals(CAMEL_CONTEXT)) {\n+        if (element.getLocalName().equals(CAMEL_CONTEXT)) {\n             return parseCamelContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(ROUTE_CONTEXT)) {\n+        if (element.getLocalName().equals(ROUTE_CONTEXT)) {\n             return parseRouteContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(KEY_STORE_PARAMETERS)) {\n+        if (element.getLocalName().equals(KEY_STORE_PARAMETERS)) {\n             return parseKeyStoreParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SECURE_RANDOM_PARAMETERS)) {\n+        if (element.getLocalName().equals(SECURE_RANDOM_PARAMETERS)) {\n             return parseSecureRandomParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SSL_CONTEXT_PARAMETERS)) {\n+        if (element.getLocalName().equals(SSL_CONTEXT_PARAMETERS)) {\n             return parseSSLContextParametersNode(element, context);\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 145,
        "bugNodeStartChar": 6619,
        "bugNodeLength": 21,
        "fixLineNum": 145,
        "fixNodeStartChar": 6619,
        "fixNodeLength": 22,
        "sourceBeforeFix": "element.getNodeName()",
        "sourceAfterFix": "element.getLocalName()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "ed338de3ff3e843322201ec8a736daa32756649a",
        "fixCommitParentSHA1": "71e21dc77bb0d7d3c73157eb724076cc100b4d58",
        "bugFilePath": "spring-security-oauth2/src/test/java/org/springframework/security/oauth2/provider/expression/TestOAuth2MethodSecurityExpressionHandler.java",
        "fixPatch": "diff --git a/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/provider/expression/TestOAuth2MethodSecurityExpressionHandler.java b/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/provider/expression/TestOAuth2MethodSecurityExpressionHandler.java\nindex 582d336..9f019b1 100644\n--- a/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/provider/expression/TestOAuth2MethodSecurityExpressionHandler.java\n+++ b/spring-security-oauth2/src/test/java/org/springframework/security/oauth2/provider/expression/TestOAuth2MethodSecurityExpressionHandler.java\n@@ -82,7 +82,7 @@\n \t@Test\n \tpublic void testScopesRegex() throws Exception {\n \n-\t\tOAuth2Request clientAuthentication = RequestTokenFactory.createOAuth2Request(null, \"foo\", null, false, Collections.singleton(\"ns_admin:read\"), null, null, null);\n+\t\tOAuth2Request clientAuthentication = RequestTokenFactory.createOAuth2Request(null, \"foo\", null, false, Collections.singleton(\"ns_admin:read\"), null, null, null, null);\n \n \t\tAuthentication userAuthentication = null;\n \t\tOAuth2Authentication oAuth2Authentication = new OAuth2Authentication(clientAuthentication, userAuthentication);\n@@ -98,7 +98,7 @@\n \t@Test(expected = AccessDeniedException.class)\n \tpublic void testScopesRegexThrowsException() throws Exception {\n \n-\t\tOAuth2Request clientAuthentication = RequestTokenFactory.createOAuth2Request(null, \"foo\", null, false, Collections.singleton(\"ns_admin:read\"), null, null, null);\n+\t\tOAuth2Request clientAuthentication = RequestTokenFactory.createOAuth2Request(null, \"foo\", null, false, Collections.singleton(\"ns_admin:read\"), null, null, null, null);\n \n \t\tAuthentication userAuthentication = null;\n \t\tOAuth2Authentication oAuth2Authentication = new OAuth2Authentication(clientAuthentication, userAuthentication);\n",
        "projectName": "spring-projects.spring-security-oauth",
        "bugLineNum": 101,
        "bugNodeStartChar": 4958,
        "bugNodeLength": 123,
        "fixLineNum": 101,
        "fixNodeStartChar": 4958,
        "fixNodeLength": 129,
        "sourceBeforeFix": "RequestTokenFactory.createOAuth2Request(null,\"foo\",null,false,Collections.singleton(\"ns_admin:read\"),null,null,null)",
        "sourceAfterFix": "RequestTokenFactory.createOAuth2Request(null,\"foo\",null,false,Collections.singleton(\"ns_admin:read\"),null,null,null,null)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "038ea1803bae1cf3be279b36395b4de4e0ff39b5",
        "fixCommitParentSHA1": "17380150434ec1f8ab8a8caff3f9af5e2bbdaa9a",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\nindex 461ea4d..2595728 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqBinding.java\n@@ -189,7 +189,7 @@\n \t */\n \tprivate void poll() {\n \t\tif (invalidCredentials || this.myqOnlineData == null) {\n-\t\t\tlogger.debug(\"Invalid Account Credentials\");\n+\t\t\tlogger.trace(\"Invalid Account Credentials\");\n \t\t\treturn;\n \t\t}\n \n@@ -278,7 +278,7 @@\n \t@Override\n \tpublic void internalReceiveCommand(String itemName, Command command) {\n \t\tsuper.internalReceiveCommand(itemName, command);\n-\t\tlogger.debug(\"MyQ binding received command '{}' for item '{}'\",\n+\t\tlogger.trace(\"MyQ binding received command '{}' for item '{}'\",\n \t\t\t\tcommand, itemName);\n \t\tif (myqOnlineData != null) {\n \t\t\tcomputeCommandForItem(command, itemName);\n@@ -357,7 +357,7 @@\n \t\tif (pollFuture != null && !pollFuture.isCancelled())\n \t\t\tpollFuture.cancel(false);\n \n-\t\tlogger.debug(\"rapidRefreshFuture scheduleing for {} millis\", millis);\n+\t\tlogger.trace(\"rapidRefreshFuture scheduleing for {} millis\", millis);\n \t\t// start polling at the RAPID_REFRESH_SECS interval\n \t\tpollFuture = pollService.scheduleAtFixedRate(new Runnable() {\n \t\t\t@Override\n@@ -374,7 +374,7 @@\n \t\t// stop rapid polling after MAX_RAPID_REFRESH_SECS\n \t\tpollResetFuture = pollService.schedule(new Runnable() {\n \t\t\tpublic void run() {\n-\t\t\t\tlogger.debug(\"rapidRefreshFutureEnd stopping\");\n+\t\t\t\tlogger.trace(\"rapidRefreshFutureEnd stopping\");\n \t\t\t\tschedulePoll(refreshInterval);\n \t\t\t}\n \t\t}, MAX_RAPID_REFRESH, TimeUnit.MILLISECONDS);\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 377,
        "bugNodeStartChar": 11590,
        "bugNodeLength": 46,
        "fixLineNum": 377,
        "fixNodeStartChar": 11590,
        "fixNodeLength": 46,
        "sourceBeforeFix": "logger.debug(\"rapidRefreshFutureEnd stopping\")",
        "sourceAfterFix": "logger.trace(\"rapidRefreshFutureEnd stopping\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
        "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 113,
        "bugNodeStartChar": 5796,
        "bugNodeLength": 126,
        "fixLineNum": 113,
        "fixNodeStartChar": 5796,
        "fixNodeLength": 126,
        "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())",
        "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "66c325e004dc7d1ffb6b97e8af093a8455756d53",
        "fixCommitParentSHA1": "f10f38fbd8243f61adce6ac5e8e04e1665f42ced",
        "bugFilePath": "api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java b/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\nindex d5eb318..204add3 100644\n--- a/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\n+++ b/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\n@@ -116,7 +116,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(duplicateName);\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t}\r\n \t\r\n@@ -128,7 +128,7 @@\n \t@Test(expected = DuplicateConceptNameException.class)\r\n \t@Verifies(value = \"should fail if there is a duplicate unretired preferred name in the same locale\", method = \"validate(Object,Errors)\")\r\n \tpublic void validate_shouldFailIfThereIsADuplicateUnretiredPreferredNameInTheSameLocale() throws Exception {\r\n-\t\tContext.setLocale(Context.getLocale());\r\n+\t\tContext.setLocale(new Locale(\"en\"));\r\n \t\tConcept concept = Context.getConceptService().getConcept(5497);\r\n \t\tConceptName preferredName = new ConceptName(\"preferred name\", Context.getLocale());\r\n \t\tconcept.setPreferredName(preferredName);\r\n@@ -139,7 +139,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(\"preferred name\");\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t}\r\n \t\r\n@@ -177,7 +177,7 @@\n \t@Test\r\n \t@Verifies(value = \"should pass if the duplicate ConceptName is neither preferred nor fully Specified\", method = \"validate(Object,Errors)\")\r\n \tpublic void validate_shouldPassIfTheDuplicateConceptNameIsNeitherPreferredNorFullySpecified() throws Exception {\r\n-\t\tContext.setLocale(Context.getLocale());\r\n+\t\tContext.setLocale(new Locale(\"en\"));\r\n \t\tConcept concept = Context.getConceptService().getConcept(5497);\r\n \t\tConceptName duplicateName = new ConceptName(\"duplicate name\", Context.getLocale());\r\n \t\t//note that the name is neither fully specified nor preferred,\r\n@@ -191,7 +191,7 @@\n \t\tConceptName assumedDuplicateName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tassumedDuplicateName.setName(duplicateName.getName());\r\n \t\tnewConcept.addName(assumedDuplicateName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t\tAssert.assertEquals(false, errors.hasErrors());\r\n \t}\r\n@@ -212,7 +212,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(duplicateName);\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t\tAssert.assertEquals(false, errors.hasErrors());\r\n \t}\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 119,
        "bugNodeStartChar": 5436,
        "bugNodeLength": 37,
        "fixLineNum": 119,
        "fixNodeStartChar": 5318,
        "fixNodeLength": 40,
        "sourceBeforeFix": "new BindException(concept,\"concept\")",
        "sourceAfterFix": "new BindException(newConcept,\"concept\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e907dbe391122f632a974c54bb0ff79d04c1bd2d",
        "fixCommitParentSHA1": "daff49aeccb7cd351f5f7057f54cbabe65946f99",
        "bugFilePath": "presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java",
        "fixPatch": "diff --git a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\nindex 1c1cb5f..107e3ba 100644\n--- a/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n+++ b/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestHiveTableStatistics.java\n@@ -282,14 +282,14 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n@@ -307,21 +307,21 @@\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 3.0, 0.0, null, \"1\", \"3\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 15.0, null, null));\n \n         assertThat(query(showStatsPartitionOne)).containsOnly(\n                 row(\"p_nationkey\", null, 5.0, 0.0, null, \"1\", \"24\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"1\", \"1\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 7.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n \n         assertThat(query(showStatsPartitionTwo)).containsOnly(\n                 row(\"p_nationkey\", null, 4.0, 0.0, null, \"8\", \"21\"),\n                 row(\"p_name\", null, 6.0, 0.0, null, null, null),\n                 row(\"p_regionkey\", null, 1.0, 0.0, null, \"2\", \"2\"),\n-                row(\"p_comment\", null, 1.0, 0.0, null, null, null),\n+                row(\"p_comment\", null, 5.0, 0.0, null, null, null),\n                 row(null, null, null, null, 5.0, null, null));\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 324,
        "bugNodeStartChar": 17256,
        "bugNodeLength": 50,
        "fixLineNum": 324,
        "fixNodeStartChar": 17256,
        "fixNodeLength": 50,
        "sourceBeforeFix": "row(\"p_comment\",null,1.0,0.0,null,null,null)",
        "sourceAfterFix": "row(\"p_comment\",null,5.0,0.0,null,null,null)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9a8e37a40016be51c6f977050adce8cdf6b50998",
        "fixCommitParentSHA1": "13e4086131ce15468e91c6e211827fc45be51749",
        "bugFilePath": "aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java",
        "fixPatch": "diff --git a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\nindex 87d3dcf..361545e 100644\n--- a/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n+++ b/aerospike/src/main/java/com/yahoo/ycsb/db/AerospikeClient.java\n@@ -29,7 +29,7 @@\n   private static final String DEFAULT_NAMESPACE = \"ycsb\";\n \n   private static final int RESULT_OK = 0;\n-  private static final int RESULT_ERROR = 1;\n+  private static final int RESULT_ERROR = -1;\n \n   private static final int WRITE_OVERLOAD_DELAY = 5;\n   private static final int WRITE_OVERLOAD_TRIES = 3;\n",
        "projectName": "brianfrankcooper.YCSB",
        "bugLineNum": 32,
        "bugNodeStartChar": 1071,
        "bugNodeLength": 1,
        "fixLineNum": 32,
        "fixNodeStartChar": 1071,
        "fixNodeLength": 2,
        "sourceBeforeFix": "1",
        "sourceAfterFix": "-1"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "85c0bc256211160178d49bead3f228b78a21e1c4",
        "fixCommitParentSHA1": "465c5777c9807b92fc039f0f3b8c3affd56882bb",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java\nindex cb13060..290a5bc 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateSub.java\n@@ -89,7 +89,7 @@\n     if (arguments[1].getCategory() != ObjectInspector.Category.PRIMITIVE) {\n       throw new UDFArgumentTypeException(1,\n           \"Only primitive type arguments are accepted but \"\n-              + arguments[2].getTypeName() + \" is passed. as second arguments\");\n+              + arguments[1].getTypeName() + \" is passed. as second arguments\");\n     }\n \n     inputType1 = ((PrimitiveObjectInspector) arguments[0]).getPrimitiveCategory();\n",
        "projectName": "apache.hive",
        "bugLineNum": 92,
        "bugNodeStartChar": 4515,
        "bugNodeLength": 12,
        "fixLineNum": 92,
        "fixNodeStartChar": 4515,
        "fixNodeLength": 12,
        "sourceBeforeFix": "arguments[2]",
        "sourceAfterFix": "arguments[1]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0a2b272cb8cb45faafd95a3bbc9e9af813620e09",
        "fixCommitParentSHA1": "94716aca9293ae7a7b2de68cef8a803623ba11c9",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/impl/MapManagedService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/impl/MapManagedService.java b/hazelcast/src/main/java/com/hazelcast/map/impl/MapManagedService.java\nindex 40b8019..209a6c3 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/impl/MapManagedService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/impl/MapManagedService.java\n@@ -40,7 +40,7 @@\n \n     @Override\n     public void init(NodeEngine nodeEngine, Properties properties) {\n-        final LockService lockService = nodeEngine.getService(LockService.SERVICE_NAME);\n+        final LockService lockService = nodeEngine.getSharedService(LockService.SERVICE_NAME);\n         if (lockService != null) {\n             lockService.registerLockStoreConstructor(MapService.SERVICE_NAME,\n                     new ObjectNamespaceLockStoreInfoConstructorFunction());\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 43,
        "bugNodeStartChar": 1401,
        "bugNodeLength": 47,
        "fixLineNum": 43,
        "fixNodeStartChar": 1401,
        "fixNodeLength": 53,
        "sourceBeforeFix": "nodeEngine.getService(LockService.SERVICE_NAME)",
        "sourceAfterFix": "nodeEngine.getSharedService(LockService.SERVICE_NAME)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6d04aa179485f331deff328f511f9b494bdb4d43",
        "fixCommitParentSHA1": "8de820786ce8d708a6d2fd32b36ab9128bc6fc0f",
        "bugFilePath": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java",
        "fixPatch": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\nindex 5dc0565..dad9aef 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java\n@@ -1759,7 +1759,7 @@\n       // master tries to assign these offline regions. This is followed by re-assignments of the\n       // daughter regions from resumed {@link SplitTableRegionProcedure}\n       addRegionStateToPut(putA, RegionState.State.CLOSED);\n-      addRegionStateToPut(putA, RegionState.State.CLOSED);\n+      addRegionStateToPut(putB, RegionState.State.CLOSED);\n \n       addSequenceNum(putA, 1, -1, splitA.getReplicaId()); //new regions, openSeqNum = 1 is fine.\n       addSequenceNum(putB, 1, -1, splitB.getReplicaId());\n",
        "projectName": "apache.hbase",
        "bugLineNum": 1762,
        "bugNodeStartChar": 67674,
        "bugNodeLength": 51,
        "fixLineNum": 1762,
        "fixNodeStartChar": 67674,
        "fixNodeLength": 51,
        "sourceBeforeFix": "addRegionStateToPut(putA,RegionState.State.CLOSED)",
        "sourceAfterFix": "addRegionStateToPut(putB,RegionState.State.CLOSED)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "f0878162c7c12ed87b0d7953632811442af36dc3",
        "fixCommitParentSHA1": "8088788aa438689d2b662f31905993dfc6a593a0",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\nindex 1009fdd..125d09d 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java\n@@ -157,9 +157,9 @@\n                 INVALID_FUNCTION_ARGUMENT,\n                 \"step must not be zero\");\n         checkCondition(\n-                step > 0 ? stop >= start : stop < start,\n+                step > 0 ? stop >= start : stop <= start,\n                 INVALID_FUNCTION_ARGUMENT,\n-                \"sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start\");\n+                \"sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start\");\n     }\n \n     private static void checkMaxEntry(int length)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 160,
        "bugNodeStartChar": 6158,
        "bugNodeLength": 12,
        "fixLineNum": 160,
        "fixNodeStartChar": 6158,
        "fixNodeLength": 13,
        "sourceBeforeFix": "stop < start",
        "sourceAfterFix": "stop <= start"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b7c938af78d2414c72fbafed55816b176355036e",
        "fixCommitParentSHA1": "42826c96d9f9e5b8dc8cd14773face865a4c89a7",
        "bugFilePath": "patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java",
        "fixPatch": "diff --git a/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java b/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\nindex 1c654f2..24de1b6 100644\n--- a/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\n+++ b/patching/src/main/java/org/jboss/as/patching/tool/PatchTool.java\n@@ -132,13 +132,13 @@\n             if(operation.hasDefined(Constants.OVERRIDE)) {\n                 final ModelNode overrides = operation.get(Constants.OVERRIDE);\n                 for(final ModelNode override : overrides.asList()) {\n-                    builder.overrideItem(override.toString());\n+                    builder.overrideItem(override.asString());\n                 }\n             }\n             if(operation.hasDefined(Constants.PRESERVE)) {\n                 final ModelNode preserves = operation.get(Constants.PRESERVE);\n                 for(final ModelNode preserve : preserves.asList()) {\n-                    builder.preserveItem(preserve.toString());\n+                    builder.preserveItem(preserve.asString());\n                 }\n             }\n             return builder.createPolicy();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 135,
        "bugNodeStartChar": 4787,
        "bugNodeLength": 19,
        "fixLineNum": 135,
        "fixNodeStartChar": 4787,
        "fixNodeLength": 19,
        "sourceBeforeFix": "override.toString()",
        "sourceAfterFix": "override.asString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5289280d8c8e7000d450c4f1ae3e3193dfb0d14f",
        "fixCommitParentSHA1": "a190ac3a97a0b2cbdc0a9fab9a4c9a5ad97670de",
        "bugFilePath": "aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java",
        "fixPatch": "diff --git a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\nindex abdde8a..96cad46 100644\n--- a/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n+++ b/aws-java-sdk-swf-libraries/src/main/java/com/amazonaws/services/simpleworkflow/flow/generic/StartChildWorkflowExecutionParameters.java\n@@ -264,7 +264,7 @@\n                 startChildWorkflowExecutionParameters.setTaskPriority(taskPriority);\n             }\n \n-            String lambdaRole = options.getLambdaRole();\n+            String lambdaRole = optionsOverride.getLambdaRole();\n             if (lambdaRole != null) {\n                 startChildWorkflowExecutionParameters.setLambdaRole(lambdaRole);\n             }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 267,
        "bugNodeStartChar": 8888,
        "bugNodeLength": 23,
        "fixLineNum": 267,
        "fixNodeStartChar": 8888,
        "fixNodeLength": 31,
        "sourceBeforeFix": "options.getLambdaRole()",
        "sourceAfterFix": "optionsOverride.getLambdaRole()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e09d2f32fb1c7f2ab8d1e41fdb72e00adb7032ff",
        "fixCommitParentSHA1": "f88cd62354464a3445c68976d6f3a535d775180a",
        "bugFilePath": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java",
        "fixPatch": "diff --git a/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\nindex a6aa310..968a149 100644\n--- a/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\n+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\n@@ -74,7 +74,7 @@\n      * Returns a duplicate of this resource record.\n      */\n     @Override\n-    public ByteBufHolder duplicate() {\n+    public DnsResource duplicate() {\n         return new DnsResource(name(), type(), dnsClass(), ttl, content.duplicate());\n     }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 73,
        "bugNodeStartChar": 2077,
        "bugNodeLength": 208,
        "fixLineNum": 73,
        "fixNodeStartChar": 2077,
        "fixNodeLength": 206,
        "sourceBeforeFix": "/**   * Returns a duplicate of this resource record.  */ @Override public ByteBufHolder duplicate(){   return new DnsResource(name(),type(),dnsClass(),ttl,content.duplicate()); } ",
        "sourceAfterFix": "/**   * Returns a duplicate of this resource record.  */ @Override public DnsResource duplicate(){   return new DnsResource(name(),type(),dnsClass(),ttl,content.duplicate()); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1206,
        "bugNodeStartChar": 64635,
        "bugNodeLength": 176,
        "fixLineNum": 1206,
        "fixNodeStartChar": 64635,
        "fixNodeLength": 176,
        "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))",
        "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],paging.asPostParameterList(),true))"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntSet.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntSet.java b/gdx/src/com/badlogic/gdx/utils/IntSet.java\nindex eddbafd..39afed5 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntSet.java\n@@ -62,7 +62,7 @@\n \t * before growing the backing table. */\n \tpublic IntSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 65,
        "bugNodeStartChar": 2610,
        "bugNodeLength": 18,
        "fixLineNum": 65,
        "fixNodeStartChar": 2610,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "b8b73080085bed3b2062e1a90ed940056997a0ff",
        "fixCommitParentSHA1": "ce691239d40e469b75fa22b0bb6a065202c475a7",
        "bugFilePath": "src/main/java/org/jsoup/parser/Tag.java",
        "fixPatch": "diff --git a/src/main/java/org/jsoup/parser/Tag.java b/src/main/java/org/jsoup/parser/Tag.java\nindex 28e3213..43d6c49 100644\n--- a/src/main/java/org/jsoup/parser/Tag.java\n+++ b/src/main/java/org/jsoup/parser/Tag.java\n@@ -83,11 +83,10 @@\n             return false;\n \n         // head can only contain a few. if more than head in here, modify to have a list of valids\n-        // TODO[must] - lookup what head can contain\n-        // from memory: base, script, link, meta, title\n+        // (could solve this with walk for ancestor)\n         if (this.tagName.equals(\"head\")) {\n             if (child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\") ||\n-                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\")) {\n+                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {\n                 return true;\n             }\n             return false;\n",
        "projectName": "jhy.jsoup",
        "bugLineNum": 89,
        "bugNodeStartChar": 3174,
        "bugNodeLength": 179,
        "fixLineNum": 89,
        "fixNodeStartChar": 3174,
        "fixNodeLength": 246,
        "sourceBeforeFix": "child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\")|| child.tagName.equals(\"meta\")|| child.tagName.equals(\"title\")",
        "sourceAfterFix": "child.tagName.equals(\"base\") || child.tagName.equals(\"script\") || child.tagName.equals(\"link\")|| child.tagName.equals(\"meta\")|| child.tagName.equals(\"title\")|| child.tagName.equals(\"style\")|| child.tagName.equals(\"object\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "814e3d21c793d9980826583a6356488f5fdc8017",
        "fixCommitParentSHA1": "2656e7fa86b314d4cc49bd0f2c5626a0104fe12c",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 2b36224..337aa43 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -51,14 +51,14 @@\n \n     @Override\n     public void clear() {\n-\tlockForRegularUsage();\n+        lockForRescale();\n         try {\n            values.clear();\n            count.set(0);\n            this.startTime = tick();\n            nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            unlockForRegularUsage();\n+            lockForRescale();\n \t}\n     }\n \n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 54,
        "bugNodeStartChar": 2090,
        "bugNodeLength": 21,
        "fixLineNum": 54,
        "fixNodeStartChar": 2097,
        "fixNodeLength": 16,
        "sourceBeforeFix": "lockForRegularUsage()",
        "sourceAfterFix": "lockForRescale()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "312810d415da381fc6cd53358a4e986e7bdc4f63",
        "fixCommitParentSHA1": "e5a8958ed6b4e33ef554ce6627e3e1cb5aeba4bd",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\nindex f5ea2bb..1e52893 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\n@@ -201,13 +201,13 @@\n         }\n \n         String upgrade = response.getHeader(Names.UPGRADE);\n-        if (Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n+        if (!Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response upgrade: \"\n                     + response.getHeader(Names.UPGRADE));\n         }\n \n         String connection = response.getHeader(Names.CONNECTION);\n-        if (Values.UPGRADE.equalsIgnoreCase(connection)) {\n+        if (!Values.UPGRADE.equalsIgnoreCase(connection)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response connection: \"\n                     + response.getHeader(Names.CONNECTION));\n         }\n",
        "projectName": "netty.netty",
        "bugLineNum": 204,
        "bugNodeStartChar": 7725,
        "bugNodeLength": 42,
        "fixLineNum": 204,
        "fixNodeStartChar": 7725,
        "fixNodeLength": 43,
        "sourceBeforeFix": "Values.WEBSOCKET.equalsIgnoreCase(upgrade)",
        "sourceAfterFix": "!Values.WEBSOCKET.equalsIgnoreCase(upgrade)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 95,
        "bugNodeStartChar": 3781,
        "bugNodeLength": 10,
        "fixLineNum": 95,
        "fixNodeStartChar": 3781,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15833",
        "sourceAfterFix": "id=10833"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "84340b3f05d39437b725f2f5510f44e862f98b19",
        "fixCommitParentSHA1": "2b6bf5f8ca0c509b565a36c98e3e63219b77b7f0",
        "bugFilePath": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java",
        "fixPatch": "diff --git a/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java b/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java\nindex 7aaa086..b0ed0d6 100644\n--- a/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java\n+++ b/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java\n@@ -213,7 +213,7 @@\n                 }\n \n                 // add current security token obtained from session\n-                exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,\n+                exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,\n                         \"OAuth \" + accessToken);\n             }\n         };\n",
        "projectName": "apache.camel",
        "bugLineNum": 216,
        "bugNodeStartChar": 9808,
        "bugNodeLength": 100,
        "fixLineNum": 216,
        "fixNodeStartChar": 9808,
        "fixNodeLength": 100,
        "sourceBeforeFix": "exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,\"OAuth \" + accessToken)",
        "sourceAfterFix": "exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,\"OAuth \" + accessToken)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "29a532c691292b57576df51654cf1b9c65bea0be",
        "fixCommitParentSHA1": "a75554f4fb0a19ce71f7b95363e7ed7452b81a0a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\nindex 69d334e..9f055a5 100644\n--- a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\n+++ b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\n@@ -224,7 +224,7 @@\n     public QueueItem txnPeek(long offerId, String transactionId) {\n         QueueItem item = getItemQueue().peek();\n         if (item == null) {\n-            if ( offerId == -1L ){\n+            if ( offerId == -1 ){\n                 return null;\n             }\n             TxQueueItem txItem = txMap.get(offerId);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 227,
        "bugNodeStartChar": 7502,
        "bugNodeLength": 3,
        "fixLineNum": 227,
        "fixNodeStartChar": 7502,
        "fixNodeLength": 2,
        "sourceBeforeFix": "-1L",
        "sourceAfterFix": "-1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "175ad301ad86b5b5f5eae58f0fd97aecc0345014",
        "fixCommitParentSHA1": "50ed39f50ffe60fb03cd9e8f467157ce2db81638",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\nindex 89867e9..33ee8fa 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n@@ -55,7 +55,7 @@\n     {\n         long sizeInBytes = 0;\n         for (int i = 0; i < fieldBlocks.length; i++) {\n-            sizeInBytes += getRawFieldBlock(i).getSizeInBytes();\n+            sizeInBytes += getRawFieldBlock(i).getRegionSizeInBytes(rowIndex, 1);\n         }\n         return sizeInBytes;\n     }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 58,
        "bugNodeStartChar": 1524,
        "bugNodeLength": 36,
        "fixLineNum": 58,
        "fixNodeStartChar": 1524,
        "fixNodeLength": 53,
        "sourceBeforeFix": "getRawFieldBlock(i).getSizeInBytes()",
        "sourceAfterFix": "getRawFieldBlock(i).getRegionSizeInBytes(rowIndex,1)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4e1cc538aaa75a9d0e9514effa6e3f3beeab3985",
        "fixCommitParentSHA1": "3fea6c956ceaa0edc638bcbcb04017774cfb31e5",
        "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java",
        "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\nindex f4c271f..5b615a8 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFileHandle.java\n@@ -95,7 +95,7 @@\n \t\t\t\tfor (int i = 0, n = handles.length; i < n; i++) {\r\n \t\t\t\t\tString path = relativePaths[i];\r\n \t\t\t\t\tif (!path.endsWith(suffix)) continue;\r\n-\t\t\t\t\thandles[i] = new AndroidFileHandle(assets, new File(file, path), type);\r\n+\t\t\t\t\thandles[count] = new AndroidFileHandle(assets, new File(file, path), type);\r\n \t\t\t\t\tcount++;\r\n \t\t\t\t}\r\n \t\t\t\tif (count < relativePaths.length) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 98,
        "bugNodeStartChar": 3213,
        "bugNodeLength": 10,
        "fixLineNum": 98,
        "fixNodeStartChar": 3116,
        "fixNodeLength": 14,
        "sourceBeforeFix": "handles[i]",
        "sourceAfterFix": "handles[count]"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1",
        "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16",
        "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java",
        "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 93,
        "bugNodeStartChar": 4168,
        "bugNodeLength": 9,
        "fixLineNum": 93,
        "fixNodeStartChar": 4076,
        "fixNodeLength": 9,
        "sourceBeforeFix": "items[22]",
        "sourceAfterFix": "items[21]"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "da50508e35642352d7c8cf0fe283d36f3c89e3f2",
        "fixCommitParentSHA1": "af6b424729e0c5d0a11b8b92fd87e026b98d8b74",
        "bugFilePath": "src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java",
        "fixPatch": "diff --git a/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java b/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\nindex ac51f11..584378d 100644\n--- a/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\n+++ b/src/main/java/com/profiler/interceptor/bci/JavaAssistByteCodeInstrumentor.java\n@@ -56,7 +56,7 @@\n     public void checkLibrary(ClassLoader classLoader, String javassistClassName) {\r\n \t\t// TODO Util\ub85c \ubf51\uc744\uae4c?\r\n \t\tboolean findClass = findClass(javassistClassName);\r\n-\t\tif (findClass) {\r\n+\t\tif (!findClass) {\r\n \t\t\treturn;\r\n \t\t}\r\n \t\tloadClassLoaderLibraries(classLoader);\r\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 59,
        "bugNodeStartChar": 1841,
        "bugNodeLength": 9,
        "fixLineNum": 59,
        "fixNodeStartChar": 1783,
        "fixNodeLength": 10,
        "sourceBeforeFix": "findClass",
        "sourceAfterFix": "!findClass"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "14ceda3b0cb8b2055a05c6c6984aa785b8864563",
        "fixCommitParentSHA1": "4c2486e4a0a97e852d9901853b39a0ca81544543",
        "bugFilePath": "src/main/java/com/zaxxer/hikari/pool/PoolBase.java",
        "fixPatch": "diff --git a/src/main/java/com/zaxxer/hikari/pool/PoolBase.java b/src/main/java/com/zaxxer/hikari/pool/PoolBase.java\nindex fdd4057..ee5ca12 100644\n--- a/src/main/java/com/zaxxer/hikari/pool/PoolBase.java\n+++ b/src/main/java/com/zaxxer/hikari/pool/PoolBase.java\n@@ -363,7 +363,7 @@\n                connection.isValid(1);\n             }\n             catch (Throwable e) {\n-               LOGGER.warn(\"{} - Failed to execute isValid() for connection, configure connection test query. ({})\", poolName, e.getMessage());\n+               LOGGER.error(\"{} - Failed to execute isValid() for connection, configure connection test query. ({})\", poolName, e.getMessage());\n                throw e;\n             }\n          }\n@@ -372,7 +372,7 @@\n                executeSql(connection, config.getConnectionTestQuery(), false, isIsolateInternalQueries && !isAutoCommit);\n             }\n             catch (Throwable e) {\n-               LOGGER.warn(\"{} - Failed to execute connection test query. ({})\", poolName, e.getMessage());\n+               LOGGER.error(\"{} - Failed to execute connection test query. ({})\", poolName, e.getMessage());\n                throw e;\n             }\n          }\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 375,
        "bugNodeStartChar": 13115,
        "bugNodeLength": 91,
        "fixLineNum": 375,
        "fixNodeStartChar": 13115,
        "fixNodeLength": 92,
        "sourceBeforeFix": "LOGGER.warn(\"{} - Failed to execute connection test query. ({})\",poolName,e.getMessage())",
        "sourceAfterFix": "LOGGER.error(\"{} - Failed to execute connection test query. ({})\",poolName,e.getMessage())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e7bf415427b37bbc760ff9b9c69650db8ec477e4",
        "fixCommitParentSHA1": "69fcae6b44cb9443bd970f89f7215258d6092bcc",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\nindex 250e3ac..ceafa9d 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n@@ -153,7 +153,7 @@\n \t@Configuration\n \t@ConditionalOnClass(JdbcTemplate.class)\n \t@ConditionalOnBean(DataSource.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"db\")\n+\t@ConditionalOnEnabledHealthIndicator(\"db\")\n \tpublic static class DataSourcesHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<DataSourceHealthIndicator, DataSource>\n \t\t\timplements InitializingBean {\n@@ -193,7 +193,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(MongoTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mongo\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mongo\")\n \tpublic static class MongoHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<MongoHealthIndicator, MongoTemplate> {\n \n@@ -210,7 +210,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RedisConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"redis\")\n+\t@ConditionalOnEnabledHealthIndicator(\"redis\")\n \tpublic static class RedisHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<RedisHealthIndicator, RedisConnectionFactory> {\n@@ -228,7 +228,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RabbitTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"rabbit\")\n+\t@ConditionalOnEnabledHealthIndicator(\"rabbit\")\n \tpublic static class RabbitHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<RabbitHealthIndicator, RabbitTemplate> {\n \n@@ -245,7 +245,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(SolrServer.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"solr\")\n+\t@ConditionalOnEnabledHealthIndicator(\"solr\")\n \tpublic static class SolrHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<SolrHealthIndicator, SolrServer> {\n \n@@ -261,7 +261,7 @@\n \t}\n \n \t@Configuration\n-\t@ConditionalOnEnablednHealthIndicator(\"diskspace\")\n+\t@ConditionalOnEnabledHealthIndicator(\"diskspace\")\n \tpublic static class DiskSpaceHealthIndicatorConfiguration {\n \n \t\t@Bean\n@@ -280,7 +280,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {\n@@ -298,7 +298,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(ConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"jms\")\n+\t@ConditionalOnEnabledHealthIndicator(\"jms\")\n \tpublic static class JmsHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<JmsHealthIndicator, ConnectionFactory> {\n \n@@ -315,7 +315,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(Client.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"elasticsearch\")\n+\t@ConditionalOnEnabledHealthIndicator(\"elasticsearch\")\n \t@EnableConfigurationProperties(ElasticsearchHealthIndicatorProperties.class)\n \tpublic static class ElasticsearchHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<ElasticsearchHealthIndicator, Client> {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 213,
        "bugNodeStartChar": 8824,
        "bugNodeLength": 46,
        "fixLineNum": 213,
        "fixNodeStartChar": 8824,
        "fixNodeLength": 45,
        "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"redis\")",
        "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"redis\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2f77b4e6a3f1ab8bd855476a15a4ab2f6f7ae32c",
        "fixCommitParentSHA1": "53e191bd7b603d8bdaf87cca863dfcfdc689721f",
        "bugFilePath": "community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java",
        "fixPatch": "diff --git a/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java b/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\nindex e3b0364..ca3fc92 100644\n--- a/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\n+++ b/community/embedded-examples/src/test/java/org/neo4j/examples/RolesTest.java\n@@ -192,7 +192,7 @@\n                        + \") match admins<-[:PART_OF*0..]-group<-[:MEMBER_OF]-user return user.name, group.name\";\n         gen.get().addSnippet( \"query-get-admins\", createCypherSnippet( query ) );\n         String result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Engin\") );\n         gen.get().addSnippet( \"o-query-get-admins\", createQueryResultSnippet( result ) );\n         \n@@ -212,7 +212,7 @@\n                 + \") match jale-[:MEMBER_OF]->()-[:PART_OF*0..]->group return group.name\";\n         gen.get().addSnippet( \"query-get-user-memberships\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Users\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-user-memberships\",\n@@ -234,7 +234,7 @@\n                 + \") match refNode<-[:ROOT]->()<-[:PART_OF*0..]-group return group.name\";\n         gen.get().addSnippet( \"query-get-groups\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Users\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-groups\",\n@@ -270,7 +270,7 @@\n         \t\t\"order by min(length(p)), user.name\";\n         gen.get().addSnippet( \"query-get-members\", createCypherSnippet( query ) );\n         result = engine.execute( query )\n-                .toString();\n+                .dumpToString();\n         assertTrue( result.contains(\"Engin\") );\n         gen.get()\n                 .addSnippet( \"o-query-get-members\",\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 214,
        "bugNodeStartChar": 8413,
        "bugNodeLength": 51,
        "fixLineNum": 214,
        "fixNodeStartChar": 8413,
        "fixNodeLength": 55,
        "sourceBeforeFix": "engine.execute(query).toString()",
        "sourceAfterFix": "engine.execute(query).dumpToString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java",
        "fixPatch": "diff --git a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\nindex ad210b5..39d7397 100644\n--- a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n+++ b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n@@ -43,10 +43,10 @@\n \n     private static final Logger logger = Logger.getLogger(TransactedQueueMessageSender.class);\n \n-    @Resource(name = \"java:/queue/myAwesomeQueue\")\n+    @Resource(lookup = \"java:/queue/myAwesomeQueue\")\n     private Queue queue;\n \n-    @Resource(name = \"java:/ConnectionFactory\")\n+    @Resource(lookup = \"java:/ConnectionFactory\")\n     private ConnectionFactory factory;\n \n     @Resource\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 46,
        "bugNodeStartChar": 1692,
        "bugNodeLength": 35,
        "fixLineNum": 46,
        "fixNodeStartChar": 1692,
        "fixNodeLength": 37,
        "sourceBeforeFix": "name=\"java:/queue/myAwesomeQueue\"",
        "sourceAfterFix": "lookup=\"java:/queue/myAwesomeQueue\""
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "19c2a076c25faf94ae9e8f4072f2a4590c9ee1fe",
        "fixCommitParentSHA1": "018231d20a291587dc17c2be3c9f0d13c450bcb0",
        "bugFilePath": "spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java",
        "fixPatch": "diff --git a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java\nindex bd54e09..19e83e1 100644\n--- a/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java\n+++ b/spring-bootstrap/src/test/java/org/springframework/bootstrap/context/embedded/tomcat/TomcatEmbeddedServletContainerFactoryTests.java\n@@ -48,7 +48,7 @@\n \t\t}\n \t\tfactory.setContextLifecycleListeners(Arrays.asList(listeners[0], listeners[1]));\n \t\tfactory.addContextLifecycleListeners(listeners[2], listeners[3]);\n-\t\tthis.container = factory.getEmbdeddedServletContainer();\n+\t\tthis.container = factory.getEmbeddedServletContainer();\n \t\tInOrder ordered = inOrder((Object[]) listeners);\n \t\tfor (LifecycleListener listener : listeners) {\n \t\t\tordered.verify(listener).lifecycleEvent((LifecycleEvent) anyObject());\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 51,
        "bugNodeStartChar": 1978,
        "bugNodeLength": 38,
        "fixLineNum": 51,
        "fixNodeStartChar": 1978,
        "fixNodeLength": 37,
        "sourceBeforeFix": "factory.getEmbdeddedServletContainer()",
        "sourceAfterFix": "factory.getEmbeddedServletContainer()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40a36841e2ed139a2a8714ccdafcaee49693f48f",
        "fixCommitParentSHA1": "32019c10bbd7215aba0856f50dfa1b80fdb59088",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\nindex 48d334a..3c83a7c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n@@ -12423,7 +12423,7 @@\n                   + \" does not have the field \" + field));\n         }\n         if (!lInfo.getInternalName().equals(rInfo.getInternalName())) {\n-          throw new SemanticException(generateErrorMessage(tabref,\n+          throw new OptiqSemanticException(generateErrorMessage(tabref,\n               \"Schema of both sides of union should match: field \" + field + \":\"\n                   + \" appears on the left side of the UNION at column position: \"\n                   + getPositionFromInternalName(lInfo.getInternalName())\n@@ -12435,7 +12435,7 @@\n         TypeInfo commonTypeInfo = FunctionRegistry.getCommonClassForUnionAll(lInfo.getType(),\n             rInfo.getType());\n         if (commonTypeInfo == null) {\n-          throw new SemanticException(generateErrorMessage(tabref,\n+          throw new OptiqSemanticException(generateErrorMessage(tabref,\n               \"Schema of both sides of union should match: Column \" + field + \" is of type \"\n                   + lInfo.getType().getTypeName() + \" on first table and type \"\n                   + rInfo.getType().getTypeName() + \" on second table\"));\n@@ -13293,7 +13293,7 @@\n                 grpbyExpr, new TypeCheckCtx(groupByInputRowResolver));\n             ExprNodeDesc grpbyExprNDesc = astToExprNDescMap.get(grpbyExpr);\n             if (grpbyExprNDesc == null)\n-              throw new RuntimeException(\"Invalid Column Reference: \" + grpbyExpr.dump());\n+              throw new OptiqSemanticException(\"Invalid Column Reference: \" + grpbyExpr.dump());\n \n             addToGBExpr(groupByOutputRowResolver, groupByInputRowResolver, grpbyExpr,\n                 grpbyExprNDesc, gbExprNDescLst, outputColumnNames);\n",
        "projectName": "apache.hive",
        "bugLineNum": 12426,
        "bugNodeStartChar": 493659,
        "bugNodeLength": 507,
        "fixLineNum": 12426,
        "fixNodeStartChar": 493659,
        "fixNodeLength": 512,
        "sourceBeforeFix": "new SemanticException(generateErrorMessage(tabref,\"Schema of both sides of union should match: field \" + field + \":\"+ \" appears on the left side of the UNION at column position: \"+ getPositionFromInternalName(lInfo.getInternalName())+ \", and on the right side of the UNION at column position: \"+ getPositionFromInternalName(rInfo.getInternalName())+ \". Column positions should match for a UNION\"))",
        "sourceAfterFix": "new OptiqSemanticException(generateErrorMessage(tabref,\"Schema of both sides of union should match: field \" + field + \":\"+ \" appears on the left side of the UNION at column position: \"+ getPositionFromInternalName(lInfo.getInternalName())+ \", and on the right side of the UNION at column position: \"+ getPositionFromInternalName(rInfo.getInternalName())+ \". Column positions should match for a UNION\"))"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "3f21dcd0eb97b3b7c4847c913b0955e391192245",
        "fixCommitParentSHA1": "3b880bba431d13f509127b863b56ed506d929cae",
        "bugFilePath": "src/main/java/redis/clients/util/RedisOutputStream.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/util/RedisOutputStream.java b/src/main/java/redis/clients/util/RedisOutputStream.java\nindex d9233e9..c366e02 100644\n--- a/src/main/java/redis/clients/util/RedisOutputStream.java\n+++ b/src/main/java/redis/clients/util/RedisOutputStream.java\n@@ -119,13 +119,13 @@\n                     flushBuffer();\n                 }\n             } else if (c < 0x800) {\n-                if(2 < buf.length - count) {\n+                if(2 >= buf.length - count) {\n                     flushBuffer();\n                 }\n                 buf[count++] = (byte)(0xc0 | (c >> 6));\n                 buf[count++] = (byte)(0x80 | (c & 0x3f));\n             } else if (isSurrogate(c)) {\n-                if(4 < buf.length - count) {\n+                if(4 >= buf.length - count) {\n                     flushBuffer();\n                 }\n                 int uc = Character.toCodePoint(c, str.charAt(i++));\n@@ -134,7 +134,7 @@\n                 buf[count++] = ((byte)(0x80 | ((uc >> 6) & 0x3f)));\n                 buf[count++] = ((byte)(0x80 | (uc & 0x3f)));\n             } else {\n-                if(3 < buf.length - count) {\n+                if(3 >= buf.length - count) {\n                     flushBuffer();\n                 }\n                 buf[count++] =((byte)(0xe0 | ((c >> 12))));\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 122,
        "bugNodeStartChar": 3263,
        "bugNodeLength": 22,
        "fixLineNum": 122,
        "fixNodeStartChar": 3263,
        "fixNodeLength": 23,
        "sourceBeforeFix": "2 < buf.length - count",
        "sourceAfterFix": "2 >= buf.length - count"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "032efde651a14f8175861d96a10a26b8948f5a54",
        "fixCommitParentSHA1": "cf15cd3b10e44f32f711918ce2644c92e1404492",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java b/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\nindex 86ad42e..a6dafbb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\n@@ -97,7 +97,7 @@\n     public void shutdown() {\n         synchronized (lifecycleLock) {\n             fireLifecycleEvent(SHUTTING_DOWN);\n-            instance.managementService.unregister();\n+            instance.managementService.destroy();\n             instance.node.shutdown(false, true);\n             HazelcastInstanceFactory.remove(instance);\n             fireLifecycleEvent(SHUTDOWN);\n@@ -107,7 +107,7 @@\n     public void kill() {\n         synchronized (lifecycleLock) {\n             fireLifecycleEvent(SHUTTING_DOWN);\n-            instance.managementService.unregister();\n+            instance.managementService.destroy();\n             instance.node.shutdown(true, true);\n             HazelcastInstanceFactory.remove(instance);\n             fireLifecycleEvent(SHUTDOWN);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 110,
        "bugNodeStartChar": 3633,
        "bugNodeLength": 39,
        "fixLineNum": 110,
        "fixNodeStartChar": 3633,
        "fixNodeLength": 36,
        "sourceBeforeFix": "instance.managementService.unregister()",
        "sourceAfterFix": "instance.managementService.destroy()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c5ccaee5065a52110a4124505002d6afeb7c13ca",
        "fixCommitParentSHA1": "a54217053f54e06a6f2f8f89709b1568e5d00827",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\nindex a5f1705..32d981c 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n@@ -1186,18 +1186,19 @@\n     private String readLineStandard() throws NotEnoughDataDecoderException {\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (undecodedChunk.readable()) {\n                 byte nextByte = undecodedChunk.readByte();\n                 if (nextByte == HttpConstants.CR) {\n                     nextByte = undecodedChunk.readByte();\n                     if (nextByte == HttpConstants.LF) {\n-                        return sb.toString();\n+                        return line.toString(charset);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n@@ -1225,7 +1226,8 @@\n         }\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (sao.pos < sao.limit) {\n                 byte nextByte = sao.bytes[sao.pos++];\n                 if (nextByte == HttpConstants.CR) {\n@@ -1233,16 +1235,16 @@\n                         nextByte = sao.bytes[sao.pos++];\n                         if (nextByte == HttpConstants.LF) {\n                             sao.setReadPosition(0);\n-                            return sb.toString();\n+                            return line.toString(charset);\n                         }\n                     } else {\n-                        sb.append((char) nextByte);\n+                        line.writeByte(nextByte);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n                     sao.setReadPosition(0);\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 1243,
        "bugNodeStartChar": 50913,
        "bugNodeLength": 13,
        "fixLineNum": 1243,
        "fixNodeStartChar": 50913,
        "fixNodeLength": 22,
        "sourceBeforeFix": "sb.toString()",
        "sourceAfterFix": "line.toString(charset)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "86c753a14931a2cace312a5c55ee139feb5ad012",
        "fixCommitParentSHA1": "74317a220ea41419856608bacaecc68996ed811c",
        "bugFilePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java\nindex d0be9cc..907e1a2 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/ManagementWebSecurityAutoConfigurationTests.java\n@@ -144,7 +144,7 @@\n \t\tEnvironmentTestUtils.addEnvironment(this.context, \"security.ignored:none\");\n \t\tthis.context.refresh();\n \t\t// Just the application and management endpoints now\n-\t\tassertEquals(2,\n+\t\tassertEquals(3,\n \t\t\t\tthis.context.getBean(FilterChainProxy.class).getFilterChains().size());\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 147,
        "bugNodeStartChar": 6666,
        "bugNodeLength": 90,
        "fixLineNum": 147,
        "fixNodeStartChar": 6666,
        "fixNodeLength": 90,
        "sourceBeforeFix": "assertEquals(2,this.context.getBean(FilterChainProxy.class).getFilterChains().size())",
        "sourceAfterFix": "assertEquals(3,this.context.getBean(FilterChainProxy.class).getFilterChains().size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4d40f0e72736121396bd658414a39f47fa2c3d12",
        "fixCommitParentSHA1": "da1a46e19d852b2839b78d21f4e9a12ae8e809c2",
        "bugFilePath": "batch/batchlet-simple/src/test/java/org/javaee7/batch/batchlet/simple/MyBatchletTest.java",
        "fixPatch": "diff --git a/batch/batchlet-simple/src/test/java/org/javaee7/batch/batchlet/simple/MyBatchletTest.java b/batch/batchlet-simple/src/test/java/org/javaee7/batch/batchlet/simple/MyBatchletTest.java\nindex 58f927f..4907dba 100644\n--- a/batch/batchlet-simple/src/test/java/org/javaee7/batch/batchlet/simple/MyBatchletTest.java\n+++ b/batch/batchlet-simple/src/test/java/org/javaee7/batch/batchlet/simple/MyBatchletTest.java\n@@ -27,7 +27,7 @@\n         WebArchive war = ShrinkWrap.create(WebArchive.class).\n                 addClass(MyBatchlet.class).\n                 addAsWebInfResource(EmptyAsset.INSTANCE, ArchivePaths.create(\"beans.xml\")).\n-                addAsManifestResource(\"META-INF/batch-jobs/myJob.xml\", \"batch-jobs/myJob.xml\");\n+                addAsResource(\"META-INF/batch-jobs/myJob.xml\");\n         System.out.println(war.toString(true));\n         return war;\n     }\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 27,
        "bugNodeStartChar": 798,
        "bugNodeLength": 267,
        "fixLineNum": 27,
        "fixNodeStartChar": 798,
        "fixNodeLength": 235,
        "sourceBeforeFix": "ShrinkWrap.create(WebArchive.class).addClass(MyBatchlet.class).addAsWebInfResource(EmptyAsset.INSTANCE,ArchivePaths.create(\"beans.xml\")).addAsManifestResource(\"META-INF/batch-jobs/myJob.xml\",\"batch-jobs/myJob.xml\")",
        "sourceAfterFix": "ShrinkWrap.create(WebArchive.class).addClass(MyBatchlet.class).addAsWebInfResource(EmptyAsset.INSTANCE,ArchivePaths.create(\"beans.xml\")).addAsResource(\"META-INF/batch-jobs/myJob.xml\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9338e13c38d7b70e1a919c650ebea63f6f42beff",
        "fixCommitParentSHA1": "7020b8648d2ddf70cbf39b476970f7ef807832e4",
        "bugFilePath": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java",
        "fixPatch": "diff --git a/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java b/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\nindex 10dfb62..90a9d1d 100644\n--- a/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\n+++ b/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\n@@ -27,7 +27,7 @@\n     public String select(String text) {\n         Document doc = Jsoup.parse(text);\n         Elements elements = doc.select(selectorText);\n-        if (CollectionUtils.isNotEmpty(elements)) {\n+        if (CollectionUtils.isEmpty(elements)) {\n             return null;\n         }\n         return elements.get(0).outerHtml();\n",
        "projectName": "code4craft.webmagic",
        "bugLineNum": 30,
        "bugNodeStartChar": 734,
        "bugNodeLength": 36,
        "fixLineNum": 30,
        "fixNodeStartChar": 734,
        "fixNodeLength": 33,
        "sourceBeforeFix": "CollectionUtils.isNotEmpty(elements)",
        "sourceAfterFix": "CollectionUtils.isEmpty(elements)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bfb69f6eeabb7ba6140f95d27c6b16f6f2e40d47",
        "fixCommitParentSHA1": "10f82d19223e19a2e8b360ced7972126942416df",
        "bugFilePath": "hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java",
        "fixPatch": "diff --git a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\nindex fc3c617..1c7e70c 100644\n--- a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\n+++ b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\n@@ -449,7 +449,7 @@\n   static void signalTasks(MiniDFSCluster dfs, FileSystem fileSys, \n                           String mapSignalFile, \n                           String reduceSignalFile, int replication) \n-  throws IOException {\n+  throws Exception {\n     writeFile(dfs.getNameNode(), fileSys.getConf(), new Path(mapSignalFile), \n               (short)replication);\n     writeFile(dfs.getNameNode(), fileSys.getConf(), new Path(reduceSignalFile), \n@@ -462,7 +462,7 @@\n   static void signalTasks(MiniDFSCluster dfs, FileSystem fileSys, \n                           boolean isMap, String mapSignalFile, \n                           String reduceSignalFile)\n-  throws IOException {\n+  throws Exception {\n     //  signal the maps to complete\n     writeFile(dfs.getNameNode(), fileSys.getConf(),\n               isMap \n@@ -483,7 +483,7 @@\n   }\n   \n   static void writeFile(NameNode namenode, Configuration conf, Path name, \n-      short replication) throws IOException {\n+      short replication) throws Exception {\n     FileSystem fileSys = FileSystem.get(conf);\n     SequenceFile.Writer writer = \n       SequenceFile.createWriter(fileSys, conf, name, \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 459,
        "bugNodeStartChar": 14024,
        "bugNodeLength": 461,
        "fixLineNum": 459,
        "fixNodeStartChar": 14024,
        "fixNodeLength": 459,
        "sourceBeforeFix": "/**   * Signal the maps/reduces to start.  */ static void signalTasks(MiniDFSCluster dfs,FileSystem fileSys,boolean isMap,String mapSignalFile,String reduceSignalFile) throws IOException {   writeFile(dfs.getNameNode(),fileSys.getConf(),isMap ? new Path(mapSignalFile) : new Path(reduceSignalFile),(short)1); } ",
        "sourceAfterFix": "/**   * Signal the maps/reduces to start.  */ static void signalTasks(MiniDFSCluster dfs,FileSystem fileSys,boolean isMap,String mapSignalFile,String reduceSignalFile) throws Exception {   writeFile(dfs.getNameNode(),fileSys.getConf(),isMap ? new Path(mapSignalFile) : new Path(reduceSignalFile),(short)1); } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "38a43deb5ee7d48ed0ad7dbfbc789a2e82ebbfc2",
        "fixCommitParentSHA1": "2c3336c23cbce4352547bde7aaaaeb6c7dfdd578",
        "bugFilePath": "core/src/test/java/tachyon/master/LocalTachyonCluster.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/master/LocalTachyonCluster.java b/core/src/test/java/tachyon/master/LocalTachyonCluster.java\nindex a135fee..cf2f979 100644\n--- a/core/src/test/java/tachyon/master/LocalTachyonCluster.java\n+++ b/core/src/test/java/tachyon/master/LocalTachyonCluster.java\n@@ -156,7 +156,7 @@\n     System.setProperty(\"tachyon.worker.selector.threads\", Integer.toString(1));\n     System.setProperty(\"tachyon.worker.server.threads\", Integer.toString(2));\n     System.setProperty(\"tachyon.worker.network.netty.worker.threads\", Integer.toString(2));\n-    System.setProperty(\"tachyon.master.web.threads\", Integer.toString(1));\n+    System.setProperty(\"tachyon.master.web.threads\", Integer.toString(9));\n \n     CommonConf.clear();\n     MasterConf.clear();\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 159,
        "bugNodeStartChar": 4703,
        "bugNodeLength": 19,
        "fixLineNum": 159,
        "fixNodeStartChar": 4703,
        "fixNodeLength": 19,
        "sourceBeforeFix": "Integer.toString(1)",
        "sourceAfterFix": "Integer.toString(9)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 741,
        "bugNodeStartChar": 24984,
        "bugNodeLength": 61,
        "fixLineNum": 741,
        "fixNodeStartChar": 24244,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GL20.glUniform4(location,toIntBuffer(v,offset,count << 2))",
        "sourceAfterFix": "GL20.glUniform4iv(location,toIntBuffer(v,offset,count << 2))"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "e81be4536f5156b105fff4b7328fc3e4e7a24931",
        "fixCommitParentSHA1": "b943f97e8c2108dafa66ebab73519a6bfb90db8d",
        "bugFilePath": "src/main/java/junit/runner/BaseTestRunner.java",
        "fixPatch": "diff --git a/src/main/java/junit/runner/BaseTestRunner.java b/src/main/java/junit/runner/BaseTestRunner.java\nindex 48e62a0..ced137e 100644\n--- a/src/main/java/junit/runner/BaseTestRunner.java\n+++ b/src/main/java/junit/runner/BaseTestRunner.java\n@@ -111,7 +111,7 @@\n         }\n         Method suiteMethod = null;\n         try {\n-            suiteMethod = testClass.getMethod(SUITE_METHODNAME, new Class[0]);\n+            suiteMethod = testClass.getMethod(SUITE_METHODNAME);\n         } catch (Exception e) {\n             // try to extract a test suite automatically\n             clearStatus();\n@@ -123,7 +123,7 @@\n         }\n         Test test = null;\n         try {\n-            test = (Test) suiteMethod.invoke(null, (Object[]) new Class[0]); // static method\n+            test = (Test) suiteMethod.invoke(null); // static method\n             if (test == null) {\n                 return test;\n             }\n",
        "projectName": "junit-team.junit",
        "bugLineNum": 126,
        "bugNodeStartChar": 3862,
        "bugNodeLength": 49,
        "fixLineNum": 126,
        "fixNodeStartChar": 3862,
        "fixNodeLength": 24,
        "sourceBeforeFix": "suiteMethod.invoke(null,(Object[])new Class[0])",
        "sourceAfterFix": "suiteMethod.invoke(null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 521,
        "bugNodeStartChar": 24506,
        "bugNodeLength": 117,
        "fixLineNum": 521,
        "fixNodeStartChar": 24506,
        "fixNodeLength": 117,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\",null,paging.asPostParameterList(),true))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3e58b69ba612b62fe9bc6f1cf5ac26fdba4e769c",
        "fixCommitParentSHA1": "41f5c83e6238e1621ddb557071db4f7bf708b965",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\nindex a0e150f..550a23e 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n@@ -1021,11 +1021,11 @@\n         Map<?, ?> property = exchange.getProperty(Exchange.AGGREGATION_STRATEGY, Map.class);\n         Map<Object, AggregationStrategy> map = CastUtils.cast(property);\n         if (map == null) {\n-            map = new HashMap<Object, AggregationStrategy>();\n+            map = new ConcurrentHashMap<Object, AggregationStrategy>();\n         } else {\n             // it is not safe to use the map directly as the exchange doesn't have the deep copy of it's properties\n             // we just create a new copy if we need to change the map\n-            map = new HashMap<Object, AggregationStrategy>(map);\n+            map = new ConcurrentHashMap<Object, AggregationStrategy>(map);\n         }\n         // store the strategy using this processor as the key\n         // (so we can store multiple strategies on the same exchange)\n",
        "projectName": "apache.camel",
        "bugLineNum": 1028,
        "bugNodeStartChar": 48917,
        "bugNodeLength": 36,
        "fixLineNum": 1028,
        "fixNodeStartChar": 48917,
        "fixNodeLength": 46,
        "sourceBeforeFix": "HashMap<Object,AggregationStrategy>",
        "sourceAfterFix": "ConcurrentHashMap<Object,AggregationStrategy>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b1aa0100b3f37551bcd8507d168449d8b03c5c57",
        "fixCommitParentSHA1": "5fee5e8382579c75bf383897625e3c00ca05e14b",
        "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java",
        "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\nindex a91b507..76cf514 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java\n@@ -72,7 +72,7 @@\n             expand(view, absNode);\n         //sightManager.updateSight((SightImpl) sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n@@ -94,7 +94,7 @@\n             retract(view, ((AbstractNode) node));\n         //sightManager.updateSight((SightImpl)sight);\n         }\n-        graphVersion.incNodeVersion();\n+        graphVersion.incNodeAndEdgeVersion();\n         dhns.getWriteLock().unlock();\n         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);\n     }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 75,
        "bugNodeStartChar": 2610,
        "bugNodeLength": 29,
        "fixLineNum": 75,
        "fixNodeStartChar": 2610,
        "fixNodeLength": 36,
        "sourceBeforeFix": "graphVersion.incNodeVersion()",
        "sourceAfterFix": "graphVersion.incNodeAndEdgeVersion()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e",
        "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 172,
        "bugNodeStartChar": 7541,
        "bugNodeLength": 21,
        "fixLineNum": 172,
        "fixNodeStartChar": 7541,
        "fixNodeLength": 32,
        "sourceBeforeFix": "buildPages.getTypes()",
        "sourceAfterFix": "buildPages.getTypesWithoutHash()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7c3ad0194c2aa495bf464f68e0da6622733b4430",
        "fixCommitParentSHA1": "7ea02f16ec85e32ed5f2a91a100aa588e8358527",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java b/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\nindex dba7abc..5144c22 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\n@@ -30,7 +30,7 @@\n public final class TtlBucket implements Comparable<TtlBucket> {\n   /** The time interval of this bucket is the same as ttl checker's interval. */\n   private static long sTtlIntervalMs =\n-      Configuration.getInt(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS);\n+      Configuration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS);\n   /**\n    * Each bucket has a time to live interval, this value is the start of the interval, interval\n    * value is the same as the configuration of {@link PropertyKey#MASTER_TTL_CHECKER_INTERVAL_MS}.\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 33,
        "bugNodeStartChar": 1179,
        "bugNodeLength": 64,
        "fixLineNum": 33,
        "fixNodeStartChar": 1179,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Configuration.getInt(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS)",
        "sourceAfterFix": "Configuration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "1daccd54d2ff2ecdb21d8c60268600c37febbb70",
        "fixCommitParentSHA1": "ef063203d3f0503e52661a0bad1c27fd23c81f4c",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 3e80eb8..411c7b0 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -52,7 +52,7 @@\n \n   public static void createFiles() throws IOException {\n     long startTimeMs = CommonUtils.getCurrentMs();\n-    for (int k = 0; k < THREADS; k ++) {\n+    for (int k = 0; k < FILES; k++) {\n       int fileId = MTC.createFile(FILE_NAME + (k + BASE_FILE_NUMBER));\n       CommonUtils.printTimeTakenMs(startTimeMs, LOG, \"user_createFiles with fileId \" + fileId);\n     }\n@@ -109,12 +109,12 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-            mBuf.array()[0] = (byte) (k + mWorkerId);\n+            mBuf.putInt(0, k + mWorkerId);\n             dst.put(mBuf.array());\n           }\n           dst.clear();\n@@ -134,7 +134,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -180,10 +180,10 @@\n       mBuf.flip();\n       for (int pId = mLeft; pId < mRight; pId ++) {\n         long startTimeMs = System.currentTimeMillis();\n-        TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+        TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n         OutStream os = file.getOutStream(WriteType.MUST_CACHE);\n         for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-          mBuf.array()[0] = (byte) (k + mWorkerId);\n+          mBuf.putInt(0, k + mWorkerId);\n           os.write(mBuf.array());\n         }\n         os.close();\n@@ -216,10 +216,10 @@\n         LOG.info(\"Verifying the reading data...\");\n \n         for (int pId = mLeft; pId < mRight; pId ++) {\n-          TachyonFile file = mTC.getFile(FILE_NAME + mWorkerId);\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           IntBuffer intBuf;\n-          intBuf = buf.DATA.asIntBuffer();\n+          intBuf = buf.DATA.order(ByteOrder.nativeOrder()).asIntBuffer();\n           int tmp;\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             for (int k = 0; k < BLOCK_SIZE_BYTES / 4; k ++) {\n@@ -238,7 +238,7 @@\n       if (TACHYON_STREAMING_READ) {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           InputStream is = file.getInStream(ReadType.CACHE);\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n@@ -253,7 +253,7 @@\n       } else {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             buf.DATA.get(mBuf.array());\n@@ -261,7 +261,7 @@\n           sum += mBuf.get(pId % 16);\n \n           if (DEBUG_MODE) {\n-            buf.DATA.flip();\n+            buf.DATA.order(ByteOrder.nativeOrder()).flip();\n             CommonUtils.printByteBuffer(LOG, buf.DATA);\n           }\n           buf.DATA.clear();\n@@ -323,10 +323,10 @@\n       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-            mBuf.array()[0] = (byte) (k + mWorkerId);\n+            mBuf.putInt(0, k + mWorkerId);\n             os.write(mBuf.array());\n           }\n           os.close();\n@@ -335,7 +335,7 @@\n       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 256,
        "bugNodeStartChar": 8454,
        "bugNodeLength": 28,
        "fixLineNum": 256,
        "fixNodeStartChar": 8454,
        "fixNodeLength": 22,
        "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER",
        "sourceAfterFix": "pId + BASE_FILE_NUMBER"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4de7095031109d5fddc611d5e8158c43562e57f6",
        "fixCommitParentSHA1": "f49eb6826480f7cf18bfff100b3753f3657d29fb",
        "bugFilePath": "src/test/java/redis/clients/jedis/tests/commands/BinaryValuesCommandsTest.java",
        "fixPatch": "diff --git a/src/test/java/redis/clients/jedis/tests/commands/BinaryValuesCommandsTest.java b/src/test/java/redis/clients/jedis/tests/commands/BinaryValuesCommandsTest.java\nindex bdd1c91..21432fe 100644\n--- a/src/test/java/redis/clients/jedis/tests/commands/BinaryValuesCommandsTest.java\n+++ b/src/test/java/redis/clients/jedis/tests/commands/BinaryValuesCommandsTest.java\n@@ -74,7 +74,7 @@\n     String status = jedis.set(bfoo, binaryValue);\n     assertTrue(Keyword.OK.name().equalsIgnoreCase(status));\n     // nx should fail if value exists\n-    String statusSuccess = jedis.set(bfoo, binaryValue, setParams().nx().ex(expireSeconds));\n+    String statusSuccess = jedis.set(bfoo, binaryValue, setParams().xx().ex(expireSeconds));\n     assertTrue(Keyword.OK.name().equalsIgnoreCase(statusSuccess));\n \n     byte[] value = jedis.get(bfoo);\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 77,
        "bugNodeStartChar": 2182,
        "bugNodeLength": 16,
        "fixLineNum": 77,
        "fixNodeStartChar": 2182,
        "fixNodeLength": 16,
        "sourceBeforeFix": "setParams().nx()",
        "sourceAfterFix": "setParams().xx()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5530d4c27d508c513b68af67aadede84b4cfa102",
        "fixCommitParentSHA1": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java\nindex 19bb591..86a77ce 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java\n@@ -76,7 +76,7 @@\n     private String fileLocation;\n \n     /** The root package controller. */\n-    private PkgControl root;\n+    private ImportControl root;\n     /** The package doing the import. */\n     private String inPkg;\n \n@@ -84,7 +84,7 @@\n      * The package controller for the current file. Used for performance\n      * optimisation.\n      */\n-    private PkgControl currentLeaf;\n+    private ImportControl currentLeaf;\n \n     @Override\n     public int[] getDefaultTokens() {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 83,
        "bugNodeStartChar": 3062,
        "bugNodeLength": 141,
        "fixLineNum": 83,
        "fixNodeStartChar": 3062,
        "fixNodeLength": 144,
        "sourceBeforeFix": "/**   * The package controller for the current file. Used for performance optimisation.  */ private PkgControl currentLeaf; ",
        "sourceAfterFix": "/**   * The package controller for the current file. Used for performance optimisation.  */ private ImportControl currentLeaf; "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b3006a1c95564207deee570ac402a183ed362ac9",
        "fixCommitParentSHA1": "21a1ca49b2b541603a8defd3eba5b0277ea8bb69",
        "bugFilePath": "modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java",
        "fixPatch": "diff --git a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\nindex 3d5b9fb..ce5aa19 100644\n--- a/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n+++ b/modules/activiti-rest/src/main/java/org/activiti/rest/api/task/TaskBasedResource.java\n@@ -173,13 +173,13 @@\n       taskQuery.taskDefinitionKey(request.getTaskDefinitionKey());\n     }\n     taskQuery.taskDefinitionKeyLike(request.getTaskDefinitionKeyLike());\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueDate() != null) {\n       taskQuery.dueDate(request.getDueDate());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueBefore() != null) {\n       taskQuery.dueBefore(request.getDueBefore());\n     }\n-    if(request.getTaskDefinitionKey() != null) {\n+    if(request.getDueAfter() != null) {\n       taskQuery.dueAfter(request.getDueAfter());\n     }\n     \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 182,
        "bugNodeStartChar": 6607,
        "bugNodeLength": 30,
        "fixLineNum": 182,
        "fixNodeStartChar": 6607,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getTaskDefinitionKey()",
        "sourceAfterFix": "request.getDueAfter()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "24bc88e4ccc3f2e3e8419acb5a5084f5dd26634d",
        "fixCommitParentSHA1": "cb7169cecfe97efe1312492297fe16ef7ace09bc",
        "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java",
        "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\nindex 685690a..1c457b5 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/interceptor/ChannelPipelineWriteInterceptor.java\n@@ -109,7 +109,7 @@\n     }\n \n     private boolean validate(Object[] args) {\n-        if (args.length == 0) {\n+        if (args == null || args.length == 0) {\n             return false;\n         }\n \n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 112,
        "bugNodeStartChar": 3875,
        "bugNodeLength": 16,
        "fixLineNum": 112,
        "fixNodeStartChar": 3875,
        "fixNodeLength": 32,
        "sourceBeforeFix": "args.length == 0",
        "sourceAfterFix": "args == null || args.length == 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\nindex ffce204..157f0d0 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n@@ -69,28 +69,28 @@\n     @EncodeMethod(id = 14)\n     void addAllWithIndex(String name, int index, List<Data> valueList);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 15)\n     void get(String name, int index);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 16)\n     void set(String name, int index, Data value);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 17)\n     void addWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 18)\n     void removeWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 19)\n     void lastIndexOf(String name, Data value);\n \n-    @EncodeMethod(id = 18)\n+    @EncodeMethod(id = 20)\n     void indexOf(String name, Data value);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 21)\n     void sub(String name, int from, int to);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 22)\n     void iterator(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 84,
        "bugNodeStartChar": 2417,
        "bugNodeLength": 7,
        "fixLineNum": 84,
        "fixNodeStartChar": 2417,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=17",
        "sourceAfterFix": "id=19"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "8e1a7fa4aa2a70e51f6a68a88a31e39d9eae6215",
        "fixCommitParentSHA1": "33138a3051ad49279a16234f1994835cf96defe6",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\nindex 287f8ed..eccb45a 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\n@@ -535,7 +535,7 @@\n \t\t}\n \t\telse if (multiInstanceCommandClass.getVersion() == 1) {\n \t\t\tZWaveCommandClass result = getCommandClass(commandClass);\n-\t\t\tif (endpointId <= result.getInstances()) {\n+\t\t\tif (result != null && endpointId <= result.getInstances()) {\n \t\t\t\treturn result;\n \t\t\t}\n \t\t} else {\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 538,
        "bugNodeStartChar": 14715,
        "bugNodeLength": 35,
        "fixLineNum": 538,
        "fixNodeStartChar": 14715,
        "fixNodeLength": 53,
        "sourceBeforeFix": "endpointId <= result.getInstances()",
        "sourceAfterFix": "result != null && endpointId <= result.getInstances()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "bef3817b62b1d1e399aabcf7df5b6ebfe0e1a8a5",
        "fixCommitParentSHA1": "258a0f37bddf0f66d3fe045e0bbfa6dbe62ae97c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java b/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\nindex e85b51a..bbdfbab 100644\n--- a/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\n+++ b/presto-main/src/main/java/com/facebook/presto/version/EmbedVersion.java\n@@ -82,7 +82,7 @@\n         String configuredVersion = serverConfig.getPrestoVersion();\n \n         String version = configuredVersion;\n-        if (Objects.equals(builtInVersion, configuredVersion)) {\n+        if (!Objects.equals(builtInVersion, configuredVersion)) {\n             version = format(\"%s__%s\", builtInVersion, configuredVersion);\n         }\n         return format(\"Presto_%s___\", version);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 85,
        "bugNodeStartChar": 3427,
        "bugNodeLength": 49,
        "fixLineNum": 85,
        "fixNodeStartChar": 3427,
        "fixNodeLength": 50,
        "sourceBeforeFix": "Objects.equals(builtInVersion,configuredVersion)",
        "sourceAfterFix": "!Objects.equals(builtInVersion,configuredVersion)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "12a6f937cb623ec89e570883010340016c5493a3",
        "fixCommitParentSHA1": "b789aebcfbf19d7b0fd6c2d6643adfd5a8de5f12",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDescUtils.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDescUtils.java b/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDescUtils.java\nindex 596640e..7b23240 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDescUtils.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeDescUtils.java\n@@ -432,7 +432,7 @@\n     // Find the key/value where the ExprNodeDesc value matches the column we are searching for.\n     // The key portion of the entry will be the internal column name for the join key expression.\n     for (Map.Entry<String, ExprNodeDesc> mapEntry : reduceSinkOp.getColumnExprMap().entrySet()) {\n-      if (mapEntry.getValue().isSame(source)) {\n+      if (mapEntry.getValue().equals(source)) {\n         String columnInternalName = mapEntry.getKey();\n         if (source instanceof ExprNodeColumnDesc) {\n           // The join key is a table column. Create the ExprNodeDesc based on this column.\n",
        "projectName": "apache.hive",
        "bugLineNum": 435,
        "bugNodeStartChar": 16455,
        "bugNodeLength": 34,
        "fixLineNum": 435,
        "fixNodeStartChar": 16455,
        "fixNodeLength": 34,
        "sourceBeforeFix": "mapEntry.getValue().isSame(source)",
        "sourceAfterFix": "mapEntry.getValue().equals(source)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6413dacaaf602e9de5fe439ee290229563f8e361",
        "fixCommitParentSHA1": "bcb0f3317057c902405be428e260077882cc755f",
        "bugFilePath": "jacorb/src/main/java/org/jboss/as/jacorb/JacORBExtension.java",
        "fixPatch": "diff --git a/jacorb/src/main/java/org/jboss/as/jacorb/JacORBExtension.java b/jacorb/src/main/java/org/jboss/as/jacorb/JacORBExtension.java\nindex 855617d..d990b1e 100644\n--- a/jacorb/src/main/java/org/jboss/as/jacorb/JacORBExtension.java\n+++ b/jacorb/src/main/java/org/jboss/as/jacorb/JacORBExtension.java\n@@ -55,7 +55,7 @@\n \n     @Override\n     public void initialize(ExtensionContext context) {\n-        final SubsystemRegistration subsystem = context.registerSubsystem(SUBSYSTEM_NAME, 1, 0);\n+        final SubsystemRegistration subsystem = context.registerSubsystem(SUBSYSTEM_NAME, 1, 1);\n         final ManagementResourceRegistration subsystemRegistration = subsystem.registerSubsystemModel(JacORBSubsystemResource.INSTANCE);\n         subsystemRegistration.registerOperationHandler(DESCRIBE, GenericSubsystemDescribeHandler.INSTANCE, GenericSubsystemDescribeHandler.INSTANCE, false, OperationEntry.EntryType.PRIVATE);\n         subsystem.registerXMLElementWriter(PARSER);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 58,
        "bugNodeStartChar": 2523,
        "bugNodeLength": 47,
        "fixLineNum": 58,
        "fixNodeStartChar": 2523,
        "fixNodeLength": 47,
        "sourceBeforeFix": "context.registerSubsystem(SUBSYSTEM_NAME,1,0)",
        "sourceAfterFix": "context.registerSubsystem(SUBSYSTEM_NAME,1,1)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "f827d5c9909e01054e60374ee6016b569ca88825",
        "fixCommitParentSHA1": "bc5bd9d0a8e8afe7ca7882f93cb7899a8c1d533a",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/TokensRegexNERAnnotator.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/TokensRegexNERAnnotator.java b/src/edu/stanford/nlp/pipeline/TokensRegexNERAnnotator.java\nindex 7df4f7d..16c9a06 100644\n--- a/src/edu/stanford/nlp/pipeline/TokensRegexNERAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/TokensRegexNERAnnotator.java\n@@ -247,7 +247,7 @@\n       }\n     }\n     boolean overwriteOriginalNer = false;\n-    if (prevNerEndIndex != (start-1) || nextNerStartIndex != end) {\n+    if (prevNerEndIndex != (start-1) && nextNerStartIndex != end) {\n       // Cutting across already recognized NEs don't disturb\n     } else if (startNer == null) {\n       // No old ner, okay to replace\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 250,
        "bugNodeStartChar": 9757,
        "bugNodeLength": 56,
        "fixLineNum": 250,
        "fixNodeStartChar": 9757,
        "fixNodeLength": 56,
        "sourceBeforeFix": "prevNerEndIndex != (start - 1) || nextNerStartIndex != end",
        "sourceAfterFix": "prevNerEndIndex != (start - 1) && nextNerStartIndex != end"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "42d41d194dd5ff6bc7886f5a167aae9316b814bc",
        "fixCommitParentSHA1": "0442cf1a44985039b3c2846fd74c41d78d8ccd26",
        "bugFilePath": "servers/src/main/java/tachyon/master/lineage/recompute/RecomputeExecutor.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/master/lineage/recompute/RecomputeExecutor.java b/servers/src/main/java/tachyon/master/lineage/recompute/RecomputeExecutor.java\nindex 538e0fe..23ef45f 100644\n--- a/servers/src/main/java/tachyon/master/lineage/recompute/RecomputeExecutor.java\n+++ b/servers/src/main/java/tachyon/master/lineage/recompute/RecomputeExecutor.java\n@@ -65,7 +65,7 @@\n \n   @Override\n   public void close() {\n-    mFixedExecutionService.shutdown();\n+    mRecomputeLauncherService.shutdown();\n   }\n \n   /**\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 68,
        "bugNodeStartChar": 2567,
        "bugNodeLength": 33,
        "fixLineNum": 68,
        "fixNodeStartChar": 2567,
        "fixNodeLength": 36,
        "sourceBeforeFix": "mFixedExecutionService.shutdown()",
        "sourceAfterFix": "mRecomputeLauncherService.shutdown()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "1528764194aced9df27bc34847de70e0fcd0c268",
        "fixCommitParentSHA1": "ed6f11d60de998f85687fa90a736b695771cf1a7",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/json/BasicJsonParser.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/json/BasicJsonParser.java b/spring-boot/src/main/java/org/springframework/boot/json/BasicJsonParser.java\nindex ec43e0c..9b0b40a 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/json/BasicJsonParser.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/json/BasicJsonParser.java\n@@ -93,14 +93,14 @@\n \t}\n \n \tprivate static String trimTrailingCharacter(String string, char c) {\n-\t\tif (string.length() >= 0 && string.charAt(string.length() - 1) == c) {\n+\t\tif (string.length() > 0 && string.charAt(string.length() - 1) == c) {\n \t\t\treturn string.substring(0, string.length() - 1);\n \t\t}\n \t\treturn string;\n \t}\n \n \tprivate static String trimLeadingCharacter(String string, char c) {\n-\t\tif (string.length() >= 0 && string.charAt(0) == c) {\n+\t\tif (string.length() > 0 && string.charAt(0) == c) {\n \t\t\treturn string.substring(1);\n \t\t}\n \t\treturn string;\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 103,
        "bugNodeStartChar": 2811,
        "bugNodeLength": 20,
        "fixLineNum": 103,
        "fixNodeStartChar": 2811,
        "fixNodeLength": 19,
        "sourceBeforeFix": "string.length() >= 0",
        "sourceAfterFix": "string.length() > 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5a71e9e18726a4ccd1f83e8a2c7c7f5d4a57411d",
        "fixCommitParentSHA1": "c7518e70335a662ff7610006140d270068f2161d",
        "bugFilePath": "src/main/java/org/bukkit/Material.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java\nindex bc089e6..f2624e1 100644\n--- a/src/main/java/org/bukkit/Material.java\n+++ b/src/main/java/org/bukkit/Material.java\n@@ -189,7 +189,7 @@\n     SNOW_BALL(332, 16),\n     BOAT(333, 1),\n     LEATHER(334),\n-    MILK_BUCKET(335),\n+    MILK_BUCKET(335, 1),\n     CLAY_BRICK(336),\n     CLAY_BALL(337),\n     SUGAR_CANE(338),\n@@ -200,20 +200,20 @@\n     POWERED_MINECART(343, 1),\n     EGG(344, 16),\n     COMPASS(345),\n-    FISHING_ROD(346, 1, 32),\n+    FISHING_ROD(346, 1, 64),\n     WATCH(347),\n     GLOWSTONE_DUST(348),\n-    RAW_FISH(349),\n-    COOKED_FISH(350),\n+    RAW_FISH(349, 1),\n+    COOKED_FISH(350, 1),\n     INK_SACK(351, Dye.class),\n     BONE(352),\n     SUGAR(353),\n     CAKE(354, 1),\n-    BED(355),\n+    BED(355, 1),\n     DIODE(356),\n-    COOKIE(357),\n-    MAP(358),\n-    SHEARS(359),\n+    COOKIE(357, 8),\n+    MAP(358, 1, MaterialData.class),\n+    SHEARS(359, 1, 238),\n     GOLD_RECORD(2256, 1),\n     GREEN_RECORD(2257, 1);\n \n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 203,
        "bugNodeStartChar": 5344,
        "bugNodeLength": 23,
        "fixLineNum": 203,
        "fixNodeStartChar": 5344,
        "fixNodeLength": 23,
        "sourceBeforeFix": "FISHING_ROD(346,1,32)",
        "sourceAfterFix": "FISHING_ROD(346,1,64)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "43c0a9b32431052285f0a511982fc00d99af3e03",
        "fixCommitParentSHA1": "2f0293966be736c7bdf9177b7b49058ef040a6c1",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\nindex 3a23b4a..918ce40 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ArrayAggregationFunction.java\n@@ -113,7 +113,7 @@\n     {\n         BlockBuilder blockBuilder = state.getBlockBuilder();\n         if (blockBuilder == null) {\n-            blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 100);\n+            blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 4);\n             state.setBlockBuilder(blockBuilder);\n         }\n         long startSize = blockBuilder.getRetainedSizeInBytes();\n",
        "projectName": "facebook.presto",
        "bugLineNum": 116,
        "bugNodeStartChar": 5842,
        "bugNodeLength": 54,
        "fixLineNum": 116,
        "fixNodeStartChar": 5842,
        "fixNodeLength": 52,
        "sourceBeforeFix": "type.createBlockBuilder(new BlockBuilderStatus(),100)",
        "sourceAfterFix": "type.createBlockBuilder(new BlockBuilderStatus(),4)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "eeaa1090267dccd27846e7d40d91cfdcc57cec02",
        "fixCommitParentSHA1": "21b7223855b8fee882b0ab36f2f7dd264ee85311",
        "bugFilePath": "components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaShutdownCompleteAllTasksTest.java",
        "fixPatch": "diff --git a/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaShutdownCompleteAllTasksTest.java b/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaShutdownCompleteAllTasksTest.java\nindex 2a0c0e9..4a37c83 100644\n--- a/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaShutdownCompleteAllTasksTest.java\n+++ b/components/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaShutdownCompleteAllTasksTest.java\n@@ -75,15 +75,15 @@\n                 from(\"jpa://\" + SendEmail.class.getName()).routeId(\"route1\")\n                      // let it complete all tasks\n                      .shutdownRunningTask(ShutdownRunningTask.CompleteAllTasks)\n-                     .delay(1000).to(\"seda:foo\");\n+                     .to(\"seda:foo\");\n \n-                from(\"seda:foo\").routeId(\"route2\").to(\"mock:bar\");\n+                from(\"seda:foo\").delay(1000).to(\"mock:bar\");\n             }\n         });\n         context.start();\n \n         MockEndpoint bar = getMockEndpoint(\"mock:bar\");\n-        bar.expectedMinimumMessageCount(1);\n+        bar.expectedMinimumMessageCount(2);\n \n         assertMockEndpointsSatisfied();\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 86,
        "bugNodeStartChar": 3459,
        "bugNodeLength": 34,
        "fixLineNum": 86,
        "fixNodeStartChar": 3459,
        "fixNodeLength": 34,
        "sourceBeforeFix": "bar.expectedMinimumMessageCount(1)",
        "sourceAfterFix": "bar.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "6bd7b27abf18fdfb301a7c95e1d2e7888f884c48",
        "fixCommitParentSHA1": "4519131f77ee7cc48d09819b3919a469514a41d1",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java\nindex d13c7dc..cab6dd7 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java\n@@ -190,7 +190,7 @@\n    * balancing purpose at a datanode\n    */\n   public static final int MAX_NUM_CONCURRENT_MOVES = 5;\n-  public static final int MAX_NO_PENDING_BLOCK_INTERATIONS = 5;\n+  private static final int MAX_NO_PENDING_BLOCK_ITERATIONS = 5;\n   \n   private static final String USAGE = \"Usage: java \"\n       + Balancer.class.getSimpleName()\n@@ -782,7 +782,7 @@\n           noPendingBlockIteration++;\n           // in case no blocks can be moved for source node's task,\n           // jump out of while-loop after 5 iterations.\n-          if (noPendingBlockIteration >= MAX_NO_PENDING_BLOCK_INTERATIONS) {\n+          if (noPendingBlockIteration >= MAX_NO_PENDING_BLOCK_ITERATIONS) {\n             scheduledSize = 0;\n           }\n         }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 785,
        "bugNodeStartChar": 29421,
        "bugNodeLength": 59,
        "fixLineNum": 785,
        "fixNodeStartChar": 29421,
        "fixNodeLength": 58,
        "sourceBeforeFix": "noPendingBlockIteration >= MAX_NO_PENDING_BLOCK_INTERATIONS",
        "sourceAfterFix": "noPendingBlockIteration >= MAX_NO_PENDING_BLOCK_ITERATIONS"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketProducerRouteRestartTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketProducerRouteRestartTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketProducerRouteRestartTest.java\nindex 3f9c4d2..e28ca29 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketProducerRouteRestartTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketProducerRouteRestartTest.java\n@@ -121,7 +121,7 @@\n         return new RouteBuilder() {\n             public void configure() {\n                 WebsocketComponent websocketComponent = (WebsocketComponent) context.getComponent(\"websocket\");\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n                 websocketComponent.setMinThreads(1);\n                 from(\"direct:shop\")\n                     .id(ROUTE_ID)\n",
        "projectName": "apache.camel",
        "bugLineNum": 124,
        "bugNodeStartChar": 4407,
        "bugNodeLength": 36,
        "fixLineNum": 124,
        "fixNodeStartChar": 4407,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5ee46848f4043aafcb7f8d49e7ecbf4494001653",
        "fixCommitParentSHA1": "79ab12d138b22b4da1537c31395d7b30b219a940",
        "bugFilePath": "DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java",
        "fixPatch": "diff --git a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\nindex a860816..c4807a9 100644\n--- a/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n+++ b/DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java\n@@ -53,7 +53,7 @@\n     }\n \n     private boolean isSelected() {\n-        return FiltersTopComponent.findInstance().getUiModel().getSelectedQuery() == query;\n+        return FiltersTopComponent.findInstance().getUiModel().getSelectedRoot() == query;\n     }\n \n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 56,
        "bugNodeStartChar": 1739,
        "bugNodeLength": 66,
        "fixLineNum": 56,
        "fixNodeStartChar": 1739,
        "fixNodeLength": 65,
        "sourceBeforeFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedQuery()",
        "sourceAfterFix": "FiltersTopComponent.findInstance().getUiModel().getSelectedRoot()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7fa8196f36c80922289924134acfd975270c6c4c",
        "fixCommitParentSHA1": "40e6cdc402e5a17d7fc61504aef983be3c7c44a0",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java b/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java\nindex 84418ca..3012e8f 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/EvictionTest.java\n@@ -503,7 +503,7 @@\n         for (int i = 0; i < size; i++) {\n             map.put(i, i);\n         }\n-        assertTrue(latch.await(5, TimeUnit.MINUTES));\n+        assertTrue(\"map size is : \" + map.size(), latch.await(5, TimeUnit.MINUTES));\n         assertEquals(0, map.size());\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 506,
        "bugNodeStartChar": 19042,
        "bugNodeLength": 44,
        "fixLineNum": 506,
        "fixNodeStartChar": 19042,
        "fixNodeLength": 75,
        "sourceBeforeFix": "assertTrue(latch.await(5,TimeUnit.MINUTES))",
        "sourceAfterFix": "assertTrue(\"map size is : \" + map.size(),latch.await(5,TimeUnit.MINUTES))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "40db776fd1a038366d4e72c6b81f21b88792122a",
        "fixCommitParentSHA1": "817b2beee208f6dff1c9393209d261a77d7666cf",
        "bugFilePath": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\nindex 12b1036..6560668 100644\n--- a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n+++ b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n@@ -80,7 +80,7 @@\n @Category(CommonCriteria.class)\n public class AuthenticationTestCase {\n \n-    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getServerAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n+    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getHttpAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n     private static final String WAR_URL = \"http://\" + SERVER_HOST_PORT + \"/ejb3security/\";\n \n     /*\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 3644,
        "bugNodeLength": 39,
        "fixLineNum": 83,
        "fixNodeStartChar": 3644,
        "fixNodeLength": 37,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getHttpAddress()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "28cabcde96679f2e2f29ad56983f2e51d5b838cd",
        "fixCommitParentSHA1": "b91cffdd86944eef7e66c180ee13aad222d8381a",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\nindex ce81b72..cf10c7e 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapStoreTest.java\n@@ -1391,7 +1391,7 @@\n         MapConfig writeBehindBackupConfig = config.getMapConfig(name);\n         MapStoreConfig mapStoreConfig = new MapStoreConfig();\n         mapStoreConfig.setWriteDelaySeconds(5);\n-        final MapStoreWithStoreCount mapStore = new MapStoreWithStoreCount(expectedStoreCount, 300, 100);\n+        final MapStoreWithStoreCount mapStore = new MapStoreWithStoreCount(expectedStoreCount, 300, 50);\n         mapStoreConfig.setImplementation(mapStore);\n         writeBehindBackupConfig.setMapStoreConfig(mapStoreConfig);\n         // create nodes.\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1394,
        "bugNodeStartChar": 55720,
        "bugNodeLength": 56,
        "fixLineNum": 1394,
        "fixNodeStartChar": 55720,
        "fixNodeLength": 55,
        "sourceBeforeFix": "new MapStoreWithStoreCount(expectedStoreCount,300,100)",
        "sourceAfterFix": "new MapStoreWithStoreCount(expectedStoreCount,300,50)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "acb1b41805a108bf3b9052af416510b5b5f4636d",
        "fixCommitParentSHA1": "bcfba9fcab5a4cd297b0c4fc056cb9ae15406cf5",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\nindex 110ea49..cce1eaf 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/util/SortBuffer.java\n@@ -85,7 +85,7 @@\n     {\n         checkState(canAdd(page), \"page buffer is full\");\n         pages.add(page);\n-        usedMemoryBytes += page.getSizeInBytes();\n+        usedMemoryBytes += page.getRetainedSizeInBytes();\n         rowCount = addExact(rowCount, page.getPositionCount());\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 88,
        "bugNodeStartChar": 3108,
        "bugNodeLength": 21,
        "fixLineNum": 88,
        "fixNodeStartChar": 3108,
        "fixNodeLength": 29,
        "sourceBeforeFix": "page.getSizeInBytes()",
        "sourceAfterFix": "page.getRetainedSizeInBytes()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ab3350b4d657affb210da0770ab95f12fb576fdf",
        "fixCommitParentSHA1": "11fd34c2c91b7ba02a807eb5c0e70d7c16f9443e",
        "bugFilePath": "core/src/test/java/tachyon/master/MasterFaultToleranceTest.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java b/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\nindex 18f9e56..8d1482f 100644\n--- a/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\n+++ b/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\n@@ -89,7 +89,7 @@\n    */\n   private void faultTestDataCheck(List<Pair<Integer, String>> answer) throws IOException {\n     TachyonFS tfs = mLocalTachyonClusterMultiMaster.getClient();\n-    List<String> files = mTfs.ls(Constants.PATH_SEPARATOR, true);\n+    List<String> files = tfs.ls(Constants.PATH_SEPARATOR, true);\n     if (answer.size() != files.size()) {\n       System.out.println(\"Files===========================\");\n       for (int k = 0; k < files.size(); k ++) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 92,
        "bugNodeStartChar": 3267,
        "bugNodeLength": 39,
        "fixLineNum": 92,
        "fixNodeStartChar": 3267,
        "fixNodeLength": 38,
        "sourceBeforeFix": "mTfs.ls(Constants.PATH_SEPARATOR,true)",
        "sourceAfterFix": "tfs.ls(Constants.PATH_SEPARATOR,true)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 72,
        "bugNodeStartChar": 2904,
        "bugNodeLength": 18,
        "fixLineNum": 72,
        "fixNodeStartChar": 2904,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 725,
        "bugNodeStartChar": 36233,
        "bugNodeLength": 134,
        "fixLineNum": 725,
        "fixNodeStartChar": 36233,
        "fixNodeLength": 134,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",null,paging.asPostParameterList(),true))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f207bc7996e970fb75d00fd340bcfbc2efd44bfd",
        "fixCommitParentSHA1": "9bae9f85f1b5f1d478f1b6a7b1e8465753cfca20",
        "bugFilePath": "core/src/test/java/tachyon/master/MasterFaultToleranceTest.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java b/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\nindex 2afa78f..67e40f8 100644\n--- a/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\n+++ b/core/src/test/java/tachyon/master/MasterFaultToleranceTest.java\n@@ -89,7 +89,7 @@\n    */\n   private void faultTestDataCheck(List<Pair<Integer, String>> answer) throws IOException {\n     TachyonFS tfs = mLocalTachyonClusterMultiMaster.getClient();\n-    List<String> files = mTfs.ls(Constants.PATH_SEPARATOR, true);\n+    List<String> files = tfs.ls(Constants.PATH_SEPARATOR, true);\n     Assert.assertEquals(answer.size(), files.size());\n     for (int k = 0; k < answer.size(); k ++) {\n       Assert.assertEquals(answer.get(k).getSecond(), tfs.getFile(answer.get(k).getFirst())\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 92,
        "bugNodeStartChar": 3267,
        "bugNodeLength": 39,
        "fixLineNum": 92,
        "fixNodeStartChar": 3267,
        "fixNodeLength": 38,
        "sourceBeforeFix": "mTfs.ls(Constants.PATH_SEPARATOR,true)",
        "sourceAfterFix": "tfs.ls(Constants.PATH_SEPARATOR,true)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "4031a54f71a1df311b0b9ab24640297e0d526bfe",
        "fixCommitParentSHA1": "9c1eea2dc00e2feb14c13e9a00d6a392f680df17",
        "bugFilePath": "test/com/google/javascript/jscomp/VarCheckTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/VarCheckTest.java b/test/com/google/javascript/jscomp/VarCheckTest.java\nindex 79d60c3..f23a762 100644\n--- a/test/com/google/javascript/jscomp/VarCheckTest.java\n+++ b/test/com/google/javascript/jscomp/VarCheckTest.java\n@@ -107,12 +107,12 @@\n \n   public void testVarReferenceInExterns() {\n     testSame(\"asdf;\", \"var asdf;\",\n-        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR, true);\n+        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR);\n   }\n \n   public void testCallInExterns() {\n     testSame(\"yz();\", \"function yz() {}\",\n-        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR, true);\n+        VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR);\n   }\n \n   public void testPropReferenceInExterns1() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 114,
        "bugNodeStartChar": 3224,
        "bugNodeLength": 93,
        "fixLineNum": 114,
        "fixNodeStartChar": 3224,
        "fixNodeLength": 87,
        "sourceBeforeFix": "testSame(\"yz();\",\"function yz() {}\",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,true)",
        "sourceAfterFix": "testSame(\"yz();\",\"function yz() {}\",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3d3e4c90f6e07eb007fbe2b88567cf911ff11a36",
        "fixCommitParentSHA1": "1b4e30ac3b74f2fa10072070764a6258a0810fa6",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java\nindex 9d38482..3ef5569 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java\n@@ -281,7 +281,7 @@\n \t\t\tZWaveEndpoint endpoint = this.endpoints.get(endpointId);\n \t\t\t\n \t\t\tif (endpoint == null){\n-\t\t\t\tlogger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\", endpoint, this.getNode().getNodeId());\n+\t\t\t\tlogger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\", endpointId, this.getNode().getNodeId());\n \t\t\t\tcontinue;\n \t\t\t}\n \t\n@@ -377,7 +377,7 @@\n \t\tZWaveEndpoint endpoint = this.endpoints.get(endpointId);\n \t\t\n \t\tif (endpoint == null){\n-\t\t\tlogger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\", endpoint, this.getNode().getNodeId());\n+\t\t\tlogger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\", endpointId, this.getNode().getNodeId());\n \t\t\treturn;\n \t\t}\n \t\t\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 380,
        "bugNodeStartChar": 15582,
        "bugNodeLength": 115,
        "fixLineNum": 380,
        "fixNodeStartChar": 15582,
        "fixNodeLength": 117,
        "sourceBeforeFix": "logger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\",endpoint,this.getNode().getNodeId())",
        "sourceAfterFix": "logger.error(\"Endpoint {} not found on node {}. Cannot set command classes.\",endpointId,this.getNode().getNodeId())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f",
        "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 315,
        "bugNodeStartChar": 9709,
        "bugNodeLength": 51,
        "fixLineNum": 315,
        "fixNodeStartChar": 9709,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)",
        "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8d49fc720f13722bf31d504d1a83bd8a5a6eb559",
        "fixCommitParentSHA1": "53e543c71bade1e6099fac1908b6711752c8da19",
        "bugFilePath": "library/src/com/haarman/listviewanimations/SwingRightInAnimationAdapter.java",
        "fixPatch": "diff --git a/library/src/com/haarman/listviewanimations/SwingRightInAnimationAdapter.java b/library/src/com/haarman/listviewanimations/SwingRightInAnimationAdapter.java\nindex d80fd97..ad92244 100644\n--- a/library/src/com/haarman/listviewanimations/SwingRightInAnimationAdapter.java\n+++ b/library/src/com/haarman/listviewanimations/SwingRightInAnimationAdapter.java\n@@ -22,7 +22,7 @@\n \n import com.nineoldandroids.animation.PropertyValuesHolder;\n \n-public abstract class SwingRightInAnimationAdapter<T> extends AnimationAdapter<T> {\n+public abstract class SwingRightInAnimationAdapter<T> extends PropertyValuesAnimationAdapter<T> {\n \n \tpublic SwingRightInAnimationAdapter(Context context) {\n \t\tsuper(context);\n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 25,
        "bugNodeStartChar": 848,
        "bugNodeLength": 19,
        "fixLineNum": 25,
        "fixNodeStartChar": 848,
        "fixNodeLength": 33,
        "sourceBeforeFix": "AnimationAdapter<T>",
        "sourceAfterFix": "PropertyValuesAnimationAdapter<T>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1cb815170a2fd69558f737d92f5665c9d64cebd1",
        "fixCommitParentSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 9fbfeff..7ab2b0e 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -353,18 +353,16 @@\n \t}\r\n \r\n \tpublic String glGetActiveAttrib (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveAttrib(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveAttrib(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n \t}\r\n \r\n \tpublic String glGetActiveUniform (int program, int index, IntBuffer size, Buffer type) {\r\n-\t\t// FIXME this is less than ideal of course...\r\n \t\tIntBuffer typeTmp = BufferUtils.createIntBuffer(2);\r\n-\t\tString name = GL20.glGetActiveUniform(program, index, 256, typeTmp);\r\n+\t\tString name = GL20.glGetActiveUniform(program, index, 256, size, typeTmp);\r\n \t\tsize.put(typeTmp.get(0));\r\n \t\tif (type instanceof IntBuffer) ((IntBuffer)type).put(typeTmp.get(1));\r\n \t\treturn name;\r\n@@ -808,15 +806,15 @@\n \tpublic void glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer buffer) {\r\n \t\tif (buffer instanceof ByteBuffer) {\r\n \t\t\tif (type == GL_BYTE)\t\t\t\t\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_UNSIGNED_BYTE)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, (ByteBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (ByteBuffer)buffer);\r\n \t\t\telse if (type == GL_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, false, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_UNSIGNED_SHORT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, true, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asShortBuffer());\r\n \t\t\telse if (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, ((ByteBuffer)buffer).asFloatBuffer());\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\r\n \t\t\t\t\t\"Can't use \"\r\n@@ -826,7 +824,7 @@\n \t\t\t\t\t\t+ \" with this method. Use ByteBuffer and one of GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT or GL_FLOAT for type. Blame LWJGL\");\r\n \t\t} else if (buffer instanceof FloatBuffer) {\r\n \t\t\tif (type == GL_FLOAT)\r\n-\t\t\t\tGL20.glVertexAttribPointer(indx, size, normalized, stride, (FloatBuffer)buffer);\r\n+\t\t\t\tGL20.glVertexAttribPointer(indx, size, type, normalized, stride, (FloatBuffer)buffer);\r\n \t\t\telse\r\n \t\t\t\tthrow new GdxRuntimeException(\"Can't use \" + buffer.getClass().getName() + \" with type \" + type\r\n \t\t\t\t\t+ \" with this method.\");\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 367,
        "bugNodeStartChar": 11955,
        "bugNodeLength": 53,
        "fixLineNum": 367,
        "fixNodeStartChar": 11589,
        "fixNodeLength": 59,
        "sourceBeforeFix": "GL20.glGetActiveUniform(program,index,256,typeTmp)",
        "sourceAfterFix": "GL20.glGetActiveUniform(program,index,256,size,typeTmp)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "62a4bfb9380fad4992d3e9f6347ad7ff34d904b7",
        "fixCommitParentSHA1": "a6d6cb7c55723dfa3b3b2f1c54c6bda6269c1d06",
        "bugFilePath": "enterprise/backup/src/main/java/org/neo4j/backup/check/ConsistencyCheck.java",
        "fixPatch": "diff --git a/enterprise/backup/src/main/java/org/neo4j/backup/check/ConsistencyCheck.java b/enterprise/backup/src/main/java/org/neo4j/backup/check/ConsistencyCheck.java\nindex 1ddc59c..72bfe89 100644\n--- a/enterprise/backup/src/main/java/org/neo4j/backup/check/ConsistencyCheck.java\n+++ b/enterprise/backup/src/main/java/org/neo4j/backup/check/ConsistencyCheck.java\n@@ -263,7 +263,7 @@\n             PropertyRecord prev = props.forceGetRecord( prevId );\n             if ( !prev.inUse() )\n                 fail |= inconsistent( props, property, prev, \"invalid prev reference, prev record not in use\" );\n-            if ( prev.getPrevProp() != property.getId() )\n+            if ( prev.getNextProp() != property.getId() )\n                 fail |= inconsistent( props, property, prev, \"invalid prev reference, prev record does not reference back\" );\n         }\n         else // property is first in chain\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 266,
        "bugNodeStartChar": 11084,
        "bugNodeLength": 18,
        "fixLineNum": 266,
        "fixNodeStartChar": 11084,
        "fixNodeLength": 18,
        "sourceBeforeFix": "prev.getPrevProp()",
        "sourceAfterFix": "prev.getNextProp()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "adf50d7ab0098e76ee68014b28e22fb8ba245752",
        "fixCommitParentSHA1": "406691e6aa43d8f58718f912034ab3cf2a0e756c",
        "bugFilePath": "components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerGoogleAsynchronousTest.java",
        "fixPatch": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerGoogleAsynchronousTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerGoogleAsynchronousTest.java\nindex aa741e0..d3207fc 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerGoogleAsynchronousTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerGoogleAsynchronousTest.java\n@@ -30,7 +30,7 @@\n     public void testGoogleFrontPageAsync() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n         mock.expectedMessageCount(1);\n-        mock.message(0).outBody(String.class).contains(\"google\");\n+        mock.message(0).body(String.class).contains(\"google\");\n \n         template.sendBody(\"direct:start\", null);\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 33,
        "bugNodeStartChar": 1328,
        "bugNodeLength": 37,
        "fixLineNum": 33,
        "fixNodeStartChar": 1328,
        "fixNodeLength": 34,
        "sourceBeforeFix": "mock.message(0).outBody(String.class)",
        "sourceAfterFix": "mock.message(0).body(String.class)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "3cc42e2082ef0103890fca974d5f736a4e665074",
        "fixCommitParentSHA1": "429b5f383caf21206171334f76ce53dc9cfca829",
        "bugFilePath": "presto-client/src/main/java/com/facebook/presto/client/ClientSession.java",
        "fixPatch": "diff --git a/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java b/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\nindex 9b78e98..8aece03 100644\n--- a/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\n+++ b/presto-client/src/main/java/com/facebook/presto/client/ClientSession.java\n@@ -81,7 +81,7 @@\n         // verify the properties are valid\n         CharsetEncoder charsetEncoder = US_ASCII.newEncoder();\n         for (Entry<String, String> entry : properties.entrySet()) {\n-            checkArgument(entry.getKey().isEmpty(), \"Session property name is empty\");\n+            checkArgument(!entry.getKey().isEmpty(), \"Session property name is empty\");\n             checkArgument(entry.getKey().indexOf('=') < 0, \"Session property name must not contain '=': %s\", entry.getKey());\n             checkArgument(charsetEncoder.canEncode(entry.getKey()), \"Session property name is not US_ASCII: %s\", entry.getKey());\n             checkArgument(charsetEncoder.canEncode(entry.getValue()), \"Session property value is not US_ASCII: %s\", entry.getValue());\n",
        "projectName": "facebook.presto",
        "bugLineNum": 84,
        "bugNodeStartChar": 3055,
        "bugNodeLength": 24,
        "fixLineNum": 84,
        "fixNodeStartChar": 3055,
        "fixNodeLength": 25,
        "sourceBeforeFix": "entry.getKey().isEmpty()",
        "sourceAfterFix": "!entry.getKey().isEmpty()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 398,
        "bugNodeStartChar": 12978,
        "bugNodeLength": 94,
        "fixLineNum": 398,
        "fixNodeStartChar": 12581,
        "fixNodeLength": 96,
        "sourceBeforeFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target,attachment,pname,params)",
        "sourceAfterFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target,attachment,pname,params)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IdentityMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\nindex a52ce7f..7d79b85 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IdentityMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IdentityMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 70,
        "bugNodeStartChar": 2916,
        "bugNodeLength": 18,
        "fixLineNum": 70,
        "fixNodeStartChar": 2847,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "2663f70f687240ee3d4c4c9d54a769ebff12c9ce",
        "fixCommitParentSHA1": "3301cbe16580806caa9f22320703070398f0ac34",
        "bugFilePath": "src/web/org/openmrs/web/controller/patient/PatientFormController.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/controller/patient/PatientFormController.java b/src/web/org/openmrs/web/controller/patient/PatientFormController.java\nindex f77c0f2..e02f9ab 100644\n--- a/src/web/org/openmrs/web/controller/patient/PatientFormController.java\n+++ b/src/web/org/openmrs/web/controller/patient/PatientFormController.java\n@@ -598,7 +598,7 @@\n \t\t\r\n \t\tif (reasonForExitConcept != null && patient.getPatientId() != null) {\r\n \t\t\tList<Obs> patientExitObs = Context.getObsService().getObservationsByPersonAndConcept(patient, reasonForExitConcept);\r\n-\t\t\tif (patientExitObs != null) {\r\n+\t\t\tif (patientExitObs != null && patientExitObs.size() > 0) {\r\n \t\t\t\tlog.debug(\"Exit obs is size \" + patientExitObs.size());\r\n \t\t\t\tif (patientExitObs.size() == 1) {\r\n \t\t\t\t\tObs exitObs = patientExitObs.iterator().next();\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 601,
        "bugNodeStartChar": 25170,
        "bugNodeLength": 22,
        "fixLineNum": 601,
        "fixNodeStartChar": 24570,
        "fixNodeLength": 51,
        "sourceBeforeFix": "patientExitObs != null",
        "sourceAfterFix": "patientExitObs != null && patientExitObs.size() > 0"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "72ea162a10fc698c1394aef87d295883c990b993",
        "fixCommitParentSHA1": "306ba836690fc8fb30384d4b351eb5b77cef1818",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SearchAPITest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\nindex 27958a0..677c67e 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n@@ -65,7 +65,7 @@\n     public void testSearch() throws Exception {\n         String queryStr = \"test\";\n         SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        String dateStr = format.format(new java.util.Date());\n+        String dateStr = format.format(new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000));\n         Query query = new Query(queryStr).until(dateStr);\n         QueryResult queryResult = unauthenticated.search(query);\n         assertTrue(\"sinceId\", -1 != queryResult.getSinceId());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 68,
        "bugNodeStartChar": 2835,
        "bugNodeLength": 20,
        "fixLineNum": 68,
        "fixNodeStartChar": 2835,
        "fixNodeLength": 65,
        "sourceBeforeFix": "new java.util.Date()",
        "sourceAfterFix": "new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7dbefbb69705e60542031bf5c402d0f0f1bd7955",
        "fixCommitParentSHA1": "a69c3655d6f2ec76146fd4a51979fd3cfcc04aee",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/ClientContext.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\nindex c6a75f3..e395301 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n@@ -70,7 +70,7 @@\n     sClientMetrics = new ClientMetrics();\n \n     if (sExecutorService != null) {\n-      sExecutorService.shutdown();\n+      sExecutorService.shutdownNow();\n     }\n     sExecutorService = Executors.newFixedThreadPool(\n         sTachyonConf.getInt(Constants.USER_BLOCK_WORKER_CLIENT_THREADS),\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 73,
        "bugNodeStartChar": 2460,
        "bugNodeLength": 27,
        "fixLineNum": 73,
        "fixNodeStartChar": 2460,
        "fixNodeLength": 30,
        "sourceBeforeFix": "sExecutorService.shutdown()",
        "sourceAfterFix": "sExecutorService.shutdownNow()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "734c7a8318f516e4825fd72ab53699f96fabbe68",
        "fixCommitParentSHA1": "304562d547f743d4e411d5b44fd6ecaa69758c8b",
        "bugFilePath": "components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerConcurrentTest.java",
        "fixPatch": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerConcurrentTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerConcurrentTest.java\nindex 07079d1..88ee5f5 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerConcurrentTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/jettyproducer/JettyHttpProducerConcurrentTest.java\n@@ -39,7 +39,7 @@\n     @Test\n     public void testNoConcurrentProducers() throws Exception {\n         // give Jetty time to startup properly\n-        Thread.sleep(1000);\n+        Thread.sleep(2000);\n \n         doSendMessages(1, 1);\n     }\n@@ -47,7 +47,7 @@\n     @Test\n     public void testConcurrentProducers() throws Exception {\n         // give Jetty time to startup properly\n-        Thread.sleep(1000);\n+        Thread.sleep(2000);\n \n         doSendMessages(10, 5);\n     }\n@@ -57,7 +57,7 @@\n         getMockEndpoint(\"mock:result\").assertNoDuplicates(body());\n \n         ExecutorService executor = Executors.newFixedThreadPool(poolSize);\n-        Map<Integer, Future> responses = new ConcurrentHashMap();\n+        Map<Integer, Future> responses = new ConcurrentHashMap<Integer, Future>();\n         for (int i = 0; i < files; i++) {\n             final int index = i;\n             Future out = executor.submit(new Callable<Object>() {\n@@ -73,7 +73,7 @@\n         assertEquals(files, responses.size());\n \n         // get all responses\n-        Set unique = new HashSet();\n+        Set<Object> unique = new HashSet<Object>();\n         for (Future future : responses.values()) {\n             unique.add(future.get());\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 50,
        "bugNodeStartChar": 1720,
        "bugNodeLength": 18,
        "fixLineNum": 50,
        "fixNodeStartChar": 1720,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Thread.sleep(1000)",
        "sourceAfterFix": "Thread.sleep(2000)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fc13cf7d7843029d807878869e3c64cace5640dd",
        "fixCommitParentSHA1": "efb95a17945cc91aa639396f6f6c528b52c71fcb",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java\nindex f906681..c59b947 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java\n@@ -302,7 +302,7 @@\n   }\n \n   @Override\n-  public Cell deepClone() {\n+  public ExtendedCell deepClone() {\n     byte[] copy = new byte[this.length];\n     ByteBufferUtils.copyFromBufferToArray(copy, this.buf, this.offset, 0, this.length);\n     KeyValue kv = new KeyValue(copy, 0, copy.length);\n",
        "projectName": "apache.hbase",
        "bugLineNum": 304,
        "bugNodeStartChar": 7425,
        "bugNodeLength": 283,
        "fixLineNum": 304,
        "fixNodeStartChar": 7425,
        "fixNodeLength": 291,
        "sourceBeforeFix": "@Override public Cell deepClone(){   byte[] copy=new byte[this.length];   ByteBufferUtils.copyFromBufferToArray(copy,this.buf,this.offset,0,this.length);   KeyValue kv=new KeyValue(copy,0,copy.length);   kv.setSequenceId(this.getSequenceId());   return kv; } ",
        "sourceAfterFix": "@Override public ExtendedCell deepClone(){   byte[] copy=new byte[this.length];   ByteBufferUtils.copyFromBufferToArray(copy,this.buf,this.offset,0,this.length);   KeyValue kv=new KeyValue(copy,0,copy.length);   kv.setSequenceId(this.getSequenceId());   return kv; } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\nindex ffce204..157f0d0 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ListTemplate.java\n@@ -69,28 +69,28 @@\n     @EncodeMethod(id = 14)\n     void addAllWithIndex(String name, int index, List<Data> valueList);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 15)\n     void get(String name, int index);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 16)\n     void set(String name, int index, Data value);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 17)\n     void addWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 18)\n     void removeWithIndex(String name, int index, Data value);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 19)\n     void lastIndexOf(String name, Data value);\n \n-    @EncodeMethod(id = 18)\n+    @EncodeMethod(id = 20)\n     void indexOf(String name, Data value);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 21)\n     void sub(String name, int from, int to);\n \n-    @EncodeMethod(id = 19)\n+    @EncodeMethod(id = 22)\n     void iterator(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 72,
        "bugNodeStartChar": 2096,
        "bugNodeLength": 7,
        "fixLineNum": 72,
        "fixNodeStartChar": 2096,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=13",
        "sourceAfterFix": "id=15"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "7e894043c7c2cb8631d3d1752286eed8f9484010",
        "fixCommitParentSHA1": "1ed3ef1d362634cfb2b42bdc95e9a5cd017f289a",
        "bugFilePath": "connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java",
        "fixPatch": "diff --git a/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java b/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\nindex f17e77f..8bf5474 100644\n--- a/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\n+++ b/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\n@@ -68,7 +68,7 @@\n         TransformationDescription.Tools.register(builder120.build(), subsystem, ModelVersion.create(1, 3, 0));\n         ResourceTransformationDescriptionBuilder builder200 = TransformationDescriptionBuilder.Factory.createSubsystemInstance();\n         ResourceAdapterResourceDefinition.registerTransformers200(builder200);\n-        TransformationDescription.Tools.register(builder120.build(), subsystem, ModelVersion.create(2, 0, 0));\n+        TransformationDescription.Tools.register(builder200.build(), subsystem, ModelVersion.create(2, 0, 0));\n \n     }\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 71,
        "bugNodeStartChar": 4081,
        "bugNodeLength": 18,
        "fixLineNum": 71,
        "fixNodeStartChar": 4081,
        "fixNodeLength": 18,
        "sourceBeforeFix": "builder120.build()",
        "sourceAfterFix": "builder200.build()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6c19a595453278e38fdcda9cb82069802786fdfa",
        "fixCommitParentSHA1": "4e40c78b4089b8577ad3878f3e3decd46503ea50",
        "bugFilePath": "core/src/main/java/cucumber/runtime/filter/Filters.java",
        "fixPatch": "diff --git a/core/src/main/java/cucumber/runtime/filter/Filters.java b/core/src/main/java/cucumber/runtime/filter/Filters.java\nindex 69c9d6f..d78d1f8 100644\n--- a/core/src/main/java/cucumber/runtime/filter/Filters.java\n+++ b/core/src/main/java/cucumber/runtime/filter/Filters.java\n@@ -45,7 +45,7 @@\n     }\n     \n     public List<PickleEvent> limitPickleEvents(List<PickleEvent> pickleEvents) {\n-    \tif (count > pickleEvents.size() || count < 0) {\n+    \tif (count > pickleEvents.size() || count < 1) {\n     \t\treturn pickleEvents;\n     \t}\n \t\treturn pickleEvents.subList(0, count);\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 48,
        "bugNodeStartChar": 1449,
        "bugNodeLength": 9,
        "fixLineNum": 48,
        "fixNodeStartChar": 1449,
        "fixNodeLength": 9,
        "sourceBeforeFix": "count < 0",
        "sourceAfterFix": "count < 1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c222e2b4862045d5ef7040103e1c50b6593dda20",
        "fixCommitParentSHA1": "fbd1666643c9d614112b4a6f54ed0ee68b9b1426",
        "bugFilePath": "src/main/java/org/apache/hadoop/hbase/mapreduce/ImportTsv.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/hadoop/hbase/mapreduce/ImportTsv.java b/src/main/java/org/apache/hadoop/hbase/mapreduce/ImportTsv.java\nindex beb0233..f9d6934 100644\n--- a/src/main/java/org/apache/hadoop/hbase/mapreduce/ImportTsv.java\n+++ b/src/main/java/org/apache/hadoop/hbase/mapreduce/ImportTsv.java\n@@ -271,11 +271,11 @@\n         if (skipBadLines) {\n           System.err.println(\n               \"Bad line at offset: \" + offset.get() + \":\\n\" +\n-              badLine.getMessage());\n+              e.getMessage());\n           badLineCount.increment(1);\n           return;\n         } else {\n-          throw new IOException(badLine);\n+          throw new IOException(e);\n         }\n       } catch (InterruptedException e) {\n         e.printStackTrace();\n",
        "projectName": "apache.hbase",
        "bugLineNum": 278,
        "bugNodeStartChar": 9295,
        "bugNodeLength": 24,
        "fixLineNum": 278,
        "fixNodeStartChar": 9295,
        "fixNodeLength": 18,
        "sourceBeforeFix": "new IOException(badLine)",
        "sourceAfterFix": "new IOException(e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e981384cc21ca3c1958acd4b494a6ddd147c0a60",
        "fixCommitParentSHA1": "e4262ff29940c300db4fc9739ebefb9039f12ba3",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\nindex d52f996..435ac50 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n@@ -132,7 +132,7 @@\n             if (ssl.has(CommonAttributes.CIPHER_SUITE))\n                 config.setSslCiphers(ssl.get(CommonAttributes.CIPHER_SUITE).asString());\n             if (ssl.has(CommonAttributes.PROTOCOL))\n-                config.setSslKeyAlias(ssl.get(CommonAttributes.PROTOCOL).asString());\n+                config.setSslProtocol(ssl.get(CommonAttributes.PROTOCOL).asString());\n             if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE))\n                 config.setSslTrustStore(ssl.get(CommonAttributes.CA_CERTIFICATE_FILE).asString());\n             if (ssl.has(CommonAttributes.CA_REVOCATION_URL))\n@@ -144,9 +144,9 @@\n             config.setProxyList(modelconf.get(CommonAttributes.PROXY_LIST).asString());\n         }\n         if (modelconf.hasDefined(CommonAttributes.PROXY_URL))\n-            config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString());\n+            config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString());\n         if (modelconf.has(CommonAttributes.ADVERTISE_SECURITY_KEY))\n-            config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n+            config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n \n         if (modelconf.hasDefined(CommonAttributes.EXCLUDED_CONTEXTS)) {\n             // read the default host.\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 147,
        "bugNodeStartChar": 6810,
        "bugNodeLength": 73,
        "fixLineNum": 147,
        "fixNodeStartChar": 6810,
        "fixNodeLength": 72,
        "sourceBeforeFix": "config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString())",
        "sourceAfterFix": "config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString())"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "d84c24a83c18eb8b6c1ee26a1ed9f34b6c376868",
        "fixCommitParentSHA1": "477ed1ecdbeeedb78e8328fba5da059812dba698",
        "bugFilePath": "src/web/org/openmrs/web/controller/program/PatientProgramFormController.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/controller/program/PatientProgramFormController.java b/src/web/org/openmrs/web/controller/program/PatientProgramFormController.java\nindex 7c8a01d..50106d3 100644\n--- a/src/web/org/openmrs/web/controller/program/PatientProgramFormController.java\n+++ b/src/web/org/openmrs/web/controller/program/PatientProgramFormController.java\n@@ -67,7 +67,7 @@\n \t\tDate completionDate = (Date) cde.getValue();\r\n \t\tPatient patient = Context.getPatientService().getPatient(Integer.valueOf(patientIdStr));\r\n \t\tProgram program = pws.getProgram(Integer.valueOf(programIdStr));\r\n-\t\tif (!pws.getPatientPrograms(patient, program, null, enrollmentDate, completionDate, null, false).isEmpty())\r\n+\t\tif (!pws.getPatientPrograms(patient, program, null, completionDate, enrollmentDate, null, false).isEmpty())\r\n \t\t\trequest.getSession().setAttribute(WebConstants.OPENMRS_ERROR_ATTR, \"Program.error.already\");\r\n \t\telse {\r\n \t\t\tPatientProgram pp = new PatientProgram();\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 70,
        "bugNodeStartChar": 3024,
        "bugNodeLength": 91,
        "fixLineNum": 70,
        "fixNodeStartChar": 2955,
        "fixNodeLength": 91,
        "sourceBeforeFix": "pws.getPatientPrograms(patient,program,null,enrollmentDate,completionDate,null,false)",
        "sourceAfterFix": "pws.getPatientPrograms(patient,program,null,completionDate,enrollmentDate,null,false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d7bc370d22be69b58ecbd78a4ebcfa0c618b127a",
        "fixCommitParentSHA1": "7a512f1b6e9d76df92b4c564bd38dadba355e16b",
        "bugFilePath": "api/src/main/java/org/openmrs/Cohort.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/Cohort.java b/api/src/main/java/org/openmrs/Cohort.java\nindex 23fcaa9..e87f27c 100644\n--- a/api/src/main/java/org/openmrs/Cohort.java\n+++ b/api/src/main/java/org/openmrs/Cohort.java\n@@ -213,8 +213,7 @@\n \t * @since 2.1.0\n \t */\n \tpublic CohortMembership getActiveMembership(Patient patient) {\n-\t\treturn getMemberships().stream().filter(m -> m.isActive() && m.getPatientId().equals(patient.getPatientId()))\n-\t\t        .collect(Collectors.toList()).get(0);\n+\t\treturn getMemberships().stream().filter(m -> m.isActive() && m.getPatientId().equals(patient.getPatientId())).findFirst().get();\n \t}\n \t\n \tpublic int size() {\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 216,
        "bugNodeStartChar": 6575,
        "bugNodeLength": 142,
        "fixLineNum": 216,
        "fixNodeStartChar": 6575,
        "fixNodeLength": 114,
        "sourceBeforeFix": "getMemberships().stream().filter(m -> m.isActive() && m.getPatientId().equals(patient.getPatientId())).collect(Collectors.toList())",
        "sourceAfterFix": "getMemberships().stream().filter(m -> m.isActive() && m.getPatientId().equals(patient.getPatientId())).findFirst()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0360fb968378b3439c9c8724e5f3183de06d3c80",
        "fixCommitParentSHA1": "177168b2fdefc3ca961e9615ffe04d5fe08eca08",
        "bugFilePath": "flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/generator/random/AbstractGeneratorFactory.java",
        "fixPatch": "diff --git a/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/generator/random/AbstractGeneratorFactory.java b/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/generator/random/AbstractGeneratorFactory.java\nindex 3bb904e..fc9e1ba 100644\n--- a/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/generator/random/AbstractGeneratorFactory.java\n+++ b/flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/generator/random/AbstractGeneratorFactory.java\n@@ -35,7 +35,7 @@\n \t// A large computation will run in parallel but blocks are generated on\n \t// and distributed from a single node. This limit should be greater\n \t// than the maximum expected parallelism.\n-\tpublic static final int MAXIMUM_BLOCK_COUNT = 1 << 20;\n+\tpublic static final int MAXIMUM_BLOCK_COUNT = 1 << 15;\n \n \t// This should be sufficiently large relative to the cost of instantiating\n \t// and initializing the random generator and sufficiently small relative to\n",
        "projectName": "apache.flink",
        "bugLineNum": 38,
        "bugNodeStartChar": 1505,
        "bugNodeLength": 7,
        "fixLineNum": 38,
        "fixNodeStartChar": 1505,
        "fixNodeLength": 7,
        "sourceBeforeFix": "1 << 20",
        "sourceAfterFix": "1 << 15"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "06f8fe87421493280f6602aeb73153e677844542",
        "fixCommitParentSHA1": "2d045731da193d28bb3e6b15fbee514ec9a0c69f",
        "bugFilePath": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketStateSerializerTest.java",
        "fixPatch": "diff --git a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketStateSerializerTest.java b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketStateSerializerTest.java\nindex 55360a4..f2c1f8b 100644\n--- a/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketStateSerializerTest.java\n+++ b/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketStateSerializerTest.java\n@@ -115,7 +115,7 @@\n \t\tAssert.assertEquals(1L, statuses.length);\n \t\tAssert.assertTrue(\n \t\t\t\tstatuses[0].getPath().getPath().startsWith(\n-\t\t\t\t\t\t(new Path(testBucket.getParent(), \".test.inprogress\")).toString())\n+\t\t\t\t\t\t(new Path(testBucket.getParent(), \".test.inprogress\")).getPath())\n \t\t);\n \t}\n \n@@ -184,7 +184,7 @@\n \n \t\tfor (int i = 0; i < noOfTasks; i++) {\n \t\t\tfor (int j = 0; j < 2 + i; j++) {\n-\t\t\t\tfinal String part = new Path(bucketPath, \"part-\" + i + '-' + j).toString();\n+\t\t\t\tfinal String part = new Path(bucketPath, \"part-\" + i + '-' + j).getPath();\n \t\t\t\tAssert.assertTrue(paths.contains(part));\n \t\t\t\tpaths.remove(part);\n \t\t\t}\n@@ -195,7 +195,7 @@\n \n \t\t// verify that the in-progress file is still there\n \t\tAssert.assertTrue(paths.iterator().next().startsWith(\n-\t\t\t\t(new Path(testBucket.getParent(), \".test-2.inprogress\").toString())));\n+\t\t\t\t(new Path(testBucket.getParent(), \".test-2.inprogress\").getPath())));\n \t}\n \n \t@Test\n@@ -258,7 +258,7 @@\n \n \t\tfor (int i = 0; i < noOfTasks; i++) {\n \t\t\tfor (int j = 0; j < 2 + i; j++) {\n-\t\t\t\tfinal String part = new Path(bucketPath, \"test-\" + i + '-' + j).toString();\n+\t\t\t\tfinal String part = new Path(bucketPath, \"test-\" + i + '-' + j).getPath();\n \t\t\t\tAssert.assertTrue(paths.contains(part));\n \t\t\t\tpaths.remove(part);\n \t\t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 187,
        "bugNodeStartChar": 7377,
        "bugNodeLength": 54,
        "fixLineNum": 187,
        "fixNodeStartChar": 7377,
        "fixNodeLength": 53,
        "sourceBeforeFix": "new Path(bucketPath,\"part-\" + i + '-'+ j).toString()",
        "sourceAfterFix": "new Path(bucketPath,\"part-\" + i + '-'+ j).getPath()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "f8946ee2b640061a35a4c16bf2588242f27053d7",
        "fixCommitParentSHA1": "11f20fcf5e1fb4cc2cf7ddf1a2d01ee737f7fcb4",
        "bugFilePath": "bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\nindex d49d5a3..004c4e6 100644\n--- a/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n+++ b/bundles/binding/org.openhab.binding.milight/src/main/java/org/openhab/binding/milight/internal/MilightBinding.java\n@@ -203,7 +203,7 @@\n \t\t\tif (bulb < 6) {\r\n \t\t\t\tif (command.compareTo(oldPercent) > 0) {\r\n \t\t\t\t\tint repeatCount = (command.intValue() - oldPercent.intValue()) / 10;\r\n-\t\t\t\t\tfor(int i = 0; i <= repeatCount; i++) {\r\n+\t\t\t\t\tfor(int i = 0; i < repeatCount; i++) {\r\n \t\t\t\t\t\tThread.sleep(100);\r\n \t\t\t\t\t\tif(BindingType.brightness.equals(type) && bulb < 6) {\r\n \t\t\t\t\t\t\tsendIncrease(bulb, rgbwSteps, bridgeId);\r\n@@ -218,7 +218,7 @@\n \t\t\t\t\t}\r\n \t\t\t\t} else if (command.compareTo(oldPercent) < 0) {\r\n \t\t\t\t\tint repeatCount = (oldPercent.intValue() - command.intValue()) / 10;\r\n-\t\t\t\t\tfor(int i = 0; i <= repeatCount; i++) {\r\n+\t\t\t\t\tfor(int i = 0; i < repeatCount; i++) {\r\n \t\t\t\t\t\tThread.sleep(100);\r\n \t\t\t\t\t\tif(BindingType.brightness.equals(type) && bulb < 6) {\r\n \t\t\t\t\t\t\tsendDecrease(bulb, rgbwSteps, bridgeId);\r\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 206,
        "bugNodeStartChar": 7984,
        "bugNodeLength": 16,
        "fixLineNum": 206,
        "fixNodeStartChar": 7779,
        "fixNodeLength": 15,
        "sourceBeforeFix": "i <= repeatCount",
        "sourceAfterFix": "i < repeatCount"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9771ba62390a56363b20e52f12a8b9b34c51da62",
        "fixCommitParentSHA1": "68fb0c327d7cad75bfa1226cf494b4b55483d6b1",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/SamplingThrottlerTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/SamplingThrottlerTest.java b/camel-core/src/test/java/org/apache/camel/processor/SamplingThrottlerTest.java\nindex a34ce8f..32702f4 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/SamplingThrottlerTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/SamplingThrottlerTest.java\n@@ -37,7 +37,7 @@\n \n     public void testSamplingFromExchangeStream() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(2);\n+        mock.expectedMinimumMessageCount(2);\n         mock.setResultWaitTime(3000);\n \n         List<Exchange> sentExchanges = new ArrayList<Exchange>();\n@@ -49,7 +49,7 @@\n \n     public void testBurstySampling() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(2);\n+        mock.expectedMinimumMessageCount(2);\n         mock.setResultWaitTime(3000);\n \n         List<Exchange> sentExchanges = new ArrayList<Exchange>();\n@@ -67,7 +67,7 @@\n \n     public void testSendLotsOfMessagesSimultaneouslyButOnly3GetThrough() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(3);\n+        mock.expectedMinimumMessageCount(3);\n         mock.setResultWaitTime(4000);\n \n         final List<Exchange> sentExchanges = Collections.synchronizedList(new ArrayList<Exchange>());\n@@ -91,7 +91,7 @@\n     public void testSamplingUsingmessageFrequency() throws Exception {\n         long totalMessages = 100;\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(10);\n+        mock.expectedMinimumMessageCount(10);\n         mock.setResultWaitTime(100);\n \n         for (int i = 0; i < totalMessages; i++) {\n@@ -104,7 +104,7 @@\n     public void testSamplingUsingmessageFrequencyViaDSL() throws Exception {\n         long totalMessages = 50;\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.expectedMessageCount(10);\n+        mock.expectedMinimumMessageCount(10);\n         mock.setResultWaitTime(100);\n \n         for (int i = 0; i < totalMessages; i++) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 107,
        "bugNodeStartChar": 3974,
        "bugNodeLength": 29,
        "fixLineNum": 107,
        "fixNodeStartChar": 3974,
        "fixNodeLength": 36,
        "sourceBeforeFix": "mock.expectedMessageCount(10)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(10)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d9cee23da79c7368a47a894f1bf861f04fdb6f00",
        "fixCommitParentSHA1": "667d009963614e9da347ea7ee1d69f273a2cfdbc",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java b/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\nindex 889d70f..f544f3e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/SerializationHelper.java\n@@ -38,7 +38,7 @@\n             out.writeDouble((Double) obj);\n         } else if (obj instanceof Float) {\n             out.writeByte(5);\n-            out.writeDouble((Float) obj);\n+            out.writeFloat((Float) obj);\n         } else if (obj instanceof Boolean) {\n             out.writeByte(6);\n             out.writeBoolean((Boolean) obj);\n@@ -66,7 +66,7 @@\n         if (type == 0) {\n             return null;\n         } else if (type == 1) {\n-            return in.readInt();\n+            return in.readLong();\n         } else if (type == 2) {\n             return in.readInt();\n         } else if (type == 3) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 69,
        "bugNodeStartChar": 2456,
        "bugNodeLength": 12,
        "fixLineNum": 69,
        "fixNodeStartChar": 2456,
        "fixNodeLength": 13,
        "sourceBeforeFix": "in.readInt()",
        "sourceAfterFix": "in.readLong()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "59970361c11b8177edbf56786e896ce4da82c6ba",
        "fixCommitParentSHA1": "47ec09e10ea6807f6c7f6a17273b3eeffe5958b7",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\nindex b3c25e4..2e40ff9 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n@@ -96,10 +96,10 @@\n \t\t}\n \t\t\n \t\tif (CopyableValue.class.isAssignableFrom(type)) {\n-\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n \t\t}\n \t\telse {\n-\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n \t\t}\n \t}\n \t\n",
        "projectName": "apache.flink",
        "bugLineNum": 102,
        "bugNodeStartChar": 3111,
        "bugNodeLength": 53,
        "fixLineNum": 102,
        "fixNodeStartChar": 3111,
        "fixNodeLength": 45,
        "sourceBeforeFix": "new CopyableValueComparator(sortOrderAscending,type)",
        "sourceAfterFix": "new ValueComparator(sortOrderAscending,type)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d89553e7a20e11a9d39bb560acc9e0aea68770e8",
        "fixCommitParentSHA1": "3bb247e6621e8adf8ecce242fc98e5191ad96b37",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheWriteQuorumTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheWriteQuorumTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheWriteQuorumTest.java\nindex d343f43..049869d 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheWriteQuorumTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/quorum/cache/ClientCacheWriteQuorumTest.java\n@@ -131,7 +131,7 @@\n \n     @AfterClass\n     public static void killAllHazelcastInstances() throws IOException {\n-        HazelcastInstanceFactory.terminateAll();\n+        factory.terminateAll();\n     }\n \n     @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 134,
        "bugNodeStartChar": 5855,
        "bugNodeLength": 39,
        "fixLineNum": 134,
        "fixNodeStartChar": 5855,
        "fixNodeLength": 22,
        "sourceBeforeFix": "HazelcastInstanceFactory.terminateAll()",
        "sourceAfterFix": "factory.terminateAll()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "72b86ae3aa6b084fc0cacf3ad86506ac9cf6486b",
        "fixCommitParentSHA1": "351c32722321f87f36fd8014dbaf7b28774a7574",
        "bugFilePath": "bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java",
        "fixPatch": "diff --git a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\nindex 190cb8f..fd8bc4e 100644\n--- a/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\n+++ b/bundles/ui/org.openhab.ui/src/main/java/org/openhab/ui/internal/items/ItemUIRegistryImpl.java\n@@ -225,7 +225,7 @@\n \t\ttry {\n \t\t\titem = getItem(itemName);\n \t\t} catch (ItemNotFoundException e) {\n-\t\t\tlogger.error(\"Cannot retrieve item {} for widget {}\", itemName, w.eClass().getInstanceTypeName());\n+\t\t\tlogger.debug(\"Cannot retrieve item {} for widget {}\", itemName, w.eClass().getInstanceTypeName());\n \t\t}\n \t\treturn formatLabel(item, itemName, label);\n \t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 228,
        "bugNodeStartChar": 7348,
        "bugNodeLength": 97,
        "fixLineNum": 228,
        "fixNodeStartChar": 7348,
        "fixNodeLength": 97,
        "sourceBeforeFix": "logger.error(\"Cannot retrieve item {} for widget {}\",itemName,w.eClass().getInstanceTypeName())",
        "sourceAfterFix": "logger.debug(\"Cannot retrieve item {} for widget {}\",itemName,w.eClass().getInstanceTypeName())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3b5dd4e9dc0b6e350d27a2628b3f37b2483fe4a9",
        "fixCommitParentSHA1": "ba3616da3edf843412bc366f5dde533f3aef1add",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\nindex 205316b..cd05da1 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n@@ -147,7 +147,7 @@\n     /**\n      * {@code \"content-security-policy\"}\n      */\n-    public static final CharSequence CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n+    public static final AsciiString CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n     /**\n      * {@code \"content-type\"}\n      */\n@@ -353,7 +353,7 @@\n     /**\n      * {@code \"x-frame-options\"}\n      */\n-    public static final CharSequence X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n+    public static final AsciiString X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n \n     private HttpHeaderNames() { }\n }\n",
        "projectName": "netty.netty",
        "bugLineNum": 147,
        "bugNodeStartChar": 5136,
        "bugNodeLength": 159,
        "fixLineNum": 147,
        "fixNodeStartChar": 5136,
        "fixNodeLength": 158,
        "sourceBeforeFix": "/**   * {@code \"content-security-policy\"}  */ public static final CharSequence CONTENT_SECURITY_POLICY=new AsciiString(\"content-security-policy\"); ",
        "sourceAfterFix": "/**   * {@code \"content-security-policy\"}  */ public static final AsciiString CONTENT_SECURITY_POLICY=new AsciiString(\"content-security-policy\"); "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3748afae244f81389553e149a023a0b3f81a90ab",
        "fixCommitParentSHA1": "a4c0fcd9d4b512b0dd095ab57b9e8d56f17ce18a",
        "bugFilePath": "core/server/src/test/java/alluxio/master/file/FileSystemMasterTest.java",
        "fixPatch": "diff --git a/core/server/src/test/java/alluxio/master/file/FileSystemMasterTest.java b/core/server/src/test/java/alluxio/master/file/FileSystemMasterTest.java\nindex d689a07..456bdb3 100644\n--- a/core/server/src/test/java/alluxio/master/file/FileSystemMasterTest.java\n+++ b/core/server/src/test/java/alluxio/master/file/FileSystemMasterTest.java\n@@ -742,7 +742,7 @@\n     try {\n       mFileSystemMaster\n           .createDirectory(new AlluxioURI(\"alluxio:/a\"), CreateDirectoryOptions.defaults());\n-      Assert.fail();\n+      Assert.fail(\"createDirectory was expected to fail with FileAlreadyExistsException\");\n     } catch (FileAlreadyExistsException e) {\n     }\n \n@@ -753,7 +753,7 @@\n     // TODO(peis): Avoid this hack by adding an option in getFileInfo to skip loading metadata.\n     try {\n       mFileSystemMaster.createFile(new AlluxioURI(\"alluxio:/a/f\"), CreateFileOptions.defaults());\n-      Assert.fail();\n+      Assert.fail(\"createDirectory was expected to fail with FileAlreadyExistsException\");\n     } catch (FileAlreadyExistsException e) {\n     }\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 756,
        "bugNodeStartChar": 30506,
        "bugNodeLength": 13,
        "fixLineNum": 756,
        "fixNodeStartChar": 30506,
        "fixNodeLength": 83,
        "sourceBeforeFix": "Assert.fail()",
        "sourceAfterFix": "Assert.fail(\"createDirectory was expected to fail with FileAlreadyExistsException\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ec5961a27122b228cb8adb634ee183eebcefa98c",
        "fixCommitParentSHA1": "5fd1cf27b028500451c9b53ce62e24fd7358f7e3",
        "bugFilePath": "ql/src/test/org/apache/hadoop/hive/ql/exec/TestOperators.java",
        "fixPatch": "diff --git a/ql/src/test/org/apache/hadoop/hive/ql/exec/TestOperators.java b/ql/src/test/org/apache/hadoop/hive/ql/exec/TestOperators.java\nindex 79385dc..44398a5 100644\n--- a/ql/src/test/org/apache/hadoop/hive/ql/exec/TestOperators.java\n+++ b/ql/src/test/org/apache/hadoop/hive/ql/exec/TestOperators.java\n@@ -262,7 +262,7 @@\n       cdop1.setConf(cd);\n       CollectOperator cdop2 = (CollectOperator) OperatorFactory.get(collectDesc.class);\n       cdop2.setConf(cd);\n-      HashMap<String,Operator<? extends Serializable>> aliasToWork = new HashMap<String,Operator<? extends Serializable>> ();\n+      LinkedHashMap<String,Operator<? extends Serializable>> aliasToWork = new LinkedHashMap<String,Operator<? extends Serializable>> ();\n       aliasToWork.put(\"a\", cdop1);\n       aliasToWork.put(\"b\", cdop2);\n \n",
        "projectName": "apache.hive",
        "bugLineNum": 265,
        "bugNodeStartChar": 10823,
        "bugNodeLength": 48,
        "fixLineNum": 265,
        "fixNodeStartChar": 10823,
        "fixNodeLength": 54,
        "sourceBeforeFix": "HashMap<String,Operator<? extends Serializable>>",
        "sourceAfterFix": "LinkedHashMap<String,Operator<? extends Serializable>>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ba7c6a38ba78dd2db7c8062509df342e22c25b3c",
        "fixCommitParentSHA1": "ab38273f0fe91b5777914686b2d1b6260d1b741a",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\nindex 4c84009..a82b138 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/reporting/CsvReporter.java\n@@ -134,7 +134,7 @@\n      * @throws IOException if there is an error opening the stream\n      */\n     protected PrintStream createStreamForMetric(MetricName metricName) throws IOException {\n-        final File newFile = new File(outputDir, metricName.getName() + \".csv\");\n+        final File newFile = new File(outputDir, metricName.toString() + \".csv\");\n         if (newFile.createNewFile()) {\n             return new PrintStream(new FileOutputStream(newFile));\n         }\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 137,
        "bugNodeStartChar": 5822,
        "bugNodeLength": 20,
        "fixLineNum": 137,
        "fixNodeStartChar": 5822,
        "fixNodeLength": 21,
        "sourceBeforeFix": "metricName.getName()",
        "sourceAfterFix": "metricName.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "289fec327e830d8a5252f831ae07d57e1bdeead3",
        "fixCommitParentSHA1": "6bdd329602efa763ef9ad4ff4aab49ca24b8c8a9",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/SSEAtmosphereInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/SSEAtmosphereInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/SSEAtmosphereInterceptor.java\nindex 7b49748..0f36cb2 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/SSEAtmosphereInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/SSEAtmosphereInterceptor.java\n@@ -75,7 +75,7 @@\n                 logger.trace(\"\", e);\n             }\n \n-            w.println(padding);\n+            w.println(paddingText);\n             w.flush();\n         }\n     }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 78,
        "bugNodeStartChar": 2521,
        "bugNodeLength": 18,
        "fixLineNum": 78,
        "fixNodeStartChar": 2521,
        "fixNodeLength": 22,
        "sourceBeforeFix": "w.println(padding)",
        "sourceAfterFix": "w.println(paddingText)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d298a84f8d65d9b4edf47c7b742921ec134648d1",
        "fixCommitParentSHA1": "aee808a686afac2b9bafd0f7dca8fcca094072c9",
        "bugFilePath": "components/camel-openshift/src/main/java/org/apache/camel/component/openshift/OpenShiftEndpoint.java",
        "fixPatch": "diff --git a/components/camel-openshift/src/main/java/org/apache/camel/component/openshift/OpenShiftEndpoint.java b/components/camel-openshift/src/main/java/org/apache/camel/component/openshift/OpenShiftEndpoint.java\nindex dc34008..f505be5 100644\n--- a/components/camel-openshift/src/main/java/org/apache/camel/component/openshift/OpenShiftEndpoint.java\n+++ b/components/camel-openshift/src/main/java/org/apache/camel/component/openshift/OpenShiftEndpoint.java\n@@ -37,9 +37,9 @@\n \n     @UriPath @Metadata(required = \"true\")\n     private String clientId;\n-    @UriPath @Metadata(required = \"true\")\n+    @UriParam @Metadata(required = \"true\")\n     private String username;\n-    @UriPath @Metadata(required = \"true\")\n+    @UriParam @Metadata(required = \"true\")\n     private String password;\n     @UriParam\n     private String domain;\n",
        "projectName": "apache.camel",
        "bugLineNum": 40,
        "bugNodeStartChar": 1658,
        "bugNodeLength": 8,
        "fixLineNum": 40,
        "fixNodeStartChar": 1658,
        "fixNodeLength": 9,
        "sourceBeforeFix": "@UriPath",
        "sourceAfterFix": "@UriParam"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "60ab1b09e8d7b90a59ee711fd696612afcc6e60d",
        "fixCommitParentSHA1": "ee64fcfbeba009e67640db2225d1e3a348f61221",
        "bugFilePath": "api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java b/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java\nindex 870156d..71a9a87 100644\n--- a/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java\n@@ -125,7 +125,7 @@\n \t\t\tContext.requirePrivilege(PrivilegeConstants.DELETE_PATIENTS);\n \t\t}\n \t\t\n-\t\tif (patient.getIdentifiers().size() == 1) {\n+\t\tif (!patient.isVoided() && patient.getIdentifiers().size() == 1) {\n \t\t\tpatient.getPatientIdentifier().setPreferred(true);\n \t\t}\n \t\t\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 128,
        "bugNodeStartChar": 4417,
        "bugNodeLength": 36,
        "fixLineNum": 128,
        "fixNodeStartChar": 4417,
        "fixNodeLength": 59,
        "sourceBeforeFix": "patient.getIdentifiers().size() == 1",
        "sourceAfterFix": "!patient.isVoided() && patient.getIdentifiers().size() == 1"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "01d18f2c3db799d144cc8e3308da3fb2ade19417",
        "fixCommitParentSHA1": "2f6370343200faec3de904a5cf2e39345acb33e7",
        "bugFilePath": "guava/src/com/google/common/util/concurrent/Striped.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/util/concurrent/Striped.java b/guava/src/com/google/common/util/concurrent/Striped.java\nindex cd43294..36fa929 100644\n--- a/guava/src/com/google/common/util/concurrent/Striped.java\n+++ b/guava/src/com/google/common/util/concurrent/Striped.java\n@@ -321,9 +321,9 @@\n     private final Lock delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeLock(Lock delegate, Object strongReference) {\n+    WeakSafeLock(Lock delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n@@ -344,9 +344,9 @@\n     private final Condition delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeCondition(Condition delegate, Object strongReference) {\n+    WeakSafeCondition(Condition delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n",
        "projectName": "google.guava",
        "bugLineNum": 326,
        "bugNodeStartChar": 13268,
        "bugNodeLength": 22,
        "fixLineNum": 326,
        "fixNodeStartChar": 13268,
        "fixNodeLength": 37,
        "sourceBeforeFix": "Object strongReference",
        "sourceAfterFix": "WeakSafeReadWriteLock strongReference"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2ecd6fd07c9c2bb437463cca31a7f18e525675f",
        "fixCommitParentSHA1": "1ae191089bb87bc60c5e1402441b1e9fa416bee9",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\nindex 2c15685..69351eb 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractSingleArrayBlock.java\n@@ -25,7 +25,7 @@\n         this.start = start;\n     }\n \n-    protected abstract BlockBuilder getBlock();\n+    protected abstract Block getBlock();\n \n     private void checkReadablePosition(int position)\n     {\n",
        "projectName": "facebook.presto",
        "bugLineNum": 28,
        "bugNodeStartChar": 835,
        "bugNodeLength": 43,
        "fixLineNum": 28,
        "fixNodeStartChar": 835,
        "fixNodeLength": 36,
        "sourceBeforeFix": "protected abstract BlockBuilder getBlock(); ",
        "sourceAfterFix": "protected abstract Block getBlock(); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5d12b156e1150162ba3def263b2da14793304b4e",
        "fixCommitParentSHA1": "89003e6b52a561b4e2cc0e4682d8fa7e4cc61cd7",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\nindex 9d007bd..75305b8 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestHashJoinOperator.java\n@@ -118,7 +118,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypes(), buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probePages.getTypesWithoutHash(), buildPages.getTypesWithoutHash()))\n                 .row(\"20\", 1020L, 2020L, \"20\", 30L, 40L)\n                 .row(\"21\", 1021L, 2021L, \"21\", 31L, 41L)\n                 .row(\"22\", 1022L, 2022L, \"22\", 32L, 42L)\n@@ -169,7 +169,7 @@\n         );\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -588,7 +588,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", \"b\")\n@@ -637,7 +637,7 @@\n                 Optional.empty());\n \n         // expected\n-        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypes()))\n+        MaterializedResult expected = MaterializedResult.resultBuilder(taskContext.getSession(), concat(probeTypes, buildPages.getTypesWithoutHash()))\n                 .row(\"a\", \"a\")\n                 .row(\"a\", \"a\")\n                 .row(\"b\", null)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 591,
        "bugNodeStartChar": 26606,
        "bugNodeLength": 21,
        "fixLineNum": 591,
        "fixNodeStartChar": 26606,
        "fixNodeLength": 32,
        "sourceBeforeFix": "buildPages.getTypes()",
        "sourceAfterFix": "buildPages.getTypesWithoutHash()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bbe22e599c7516a08f1a0c5aff540d4ef5a02eb3",
        "fixCommitParentSHA1": "654e00d8bb3168b7063760c26ca6d17e50fe6147",
        "bugFilePath": "src/com/google/javascript/jscomp/SourceMap.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/SourceMap.java b/src/com/google/javascript/jscomp/SourceMap.java\nindex 6c96be7..7ac8421 100644\n--- a/src/com/google/javascript/jscomp/SourceMap.java\n+++ b/src/com/google/javascript/jscomp/SourceMap.java\n@@ -180,7 +180,9 @@\n         lineNo = sourceMapping.getLineNumber();\n         charNo = sourceMapping.getColumnPosition();\n         String identifier = sourceMapping.getIdentifier();\n-        if (sourceMapping != null && !identifier.isEmpty()) {\n+        // TODO(bradfordcsmith): When we move off of GWT we should be able\n+        //     to use sourceMapping.hasIdentifier() instead of a null check.\n+        if (identifier != null && !identifier.isEmpty()) {\n           originalName = identifier;\n         }\n       }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 183,
        "bugNodeStartChar": 5860,
        "bugNodeLength": 21,
        "fixLineNum": 185,
        "fixNodeStartChar": 6012,
        "fixNodeLength": 18,
        "sourceBeforeFix": "sourceMapping != null",
        "sourceAfterFix": "identifier != null"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ee6198b11329c1da02e8086184b79d355a282ae5",
        "fixCommitParentSHA1": "1e149e848d54d53a8ff0566c1445af1e8b295a3c",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/FromFilePollThirdTimeOkTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/FromFilePollThirdTimeOkTest.java b/camel-core/src/test/java/org/apache/camel/component/file/FromFilePollThirdTimeOkTest.java\nindex 293b5c9..c24162d 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/FromFilePollThirdTimeOkTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/FromFilePollThirdTimeOkTest.java\n@@ -47,7 +47,7 @@\n         assertMockEndpointsSatisfied();\n \n         // give time to delete file\n-        Thread.sleep(200);\n+        Thread.sleep(500);\n \n         assertEquals(3, counter);\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 50,
        "bugNodeStartChar": 1808,
        "bugNodeLength": 17,
        "fixLineNum": 50,
        "fixNodeStartChar": 1808,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(200)",
        "sourceAfterFix": "Thread.sleep(500)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097",
        "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a",
        "bugFilePath": "src/jvm/clojure/lang/Numbers.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 1280,
        "bugNodeStartChar": 28461,
        "bugNodeLength": 31,
        "fixLineNum": 1280,
        "fixNodeStartChar": 28461,
        "fixNodeLength": 33,
        "sourceBeforeFix": "((Number)s.first()).intValue()",
        "sourceAfterFix": "((Number)s.first()).floatValue()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c6b372f517dc691910552f18db1ada3c3a4127f2",
        "fixCommitParentSHA1": "71d8d057e68834f711f7f38fe54a97b782550d60",
        "bugFilePath": "handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java",
        "fixPatch": "diff --git a/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java b/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java\nindex 278eb10..6979295 100644\n--- a/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java\n+++ b/handler-proxy/src/main/java/io/netty/handler/proxy/HttpProxyHandler.java\n@@ -171,7 +171,7 @@\n     }\n \n     @Override\n-    protected boolean handleResponse(ChannelHandlerContext ctx, Object response) throws HttpProxyConnectException {\n+    protected boolean handleResponse(ChannelHandlerContext ctx, Object response) throws Exception {\n         if (response instanceof HttpResponse) {\n             if (status != null) {\n                 throw new HttpProxyConnectException(exceptionMessage(\"too many responses\"), /*headers=*/ null);\n",
        "projectName": "netty.netty",
        "bugLineNum": 173,
        "bugNodeStartChar": 5987,
        "bugNodeLength": 926,
        "fixLineNum": 173,
        "fixNodeStartChar": 5987,
        "fixNodeLength": 910,
        "sourceBeforeFix": "@Override protected boolean handleResponse(ChannelHandlerContext ctx,Object response) throws HttpProxyConnectException {   if (response instanceof HttpResponse) {     if (status != null) {       throw new HttpProxyConnectException(exceptionMessage(\"too many responses\"),null);     }     HttpResponse res=(HttpResponse)response;     status=res.status();     inboundHeaders=res.headers();   }   boolean finished=response instanceof LastHttpContent;   if (finished) {     if (status == null) {       throw new HttpProxyConnectException(exceptionMessage(\"missing response\"),inboundHeaders);     }     if (status.code() != 200) {       throw new HttpProxyConnectException(exceptionMessage(\"status: \" + status),inboundHeaders);     }   }   return finished; } ",
        "sourceAfterFix": "@Override protected boolean handleResponse(ChannelHandlerContext ctx,Object response) throws Exception {   if (response instanceof HttpResponse) {     if (status != null) {       throw new HttpProxyConnectException(exceptionMessage(\"too many responses\"),null);     }     HttpResponse res=(HttpResponse)response;     status=res.status();     inboundHeaders=res.headers();   }   boolean finished=response instanceof LastHttpContent;   if (finished) {     if (status == null) {       throw new HttpProxyConnectException(exceptionMessage(\"missing response\"),inboundHeaders);     }     if (status.code() != 200) {       throw new HttpProxyConnectException(exceptionMessage(\"status: \" + status),inboundHeaders);     }   }   return finished; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "580c6069fa37c0ad5ee45f04e7be83b2ee70ccbf",
        "fixCommitParentSHA1": "0d8ed47c3e66379f92025f9048bdcd2960c0ef96",
        "bugFilePath": "buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java",
        "fixPatch": "diff --git a/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java\nindex a703a8a..6752930 100644\n--- a/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java\n+++ b/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java\n@@ -575,7 +575,7 @@\n         dst.writerIndex(dst.capacity());\n     }\n     \n-    public ByteBuf getBufferFor(int index) throws IOException {\n+    public ByteBuf getBufferFor(int index) throws IndexOutOfBoundsException {\n         if (index < 0 || index > capacity()) {\n             throw new IndexOutOfBoundsException(\"Invalid index: \" + index\n                     + \" - Bytes needed: \" + (index) + \", maximum is \"\n",
        "projectName": "netty.netty",
        "bugLineNum": 578,
        "bugNodeStartChar": 20038,
        "bugNodeLength": 461,
        "fixLineNum": 578,
        "fixNodeStartChar": 20038,
        "fixNodeLength": 475,
        "sourceBeforeFix": "public ByteBuf getBufferFor(int index) throws IOException {   if (index < 0 || index > capacity()) {     throw new IndexOutOfBoundsException(\"Invalid index: \" + index + \" - Bytes needed: \"+ (index)+ \", maximum is \"+ capacity());   }   int componentId=componentId(index);   return components[componentId].duplicate(); } ",
        "sourceAfterFix": "public ByteBuf getBufferFor(int index) throws IndexOutOfBoundsException {   if (index < 0 || index > capacity()) {     throw new IndexOutOfBoundsException(\"Invalid index: \" + index + \" - Bytes needed: \"+ (index)+ \", maximum is \"+ capacity());   }   int componentId=componentId(index);   return components[componentId].duplicate(); } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1163,
        "bugNodeStartChar": 62372,
        "bugNodeLength": 87,
        "fixLineNum": 1163,
        "fixNodeStartChar": 62372,
        "fixNodeLength": 87,
        "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",true))",
        "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",true))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "e4d57393934db18a4b8161de6a27edc57d51e4ce",
        "fixCommitParentSHA1": "09fe07a21a12867897a51c0dfd378aeee4c665c7",
        "bugFilePath": "presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java",
        "fixPatch": "diff --git a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\nindex 20e6849..608b3e6 100644\n--- a/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\n+++ b/presto-raptor/src/test/java/com/facebook/presto/raptor/metadata/TestShardCleaner.java\n@@ -207,7 +207,7 @@\n         Set<UUID> shards = ImmutableSet.of(shard1, shard2, shard3);\n \n         for (UUID shard : shards) {\n-            shardDao.insertShard(shard, tableId, null, 0, 0, 0);\n+            shardDao.insertShard(shard, tableId, null, 0, 0, 0, 0);\n             createShardFile(shard);\n             assertTrue(shardFileExists(shard));\n         }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 210,
        "bugNodeStartChar": 7372,
        "bugNodeLength": 51,
        "fixLineNum": 210,
        "fixNodeStartChar": 7372,
        "fixNodeLength": 54,
        "sourceBeforeFix": "shardDao.insertShard(shard,tableId,null,0,0,0)",
        "sourceAfterFix": "shardDao.insertShard(shard,tableId,null,0,0,0,0)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "02aba5a681a44fc3c1ab8c2658887ec81d07ac95",
        "fixCommitParentSHA1": "00ec3c0f555c3886bf70cad2b2f330b600bb6a97",
        "bugFilePath": "security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java",
        "fixPatch": "diff --git a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\nindex ce3d19f..3354a04 100644\n--- a/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n+++ b/security/oauth1-server/src/main/java/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.java\n@@ -86,7 +86,7 @@\n      * @return {@link Consumer} object for the newly registered consumer.\n      */\n     public Consumer registerConsumer(final String owner, final MultivaluedMap<String, String> attributes) {\n-        return registerConsumer(newUUIDString(), newUUIDString(), owner, attributes);\n+        return registerConsumer(owner, newUUIDString(), newUUIDString(), attributes);\n     }\n \n     /**\n",
        "projectName": "jersey.jersey",
        "bugLineNum": 89,
        "bugNodeStartChar": 4051,
        "bugNodeLength": 69,
        "fixLineNum": 89,
        "fixNodeStartChar": 4051,
        "fixNodeLength": 69,
        "sourceBeforeFix": "registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)",
        "sourceAfterFix": "registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 725,
        "bugNodeStartChar": 24490,
        "bugNodeLength": 28,
        "fixLineNum": 725,
        "fixNodeStartChar": 23766,
        "fixNodeLength": 30,
        "sourceBeforeFix": "GL20.glUniform4(location,v)",
        "sourceAfterFix": "GL20.glUniform4fv(location,v)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketTwoRoutesToSameEndpointExampleTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketTwoRoutesToSameEndpointExampleTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketTwoRoutesToSameEndpointExampleTest.java\nindex 7c0b145..677eb53 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketTwoRoutesToSameEndpointExampleTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketTwoRoutesToSameEndpointExampleTest.java\n@@ -94,7 +94,7 @@\n             public void configure() {\n                 WebsocketComponent websocketComponent = (WebsocketComponent) context.getComponent(\"websocket\");\n                 websocketComponent.setMinThreads(1);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n                 \n                 from(\"websocket://localhost:\" + port + \"/bar\")\n                         .log(\">>> Message received from BAR WebSocket Client : ${body}\")\n",
        "projectName": "apache.camel",
        "bugLineNum": 97,
        "bugNodeStartChar": 3701,
        "bugNodeLength": 36,
        "fixLineNum": 97,
        "fixNodeStartChar": 3701,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b28171ed750594402a3d1a93bca38beea9ba835a",
        "fixCommitParentSHA1": "36900cac998f0e2d5e1276eaa04cfa65dc18eaad",
        "bugFilePath": "app/lib/ApiClientImpl.java",
        "fixPatch": "diff --git a/app/lib/ApiClientImpl.java b/app/lib/ApiClientImpl.java\nindex 521787c..2d3e2e7 100644\n--- a/app/lib/ApiClientImpl.java\n+++ b/app/lib/ApiClientImpl.java\n@@ -319,7 +319,7 @@\n             if (radio == null) {\n                 if (node == null) {\n                     if (nodes != null) {\n-                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\");\n+                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\", new Throwable());\n                     }\n                     node(serverNodes.any());\n                 }\n@@ -334,7 +334,7 @@\n                 if (user != null) {\n                     session(user.getSessionId());\n                 } else {\n-                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\");\n+                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\", new Throwable());\n                 }\n             }\n             final URL url = prepareUrl(target);\n@@ -544,7 +544,7 @@\n                 }\n \n                 if (unauthenticated && sessionId != null) {\n-                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\");\n+                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\", new Throwable());\n                 }\n                 if (sessionId != null) {\n                     // pass the current session id via basic auth and special \"password\"\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 547,
        "bugNodeStartChar": 21181,
        "bugNodeLength": 108,
        "fixLineNum": 547,
        "fixNodeStartChar": 21181,
        "fixNodeLength": 125,
        "sourceBeforeFix": "log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\")",
        "sourceAfterFix": "log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\",new Throwable())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6bcc304e29dc9bd1052eecb504711182ed78d39a",
        "fixCommitParentSHA1": "18a23493f1380896f29b3e8b3137a3b7dc089ea2",
        "bugFilePath": "plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java",
        "fixPatch": "diff --git a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\nindex 26354ca..7503dcd 100644\n--- a/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n+++ b/plugins/netty/src/main/java/com/navercorp/pinpoint/plugin/netty/NettyPlugin.java\n@@ -114,7 +114,7 @@\n \n             final InstrumentMethod writeMethod2 = InstrumentUtils.findMethod(target, \"write\", \"java.lang.Object\", \"io.netty.channel.ChannelPromise\");\n             if (writeMethod2 != null) {\n-                writeMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n+                writeMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PIPELINE_WRITE, NettyConstants.SCOPE_WRITE, ExecutionPolicy.BOUNDARY);\n             }\n \n             final InstrumentMethod writeAndFlushMethod1 = InstrumentUtils.findMethod(target, \"writeAndFlush\", \"java.lang.Object\");\n@@ -168,7 +168,7 @@\n \n             final InstrumentMethod addListenerMethod2 = InstrumentUtils.findMethod(target, \"addListeners\", \"io.netty.util.concurrent.GenericFutureListener[]\");\n             if (addListenerMethod2 != null) {\n-                addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n+                addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER, NettyConstants.SCOPE, ExecutionPolicy.BOUNDARY);\n             }\n \n             return target.toBytecode();\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 171,
        "bugNodeStartChar": 9082,
        "bugNodeLength": 144,
        "fixLineNum": 171,
        "fixNodeStartChar": 9082,
        "fixNodeLength": 144,
        "sourceBeforeFix": "addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)",
        "sourceAfterFix": "addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\nindex 5e89671..a1e40a6 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\n@@ -343,7 +343,7 @@\n         final Map<String, ValueDifference<List<String>>> differingViolations =\n             violationDifferences.entriesDiffering();\n \n-        final StringBuilder message = new StringBuilder();\n+        final StringBuilder message = new StringBuilder(256);\n         if (!missingViolations.isEmpty()) {\n             message.append(\"missing violations: \").append(missingViolations);\n         }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 346,
        "bugNodeStartChar": 15325,
        "bugNodeLength": 19,
        "fixLineNum": 346,
        "fixNodeStartChar": 15325,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3ce5556c31e627cc5e47fddf0a639f9e1fa32a3b",
        "fixCommitParentSHA1": "b1e433081ffdaa614da574f58c340bca2e178289",
        "bugFilePath": "retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java",
        "fixPatch": "diff --git a/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\nindex 6756dd8..fd30344 100644\n--- a/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\n+++ b/retrofit-converters/wire/src/test/java/retrofit/converter/WireConverterTest.java\n@@ -64,7 +64,7 @@\n     try {\n       converter.fromBody(decodeBase64(\"////\", \"yummy/bytes\"), Person.class);\n       fail();\n-    } catch (IllegalArgumentException e) {\n+    } catch (ConversionException e) {\n       assertThat(e).hasMessage(\"Expected a proto but was: yummy/bytes\");\n     }\n   }\n",
        "projectName": "square.retrofit",
        "bugLineNum": 67,
        "bugNodeStartChar": 2327,
        "bugNodeLength": 26,
        "fixLineNum": 67,
        "fixNodeStartChar": 2327,
        "fixNodeLength": 21,
        "sourceBeforeFix": "IllegalArgumentException e",
        "sourceAfterFix": "ConversionException e"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1dd50dfae2c7d4853f7d04351d8cbfc77cfc922f",
        "fixCommitParentSHA1": "130958dde711e8870c5b72dc4f8b9b2d9d8f9c77",
        "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java",
        "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\nindex 6062485..1a91dc1 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n@@ -86,11 +86,11 @@\n \n     @NotNull\n     @JsonProperty\n-    private Size requestBufferSize = Size.kilobytes(32);\n+    private Size requestBufferSize = Size.kilobytes(16);\n \n     @NotNull\n     @JsonProperty\n-    private Size requestHeaderBufferSize = Size.kilobytes(3);\n+    private Size requestHeaderBufferSize = Size.kilobytes(6);\n \n     @NotNull\n     @JsonProperty\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 93,
        "bugNodeStartChar": 2167,
        "bugNodeLength": 17,
        "fixLineNum": 93,
        "fixNodeStartChar": 2167,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Size.kilobytes(3)",
        "sourceAfterFix": "Size.kilobytes(6)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "2979c84ee1ee2d8ee9623326bedd7d5a0d53de26",
        "fixCommitParentSHA1": "fcb18ff6ae441da1003ef87e566e4aaf05782488",
        "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java",
        "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\nindex 63d0d38..ddf304f 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n@@ -229,7 +229,7 @@\n \t\t\tString[] tokens = paths.split(\",\");\n \t\t\tString path = null;\n \t\t\tfor(String token: tokens) {\n-\t\t\t\tif(new FileWrapper(token).exists()) {\n+\t\t\t\tif (new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()) {\n \t\t\t\t\tpath = token;\n \t\t\t\t}\n \t\t\t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 232,
        "bugNodeStartChar": 9642,
        "bugNodeLength": 31,
        "fixLineNum": 232,
        "fixNodeStartChar": 9643,
        "fixNodeLength": 66,
        "sourceBeforeFix": "new FileWrapper(token).exists()",
        "sourceAfterFix": "new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "00617d3c125c64c8f7b4e7550bad32f1678bd061",
        "fixCommitParentSHA1": "2ab04de36a43875d9d2b2b0b0b2fa7e27d99bef7",
        "bugFilePath": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 89cf2dc..596f2dd 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n@@ -295,7 +295,7 @@\n \t\t\t\n \t\t\t// Update task that has been started\n \t\t\ttaskDefinition.setStarted(false);\n-\t\t\tsaveTask(taskDefinition);\n+\t\t\tsaveTaskDefinition(taskDefinition);\n \t\t}\n \t}\n \t\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 298,
        "bugNodeStartChar": 10191,
        "bugNodeLength": 24,
        "fixLineNum": 298,
        "fixNodeStartChar": 10191,
        "fixNodeLength": 34,
        "sourceBeforeFix": "saveTask(taskDefinition)",
        "sourceAfterFix": "saveTaskDefinition(taskDefinition)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8bff26d758f6e739fc4c67aa31cc7fcd9c1319f2",
        "fixCommitParentSHA1": "21248a42ca3d2be77931f87f211afec9c1dd671a",
        "bugFilePath": "tool/src/org/antlr/v4/semantics/RuleCollector.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/semantics/RuleCollector.java b/tool/src/org/antlr/v4/semantics/RuleCollector.java\nindex 48a06ff..7791dcf 100644\n--- a/tool/src/org/antlr/v4/semantics/RuleCollector.java\n+++ b/tool/src/org/antlr/v4/semantics/RuleCollector.java\n@@ -96,7 +96,7 @@\n \t\tif ( locals!=null ) {\n \t\t\tr.locals = ScopeParser.parseTypedArgList(locals, locals.getText(), g.tool.errMgr);\n \t\t\tr.locals.type = AttributeDict.DictType.LOCAL;\n-\t\t\tr.locals.ast = returns;\n+\t\t\tr.locals.ast = locals;\n \t\t}\n \n \t\tfor (GrammarAST a : actions) {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 99,
        "bugNodeStartChar": 3864,
        "bugNodeLength": 22,
        "fixLineNum": 99,
        "fixNodeStartChar": 3864,
        "fixNodeLength": 21,
        "sourceBeforeFix": "r.locals.ast=returns",
        "sourceAfterFix": "r.locals.ast=locals"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1fe531a4525bfc4a4138a0074d632eb79d1ce044",
        "fixCommitParentSHA1": "2d91d45d5053c6b643e57dd9fbc50703b52b6b3c",
        "bugFilePath": "src/com/google/javascript/jscomp/SourceFile.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/SourceFile.java b/src/com/google/javascript/jscomp/SourceFile.java\nindex aa30e29..650d772 100644\n--- a/src/com/google/javascript/jscomp/SourceFile.java\n+++ b/src/com/google/javascript/jscomp/SourceFile.java\n@@ -109,7 +109,7 @@\n       return;\n     }\n     try {\n-      String[] sourceLines = getCode().split(\"\\n\");\n+      String[] sourceLines = getCode().split(\"\\n\", -1);\n       lineOffsets = new int[sourceLines.length];\n       for (int ii = 1; ii < sourceLines.length; ++ii) {\n         lineOffsets[ii] =\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 112,
        "bugNodeStartChar": 3599,
        "bugNodeLength": 21,
        "fixLineNum": 112,
        "fixNodeStartChar": 3599,
        "fixNodeLength": 25,
        "sourceBeforeFix": "getCode().split(\"\\n\")",
        "sourceAfterFix": "getCode().split(\"\\n\",-1)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "9418ff826024ef85b3a74de9e82951e3157051d4",
        "fixCommitParentSHA1": "611f7e0f59795f21c3731f7fa65b0f50c4c6f80b",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java b/hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java\nindex f38da46..a90b70c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java\n+++ b/hazelcast/src/main/java/com/hazelcast/nio/tcp/WriteHandler.java\n@@ -157,7 +157,7 @@\n      * This call is only made by the IO thread.\n      */\n     private void unschedule() {\n-        if (dirtyOutputBuffer()) {\n+        if (dirtyOutputBuffer() || currentPacket != null) {\n             // Because not all data was written to the socket, we need to register for OP_WRITE so we get\n             // notified when the socketChannel is ready for more data.\n             registerOp(SelectionKey.OP_WRITE);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 160,
        "bugNodeStartChar": 5797,
        "bugNodeLength": 19,
        "fixLineNum": 160,
        "fixNodeStartChar": 5797,
        "fixNodeLength": 44,
        "sourceBeforeFix": "dirtyOutputBuffer()",
        "sourceAfterFix": "dirtyOutputBuffer() || currentPacket != null"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "76c6aee2c6d008e6f2345cdde262ad9ffb338afd",
        "fixCommitParentSHA1": "2d17ce39994b0baabd000b7afc68468e58155759",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\nindex 4978387..05c19de 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\n@@ -201,7 +201,7 @@\n     if (c != 0) return c;\n \n     //type\n-    c = (0xff & a.getTypeByte()) - (0xff & b.getTypeByte());\n+    c = (0xff & b.getTypeByte()) - (0xff & a.getTypeByte());\n     return c;\n   }\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 204,
        "bugNodeStartChar": 7185,
        "bugNodeLength": 15,
        "fixLineNum": 204,
        "fixNodeStartChar": 7185,
        "fixNodeLength": 15,
        "sourceBeforeFix": "a.getTypeByte()",
        "sourceAfterFix": "b.getTypeByte()"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fd3e0ff191f3e26b09f52f538748133b65f40740",
        "fixCommitParentSHA1": "ce29e9ea5c048a57e877d53e9c3e6081ff91dd78",
        "bugFilePath": "hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java",
        "fixPatch": "diff --git a/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java b/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java\nindex 12f2f2f..da11756 100644\n--- a/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java\n+++ b/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java\n@@ -327,7 +327,7 @@\n       if (expMsg.contains(\"No FileSystem for scheme\")) {\n         newMsg =\n             \"Unsupported filesystem scheme found in the backup target url. Error Message: \"\n-                + newMsg;\n+                + expMsg;\n         LOG.error(newMsg);\n         throw new IOException(newMsg);\n       } else {\n",
        "projectName": "apache.hbase",
        "bugLineNum": 329,
        "bugNodeStartChar": 12190,
        "bugNodeLength": 104,
        "fixLineNum": 329,
        "fixNodeStartChar": 12190,
        "fixNodeLength": 104,
        "sourceBeforeFix": "\"Unsupported filesystem scheme found in the backup target url. Error Message: \" + newMsg",
        "sourceAfterFix": "\"Unsupported filesystem scheme found in the backup target url. Error Message: \" + expMsg"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "134e93f3fdbb528145fbdb0efd245b3128fec5ce",
        "fixCommitParentSHA1": "ad8b671b3cd059fe44bf91a106c06a8419c80ff3",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.java\nindex 726f4f8..3a2b274 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.java\n@@ -115,10 +115,10 @@\n \t\t\t\t\t.reduce(RouterFunction::and).get();\n \t\t\tHandlerStrategies.Builder strategiesBuilder = HandlerStrategies.builder();\n \t\t\tif (this.messageReaders != null) {\n-\t\t\t\tthis.messageReaders.forEach(strategiesBuilder::messageReader);\n+\t\t\t\tthis.messageReaders.forEach(strategiesBuilder::customMessageReader);\n \t\t\t}\n \t\t\tif (this.messageWriters != null) {\n-\t\t\t\tthis.messageWriters.forEach(strategiesBuilder::messageWriter);\n+\t\t\t\tthis.messageWriters.forEach(strategiesBuilder::customMessageWriter);\n \t\t\t}\n \t\t\tif (this.viewResolvers != null) {\n \t\t\t\tthis.viewResolvers.forEach(strategiesBuilder::viewResolver);\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 121,
        "bugNodeStartChar": 4953,
        "bugNodeLength": 32,
        "fixLineNum": 121,
        "fixNodeStartChar": 4953,
        "fixNodeLength": 38,
        "sourceBeforeFix": "strategiesBuilder::messageWriter",
        "sourceAfterFix": "strategiesBuilder::customMessageWriter"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "42be553433775c5985f6c68f8178e51afb0a402e",
        "fixCommitParentSHA1": "05f57f4c03c68e3184d6fcfaaa4353a0981125fa",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java\nindex 9e130eb..6856aad 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegion.java\n@@ -244,7 +244,7 @@\n     dir = TEST_UTIL.getDataTestDir(\"TestHRegion\").toString();\n     method = name.getMethodName();\n     tableName = TableName.valueOf(method);\n-    CONF.set(CompactingMemStore.IN_MEMORY_FLUSH_THRESHOLD_FACTOR_KEY, String.valueOf(0.02));\n+    CONF.set(CompactingMemStore.IN_MEMORY_FLUSH_THRESHOLD_FACTOR_KEY, String.valueOf(0.09));\n   }\n \n   @After\n",
        "projectName": "apache.hbase",
        "bugLineNum": 247,
        "bugNodeStartChar": 11439,
        "bugNodeLength": 20,
        "fixLineNum": 247,
        "fixNodeStartChar": 11439,
        "fixNodeLength": 20,
        "sourceBeforeFix": "String.valueOf(0.02)",
        "sourceAfterFix": "String.valueOf(0.09)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "615135aaa2ec18ea6c0b4785749079df4db5fd7a",
        "fixCommitParentSHA1": "714b96163228743244ba3f6341a676cff8895467",
        "bugFilePath": "jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java",
        "fixPatch": "diff --git a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\nindex 00d2edb..fdef319 100644\n--- a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n+++ b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n@@ -55,7 +55,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -72,7 +72,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -98,7 +98,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(nullValue()));\n         assertThat(args.isGenerateBuilders(), is(false));\n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 75,
        "bugNodeStartChar": 2837,
        "bugNodeLength": 18,
        "fixLineNum": 75,
        "fixNodeStartChar": 2837,
        "fixNodeLength": 24,
        "sourceBeforeFix": "is(\"/home/source\")",
        "sourceAfterFix": "endsWith(\"/home/source\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java b/src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java\nindex e2c9631..4c5cf4e 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java\n@@ -97,7 +97,7 @@\n      * @return the full name of the current package.\n      */\n     private String getPackageName() {\n-        final StringBuilder buf = new StringBuilder();\n+        final StringBuilder buf = new StringBuilder(256);\n         final Iterator<String> iterator = packageStack.descendingIterator();\n         while (iterator.hasNext()) {\n             final String subPackage = iterator.next();\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 100,
        "bugNodeStartChar": 3766,
        "bugNodeLength": 19,
        "fixLineNum": 100,
        "fixNodeStartChar": 3766,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java b/src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java\nindex 81d2a3d..515ed5c 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java\n@@ -108,7 +108,7 @@\n      * @return string AST.\n      */\n     public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n-        final StringBuilder messageBuilder = new StringBuilder();\n+        final StringBuilder messageBuilder = new StringBuilder(1024);\n         DetailNode node = ast;\n         while (node != null) {\n             if (node.getType() == JavadocTokenTypes.JAVADOC) {\n@@ -136,7 +136,7 @@\n     private static String getIndentation(DetailNode node) {\n         final boolean isLastChild = JavadocUtils.getNextSibling(node) == null;\n         DetailNode currentNode = node;\n-        final StringBuilder indentation = new StringBuilder();\n+        final StringBuilder indentation = new StringBuilder(1024);\n         while (currentNode.getParent() != null) {\n             currentNode = currentNode.getParent();\n             if (currentNode.getParent() == null) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 139,
        "bugNodeStartChar": 5795,
        "bugNodeLength": 19,
        "fixLineNum": 139,
        "fixNodeStartChar": 5795,
        "fixNodeLength": 23,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(1024)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "cb8447af2886a43d50cf72a3f6051343c5db645a",
        "fixCommitParentSHA1": "cfc0311180c242c8f307fccb6827c980f01ab527",
        "bugFilePath": "src/test/java/io/vertx/core/logging/Recording.java",
        "fixPatch": "diff --git a/src/test/java/io/vertx/core/logging/Recording.java b/src/test/java/io/vertx/core/logging/Recording.java\nindex c393db4..6fb83cc 100644\n--- a/src/test/java/io/vertx/core/logging/Recording.java\n+++ b/src/test/java/io/vertx/core/logging/Recording.java\n@@ -74,7 +74,7 @@\n     long now = System.currentTimeMillis();\n     StringBuilder acc = new StringBuilder(get());\n     while (!predicate.test(acc.toString())) {\n-      Assert.assertTrue(System.currentTimeMillis() - now < 5000);\n+      Assert.assertTrue(\"Was not expecting this output \" + acc, System.currentTimeMillis() - now < 5000);\n       try {\n         Thread.sleep(1);\n       } catch (InterruptedException e) {\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 77,
        "bugNodeStartChar": 2102,
        "bugNodeLength": 58,
        "fixLineNum": 77,
        "fixNodeStartChar": 2102,
        "fixNodeLength": 98,
        "sourceBeforeFix": "Assert.assertTrue(System.currentTimeMillis() - now < 5000)",
        "sourceAfterFix": "Assert.assertTrue(\"Was not expecting this output \" + acc,System.currentTimeMillis() - now < 5000)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3b5dd4e9dc0b6e350d27a2628b3f37b2483fe4a9",
        "fixCommitParentSHA1": "ba3616da3edf843412bc366f5dde533f3aef1add",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\nindex 205316b..cd05da1 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n@@ -147,7 +147,7 @@\n     /**\n      * {@code \"content-security-policy\"}\n      */\n-    public static final CharSequence CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n+    public static final AsciiString CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n     /**\n      * {@code \"content-type\"}\n      */\n@@ -353,7 +353,7 @@\n     /**\n      * {@code \"x-frame-options\"}\n      */\n-    public static final CharSequence X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n+    public static final AsciiString X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n \n     private HttpHeaderNames() { }\n }\n",
        "projectName": "netty.netty",
        "bugLineNum": 353,
        "bugNodeStartChar": 11767,
        "bugNodeLength": 135,
        "fixLineNum": 353,
        "fixNodeStartChar": 11767,
        "fixNodeLength": 134,
        "sourceBeforeFix": "/**   * {@code \"x-frame-options\"}  */ public static final CharSequence X_FRAME_OPTIONS=new AsciiString(\"x-frame-options\"); ",
        "sourceAfterFix": "/**   * {@code \"x-frame-options\"}  */ public static final AsciiString X_FRAME_OPTIONS=new AsciiString(\"x-frame-options\"); "
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "c0fc1a0d3ae085658408d3644e9a676478ee696b",
        "fixCommitParentSHA1": "f9ae3ed39b2902debf74bf0d584882bbf80940e4",
        "bugFilePath": "bundles/binding/org.openhab.binding.maxcul/src/main/java/org/openhab/binding/maxcul/internal/messages/MaxCulMsgHandler.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.maxcul/src/main/java/org/openhab/binding/maxcul/internal/messages/MaxCulMsgHandler.java b/bundles/binding/org.openhab.binding.maxcul/src/main/java/org/openhab/binding/maxcul/internal/messages/MaxCulMsgHandler.java\nindex a1eb593..9d655ff 100644\n--- a/bundles/binding/org.openhab.binding.maxcul/src/main/java/org/openhab/binding/maxcul/internal/messages/MaxCulMsgHandler.java\n+++ b/bundles/binding/org.openhab.binding.maxcul/src/main/java/org/openhab/binding/maxcul/internal/messages/MaxCulMsgHandler.java\n@@ -230,7 +230,7 @@\n \t */\n \tpublic void sendPairPong(String dstAddr)\n \t{\n-\t\tPairPongMsg pp = new PairPongMsg(getMessageCount(), (byte)0, MaxCulMsgType.PAIR_PONG, (byte) 0, this.srcAddr, dstAddr);\n+\t\tPairPongMsg pp = new PairPongMsg(getMessageCount(), (byte)0, (byte) 0, this.srcAddr, dstAddr);\n \t\tsendMessage(pp);\n \t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 233,
        "bugNodeStartChar": 7221,
        "bugNodeLength": 101,
        "fixLineNum": 233,
        "fixNodeStartChar": 7221,
        "fixNodeLength": 76,
        "sourceBeforeFix": "new PairPongMsg(getMessageCount(),(byte)0,MaxCulMsgType.PAIR_PONG,(byte)0,this.srcAddr,dstAddr)",
        "sourceAfterFix": "new PairPongMsg(getMessageCount(),(byte)0,(byte)0,this.srcAddr,dstAddr)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "04ad420f594bedd8cd5c40160d67585f70686a9c",
        "fixCommitParentSHA1": "d3f9d13904b88d3ef56ab92d3d2d0c583514e4c9",
        "bugFilePath": "aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java",
        "fixPatch": "diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\nindex 560babf..f94fdd0 100644\n--- a/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/http/JsonErrorResponseHandlerV2.java\n@@ -96,7 +96,7 @@\n                 try {\n                     return unmarshaller.unmarshall(jsonContent.jsonNode);\n                 } catch (Exception e) {\n-                    LOG.error(\"Unable to unmarshall exception content\", e);\n+                    LOG.info(\"Unable to unmarshall exception content\", e);\n                     return null;\n                 }\n             }\n@@ -136,7 +136,7 @@\n             try {\n                 rawJsonContent = IOUtils.toString(httpResponse.getContent());\n             } catch (Exception e) {\n-                LOG.error(\"Unable to read HTTP response content\", e);\n+                LOG.info(\"Unable to read HTTP response content\", e);\n             }\n             return new JsonContent(rawJsonContent);\n \n@@ -151,7 +151,7 @@\n             try {\n                 return MAPPER.readTree(rawJsonContent);\n             } catch (Exception e) {\n-                LOG.error(\"Unable to parse HTTP response content\", e);\n+                LOG.info(\"Unable to parse HTTP response content\", e);\n                 return null;\n             }\n         }\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 99,
        "bugNodeStartChar": 4094,
        "bugNodeLength": 54,
        "fixLineNum": 99,
        "fixNodeStartChar": 4094,
        "fixNodeLength": 53,
        "sourceBeforeFix": "LOG.error(\"Unable to unmarshall exception content\",e)",
        "sourceAfterFix": "LOG.info(\"Unable to unmarshall exception content\",e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
        "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 64,
        "bugNodeStartChar": 2118,
        "bugNodeLength": 24,
        "fixLineNum": 64,
        "fixNodeStartChar": 2118,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getServletPath()",
        "sourceAfterFix": "request.getPathInfo()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "32942def7634511d8dd8fb5c5040e4168521bfb5",
        "fixCommitParentSHA1": "a73670ee7b5daa535d03932ea1a856e5540211db",
        "bugFilePath": "indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java b/indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java\nindex ca496d3..94adbc0 100644\n--- a/indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java\n+++ b/indexing-service/src/main/java/io/druid/indexing/firehose/IngestSegmentFirehoseFactory.java\n@@ -177,7 +177,7 @@\n       } else {\n         Set<String> metricsSet = new HashSet<>();\n         for (TimelineObjectHolder<String, DataSegment> timelineObjectHolder : timeLineSegments) {\n-          metricsSet.addAll(timelineObjectHolder.getObject().getChunk(0).getObject().getDimensions());\n+          metricsSet.addAll(timelineObjectHolder.getObject().getChunk(0).getObject().getMetrics());\n         }\n         metricsList = Lists.newArrayList(metricsSet);\n       }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 180,
        "bugNodeStartChar": 6525,
        "bugNodeLength": 72,
        "fixLineNum": 180,
        "fixNodeStartChar": 6525,
        "fixNodeLength": 69,
        "sourceBeforeFix": "timelineObjectHolder.getObject().getChunk(0).getObject().getDimensions()",
        "sourceAfterFix": "timelineObjectHolder.getObject().getChunk(0).getObject().getMetrics()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c98bab51de22a20990ff8805825e8638e0686464",
        "fixCommitParentSHA1": "e880946f53a9217f322c75dda8b9285e566c7406",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestUpdateConfiguration.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestUpdateConfiguration.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestUpdateConfiguration.java\nindex 731e02f..d54cb53 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestUpdateConfiguration.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestUpdateConfiguration.java\n@@ -49,7 +49,7 @@\n   @Test\n   public void testOnlineConfigChange() throws IOException {\n     LOG.debug(\"Starting the test\");\n-    Admin admin = TEST_UTIL.getHBaseAdmin();\n+    Admin admin = TEST_UTIL.getAdmin();\n     ServerName server = TEST_UTIL.getHBaseCluster().getRegionServer(0).getServerName();\n     admin.updateConfiguration(server);\n   }\n@@ -65,7 +65,7 @@\n     // update hbase-site.xml by overwriting it\n     Files.copy(cnf2Path, cnfPath, StandardCopyOption.REPLACE_EXISTING);\n \n-    Admin admin = TEST_UTIL.getHBaseAdmin();\n+    Admin admin = TEST_UTIL.getAdmin();\n     ServerName server = TEST_UTIL.getHBaseCluster().getMaster().getServerName();\n     admin.updateConfiguration(server);\n     Configuration conf = TEST_UTIL.getMiniHBaseCluster().getMaster().getConfiguration();\n",
        "projectName": "apache.hbase",
        "bugLineNum": 68,
        "bugNodeStartChar": 2710,
        "bugNodeLength": 25,
        "fixLineNum": 68,
        "fixNodeStartChar": 2710,
        "fixNodeLength": 20,
        "sourceBeforeFix": "TEST_UTIL.getHBaseAdmin()",
        "sourceAfterFix": "TEST_UTIL.getAdmin()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3863ad4a1e168bda4cf0d2dd77a06a1d192d5f16",
        "fixCommitParentSHA1": "8276731ca30f609690fc069691d6ec09831eedd2",
        "bugFilePath": "presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java",
        "fixPatch": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\nindex 351759b..d0624f7 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DereferenceExpression.java\n@@ -56,7 +56,7 @@\n     @Override\n     public List<Node> getChildren()\n     {\n-        return ImmutableList.of();\n+        return ImmutableList.of(base);\n     }\n \n     public Expression getBase()\n",
        "projectName": "facebook.presto",
        "bugLineNum": 59,
        "bugNodeStartChar": 1806,
        "bugNodeLength": 18,
        "fixLineNum": 59,
        "fixNodeStartChar": 1806,
        "fixNodeLength": 22,
        "sourceBeforeFix": "ImmutableList.of()",
        "sourceAfterFix": "ImmutableList.of(base)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9908f3ec100099ff16b02aebfd3ee0137080006d",
        "fixCommitParentSHA1": "c71e0529883d73094e30ce2f9e864f6abb60eb2d",
        "bugFilePath": "providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java",
        "fixPatch": "diff --git a/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java b/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\nindex 1291eb0..201a377 100644\n--- a/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n+++ b/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n@@ -345,7 +345,7 @@\n \n             if (proxyServer.getPrincipal() != null) {\n                 Credentials defaultcreds = new UsernamePasswordCredentials(proxyServer.getPrincipal(), proxyServer.getPassword());\n-                client.getState().setCredentials(new AuthScope(null, -1, AuthScope.ANY_REALM), defaultcreds);\n+                client.getState().setProxyCredentials(new AuthScope(null, -1, AuthScope.ANY_REALM), defaultcreds);\n             }\n \n             ProxyHost proxyHost = proxyServer == null ? null : new ProxyHost(proxyServer.getHost(), proxyServer.getPort());\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 348,
        "bugNodeStartChar": 16984,
        "bugNodeLength": 92,
        "fixLineNum": 348,
        "fixNodeStartChar": 16984,
        "fixNodeLength": 97,
        "sourceBeforeFix": "client.getState().setCredentials(new AuthScope(null,-1,AuthScope.ANY_REALM),defaultcreds)",
        "sourceAfterFix": "client.getState().setProxyCredentials(new AuthScope(null,-1,AuthScope.ANY_REALM),defaultcreds)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\nindex d655239..aa1bc16 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 2010,
        "bugNodeStartChar": 89972,
        "bugNodeLength": 22,
        "fixLineNum": 2010,
        "fixNodeStartChar": 89972,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(561)",
        "sourceAfterFix": "new StringBuilder(560)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "ec88b4ad780ddbf8b7cde9f4ffbf2ba38c70400f",
        "fixCommitParentSHA1": "411f4e76f1017ec7c97e74ecb7f84f36562fcc21",
        "bugFilePath": "src/main/java/redis/clients/jedis/Tuple.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/Tuple.java b/src/main/java/redis/clients/jedis/Tuple.java\nindex 07b5033..c16daf1 100644\n--- a/src/main/java/redis/clients/jedis/Tuple.java\n+++ b/src/main/java/redis/clients/jedis/Tuple.java\n@@ -35,7 +35,7 @@\n   }\n \n   public int compareTo(Tuple other) {\n-    if (Arrays.equals(this.element, other.element)) return 0;\n+    if (Arrays.equals(this.element, other.element) || this.score == other.getScore()) return 0;\n     else return this.score < other.getScore() ? -1 : 1;\n   }\n \n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 38,
        "bugNodeStartChar": 956,
        "bugNodeLength": 42,
        "fixLineNum": 38,
        "fixNodeStartChar": 956,
        "fixNodeLength": 76,
        "sourceBeforeFix": "Arrays.equals(this.element,other.element)",
        "sourceAfterFix": "Arrays.equals(this.element,other.element) || this.score == other.getScore()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ec57f0c31f8c41db175aa7dcaab5089c22b2a8a8",
        "fixCommitParentSHA1": "c44a6dee3d0bf523339972715f752e878e2b346a",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\nindex 3df1e33..34bf6b6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n@@ -71,7 +71,7 @@\n \t\tRSocketWebSocketNettyRouteProvider rSocketWebsocketRouteProvider(RSocketProperties properties,\n \t\t\t\tRSocketMessageHandler messageHandler) {\n \t\t\treturn new RSocketWebSocketNettyRouteProvider(properties.getServer().getMappingPath(),\n-\t\t\t\t\tmessageHandler.serverResponder());\n+\t\t\t\t\tmessageHandler.responder());\n \t\t}\n \n \t}\n@@ -104,7 +104,7 @@\n \t\t@ConditionalOnMissingBean\n \t\tRSocketServerBootstrap rSocketServerBootstrap(RSocketServerFactory rSocketServerFactory,\n \t\t\t\tRSocketMessageHandler rSocketMessageHandler) {\n-\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverResponder());\n+\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.responder());\n \t\t}\n \n \t\t@Bean\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 107,
        "bugNodeStartChar": 4974,
        "bugNodeLength": 39,
        "fixLineNum": 107,
        "fixNodeStartChar": 4974,
        "fixNodeLength": 33,
        "sourceBeforeFix": "rSocketMessageHandler.serverResponder()",
        "sourceAfterFix": "rSocketMessageHandler.responder()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e5f5decf8c607db5ce59b007200ce17c71f414f9",
        "fixCommitParentSHA1": "6173e354c4a5c5603be67034b274fed4bf05316f",
        "bugFilePath": "undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java",
        "fixPatch": "diff --git a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\nindex 915c3fc..e0e5a5a 100644\n--- a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n+++ b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n@@ -499,7 +499,7 @@\n                     if(file.startsWith(\"/\")) {\n                         d.addWelcomePages(file.substring(1));\n                     } else {\n-                        d.addWelcomePages(welcomeFiles);\n+                        d.addWelcomePages(file);\n                     }\n                 }\n             } else {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 502,
        "bugNodeStartChar": 26359,
        "bugNodeLength": 31,
        "fixLineNum": 502,
        "fixNodeStartChar": 26359,
        "fixNodeLength": 23,
        "sourceBeforeFix": "d.addWelcomePages(welcomeFiles)",
        "sourceAfterFix": "d.addWelcomePages(file)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "9cbe9bcbaa33825a866bdc8a9bf92f270723d423",
        "fixCommitParentSHA1": "187e081d5a8afe1ddfe5d7b5e7de7a94512aa53e",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\nindex 8eb00f4..787422b 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\n@@ -248,7 +248,7 @@\n \n       } catch (IOException e1) {\n         LOG.error(\"Cannot create writer for app \" + this.applicationId\n-            + \". Skip log upload this time. \");\n+            + \". Skip log upload this time. \", e1);\n         return;\n       }\n \n@@ -549,7 +549,7 @@\n         writer.append(logKey, logValue);\n       } catch (Exception e) {\n         LOG.error(\"Couldn't upload logs for \" + containerId\n-            + \". Skipping this container.\");\n+            + \". Skipping this container.\", e);\n         return new HashSet<Path>();\n       }\n       this.uploadedFileMeta.addAll(logValue\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 551,
        "bugNodeStartChar": 21178,
        "bugNodeLength": 95,
        "fixLineNum": 551,
        "fixNodeStartChar": 21178,
        "fixNodeLength": 98,
        "sourceBeforeFix": "LOG.error(\"Couldn't upload logs for \" + containerId + \". Skipping this container.\")",
        "sourceAfterFix": "LOG.error(\"Couldn't upload logs for \" + containerId + \". Skipping this container.\",e)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "71231417d7ecd61584d9c05aa7716e9593255d3a",
        "fixCommitParentSHA1": "bd42b0ac0e8200ca0a7846d7e17217f77e3c6d56",
        "bugFilePath": "src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java b/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\nindex 7d4f1c6..47608e6 100644\n--- a/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\n+++ b/src/main/java/org/apache/ibatis/builder/xml/XMLStatementBuilder.java\n@@ -169,7 +169,7 @@\n       // skip this statement if there is a previous one with a not null databaseId\r\n       id = builderAssistant.applyCurrentNamespace(id, false);\r\n       if (this.configuration.hasStatement(id, false)) {\r\n-        MappedStatement previous = this.configuration.getMappedStatement(id);\r\n+        MappedStatement previous = this.configuration.getMappedStatement(id, false); // issue #2\r\n         if (previous.getDatabaseId() != null) {\r\n           return false;\r\n         }\r\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 172,
        "bugNodeStartChar": 8400,
        "bugNodeLength": 41,
        "fixLineNum": 172,
        "fixNodeStartChar": 8229,
        "fixNodeLength": 48,
        "sourceBeforeFix": "this.configuration.getMappedStatement(id)",
        "sourceAfterFix": "this.configuration.getMappedStatement(id,false)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "42cf20c9f1842cc9257fe271b7b8bc4367795b57",
        "fixCommitParentSHA1": "3b29e778668dbacd322fa05c7c8e0407c0c1524a",
        "bugFilePath": "server/src/main/java/io/druid/guice/http/DruidHttpClientConfig.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/guice/http/DruidHttpClientConfig.java b/server/src/main/java/io/druid/guice/http/DruidHttpClientConfig.java\nindex cf85087..b8ad2e2 100644\n--- a/server/src/main/java/io/druid/guice/http/DruidHttpClientConfig.java\n+++ b/server/src/main/java/io/druid/guice/http/DruidHttpClientConfig.java\n@@ -32,7 +32,7 @@\n {\n   @JsonProperty\n   @Min(0)\n-  private int numConnections = 5;\n+  private int numConnections = 20;\n \n   @JsonProperty\n   private Period readTimeout = new Period(\"PT15M\");\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 35,
        "bugNodeStartChar": 1094,
        "bugNodeLength": 18,
        "fixLineNum": 35,
        "fixNodeStartChar": 1094,
        "fixNodeLength": 19,
        "sourceBeforeFix": "numConnections=5",
        "sourceAfterFix": "numConnections=20"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "e68b9038b64e1b3ad8068541216baf17da23ddde",
        "fixCommitParentSHA1": "aa2fabcfbdb12cfcabdf651f647ec5d18af6696a",
        "bugFilePath": "pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java",
        "fixPatch": "diff --git a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\nindex 4026f62..02d50e2 100644\n--- a/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\n+++ b/pact/pact-compiler/src/main/java/eu/stratosphere/pact/compiler/plan/MatchNode.java\n@@ -804,7 +804,7 @@\n \t\t\tgp1 = new GlobalProperties();\n \t\t}\n \n-\t\tif(preds2.size() == 1) {\n+\t\tif(preds2 != null && preds2.size() == 1) {\n \t\t\tgp2 = PactConnection.getGlobalPropertiesAfterConnection(preds2.get(0), this, ss2);\n \t\t} else {\n \t\t\t// TODO right now we drop all properties in the union case; need to figure out what properties can be kept\n",
        "projectName": "apache.flink",
        "bugLineNum": 807,
        "bugNodeStartChar": 33881,
        "bugNodeLength": 18,
        "fixLineNum": 807,
        "fixNodeStartChar": 33881,
        "fixNodeLength": 36,
        "sourceBeforeFix": "preds2.size() == 1",
        "sourceAfterFix": "preds2 != null && preds2.size() == 1"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3e3515f2af47dc0c1f9c080a257edb56f5eb72a7",
        "fixCommitParentSHA1": "a49af9eeea26f6c409d845278eb9b38edf344914",
        "bugFilePath": "components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java",
        "fixPatch": "diff --git a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\nindex 4ed7ceb..85bb5f5 100644\n--- a/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n+++ b/components/camel-blueprint/src/main/java/org/apache/camel/blueprint/handler/CamelNamespaceHandler.java\n@@ -113,7 +113,7 @@\n         if (node.getNodeType() == Node.ELEMENT_NODE) {\n             Document doc = node.getOwnerDocument();\n             if (((Element) node).getNamespaceURI().equals(BLUEPRINT_NS)) {\n-                doc.renameNode(node, SPRING_NS, node.getNodeName());\n+                doc.renameNode(node, SPRING_NS, node.getLocalName());\n             }\n         }\n         NodeList list = node.getChildNodes();\n@@ -133,19 +133,19 @@\n \n     public Metadata parse(Element element, ParserContext context) {\n         renameNamespaceRecursive(element);\n-        if (element.getNodeName().equals(CAMEL_CONTEXT)) {\n+        if (element.getLocalName().equals(CAMEL_CONTEXT)) {\n             return parseCamelContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(ROUTE_CONTEXT)) {\n+        if (element.getLocalName().equals(ROUTE_CONTEXT)) {\n             return parseRouteContextNode(element, context);\n         }\n-        if (element.getNodeName().equals(KEY_STORE_PARAMETERS)) {\n+        if (element.getLocalName().equals(KEY_STORE_PARAMETERS)) {\n             return parseKeyStoreParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SECURE_RANDOM_PARAMETERS)) {\n+        if (element.getLocalName().equals(SECURE_RANDOM_PARAMETERS)) {\n             return parseSecureRandomParametersNode(element, context);\n         }\n-        if (element.getNodeName().equals(SSL_CONTEXT_PARAMETERS)) {\n+        if (element.getLocalName().equals(SSL_CONTEXT_PARAMETERS)) {\n             return parseSSLContextParametersNode(element, context);\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 139,
        "bugNodeStartChar": 6348,
        "bugNodeLength": 21,
        "fixLineNum": 139,
        "fixNodeStartChar": 6348,
        "fixNodeLength": 22,
        "sourceBeforeFix": "element.getNodeName()",
        "sourceAfterFix": "element.getLocalName()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "e293e1bb9dca26cdcb503294fcada906f809c403",
        "fixCommitParentSHA1": "f70aa38a5f019bf1c7a2bcad97e4a041ad5f2544",
        "bugFilePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchDetectingTxVerifier.java",
        "fixPatch": "diff --git a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchDetectingTxVerifier.java b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchDetectingTxVerifier.java\nindex 2960941..98951e7 100644\n--- a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchDetectingTxVerifier.java\n+++ b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/BranchDetectingTxVerifier.java\n@@ -30,6 +30,10 @@\n import org.neo4j.kernel.impl.util.StringLogger;\n import org.neo4j.kernel.logging.Logging;\n \n+/**\n+ * Used on the master to verify that slaves are using the same logical database as the master is running. This is done\n+ * by verifying transaction checksums.\n+ */\n public class BranchDetectingTxVerifier implements TxChecksumVerifier\n {\n     private final StringLogger logger;\n@@ -55,14 +59,16 @@\n             \n             if ( !match )\n             {\n-                throw new BranchedDataException( stringify( txId, masterId, checksum ) +\n-                        \" doesn't match \" + readChecksum );\n+                throw new BranchedDataException(\n+                        \"The cluster contains two logically different versions of the database. \" +\n+                        \"This will be automatically resolved. Details: \" + stringify( txId, masterId, checksum ) +\n+                        \" does not match \" + readChecksum );\n             }\n         }\n         catch ( IOException e )\n         {\n             logger.logMessage( \"Couldn't verify checksum for \" + stringify( txId, masterId, checksum ), e );\n-            throw new BranchedDataException( e );\n+            throw new BranchedDataException( \"Unable to perform a mandatory sanity check due to an IO error.\", e );\n         }\n     }\n     \n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 65,
        "bugNodeStartChar": 2670,
        "bugNodeLength": 30,
        "fixLineNum": 65,
        "fixNodeStartChar": 2670,
        "fixNodeLength": 96,
        "sourceBeforeFix": "new BranchedDataException(e)",
        "sourceAfterFix": "new BranchedDataException(\"Unable to perform a mandatory sanity check due to an IO error.\",e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fc13cf7d7843029d807878869e3c64cace5640dd",
        "fixCommitParentSHA1": "efb95a17945cc91aa639396f6f6c528b52c71fcb",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java\nindex 0597c5e..14e35df 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java\n@@ -183,7 +183,7 @@\n   }\n \n   @Override\n-  public Cell deepClone() {\n+  public ExtendedCell deepClone() {\n     // When being added to the memstore, deepClone() is called and KeyValue has less heap overhead.\n     return new KeyValue(this);\n   }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 185,
        "bugNodeStartChar": 7151,
        "bugNodeLength": 172,
        "fixLineNum": 185,
        "fixNodeStartChar": 7151,
        "fixNodeLength": 180,
        "sourceBeforeFix": "@Override public Cell deepClone(){   return new KeyValue(this); } ",
        "sourceAfterFix": "@Override public ExtendedCell deepClone(){   return new KeyValue(this); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9fcb40a184ebe0dd1eea732b9a493e3e01ea53dc",
        "fixCommitParentSHA1": "bad81c81c2be3e67099c512e4e0aada291323566",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java\nindex f608ed8..27574c0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java\n@@ -194,7 +194,7 @@\n      * TreeTableCellEditor implementation. Component returned is the\n      * JTree.\n      */\n-    private class TreeTableCellEditor extends AbstractCellEditor implements\n+    private class TreeTableCellEditor extends BaseCellEditor implements\n             TableCellEditor {\n         @Override\n         public Component getTableCellEditorComponent(JTable table,\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 193,
        "bugNodeStartChar": 6800,
        "bugNodeLength": 2478,
        "fixLineNum": 193,
        "fixNodeStartChar": 6800,
        "fixNodeLength": 2474,
        "sourceBeforeFix": "/**   * TreeTableCellEditor implementation. Component returned is the JTree.  */ private class TreeTableCellEditor extends AbstractCellEditor implements TableCellEditor {   @Override public Component getTableCellEditorComponent(  JTable table,  Object value,  boolean isSelected,  int row,  int column){     return tree;   }   /**   * Overridden to return false, and if the event is a mouse event it is forwarded to the tree. <p>The behavior for this is debatable, and should really be offered as a property. By returning false, all keyboard actions are implemented in terms of the table. By returning true, the tree would get a chance to do something with the keyboard events. For the most part this is ok. But for certain keys, such as left/right, the tree will expand/collapse where as the table focus should really move to a different column. Page up/down should also be implemented in terms of the table. By returning false this also has the added benefit that clicking outside of the bounds of the tree node, but still in the tree column will select the row, whereas if this returned true that wouldn't be the case. <p>By returning false we are also enforcing the policy that the tree will never be editable (at least by a key sequence).  * @see TableCellEditor  */   @Override public boolean isCellEditable(  EventObject e){     if (e instanceof MouseEvent) {       for (int counter=getColumnCount() - 1; counter >= 0; counter--) {         if (getColumnClass(counter) == TreeTableModel.class) {           final MouseEvent me=(MouseEvent)e;           final MouseEvent newME=new MouseEvent(tree,me.getID(),me.getWhen(),me.getModifiers(),me.getX() - getCellRect(0,counter,true).x,me.getY(),me.getClickCount(),me.isPopupTrigger());           tree.dispatchEvent(newME);           break;         }       }     }     return false;   } } ",
        "sourceAfterFix": "/**   * TreeTableCellEditor implementation. Component returned is the JTree.  */ private class TreeTableCellEditor extends BaseCellEditor implements TableCellEditor {   @Override public Component getTableCellEditorComponent(  JTable table,  Object value,  boolean isSelected,  int row,  int column){     return tree;   }   /**   * Overridden to return false, and if the event is a mouse event it is forwarded to the tree. <p>The behavior for this is debatable, and should really be offered as a property. By returning false, all keyboard actions are implemented in terms of the table. By returning true, the tree would get a chance to do something with the keyboard events. For the most part this is ok. But for certain keys, such as left/right, the tree will expand/collapse where as the table focus should really move to a different column. Page up/down should also be implemented in terms of the table. By returning false this also has the added benefit that clicking outside of the bounds of the tree node, but still in the tree column will select the row, whereas if this returned true that wouldn't be the case. <p>By returning false we are also enforcing the policy that the tree will never be editable (at least by a key sequence).  * @see TableCellEditor  */   @Override public boolean isCellEditable(  EventObject e){     if (e instanceof MouseEvent) {       for (int counter=getColumnCount() - 1; counter >= 0; counter--) {         if (getColumnClass(counter) == TreeTableModel.class) {           final MouseEvent me=(MouseEvent)e;           final MouseEvent newME=new MouseEvent(tree,me.getID(),me.getWhen(),me.getModifiers(),me.getX() - getCellRect(0,counter,true).x,me.getY(),me.getClickCount(),me.isPopupTrigger());           tree.dispatchEvent(newME);           break;         }       }     }     return false;   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe",
        "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 570,
        "bugNodeStartChar": 26822,
        "bugNodeLength": 32,
        "fixLineNum": 570,
        "fixNodeStartChar": 26822,
        "fixNodeLength": 45,
        "sourceBeforeFix": "analysis.getType(windowFunction)",
        "sourceAfterFix": "analysis.getTypeWithCoercions(windowFunction)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 261,
        "bugNodeStartChar": 9667,
        "bugNodeLength": 521,
        "fixLineNum": 261,
        "fixNodeStartChar": 9407,
        "fixNodeLength": 509,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "07f17cfd4f51a397ebd058bd047ec330f8d4b572",
        "fixCommitParentSHA1": "66f7d5a800517dcb788c736c2ef482e669c7de15",
        "bugFilePath": "src/main/java/org/jboss/netty/handler/ssl/SslHandler.java",
        "fixPatch": "diff --git a/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\nindex b210672..3b864b2 100644\n--- a/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\n+++ b/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java\n@@ -503,7 +503,7 @@\n             handshaking = false;\n             handshaken = true;\n \n-            if (handshakeFuture != null) {\n+            if (handshakeFuture == null) {\n                 handshakeFuture = newHandshakeFuture(channel);\n             }\n         }\n@@ -515,7 +515,7 @@\n             handshaking = false;\n             handshaken = false;\n \n-            if (handshakeFuture != null) {\n+            if (handshakeFuture == null) {\n                 handshakeFuture = newHandshakeFuture(channel);\n             }\n         }\n",
        "projectName": "netty.netty",
        "bugLineNum": 506,
        "bugNodeStartChar": 18128,
        "bugNodeLength": 23,
        "fixLineNum": 506,
        "fixNodeStartChar": 18128,
        "fixNodeLength": 23,
        "sourceBeforeFix": "handshakeFuture != null",
        "sourceAfterFix": "handshakeFuture == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9716d2ae673a576cb345c3bfb24cf71654d8f112",
        "fixCommitParentSHA1": "3181f10fb9e6b330d1effee25be3ef87872f8fa0",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\nindex 89010de..010aef6 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n@@ -98,7 +98,7 @@\n \t */\n \tpublic GarageDoorData getGarageData() throws InvalidLoginException,\n \t\t\tIOException {\n-\t\tlogger.debug(\"Retreiveing door data\");\n+\t\tlogger.trace(\"Retreiveing door data\");\n \t\tString url = String.format(\n \t\t\t\t\"%s/api/v4/userdevicedetails/get?appId=%s&SecurityToken=%s\",\n \t\t\t\tWEBSITE, enc(appId), enc(getSecurityToken()));\n@@ -112,7 +112,7 @@\n \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n-\t\tlogger.debug(\"attempting to login\");\n+\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));\n@@ -183,13 +183,13 @@\n \t\t\tString payload, String payloadType, boolean retry)\n \t\t\tthrows IOException, InvalidLoginException {\n \n-\t\tlogger.debug(\"Requsting URL {}\", url);\n+\t\tlogger.trace(\"Requsting URL {}\", url);\n \n \t\tString dataString = executeUrl(method, url, header,\n \t\t\t\tpayload == null ? null : IOUtils.toInputStream(payload),\n \t\t\t\tpayloadType, timeout);\n \n-\t\tlogger.debug(\"Received MyQ  JSON: {}\", dataString);\n+\t\tlogger.trace(\"Received MyQ  JSON: {}\", dataString);\n \n \t\tif (dataString == null) {\n \t\t\tthrow new IOException(\"Null response from MyQ server\");\n@@ -199,7 +199,7 @@\n \t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tJsonNode rootNode = mapper.readTree(dataString);\n \t\t\tint returnCode = rootNode.get(\"ReturnCode\").asInt();\n-\t\t\tlogger.debug(\"myq ReturnCode: {}\", returnCode);\n+\t\t\tlogger.trace(\"myq ReturnCode: {}\", returnCode);\n \n \t\t\tMyQResponseCode rc = MyQResponseCode.fromCode(returnCode);\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 115,
        "bugNodeStartChar": 3206,
        "bugNodeLength": 35,
        "fixLineNum": 115,
        "fixNodeStartChar": 3206,
        "fixNodeLength": 35,
        "sourceBeforeFix": "logger.debug(\"attempting to login\")",
        "sourceAfterFix": "logger.trace(\"attempting to login\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "3bf41faa04284b1f50adcd7da50dbb74664a8396",
        "fixCommitParentSHA1": "ce736af2a5025a4bb07b39362b064bd64aecdeef",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/vector/VectorColumnSetInfo.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/VectorColumnSetInfo.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/VectorColumnSetInfo.java\nindex d9c16dc..8c4b6ea 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/VectorColumnSetInfo.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/VectorColumnSetInfo.java\n@@ -126,7 +126,8 @@\n       doubleIndices[doubleIndicesIndex] = addIndex;\n       indexLookup[addIndex].setDouble(doubleIndicesIndex);\n       ++doubleIndicesIndex;\n-    } else if (VectorizationContext.isStringFamily(outputType)) {\n+    } else if (VectorizationContext.isStringFamily(outputType) ||\n+        outputType.equalsIgnoreCase(\"binary\")) {\n       stringIndices[stringIndicesIndex]= addIndex;\n       indexLookup[addIndex].setString(stringIndicesIndex);\n       ++stringIndicesIndex;\n",
        "projectName": "apache.hive",
        "bugLineNum": 129,
        "bugNodeStartChar": 3780,
        "bugNodeLength": 47,
        "fixLineNum": 129,
        "fixNodeStartChar": 3780,
        "fixNodeLength": 96,
        "sourceBeforeFix": "VectorizationContext.isStringFamily(outputType)",
        "sourceAfterFix": "VectorizationContext.isStringFamily(outputType) || outputType.equalsIgnoreCase(\"binary\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a6dc024ed1176e0a4c523b1a64e8e907e1394d7b",
        "fixCommitParentSHA1": "c15acce17f82e2b055c66c179ea82367a30dee1c",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\nindex 80c8e6b..5a27139 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveNode.java\n@@ -407,13 +407,13 @@\n \tpublic double getApplicationVersion() {\n \t\tZWaveVersionCommandClass versionCmdClass = (ZWaveVersionCommandClass) this.getCommandClass(CommandClass.VERSION);\n \t\tif(versionCmdClass == null) {\n-\t\t\tlogger.debug(\"NODE {}: App version requested but Version class not supported\", this.getNodeId());\n+\t\t\tlogger.trace(\"NODE {}: App version requested but Version class not supported\", this.getNodeId());\n \t\t\treturn 0.0;\n \t\t}\n \n \t\tDouble appVersion = versionCmdClass.getApplicationVersion();\n \t\tif(appVersion == null) {\n-\t\t\tlogger.debug(\"NODE {}: App version requested but version is unknown\", this.getNodeId());\n+\t\t\tlogger.trace(\"NODE {}: App version requested but version is unknown\", this.getNodeId());\n \t\t\treturn 0.0;\t\t\t\n \t\t}\n \t\t\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 410,
        "bugNodeStartChar": 10803,
        "bugNodeLength": 96,
        "fixLineNum": 410,
        "fixNodeStartChar": 10803,
        "fixNodeLength": 96,
        "sourceBeforeFix": "logger.debug(\"NODE {}: App version requested but Version class not supported\",this.getNodeId())",
        "sourceAfterFix": "logger.trace(\"NODE {}: App version requested but Version class not supported\",this.getNodeId())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java b/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java\nindex 728ba20..c053c89 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/AbstractModuleTestSupport.java\n@@ -249,7 +249,7 @@\n         final Map<String, MapDifference.ValueDifference<List<String>>> differingViolations =\n                 violationDifferences.entriesDiffering();\n \n-        final StringBuilder message = new StringBuilder();\n+        final StringBuilder message = new StringBuilder(256);\n         if (!missingViolations.isEmpty()) {\n             message.append(\"missing violations: \").append(missingViolations);\n         }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 252,
        "bugNodeStartChar": 10674,
        "bugNodeLength": 19,
        "fixLineNum": 252,
        "fixNodeStartChar": 10674,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 664,
        "bugNodeStartChar": 22638,
        "bugNodeLength": 28,
        "fixLineNum": 664,
        "fixNodeStartChar": 21975,
        "fixNodeLength": 30,
        "sourceBeforeFix": "GL20.glUniform1(location,v)",
        "sourceAfterFix": "GL20.glUniform1iv(location,v)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "4047754cadfeb091f73672117f54b8d0279020ac",
        "fixCommitParentSHA1": "8948f15f51b0a7d0c34cad23dcf57d330fa2ff16",
        "bugFilePath": "aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java",
        "fixPatch": "diff --git a/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java b/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\nindex 542c669..ae09584 100644\n--- a/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\n+++ b/aws-java-sdk-cloudwatchmetrics/src/main/java/com/amazonaws/metrics/internal/cloudwatch/MetricUploaderThread.java\n@@ -50,7 +50,7 @@\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getCredentialsProvider());\n \t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() == null) {\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getClientConfiguration());\n-\t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() == null) {\n+\t\t} else if (config.getClientConfiguration() != null && config.getCredentialsProvider() != null) {\n \t\t\tamazonCloudWatchClient = new AmazonCloudWatchClient(config.getCredentialsProvider(),\n \t\t\t\t\tconfig.getClientConfiguration());\n \t\t}\n",
        "projectName": "aws.aws-sdk-java",
        "bugLineNum": 53,
        "bugNodeStartChar": 2476,
        "bugNodeLength": 39,
        "fixLineNum": 53,
        "fixNodeStartChar": 2476,
        "fixNodeLength": 39,
        "sourceBeforeFix": "config.getCredentialsProvider() == null",
        "sourceAfterFix": "config.getCredentialsProvider() != null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c9985da6dd36ba713ee1a5a4fa055bbc56b1a916",
        "fixCommitParentSHA1": "be197dd3f4830c08224934348facbabd3c9a29ac",
        "bugFilePath": "app/controllers/StreamSearchController.java",
        "fixPatch": "diff --git a/app/controllers/StreamSearchController.java b/app/controllers/StreamSearchController.java\nindex ac7eb19..6dd7649 100644\n--- a/app/controllers/StreamSearchController.java\n+++ b/app/controllers/StreamSearchController.java\n@@ -71,7 +71,7 @@\n         if (searchResult.getTotalResultCount() > 0) {\n             return ok(views.html.search.results.render(currentUser(), search, searchResult, histogramResult, q, page, stream));\n         } else {\n-            return ok(views.html.search.noresults.render(currentUser(), q, searchResult));\n+            return ok(views.html.search.noresults.render(currentUser(), q, searchResult, stream));\n         }\n     }\n }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 74,
        "bugNodeStartChar": 2942,
        "bugNodeLength": 66,
        "fixLineNum": 74,
        "fixNodeStartChar": 2942,
        "fixNodeLength": 74,
        "sourceBeforeFix": "views.html.search.noresults.render(currentUser(),q,searchResult)",
        "sourceAfterFix": "views.html.search.noresults.render(currentUser(),q,searchResult,stream)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e7919feab1a5f371806a2f6d267e84e9542e3f26",
        "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
        "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 42,
        "bugNodeStartChar": 1525,
        "bugNodeLength": 51,
        "fixLineNum": 42,
        "fixNodeStartChar": 1525,
        "fixNodeLength": 52,
        "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
        "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b8f2c536ba0255ac3456b4a8a0180a0cfc60fde2",
        "fixCommitParentSHA1": "d19563f6f2d3cfefecc725d9783ad625f8db9725",
        "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java",
        "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\nold mode 100755\nnew mode 100644\nindex 1919ccd..3535609\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JacksonMessageBodyProvider.java\n@@ -31,7 +31,7 @@\n  * {@link JsonIgnoreType}.)\n  */\n public class JacksonMessageBodyProvider extends JacksonJaxbJsonProvider {\n-    private static final Logger LOGGER = LoggerFactory.getLogger(JsonProcessingExceptionMapper.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(JacksonMessageBodyProvider.class);\n     /**\n      * The default group array used in case any of the validate methods is called without a group.\n      */\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 34,
        "bugNodeStartChar": 1386,
        "bugNodeLength": 35,
        "fixLineNum": 34,
        "fixNodeStartChar": 1386,
        "fixNodeLength": 32,
        "sourceBeforeFix": "JsonProcessingExceptionMapper.class",
        "sourceAfterFix": "JacksonMessageBodyProvider.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bafb1f877934f826d5f74f9f33e824dd1aa30432",
        "fixCommitParentSHA1": "fdfbb0ca84342d5b4f328e1f9a3bfb2058552145",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\nindex bd9ea17..e1627c3 100644\n--- a/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n+++ b/camel-core/src/main/java/org/apache/camel/converter/jaxp/StaxConverter.java\n@@ -50,7 +50,7 @@\n         return getOutputFactory().createXMLEventWriter(out, IOConverter.getCharsetName(exchange));\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventWriter createXMLEventWriter(OutputStream out) throws XMLStreamException {\n         return getOutputFactory().createXMLEventWriter(out);\n     }\n@@ -65,7 +65,7 @@\n         return getOutputFactory().createXMLEventWriter(result);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLStreamWriter createXMLStreamWriter(OutputStream outputStream) throws XMLStreamException {\n         return getOutputFactory().createXMLStreamWriter(outputStream);\n     }\n@@ -85,7 +85,7 @@\n         return getOutputFactory().createXMLStreamWriter(result);\n     }\n \n-    @Converter\n+    @Deprecated\n     public XMLStreamReader createXMLStreamReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLStreamReader(in);\n     }\n@@ -105,7 +105,7 @@\n         return getInputFactory().createXMLStreamReader(in);\n     }\n     \n-    @Converter\n+    @Deprecated\n     public XMLEventReader createXMLEventReader(InputStream in) throws XMLStreamException {\n         return getInputFactory().createXMLEventReader(in);\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 68,
        "bugNodeStartChar": 2392,
        "bugNodeLength": 10,
        "fixLineNum": 68,
        "fixNodeStartChar": 2392,
        "fixNodeLength": 11,
        "sourceBeforeFix": "@Converter",
        "sourceAfterFix": "@Deprecated"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0682e8dd41045e3375b61d3d76f6e6991e98c869",
        "fixCommitParentSHA1": "24e01f17149ea3690d1fe4d2fabe4c78a5d88225",
        "bugFilePath": "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java",
        "fixPatch": "diff --git a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\nindex 661973f..8262c14 100644\n--- a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n+++ b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java\n@@ -142,7 +142,7 @@\n             }\n         }\n         if (simple.getToSentDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getToSentDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset));\n@@ -153,7 +153,7 @@\n             }\n         }\n         if (simple.getFromReceivedDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getFromReceivedDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset));\n@@ -164,7 +164,7 @@\n             }\n         }\n         if (simple.getToReceivedDate() != null) {\n-            String s = simple.getFromSentDate();\n+            String s = simple.getToReceivedDate();\n             if (s.startsWith(\"now\")) {\n                 long offset = extractOffset(s, typeConverter);\n                 builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset));\n",
        "projectName": "apache.camel",
        "bugLineNum": 156,
        "bugNodeStartChar": 5944,
        "bugNodeLength": 24,
        "fixLineNum": 156,
        "fixNodeStartChar": 5944,
        "fixNodeLength": 28,
        "sourceBeforeFix": "simple.getFromSentDate()",
        "sourceAfterFix": "simple.getFromReceivedDate()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1bb9207c9bf3079bf64050aadd21ab4735511db3",
        "fixCommitParentSHA1": "ebf4efe3eabe4da73a3119e8e24b11d97ac5180f",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java\nindex 71597b6..d62aca3 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java\n@@ -111,7 +111,7 @@\n      * @return true if act as Restful index method, false otherwise\n      */\n     public boolean isRestfulIndex() {\n-        return \"GET\".equals(httpMethod) && \"\".equals(pathWithoutBaseName());\n+        return \"GET\".equalsIgnoreCase(httpMethod) && \"\".equals(pathWithoutBaseName());\n     }\n \n     /**\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 114,
        "bugNodeStartChar": 4117,
        "bugNodeLength": 24,
        "fixLineNum": 114,
        "fixNodeStartChar": 4117,
        "fixNodeLength": 34,
        "sourceBeforeFix": "\"GET\".equals(httpMethod)",
        "sourceAfterFix": "\"GET\".equalsIgnoreCase(httpMethod)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "492fd118d4902c730fc8619851a7135b623631e2",
        "fixCommitParentSHA1": "f27d133d348fb653bc468851b86938078034c28b",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\nindex 0d34eaa..be82d96 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregatorBatchOptionsTest.java\n@@ -23,8 +23,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(100)\r\n@@ -41,7 +41,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n@@ -72,8 +72,8 @@\n                     // as we have not configured more on the aggregator it will default to aggregate the\r\n                     // latest exchange only\r\n                     .aggregator().header(\"id\")\r\n-                    // wait for 2 seconds to aggregate\r\n-                    .batchTimeout(2000L)\r\n+                    // wait for 0.5 seconds to aggregate\r\n+                    .batchTimeout(500L)\r\n                     // batch size in is the limit of number of exchanges recieved, so when we have received 100\r\n                     // exchanges then whatever we have in the collection will be sent\r\n                     .batchSize(5)\r\n@@ -87,7 +87,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(2);\r\n+        result.expectedMinimumMessageCount(2);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\");\r\n \r\n         // then we sent all the message at once\r\n@@ -130,7 +130,7 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\r\n \r\n         // we expect 3 messages grouped by the latest message only\r\n-        result.expectedMessageCount(3);\r\n+        result.expectedMinimumMessageCount(3);\r\n         result.expectedBodiesReceived(\"Message 1c\", \"Message 2b\", \"Message 3a\");\r\n \r\n         // then we sent all the message at once\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 133,
        "bugNodeStartChar": 6441,
        "bugNodeLength": 30,
        "fixLineNum": 133,
        "fixNodeStartChar": 6309,
        "fixNodeLength": 37,
        "sourceBeforeFix": "result.expectedMessageCount(3)",
        "sourceAfterFix": "result.expectedMinimumMessageCount(3)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e3c68859dd31ee2d651cbba5f31474652c9553dd",
        "fixCommitParentSHA1": "66b38acd3b82967c44450d9eec58266e1d2fb124",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/util/clock/ManualClock.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/util/clock/ManualClock.java b/flink-runtime/src/test/java/org/apache/flink/runtime/util/clock/ManualClock.java\nindex 69ae7be..a3a15e5 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/util/clock/ManualClock.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/util/clock/ManualClock.java\n@@ -30,12 +30,12 @@\n \n \t@Override\n \tpublic long absoluteTimeMillis() {\n-\t\treturn currentTime.get() / 1_000L;\n+\t\treturn currentTime.get() / 1_000_000L;\n \t}\n \n \t@Override\n \tpublic long relativeTimeMillis() {\n-\t\treturn currentTime.get() / 1_000L;\n+\t\treturn currentTime.get() / 1_000_000L;\n \t}\n \n \t@Override\n",
        "projectName": "apache.flink",
        "bugLineNum": 33,
        "bugNodeStartChar": 1171,
        "bugNodeLength": 26,
        "fixLineNum": 33,
        "fixNodeStartChar": 1171,
        "fixNodeLength": 30,
        "sourceBeforeFix": "currentTime.get() / 1_000L",
        "sourceAfterFix": "currentTime.get() / 1_000_000L"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntIntMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\nindex 6bd8d89..e5365a6 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntIntMap.java\n@@ -69,7 +69,7 @@\n \t * before growing the backing table. */\n \tpublic IntIntMap (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 72,
        "bugNodeStartChar": 2904,
        "bugNodeLength": 18,
        "fixLineNum": 72,
        "fixNodeStartChar": 2904,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9716d2ae673a576cb345c3bfb24cf71654d8f112",
        "fixCommitParentSHA1": "3181f10fb9e6b330d1effee25be3ef87872f8fa0",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\nindex 89010de..010aef6 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n@@ -98,7 +98,7 @@\n \t */\n \tpublic GarageDoorData getGarageData() throws InvalidLoginException,\n \t\t\tIOException {\n-\t\tlogger.debug(\"Retreiveing door data\");\n+\t\tlogger.trace(\"Retreiveing door data\");\n \t\tString url = String.format(\n \t\t\t\t\"%s/api/v4/userdevicedetails/get?appId=%s&SecurityToken=%s\",\n \t\t\t\tWEBSITE, enc(appId), enc(getSecurityToken()));\n@@ -112,7 +112,7 @@\n \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n-\t\tlogger.debug(\"attempting to login\");\n+\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));\n@@ -183,13 +183,13 @@\n \t\t\tString payload, String payloadType, boolean retry)\n \t\t\tthrows IOException, InvalidLoginException {\n \n-\t\tlogger.debug(\"Requsting URL {}\", url);\n+\t\tlogger.trace(\"Requsting URL {}\", url);\n \n \t\tString dataString = executeUrl(method, url, header,\n \t\t\t\tpayload == null ? null : IOUtils.toInputStream(payload),\n \t\t\t\tpayloadType, timeout);\n \n-\t\tlogger.debug(\"Received MyQ  JSON: {}\", dataString);\n+\t\tlogger.trace(\"Received MyQ  JSON: {}\", dataString);\n \n \t\tif (dataString == null) {\n \t\t\tthrow new IOException(\"Null response from MyQ server\");\n@@ -199,7 +199,7 @@\n \t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tJsonNode rootNode = mapper.readTree(dataString);\n \t\t\tint returnCode = rootNode.get(\"ReturnCode\").asInt();\n-\t\t\tlogger.debug(\"myq ReturnCode: {}\", returnCode);\n+\t\t\tlogger.trace(\"myq ReturnCode: {}\", returnCode);\n \n \t\t\tMyQResponseCode rc = MyQResponseCode.fromCode(returnCode);\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 186,
        "bugNodeStartChar": 5662,
        "bugNodeLength": 37,
        "fixLineNum": 186,
        "fixNodeStartChar": 5662,
        "fixNodeLength": 37,
        "sourceBeforeFix": "logger.debug(\"Requsting URL {}\",url)",
        "sourceAfterFix": "logger.trace(\"Requsting URL {}\",url)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 156,
        "bugNodeStartChar": 6247,
        "bugNodeLength": 151,
        "fixLineNum": 156,
        "fixNodeStartChar": 6092,
        "fixNodeLength": 149,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6586b6ae0a8cb0660e219a8b2b32ca75a218ddb7",
        "fixCommitParentSHA1": "16d4314e381df5f2bd208cdea16cea6c7334fc5b",
        "bugFilePath": "core/client/src/main/java/alluxio/client/file/options/InStreamOptions.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/file/options/InStreamOptions.java b/core/client/src/main/java/alluxio/client/file/options/InStreamOptions.java\nindex 0073148..ab1d3e6 100644\n--- a/core/client/src/main/java/alluxio/client/file/options/InStreamOptions.java\n+++ b/core/client/src/main/java/alluxio/client/file/options/InStreamOptions.java\n@@ -117,18 +117,19 @@\n       return false;\n     }\n     InStreamOptions that = (InStreamOptions) o;\n-    return Objects.equal(mLocationPolicy, that.mLocationPolicy) && Objects\n-        .equal(mReadType, that.mReadType);\n+    return Objects.equal(mLocationPolicy, that.mLocationPolicy) &&\n+        Objects.equal(mReadType, that.mReadType) &&\n+        Objects.equal(mCacheIncompleteBlock, that.mCacheIncompleteBlock);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hashCode(mLocationPolicy, mReadType);\n+    return Objects.hashCode(mLocationPolicy, mReadType, mCacheIncompleteBlock);\n   }\n \n   @Override\n   public String toString() {\n     return Objects.toStringHelper(this).add(\"locationPolicy\", mLocationPolicy)\n-        .add(\"readType\", mReadType).toString();\n+        .add(\"readType\", mReadType).add(\"cacheIncompleteBlock\", mCacheIncompleteBlock).toString();\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 126,
        "bugNodeStartChar": 3644,
        "bugNodeLength": 44,
        "fixLineNum": 126,
        "fixNodeStartChar": 3644,
        "fixNodeLength": 67,
        "sourceBeforeFix": "Objects.hashCode(mLocationPolicy,mReadType)",
        "sourceAfterFix": "Objects.hashCode(mLocationPolicy,mReadType,mCacheIncompleteBlock)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9fe147f0d526ec84399f4b1d1ef58bb996466038",
        "fixCommitParentSHA1": "37ffae4633399e2f3d884c09b3c870477f713920",
        "bugFilePath": "core/src/test/java/tachyon/master/MasterInfoTest.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/master/MasterInfoTest.java b/core/src/test/java/tachyon/master/MasterInfoTest.java\nindex 41fccb7..0fac0e5 100644\n--- a/core/src/test/java/tachyon/master/MasterInfoTest.java\n+++ b/core/src/test/java/tachyon/master/MasterInfoTest.java\n@@ -359,7 +359,7 @@\n     mMasterInfo.createFile(\"testFile\", Constants.DEFAULT_BLOCK_SIZE_BYTE);\n   }\n \n-  @Test(expected = InvalidPathException.class)\n+  @Test(expected = FileAlreadyExistException.class)\n   public void createFileInvalidPathTest2() throws InvalidPathException, FileAlreadyExistException,\n       BlockInfoException, TachyonException {\n     mMasterInfo.createFile(\"/\", Constants.DEFAULT_BLOCK_SIZE_BYTE);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 362,
        "bugNodeStartChar": 13699,
        "bugNodeLength": 26,
        "fixLineNum": 362,
        "fixNodeStartChar": 13699,
        "fixNodeLength": 31,
        "sourceBeforeFix": "InvalidPathException.class",
        "sourceAfterFix": "FileAlreadyExistException.class"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "71b5386e09c6f6e781220b1d781ce3aaf0bce816",
        "fixCommitParentSHA1": "ca7e81174fbd4899584d2032c9acf850136f1e32",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java b/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\nindex 70714b9..b9c6672 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/handler/ReflectorServletProcessor.java\n@@ -176,7 +176,7 @@\n         r.getRequest().setAttribute(FrameworkConfig.ATMOSPHERE_RESOURCE, r);\n         r.getRequest().setAttribute(FrameworkConfig.ATMOSPHERE_HANDLER, this);\n         try {\n-            if (wrapRequest) {\n+            if (!wrapRequest) {\n                 wrapper.service(r.getRequest(), r.getResponse());\n             } else {\n                 wrapper.service(new AtmosphereRequestWrapper(r.getRequest()), new AtmosphereResponseWrapper(r.getResponse()));\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 179,
        "bugNodeStartChar": 7756,
        "bugNodeLength": 11,
        "fixLineNum": 179,
        "fixNodeStartChar": 7756,
        "fixNodeLength": 12,
        "sourceBeforeFix": "wrapRequest",
        "sourceAfterFix": "!wrapRequest"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7d5e825abd68a4ffcb86865149b917edf76a47b6",
        "fixCommitParentSHA1": "193474f51804bf6255bfcec58befcb1dc8ff8329",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java\nindex 93b2823..5f4f3f0 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java\n@@ -566,7 +566,7 @@\n     public static JavadocTagInfo fromText(final String text)\n     {\n         if (text == null) {\n-            throw new NullPointerException(\"the text is null\");\n+            throw new IllegalArgumentException(\"the text is null\");\n         }\n \n         final JavadocTagInfo tag = TEXT_TO_TAG.get(text);\n@@ -590,7 +590,7 @@\n     public static JavadocTagInfo fromName(final String name)\n     {\n         if (name == null) {\n-            throw new NullPointerException(\"the name is null\");\n+            throw new IllegalArgumentException(\"the name is null\");\n         }\n \n         final JavadocTagInfo tag = NAME_TO_TAG.get(name);\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 593,
        "bugNodeStartChar": 18601,
        "bugNodeLength": 44,
        "fixLineNum": 593,
        "fixNodeStartChar": 18601,
        "fixNodeLength": 48,
        "sourceBeforeFix": "new NullPointerException(\"the name is null\")",
        "sourceAfterFix": "new IllegalArgumentException(\"the name is null\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5ac2955ff4451c72db1e157dda76786f30511679",
        "fixCommitParentSHA1": "419072905a45d00fb2197b33e85a7d260ade24cc",
        "bugFilePath": "src/test/java/io/vertx/test/core/NetTest.java",
        "fixPatch": "diff --git a/src/test/java/io/vertx/test/core/NetTest.java b/src/test/java/io/vertx/test/core/NetTest.java\nindex 374f14b..9f23946 100644\n--- a/src/test/java/io/vertx/test/core/NetTest.java\n+++ b/src/test/java/io/vertx/test/core/NetTest.java\n@@ -280,7 +280,7 @@\n     int receiverBufferSize = TestUtils.randomPortInt();\n     Random rand = new Random();\n     boolean reuseAddress = rand.nextBoolean();\n-    int trafficClass = TestUtils.randomByte() + 127;\n+    int trafficClass = TestUtils.randomByte() + 128;\n     boolean tcpNoDelay = rand.nextBoolean();\n     boolean tcpKeepAlive = rand.nextBoolean();\n     int soLinger = TestUtils.randomPositiveInt();\n@@ -369,7 +369,7 @@\n     int receiverBufferSize = TestUtils.randomPortInt();\n     Random rand = new Random();\n     boolean reuseAddress = rand.nextBoolean();\n-    int trafficClass = TestUtils.randomByte() + 127;\n+    int trafficClass = TestUtils.randomByte() + 128;\n     boolean tcpNoDelay = rand.nextBoolean();\n     boolean tcpKeepAlive = rand.nextBoolean();\n     int soLinger = TestUtils.randomPositiveInt();\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 372,
        "bugNodeStartChar": 16104,
        "bugNodeLength": 28,
        "fixLineNum": 372,
        "fixNodeStartChar": 16104,
        "fixNodeLength": 28,
        "sourceBeforeFix": "TestUtils.randomByte() + 127",
        "sourceAfterFix": "TestUtils.randomByte() + 128"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4e5679100979b451b8ced187c19fa53f92536e6f",
        "fixCommitParentSHA1": "dd2f4a66241e2edab1f74bababf54010d38f1358",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/ClientContext.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\nindex c6a75f3..e395301 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/ClientContext.java\n@@ -70,7 +70,7 @@\n     sClientMetrics = new ClientMetrics();\n \n     if (sExecutorService != null) {\n-      sExecutorService.shutdown();\n+      sExecutorService.shutdownNow();\n     }\n     sExecutorService = Executors.newFixedThreadPool(\n         sTachyonConf.getInt(Constants.USER_BLOCK_WORKER_CLIENT_THREADS),\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 73,
        "bugNodeStartChar": 2460,
        "bugNodeLength": 27,
        "fixLineNum": 73,
        "fixNodeStartChar": 2460,
        "fixNodeLength": 30,
        "sourceBeforeFix": "sExecutorService.shutdown()",
        "sourceAfterFix": "sExecutorService.shutdownNow()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "21186d3c4cf243e383215d106b2228cc09231bc4",
        "fixCommitParentSHA1": "415a68b4284c9b27f12bc593c3c87b42aca08dac",
        "bugFilePath": "hazelcast-hibernate/src/main/java/com/hazelcast/hibernate/local/LocalRegionCache.java",
        "fixPatch": "diff --git a/hazelcast-hibernate/src/main/java/com/hazelcast/hibernate/local/LocalRegionCache.java b/hazelcast-hibernate/src/main/java/com/hazelcast/hibernate/local/LocalRegionCache.java\nindex 428c489..fb45dce 100644\n--- a/hazelcast-hibernate/src/main/java/com/hazelcast/hibernate/local/LocalRegionCache.java\n+++ b/hazelcast-hibernate/src/main/java/com/hazelcast/hibernate/local/LocalRegionCache.java\n@@ -193,7 +193,7 @@\n                 if (v.getLock() == LOCK_SUCCESS) {\n                     continue;\n                 }\n-                if (v.getCreationTime() + timeToLive > now) {\n+                if (v.getCreationTime() + timeToLive < now) {\n                     iter.remove();\n                 } else if (maxSize > 0 && maxSize != Integer.MAX_VALUE) {\n                     if (entries == null) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 196,
        "bugNodeStartChar": 7060,
        "bugNodeLength": 38,
        "fixLineNum": 196,
        "fixNodeStartChar": 7060,
        "fixNodeLength": 38,
        "sourceBeforeFix": "v.getCreationTime() + timeToLive > now",
        "sourceAfterFix": "v.getCreationTime() + timeToLive < now"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d0ee16781a214f8470462334346519b762c5b72b",
        "fixCommitParentSHA1": "c55c25291a0ea045f6e6ddb63a03997b499e2ab4",
        "bugFilePath": "src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java",
        "fixPatch": "diff --git a/src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java b/src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java\nindex 6b74bbb..3525769 100644\n--- a/src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java\n+++ b/src/main/java/org/jboss/netty/handler/codec/replay/ReplayingDecoder.java\n@@ -407,11 +407,12 @@\n             }\n \n             // A successful decode\n-            fireMessageReceived(context, remoteAddress, result);\n+            unfoldAndfireMessageReceived(context, result, remoteAddress);\n         }\n     }\n \n-    private void fireMessageReceived(ChannelHandlerContext context, SocketAddress remoteAddress, Object result) {\n+    private void unfoldAndfireMessageReceived(\n+            ChannelHandlerContext context, Object result, SocketAddress remoteAddress) {\n         if (unfold) {\n             if (result instanceof Object[]) {\n                 for (Object r: (Object[]) result) {\n@@ -443,9 +444,9 @@\n                 callDecode(ctx, e.getChannel(), cumulation, null);\n                 if (cumulation.readable()) {\n                     // and send the remainders too if necessary.\n-                    Object partiallyDecoded = decodeLast(ctx, e.getChannel(), cumulation, state);\n+                    Object partiallyDecoded = decodeLast(ctx, e.getChannel(), replayable, state);\n                     if (partiallyDecoded != null) {\n-                        fireMessageReceived(ctx, null, partiallyDecoded);\n+                        unfoldAndfireMessageReceived(ctx, partiallyDecoded, null);\n                     }\n                 }\n             }\n",
        "projectName": "netty.netty",
        "bugLineNum": 446,
        "bugNodeStartChar": 16018,
        "bugNodeLength": 50,
        "fixLineNum": 446,
        "fixNodeStartChar": 16018,
        "fixNodeLength": 50,
        "sourceBeforeFix": "decodeLast(ctx,e.getChannel(),cumulation,state)",
        "sourceAfterFix": "decodeLast(ctx,e.getChannel(),replayable,state)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f37d5613a9b20a315d208d3e78a2c51aa2eca47e",
        "fixCommitParentSHA1": "5c2d9e952736db1b3b2c663a20cad48d8d1b6922",
        "bugFilePath": "src/com/google/javascript/jscomp/deps/JsFileRegexParser.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java b/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\nindex 1102b59..d9f07eb 100644\n--- a/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\n+++ b/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\n@@ -249,7 +249,14 @@\n     if (provideGoogModuleConflict || provideEs6ModuleConflict || googEs6ModuleConflict) {\n       // TODO(sdh): should this be an error?\n       errorManager.report(\n-          CheckLevel.WARNING, JSError.make(ModuleLoader.MODULE_CONFLICT, file.toString()));\n+          CheckLevel.WARNING,\n+          JSError.make(\n+              file.toString(),\n+              /* lineno= */ -1,\n+              /* charno= */ -1,\n+              ModuleLoader.MODULE_CONFLICT,\n+              file.toString()));\n+\n       return false;\n     }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 252,
        "bugNodeStartChar": 9738,
        "bugNodeLength": 59,
        "fixLineNum": 253,
        "fixNodeStartChar": 9748,
        "fixNodeLength": 183,
        "sourceBeforeFix": "JSError.make(ModuleLoader.MODULE_CONFLICT,file.toString())",
        "sourceAfterFix": "JSError.make(file.toString(),-1,-1,ModuleLoader.MODULE_CONFLICT,file.toString())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "dcc24b58f7a426eed6d81d0c9f85367e12810efa",
        "fixCommitParentSHA1": "398bb129e7e00fd72adc40f7af50729942a2fceb",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\nindex db40bdb..0c527b9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/CreateAliasExecution.java\n@@ -124,7 +124,7 @@\n         QualifiedTableName remoteTableName = createQualifiedTableName(stateMachine.getSession(), statement.getRemote());\n \n         Optional<TableHandle> remoteTableHandle = metadataManager.getTableHandle(remoteTableName);\n-        checkState(!remoteTableHandle.isPresent(), \"Table %s does not exist\", remoteTableName);\n+        checkState(remoteTableHandle.isPresent(), \"Table %s does not exist\", remoteTableName);\n         Optional<String> remoteConnectorId = metadataManager.getConnectorId(remoteTableHandle.get());\n         Preconditions.checkArgument(remoteConnectorId.isPresent(), \"Table %s can not be aliased\", remoteTableName);\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 127,
        "bugNodeStartChar": 4181,
        "bugNodeLength": 30,
        "fixLineNum": 127,
        "fixNodeStartChar": 4181,
        "fixNodeLength": 29,
        "sourceBeforeFix": "!remoteTableHandle.isPresent()",
        "sourceAfterFix": "remoteTableHandle.isPresent()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7692923b6fe8b8ef72ebd628e28fa1aeaf11861d",
        "fixCommitParentSHA1": "3221de4a6c7376b085a2078ee32e6437f1303259",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/pool/UnboundedApachePoolableProvider.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/pool/UnboundedApachePoolableProvider.java b/modules/cpr/src/main/java/org/atmosphere/pool/UnboundedApachePoolableProvider.java\nindex ce17f15..713aac4 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/pool/UnboundedApachePoolableProvider.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/pool/UnboundedApachePoolableProvider.java\n@@ -66,7 +66,7 @@\n \n     @Override\n     public PoolableProvider returnBroadcaster(Broadcaster b) {\n-        logger.info(\"Return Object {} now at size {}\", b, count.getAndDecrement());\n+        logger.trace(\"Return Object {} now at size {}\", b, count.getAndDecrement());\n         try {\n             genericObjectPool.returnObject(b);\n         } catch (IllegalStateException ex) {\n@@ -79,7 +79,7 @@\n \n         @Override\n         public Broadcaster create() {\n-            logger.info(\"Creating Object {}\", count.getAndIncrement());\n+            logger.trace(\"Creating Object {}\", count.getAndIncrement());\n             return PoolableBroadcasterFactory.class.cast(config.getBroadcasterFactory()).createBroadcaster();\n         }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 82,
        "bugNodeStartChar": 3016,
        "bugNodeLength": 58,
        "fixLineNum": 82,
        "fixNodeStartChar": 3016,
        "fixNodeLength": 59,
        "sourceBeforeFix": "logger.info(\"Creating Object {}\",count.getAndIncrement())",
        "sourceAfterFix": "logger.trace(\"Creating Object {}\",count.getAndIncrement())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4f6ba4fe3dd1ab5443020923d14c5e4c379e56ec",
        "fixCommitParentSHA1": "762adfcb69266a7ba1786a966fe371d69a1043fd",
        "bugFilePath": "handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java",
        "fixPatch": "diff --git a/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\nindex db9d62f..d4b8234 100644\n--- a/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\n+++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\n@@ -350,7 +350,7 @@\n         void progress() {\n             progress ++;\n             if (promise instanceof ChannelProgressivePromise) {\n-                ((ChannelProgressivePromise) promise).setProgress(progress, -1);\n+                ((ChannelProgressivePromise) promise).tryProgress(progress, -1);\n             }\n         }\n     }\n",
        "projectName": "netty.netty",
        "bugLineNum": 353,
        "bugNodeStartChar": 12870,
        "bugNodeLength": 63,
        "fixLineNum": 353,
        "fixNodeStartChar": 12870,
        "fixNodeLength": 63,
        "sourceBeforeFix": "((ChannelProgressivePromise)promise).setProgress(progress,-1)",
        "sourceAfterFix": "((ChannelProgressivePromise)promise).tryProgress(progress,-1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a4d8f930af1f17a6c48a9abd94f49e5fd719fc31",
        "fixCommitParentSHA1": "e85d43739819e6408c3a4a4e2f9e71bcf6905a2e",
        "bugFilePath": "codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java",
        "fixPatch": "diff --git a/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java b/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\nindex 0e243ce..dfdc856 100644\n--- a/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\n+++ b/codec/src/main/java/io/netty/handler/codec/CharSequenceValueConverter.java\n@@ -82,7 +82,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).byteAt(0);\n         }\n-        return Byte.valueOf(value.toString());\n+        return Byte.parseByte(value.toString());\n     }\n \n     @Override\n@@ -100,7 +100,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseShort();\n         }\n-        return Short.valueOf(value.toString());\n+        return Short.parseShort(value.toString());\n     }\n \n     @Override\n@@ -139,7 +139,7 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseFloat();\n         }\n-        return Float.valueOf(value.toString());\n+        return Float.parseFloat(value.toString());\n     }\n \n     @Override\n@@ -147,6 +147,6 @@\n         if (value instanceof AsciiString) {\n             return ((AsciiString) value).parseDouble();\n         }\n-        return Double.valueOf(value.toString());\n+        return Double.parseDouble(value.toString());\n     }\n }\n",
        "projectName": "netty.netty",
        "bugLineNum": 85,
        "bugNodeStartChar": 2525,
        "bugNodeLength": 30,
        "fixLineNum": 85,
        "fixNodeStartChar": 2525,
        "fixNodeLength": 32,
        "sourceBeforeFix": "Byte.valueOf(value.toString())",
        "sourceAfterFix": "Byte.parseByte(value.toString())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "88bf7f435fd294dc60ea6bcc2a1ee19e9aada3d4",
        "fixCommitParentSHA1": "6e8d7e1df635ecd360ee407510b77b1d59ea0283",
        "bugFilePath": "core/server/src/main/java/alluxio/master/journal/CheckpointManager.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/master/journal/CheckpointManager.java b/core/server/src/main/java/alluxio/master/journal/CheckpointManager.java\nindex 9004474..72df30b 100644\n--- a/core/server/src/main/java/alluxio/master/journal/CheckpointManager.java\n+++ b/core/server/src/main/java/alluxio/master/journal/CheckpointManager.java\n@@ -102,7 +102,7 @@\n       if (tempBackupCheckpointExists) {\n         // If mCheckpointPath also exists, step 2 must have implemented rename as copy + delete, and\n         // failed during the delete.\n-        UnderFileSystemUtils.deleteFileIfExists(mUfs, mCheckpointPath);\n+        UnderFileSystemUtils.deleteFileIfExists(mCheckpointPath);\n         mUfs.rename(mTempBackupCheckpointPath, mCheckpointPath);\n       }\n       if (backupCheckpointExists) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 105,
        "bugNodeStartChar": 4694,
        "bugNodeLength": 62,
        "fixLineNum": 105,
        "fixNodeStartChar": 4694,
        "fixNodeLength": 56,
        "sourceBeforeFix": "UnderFileSystemUtils.deleteFileIfExists(mUfs,mCheckpointPath)",
        "sourceAfterFix": "UnderFileSystemUtils.deleteFileIfExists(mCheckpointPath)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1",
        "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16",
        "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java",
        "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 87,
        "bugNodeStartChar": 3890,
        "bugNodeLength": 9,
        "fixLineNum": 87,
        "fixNodeStartChar": 3804,
        "fixNodeLength": 9,
        "sourceBeforeFix": "items[19]",
        "sourceAfterFix": "items[18]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cc848a1c24959c2f6941234b77399fbd58ecd3ca",
        "fixCommitParentSHA1": "187d9a29a5b1862534c0ae529b1f1b017f19aed9",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\nindex 15caa76..5ac6121 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/RustClientCodegen.java\n@@ -174,11 +174,11 @@\n \n     @Override\n     public String apiFileFolder() {\n-        return (outputFolder + File.separator + apiFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + apiFolder).replace(\"/\", File.separator);\n     }\n \n     public String modelFileFolder() {\n-        return (outputFolder + File.separator + modelFolder).replaceAll(\"/\", File.separator);\n+        return (outputFolder + File.separator + modelFolder).replace(\"/\", File.separator);\n     }\n \n     @Override\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 181,
        "bugNodeStartChar": 7009,
        "bugNodeLength": 77,
        "fixLineNum": 181,
        "fixNodeStartChar": 7009,
        "fixNodeLength": 74,
        "sourceBeforeFix": "(outputFolder + File.separator + modelFolder).replaceAll(\"/\",File.separator)",
        "sourceAfterFix": "(outputFolder + File.separator + modelFolder).replace(\"/\",File.separator)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "80ae0c0b7908424e7f6fef38d3dd5aa3a173347a",
        "fixCommitParentSHA1": "0ccf7689046ab3f5e335582d7756f728e7bdf7d2",
        "bugFilePath": "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java",
        "fixPatch": "diff --git a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java\nindex 99a206d..065a4ef 100644\n--- a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java\n+++ b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java\n@@ -218,7 +218,7 @@\n \n     private void peekMessage(Message mail) {\n         // this only applies to IMAP messages which has a setPeek method\n-        if (mail.getClass().getName().startsWith(\"IMAP\")) {\n+        if (mail.getClass().getSimpleName().startsWith(\"IMAP\")) {\n             try {\n                 LOG.trace(\"Calling setPeek(true) on mail message {}\", mail);\n                 IntrospectionSupport.setProperty(mail, \"peek\", true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 221,
        "bugNodeStartChar": 8739,
        "bugNodeLength": 25,
        "fixLineNum": 221,
        "fixNodeStartChar": 8739,
        "fixNodeLength": 31,
        "sourceBeforeFix": "mail.getClass().getName()",
        "sourceAfterFix": "mail.getClass().getSimpleName()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "22298e1958a648d627ae3cbc3fe7bf0f2613286f",
        "fixCommitParentSHA1": "e30aefd030c59f0d67a449e6fbc808c76580bbe8",
        "bugFilePath": "spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping.java",
        "fixPatch": "diff --git a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping.java b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping.java\nindex fd86a3a..ed12a5b 100644\n--- a/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping.java\n+++ b/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/endpoint/FrameworkEndpointHandlerMapping.java\n@@ -118,7 +118,7 @@\n \n \tpublic FrameworkEndpointHandlerMapping() {\n \t\t// Make sure user-supplied mappings take precedence by default (except the resource mapping)\n-\t\tsetOrder(Ordered.LOWEST_PRECEDENCE - 1);\n+\t\tsetOrder(Ordered.LOWEST_PRECEDENCE - 2);\n \t}\n \n \t/**\n",
        "projectName": "spring-projects.spring-security-oauth",
        "bugLineNum": 121,
        "bugNodeStartChar": 4097,
        "bugNodeLength": 29,
        "fixLineNum": 121,
        "fixNodeStartChar": 4097,
        "fixNodeLength": 29,
        "sourceBeforeFix": "Ordered.LOWEST_PRECEDENCE - 1",
        "sourceAfterFix": "Ordered.LOWEST_PRECEDENCE - 2"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "59c498e520c50c99b06affb6b2ff96959ae9744e",
        "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 218,
        "bugNodeStartChar": 8928,
        "bugNodeLength": 72,
        "fixLineNum": 218,
        "fixNodeStartChar": 8928,
        "fixNodeLength": 71,
        "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)",
        "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2ff3aba4529be755b56da7a8f2a034856f12181",
        "fixCommitParentSHA1": "03d75166e85f9304a272add93e52ef210ad326d8",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\nindex 02b6b21..1f702e1 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java\n@@ -34,7 +34,7 @@\n     protected final Properties p = new Properties();\n \n     protected String numberId, numberPass, followsOneWay;\n-    protected int numberIdId;\n+    protected long numberIdId;\n     protected TestUserInfo id1, id2, id3, bestFriend1, bestFriend2;\n     protected Configuration conf1, conf2, conf3;\n \n@@ -85,7 +85,7 @@\n         numberId = p.getProperty(\"numberid.user\");\n         numberPass = p.getProperty(\"numberid.password\");\n //        id1id = Integer.valueOf(p.getProperty(\"id1id\"));\n-        numberIdId = Integer.valueOf(p.getProperty(\"numberid.id\"));\n+        numberIdId = Long.valueOf(p.getProperty(\"numberid.id\"));\n \n         twitter1 = new TwitterFactory(conf1).getInstance();\n \n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 88,
        "bugNodeStartChar": 3510,
        "bugNodeLength": 45,
        "fixLineNum": 88,
        "fixNodeStartChar": 3510,
        "fixNodeLength": 42,
        "sourceBeforeFix": "Integer.valueOf(p.getProperty(\"numberid.id\"))",
        "sourceAfterFix": "Long.valueOf(p.getProperty(\"numberid.id\"))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "56713d36c65344d448b58f697bb109c882f44dc0",
        "fixCommitParentSHA1": "b298b97893ac3ec02c35bc83e4969369f33f3f60",
        "bugFilePath": "nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java",
        "fixPatch": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\nindex b5815dd..d2c7063 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/taskmanager/bytebuffered/ByteBufferedChannelManager.java\n@@ -50,11 +50,11 @@\n \n \tprivate static final Log LOG = LogFactory.getLog(ByteBufferedChannelManager.class);\n \n-\tprivate static final int DEFAULT_NUMBER_OF_READ_BUFFERS = 128;\n+\tprivate static final int DEFAULT_NUMBER_OF_READ_BUFFERS = 256;\n \n-\tprivate static final int DEFAULT_NUMBER_OF_WRITE_BUFFERS = 128;\n+\tprivate static final int DEFAULT_NUMBER_OF_WRITE_BUFFERS = 256;\n \n-\tprivate static final int DEFAULT_BUFFER_SIZE_IN_BYTES = 128 * 1024; // 128k\n+\tprivate static final int DEFAULT_BUFFER_SIZE_IN_BYTES = 64 * 1024; // 64k\n \n \tprivate static final boolean DEFAULT_ALLOW_SPILLING = true;\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 55,
        "bugNodeStartChar": 2502,
        "bugNodeLength": 37,
        "fixLineNum": 55,
        "fixNodeStartChar": 2502,
        "fixNodeLength": 37,
        "sourceBeforeFix": "DEFAULT_NUMBER_OF_WRITE_BUFFERS=128",
        "sourceAfterFix": "DEFAULT_NUMBER_OF_WRITE_BUFFERS=256"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "811f7b2271556befe5b0e74c3881d34fe1531252",
        "fixCommitParentSHA1": "e2fd8e10e39ae5e6e7b45538c929ca63551dae18",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex 2256db9..1d229b8 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -631,16 +631,16 @@\n                     nettyRequest.setContent(buffer);\n                 } else if (request.getByteData() != null) {\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(request.getByteData().length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(request.getByteData()));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(request.getByteData()));\n                 } else if (request.getStringData() != null) {\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(request.getStringData().getBytes(bodyCharset).length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(request.getStringData(), bodyCharset));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(request.getStringData().getBytes(bodyCharset)));\n                 } else if (request.getStreamData() != null) {\n                     int[] lengthWrapper = new int[1];\n                     byte[] bytes = AsyncHttpProviderUtils.readFully(request.getStreamData(), lengthWrapper);\n                     int length = lengthWrapper[0];\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(bytes, 0, length));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(bytes, 0, length));\n                 } else if (request.getParams() != null) {\n                     StringBuilder sb = new StringBuilder();\n                     for (final Entry<String, List<String>> paramEntry : request.getParams()) {\n@@ -655,7 +655,7 @@\n                         }\n                     }\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(sb.length()));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(sb.toString().getBytes(bodyCharset)));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(sb.toString().getBytes(bodyCharset)));\n \n                     if (!request.getHeaders().containsKey(HttpHeaders.Names.CONTENT_TYPE)) {\n                         nettyRequest.setHeader(HttpHeaders.Names.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 658,
        "bugNodeStartChar": 30354,
        "bugNodeLength": 64,
        "fixLineNum": 658,
        "fixNodeStartChar": 30354,
        "fixNodeLength": 65,
        "sourceBeforeFix": "ChannelBuffers.copiedBuffer(sb.toString().getBytes(bodyCharset))",
        "sourceAfterFix": "ChannelBuffers.wrappedBuffer(sb.toString().getBytes(bodyCharset))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "19907030d105079fee4fe6db70431f7f6b928149",
        "fixCommitParentSHA1": "75a2ddd61c3df0b7a1e6db1cc5c588177b24c3cf",
        "bugFilePath": "buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java",
        "fixPatch": "diff --git a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\nindex 5cbd676..9cbf069 100644\n--- a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n+++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n@@ -251,7 +251,8 @@\n             short v = PlatformDependent.getShort(array, index);\n             return BIG_ENDIAN_NATIVE_ORDER ? v : Short.reverseBytes(v);\n         }\n-        return (short) (PlatformDependent.getByte(index) << 8 | PlatformDependent.getByte(index + 1) & 0xff);\n+        return (short) (PlatformDependent.getByte(array, index) << 8 |\n+                PlatformDependent.getByte(array, index + 1) & 0xff);\n     }\n \n     static short getShortLE(byte[] array, int index) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 254,
        "bugNodeStartChar": 11275,
        "bugNodeLength": 32,
        "fixLineNum": 254,
        "fixNodeStartChar": 11275,
        "fixNodeLength": 39,
        "sourceBeforeFix": "PlatformDependent.getByte(index)",
        "sourceAfterFix": "PlatformDependent.getByte(array,index)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5530d4c27d508c513b68af67aadede84b4cfa102",
        "fixCommitParentSHA1": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\nindex 6cbd4ac..c3fea74 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\n@@ -70,8 +70,8 @@\n     /** Qualified name for element 'allow'. */\n     private static final String ALLOW_ELEMENT_NAME = \"allow\";\n \n-    /** Used to hold the {@link PkgControl} objects. */\n-    private final Deque<PkgControl> stack = new ArrayDeque<>();\n+    /** Used to hold the {@link ImportControl} objects. */\n+    private final Deque<ImportControl> stack = new ArrayDeque<>();\n \n     static {\n         DTD_RESOURCE_BY_ID.put(DTD_PUBLIC_ID_1_0, DTD_RESOURCE_NAME_1_0);\n@@ -97,12 +97,12 @@\n         if (\"import-control\".equals(qName)) {\n             final String pkg = safeGet(attributes, PKG_ATTRIBUTE_NAME);\n             final boolean regex = containsRegexAttribute(attributes);\n-            stack.push(new PkgControl(pkg, regex));\n+            stack.push(new ImportControl(pkg, regex));\n         }\n         else if (SUBPACKAGE_ELEMENT_NAME.equals(qName)) {\n             final String name = safeGet(attributes, \"name\");\n             final boolean regex = containsRegexAttribute(attributes);\n-            stack.push(new PkgControl(stack.peek(), name, regex));\n+            stack.push(new ImportControl(stack.peek(), name, regex));\n         }\n         else if (ALLOW_ELEMENT_NAME.equals(qName) || \"disallow\".equals(qName)) {\n             // Need to handle either \"pkg\" or \"class\" attribute.\n@@ -148,10 +148,10 @@\n     /**\n      * Loads the import control file from a file.\n      * @param uri the uri of the file to load.\n-     * @return the root {@link PkgControl} object.\n+     * @return the root {@link ImportControl} object.\n      * @throws CheckstyleException if an error occurs.\n      */\n-    public static PkgControl load(final URI uri) throws CheckstyleException {\n+    public static ImportControl load(final URI uri) throws CheckstyleException {\n         final InputStream inputStream;\n         try {\n             inputStream = uri.toURL().openStream();\n@@ -170,10 +170,10 @@\n      * Loads the import control file from a {@link InputSource}.\n      * @param source the source to load from.\n      * @param uri uri of the source being loaded.\n-     * @return the root {@link PkgControl} object.\n+     * @return the root {@link ImportControl} object.\n      * @throws CheckstyleException if an error occurs.\n      */\n-    private static PkgControl load(final InputSource source,\n+    private static ImportControl load(final InputSource source,\n         final URI uri) throws CheckstyleException {\n         try {\n             final ImportControlLoader loader = new ImportControlLoader();\n@@ -190,9 +190,9 @@\n     }\n \n     /**\n-     * @return the root {@link PkgControl} object loaded.\n+     * @return the root {@link ImportControl} object loaded.\n      */\n-    private PkgControl getRoot() {\n+    private ImportControl getRoot() {\n         return stack.peek();\n     }\n \n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 148,
        "bugNodeStartChar": 5998,
        "bugNodeLength": 769,
        "fixLineNum": 148,
        "fixNodeStartChar": 5998,
        "fixNodeLength": 772,
        "sourceBeforeFix": "/**   * Loads the import control file from a file.  * @param uri the uri of the file to load.  * @return the root {@link PkgControl} object.  * @throws CheckstyleException if an error occurs.  */ public static PkgControl load(final URI uri) throws CheckstyleException {   final InputStream inputStream;   try {     inputStream=uri.toURL().openStream();   }  catch (  final MalformedURLException ex) {     throw new CheckstyleException(\"syntax error in url \" + uri,ex);   } catch (  final IOException ex) {     throw new CheckstyleException(\"unable to find \" + uri,ex);   }   final InputSource source=new InputSource(inputStream);   return load(source,uri); } ",
        "sourceAfterFix": "/**   * Loads the import control file from a file.  * @param uri the uri of the file to load.  * @return the root {@link PkgControl} object.  * @throws CheckstyleException if an error occurs.  */ public static ImportControl load(final URI uri) throws CheckstyleException {   final InputStream inputStream;   try {     inputStream=uri.toURL().openStream();   }  catch (  final MalformedURLException ex) {     throw new CheckstyleException(\"syntax error in url \" + uri,ex);   } catch (  final IOException ex) {     throw new CheckstyleException(\"unable to find \" + uri,ex);   }   final InputSource source=new InputSource(inputStream);   return load(source,uri); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1266642aba9a297e0872324c1e72c72a38e0e485",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 104,
        "bugNodeStartChar": 2848,
        "bugNodeLength": 43,
        "fixLineNum": 104,
        "fixNodeStartChar": 2848,
        "fixNodeLength": 50,
        "sourceBeforeFix": "this.thrown.equals(\"File must not be null\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must not be null\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "64292cde475804151a5743712ee901d017b40af8",
        "fixCommitParentSHA1": "31f935ef6c2c57f5d98727c823a7317a5516e86f",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/meta/InodeDirectoryIdGenerator.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/meta/InodeDirectoryIdGenerator.java b/core/server/master/src/main/java/alluxio/master/file/meta/InodeDirectoryIdGenerator.java\nindex 7f2a52f..1749a8b 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/meta/InodeDirectoryIdGenerator.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/meta/InodeDirectoryIdGenerator.java\n@@ -40,7 +40,8 @@\n    * @param containerIdGenerator the container id generator to use\n    */\n   public InodeDirectoryIdGenerator(ContainerIdGenerable containerIdGenerator) {\n-    mContainerIdGenerator = Preconditions.checkNotNull(containerIdGenerator);\n+    mContainerIdGenerator =\n+            Preconditions.checkNotNull(containerIdGenerator, \"containerIdGenerator\");\n   }\n \n   /**\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 43,
        "bugNodeStartChar": 1659,
        "bugNodeLength": 48,
        "fixLineNum": 44,
        "fixNodeStartChar": 1671,
        "fixNodeLength": 72,
        "sourceBeforeFix": "Preconditions.checkNotNull(containerIdGenerator)",
        "sourceAfterFix": "Preconditions.checkNotNull(containerIdGenerator,\"containerIdGenerator\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "278761b29be3ea98cc1a4d85c5c7cf11cdea29ba",
        "fixCommitParentSHA1": "d43c34bcac8057e893582fe338507cb6770bcfd0",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java b/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\nindex 3c85755..cd825e5 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/interceptor/BacklogTracer.java\n@@ -268,7 +268,7 @@\n         List<BacklogTracerEventMessage> answer = new ArrayList<BacklogTracerEventMessage>();\n         if (nodeId != null) {\n             for (DefaultBacklogTracerEventMessage message : queue) {\n-                if (nodeId.equals(message.getToNode())) {\n+                if (nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId())) {\n                     answer.add(message);\n                 }\n             }\n",
        "projectName": "apache.camel",
        "bugLineNum": 271,
        "bugNodeStartChar": 9403,
        "bugNodeLength": 34,
        "fixLineNum": 271,
        "fixNodeStartChar": 9403,
        "fixNodeLength": 73,
        "sourceBeforeFix": "nodeId.equals(message.getToNode())",
        "sourceAfterFix": "nodeId.equals(message.getToNode()) || nodeId.equals(message.getRouteId())"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "5bb9d3bf8f6ca67da43de8cc4aa7ea0a5b382a29",
        "fixCommitParentSHA1": "00aafbb84e1e1613cdecfb4b0026bb8afed64719",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAnnotationProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAnnotationProcessor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAnnotationProcessor.java\nindex 41e2135..e105a63 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAnnotationProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAnnotationProcessor.java\n@@ -67,7 +67,7 @@\n \n         Map<Class<? extends Annotation>, Set<Class<?>>> annotations = (Map<Class<? extends Annotation>, Set<Class<?>>>) sc.getAttribute(ANNOTATION_ATTRIBUTE);\n \n-        if (annotations == null) {\n+        if (annotations == null || annotations.isEmpty()) {\n             delegate = new BytecodeBasedAnnotationProcessor();\n         } else {\n             delegate = new ServletContainerInitializerAnnotationProcessor(annotations, framework);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 70,
        "bugNodeStartChar": 2888,
        "bugNodeLength": 19,
        "fixLineNum": 70,
        "fixNodeStartChar": 2888,
        "fixNodeLength": 44,
        "sourceBeforeFix": "annotations == null",
        "sourceAfterFix": "annotations == null || annotations.isEmpty()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "53f03358377f3dde21f58e6c841142c6db8a9c32",
        "fixCommitParentSHA1": "6ca79e3aa2b5a8812e5c4aaee80c4115e2b9def8",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionPoolManager.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionPoolManager.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionPoolManager.java\nindex ecac85c..b70dbd8 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionPoolManager.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/tez/TezSessionPoolManager.java\n@@ -314,7 +314,7 @@\n         LOG.warn(\"User has specified \" + queueName + \" queue; ignoring the setting\");\n         queueName = null;\n         hasQueue = false;\n-        conf.set(\"tez.queue.name\", null);\n+        conf.unset(\"tez.queue.name\");\n       }\n       default: // All good.\n       }\n",
        "projectName": "apache.hive",
        "bugLineNum": 317,
        "bugNodeStartChar": 12518,
        "bugNodeLength": 32,
        "fixLineNum": 317,
        "fixNodeStartChar": 12518,
        "fixNodeLength": 28,
        "sourceBeforeFix": "conf.set(\"tez.queue.name\",null)",
        "sourceAfterFix": "conf.unset(\"tez.queue.name\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "3694d51c4eb8bdce7a0d15d2705efd704a54fd74",
        "fixCommitParentSHA1": "9ea47475240a753548bdfddb7a7a89202b6ab762",
        "bugFilePath": "tool/test/org/antlr/v4/test/TestPerformance.java",
        "fixPatch": "diff --git a/tool/test/org/antlr/v4/test/TestPerformance.java b/tool/test/org/antlr/v4/test/TestPerformance.java\nindex acab9d9..4ab3681 100644\n--- a/tool/test/org/antlr/v4/test/TestPerformance.java\n+++ b/tool/test/org/antlr/v4/test/TestPerformance.java\n@@ -849,7 +849,7 @@\n \t\t\t\t\tSystem.out.format(\"\\tMode\\tStates\\tConfigs\\tMode%n\");\n \t\t\t\t\tfor (int i = 0; i < modeToDFA.length; i++) {\n \t\t\t\t\t\tDFA dfa = modeToDFA[i];\n-\t\t\t\t\t\tif (dfa == null) {\n+\t\t\t\t\t\tif (dfa == null || dfa.states.isEmpty()) {\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\t}\n \n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 852,
        "bugNodeStartChar": 31933,
        "bugNodeLength": 11,
        "fixLineNum": 852,
        "fixNodeStartChar": 31933,
        "fixNodeLength": 35,
        "sourceBeforeFix": "dfa == null",
        "sourceAfterFix": "dfa == null || dfa.states.isEmpty()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "18d518ab9bdccb9fb054141bd775326397c03f49",
        "fixCommitParentSHA1": "fcc9c2ad45f54bbd18cc61792d9a4a75b8d0a77e",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/util/Base64Test.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/util/Base64Test.java b/src/test/java/com/alibaba/json/bvt/util/Base64Test.java\nindex 075f670..073235d 100644\n--- a/src/test/java/com/alibaba/json/bvt/util/Base64Test.java\n+++ b/src/test/java/com/alibaba/json/bvt/util/Base64Test.java\n@@ -12,17 +12,17 @@\n \n         {\n             byte[] bytes2 = Base64.decodeFast(base64Str);\n-            assertEquals(str, new String(bytes2));\n+            assertEquals(str, new String(bytes2, \"UTF8\"));\n         }\n \n         {\n             byte[] bytes2 = Base64.decodeFast(base64Str, 0, base64Str.length());\n-            assertEquals(str, new String(bytes2));\n+            assertEquals(str, new String(bytes2, \"UTF8\"));\n         }\n \n         {\n             byte[] bytes2 = Base64.decodeFast(base64Str.toCharArray(), 0, base64Str.length());\n-            assertEquals(str, new String(bytes2));\n+            assertEquals(str, new String(bytes2, \"UTF8\"));\n         }\n     }\n }\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 25,
        "bugNodeStartChar": 961,
        "bugNodeLength": 18,
        "fixLineNum": 25,
        "fixNodeStartChar": 961,
        "fixNodeLength": 26,
        "sourceBeforeFix": "new String(bytes2)",
        "sourceAfterFix": "new String(bytes2,\"UTF8\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1d577b1b8bd3f51bcf8d9d89bb4598a28020af07",
        "fixCommitParentSHA1": "d23c3b3382ff6b2dc7625cb0a0cd31d767efafc5",
        "bugFilePath": "example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java",
        "fixPatch": "diff --git a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\nindex 5421956..0e599fb 100644\n--- a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n+++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n@@ -47,10 +47,10 @@\n                 new GenericFutureListener<Future<Channel>>() {\n             @Override\n             public void operationComplete(Future<Channel> future) throws Exception {\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Welcome to \" + InetAddress.getLocalHost().getHostName() +\n                         \" secure chat service!\\n\");\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Your session is protected by \" +\n                         ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() +\n                         \" cipher suite.\\n\");\n@@ -65,10 +65,10 @@\n         // Send the received message to all channels but the current one.\n         for (Channel c: channels) {\n             if (c != ctx.channel()) {\n-                c.write(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n+                c.writeAndFlush(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n                         msg + '\\n');\n             } else {\n-                c.write(\"[you] \" + msg + '\\n');\n+                c.writeAndFlush(\"[you] \" + msg + '\\n');\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 53,
        "bugNodeStartChar": 2207,
        "bugNodeLength": 214,
        "fixLineNum": 53,
        "fixNodeStartChar": 2207,
        "fixNodeLength": 222,
        "sourceBeforeFix": "ctx.write(\"Your session is protected by \" + ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() + \" cipher suite.\\n\")",
        "sourceAfterFix": "ctx.writeAndFlush(\"Your session is protected by \" + ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() + \" cipher suite.\\n\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dd20434290eb6ae6dff133d70073e35a3998d362",
        "fixCommitParentSHA1": "cb0dee8b09d8cd27f0b817b0317b68501fbac924",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex 989bda8..92adc88 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -121,7 +121,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -158,7 +158,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -232,7 +232,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -292,7 +292,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -318,14 +318,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 294,
        "bugNodeStartChar": 10514,
        "bugNodeLength": 135,
        "fixLineNum": 294,
        "fixNodeStartChar": 10514,
        "fixNodeLength": 130,
        "sourceBeforeFix": "LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId() + \" will not be in TachyonStorage.\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId() + \" will not be in TachyonStorage.\")"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "46fcd4cadab8a2bd4676ec4e430f5a25f7a99577",
        "fixCommitParentSHA1": "927af954b758b5e6c0af17d067dceec20cdf83a4",
        "bugFilePath": "components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java",
        "fixPatch": "diff --git a/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java b/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\nindex ccb6298..b6ee450 100644\n--- a/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\n+++ b/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\n@@ -58,17 +58,17 @@\n         mock.assertIsSatisfied();\n \n         assertEquals(\n-            mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE),\n-            ChronicleEngineMapEventType.INSERT);\n+            ChronicleEngineMapEventType.INSERT,\n+            mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE));\n         assertEquals(\n-            mock.getExchanges().get(0).getIn().getBody(String.class),\n-            \"val-1\");\n+            \"val-1\",\n+            mock.getExchanges().get(0).getIn().getBody(String.class));\n         assertEquals(\n-            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE),\n-            ChronicleEngineMapEventType.REMOVE);\n+            ChronicleEngineMapEventType.REMOVE,\n+            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE));\n         assertEquals(\n-            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.OLD_VALUE),\n-            \"val-2\");\n+            \"val-2\",\n+            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.OLD_VALUE));\n     }\n \n     @Test\n",
        "projectName": "apache.camel",
        "bugLineNum": 63,
        "bugNodeStartChar": 2367,
        "bugNodeLength": 104,
        "fixLineNum": 63,
        "fixNodeStartChar": 2367,
        "fixNodeLength": 104,
        "sourceBeforeFix": "assertEquals(mock.getExchanges().get(0).getIn().getBody(String.class),\"val-1\")",
        "sourceAfterFix": "assertEquals(\"val-1\",mock.getExchanges().get(0).getIn().getBody(String.class))"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "a24cc003cb42557584c969fdc8b6cffc65af7072",
        "fixCommitParentSHA1": "9eefa8c7e22612ab9b65c156e0bb82e942f4697b",
        "bugFilePath": "src/web/org/openmrs/web/controller/user/UserFormController.java",
        "fixPatch": "diff --git a/src/web/org/openmrs/web/controller/user/UserFormController.java b/src/web/org/openmrs/web/controller/user/UserFormController.java\nindex 82e6b04..5a9aa36 100644\n--- a/src/web/org/openmrs/web/controller/user/UserFormController.java\n+++ b/src/web/org/openmrs/web/controller/user/UserFormController.java\n@@ -256,7 +256,7 @@\n \t\t\t\t}\r\n \t\t\t}\r\n             \r\n-            if (StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)) {\r\n+            if (StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)) {\r\n             \tus.changeQuestionAnswer(user, secretQuestion, secretAnswer);\r\n             }\r\n             \r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 259,
        "bugNodeStartChar": 9959,
        "bugNodeLength": 76,
        "fixLineNum": 259,
        "fixNodeStartChar": 9701,
        "fixNodeLength": 76,
        "sourceBeforeFix": "StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)",
        "sourceAfterFix": "StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0eae7fa42135de96caed38f9e6d0380ffa0237d7",
        "fixCommitParentSHA1": "5ec4f40614d7e8a0cb526bc2ae604d4d5958ffa6",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java b/hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java\nindex f57b329..236e124 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/impl/proxy/MapProxySupport.java\n@@ -862,7 +862,7 @@\n                     checkNotNull(entry.getKey(), NULL_KEY_IS_NOT_ALLOWED);\n                     checkNotNull(entry.getValue(), NULL_VALUE_IS_NOT_ALLOWED);\n \n-                    putInternal(mapService.getMapServiceContext().toData(entry.getKey(), partitionStrategy),\n+                    setInternal(mapService.getMapServiceContext().toData(entry.getKey(), partitionStrategy),\n                             mapService.getMapServiceContext().toData(entry.getValue()),\n                             -1,\n                             TimeUnit.MILLISECONDS);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 865,
        "bugNodeStartChar": 38184,
        "bugNodeLength": 259,
        "fixLineNum": 865,
        "fixNodeStartChar": 38184,
        "fixNodeLength": 259,
        "sourceBeforeFix": "putInternal(mapService.getMapServiceContext().toData(entry.getKey(),partitionStrategy),mapService.getMapServiceContext().toData(entry.getValue()),-1,TimeUnit.MILLISECONDS)",
        "sourceAfterFix": "setInternal(mapService.getMapServiceContext().toData(entry.getKey(),partitionStrategy),mapService.getMapServiceContext().toData(entry.getValue()),-1,TimeUnit.MILLISECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/UnionTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/UnionTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/UnionTest.java\nindex d02a292..025db61 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/UnionTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/UnionTest.java\n@@ -25,6 +25,6 @@\n \t\tfinal Sink output = new Sink(\"allUsers.json\").withInputs(union);\n \t\texpectedPlan.setSinks(output);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 28,
        "bugNodeStartChar": 912,
        "bugNodeLength": 38,
        "fixLineNum": 28,
        "fixNodeStartChar": 912,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c2014d82a6ede8518962a250d1ad7130a93b1575",
        "fixCommitParentSHA1": "cca9fb11b4d9907f90b3e23f6ba21e179a006677",
        "bugFilePath": "core/server/src/main/java/alluxio/web/UIFileInfo.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/web/UIFileInfo.java b/core/server/src/main/java/alluxio/web/UIFileInfo.java\nindex d1981f2..6134aa1 100644\n--- a/core/server/src/main/java/alluxio/web/UIFileInfo.java\n+++ b/core/server/src/main/java/alluxio/web/UIFileInfo.java\n@@ -279,7 +279,7 @@\n    * @return the percentage of the file stored in the given tier\n    */\n   public int getOnTierPercentage(String tierAlias) {\n-    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0;\n+    Long sizeOnTier = mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L;\n     return (int) (100 * sizeOnTier / mSize);\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 282,
        "bugNodeStartChar": 8276,
        "bugNodeLength": 67,
        "fixLineNum": 282,
        "fixNodeStartChar": 8276,
        "fixNodeLength": 68,
        "sourceBeforeFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0",
        "sourceAfterFix": "mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/CompilerTestCase.java b/test/com/google/javascript/jscomp/CompilerTestCase.java\nindex 2eb8ae6..e2e80b8 100644\n--- a/test/com/google/javascript/jscomp/CompilerTestCase.java\n+++ b/test/com/google/javascript/jscomp/CompilerTestCase.java\n@@ -1610,7 +1610,7 @@\n         }\n \n         if ((verifyGetterAndSetterUpdates || verifyNoNewGettersOrSetters) && i == 0) {\n-          GatherGettersAndSetterProperties.update(compiler, externsRoot, mainRoot);\n+          GatherGetterAndSetterProperties.update(compiler, externsRoot, mainRoot);\n         }\n \n         recentChange.reset();\n@@ -1633,17 +1633,17 @@\n         if (verifyGetterAndSetterUpdates) {\n           assertWithMessage(\"Pass did not update extern getters / setters\")\n               .that(compiler.getExternGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update source getters / setters\")\n               .that(compiler.getSourceGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n         }\n \n         if (verifyNoNewGettersOrSetters) {\n           MapDifference<String, PropertyAccessKind> externsDifference =\n               Maps.difference(\n                   compiler.getExternGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update new extern getters / setters\")\n               .that(externsDifference.entriesOnlyOnRight())\n               .isEmpty();\n@@ -1654,7 +1654,7 @@\n           MapDifference<String, PropertyAccessKind> sourceDifference =\n               Maps.difference(\n                   compiler.getSourceGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n           assertWithMessage(\"Pass did not update new source getters / setters\")\n               .that(sourceDifference.entriesOnlyOnRight())\n               .isEmpty();\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1613,
        "bugNodeStartChar": 55794,
        "bugNodeLength": 72,
        "fixLineNum": 1613,
        "fixNodeStartChar": 55794,
        "fixNodeLength": 71,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externsRoot,mainRoot)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externsRoot,mainRoot)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0867fa3723a28ad280f7512a7b68141b58215209",
        "fixCommitParentSHA1": "9def365af81c0397bb6509b9cbe5ec561078ae7c",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\nindex 536c5af..76cb133 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3GL20.java\n@@ -56,7 +56,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 59,
        "bugNodeStartChar": 2109,
        "bugNodeLength": 19,
        "fixLineNum": 59,
        "fixNodeStartChar": 2051,
        "fixNodeLength": 17,
        "sourceBeforeFix": "floatBuffer.clear()",
        "sourceAfterFix": "intBuffer.clear()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "da3a1f61ac1f89795ba22321a2ae77f0927941c6",
        "fixCommitParentSHA1": "ecee3e0a2479eba734f992ca9ea086ecfb9dbaee",
        "bugFilePath": "indexing-service/src/main/java/io/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/io/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java b/indexing-service/src/main/java/io/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java\nindex c1ee50b..9a0ea65 100644\n--- a/indexing-service/src/main/java/io/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java\n+++ b/indexing-service/src/main/java/io/druid/indexing/common/task/AppenderatorDriverRealtimeIndexTask.java\n@@ -322,7 +322,7 @@\n             AppenderatorDriverAddResult addResult = driver.add(inputRow, sequenceName, committerSupplier);\n \n             if (addResult.isOk()) {\n-              if (addResult.getNumRowsInSegment() > tuningConfig.getMaxRowsPerSegment()) {\n+              if (addResult.getNumRowsInSegment() >= tuningConfig.getMaxRowsPerSegment()) {\n                 publishSegments(driver, publisher, committerSupplier, sequenceName);\n \n                 sequenceNumber++;\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 325,
        "bugNodeStartChar": 12153,
        "bugNodeLength": 69,
        "fixLineNum": 325,
        "fixNodeStartChar": 12153,
        "fixNodeLength": 70,
        "sourceBeforeFix": "addResult.getNumRowsInSegment() > tuningConfig.getMaxRowsPerSegment()",
        "sourceAfterFix": "addResult.getNumRowsInSegment() >= tuningConfig.getMaxRowsPerSegment()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6ec426667bbf19be4fca84eec48e03152e2cfffe",
        "fixCommitParentSHA1": "ff0ad46407f9d0b70f6a074d14d3bd33dadf8f5e",
        "bugFilePath": "jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java",
        "fixPatch": "diff --git a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\nindex 725d665..e39afca 100644\n--- a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n+++ b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n@@ -58,7 +58,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -74,7 +74,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -99,7 +99,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(nullValue()));\n         assertThat(args.isGenerateBuilders(), is(false));\n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 61,
        "bugNodeStartChar": 2075,
        "bugNodeLength": 18,
        "fixLineNum": 61,
        "fixNodeStartChar": 2075,
        "fixNodeLength": 24,
        "sourceBeforeFix": "is(\"/home/source\")",
        "sourceAfterFix": "endsWith(\"/home/source\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d717709557fffa9bbb9d9e1f682f18f8623f16f9",
        "fixCommitParentSHA1": "b34731b5ffc1a6e4ea65898683c7d6f5d28897b8",
        "bugFilePath": "core/camel-core/src/test/java/org/apache/camel/support/PropertyBindingSupportTest.java",
        "fixPatch": "diff --git a/core/camel-core/src/test/java/org/apache/camel/support/PropertyBindingSupportTest.java b/core/camel-core/src/test/java/org/apache/camel/support/PropertyBindingSupportTest.java\nindex 5c751df..968961f 100644\n--- a/core/camel-core/src/test/java/org/apache/camel/support/PropertyBindingSupportTest.java\n+++ b/core/camel-core/src/test/java/org/apache/camel/support/PropertyBindingSupportTest.java\n@@ -318,7 +318,7 @@\n             PropertyBindingSupport.bindProperty(context, foo, \"bar.work\", \"#class:org.apache.camel.support.Company\");\n             fail(\"Should throw exception\");\n         } catch (PropertyBindingException e) {\n-            assertIsInstanceOf(IllegalArgumentException.class, e.getCause());\n+            assertIsInstanceOf(IllegalStateException.class, e.getCause());\n         }\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 321,
        "bugNodeStartChar": 12884,
        "bugNodeLength": 30,
        "fixLineNum": 321,
        "fixNodeStartChar": 12884,
        "fixNodeLength": 27,
        "sourceBeforeFix": "IllegalArgumentException.class",
        "sourceAfterFix": "IllegalStateException.class"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ee201465a3287e5700c5cba712852a8f4de4bca",
        "fixCommitParentSHA1": "81189e975542a4c5274b418834f3b1c1fccc31d1",
        "bugFilePath": "components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java",
        "fixPatch": "diff --git a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\nindex 4872957..141056a 100644\n--- a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n+++ b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n@@ -35,7 +35,7 @@\n     @Test\r\n     public void testHttpUndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -43,7 +43,7 @@\n     @Test\r\n     public void testHttpsUndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -51,7 +51,7 @@\n     @Test\r\n     public void testHttp4UndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -59,7 +59,7 @@\n     @Test\r\n     public void testHttps4UndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -67,7 +67,7 @@\n     @Test\r\n     public void testHttpPort80ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if http and port 80 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -75,7 +75,7 @@\n     @Test\r\n     public void testHttpsPort443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null,null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if https and port 443 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -83,7 +83,7 @@\n     @Test\r\n     public void testHttpPort8080ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if http and port other than 80 specified\", \"localhost:8080\", result[0]);\r\n     }\r\n@@ -91,7 +91,7 @@\n     @Test\r\n     public void testHttpsPort8443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if https and port other than 443 specified\", \"localhost:8443\", result[0]);\r\n     }\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 38,
        "bugNodeStartChar": 1418,
        "bugNodeLength": 58,
        "fixLineNum": 38,
        "fixNodeStartChar": 1381,
        "fixNodeLength": 64,
        "sourceBeforeFix": "new DynamicAwareEntry(\"http://localhost/test\",null,null)",
        "sourceAfterFix": "new DynamicAwareEntry(\"http://localhost/test\",null,null,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b25df4b81f2bca4e6ba43796512625dab248a9cf",
        "fixCommitParentSHA1": "ef7b6da845e59cfdeadbeeed16933c6424390bbe",
        "bugFilePath": "api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java b/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java\nindex 2bd1dd0..9da2255 100644\n--- a/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java\n+++ b/api/src/main/java/org/openmrs/api/db/hibernate/HibernateFormDAO.java\n@@ -446,7 +446,7 @@\n \t\t\tsubquery.add(Restrictions.eqProperty(\"ff.form\", \"form\"));\r\n \t\t\tsubquery.add(Restrictions.in(\"ff.formFieldId\", anyFormFieldIds));\r\n \t\t\t\r\n-\t\t\tcrit.add(Subqueries.gt(0L, subquery));\r\n+\t\t\tcrit.add(Subqueries.lt(0L, subquery));\r\n \t\t}\r\n \t\t\r\n \t\t//select * from form where len(containingallformfields) = (select count(*) from form_field ff where ff.form_id = form_id and form_field_id in (containingallformfields);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 449,
        "bugNodeStartChar": 15602,
        "bugNodeLength": 27,
        "fixLineNum": 449,
        "fixNodeStartChar": 15154,
        "fixNodeLength": 27,
        "sourceBeforeFix": "Subqueries.gt(0L,subquery)",
        "sourceAfterFix": "Subqueries.lt(0L,subquery)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f96aeff677f2874dfbab1578decfed57438b4361",
        "fixCommitParentSHA1": "42056f20c52407e4c13283794a65d6d71b3a7e41",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\nindex 41fbdf9..660d11c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java\n@@ -566,7 +566,7 @@\n                     return item;\n                 }\n             }\n-            LOGGER.error(\"no property for \" + type + \", \" + format);\n+            LOGGER.debug(\"no property for \" + type + \", \" + format);\n             return null;\n         }\n \n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 569,
        "bugNodeStartChar": 20568,
        "bugNodeLength": 55,
        "fixLineNum": 569,
        "fixNodeStartChar": 20568,
        "fixNodeLength": 55,
        "sourceBeforeFix": "LOGGER.error(\"no property for \" + type + \", \"+ format)",
        "sourceAfterFix": "LOGGER.debug(\"no property for \" + type + \", \"+ format)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "62bc0b861423b8764f479d9d50d29ff82daf2d8f",
        "fixCommitParentSHA1": "6cef03f5a2aee7a51d7bea5b77ca10f379e4e402",
        "bugFilePath": "components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java",
        "fixPatch": "diff --git a/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java b/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\nindex 5473049..fbc0a80 100644\n--- a/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\n+++ b/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\n@@ -46,7 +46,7 @@\n         Map map = ExchangeHelper.convertToMandatoryType(exchange, Map.class, object);\n         OutputStreamWriter out = new OutputStreamWriter(outputStream);\n         try {\n-            CSVConfig conf = createConfig();\n+            CSVConfig conf = getConfig();\n             // lets add fields\n             Set set = map.keySet();\n             for (Object value : set) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 49,
        "bugNodeStartChar": 1940,
        "bugNodeLength": 14,
        "fixLineNum": 49,
        "fixNodeStartChar": 1940,
        "fixNodeLength": 11,
        "sourceBeforeFix": "createConfig()",
        "sourceAfterFix": "getConfig()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0283c451f04f498fc7c7f359ef020d6da46d2a0f",
        "fixCommitParentSHA1": "7a0aa62856356e10cdb55a2443cfa2930661ed90",
        "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java",
        "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\nindex 06ea407..2d56166 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/JvmGcDetailedBoMapper.java\n@@ -31,7 +31,7 @@\n     public JvmGcDetailedBo map(TJvmGcDetailed tJvmGcDetailed) {\n         JvmGcDetailedBo jvmGcDetailedBo = new JvmGcDetailedBo();\n         jvmGcDetailedBo.setGcNewCount(tJvmGcDetailed.getJvmGcNewCount());\n-        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewCount());\n+        jvmGcDetailedBo.setGcNewTime(tJvmGcDetailed.getJvmGcNewTime());\n         jvmGcDetailedBo.setCodeCacheUsed(tJvmGcDetailed.getJvmPoolCodeCacheUsed());\n         jvmGcDetailedBo.setNewGenUsed(tJvmGcDetailed.getJvmPoolNewGenUsed());\n         jvmGcDetailedBo.setOldGenUsed(tJvmGcDetailed.getJvmPoolOldGenUsed());\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 34,
        "bugNodeStartChar": 1299,
        "bugNodeLength": 33,
        "fixLineNum": 34,
        "fixNodeStartChar": 1299,
        "fixNodeLength": 32,
        "sourceBeforeFix": "tJvmGcDetailed.getJvmGcNewCount()",
        "sourceAfterFix": "tJvmGcDetailed.getJvmGcNewTime()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "53c0cde20042683e48266819a47099612e69d5bd",
        "fixCommitParentSHA1": "08a1f24dc0f17c4b32ebda1ac39be3ee01434f0f",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java b/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\nindex c486ce0..e556f1c 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\n@@ -71,7 +71,7 @@\n                 + \", \\\"javaType\\\": \\\"java.lang.String\\\", \\\"deprecated\\\": \\\"false\\\", \\\"secret\\\": \\\"false\\\", \\\"defaultValue\\\": \\\"\\\\\\\"\\\"\"));\n \n         List<Map<String, String>> rows = JsonSchemaHelper.parseJsonSchema(\"properties\", json, true);\n-        assertEquals(9, rows.size());\n+        assertEquals(10, rows.size());\n \n         Map<String, String> found = null;\n         for (Map<String, String> row : rows) {\n@@ -105,7 +105,7 @@\n                 + \" \\\"deprecated\\\": \\\"false\\\", \\\"secret\\\": \\\"false\\\", \\\"defaultValue\\\": \\\"\\\\\\\\\\\", \\\"description\\\": \\\"The escape character.\\\"\"));\n \n         List<Map<String, String>> rows = JsonSchemaHelper.parseJsonSchema(\"properties\", json, true);\n-        assertEquals(15, rows.size());\n+        assertEquals(16, rows.size());\n \n         Map<String, String> found = null;\n         for (Map<String, String> row : rows) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 108,
        "bugNodeStartChar": 5176,
        "bugNodeLength": 29,
        "fixLineNum": 108,
        "fixNodeStartChar": 5176,
        "fixNodeLength": 29,
        "sourceBeforeFix": "assertEquals(15,rows.size())",
        "sourceAfterFix": "assertEquals(16,rows.size())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "89f3f214bc93ff306602ed8945b30aaa92523137",
        "fixCommitParentSHA1": "1c01ad33d67824664e3a479abdbfeb0c2db0cdcf",
        "bugFilePath": "src/main/java/com/ning/http/client/AsyncHttpClient.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/AsyncHttpClient.java b/src/main/java/com/ning/http/client/AsyncHttpClient.java\nindex 3555bd3..467fd24 100755\n--- a/src/main/java/com/ning/http/client/AsyncHttpClient.java\n+++ b/src/main/java/com/ning/http/client/AsyncHttpClient.java\n@@ -363,7 +363,7 @@\n \n     @Override\n     protected void finalize() throws Throwable {\n-        if (!isClosed.get()) {\n+        if (isClosed.get()) {\n             close();\n         }\n         super.finalize();\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 366,
        "bugNodeStartChar": 13916,
        "bugNodeLength": 15,
        "fixLineNum": 366,
        "fixNodeStartChar": 13916,
        "fixNodeLength": 14,
        "sourceBeforeFix": "!isClosed.get()",
        "sourceAfterFix": "isClosed.get()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c7203473b49f29927a4f5e9438b5e38ab21e3428",
        "fixCommitParentSHA1": "94ed48aef796951766be54db834dc45065295b34",
        "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java",
        "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\nindex ed53bd5..43a895d 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/service/AgentServiceImpl.java\n@@ -131,7 +131,7 @@\n \n     @Override\n     public PinpointRouteResponse invoke(AgentInfo agentInfo, byte[] payload) throws TException {\n-        return invoke(agentInfo, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfo, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n@@ -161,7 +161,7 @@\n     @Override\n     public Map<AgentInfo, PinpointRouteResponse> invoke(List<AgentInfo> agentInfoList, byte[] payload)\n             throws TException {\n-        return invoke(agentInfoList, payload, DEFUALT_FUTURE_TIMEOUT);\n+        return invoke(agentInfoList, payload, DEFAULT_FUTURE_TIMEOUT);\n     }\n \n     @Override\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 134,
        "bugNodeStartChar": 5053,
        "bugNodeLength": 50,
        "fixLineNum": 134,
        "fixNodeStartChar": 5053,
        "fixNodeLength": 50,
        "sourceBeforeFix": "invoke(agentInfo,payload,DEFUALT_FUTURE_TIMEOUT)",
        "sourceAfterFix": "invoke(agentInfo,payload,DEFAULT_FUTURE_TIMEOUT)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1a9bb447fd14415ef270f3dd7af8a0d4e0017177",
        "fixCommitParentSHA1": "20f724d2f2fab6996c7588e6d0115f35bfde8d32",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\nindex fe2b6df..994fe7d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n@@ -87,7 +87,7 @@\n      */\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a) {\n         AtmosphereResource r = null;\n@@ -114,7 +114,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler) {\n@@ -135,7 +135,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler,\n@@ -220,7 +220,7 @@\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n                 noOps,\n-                DefaultAtmosphereRequest.newInstance(),\n+                AtmosphereRequest.newInstance(),\n                 response,\n                 config.framework().getAsyncSupport(),\n                 noOpsHandler);\n@@ -231,11 +231,11 @@\n      *\n      * @param config an {@link AtmosphereConfig}\n      * @param uuid   a String representing a UUID\n-     * @param request a {@link DefaultAtmosphereRequest}\n+     * @param request a {@link AtmosphereRequest}\n      * @return\n      */\n     @Override\n-    public final AtmosphereResource create(AtmosphereConfig config, String uuid, DefaultAtmosphereRequest request) {\n+    public final AtmosphereResource create(AtmosphereConfig config, String uuid, AtmosphereRequest request) {\n         AtmosphereResponse response = AtmosphereResponse.newInstance();\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 90,
        "bugNodeStartChar": 3596,
        "bugNodeLength": 32,
        "fixLineNum": 90,
        "fixNodeStartChar": 3596,
        "fixNodeLength": 25,
        "sourceBeforeFix": "DefaultAtmosphereRequest request",
        "sourceAfterFix": "AtmosphereRequest request"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "41e1d069bfa275a85a4a963c2ec5f437570f76f4",
        "fixCommitParentSHA1": "c739a779b8f03cc21665d1f0d877de62ffaabc9f",
        "bugFilePath": "bundles/core/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java",
        "fixPatch": "diff --git a/bundles/core/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java b/bundles/core/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\nindex ff0bf09..d1f8242 100644\n--- a/bundles/core/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\n+++ b/bundles/core/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java\n@@ -194,7 +194,7 @@\n \t\t\t}\n \t\t}\n \n-\t\tCollection<Item> items = Collections.synchronizedCollection(new HashSet<Item>());\n+\t\tCollection<Item> items = Collections.synchronizedCollection(new ArrayList<Item>());\n \t\titemMap.put(provider, items);\n \n \t\tfor(Item item : provider.getItems()) {\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 197,
        "bugNodeStartChar": 6911,
        "bugNodeLength": 13,
        "fixLineNum": 197,
        "fixNodeStartChar": 6911,
        "fixNodeLength": 15,
        "sourceBeforeFix": "HashSet<Item>",
        "sourceAfterFix": "ArrayList<Item>"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "20b4f8b2195a1bf214f63e10b1bbca4690c0290f",
        "fixCommitParentSHA1": "9f9a2a556986cc67452081f0bd763e3ed1da8f75",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/messaging/netty/Context.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/messaging/netty/Context.java b/storm-core/src/jvm/backtype/storm/messaging/netty/Context.java\nindex 8f2b17f..f592aff 100644\n--- a/storm-core/src/jvm/backtype/storm/messaging/netty/Context.java\n+++ b/storm-core/src/jvm/backtype/storm/messaging/netty/Context.java\n@@ -63,7 +63,7 @@\n                     Executors.newCachedThreadPool(workerFactory));\n         }\n         \n-        int otherWorkers = Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS)) - 1;\n+        int otherWorkers = Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS), 1) - 1;\n         int poolSize = Math.min(Math.max(1, otherWorkers), MAX_CLIENT_SCHEDULER_THREAD_POOL_SIZE);\n         clientScheduleService = Executors.newScheduledThreadPool(poolSize, new NettyRenameThreadFactory(\"client-schedule-service\"));\n     }\n",
        "projectName": "apache.storm",
        "bugLineNum": 66,
        "bugNodeStartChar": 2825,
        "bugNodeLength": 53,
        "fixLineNum": 66,
        "fixNodeStartChar": 2825,
        "fixNodeLength": 56,
        "sourceBeforeFix": "Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS))",
        "sourceAfterFix": "Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS),1)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 627,
        "bugNodeStartChar": 20973,
        "bugNodeLength": 42,
        "fixLineNum": 627,
        "fixNodeStartChar": 20347,
        "fixNodeLength": 44,
        "sourceBeforeFix": "GL11.glTexParameter(target,pname,params)",
        "sourceAfterFix": "GL11.glTexParameteriv(target,pname,params)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a295b91c37f681199a83fdb963344c19e0d015c0",
        "fixCommitParentSHA1": "639746c600fda2645e33223cb7c6607cf7163783",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/examples/TestApp.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\nindex c8b085e..e583dd5 100644\n--- a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n+++ b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n@@ -631,7 +631,7 @@\n     private void handleAtomicNumberSet(String[] args) {\n         long v = 0;\n         if (args.length > 1) {\n-            v = Long.valueOf(args[1]);\n+            v = Long.parseLong(args[1]);\n         }\n         getAtomicNumber().set(v);\n         println(getAtomicNumber().get());\n@@ -848,7 +848,7 @@\n \n     protected void handleMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMap().tryLock(key);\n@@ -971,7 +971,7 @@\n \n     protected void handleMultiMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMultiMap().tryLock(key);\n@@ -1019,7 +1019,7 @@\n             if (timeout == null) {\n                 println(lock.tryLock());\n             } else {\n-                long time = Long.valueOf(timeout);\n+                long time = Long.parseLong(timeout);\n                 try {\n                     println(lock.tryLock(time, TimeUnit.SECONDS));\n                 } catch (InterruptedException e) {\n@@ -1232,7 +1232,7 @@\n     protected void handleQOffer(String[] args) {\n         long timeout = 0;\n         if (args.length > 2) {\n-            timeout = Long.valueOf(args[2]);\n+            timeout = Long.parseLong(args[2]);\n         }\n         try {\n             boolean offered = getQueue().offer(args[1], timeout, TimeUnit.SECONDS);\n@@ -1253,7 +1253,7 @@\n     protected void handleQPoll(String[] args) {\n         long timeout = 0;\n         if (args.length > 1) {\n-            timeout = Long.valueOf(args[1]);\n+            timeout = Long.parseLong(args[1]);\n         }\n         try {\n             println(getQueue().poll(timeout, TimeUnit.SECONDS));\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 974,
        "bugNodeStartChar": 33032,
        "bugNodeLength": 21,
        "fixLineNum": 974,
        "fixNodeStartChar": 33032,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Long.valueOf(args[2])",
        "sourceAfterFix": "Long.parseLong(args[2])"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f7f180830156c75d419b946268840d79d2a0b747",
        "fixCommitParentSHA1": "4d03e9de6bffe81a2902128064a8fad23a7f75f5",
        "bugFilePath": "components/camel-xmlrpc/src/main/java/org/apache/camel/component/xmlrpc/XmlRpcEndpoint.java",
        "fixPatch": "diff --git a/components/camel-xmlrpc/src/main/java/org/apache/camel/component/xmlrpc/XmlRpcEndpoint.java b/components/camel-xmlrpc/src/main/java/org/apache/camel/component/xmlrpc/XmlRpcEndpoint.java\nindex 343bf43..fc05c61 100644\n--- a/components/camel-xmlrpc/src/main/java/org/apache/camel/component/xmlrpc/XmlRpcEndpoint.java\n+++ b/components/camel-xmlrpc/src/main/java/org/apache/camel/component/xmlrpc/XmlRpcEndpoint.java\n@@ -150,7 +150,8 @@\n         }\n \n         Map<String, Object> params = new HashMap<String, Object>();\n-        IntrospectionSupport.getProperties(configuration, params, null);\n+        // do not include null values\n+        IntrospectionSupport.getProperties(configuration, params, null, false);\n         setProperties(clientConfig, params);\n     }\n }\n",
        "projectName": "apache.camel",
        "bugLineNum": 153,
        "bugNodeStartChar": 4949,
        "bugNodeLength": 63,
        "fixLineNum": 154,
        "fixNodeStartChar": 4987,
        "fixNodeLength": 70,
        "sourceBeforeFix": "IntrospectionSupport.getProperties(configuration,params,null)",
        "sourceAfterFix": "IntrospectionSupport.getProperties(configuration,params,null,false)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d07ad6127eeaed8db9233a12731e9c7dce2ec2c9",
        "fixCommitParentSHA1": "6491f0b0c08882b64303ec8d6f8bd3c464246b9a",
        "bugFilePath": "src/api/org/openmrs/hl7/handler/ORUR01Handler.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/hl7/handler/ORUR01Handler.java b/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\nindex de5ed9e..68d8290 100644\n--- a/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\n+++ b/src/api/org/openmrs/hl7/handler/ORUR01Handler.java\n@@ -260,7 +260,7 @@\n \t\t\tlog.debug(\"Current thread: \" + Thread.currentThread());\r\n \t\t\tlog.debug(\"Creating the encounter object\");\r\n \t\t}\r\n-\t\tContext.getEncounterService().createEncounter(encounter);\r\n+\t\tContext.getEncounterService().saveEncounter(encounter);\r\n \t\t\r\n \t\t// Notify HL7 service that we have created a new encounter, allowing\r\n \t\t// features/modules to trigger on HL7-generated encounters.\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 263,
        "bugNodeStartChar": 9273,
        "bugNodeLength": 56,
        "fixLineNum": 263,
        "fixNodeStartChar": 9011,
        "fixNodeLength": 54,
        "sourceBeforeFix": "Context.getEncounterService().createEncounter(encounter)",
        "sourceAfterFix": "Context.getEncounterService().saveEncounter(encounter)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e97382e401f58108ad645dee2076ddd110a3e7e9",
        "fixCommitParentSHA1": "b9a6bdc84fd9fdc843aa859216eee052f24f21ff",
        "bugFilePath": "presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java",
        "fixPatch": "diff --git a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\nindex 71efe1b..bb963b5 100644\n--- a/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n+++ b/presto-raptor/src/main/java/com/facebook/presto/raptor/storage/FileStorageService.java\n@@ -119,8 +119,8 @@\n             throw new IOException(\"Failed to list directory: \" + dir);\n         }\n         for (File file : files) {\n-            Files.delete(file.toPath());\n+            Files.deleteIfExists(file.toPath());\n         }\n-        Files.delete(dir.toPath());\n+        Files.deleteIfExists(dir.toPath());\n     }\n }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 122,
        "bugNodeStartChar": 3739,
        "bugNodeLength": 27,
        "fixLineNum": 122,
        "fixNodeStartChar": 3739,
        "fixNodeLength": 35,
        "sourceBeforeFix": "Files.delete(file.toPath())",
        "sourceAfterFix": "Files.deleteIfExists(file.toPath())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6618cef776cf1c9ce67ff8ee461412110ca5ada7",
        "fixCommitParentSHA1": "948ab73523bed79d1672884207fd3a06f33d9572",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\nindex b9250d6..f157006 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n@@ -139,7 +139,7 @@\n \t\t\t\tqueryServiceAddressesFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<String> queryServiceAddresses, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting paths for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting paths for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tfor (String queryServiceAddress : queryServiceAddresses) {\n \t\t\t\t\t\t\t\tretrieveAndQueryMetrics(queryServiceAddress);\n@@ -157,7 +157,7 @@\n \t\t\t\ttaskManagerQueryServiceGatewaysFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<Tuple2<ResourceID, String>> queryServiceGateways, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting TaskManager's path for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting TaskManager's path for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tList<String> taskManagersToRetain = queryServiceGateways\n \t\t\t\t\t\t\t\t.stream()\n@@ -175,7 +175,7 @@\n \t\t\t\t\texecutor);\n \t\t\t}\n \t\t} catch (Exception e) {\n-\t\t\tLOG.warn(\"Exception while fetching metrics.\", e);\n+\t\t\tLOG.debug(\"Exception while fetching metrics.\", e);\n \t\t}\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 142,
        "bugNodeStartChar": 5332,
        "bugNodeLength": 66,
        "fixLineNum": 142,
        "fixNodeStartChar": 5332,
        "fixNodeLength": 67,
        "sourceBeforeFix": "LOG.warn(\"Requesting paths for query services failed.\",throwable)",
        "sourceAfterFix": "LOG.debug(\"Requesting paths for query services failed.\",throwable)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "0649166c8fbaf1615c77f8ef37bbb3e385d6a83e",
        "fixCommitParentSHA1": "41206e4d3f687599d125a6fb7c80547a39f85152",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java\nindex 3001575..5a8118c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/ImportSemanticAnalyzer.java\n@@ -309,7 +309,8 @@\n               Warehouse.makePartPath(addPartitionDesc.getPartSpec()));\n         }\n       } else {\n-        tgtPath = new Path(tblDesc.getLocation());\n+        tgtPath = new Path(tblDesc.getLocation(),\n+            Warehouse.makePartPath(addPartitionDesc.getPartSpec()));\n       }\n       checkTargetLocationEmpty(fs, tgtPath);\n       addPartitionDesc.setLocation(tgtPath.toString());\n",
        "projectName": "apache.hive",
        "bugLineNum": 312,
        "bugNodeStartChar": 13972,
        "bugNodeLength": 31,
        "fixLineNum": 312,
        "fixNodeStartChar": 13972,
        "fixNodeLength": 99,
        "sourceBeforeFix": "new Path(tblDesc.getLocation())",
        "sourceAfterFix": "new Path(tblDesc.getLocation(),Warehouse.makePartPath(addPartitionDesc.getPartSpec()))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1163,
        "bugNodeStartChar": 62372,
        "bugNodeLength": 87,
        "fixLineNum": 1163,
        "fixNodeStartChar": 62372,
        "fixNodeLength": 87,
        "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\",true))",
        "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\",true))"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "b614342e519c1499a7abc2b88121773db6bc2b35",
        "fixCommitParentSHA1": "8faab3e3ca83562925aab9befb377c4c4dfe030c",
        "bugFilePath": "src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\nindex 6aee143..9c80680 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n@@ -75,7 +75,7 @@\n           Transition transition = parser.transitionIndex.get(predictedTransition.object());\n           State newState = transition.apply(state, predictedTransition.score());\n           // System.err.println(\"  Transition: \" + transition + \" (\" + predictedTransition.score() + \")\");\n-          if (bestState == null || newState.score() < bestState.score()) {\n+          if (bestState == null || bestState.score() < newState.score()) {\n             bestState = newState;\n           }\n           beam.add(newState);\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 78,
        "bugNodeStartChar": 2935,
        "bugNodeLength": 16,
        "fixLineNum": 78,
        "fixNodeStartChar": 2935,
        "fixNodeLength": 17,
        "sourceBeforeFix": "newState.score()",
        "sourceAfterFix": "bestState.score()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0757d24d91bfe9ea2256c19aa798a5fa10bb6692",
        "fixCommitParentSHA1": "6ad626de491fe36df67d74ef17baf63d4125e10a",
        "bugFilePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointSerializationTests.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointSerializationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointSerializationTests.java\nindex 6b4c4a6..88938e8 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointSerializationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpointSerializationTests.java\n@@ -166,7 +166,7 @@\n \t\tMap<String, Object> map = (Map<String, Object>) nestedProperties\n \t\t\t\t.get(\"properties\");\n \t\tassertNotNull(map);\n-\t\tassertEquals(2, map.size());\n+\t\tassertEquals(3, map.size());\n \t\tassertEquals(null, (map.get(\"map\")));\n \t}\n \n@@ -206,7 +206,8 @@\n \t\tMap<String, Object> map = (Map<String, Object>) nestedProperties\n \t\t\t\t.get(\"properties\");\n \t\tassertNotNull(map);\n-\t\tassertEquals(2, map.size());\n+\t\t// Only one property is mapped in metadata so the others are ignored\n+\t\tassertEquals(1, map.size());\n \t\tassertEquals(\"foo\", ((Map<String, Object>) map.get(\"map\")).get(\"name\"));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 169,
        "bugNodeStartChar": 6352,
        "bugNodeLength": 27,
        "fixLineNum": 169,
        "fixNodeStartChar": 6352,
        "fixNodeLength": 27,
        "sourceBeforeFix": "assertEquals(2,map.size())",
        "sourceAfterFix": "assertEquals(3,map.size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1682d9037d8e9f49bbccdfe682553203abfea665",
        "fixCommitParentSHA1": "1f421be2133108bcd2d851811deb2157f887be03",
        "bugFilePath": "nephele/nephele-server/src/main/java/eu/stratosphere/nephele/io/channels/FileBuffer.java",
        "fixPatch": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/io/channels/FileBuffer.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/io/channels/FileBuffer.java\nindex f5b7404..ee8d456 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/io/channels/FileBuffer.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/io/channels/FileBuffer.java\n@@ -183,7 +183,7 @@\n \t\t\t}\n \n \t\t\tbytesWritten += b;\n-\t\t\tthis.totalBytesWritten += bytesWritten;\n+\t\t\tthis.totalBytesWritten += b;\n \t\t\tdiff = this.bufferSize - this.totalBytesWritten;\n \t\t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 186,
        "bugNodeStartChar": 5316,
        "bugNodeLength": 38,
        "fixLineNum": 186,
        "fixNodeStartChar": 5316,
        "fixNodeLength": 27,
        "sourceBeforeFix": "this.totalBytesWritten+=bytesWritten",
        "sourceAfterFix": "this.totalBytesWritten+=b"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830",
        "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 61,
        "bugNodeStartChar": 2526,
        "bugNodeLength": 11,
        "fixLineNum": 61,
        "fixNodeStartChar": 2466,
        "fixNodeLength": 17,
        "sourceBeforeFix": "String text",
        "sourceAfterFix": "CharSequence text"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cc3afab8cec819419e52eb1fdc990625e0afd688",
        "fixCommitParentSHA1": "37e4372f2e5fb00241ad9514bbd4bee12e24d896",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 31b5ff0..411c7b0 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -52,7 +52,7 @@\n \n   public static void createFiles() throws IOException {\n     long startTimeMs = CommonUtils.getCurrentMs();\n-    for (int k = 0; k < THREADS; k ++) {\n+    for (int k = 0; k < FILES; k++) {\n       int fileId = MTC.createFile(FILE_NAME + (k + BASE_FILE_NUMBER));\n       CommonUtils.printTimeTakenMs(startTimeMs, LOG, \"user_createFiles with fileId \" + fileId);\n     }\n@@ -109,7 +109,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -134,7 +134,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -180,7 +180,7 @@\n       mBuf.flip();\n       for (int pId = mLeft; pId < mRight; pId ++) {\n         long startTimeMs = System.currentTimeMillis();\n-        TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+        TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n         OutStream os = file.getOutStream(WriteType.MUST_CACHE);\n         for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n           mBuf.putInt(0, k + mWorkerId);\n@@ -216,7 +216,7 @@\n         LOG.info(\"Verifying the reading data...\");\n \n         for (int pId = mLeft; pId < mRight; pId ++) {\n-          TachyonFile file = mTC.getFile(FILE_NAME + mWorkerId);\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           IntBuffer intBuf;\n           intBuf = buf.DATA.order(ByteOrder.nativeOrder()).asIntBuffer();\n@@ -238,7 +238,7 @@\n       if (TACHYON_STREAMING_READ) {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           InputStream is = file.getInStream(ReadType.CACHE);\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n@@ -253,7 +253,7 @@\n       } else {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             buf.DATA.get(mBuf.array());\n@@ -323,7 +323,7 @@\n       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n             mBuf.putInt(0, k + mWorkerId);\n@@ -335,7 +335,7 @@\n       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 112,
        "bugNodeStartChar": 3675,
        "bugNodeLength": 28,
        "fixLineNum": 112,
        "fixNodeStartChar": 3675,
        "fixNodeLength": 24,
        "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER",
        "sourceAfterFix": "times + BASE_FILE_NUMBER"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d7cd3a0af671b0fcf30b7cd4819fa9026f8d92f8",
        "fixCommitParentSHA1": "4f693872b9bfd8272298409f71e96c824f71e77e",
        "bugFilePath": "src/main/java/redis/clients/jedis/JedisCluster.java",
        "fixPatch": "diff --git a/src/main/java/redis/clients/jedis/JedisCluster.java b/src/main/java/redis/clients/jedis/JedisCluster.java\nindex f6cb6fd..d39d43d 100644\n--- a/src/main/java/redis/clients/jedis/JedisCluster.java\n+++ b/src/main/java/redis/clients/jedis/JedisCluster.java\n@@ -394,7 +394,7 @@\n \t\tmaxRedirections) {\n \t    @Override\n \t    public Long execute(Jedis connection) {\n-\t\treturn connection.hdel(key);\n+\t\treturn connection.hlen(key);\n \t    }\n \t}.run(key);\n     }\n",
        "projectName": "xetorthio.jedis",
        "bugLineNum": 397,
        "bugNodeStartChar": 10611,
        "bugNodeLength": 20,
        "fixLineNum": 397,
        "fixNodeStartChar": 10611,
        "fixNodeLength": 20,
        "sourceBeforeFix": "connection.hdel(key)",
        "sourceAfterFix": "connection.hlen(key)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cd699c562ec26d3909af08afb04de6080e4ad18f",
        "fixCommitParentSHA1": "73ebd3e0b1039d9509499f9953424e07286ea50d",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskManagerTest.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskManagerTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskManagerTest.java\nindex ba08a9f..2da8b9f 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskManagerTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/taskmanager/TaskManagerTest.java\n@@ -387,7 +387,7 @@\n \t}\n \t\n \tpublic static TaskManager createTaskManager(JobManager jm) throws Exception {\n-\t\tInetAddress localhost = InetAddress.getLoopbackAddress();\n+\t\tInetAddress localhost = InetAddress.getLocalHost();\n \t\tInetSocketAddress jmMockAddress = new InetSocketAddress(localhost, 55443);\n \t\t\n \t\tConfiguration cfg = new Configuration();\n",
        "projectName": "apache.flink",
        "bugLineNum": 390,
        "bugNodeStartChar": 14227,
        "bugNodeLength": 32,
        "fixLineNum": 390,
        "fixNodeStartChar": 14227,
        "fixNodeLength": 26,
        "sourceBeforeFix": "InetAddress.getLoopbackAddress()",
        "sourceAfterFix": "InetAddress.getLocalHost()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "646eab8942d2502ace75eef4ca09639e3861e594",
        "fixCommitParentSHA1": "5fd356a2fb97c994951a8d96dc91ffae3214c783",
        "bugFilePath": "underfs/local/src/main/java/alluxio/underfs/local/LocalUnderFileSystem.java",
        "fixPatch": "diff --git a/underfs/local/src/main/java/alluxio/underfs/local/LocalUnderFileSystem.java b/underfs/local/src/main/java/alluxio/underfs/local/LocalUnderFileSystem.java\nindex 63ef766..1cbfe21 100644\n--- a/underfs/local/src/main/java/alluxio/underfs/local/LocalUnderFileSystem.java\n+++ b/underfs/local/src/main/java/alluxio/underfs/local/LocalUnderFileSystem.java\n@@ -273,7 +273,7 @@\n       }\n     } catch (IOException e) {\n       LOG.error(\"Fail to set owner for {} with user: {}, group: {}\", path, user, group);\n-      LOG.debug(e);\n+      LOG.debug(\"Exception: \", e);\n       LOG.warn(\"In order for Alluxio to set local files with the correct user and groups, \"\n           + \"Alluxio should be the local file system superusers.\");\n       if (!Configuration.getBoolean(PropertyKey.UNDERFS_ALLOW_SET_OWNER_FAILURE)) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 276,
        "bugNodeStartChar": 8256,
        "bugNodeLength": 12,
        "fixLineNum": 276,
        "fixNodeStartChar": 8256,
        "fixNodeLength": 27,
        "sourceBeforeFix": "LOG.debug(e)",
        "sourceAfterFix": "LOG.debug(\"Exception: \",e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d70d6a71ee43414e3ad54bacc9ac609dcd2efca9",
        "fixCommitParentSHA1": "da1108ccc425babb87d4363d801ef9fb943608e2",
        "bugFilePath": "core/src/test/java/tachyon/client/TachyonFSTest.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/client/TachyonFSTest.java b/core/src/test/java/tachyon/client/TachyonFSTest.java\nindex df6842d..194f4b1 100644\n--- a/core/src/test/java/tachyon/client/TachyonFSTest.java\n+++ b/core/src/test/java/tachyon/client/TachyonFSTest.java\n@@ -262,9 +262,9 @@\n   }\n \n   private void getTestHelper(TachyonFS tfs) throws IOException {\n-    int fileId = mTfs.createFile(new TachyonURI(\"/root/testFile1\"));\n+    int fileId = tfs.createFile(new TachyonURI(\"/root/testFile1\"));\n     Assert.assertEquals(3, fileId);\n-    Assert.assertNotNull(mTfs.getFile(fileId));\n+    Assert.assertNotNull(tfs.getFile(fileId));\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 265,
        "bugNodeStartChar": 10302,
        "bugNodeLength": 50,
        "fixLineNum": 265,
        "fixNodeStartChar": 10302,
        "fixNodeLength": 49,
        "sourceBeforeFix": "mTfs.createFile(new TachyonURI(\"/root/testFile1\"))",
        "sourceAfterFix": "tfs.createFile(new TachyonURI(\"/root/testFile1\"))"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dd20434290eb6ae6dff133d70073e35a3998d362",
        "fixCommitParentSHA1": "cb0dee8b09d8cd27f0b817b0317b68501fbac924",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex 989bda8..92adc88 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -121,7 +121,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -158,7 +158,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -232,7 +232,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -292,7 +292,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -318,14 +318,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 234,
        "bugNodeStartChar": 8498,
        "bugNodeLength": 128,
        "fixLineNum": 234,
        "fixNodeStartChar": 8498,
        "fixNodeLength": 123,
        "sourceBeforeFix": "LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId + \" will not be in TachyonStorage\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId + \" will not be in TachyonStorage\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "8561cd53e8c439965aa34c89d0e5016f78ca7e89",
        "fixCommitParentSHA1": "0d97f81ed03fa08795e1168a3f649bbb8dc2fcff",
        "bugFilePath": "hazelcast-cloud/src/main/java/com/hazelcast/aws/AWSClient.java",
        "fixPatch": "diff --git a/hazelcast-cloud/src/main/java/com/hazelcast/aws/AWSClient.java b/hazelcast-cloud/src/main/java/com/hazelcast/aws/AWSClient.java\nindex 2644317..ac573bf 100644\n--- a/hazelcast-cloud/src/main/java/com/hazelcast/aws/AWSClient.java\n+++ b/hazelcast-cloud/src/main/java/com/hazelcast/aws/AWSClient.java\n@@ -42,12 +42,12 @@\n     }\n \n     public Collection<String> getPrivateIpAddresses() throws Exception {\n-        final Map<String, String> result = new DescribeInstances(awsConfig).execute(endpoint);\n+        final Map<String, String> result = new DescribeInstances(awsConfig).execute();\n         return result.keySet();\n     }\n \n     public Map<String, String> getAddresses() throws Exception {\n-        return new DescribeInstances(awsConfig).execute(endpoint);\n+        return new DescribeInstances(awsConfig).execute();\n     }\n \n     public void setEndpoint(String s) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 50,
        "bugNodeStartChar": 1702,
        "bugNodeLength": 50,
        "fixLineNum": 50,
        "fixNodeStartChar": 1702,
        "fixNodeLength": 42,
        "sourceBeforeFix": "new DescribeInstances(awsConfig).execute(endpoint)",
        "sourceAfterFix": "new DescribeInstances(awsConfig).execute()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2ea3307765d2fe33b01481c853f15d4b4d927d02",
        "fixCommitParentSHA1": "a1a5f57bffc85b5e0585466fd05c84e593fee996",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\nindex 2e02ad2..4978387 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparator.java\n@@ -86,7 +86,7 @@\n     if (c != 0) return c;\n \n     //type\n-    c = (0xff & a.getTypeByte()) - (0xff & b.getTypeByte());\n+    c = (0xff & b.getTypeByte()) - (0xff & a.getTypeByte());\n     if (c != 0) return c;\n \n     //mvccVersion: later sorts first\n",
        "projectName": "apache.hbase",
        "bugLineNum": 89,
        "bugNodeStartChar": 3479,
        "bugNodeLength": 15,
        "fixLineNum": 89,
        "fixNodeStartChar": 3479,
        "fixNodeLength": 15,
        "sourceBeforeFix": "a.getTypeByte()",
        "sourceAfterFix": "b.getTypeByte()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "55adfbd5ac83c09769ff052f107e0b399e088fee",
        "fixCommitParentSHA1": "76d30c34de9de3a2710b9035904429d3182bf8c8",
        "bugFilePath": "components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpServerTestSupport.java",
        "fixPatch": "diff --git a/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpServerTestSupport.java b/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpServerTestSupport.java\nindex 1c8b5c6..d057f5f 100644\n--- a/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpServerTestSupport.java\n+++ b/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FtpServerTestSupport.java\n@@ -136,7 +136,7 @@\n \n     protected FtpServerFactory createFtpServerFactory() throws Exception {\n         assertTrue(USERS_FILE.exists());\n-        assertTrue(\"Port number is not initialized in an expected range: \" + port, port > 21000);\n+        assertTrue(\"Port number is not initialized in an expected range: \" + port, port >= 21000);\n \n         NativeFileSystemFactory fsf = new NativeFileSystemFactory();\n         fsf.setCreateHome(true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 139,
        "bugNodeStartChar": 4900,
        "bugNodeLength": 12,
        "fixLineNum": 139,
        "fixNodeStartChar": 4900,
        "fixNodeLength": 13,
        "sourceBeforeFix": "port > 21000",
        "sourceAfterFix": "port >= 21000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c1a5897fe36866f56549511b73ad8db7c8fe32b",
        "fixCommitParentSHA1": "dfe30cd1f019049a20314e3f9406bfbff4e56a6d",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java b/camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java\nindex 4d700e3..625adfc 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/file/GenericFileProducer.java\n@@ -102,7 +102,7 @@\n                         // we override the target so we do this by deleting it so the temp file can be renamed later\n                         // with success as the existing target file have been deleted\n                         if (log.isTraceEnabled()) {\n-                            log.trace(\"Deleting existing file: \" + tempTarget);\n+                            log.trace(\"Deleting existing file: \" + target);\n                         }\n                         if (!operations.deleteFile(target)) {\n                             throw new GenericFileOperationFailedException(\"Cannot delete file: \" + target);\n",
        "projectName": "apache.camel",
        "bugLineNum": 105,
        "bugNodeStartChar": 4430,
        "bugNodeLength": 39,
        "fixLineNum": 105,
        "fixNodeStartChar": 4430,
        "fixNodeLength": 35,
        "sourceBeforeFix": "\"Deleting existing file: \" + tempTarget",
        "sourceAfterFix": "\"Deleting existing file: \" + target"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "0e8e5ba702fbbea71f8cffc063e2d873cbebe83e",
        "fixCommitParentSHA1": "c5d1b676e2638bd1e65c812b39bf4bab4fdfbd19",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\nindex 57fb3d0..38d5638 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n@@ -310,7 +310,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -330,7 +330,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -350,7 +350,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 333,
        "bugNodeStartChar": 14066,
        "bugNodeLength": 93,
        "fixLineNum": 333,
        "fixNodeStartChar": 14066,
        "fixNodeLength": 93,
        "sourceBeforeFix": "Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage(\"helloForNone\"))",
        "sourceAfterFix": "Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"),e.getCause().getMessage())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 372,
        "bugNodeStartChar": 13498,
        "bugNodeLength": 743,
        "fixLineNum": 372,
        "fixNodeStartChar": 13127,
        "fixNodeLength": 725,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c26f75c7940a77e85f38406258c453a08ff75376",
        "fixCommitParentSHA1": "5d9193eb8fcb699722980d5e5680557553c3ee39",
        "bugFilePath": "components/camel-aws-sqs/src/test/java/org/apache/camel/component/aws/sqs/SqsFilterMessagesWithNoDeleteTest.java",
        "fixPatch": "diff --git a/components/camel-aws-sqs/src/test/java/org/apache/camel/component/aws/sqs/SqsFilterMessagesWithNoDeleteTest.java b/components/camel-aws-sqs/src/test/java/org/apache/camel/component/aws/sqs/SqsFilterMessagesWithNoDeleteTest.java\nindex 4b0cdc2..b5c2237 100644\n--- a/components/camel-aws-sqs/src/test/java/org/apache/camel/component/aws/sqs/SqsFilterMessagesWithNoDeleteTest.java\n+++ b/components/camel-aws-sqs/src/test/java/org/apache/camel/component/aws/sqs/SqsFilterMessagesWithNoDeleteTest.java\n@@ -67,7 +67,7 @@\n         });\n         MockEndpoint result = MockEndpoint.resolve(ctx, \"mock:result\");\n         clientMock.setScheduler(ctx.getExecutorServiceManager().newScheduledThreadPool(clientMock, \"ClientMock Scheduler\", 1));\n-        registry.put(\"amazonSQSClient\", clientMock);\n+        registry.bind(\"amazonSQSClient\", clientMock);\n \n         result.expectedMessageCount(0);\n \n@@ -111,7 +111,7 @@\n             }\n         });\n         MockEndpoint result = MockEndpoint.resolve(ctx, \"mock:result\");\n-        registry.put(\"amazonSQSClient\", clientMock);\n+        registry.bind(\"amazonSQSClient\", clientMock);\n         clientMock.setScheduler(ctx.getExecutorServiceManager().newScheduledThreadPool(clientMock, \"ClientMock Scheduler\", 1));\n \n         result.expectedMessageCount(1);\n",
        "projectName": "apache.camel",
        "bugLineNum": 114,
        "bugNodeStartChar": 4706,
        "bugNodeLength": 43,
        "fixLineNum": 114,
        "fixNodeStartChar": 4706,
        "fixNodeLength": 44,
        "sourceBeforeFix": "registry.put(\"amazonSQSClient\",clientMock)",
        "sourceAfterFix": "registry.bind(\"amazonSQSClient\",clientMock)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "05f489cb28a606400060ba5e26ab13ec9f4845e6",
        "fixCommitParentSHA1": "382937118526d3520a1983eca7444a88d8aa7f37",
        "bugFilePath": "security/subsystem/src/main/java/org/jboss/as/security/service/JaccService.java",
        "fixPatch": "diff --git a/security/subsystem/src/main/java/org/jboss/as/security/service/JaccService.java b/security/subsystem/src/main/java/org/jboss/as/security/service/JaccService.java\nindex b8a01b2..4cf780f 100644\n--- a/security/subsystem/src/main/java/org/jboss/as/security/service/JaccService.java\n+++ b/security/subsystem/src/main/java/org/jboss/as/security/service/JaccService.java\n@@ -113,7 +113,7 @@\n         final ClassLoader originalClassLoader;\n         final ClassLoader jaccClassLoader;\n         if (module != null) {\n-            jaccClassLoader = SecurityActions.getModuleClassLoader(JACC_MODULE);\n+            jaccClassLoader = SecurityActions.getModuleClassLoader(module);\n             originalClassLoader = SecurityActions.setThreadContextClassLoader(jaccClassLoader);\n         } else {\n             jaccClassLoader = null;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 116,
        "bugNodeStartChar": 4835,
        "bugNodeLength": 49,
        "fixLineNum": 116,
        "fixNodeStartChar": 4835,
        "fixNodeLength": 44,
        "sourceBeforeFix": "SecurityActions.getModuleClassLoader(JACC_MODULE)",
        "sourceAfterFix": "SecurityActions.getModuleClassLoader(module)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f8d58022301347c8a9790013e38dfc1d5d4037e7",
        "fixCommitParentSHA1": "18ee229748422bfc23c357ebe9db25831bc6c4d8",
        "bugFilePath": "spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/ProjectLibraries.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/ProjectLibraries.java b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/ProjectLibraries.java\nindex 794df87..6e013e3 100644\n--- a/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/ProjectLibraries.java\n+++ b/spring-boot-tools/spring-boot-gradle-plugin/src/main/groovy/org/springframework/boot/gradle/task/ProjectLibraries.java\n@@ -49,7 +49,7 @@\n \t\t\t\tthis.providedConfigurationName);\n \t\tif (provided != null) {\n \t\t\tcompile = compile.minus(provided);\n-\t\t\truntime = compile.minus(provided);\n+\t\t\truntime = runtime.minus(provided);\n \t\t}\n \n \t\tlibraries(LibraryScope.COMPILE, compile, callback);\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 52,
        "bugNodeStartChar": 1629,
        "bugNodeLength": 23,
        "fixLineNum": 52,
        "fixNodeStartChar": 1629,
        "fixNodeLength": 23,
        "sourceBeforeFix": "compile.minus(provided)",
        "sourceAfterFix": "runtime.minus(provided)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1266642aba9a297e0872324c1e72c72a38e0e485",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 90,
        "bugNodeStartChar": 2429,
        "bugNodeLength": 43,
        "fixLineNum": 90,
        "fixNodeStartChar": 2429,
        "fixNodeLength": 50,
        "sourceBeforeFix": "this.thrown.equals(\"File must not be null\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must not be null\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "aa1e537de40c7ecea3516a40e52f1101c0f88908",
        "fixCommitParentSHA1": "d8e5d421e13e05edfea9894aa4f226f8e1b03692",
        "bugFilePath": "codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java",
        "fixPatch": "diff --git a/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java\nindex bc583bc..f43e11b 100644\n--- a/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java\n+++ b/codec/src/main/java/io/netty/handler/codec/ReplayingDecoder.java\n@@ -269,7 +269,7 @@\n \n     static final Signal REPLAY = Signal.valueOf(ReplayingDecoder.class, \"REPLAY\");\n \n-    private final ReplayingDecoderBuffer replayable = new ReplayingDecoderBuffer();\n+    private final ReplayingDecoderByteBuf replayable = new ReplayingDecoderByteBuf();\n     private S state;\n     private int checkpoint = -1;\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 272,
        "bugNodeStartChar": 10257,
        "bugNodeLength": 79,
        "fixLineNum": 272,
        "fixNodeStartChar": 10257,
        "fixNodeLength": 81,
        "sourceBeforeFix": "private final ReplayingDecoderBuffer replayable=new ReplayingDecoderBuffer(); ",
        "sourceAfterFix": "private final ReplayingDecoderByteBuf replayable=new ReplayingDecoderByteBuf(); "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 101,
        "bugNodeStartChar": 4317,
        "bugNodeLength": 10,
        "fixLineNum": 101,
        "fixNodeStartChar": 4317,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15803",
        "sourceAfterFix": "id=10803"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8e837d44d58c55a2bb1f84d779f855c7b8ddf057",
        "fixCommitParentSHA1": "77e232d22102058ff91a8dcb00cc229d2fe5f994",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\nindex 8b7b028..530df7d 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/ZWaveNetworkMonitor.java\n@@ -250,7 +250,7 @@\n \tpublic void execute() {\n \t\t// Don't start the next node if there's a queue\n \t\tif(zController.getSendQueueLength() > 1) {\n-\t\t\tlogger.debug(\"Queue length is {} - deferring HEAL.\");\n+\t\t\tlogger.debug(\"Queue length is {} - deferring HEAL.\", zController.getSendQueueLength());\n \t\t\treturn;\n \t\t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 253,
        "bugNodeStartChar": 8252,
        "bugNodeLength": 52,
        "fixLineNum": 253,
        "fixNodeStartChar": 8252,
        "fixNodeLength": 86,
        "sourceBeforeFix": "logger.debug(\"Queue length is {} - deferring HEAL.\")",
        "sourceAfterFix": "logger.debug(\"Queue length is {} - deferring HEAL.\",zController.getSendQueueLength())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java b/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\nindex 5be379e..431e724 100644\n--- a/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n+++ b/guava/src/com/google/common/graph/UndirectedMultiNetworkConnections.java\n@@ -83,7 +83,7 @@\n   }\n \n   @Override\n-  public N removeInEdge(Object edge, boolean isSelfLoop) {\n+  public N removeInEdge(E edge, boolean isSelfLoop) {\n     if (!isSelfLoop) {\n       return removeOutEdge(edge);\n     }\n@@ -91,7 +91,7 @@\n   }\n \n   @Override\n-  public N removeOutEdge(Object edge) {\n+  public N removeOutEdge(E edge) {\n     N node = super.removeOutEdge(edge);\n     Multiset<N> adjacentNodes = getReference(adjacentNodesReference);\n     if (adjacentNodes != null) {\n",
        "projectName": "google.guava",
        "bugLineNum": 86,
        "bugNodeStartChar": 2851,
        "bugNodeLength": 11,
        "fixLineNum": 86,
        "fixNodeStartChar": 2851,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object edge",
        "sourceAfterFix": "E edge"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "fc9291532ab7b35a24df2a673695598b5b65dff0",
        "fixCommitParentSHA1": "68d33369a29e0299799835ce68a87108d6f84812",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/Rectangle.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Rectangle.java b/gdx/src/com/badlogic/gdx/math/Rectangle.java\nindex 6086c67..5c0cf3e 100644\n--- a/gdx/src/com/badlogic/gdx/math/Rectangle.java\n+++ b/gdx/src/com/badlogic/gdx/math/Rectangle.java\n@@ -101,8 +101,8 @@\n \t\tfloat ymin = rectangle.y;\r\n \t\tfloat ymax = ymin + rectangle.height;\r\n \r\n-\t\treturn ((xmin > x && xmin < x + width) || (xmax > x && xmax < x + width))\r\n-\t\t\t&& ((ymin > y && ymin < y + height) || (ymax > y && ymax < y + height));\r\n+\t\treturn ((xmin > x && xmin < x + width) && (xmax > x && xmax < x + width))\r\n+\t\t\t&& ((ymin > y && ymin < y + height) && (ymax > y && ymax < y + height));\r\n \t}\r\n \r\n \t/** @param rectangle the other {@link Rectangle}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 104,
        "bugNodeStartChar": 3120,
        "bugNodeLength": 64,
        "fixLineNum": 104,
        "fixNodeStartChar": 3017,
        "fixNodeLength": 64,
        "sourceBeforeFix": "(xmin > x && xmin < x + width) || (xmax > x && xmax < x + width)",
        "sourceAfterFix": "(xmin > x && xmin < x + width) && (xmax > x && xmax < x + width)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "41bf1b7459905a8201b5d60bb6545fbbb502d59d",
        "fixCommitParentSHA1": "cc2c98d3eef67ed523fc13920d14e4773877a67a",
        "bugFilePath": "src/main/java/com/alibaba/druid/pool/DruidDataSource.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\nindex b26f0f9..3831a40 100644\n--- a/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n+++ b/src/main/java/com/alibaba/druid/pool/DruidDataSource.java\n@@ -3401,7 +3401,7 @@\n             map.put(\"ActiveCount\", this.getActiveCount());\n             map.put(\"PoolingCount\", this.getPoolingCount());\n             map.put(\"LockQueueLength\", this.getLockQueueLength());\n-            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadPeak());\n+            map.put(\"WaitThreadCount\", this.getNotEmptyWaitThreadCount());\n \n             // 10 - 14\n             map.put(\"InitialSize\", this.getInitialSize());\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 3404,
        "bugNodeStartChar": 118619,
        "bugNodeLength": 32,
        "fixLineNum": 3404,
        "fixNodeStartChar": 118619,
        "fixNodeLength": 33,
        "sourceBeforeFix": "this.getNotEmptyWaitThreadPeak()",
        "sourceAfterFix": "this.getNotEmptyWaitThreadCount()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 94,
        "bugNodeStartChar": 4111,
        "bugNodeLength": 40,
        "fixLineNum": 94,
        "fixNodeStartChar": 4111,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "62daee8bf2d60c90827d2adc864662c9db6c4713",
        "fixCommitParentSHA1": "17192c873c62e527859f80085a07e89d5b098dd7",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/config/managed/AtmosphereHandlerServiceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/config/managed/AtmosphereHandlerServiceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/config/managed/AtmosphereHandlerServiceInterceptor.java\nindex 3386405..aeddd34 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/config/managed/AtmosphereHandlerServiceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/config/managed/AtmosphereHandlerServiceInterceptor.java\n@@ -97,10 +97,10 @@\n                         boolean singleton = w.atmosphereHandler.getClass().getAnnotation(Singleton.class) != null;\n                         if (!singleton) {\n                             config.framework().addAtmosphereHandler(path, config.framework().newClassInstance(w.atmosphereHandler.getClass()),\n-                                    config.getBroadcasterFactory().lookup(m.broadcaster(), true), w.interceptors);\n+                                    config.getBroadcasterFactory().lookup(m.broadcaster(), path, true), w.interceptors);\n                         } else {\n                             config.framework().addAtmosphereHandler(path, w.atmosphereHandler,\n-                                    config.getBroadcasterFactory().lookup(m.broadcaster(), true), w.interceptors);\n+                                    config.getBroadcasterFactory().lookup(m.broadcaster(), path, true), w.interceptors);\n                         }\n                         request.setAttribute(FrameworkConfig.NEW_MAPPING, \"true\");\n                     } catch (Throwable e) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 103,
        "bugNodeStartChar": 4032,
        "bugNodeLength": 60,
        "fixLineNum": 103,
        "fixNodeStartChar": 4032,
        "fixNodeLength": 66,
        "sourceBeforeFix": "config.getBroadcasterFactory().lookup(m.broadcaster(),true)",
        "sourceAfterFix": "config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "127108d1005124b8d33651569780b08fa2b5d5b8",
        "fixCommitParentSHA1": "06c166c9f45758afbb1ebcff4214b4c3796ac624",
        "bugFilePath": "components/camel-properties/src/main/java/org/apache/camel/component/properties/PropertiesComponent.java",
        "fixPatch": "diff --git a/components/camel-properties/src/main/java/org/apache/camel/component/properties/PropertiesComponent.java b/components/camel-properties/src/main/java/org/apache/camel/component/properties/PropertiesComponent.java\nindex b6a2df5..5094e47 100644\n--- a/components/camel-properties/src/main/java/org/apache/camel/component/properties/PropertiesComponent.java\n+++ b/components/camel-properties/src/main/java/org/apache/camel/component/properties/PropertiesComponent.java\n@@ -120,7 +120,7 @@\n     private Properties overrideProperties;\n     @Metadata(defaultValue = \"\" + SYSTEM_PROPERTIES_MODE_OVERRIDE, enums = \"0,1,2\")\n     private int systemPropertiesMode = SYSTEM_PROPERTIES_MODE_OVERRIDE;\n-    @Metadata(defaultValue = \"\" + SYSTEM_PROPERTIES_MODE_FALLBACK, enums = \"0,1,2\")\n+    @Metadata(defaultValue = \"\" + ENVIRONMENT_VARIABLES_MODE_OVERRIDE, enums = \"0,1,2\")\n     private int environmentVariableMode = ENVIRONMENT_VARIABLES_MODE_OVERRIDE;\n \n     public PropertiesComponent() {\n",
        "projectName": "apache.camel",
        "bugLineNum": 123,
        "bugNodeStartChar": 5009,
        "bugNodeLength": 36,
        "fixLineNum": 123,
        "fixNodeStartChar": 5009,
        "fixNodeLength": 40,
        "sourceBeforeFix": "\"\" + SYSTEM_PROPERTIES_MODE_FALLBACK",
        "sourceAfterFix": "\"\" + ENVIRONMENT_VARIABLES_MODE_OVERRIDE"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "866e204dfa331c04bef2f2781c625b9c2a068623",
        "fixCommitParentSHA1": "8a32282828c010ff464afd812b20e235f2e3f81a",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java b/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java\nindex 43873e8..c210376 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java\n@@ -401,7 +401,8 @@\n         // get all active timers for this timerservice\n         synchronized (this.timers) {\n             for (final TimerImpl timer : this.timers.values()) {\n-                if (timer.isActive()) {\n+                // Less disruptive way to get WFLY-8457 fixed.\n+                if (timer.isActive() || (!timer.isActive() && timer.getState() == TimerState.ACTIVE)) {\n                     if (timer.getPrimaryKey() == null || timer.getPrimaryKey().equals(pk)) {\n                         activeTimers.add(timer);\n                     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 404,
        "bugNodeStartChar": 15525,
        "bugNodeLength": 16,
        "fixLineNum": 405,
        "fixNodeStartChar": 15588,
        "fixNodeLength": 80,
        "sourceBeforeFix": "timer.isActive()",
        "sourceAfterFix": "timer.isActive() || (!timer.isActive() && timer.getState() == TimerState.ACTIVE)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9e756fefbb053926754108335e3ad78b586439ac",
        "fixCommitParentSHA1": "e6da66a69840d8aa5ab1926974a92b779f90c868",
        "bugFilePath": "components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketConsumerRouteTest.java",
        "fixPatch": "diff --git a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketConsumerRouteTest.java b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketConsumerRouteTest.java\nindex ea1874a..20b2f40 100644\n--- a/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketConsumerRouteTest.java\n+++ b/components/camel-websocket/src/test/java/org/apache/camel/component/websocket/WebsocketConsumerRouteTest.java\n@@ -109,7 +109,7 @@\n             public void configure() {\n                 WebsocketComponent websocketComponent = (WebsocketComponent) context.getComponent(\"websocket\");\n                 websocketComponent.setPort(port);\n-                websocketComponent.setMaxThreads(11);\n+                websocketComponent.setMaxThreads(20);\n                 websocketComponent.setMinThreads(1);\n \n                 from(\"websocket://echo\")\n",
        "projectName": "apache.camel",
        "bugLineNum": 112,
        "bugNodeStartChar": 3915,
        "bugNodeLength": 36,
        "fixLineNum": 112,
        "fixNodeStartChar": 3915,
        "fixNodeLength": 36,
        "sourceBeforeFix": "websocketComponent.setMaxThreads(11)",
        "sourceAfterFix": "websocketComponent.setMaxThreads(20)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "ae3638227a4e01d7dc926c50f9cc5c6353effd49",
        "fixCommitParentSHA1": "0a15ff9bcd988c159ce90db104817cc1f0e983c8",
        "bugFilePath": "graylog2-radio/src/main/java/org/graylog2/radio/Radio.java",
        "fixPatch": "diff --git a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\nindex 0de0b95..9e414b4 100644\n--- a/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n+++ b/graylog2-radio/src/main/java/org/graylog2/radio/Radio.java\n@@ -221,7 +221,10 @@\n         bootstrap.setOption(\"child.tcpNoDelay\", true);\n         bootstrap.setOption(\"child.keepAlive\", true);\n \n-        bootstrap.bind(new InetSocketAddress(configuration.getRestListenUri().getPort()));\n+        bootstrap.bind(new InetSocketAddress(\n+                configuration.getRestListenUri().getHost(),\n+                configuration.getRestListenUri().getPort()\n+        ));\n         Runtime.getRuntime().addShutdownHook(new Thread() {\n             @Override\n             public void run() {\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 224,
        "bugNodeStartChar": 9173,
        "bugNodeLength": 65,
        "fixLineNum": 224,
        "fixNodeStartChar": 9173,
        "fixNodeLength": 151,
        "sourceBeforeFix": "new InetSocketAddress(configuration.getRestListenUri().getPort())",
        "sourceAfterFix": "new InetSocketAddress(configuration.getRestListenUri().getHost(),configuration.getRestListenUri().getPort())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b615640bd31e6a69102f1bb9c3649564669baab0",
        "fixCommitParentSHA1": "a6bee6103e72c22423e1612e9085e0be449989bb",
        "bugFilePath": "remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java",
        "fixPatch": "diff --git a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\nindex dcf4657..df44070 100644\n--- a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\n+++ b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\n@@ -435,7 +435,7 @@\n         final PathAddress address = PathAddress.pathAddress(PathAddress.pathAddress(parentAddress), PathElement.pathElement(CommonAttributes.REMOTE_OUTBOUND_CONNECTION, name));\n \n         // create add operation add it to the list of operations\n-        operations.add(getConnectionAddOperation(name, outboundSocketBindingRef, address));\n+        operations.add(getConnectionAddOperation(name, outboundSocketBindingRef, username, securityRealm, address));\n         // parse the nested elements\n         final EnumSet<Element> visited = EnumSet.noneOf(Element.class);\n         while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 438,
        "bugNodeStartChar": 20024,
        "bugNodeLength": 66,
        "fixLineNum": 438,
        "fixNodeStartChar": 20024,
        "fixNodeLength": 91,
        "sourceBeforeFix": "getConnectionAddOperation(name,outboundSocketBindingRef,address)",
        "sourceAfterFix": "getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "src/com/google/javascript/jscomp/RemoveUnusedCode.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/RemoveUnusedCode.java b/src/com/google/javascript/jscomp/RemoveUnusedCode.java\nindex 63d84a6..a42f81c 100644\n--- a/src/com/google/javascript/jscomp/RemoveUnusedCode.java\n+++ b/src/com/google/javascript/jscomp/RemoveUnusedCode.java\n@@ -249,7 +249,7 @@\n     }\n     traverseAndRemoveUnusedReferences(root);\n     // This pass may remove definitions of getter or setter properties.\n-    GatherGettersAndSetterProperties.update(compiler, externs, root);\n+    GatherGetterAndSetterProperties.update(compiler, externs, root);\n   }\n \n   /**\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 252,
        "bugNodeStartChar": 10525,
        "bugNodeLength": 64,
        "fixLineNum": 252,
        "fixNodeStartChar": 10525,
        "fixNodeLength": 63,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.update(compiler,externs,root)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.update(compiler,externs,root)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "42b44935272ecf97acca3b7c9fe90b45fd8e01d2",
        "fixCommitParentSHA1": "1192e16a67859917f443f1470d7809a3b18f2329",
        "bugFilePath": "platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java",
        "fixPatch": "diff --git a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\nindex eb87919..8696130 100644\n--- a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\n+++ b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java\n@@ -151,7 +151,7 @@\n          * you could append \"?olderThan=2912\u2033 to your request to get the 20\n          * messages prior to those you're seeing.\n          */\n-        private Integer olderThan = -1;\n+        private Long olderThan = -1L;\n         /**\n          * Returns messages newer than the message ID specified as a numeric\n          * string. This should be used when polling for new messages. If you're\n@@ -160,7 +160,7 @@\n          * that you do not get duplicate copies of messages already on your\n          * page.\n          */\n-        private Integer newerThan = -1;\n+        private Long newerThan = -1L;\n         /**\n          * threaded=true will only return the first message in each thread. This\n          * parameter is intended for apps which display message threads\n@@ -247,19 +247,19 @@\n             this.limit = limit;\n         }\n \n-        public Integer getOlderThan() {\n+        public Long getOlderThan() {\n             return olderThan;\n         }\n \n-        public void setOlderThan(Integer olderThan) {\n+        public void setOlderThan(Long olderThan) {\n             this.olderThan = olderThan;\n         }\n \n-        public Integer getNewerThan() {\n+        public Long getNewerThan() {\n             return newerThan;\n         }\n \n-        public void setNewerThan(Integer newerThan) {\n+        public void setNewerThan(Long newerThan) {\n             this.newerThan = newerThan;\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 254,
        "bugNodeStartChar": 7840,
        "bugNodeLength": 17,
        "fixLineNum": 254,
        "fixNodeStartChar": 7840,
        "fixNodeLength": 14,
        "sourceBeforeFix": "Integer olderThan",
        "sourceAfterFix": "Long olderThan"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2dfce22970d9e762a86cf2a2df0861e3d6b26848",
        "fixCommitParentSHA1": "46c53f14607363b07ade6246e6612171d57dea9b",
        "bugFilePath": "src/test/java/org/apache/hadoop/hbase/avro/TestAvroServer.java",
        "fixPatch": "diff --git a/src/test/java/org/apache/hadoop/hbase/avro/TestAvroServer.java b/src/test/java/org/apache/hadoop/hbase/avro/TestAvroServer.java\nindex cc5cc2e..015563c 100644\n--- a/src/test/java/org/apache/hadoop/hbase/avro/TestAvroServer.java\n+++ b/src/test/java/org/apache/hadoop/hbase/avro/TestAvroServer.java\n@@ -94,7 +94,7 @@\n    *\n    * @throws Exception\n    */\n-  @Test (timeout=60000)\n+  @Test (timeout=300000)\n   public void testTableAdminAndMetadata() throws Exception {\n     AvroServer.HBaseImpl impl = new AvroServer.HBaseImpl();\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 97,
        "bugNodeStartChar": 3284,
        "bugNodeLength": 13,
        "fixLineNum": 97,
        "fixNodeStartChar": 3284,
        "fixNodeLength": 14,
        "sourceBeforeFix": "timeout=60000",
        "sourceAfterFix": "timeout=300000"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "4a6e698536006e6ea9b0680756d9390b96ba278b",
        "fixCommitParentSHA1": "58e0c3f646c0a5fdf861a9a2bb0a835abb121288",
        "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java",
        "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\nindex c6a9dd2..4507381 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java\n@@ -229,7 +229,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n \n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n@@ -367,7 +367,7 @@\n \n         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {\n             return;\n-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {\n+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"') {\n             if (streamTokenizer.sval.equalsIgnoreCase(\"label\")) {\n                 streamTokenizer.nextToken();\n                 if (streamTokenizer.ttype == '=') {\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 370,
        "bugNodeStartChar": 16202,
        "bugNodeLength": 48,
        "fixLineNum": 370,
        "fixNodeStartChar": 16202,
        "fixNodeLength": 80,
        "sourceBeforeFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD",
        "sourceAfterFix": "streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '\"'"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "01d18f2c3db799d144cc8e3308da3fb2ade19417",
        "fixCommitParentSHA1": "2f6370343200faec3de904a5cf2e39345acb33e7",
        "bugFilePath": "android/guava/src/com/google/common/util/concurrent/Striped.java",
        "fixPatch": "diff --git a/android/guava/src/com/google/common/util/concurrent/Striped.java b/android/guava/src/com/google/common/util/concurrent/Striped.java\nindex cd43294..36fa929 100644\n--- a/android/guava/src/com/google/common/util/concurrent/Striped.java\n+++ b/android/guava/src/com/google/common/util/concurrent/Striped.java\n@@ -321,9 +321,9 @@\n     private final Lock delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeLock(Lock delegate, Object strongReference) {\n+    WeakSafeLock(Lock delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n@@ -344,9 +344,9 @@\n     private final Condition delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeCondition(Condition delegate, Object strongReference) {\n+    WeakSafeCondition(Condition delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n",
        "projectName": "google.guava",
        "bugLineNum": 323,
        "bugNodeStartChar": 13165,
        "bugNodeLength": 69,
        "fixLineNum": 323,
        "fixNodeStartChar": 13165,
        "fixNodeLength": 84,
        "sourceBeforeFix": "@SuppressWarnings(\"unused\") private final Object strongReference; ",
        "sourceAfterFix": "@SuppressWarnings(\"unused\") private final WeakSafeReadWriteLock strongReference; "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 108,
        "bugNodeStartChar": 4812,
        "bugNodeLength": 40,
        "fixLineNum": 108,
        "fixNodeStartChar": 4812,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "114211dc376cd85d1c97dde06cc7b347181314e1",
        "fixCommitParentSHA1": "06bc4f0fc48c8f98b5a6426af9de6882dbd06f16",
        "bugFilePath": "gdx-tests-android/src/com/badlogic/gdx/GDXTester.java",
        "fixPatch": "diff --git a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\nindex a554f46..dd972e9 100644\n--- a/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n+++ b/gdx-tests-android/src/com/badlogic/gdx/GDXTester.java\n@@ -78,41 +78,41 @@\n \t\t\tintent = new Intent( this, LagTest.class );\r\n \t\tif( keyword.equals( items[14] ) )\r\n \t\t\tintent = new Intent( this, Pong.class );\r\n-\t\tif( keyword.equals( items[16] ) )\r\n+\t\tif( keyword.equals( items[15] ) )\r\n \t\t\tintent = new Intent( this, AudioDeviceTest.class );\r\n-\t\tif( keyword.equals( items[17] ) )\r\n+\t\tif( keyword.equals( items[16] ) )\r\n \t\t\tintent = new Intent( this, Mpg123Test.class );\r\n-\t\tif( keyword.equals( items[18] ) )\r\n+\t\tif( keyword.equals( items[17] ) )\r\n \t\t\tintent = new Intent( this, VorbisTest.class );\r\n-\t\tif( keyword.equals( items[19] ) )\r\n+\t\tif( keyword.equals( items[18] ) )\r\n \t\t\tintent = new Intent( this, PerformanceTest.class );\r\n-\t\tif( keyword.equals( items[20] ) )\r\n+\t\tif( keyword.equals( items[19] ) )\r\n \t\t\tintent = new Intent( this, MeshShaderTest.class );\r\n-\t\tif( keyword.equals( items[21] ) )\r\n+\t\tif( keyword.equals( items[20] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchTest.class );\r\n-\t\tif( keyword.equals( items[22] ) )\r\n+\t\tif( keyword.equals( items[21] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchShaderTest.class );\r\n-\t\tif( keyword.equals( items[23] ) )\r\n+\t\tif( keyword.equals( items[22] ) )\r\n \t\t\tintent = new Intent( this, FrameBufferTest.class );\r\n-\t\tif( keyword.equals( items[24] ) )\r\n+\t\tif( keyword.equals( items[23] ) )\r\n \t\t\tintent = new Intent( this, SpriteBatchRotationTest.class );\r\n-\t\tif( keyword.equals( items[25] ) )\r\n+\t\tif( keyword.equals( items[24] ) )\r\n \t\t\tintent = new Intent( this, Box2DTest.class );\r\n-\t\tif( keyword.equals( items[26] ) )\r\n+\t\tif( keyword.equals( items[25] ) )\r\n \t\t\tintent = new Intent( this, AudioRecorderTest.class );\r\n-\t\tif( keyword.equals( items[27] ) )\r\n+\t\tif( keyword.equals( items[26] ) )\r\n \t\t\tintent = new Intent( this, TestCollection.class );\r\n-\t\tif( keyword.equals( items[28] ) )\r\n+\t\tif( keyword.equals( items[27] ) )\r\n \t\t\tintent = new Intent( this, ResourcesTest.class );\r\n-\t\tif( keyword.equals( items[29] ) )\r\n+\t\tif( keyword.equals( items[28] ) )\r\n \t\t\tintent = new Intent( this, MD5Test.class );\r\n-\t\tif( keyword.equals( items[30] ) )\r\n+\t\tif( keyword.equals( items[29] ) )\r\n \t\t\tintent = new Intent( this, MicroBenchmarks.class );\r\n-\t\tif( keyword.equals( items[31] ) )\r\n+\t\tif( keyword.equals( items[30] ) )\r\n \t\t\tintent = new Intent( this, MultitouchTest.class );\r\n-\t\tif( keyword.equals( items[32] ) )\r\n+\t\tif( keyword.equals( items[31] ) )\r\n \t\t\tintent = new Intent( this, BufferUtilsTest.class );\r\n-\t\tif( keyword.equals( items[33] ) )\r\n+\t\tif( keyword.equals( items[32] ) )\r\n \t\t\tintent = new Intent( this, TerrainTest.class );\r\n \t\t\t\r\n \t\tstartActivity( intent );\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 101,
        "bugNodeStartChar": 4548,
        "bugNodeLength": 9,
        "fixLineNum": 101,
        "fixNodeStartChar": 4448,
        "fixNodeLength": 9,
        "sourceBeforeFix": "items[26]",
        "sourceAfterFix": "items[25]"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "31011d3232ace5a459ea2ba37f5634f7d4940694",
        "fixCommitParentSHA1": "62c82d86eac614e3c37eb36424c84bd0d8b541f9",
        "bugFilePath": "src/api/org/openmrs/api/db/hibernate/HibernateUserDAO.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/api/db/hibernate/HibernateUserDAO.java b/src/api/org/openmrs/api/db/hibernate/HibernateUserDAO.java\nindex da9a215..668d5b1 100644\n--- a/src/api/org/openmrs/api/db/hibernate/HibernateUserDAO.java\n+++ b/src/api/org/openmrs/api/db/hibernate/HibernateUserDAO.java\n@@ -104,7 +104,7 @@\n \tpublic boolean hasDuplicateUsername(String username, String systemId, Integer userId) {\r\n \t\tif (username == null || username.length() == 0)\r\n \t\t\tusername = \"-\";\r\n-\t\tif (systemId == null || username.length() == 0)\r\n+\t\tif (systemId == null || systemId.length() == 0)\r\n \t\t\tsystemId = \"-\";\r\n \t\t\r\n \t\tif (userId == null)\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 107,
        "bugNodeStartChar": 3350,
        "bugNodeLength": 17,
        "fixLineNum": 107,
        "fixNodeStartChar": 3244,
        "fixNodeLength": 17,
        "sourceBeforeFix": "username.length()",
        "sourceAfterFix": "systemId.length()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4a1a239acded779b0011ec7b342e2a8d1584f79f",
        "fixCommitParentSHA1": "27049180e2e4b690c35794837d5b18a78feb991d",
        "bugFilePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java",
        "fixPatch": "diff --git a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\nindex 5be5ad8..72b571d 100644\n--- a/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\n+++ b/enterprise/ha/src/main/java/org/neo4j/kernel/ha/MasterServer.java\n@@ -40,7 +40,7 @@\n  */\n public class MasterServer extends Server<Master, Void>\n {\n-    static final byte PROTOCOL_VERSION = 1;\n+    static final byte PROTOCOL_VERSION = 2;\n     \n     static final int FRAME_LENGTH = Protocol.DEFAULT_FRAME_LENGTH;\n     \n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 43,
        "bugNodeStartChar": 1509,
        "bugNodeLength": 20,
        "fixLineNum": 43,
        "fixNodeStartChar": 1509,
        "fixNodeLength": 20,
        "sourceBeforeFix": "PROTOCOL_VERSION=1",
        "sourceAfterFix": "PROTOCOL_VERSION=2"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6e70cda72792dc8d65870b2d50a66cef6408e8fd",
        "fixCommitParentSHA1": "ba769488f69f9132d900a4683e95cdb3164614ae",
        "bugFilePath": "extras/socketio/src/main/java/org/atmosphere/socketio/transport/XHRTransport.java",
        "fixPatch": "diff --git a/extras/socketio/src/main/java/org/atmosphere/socketio/transport/XHRTransport.java b/extras/socketio/src/main/java/org/atmosphere/socketio/transport/XHRTransport.java\nindex b810fe7..dd8351a 100755\n--- a/extras/socketio/src/main/java/org/atmosphere/socketio/transport/XHRTransport.java\n+++ b/extras/socketio/src/main/java/org/atmosphere/socketio/transport/XHRTransport.java\n@@ -104,7 +104,7 @@\n                                 AtmosphereResourceImpl resource = session.getAtmosphereResourceImpl();\n                                 // if BroadcastCache is available, add the message to the cache\n                                 if (resource != null && DefaultBroadcaster.class.isAssignableFrom(resource.getBroadcaster().getClass())) {\n-                                    DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.addToCache(resource, msg);\n+                                    DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.addToCache(resource.getBroadcaster().getID(), resource, msg);\n                                 }\n                             }\n                             break;\n@@ -198,7 +198,7 @@\n                                 if (DefaultBroadcaster.class.isAssignableFrom(resource.getBroadcaster().getClass())) {\n \n                                     List<Object> cachedMessages = DefaultBroadcaster.class.cast(resource.getBroadcaster())\n-                                            .broadcasterCache.retrieveFromCache(resource);\n+                                            .broadcasterCache.retrieveFromCache(resource.getBroadcaster().getID(), resource);\n \n                                     if (cachedMessages != null) {\n                                         if (cachedMessages.size() > 1) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 200,
        "bugNodeStartChar": 9056,
        "bugNodeLength": 146,
        "fixLineNum": 200,
        "fixNodeStartChar": 9056,
        "fixNodeLength": 181,
        "sourceBeforeFix": "DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.retrieveFromCache(resource)",
        "sourceAfterFix": "DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.retrieveFromCache(resource.getBroadcaster().getID(),resource)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1c6bc8ead71b0f8f2939e12cf66a8c61f9fae26e",
        "fixCommitParentSHA1": "a39e406de0138869ff9a36d226accfaf50ee67e2",
        "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\nindex 3341469..8675205 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL20.java\n@@ -60,7 +60,7 @@\n \r\n \tprivate IntBuffer toIntBuffer (int v[], int offset, int count) {\r\n \t\tensureBufferCapacity(count << 2);\r\n-\t\tfloatBuffer.clear();\r\n+\t\tintBuffer.clear();\r\n \t\tcom.badlogic.gdx.utils.BufferUtils.copy(v, count, offset, intBuffer);\r\n \t\treturn intBuffer;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 63,
        "bugNodeStartChar": 2327,
        "bugNodeLength": 19,
        "fixLineNum": 63,
        "fixNodeStartChar": 2265,
        "fixNodeLength": 17,
        "sourceBeforeFix": "floatBuffer.clear()",
        "sourceAfterFix": "intBuffer.clear()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2c63407961c497147a4e4481a4c372c1e1323c95",
        "fixCommitParentSHA1": "84f14af3e0673b0cb78fe4a12741f94f9c851726",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java b/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\nindex 08aa38e..f78f430 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/StartTransactionTask.java\n@@ -110,7 +110,7 @@\n                 return IsolationLevel.REPEATABLE_READ;\n             case READ_COMMITTED:\n                 return IsolationLevel.READ_COMMITTED;\n-            case READ_UNCOMMITED:\n+            case READ_UNCOMMITTED:\n                 return IsolationLevel.READ_UNCOMMITTED;\n             default:\n                 throw new AssertionError(\"Unhandled isolation level: \" + level);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 113,
        "bugNodeStartChar": 4576,
        "bugNodeLength": 21,
        "fixLineNum": 113,
        "fixNodeStartChar": 4576,
        "fixNodeLength": 22,
        "sourceBeforeFix": "case READ_UNCOMMITED: ",
        "sourceAfterFix": "case READ_UNCOMMITTED: "
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "46fcd4cadab8a2bd4676ec4e430f5a25f7a99577",
        "fixCommitParentSHA1": "927af954b758b5e6c0af17d067dceec20cdf83a4",
        "bugFilePath": "components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java",
        "fixPatch": "diff --git a/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java b/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\nindex ccb6298..b6ee450 100644\n--- a/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\n+++ b/components/camel-chronicle/src/test/java/org/apache/camel/component/chronicle/engine/ChronicleEngineConsumerTest.java\n@@ -58,17 +58,17 @@\n         mock.assertIsSatisfied();\n \n         assertEquals(\n-            mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE),\n-            ChronicleEngineMapEventType.INSERT);\n+            ChronicleEngineMapEventType.INSERT,\n+            mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE));\n         assertEquals(\n-            mock.getExchanges().get(0).getIn().getBody(String.class),\n-            \"val-1\");\n+            \"val-1\",\n+            mock.getExchanges().get(0).getIn().getBody(String.class));\n         assertEquals(\n-            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE),\n-            ChronicleEngineMapEventType.REMOVE);\n+            ChronicleEngineMapEventType.REMOVE,\n+            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE));\n         assertEquals(\n-            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.OLD_VALUE),\n-            \"val-2\");\n+            \"val-2\",\n+            mock.getExchanges().get(1).getIn().getHeader(ChronicleEngineConstants.OLD_VALUE));\n     }\n \n     @Test\n",
        "projectName": "apache.camel",
        "bugLineNum": 60,
        "bugNodeStartChar": 2197,
        "bugNodeLength": 160,
        "fixLineNum": 60,
        "fixNodeStartChar": 2197,
        "fixNodeLength": 160,
        "sourceBeforeFix": "assertEquals(mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE),ChronicleEngineMapEventType.INSERT)",
        "sourceAfterFix": "assertEquals(ChronicleEngineMapEventType.INSERT,mock.getExchanges().get(0).getIn().getHeader(ChronicleEngineConstants.MAP_EVENT_TYPE))"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "486d1df6b22e089bfe2f62b7f487ad09fb4d5fc3",
        "fixCommitParentSHA1": "8c24d882e69b50b29742953c424596716ef82fb5",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\nindex 77fc5a6..1ef7eb9 100644\n--- a/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n+++ b/presto-main/src/main/java/com/facebook/presto/execution/SqlStageExecution.java\n@@ -894,7 +894,7 @@\n                     else if (any(taskStates, equalTo(TaskState.ABORTED))) {\n                         // A task should only be in the aborted state if the STAGE is done (ABORTED or FAILED)\n                         stageState.set(StageState.FAILED);\n-                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + stageState));\n+                        failureCauses.add(new PrestoException(StandardErrorCode.INTERNAL_ERROR, \"A task is in the ABORTED state but stage is \" + currentState));\n                     }\n                     else if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {\n                         // all tasks are now scheduled, so we can check the finished state\n",
        "projectName": "facebook.presto",
        "bugLineNum": 897,
        "bugNodeStartChar": 36742,
        "bugNodeLength": 59,
        "fixLineNum": 897,
        "fixNodeStartChar": 36742,
        "fixNodeLength": 61,
        "sourceBeforeFix": "\"A task is in the ABORTED state but stage is \" + stageState",
        "sourceAfterFix": "\"A task is in the ABORTED state but stage is \" + currentState"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9de2d1f83961a6ede9fa5bdf249c41253116374c",
        "fixCommitParentSHA1": "c2315f2e8c44f236de3dd6182b7e8bb1ed719d0f",
        "bugFilePath": "spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java\nindex 0ebfeb5..d5292f7 100644\n--- a/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java\n+++ b/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/server/WebTestClientContextCustomizer.java\n@@ -65,7 +65,7 @@\n \tprivate void registerWebTestClient(ConfigurableApplicationContext context) {\n \t\tConfigurableListableBeanFactory beanFactory = context.getBeanFactory();\n \t\tif (beanFactory instanceof BeanDefinitionRegistry) {\n-\t\t\tregisterWebTestClient((BeanDefinitionRegistry) context);\n+\t\t\tregisterWebTestClient((BeanDefinitionRegistry) beanFactory);\n \t\t}\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 68,
        "bugNodeStartChar": 3132,
        "bugNodeLength": 32,
        "fixLineNum": 68,
        "fixNodeStartChar": 3132,
        "fixNodeLength": 36,
        "sourceBeforeFix": "(BeanDefinitionRegistry)context",
        "sourceAfterFix": "(BeanDefinitionRegistry)beanFactory"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2c9dfea16074453e9d5a3c17a89e6d390de7ded1",
        "fixCommitParentSHA1": "8b713041908ab9af083336a96bb44c9f09db4972",
        "bugFilePath": "src/main/java/org/apache/ibatis/type/NStringTypeHandler.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\nindex 52d59b4..91c5b63 100644\n--- a/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n+++ b/src/main/java/org/apache/ibatis/type/NStringTypeHandler.java\n@@ -28,28 +28,25 @@\n   @Override\n   public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n       throws SQLException {\n-//    ps.setNString(i, ((String) parameter));\n-    ps.setString(i, parameter);\n+    ps.setNString(i, parameter);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, String columnName)\n       throws SQLException {\n-//    return rs.getNString(columnName);\n-    return rs.getString(columnName);\n+    return rs.getNString(columnName);\n   }\n \n   @Override\n   public String getNullableResult(ResultSet rs, int columnIndex)\n       throws SQLException {\n-    return rs.getString(columnIndex);\n+    return rs.getNString(columnIndex);\n   }\n \n   @Override\n   public String getNullableResult(CallableStatement cs, int columnIndex)\n       throws SQLException {\n-//    return cs.getNString(columnIndex);\n-    return cs.getString(columnIndex);\n+    return cs.getNString(columnIndex);\n   }\n \n }\n\\ No newline at end of file\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 32,
        "bugNodeStartChar": 1101,
        "bugNodeLength": 26,
        "fixLineNum": 31,
        "fixNodeStartChar": 1055,
        "fixNodeLength": 27,
        "sourceBeforeFix": "ps.setString(i,parameter)",
        "sourceAfterFix": "ps.setNString(i,parameter)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "147f64aa12e7491eea259d886f14818b227dadd0",
        "fixCommitParentSHA1": "a6d3148505ef870cacc0527667f53520802a971d",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\nindex 9292405..4d26a51 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/DeleteReturnRouteMessageClass.java\n@@ -59,7 +59,7 @@\n \n \t\tlogger.debug(\"NODE {}: Got DeleteReturnRoute request.\", nodeId);\n \t\tif(incomingMessage.getMessagePayloadByte(1) != 0x00) {\n-\t\t\tlogger.error(\"NODE {}: Delete return routes failed with error 0x{}.\", nodeId, Integer.toHexString(incomingMessage.getMessagePayloadByte(0)));\n+\t\t\tlogger.error(\"NODE {}: Delete return routes failed with error 0x{}.\", nodeId, Integer.toHexString(incomingMessage.getMessagePayloadByte(1)));\n \n \t\t\tzController.notifyEventListeners(new ZWaveNetworkEvent(ZWaveNetworkEvent.Type.DeleteReturnRoute, nodeId,\n \t\t\t\t\tZWaveNetworkEvent.State.Failure));\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 62,
        "bugNodeStartChar": 2681,
        "bugNodeLength": 40,
        "fixLineNum": 62,
        "fixNodeStartChar": 2681,
        "fixNodeLength": 40,
        "sourceBeforeFix": "incomingMessage.getMessagePayloadByte(0)",
        "sourceAfterFix": "incomingMessage.getMessagePayloadByte(1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "20bc74dff0cf1e1834e99d1f2499a3f5e4c38a36",
        "fixCommitParentSHA1": "cecc475d2f194eed67edf16cd84fbf9716b8d5c5",
        "bugFilePath": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java",
        "fixPatch": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\nindex ffb2dcf..b3e01f3 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\n@@ -607,7 +607,7 @@\n     }\n     for (AsyncCall call : toCleanup) {\n       call.setFailed(new CallTimeoutException(\"Call id=\" + call.id + \", waitTime=\"\n-          + (currentTime - call.getRpcTimeout()) + \", rpcTimeout=\" + call.getRpcTimeout()));\n+          + (currentTime - call.getStartTime()) + \", rpcTimeout=\" + call.getRpcTimeout()));\n     }\n   }\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 610,
        "bugNodeStartChar": 21287,
        "bugNodeLength": 20,
        "fixLineNum": 610,
        "fixNodeStartChar": 21287,
        "fixNodeLength": 19,
        "sourceBeforeFix": "call.getRpcTimeout()",
        "sourceAfterFix": "call.getStartTime()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "69bf835b58721b263b5ecaca7de2c327e3c29d7f",
        "fixCommitParentSHA1": "5865636ba3d6173230bc1740ecc1aec91282ac5c",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/replicatedmap/ReplicatedMapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/replicatedmap/ReplicatedMapService.java b/hazelcast/src/main/java/com/hazelcast/replicatedmap/ReplicatedMapService.java\nindex 9461750..9cc3fd8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/replicatedmap/ReplicatedMapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/replicatedmap/ReplicatedMapService.java\n@@ -37,7 +37,7 @@\n \n public class ReplicatedMapService implements ManagedService, RemoteService,\n         PostJoinAwareService, SplitBrainHandlerService,\n-        EventPublishingService<ReplicationMessage, ReplicatedMessageListener>{\n+        EventPublishingService<IdentifiedDataSerializable, ReplicatedMessageListener>{\n \n     public static final String SERVICE_NAME = \"hz:impl:replicatedMapService\";\n     public static final String EVENT_TOPIC_NAME = SERVICE_NAME + \".replication\";\n@@ -140,7 +140,7 @@\n     }\n \n     @Override\n-    public void dispatchEvent(ReplicationMessage event, ReplicatedMessageListener listener) {\n+    public void dispatchEvent(IdentifiedDataSerializable event, ReplicatedMessageListener listener) {\n         listener.onMessage(event);\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 143,
        "bugNodeStartChar": 5737,
        "bugNodeLength": 24,
        "fixLineNum": 143,
        "fixNodeStartChar": 5737,
        "fixNodeLength": 32,
        "sourceBeforeFix": "ReplicationMessage event",
        "sourceAfterFix": "IdentifiedDataSerializable event"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "89ed905358dd09d005398028198cc388b9b59a94",
        "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa",
        "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java",
        "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n",
        "projectName": "square.javapoet",
        "bugLineNum": 191,
        "bugNodeStartChar": 6557,
        "bugNodeLength": 39,
        "fixLineNum": 191,
        "fixNodeStartChar": 6557,
        "fixNodeLength": 39,
        "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")",
        "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f",
        "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\nindex 1268977..732460c 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/ResponseImpl.java\n@@ -13,19 +13,19 @@\n     private Map<String, Property> headers;\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         this.setSchema(property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         this.setDescription(description);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         if (examples == null) {\n             examples = new HashMap<String, Object>();\n         }\n@@ -34,13 +34,13 @@\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         addHeader(name, property);\n         return this;\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         this.headers = headers;\n         return this;\n     }\n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 42,
        "bugNodeStartChar": 1005,
        "bugNodeLength": 133,
        "fixLineNum": 42,
        "fixNodeStartChar": 1005,
        "fixNodeLength": 129,
        "sourceBeforeFix": "@Override public ResponseImpl headers(Map<String,Property> headers){   this.headers=headers;   return this; } ",
        "sourceAfterFix": "@Override public Response headers(Map<String,Property> headers){   this.headers=headers;   return this; } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f4c336b16bb9219f438551ba069707c21e555de5",
        "fixCommitParentSHA1": "bb26c9e1b7ed16c78cf4c3b3ae2d4483c526e5c3",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\nindex 1819120..66740c7 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/savepoint/SavepointLoader.java\n@@ -74,12 +74,12 @@\n \t\t\t\t\tString msg = String.format(\"Failed to rollback to savepoint %s. \" +\n \t\t\t\t\t\t\t\t\t\"Max parallelism mismatch between savepoint state and new program. \" +\n \t\t\t\t\t\t\t\t\t\"Cannot map operator %s with max parallelism %d to new program with \" +\n-\t\t\t\t\t\t\t\t\t\"parallelism %d. This indicates that the program has been changed \" +\n+\t\t\t\t\t\t\t\t\t\"max parallelism %d. This indicates that the program has been changed \" +\n \t\t\t\t\t\t\t\t\t\"in a non-compatible way after the savepoint.\",\n \t\t\t\t\t\t\tsavepoint,\n \t\t\t\t\t\t\ttaskState.getJobVertexID(),\n \t\t\t\t\t\t\ttaskState.getMaxParallelism(),\n-\t\t\t\t\t\t\texecutionJobVertex.getParallelism());\n+\t\t\t\t\t\t\texecutionJobVertex.getMaxParallelism());\n \n \t\t\t\t\tthrow new IllegalStateException(msg);\n \t\t\t\t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 82,
        "bugNodeStartChar": 3457,
        "bugNodeLength": 35,
        "fixLineNum": 82,
        "fixNodeStartChar": 3457,
        "fixNodeLength": 38,
        "sourceBeforeFix": "executionJobVertex.getParallelism()",
        "sourceAfterFix": "executionJobVertex.getMaxParallelism()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40a36841e2ed139a2a8714ccdafcaee49693f48f",
        "fixCommitParentSHA1": "32019c10bbd7215aba0856f50dfa1b80fdb59088",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\nindex 48d334a..3c83a7c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n@@ -12423,7 +12423,7 @@\n                   + \" does not have the field \" + field));\n         }\n         if (!lInfo.getInternalName().equals(rInfo.getInternalName())) {\n-          throw new SemanticException(generateErrorMessage(tabref,\n+          throw new OptiqSemanticException(generateErrorMessage(tabref,\n               \"Schema of both sides of union should match: field \" + field + \":\"\n                   + \" appears on the left side of the UNION at column position: \"\n                   + getPositionFromInternalName(lInfo.getInternalName())\n@@ -12435,7 +12435,7 @@\n         TypeInfo commonTypeInfo = FunctionRegistry.getCommonClassForUnionAll(lInfo.getType(),\n             rInfo.getType());\n         if (commonTypeInfo == null) {\n-          throw new SemanticException(generateErrorMessage(tabref,\n+          throw new OptiqSemanticException(generateErrorMessage(tabref,\n               \"Schema of both sides of union should match: Column \" + field + \" is of type \"\n                   + lInfo.getType().getTypeName() + \" on first table and type \"\n                   + rInfo.getType().getTypeName() + \" on second table\"));\n@@ -13293,7 +13293,7 @@\n                 grpbyExpr, new TypeCheckCtx(groupByInputRowResolver));\n             ExprNodeDesc grpbyExprNDesc = astToExprNDescMap.get(grpbyExpr);\n             if (grpbyExprNDesc == null)\n-              throw new RuntimeException(\"Invalid Column Reference: \" + grpbyExpr.dump());\n+              throw new OptiqSemanticException(\"Invalid Column Reference: \" + grpbyExpr.dump());\n \n             addToGBExpr(groupByOutputRowResolver, groupByInputRowResolver, grpbyExpr,\n                 grpbyExprNDesc, gbExprNDescLst, outputColumnNames);\n",
        "projectName": "apache.hive",
        "bugLineNum": 12438,
        "bugNodeStartChar": 494412,
        "bugNodeLength": 296,
        "fixLineNum": 12438,
        "fixNodeStartChar": 494412,
        "fixNodeLength": 301,
        "sourceBeforeFix": "new SemanticException(generateErrorMessage(tabref,\"Schema of both sides of union should match: Column \" + field + \" is of type \"+ lInfo.getType().getTypeName()+ \" on first table and type \"+ rInfo.getType().getTypeName()+ \" on second table\"))",
        "sourceAfterFix": "new OptiqSemanticException(generateErrorMessage(tabref,\"Schema of both sides of union should match: Column \" + field + \" is of type \"+ lInfo.getType().getTypeName()+ \" on first table and type \"+ rInfo.getType().getTypeName()+ \" on second table\"))"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "55fb8b3008f3a0514ad28982f884d5d20fba9fe2",
        "fixCommitParentSHA1": "3e4853d6ad9282b0aff0ee8c1201b737bdab61f5",
        "bugFilePath": "components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java",
        "fixPatch": "diff --git a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java\nindex a1e3bbb..e347716 100755\n--- a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java\n+++ b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheProducer.java\n@@ -102,13 +102,13 @@\n                 LOG.debug(\"Adding an element with key \" + key + \" into the Cache\");\n             }\n             element = createElementFromBody(exchange, CacheConstants.CACHE_OPERATION_ADD);\n-            cache.put(new Element(key, element), true);\n+            cache.put(new Element(key, element));\n         } else if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_UPDATE)) {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Updating an element with key \" + key + \" into the Cache\");\n             }\n             element = createElementFromBody(exchange, CacheConstants.CACHE_OPERATION_UPDATE);\n-            cache.put(new Element(key, element), true);\n+            cache.put(new Element(key, element));\n         } else if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_DELETEALL)) {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Deleting All elements from the Cache\");\n@@ -118,7 +118,7 @@\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Deleting an element with key \" + key + \" into the Cache\");\n             }\n-            cache.remove(key, true);\n+            cache.remove(key);\n         } else if (operation.equalsIgnoreCase(CacheConstants.CACHE_OPERATION_GET)) {\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Quering an element with key \" + key + \" from the Cache\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 105,
        "bugNodeStartChar": 4392,
        "bugNodeLength": 42,
        "fixLineNum": 105,
        "fixNodeStartChar": 4392,
        "fixNodeLength": 36,
        "sourceBeforeFix": "cache.put(new Element(key,element),true)",
        "sourceAfterFix": "cache.put(new Element(key,element))"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "8fffaa7778e75625710adc9e458e7a549c525ce9",
        "fixCommitParentSHA1": "908dea8e416f383b40e4fb21d6867fd43e8a47ac",
        "bugFilePath": "hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java",
        "fixPatch": "diff --git a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\nindex 4c800c4..4b73087 100644\n--- a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\n+++ b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\n@@ -81,7 +81,7 @@\n       priorRange = ranges[i];\n       cumNum = val;\n     }\n-    long val = histogram.getCount();\n+    long val = snapshot.getCount();\n     if (val - cumNum > 0) {\n       metricsRecordBuilder.addCounter(\n           Interns.info(name + \"_\" + rangeType + \"_\" + ranges[ranges.length - 1] + \"-inf\", desc),\n",
        "projectName": "apache.hbase",
        "bugLineNum": 84,
        "bugNodeStartChar": 2950,
        "bugNodeLength": 20,
        "fixLineNum": 84,
        "fixNodeStartChar": 2950,
        "fixNodeLength": 19,
        "sourceBeforeFix": "histogram.getCount()",
        "sourceAfterFix": "snapshot.getCount()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "39a8ea967e9f35cb5eab811c5d7d4d8451be747d",
        "fixCommitParentSHA1": "004798452cd63397d4c16421e2b77e90d503d943",
        "bugFilePath": "bundles/binding/org.openhab.binding.swegonventilation/src/main/java/org/openhab/binding/swegonventilation/protocol/SwegonVentilationUDPConnector.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.swegonventilation/src/main/java/org/openhab/binding/swegonventilation/protocol/SwegonVentilationUDPConnector.java b/bundles/binding/org.openhab.binding.swegonventilation/src/main/java/org/openhab/binding/swegonventilation/protocol/SwegonVentilationUDPConnector.java\nindex 7493576..6e23814 100644\n--- a/bundles/binding/org.openhab.binding.swegonventilation/src/main/java/org/openhab/binding/swegonventilation/protocol/SwegonVentilationUDPConnector.java\n+++ b/bundles/binding/org.openhab.binding.swegonventilation/src/main/java/org/openhab/binding/swegonventilation/protocol/SwegonVentilationUDPConnector.java\n@@ -74,7 +74,7 @@\n \t@Override\n \tpublic void disconnect() throws SwegonVentilationException {\n \n-\t\tif (socket == null) {\n+\t\tif (socket != null) {\n \t\t\tsocket.close();\n \t\t\tsocket = null;\n \t\t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 77,
        "bugNodeStartChar": 2369,
        "bugNodeLength": 14,
        "fixLineNum": 77,
        "fixNodeStartChar": 2369,
        "fixNodeLength": 14,
        "sourceBeforeFix": "socket == null",
        "sourceAfterFix": "socket != null"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "d0a169978942736556fd0af1b8e4306c0291e107",
        "fixCommitParentSHA1": "20d5581270c9643f2764f7f5a4cab0e5ea84a673",
        "bugFilePath": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java",
        "fixPatch": "diff --git a/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java b/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java\nindex 1298b87..ff121ae 100644\n--- a/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java\n+++ b/storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java\n@@ -1226,7 +1226,7 @@\n      * @return nullToZero\n      */\n     private static Long nullToZero(Long value) {\n-        return Objects.isNull(value) ? value : 0;\n+        return !Objects.isNull(value) ? value : 0;\n     }\n \n     /**\n@@ -1235,7 +1235,7 @@\n      * @return nullToZero\n      */\n     private static Double nullToZero(Double value) {\n-        return Objects.isNull(value) ? value : 0;\n+        return !Objects.isNull(value) ? value : 0;\n     }\n \n     /**\n",
        "projectName": "apache.storm",
        "bugLineNum": 1229,
        "bugNodeStartChar": 51612,
        "bugNodeLength": 21,
        "fixLineNum": 1229,
        "fixNodeStartChar": 51612,
        "fixNodeLength": 22,
        "sourceBeforeFix": "Objects.isNull(value)",
        "sourceAfterFix": "!Objects.isNull(value)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5bd04f29e3b4b0392a9c8133d6dddd0e33d09229",
        "fixCommitParentSHA1": "50b19c2c0d1ca9f1469d4122ab5586b92500b5e1",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\nindex eef07ce..4d3e1c6 100644\n--- a/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n+++ b/graylog2-server/src/main/java/org/graylog2/outputs/DiscardMessageOutput.java\n@@ -81,9 +81,9 @@\n         messagesDiscarded.mark(messages.size());\n     }\n \n-    public interface Factory extends MessageOutput.Factory<GelfOutput> {\n+    public interface Factory extends MessageOutput.Factory<DiscardMessageOutput> {\n         @Override\n-        GelfOutput create(Stream stream, Configuration configuration);\n+        DiscardMessageOutput create(Stream stream, Configuration configuration);\n \n         @Override\n         Config getConfig();\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 84,
        "bugNodeStartChar": 2895,
        "bugNodeLength": 33,
        "fixLineNum": 84,
        "fixNodeStartChar": 2895,
        "fixNodeLength": 43,
        "sourceBeforeFix": "MessageOutput.Factory<GelfOutput>",
        "sourceAfterFix": "MessageOutput.Factory<DiscardMessageOutput>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8a4f25a6dcaae2b704bce5794e007131236cb0d7",
        "fixCommitParentSHA1": "3af616555a55aaf737b3b8613fec4c75b0a7b4fe",
        "bugFilePath": "core/camel-core/src/main/java/org/apache/camel/processor/ThrowExceptionProcessor.java",
        "fixPatch": "diff --git a/core/camel-core/src/main/java/org/apache/camel/processor/ThrowExceptionProcessor.java b/core/camel-core/src/main/java/org/apache/camel/processor/ThrowExceptionProcessor.java\nindex 0d5e16d..ba5ddc7 100644\n--- a/core/camel-core/src/main/java/org/apache/camel/processor/ThrowExceptionProcessor.java\n+++ b/core/camel-core/src/main/java/org/apache/camel/processor/ThrowExceptionProcessor.java\n@@ -58,7 +58,7 @@\n                 // create the message using simple language so it can be dynamic\n                 String text = simple.evaluate(exchange, String.class);\n                 // create a new exception of that type, and provide the message as\n-                Constructor<?> constructor = type.getDeclaredConstructor(String.class);\n+                Constructor<?> constructor = type.getConstructor(String.class);\n                 cause = (Exception) constructor.newInstance(text);\n                 exchange.setException(cause);\n             } else if (cause == null && type != null) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 61,
        "bugNodeStartChar": 2470,
        "bugNodeLength": 41,
        "fixLineNum": 61,
        "fixNodeStartChar": 2470,
        "fixNodeLength": 33,
        "sourceBeforeFix": "type.getDeclaredConstructor(String.class)",
        "sourceAfterFix": "type.getConstructor(String.class)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5530d4c27d508c513b68af67aadede84b4cfa102",
        "fixCommitParentSHA1": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\nindex 6cbd4ac..c3fea74 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java\n@@ -70,8 +70,8 @@\n     /** Qualified name for element 'allow'. */\n     private static final String ALLOW_ELEMENT_NAME = \"allow\";\n \n-    /** Used to hold the {@link PkgControl} objects. */\n-    private final Deque<PkgControl> stack = new ArrayDeque<>();\n+    /** Used to hold the {@link ImportControl} objects. */\n+    private final Deque<ImportControl> stack = new ArrayDeque<>();\n \n     static {\n         DTD_RESOURCE_BY_ID.put(DTD_PUBLIC_ID_1_0, DTD_RESOURCE_NAME_1_0);\n@@ -97,12 +97,12 @@\n         if (\"import-control\".equals(qName)) {\n             final String pkg = safeGet(attributes, PKG_ATTRIBUTE_NAME);\n             final boolean regex = containsRegexAttribute(attributes);\n-            stack.push(new PkgControl(pkg, regex));\n+            stack.push(new ImportControl(pkg, regex));\n         }\n         else if (SUBPACKAGE_ELEMENT_NAME.equals(qName)) {\n             final String name = safeGet(attributes, \"name\");\n             final boolean regex = containsRegexAttribute(attributes);\n-            stack.push(new PkgControl(stack.peek(), name, regex));\n+            stack.push(new ImportControl(stack.peek(), name, regex));\n         }\n         else if (ALLOW_ELEMENT_NAME.equals(qName) || \"disallow\".equals(qName)) {\n             // Need to handle either \"pkg\" or \"class\" attribute.\n@@ -148,10 +148,10 @@\n     /**\n      * Loads the import control file from a file.\n      * @param uri the uri of the file to load.\n-     * @return the root {@link PkgControl} object.\n+     * @return the root {@link ImportControl} object.\n      * @throws CheckstyleException if an error occurs.\n      */\n-    public static PkgControl load(final URI uri) throws CheckstyleException {\n+    public static ImportControl load(final URI uri) throws CheckstyleException {\n         final InputStream inputStream;\n         try {\n             inputStream = uri.toURL().openStream();\n@@ -170,10 +170,10 @@\n      * Loads the import control file from a {@link InputSource}.\n      * @param source the source to load from.\n      * @param uri uri of the source being loaded.\n-     * @return the root {@link PkgControl} object.\n+     * @return the root {@link ImportControl} object.\n      * @throws CheckstyleException if an error occurs.\n      */\n-    private static PkgControl load(final InputSource source,\n+    private static ImportControl load(final InputSource source,\n         final URI uri) throws CheckstyleException {\n         try {\n             final ImportControlLoader loader = new ImportControlLoader();\n@@ -190,9 +190,9 @@\n     }\n \n     /**\n-     * @return the root {@link PkgControl} object loaded.\n+     * @return the root {@link ImportControl} object loaded.\n      */\n-    private PkgControl getRoot() {\n+    private ImportControl getRoot() {\n         return stack.peek();\n     }\n \n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 192,
        "bugNodeStartChar": 7677,
        "bugNodeLength": 139,
        "fixLineNum": 192,
        "fixNodeStartChar": 7677,
        "fixNodeLength": 142,
        "sourceBeforeFix": "/**   * @return the root {@link PkgControl} object loaded.  */ private PkgControl getRoot(){   return stack.peek(); } ",
        "sourceAfterFix": "/**   * @return the root {@link PkgControl} object loaded.  */ private ImportControl getRoot(){   return stack.peek(); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e6bf561b6532c12c8bb202ba7e03aa3f2e6b8a2b",
        "fixCommitParentSHA1": "9295871b96ca73c965e8994bb9d8b2e730bb1d02",
        "bugFilePath": "gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\nindex 66d6a2a..297e382 100644\n--- a/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n+++ b/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java\n@@ -47,7 +47,7 @@\n \t\ttextureParam.minFilter = TextureFilter.Linear;\r\n \t\ttextureParam.magFilter = TextureFilter.Linear;\r\n \t\tif (parameter == null)\r\n-\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).nameWithoutExtension() + \".png\", Texture.class, textureParam));\r\n+\t\t\tdeps.add(new AssetDescriptor(Gdx.files.internal(fileName).pathWithoutExtension() + \".png\", Texture.class, textureParam));\r\n \t\telse\r\n \t\t\tdeps.add(new AssetDescriptor(parameter.texturePath, Texture.class, textureParam));\r\n \t\treturn deps;\r\n@@ -61,7 +61,7 @@\n \tpublic Skin loadSync (AssetManager manager, String fileName, SkinParameter parameter) {\r\n \t\tString texturePath;\r\n \t\tif (parameter == null)\r\n-\t\t\ttexturePath = Gdx.files.internal(fileName).nameWithoutExtension() + \".png\";\r\n+\t\t\ttexturePath = Gdx.files.internal(fileName).pathWithoutExtension() + \".png\";\r\n \t\telse\r\n \t\t\ttexturePath = parameter.texturePath;\r\n \t\tTexture texture = manager.get(texturePath, Texture.class);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 50,
        "bugNodeStartChar": 2294,
        "bugNodeLength": 51,
        "fixLineNum": 50,
        "fixNodeStartChar": 2245,
        "fixNodeLength": 51,
        "sourceBeforeFix": "Gdx.files.internal(fileName).nameWithoutExtension()",
        "sourceAfterFix": "Gdx.files.internal(fileName).pathWithoutExtension()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c888434580c601ac9c4734e19d8eefac63518031",
        "fixCommitParentSHA1": "8818cf9ff4c491391eea41952031a91036dd62e0",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\nindex c20a70d..d80afd1 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavascriptClientCodegen.java\n@@ -762,9 +762,11 @@\n             + (StringUtils.isEmpty(modelPackage) ? \"\" : (modelPackage + \"/\")) + dataType;\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenModel cm, CodegenProperty cp) {\n         return \"{\" + getJSDocType(cm, cp) + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenModel cm, CodegenProperty cp) {\n         if (Boolean.TRUE.equals(cp.isContainer)) {\n@@ -787,9 +789,11 @@\n         return cp.isEnum || !languageSpecificPrimitives.contains(cp.baseType == null ? cp.datatype : cp.baseType);\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenParameter cp) {\n         return \"{\" + getJSDocType(cp) + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenParameter cp) {\n         String dataType = trimBrackets(cp.dataType);\n@@ -808,10 +812,12 @@\n         return cp.isEnum || !languageSpecificPrimitives.contains(cp.baseType == null ? cp.dataType : cp.baseType);\n     }\n \n+    /*\n     private String getJSDocTypeWithBraces(CodegenOperation co) {\n         String jsDocType = getJSDocType(co);\n         return jsDocType == null ? null : \"{\" + jsDocType + \"}\";\n     }\n+    */\n \n     private String getJSDocType(CodegenOperation co) {\n         String returnType = trimBrackets(co.returnType);\n@@ -860,10 +866,10 @@\n \n                 // Store JSDoc type specification into vendor-extension: x-jsdoc-type.\n                 for (CodegenParameter cp : operation.allParams) {\n-                    String jsdocType = getJSDocTypeWithBraces(cp);\n+                    String jsdocType = getJSDocType(cp);\n                     cp.vendorExtensions.put(\"x-jsdoc-type\", jsdocType);\n                 }\n-                String jsdocType = getJSDocTypeWithBraces(operation);\n+                String jsdocType = getJSDocType(operation);\n                 operation.vendorExtensions.put(\"x-jsdoc-type\", jsdocType);\n             }\n         }\n@@ -889,7 +895,7 @@\n \n             for (CodegenProperty var : cm.vars) {\n                 // Add JSDoc @type value for this property.\n-                String jsDocType = getJSDocTypeWithBraces(cm, var);\n+                String jsDocType = getJSDocType(cm, var);\n                 var.vendorExtensions.put(\"x-jsdoc-type\", jsDocType);\n \n                 if (Boolean.TRUE.equals(var.required)) {\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 892,
        "bugNodeStartChar": 35985,
        "bugNodeLength": 31,
        "fixLineNum": 892,
        "fixNodeStartChar": 35985,
        "fixNodeLength": 21,
        "sourceBeforeFix": "getJSDocTypeWithBraces(cm,var)",
        "sourceAfterFix": "getJSDocType(cm,var)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "35e2253c8ceb7dc8f9d0d97355491fdf0b34db89",
        "fixCommitParentSHA1": "a21b8cb6e37559404f05e42b84f4d44b26bdce82",
        "bugFilePath": "actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java",
        "fixPatch": "diff --git a/actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java b/actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java\nindex bb49d7e..042648b 100644\n--- a/actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java\n+++ b/actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java\n@@ -17,14 +17,17 @@\n     private static final String TAG = \"Toast\";\n \n     public static Toast makeText(Context context, CharSequence s, int duration) {\n-        if(VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {\n+        if (VERSION.SDK_INT >= VERSION_CODES.ICE_CREAM_SANDWICH) {\n             return Toast.makeText(context, s, duration);\n         }\n         IcsToast toast = new IcsToast(context);\n         toast.setDuration(duration);\n         TextView view = new TextView(context);\n         view.setText(s);\n-        view.setTextColor(0xFFDADADA);\n+        // Original AOSP using reference on @android:color/bright_foreground_dark\n+        // bright_foreground_dark - reference on @android:color/background_light\n+        // background_light - 0xffffffff\n+        view.setTextColor(0xffffffff);\n         view.setGravity(Gravity.CENTER);\n         view.setBackgroundResource(R.drawable.abs__toast_frame);\n         toast.setView(view);\n@@ -41,7 +44,7 @@\n \n     @Override\n     public void setText(CharSequence s) {\n-        if(VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {\n+        if (VERSION.SDK_INT >= VERSION_CODES.ICE_CREAM_SANDWICH) {\n             super.setText(s);\n             return;\n         }\n@@ -51,7 +54,7 @@\n         try {\n             ((TextView) getView()).setText(s);\n         } catch (ClassCastException e) {\n-            Log.e(IcsToast.TAG, \"This Toast was not created with IcsToast.makeText\", e);\n+            Log.e(TAG, \"This Toast was not created with IcsToast.makeText\", e);\n         }\n     }\n }\n",
        "projectName": "JakeWharton.ActionBarSherlock",
        "bugLineNum": 27,
        "bugNodeStartChar": 883,
        "bugNodeLength": 29,
        "fixLineNum": 30,
        "fixNodeStartChar": 1087,
        "fixNodeLength": 29,
        "sourceBeforeFix": "view.setTextColor(0xFFDADADA)",
        "sourceAfterFix": "view.setTextColor(0xffffffff)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f47d4f07970a09a1aaf5b0e94eb5fe53c2e4b14f",
        "fixCommitParentSHA1": "a34010a5cf5a3df842b9ddb7951f556076bc1f3f",
        "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
        "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex 38b5aaf..2056472 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -285,11 +285,11 @@\n     }\n \n     public Map<String, String> getInputTypes() throws IOException, APIException {\n-        return api.path(routes.InputsResource().types(), InputTypesResponse.class).node(this).execute().types;\n+        return api.path(routes.InputTypesResource().types(), InputTypesResponse.class).node(this).execute().types;\n     }\n \n     public InputTypeSummaryResponse getInputTypeInformation(String type) throws IOException, APIException {\n-        return api.path(routes.InputsResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n+        return api.path(routes.InputTypesResource().info(type), InputTypeSummaryResponse.class).node(this).execute();\n     }\n \n     public Map<String, InputTypeSummaryResponse> getAllInputTypeInformation() throws IOException, APIException {\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 288,
        "bugNodeStartChar": 10963,
        "bugNodeLength": 23,
        "fixLineNum": 288,
        "fixNodeStartChar": 10963,
        "fixNodeLength": 27,
        "sourceBeforeFix": "routes.InputsResource()",
        "sourceAfterFix": "routes.InputTypesResource()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8b849574ca1186c65124b43da8de6be6bace3f96",
        "fixCommitParentSHA1": "863decce5f38c8cde9882a0e172cbfe469f05743",
        "bugFilePath": "src/jvm/clojure/lang/Util.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Util.java b/src/jvm/clojure/lang/Util.java\nindex eb94bfb..a3306db 100644\n--- a/src/jvm/clojure/lang/Util.java\n+++ b/src/jvm/clojure/lang/Util.java\n@@ -35,6 +35,7 @@\n \treturn k1 != null && k1.equals(k2);\n }\n \n+//*\n static public boolean equals(long x, long y){\n \treturn x == y;\n }\n@@ -44,20 +45,21 @@\n }\n \n static public boolean equals(long x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals(Numbers.num(x),y);\n }\n \n static public boolean equals(Object x, long y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,Numbers.num(y));\n }\n \n static public boolean equals(double x, Object y){\n-\treturn equals((Object)x,y);\n+\treturn equals((Double)x,y);\n }\n \n static public boolean equals(Object x, double y){\n-\treturn equals(x,(Object)y);\n+\treturn equals(x,(Double)y);\n }\n+//*/\n \n static public boolean identical(Object k1, Object k2){\n \treturn k1 == k2;\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 59,
        "bugNodeStartChar": 1506,
        "bugNodeLength": 9,
        "fixLineNum": 59,
        "fixNodeStartChar": 1506,
        "fixNodeLength": 9,
        "sourceBeforeFix": "(Object)y",
        "sourceAfterFix": "(Double)y"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "307f01bf7c83512ca0762935d34c70ba6073b7b2",
        "fixCommitParentSHA1": "d8807671627ee4add1bbe67e6ae19adbf8515938",
        "bugFilePath": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java",
        "fixPatch": "diff --git a/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java b/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\nindex 59fea1e..3fd8cad 100644\n--- a/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\n+++ b/storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java\n@@ -1025,7 +1025,7 @@\n                 state = MachineState.RUNNING;\n             }\n \n-            this.startTime = System.currentTimeMillis();\n+            this.startTime = Time.currentTimeMillis();\n             this.newAssignment = newAssignment;\n             this.pendingLocalization = null;\n             this.pendingDownload = null;\n",
        "projectName": "apache.storm",
        "bugLineNum": 1028,
        "bugNodeStartChar": 49877,
        "bugNodeLength": 26,
        "fixLineNum": 1028,
        "fixNodeStartChar": 49877,
        "fixNodeLength": 24,
        "sourceBeforeFix": "System.currentTimeMillis()",
        "sourceAfterFix": "Time.currentTimeMillis()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "52f08044d059ecb590df82b98f1f68b9137e2c29",
        "fixCommitParentSHA1": "2ac40593c435265d10eed940b3d31d98dee43871",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTest.java b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTest.java\nindex 7d368ae..8de4f0b 100644\n--- a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTest.java\n@@ -55,7 +55,7 @@\n \n @RunWith(HazelcastSerialClassRunner.class)\n @Category(QuickTest.class)\n-public class ReplicatedMapTest extends ReplicatedMapBaseTest {\n+public class ReplicatedMapTest extends ReplicatedMapAbstractTest {\n \n     @Test\n     public void testEmptyMapIsEmpty() throws Exception {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 56,
        "bugNodeStartChar": 1991,
        "bugNodeLength": 31778,
        "fixLineNum": 56,
        "fixNodeStartChar": 1991,
        "fixNodeLength": 31782,
        "sourceBeforeFix": "@RunWith(HazelcastSerialClassRunner.class) @Category(QuickTest.class) public class ReplicatedMapTest extends ReplicatedMapBaseTest {   @Test public void testEmptyMapIsEmpty() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     assertTrue(\"map should be empty\",map.isEmpty());   }   @Test public void testNonEmptyMapIsNotEmpty() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     map.put(1,1);     assertFalse(\"map should not be empty\",map.isEmpty());   }   @Test(expected=IllegalArgumentException.class) public void testNegativeTtlThrowsException() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     map.put(1,1,-1,TimeUnit.DAYS);   }   @Test public void testAddObject() throws Exception {     testAdd(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddBinary() throws Exception {     testAdd(buildConfig(InMemoryFormat.BINARY));   }   private void testAdd(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );   }   @Test public void testPutAllObject() throws Exception {     testPutAll(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testPutAllBinary() throws Exception {     testPutAll(buildConfig(InMemoryFormat.BINARY));   }   private void testPutAll(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     final Map<String,String> mapTest=new HashMap<String,String>();     for (    String key : keys) {       mapTest.put(key,\"bar\");     }     map1.putAll(mapTest);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );   }   @Test public void testClearObject() throws Exception {     testClear(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testClearBinary() throws Exception {     testClear(buildConfig(InMemoryFormat.BINARY));   }   private void testClear(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     map1.clear();     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(0,map1.size());         assertEquals(0,map2.size());       }     } );   }   @Test public void testAddTtlObject() throws Exception {     testAddTtl(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddTtlBinary() throws Exception {     testAddTtl(buildConfig(InMemoryFormat.BINARY));   }   private void testAddTtl(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\",10,TimeUnit.MINUTES);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map1,key);           assertNotNull(record);           assertNotEquals(0,record.getTtlMillis());         }       }     } );     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map2.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map2,key);           assertNotNull(record);           assertNotEquals(0,record.getTtlMillis());         }       }     } );   }   @Test public void testUpdateObject() throws Exception {     testUpdate(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testUpdateBinary() throws Exception {     testUpdate(buildConfig(InMemoryFormat.BINARY));   }   private void testUpdate(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.put(key,\"bar2\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map1.get(key));           assertEquals(\"bar2\",map2.get(key));         }       }     } );   }   @Test public void testUpdateTtlObject() throws Exception {     testUpdateTtl(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testUpdateTtlBinary() throws Exception {     testUpdateTtl(buildConfig(InMemoryFormat.BINARY));   }   private void testUpdateTtl(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.put(key,\"bar2\",10,TimeUnit.MINUTES);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map1.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map1,key);           assertNotNull(record);           assertTrue(record.getTtlMillis() > 0);         }       }     } );     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map2.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map2,key);           assertNotNull(record);           assertTrue(record.getTtlMillis() > 0);         }       }     } );   }   @Test public void testRemoveObject() throws Exception {     testRemove(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testRemoveBinary() throws Exception {     testRemove(buildConfig(InMemoryFormat.BINARY));   }   @Test public void testContainsKey_returnsFalse_onRemovedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.remove(1);     assertFalse(map.containsKey(1));   }   @Test public void testContainsKey_returnsFalse_onNonexistentKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     assertFalse(map.containsKey(1));   }   @Test public void testContainsKey_returnsTrue_onExistingKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     assertTrue(map.containsKey(1));   }   @Test public void testKeySet_notIncludes_removedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     final ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.put(2,Integer.MIN_VALUE);     map.remove(1);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         Set<Integer> keys=new HashSet<Integer>(map.keySet());         assertFalse(keys.contains(1));       }     } ,20);   }   @Test public void testEntrySet_notIncludes_removedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     final ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.put(2,Integer.MIN_VALUE);     map.remove(1);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         Set<Entry<Integer,Integer>> entries=map.entrySet();         for (        Entry<Integer,Integer> entry : entries) {           if (entry.getKey().equals(1)) {             fail(String.format(\"We do not expect an entry which's key equals to %d in entry set\",1));           }         }       }     } ,20);   }   private void testRemove(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.remove(key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertFalse(map1.containsKey(key));           assertFalse(map2.containsKey(key));         }       }     } );   }   @Test public void testSizeObject() throws Exception {     testSize(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testSizeBinary() throws Exception {     testSize(buildConfig(InMemoryFormat.BINARY));   }   private void testSize(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     final SimpleEntry<String,String>[] testValues=buildTestValues(keys);     int half=testValues.length / 2;     for (int i=0; i < testValues.length; i++) {       final ReplicatedMap<String,String> map=i < half ? map1 : map2;       final SimpleEntry<String,String> entry=testValues[i];       map.put(entry.getKey(),entry.getValue());     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys.size(),map1.size());         assertEquals(keys.size(),map2.size());       }     } );   }   @Test public void testContainsKeyObject() throws Exception {     testContainsKey(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testContainsKeyBinary() throws Exception {     testContainsKey(buildConfig(InMemoryFormat.BINARY));   }   private void testContainsKey(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertTrue(map1.containsKey(key));           assertTrue(map2.containsKey(key));         }       }     } );   }   @Test public void testContainsValue_returnsFalse_onNonexistentValue() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     assertFalse(map.containsValue(1));   }   @Test public void testContainsValueObject() throws Exception {     testContainsValue(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testContainsValueBinary() throws Exception {     testContainsValue(buildConfig(InMemoryFormat.BINARY));   }   private void testContainsValue(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertTrue(map1.containsValue(key));           assertTrue(map2.containsValue(key));         }       }     } );   }   @Test public void testValuesWithComparator() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     for (int i=0; i < 100; i++) {       map.put(i,i);     }     Collection<Integer> values=map.values(new DescendingComparator());     int v=100;     for (    Integer value : values) {       assertEquals(--v,(int)value);     }   }   @Test public void testValuesObject() throws Exception {     testValues(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testValuesBinary() throws Exception {     testValues(buildConfig(InMemoryFormat.BINARY));   }   private void testValues(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys,new HashSet<String>(map1.values()));         assertEquals(keys,new HashSet<String>(map2.values()));       }     } );   }   @Test public void testKeySetObject() throws Exception {     testKeySet(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testKeySetBinary() throws Exception {     testKeySet(buildConfig(InMemoryFormat.BINARY));   }   private void testKeySet(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys,new HashSet<String>(map1.keySet()));         assertEquals(keys,new HashSet<String>(map2.keySet()));       }     } );   }   @Test public void testEntrySetObject() throws Exception {     testEntrySet(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testEntrySetBinary() throws Exception {     testEntrySet(buildConfig(InMemoryFormat.BINARY));   }   private void testEntrySet(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         List<Entry<String,String>> entrySet1=new ArrayList<Entry<String,String>>(map1.entrySet());         List<Entry<String,String>> entrySet2=new ArrayList<Entry<String,String>>(map2.entrySet());         assertEquals(keys.size(),entrySet1.size());         assertEquals(keys.size(),entrySet2.size());         for (        Entry<String,String> e : entrySet1) {           assertTrue(keys.contains(e.getKey()));         }         for (        Entry<String,String> e : entrySet2) {           assertTrue(keys.contains(e.getKey()));         }       }     } );   }   @Test public void testAddListenerObject() throws Exception {     testAddEntryListener(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddListenerBinary() throws Exception {     testAddEntryListener(buildConfig(InMemoryFormat.BINARY));   }   private void testAddEntryListener(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     SimpleEntryListener listener=new SimpleEntryListener(1,0);     map2.addEntryListener(listener,keys.iterator().next());     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertOpenEventually(listener.addLatch);   }   @Test public void testEvictionObject() throws Exception {     testEviction(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testEvictionBinary() throws Exception {     testEviction(buildConfig(InMemoryFormat.BINARY));   }   private void testEviction(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     SimpleEntryListener listener=new SimpleEntryListener(0,100);     map2.addEntryListener(listener);     SimpleEntryListener listenerKey=new SimpleEntryListener(0,1);     map1.addEntryListener(listenerKey,keys.iterator().next());     for (    String key : keys) {       map1.put(key,\"bar\",3,TimeUnit.SECONDS);     }     assertOpenEventually(listener.evictLatch);     assertOpenEventually(listenerKey.evictLatch);   } private class SimpleEntryListener extends EntryAdapter<String,String> {     CountDownLatch addLatch;     CountDownLatch evictLatch;     SimpleEntryListener(    int addCount,    int evictCount){       addLatch=new CountDownLatch(addCount);       evictLatch=new CountDownLatch(evictCount);     }     @Override public void entryAdded(    EntryEvent event){       addLatch.countDown();     }     @Override public void entryEvicted(    EntryEvent event){       evictLatch.countDown();     }   }   @Test(expected=IllegalArgumentException.class) public void putNullKey() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.put(null,1);   }   @Test(expected=IllegalArgumentException.class) public void removeNullKey() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.remove(null);   }   @Test public void removeEmptyListener() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     assertFalse(map1.removeEntryListener(\"2\"));   }   @Test(expected=IllegalArgumentException.class) public void removeNullListener() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.removeEntryListener(null);   }   @Test public void testSizeAfterRemove() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.remove(1);     assertTrue(map.size() == 0);   }   @Test public void testDestroy() throws Exception {     HazelcastInstance instance=createHazelcastInstance();     ReplicatedMap<Object,Object> replicatedMap=instance.getReplicatedMap(randomName());     replicatedMap.put(1,1);     replicatedMap.destroy();     Collection<DistributedObject> objects=instance.getDistributedObjects();     assertEquals(0,objects.size());   } class DescendingComparator implements Comparator<Integer> {     @Override public int compare(    Integer o1,    Integer o2){       return o1 == o2 ? 0 : o1 > o2 ? -1 : 1;     }   } } ",
        "sourceAfterFix": "@RunWith(HazelcastSerialClassRunner.class) @Category(QuickTest.class) public class ReplicatedMapTest extends ReplicatedMapAbstractTest {   @Test public void testEmptyMapIsEmpty() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     assertTrue(\"map should be empty\",map.isEmpty());   }   @Test public void testNonEmptyMapIsNotEmpty() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     map.put(1,1);     assertFalse(\"map should not be empty\",map.isEmpty());   }   @Test(expected=IllegalArgumentException.class) public void testNegativeTtlThrowsException() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     map.put(1,1,-1,TimeUnit.DAYS);   }   @Test public void testAddObject() throws Exception {     testAdd(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddBinary() throws Exception {     testAdd(buildConfig(InMemoryFormat.BINARY));   }   private void testAdd(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );   }   @Test public void testPutAllObject() throws Exception {     testPutAll(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testPutAllBinary() throws Exception {     testPutAll(buildConfig(InMemoryFormat.BINARY));   }   private void testPutAll(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     final Map<String,String> mapTest=new HashMap<String,String>();     for (    String key : keys) {       mapTest.put(key,\"bar\");     }     map1.putAll(mapTest);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );   }   @Test public void testClearObject() throws Exception {     testClear(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testClearBinary() throws Exception {     testClear(buildConfig(InMemoryFormat.BINARY));   }   private void testClear(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     map1.clear();     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(0,map1.size());         assertEquals(0,map2.size());       }     } );   }   @Test public void testAddTtlObject() throws Exception {     testAddTtl(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddTtlBinary() throws Exception {     testAddTtl(buildConfig(InMemoryFormat.BINARY));   }   private void testAddTtl(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\",10,TimeUnit.MINUTES);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map1,key);           assertNotNull(record);           assertNotEquals(0,record.getTtlMillis());         }       }     } );     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map2.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map2,key);           assertNotNull(record);           assertNotEquals(0,record.getTtlMillis());         }       }     } );   }   @Test public void testUpdateObject() throws Exception {     testUpdate(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testUpdateBinary() throws Exception {     testUpdate(buildConfig(InMemoryFormat.BINARY));   }   private void testUpdate(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.put(key,\"bar2\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map1.get(key));           assertEquals(\"bar2\",map2.get(key));         }       }     } );   }   @Test public void testUpdateTtlObject() throws Exception {     testUpdateTtl(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testUpdateTtlBinary() throws Exception {     testUpdateTtl(buildConfig(InMemoryFormat.BINARY));   }   private void testUpdateTtl(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.put(key,\"bar2\",10,TimeUnit.MINUTES);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map1.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map1,key);           assertNotNull(record);           assertTrue(record.getTtlMillis() > 0);         }       }     } );     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar2\",map2.get(key));           ReplicatedRecord<String,String> record=getReplicatedRecord(map2,key);           assertNotNull(record);           assertTrue(record.getTtlMillis() > 0);         }       }     } );   }   @Test public void testRemoveObject() throws Exception {     testRemove(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testRemoveBinary() throws Exception {     testRemove(buildConfig(InMemoryFormat.BINARY));   }   @Test public void testContainsKey_returnsFalse_onRemovedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.remove(1);     assertFalse(map.containsKey(1));   }   @Test public void testContainsKey_returnsFalse_onNonexistentKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     assertFalse(map.containsKey(1));   }   @Test public void testContainsKey_returnsTrue_onExistingKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     assertTrue(map.containsKey(1));   }   @Test public void testKeySet_notIncludes_removedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     final ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.put(2,Integer.MIN_VALUE);     map.remove(1);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         Set<Integer> keys=new HashSet<Integer>(map.keySet());         assertFalse(keys.contains(1));       }     } ,20);   }   @Test public void testEntrySet_notIncludes_removedKeys() throws Exception {     HazelcastInstance node=createHazelcastInstance();     final ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.put(2,Integer.MIN_VALUE);     map.remove(1);     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         Set<Entry<Integer,Integer>> entries=map.entrySet();         for (        Entry<Integer,Integer> entry : entries) {           if (entry.getKey().equals(1)) {             fail(String.format(\"We do not expect an entry which's key equals to %d in entry set\",1));           }         }       }     } ,20);   }   private void testRemove(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertEquals(\"bar\",map1.get(key));           assertEquals(\"bar\",map2.get(key));         }       }     } );     for (    String key : keys) {       map2.remove(key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertFalse(map1.containsKey(key));           assertFalse(map2.containsKey(key));         }       }     } );   }   @Test public void testSizeObject() throws Exception {     testSize(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testSizeBinary() throws Exception {     testSize(buildConfig(InMemoryFormat.BINARY));   }   private void testSize(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     final SimpleEntry<String,String>[] testValues=buildTestValues(keys);     int half=testValues.length / 2;     for (int i=0; i < testValues.length; i++) {       final ReplicatedMap<String,String> map=i < half ? map1 : map2;       final SimpleEntry<String,String> entry=testValues[i];       map.put(entry.getKey(),entry.getValue());     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys.size(),map1.size());         assertEquals(keys.size(),map2.size());       }     } );   }   @Test public void testContainsKeyObject() throws Exception {     testContainsKey(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testContainsKeyBinary() throws Exception {     testContainsKey(buildConfig(InMemoryFormat.BINARY));   }   private void testContainsKey(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertTrue(map1.containsKey(key));           assertTrue(map2.containsKey(key));         }       }     } );   }   @Test public void testContainsValue_returnsFalse_onNonexistentValue() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     assertFalse(map.containsValue(1));   }   @Test public void testContainsValueObject() throws Exception {     testContainsValue(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testContainsValueBinary() throws Exception {     testContainsValue(buildConfig(InMemoryFormat.BINARY));   }   private void testContainsValue(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         for (        String key : keys) {           assertTrue(map1.containsValue(key));           assertTrue(map2.containsValue(key));         }       }     } );   }   @Test public void testValuesWithComparator() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance=nodeFactory.newHazelcastInstance();     ReplicatedMap<Integer,Integer> map=instance.getReplicatedMap(randomName());     for (int i=0; i < 100; i++) {       map.put(i,i);     }     Collection<Integer> values=map.values(new DescendingComparator());     int v=100;     for (    Integer value : values) {       assertEquals(--v,(int)value);     }   }   @Test public void testValuesObject() throws Exception {     testValues(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testValuesBinary() throws Exception {     testValues(buildConfig(InMemoryFormat.BINARY));   }   private void testValues(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys,new HashSet<String>(map1.values()));         assertEquals(keys,new HashSet<String>(map2.values()));       }     } );   }   @Test public void testKeySetObject() throws Exception {     testKeySet(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testKeySetBinary() throws Exception {     testKeySet(buildConfig(InMemoryFormat.BINARY));   }   private void testKeySet(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         assertEquals(keys,new HashSet<String>(map1.keySet()));         assertEquals(keys,new HashSet<String>(map2.keySet()));       }     } );   }   @Test public void testEntrySetObject() throws Exception {     testEntrySet(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testEntrySetBinary() throws Exception {     testEntrySet(buildConfig(InMemoryFormat.BINARY));   }   private void testEntrySet(  Config config) throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     int half=keys.size() / 2, i=0;     for (    String key : keys) {       final ReplicatedMap<String,String> map=i++ < half ? map1 : map2;       map.put(key,key);     }     assertTrueEventually(new AssertTask(){       @Override public void run() throws Exception {         List<Entry<String,String>> entrySet1=new ArrayList<Entry<String,String>>(map1.entrySet());         List<Entry<String,String>> entrySet2=new ArrayList<Entry<String,String>>(map2.entrySet());         assertEquals(keys.size(),entrySet1.size());         assertEquals(keys.size(),entrySet2.size());         for (        Entry<String,String> e : entrySet1) {           assertTrue(keys.contains(e.getKey()));         }         for (        Entry<String,String> e : entrySet2) {           assertTrue(keys.contains(e.getKey()));         }       }     } );   }   @Test public void testAddListenerObject() throws Exception {     testAddEntryListener(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testAddListenerBinary() throws Exception {     testAddEntryListener(buildConfig(InMemoryFormat.BINARY));   }   private void testAddEntryListener(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     SimpleEntryListener listener=new SimpleEntryListener(1,0);     map2.addEntryListener(listener,keys.iterator().next());     for (    String key : keys) {       map1.put(key,\"bar\");     }     assertOpenEventually(listener.addLatch);   }   @Test public void testEvictionObject() throws Exception {     testEviction(buildConfig(InMemoryFormat.OBJECT));   }   @Test public void testEvictionBinary() throws Exception {     testEviction(buildConfig(InMemoryFormat.BINARY));   }   private void testEviction(  Config config) throws TimeoutException {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);     HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);     final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(\"default\");     final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(\"default\");     final int partitionCount=getPartitionService(instance1).getPartitionCount();     final Set<String> keys=generateRandomKeys(instance1,partitionCount);     SimpleEntryListener listener=new SimpleEntryListener(0,100);     map2.addEntryListener(listener);     SimpleEntryListener listenerKey=new SimpleEntryListener(0,1);     map1.addEntryListener(listenerKey,keys.iterator().next());     for (    String key : keys) {       map1.put(key,\"bar\",3,TimeUnit.SECONDS);     }     assertOpenEventually(listener.evictLatch);     assertOpenEventually(listenerKey.evictLatch);   } private class SimpleEntryListener extends EntryAdapter<String,String> {     CountDownLatch addLatch;     CountDownLatch evictLatch;     SimpleEntryListener(    int addCount,    int evictCount){       addLatch=new CountDownLatch(addCount);       evictLatch=new CountDownLatch(evictCount);     }     @Override public void entryAdded(    EntryEvent event){       addLatch.countDown();     }     @Override public void entryEvicted(    EntryEvent event){       evictLatch.countDown();     }   }   @Test(expected=IllegalArgumentException.class) public void putNullKey() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.put(null,1);   }   @Test(expected=IllegalArgumentException.class) public void removeNullKey() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.remove(null);   }   @Test public void removeEmptyListener() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     assertFalse(map1.removeEntryListener(\"2\"));   }   @Test(expected=IllegalArgumentException.class) public void removeNullListener() throws Exception {     TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(1);     HazelcastInstance instance1=nodeFactory.newHazelcastInstance();     ReplicatedMap<Object,Object> map1=instance1.getReplicatedMap(\"default\");     map1.removeEntryListener(null);   }   @Test public void testSizeAfterRemove() throws Exception {     HazelcastInstance node=createHazelcastInstance();     ReplicatedMap<Integer,Integer> map=node.getReplicatedMap(\"default\");     map.put(1,Integer.MAX_VALUE);     map.remove(1);     assertTrue(map.size() == 0);   }   @Test public void testDestroy() throws Exception {     HazelcastInstance instance=createHazelcastInstance();     ReplicatedMap<Object,Object> replicatedMap=instance.getReplicatedMap(randomName());     replicatedMap.put(1,1);     replicatedMap.destroy();     Collection<DistributedObject> objects=instance.getDistributedObjects();     assertEquals(0,objects.size());   } class DescendingComparator implements Comparator<Integer> {     @Override public int compare(    Integer o1,    Integer o2){       return o1 == o2 ? 0 : o1 > o2 ? -1 : 1;     }   } } "
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "f3110aaa4ebf75eeba09d6ca22103cc08bff57ed",
        "fixCommitParentSHA1": "6da5a65c70e544779a50f8cb6ebf629e22f0504a",
        "bugFilePath": "src/test/java/twitter4j/TwitterTestUnit.java",
        "fixPatch": "diff --git a/src/test/java/twitter4j/TwitterTestUnit.java b/src/test/java/twitter4j/TwitterTestUnit.java\nindex d5d040f..270696e 100644\n--- a/src/test/java/twitter4j/TwitterTestUnit.java\n+++ b/src/test/java/twitter4j/TwitterTestUnit.java\n@@ -247,9 +247,10 @@\n \n     public void testAccountMethods() throws Exception{\n         User original = twitterAPI1.verifyCredentials();\n-        if(original.getScreenName().endsWith(\"new\")){\n+        if(original.getScreenName().endsWith(\"new\") ||\n+                original.getName().endsWith(\"new\")){\n             original = twitterAPI1.updateProfile(\n-                    original.getName(), null, \"http://yusuke.homeip.net/twitter4j/\"\n+                    \"twit4j\", null, \"http://yusuke.homeip.net/twitter4j/\"\n                     , \"location:\" , \"Hi there, I do test a lot!new\");\n \n         }\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 250,
        "bugNodeStartChar": 10555,
        "bugNodeLength": 40,
        "fixLineNum": 250,
        "fixNodeStartChar": 10555,
        "fixNodeLength": 94,
        "sourceBeforeFix": "original.getScreenName().endsWith(\"new\")",
        "sourceAfterFix": "original.getScreenName().endsWith(\"new\") || original.getName().endsWith(\"new\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c634d7acdb3ce922a82807d8d85f863b65d0c673",
        "fixCommitParentSHA1": "a688096fc57f10eca4088dae9b0df3102379a31c",
        "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 95dc1f1..c730db6 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -211,7 +211,7 @@\n     @Override\n     public ItemStack clone() {\n         ItemStack result = new ItemStack(type, amount, durability);\n-        result.addEnchantments(getEnchantments());\n+        result.addUnsafeEnchantments(getEnchantments());\n \n         return result;\n     }\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 214,
        "bugNodeStartChar": 5708,
        "bugNodeLength": 41,
        "fixLineNum": 214,
        "fixNodeStartChar": 5708,
        "fixNodeLength": 47,
        "sourceBeforeFix": "result.addEnchantments(getEnchantments())",
        "sourceAfterFix": "result.addUnsafeEnchantments(getEnchantments())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4239763e8de74d0caf04eda4d9cafc2a182ab7cb",
        "fixCommitParentSHA1": "b3fea15ee3fd33362811b1c0e720f8ec3884b13c",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/PortableUtils.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/PortableUtils.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/PortableUtils.java\nindex 42818f8..131a29c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/PortableUtils.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/PortableUtils.java\n@@ -44,9 +44,9 @@\n     static int validateAndGetArrayQuantifierFromCurrentToken(String token, String fullPath) {\n         String quantifier = extractArgumentsFromAttributeName(token);\n         if (quantifier == null) {\n-            throw new IllegalArgumentException(\"Malformed quantifier \" + quantifier + \" in \" + fullPath);\n+            throw new IllegalArgumentException(\"Malformed quantifier in \" + fullPath);\n         }\n-        int index = Integer.valueOf(quantifier);\n+        int index = Integer.parseInt(quantifier);\n         if (index < 0) {\n             throw new IllegalArgumentException(\"Array index \" + index + \" cannot be negative in \" + fullPath);\n         }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 49,
        "bugNodeStartChar": 1798,
        "bugNodeLength": 27,
        "fixLineNum": 49,
        "fixNodeStartChar": 1798,
        "fixNodeLength": 28,
        "sourceBeforeFix": "Integer.valueOf(quantifier)",
        "sourceAfterFix": "Integer.parseInt(quantifier)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "536a8fa49fc8ce69e42af6004dc328ddc2ded045",
        "fixCommitParentSHA1": "acacb438d9c5ef8b6efa1d736d8e3db58385ce6c",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\nindex 8bdb154..cfb7bf4 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/alarmcallbacks/AlarmCallbackResource.java\n@@ -141,7 +141,7 @@\n         final Map<String, String> result = ImmutableMap.of(\"alarmcallback_id\", id);\n         final URI alarmCallbackUri = UriBuilder.fromResource(AlarmCallbackResource.class)\n                 .path(\"{alarmCallbackId}\")\n-                .build(id);\n+                .build(streamid, id);\n \n         return Response.created(alarmCallbackUri).entity(result).build();\n     }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 142,
        "bugNodeStartChar": 6370,
        "bugNodeLength": 122,
        "fixLineNum": 142,
        "fixNodeStartChar": 6370,
        "fixNodeLength": 132,
        "sourceBeforeFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(id)",
        "sourceAfterFix": "UriBuilder.fromResource(AlarmCallbackResource.class).path(\"{alarmCallbackId}\").build(streamid,id)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "ec295568e2e59583c7ee243a7f705669a2263ccc",
        "fixCommitParentSHA1": "396b67eb1e16a4b026bb9300da880bb6c2334004",
        "bugFilePath": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java",
        "fixPatch": "diff --git a/underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java b/underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java\nindex 3ca8809..8e2204e 100644\n--- a/underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java\n+++ b/underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java\n@@ -294,7 +294,7 @@\n     for (FileStatus status : files) {\n       // only return the relative path, to keep consistent with java.io.File.list()\n       UfsStatus retStatus;\n-      if (status.isDir()) {\n+      if (!status.isDir()) {\n         retStatus = new UfsFileStatus(status.getPath().getName(), status.getLen(),\n             status.getModificationTime(), status.getOwner(), status.getGroup(),\n             status.getPermission().toShort());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 297,
        "bugNodeStartChar": 11245,
        "bugNodeLength": 14,
        "fixLineNum": 297,
        "fixNodeStartChar": 11245,
        "fixNodeLength": 15,
        "sourceBeforeFix": "status.isDir()",
        "sourceAfterFix": "!status.isDir()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2b4a0c1d9d2f2b27558951c1bf7776d96bd495e1",
        "fixCommitParentSHA1": "b4ae93e67eba4d3b291da618c8841621bfd57e66",
        "bugFilePath": "src/edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator.java b/src/edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator.java\nindex 163ec3f..ccef653 100644\n--- a/src/edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator.java\n@@ -138,7 +138,7 @@\n       String wordString = new String(ca);\n \n       // if this word is a whitespace or a control character, set 'seg' to true for next word, and break\n-      if (Character.isSpaceChar(origText.charAt(i)) || Character.isISOControl(origText.charAt(i))) {\n+      if (Character.isWhitespace(origText.charAt(i)) || Character.isISOControl(origText.charAt(i))) {\n         seg = true;\n       } else {\n         // if this word is a word, put it as a feature label and set seg to false for next word\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 141,
        "bugNodeStartChar": 4872,
        "bugNodeLength": 41,
        "fixLineNum": 141,
        "fixNodeStartChar": 4872,
        "fixNodeLength": 42,
        "sourceBeforeFix": "Character.isSpaceChar(origText.charAt(i))",
        "sourceAfterFix": "Character.isWhitespace(origText.charAt(i))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 681,
        "bugNodeStartChar": 33648,
        "bugNodeLength": 105,
        "fixLineNum": 681,
        "fixNodeStartChar": 33648,
        "fixNodeLength": 105,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",null,true))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3deba86fbc98387501b2076b82c35ac78a56de21",
        "fixCommitParentSHA1": "c22ec0248f118fd2e87b564afe063ecf251473aa",
        "bugFilePath": "src/test/java/com/squareup/javawriter/JavaWriterTest.java",
        "fixPatch": "diff --git a/src/test/java/com/squareup/javawriter/JavaWriterTest.java b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\nindex 1a7dd82..4990037 100644\n--- a/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n+++ b/src/test/java/com/squareup/javawriter/JavaWriterTest.java\n@@ -188,7 +188,7 @@\n     javaWriter.emitPackage(\"com.squareup\");\n     javaWriter.beginType(\"com.squareup.Foo\", \"class\", 0);\n     javaWriter.beginMethod(\"int\", \"foo\", 0, \"java.lang.String\", \"s\");\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     javaWriter.emitStatement(\"int j = s.length() + %s\", 13);\n     javaWriter.endMethod();\n     javaWriter.endType();\n@@ -452,7 +452,7 @@\n   }\n \n   @Test public void eolComment() throws IOException {\n-    javaWriter.emitSingleLineCOmment(\"foo\");\n+    javaWriter.emitSingleLineComment(\"foo\");\n     assertCode(\"// foo\\n\");\n   }\n \n",
        "projectName": "square.javapoet",
        "bugLineNum": 191,
        "bugNodeStartChar": 6557,
        "bugNodeLength": 39,
        "fixLineNum": 191,
        "fixNodeStartChar": 6557,
        "fixNodeLength": 39,
        "sourceBeforeFix": "javaWriter.emitSingleLineCOmment(\"foo\")",
        "sourceAfterFix": "javaWriter.emitSingleLineComment(\"foo\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "d825792ac494dd0257e0c2ec7acd60100ecfe700",
        "fixCommitParentSHA1": "0e4840bf36439eac9f09774a9c408a8c91438fe9",
        "bugFilePath": "backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java",
        "fixPatch": "diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\nindex 225376a..38d9c18 100644\n--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\n+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/JavaSoundAudioDevice.java\n@@ -72,7 +72,7 @@\n \t\t\tif (fValue > 1) fValue = 1;\r\n \t\t\tif (fValue < -1) fValue = -1;\r\n \t\t\tshort value = (short)(fValue * Short.MAX_VALUE);\r\n-\t\t\tbytes[j] = (byte)(value | 0xff);\r\n+\t\t\tbytes[j] = (byte)(value & 0xff);\r\n \t\t\tbytes[j + 1] = (byte)(value >> 8);\r\n \t\t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 75,
        "bugNodeStartChar": 2590,
        "bugNodeLength": 12,
        "fixLineNum": 75,
        "fixNodeStartChar": 2516,
        "fixNodeLength": 12,
        "sourceBeforeFix": "value | 0xff",
        "sourceAfterFix": "value & 0xff"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5622a68e763431819499b28fd976dd8d240480de",
        "fixCommitParentSHA1": "f73627cc2e2c173446ece066c8f9e9eb81178a47",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\nindex a215ea2..a3b31d8 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/delegate/event/impl/ActivitiEventDispatcherImpl.java\n@@ -102,7 +102,7 @@\n \n     if (event instanceof ActivitiEntityEvent) {\n       Object entity = ((ActivitiEntityEvent) event).getEntity();\n-      if (entity instanceof ProcessDefinition) {\n+      if (entity instanceof ProcessDefinitionEntity) {\n         result = (ProcessDefinitionEntity) entity;\n       }\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 105,
        "bugNodeStartChar": 4050,
        "bugNodeLength": 35,
        "fixLineNum": 105,
        "fixNodeStartChar": 4050,
        "fixNodeLength": 41,
        "sourceBeforeFix": "entity instanceof ProcessDefinition",
        "sourceAfterFix": "entity instanceof ProcessDefinitionEntity"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f7c8057681e53272f09a59ab04acd07407727470",
        "fixCommitParentSHA1": "aa8ea82334aad908dd134e8fec388ae42cd5a49d",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/MergePolicyTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/MergePolicyTest.java b/hazelcast/src/test/java/com/hazelcast/map/MergePolicyTest.java\nindex 3468240..dd0d3cc 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/MergePolicyTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/MergePolicyTest.java\n@@ -84,11 +84,11 @@\n         IMap<Object, Object> map2 = h2.getMap(mapName);\n         map1.put(\"key1\", \"value\");\n         // prevent updating at the same time\n-        sleepAtLeastMillis(1);\n+        sleepAtLeastMillis(1000);\n         map2.put(\"key1\", \"LatestUpdatedValue\");\n         map2.put(\"key2\", \"value2\");\n         // prevent updating at the same time\n-        sleepAtLeastMillis(1);\n+        sleepAtLeastMillis(1000);\n         map1.put(\"key2\", \"LatestUpdatedValue2\");\n \n         // allow merge process to continue\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 87,
        "bugNodeStartChar": 3367,
        "bugNodeLength": 21,
        "fixLineNum": 87,
        "fixNodeStartChar": 3367,
        "fixNodeLength": 24,
        "sourceBeforeFix": "sleepAtLeastMillis(1)",
        "sourceAfterFix": "sleepAtLeastMillis(1000)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "8e3096cae54b7a772e6ad94cc45dae6344e92ab7",
        "fixCommitParentSHA1": "35093914b0f3797a355bd9ea6f7c8148768a8d67",
        "bugFilePath": "web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java",
        "fixPatch": "diff --git a/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java b/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\nindex a322aa2..5990f27 100644\n--- a/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\n+++ b/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\n@@ -326,7 +326,7 @@\n \t\r\n \t@ModelAttribute(\"visitTypes\")\r\n \tpublic List<VisitType> getVisitTypes() throws Exception {\r\n-\t\treturn Context.getVisitService().getAllVisitTypes(true);\r\n+\t\treturn Context.getVisitService().getAllVisitTypes();\r\n \t}\r\n \t\r\n \t@ModelAttribute(\"attributeTypes\")\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 329,
        "bugNodeStartChar": 13284,
        "bugNodeLength": 48,
        "fixLineNum": 329,
        "fixNodeStartChar": 12956,
        "fixNodeLength": 44,
        "sourceBeforeFix": "Context.getVisitService().getAllVisitTypes(true)",
        "sourceAfterFix": "Context.getVisitService().getAllVisitTypes()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "c5296e487884418de8dde15e832ea72b027e073f",
        "fixCommitParentSHA1": "1ad23d044c389a8121b9ff5d280dd2b17884311e",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\nindex 340537b..3045838 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultExchange.java\n@@ -394,7 +394,7 @@\n \n     public void setUnitOfWork(UnitOfWork unitOfWork) {\n         this.unitOfWork = unitOfWork;\n-        if (onCompletions != null) {\n+        if (unitOfWork != null && onCompletions != null) {\n             // now an unit of work has been assigned so add the on completions\n             // we might have registered already\n             for (Synchronization onCompletion : onCompletions) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 397,
        "bugNodeStartChar": 12142,
        "bugNodeLength": 21,
        "fixLineNum": 397,
        "fixNodeStartChar": 12142,
        "fixNodeLength": 43,
        "sourceBeforeFix": "onCompletions != null",
        "sourceAfterFix": "unitOfWork != null && onCompletions != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8abe81aaa656d78ac8b9e1a631a849025c9560b0",
        "fixCommitParentSHA1": "0c0fd67082d8f807c9bedabba4c99cdebf6d1de8",
        "bugFilePath": "tool/src/org/antlr/v4/tool/Grammar.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/tool/Grammar.java b/tool/src/org/antlr/v4/tool/Grammar.java\nindex acf7d00..fbdcbdf 100644\n--- a/tool/src/org/antlr/v4/tool/Grammar.java\n+++ b/tool/src/org/antlr/v4/tool/Grammar.java\n@@ -1121,7 +1121,7 @@\n \n \t\tchar[] serializedAtn = ATNSerializer.getSerializedAsChars(atn);\n \t\tATN deserialized = new ATNDeserializer().deserialize(serializedAtn);\n-\t\treturn new LexerInterpreter(fileName, Arrays.asList(getTokenNames()), Arrays.asList(getRuleNames()), ((LexerGrammar)this).modes.keySet(), deserialized, input);\n+\t\treturn new LexerInterpreter(fileName, Arrays.asList(getTokenDisplayNames()), Arrays.asList(getRuleNames()), ((LexerGrammar)this).modes.keySet(), deserialized, input);\n \t}\n \n \tpublic ParserInterpreter createParserInterpreter(TokenStream tokenStream) {\n@@ -1131,6 +1131,6 @@\n \n \t\tchar[] serializedAtn = ATNSerializer.getSerializedAsChars(atn);\n \t\tATN deserialized = new ATNDeserializer().deserialize(serializedAtn);\n-\t\treturn new ParserInterpreter(fileName, Arrays.asList(getTokenNames()), Arrays.asList(getRuleNames()), deserialized, tokenStream);\n+\t\treturn new ParserInterpreter(fileName, Arrays.asList(getTokenDisplayNames()), Arrays.asList(getRuleNames()), deserialized, tokenStream);\n \t}\n }\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1124,
        "bugNodeStartChar": 38669,
        "bugNodeLength": 15,
        "fixLineNum": 1124,
        "fixNodeStartChar": 38669,
        "fixNodeLength": 22,
        "sourceBeforeFix": "getTokenNames()",
        "sourceAfterFix": "getTokenDisplayNames()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1266642aba9a297e0872324c1e72c72a38e0e485",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 97,
        "bugNodeStartChar": 2620,
        "bugNodeLength": 37,
        "fixLineNum": 97,
        "fixNodeStartChar": 2620,
        "fixNodeLength": 44,
        "sourceBeforeFix": "this.thrown.equals(\"File must exist\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must exist\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "a48aaa8b2b1dac598aabdf2d235999fa80dbf7cf",
        "fixCommitParentSHA1": "9a2355df959b1e40aac58cae0bf1bca63be4a281",
        "bugFilePath": "jpa/subsystem/src/main/java/org/jboss/as/jpa/subsystem/JPADefinition.java",
        "fixPatch": "diff --git a/jpa/subsystem/src/main/java/org/jboss/as/jpa/subsystem/JPADefinition.java b/jpa/subsystem/src/main/java/org/jboss/as/jpa/subsystem/JPADefinition.java\nindex 093d351..28a7baa 100644\n--- a/jpa/subsystem/src/main/java/org/jboss/as/jpa/subsystem/JPADefinition.java\n+++ b/jpa/subsystem/src/main/java/org/jboss/as/jpa/subsystem/JPADefinition.java\n@@ -102,6 +102,8 @@\n         resourceRegistration.registerAdditionalRuntimePackages(\n                 // Only if annotation is in use.\n                 RuntimePackageDependency.optional(\"org.hibernate.search.orm\"),\n-                RuntimePackageDependency.required(\"org.hibernate\"));\n+                RuntimePackageDependency.required(\"org.hibernate\"),\n+                // An alias to org.hibernate module.\n+                RuntimePackageDependency.optional(\"org.hibernate.envers\"));\n     }\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 102,
        "bugNodeStartChar": 5295,
        "bugNodeLength": 251,
        "fixLineNum": 102,
        "fixNodeStartChar": 5295,
        "fixNodeLength": 379,
        "sourceBeforeFix": "resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional(\"org.hibernate.search.orm\"),RuntimePackageDependency.required(\"org.hibernate\"))",
        "sourceAfterFix": "resourceRegistration.registerAdditionalRuntimePackages(RuntimePackageDependency.optional(\"org.hibernate.search.orm\"),RuntimePackageDependency.required(\"org.hibernate\"),RuntimePackageDependency.optional(\"org.hibernate.envers\"))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a6e93b4eb714011e524df69fa6414a4951d16e55",
        "fixCommitParentSHA1": "41ed786a70e506815be9422547b82d230f29b2af",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/collection/CollectionService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/collection/CollectionService.java b/hazelcast/src/main/java/com/hazelcast/collection/CollectionService.java\nindex 08a72f8..972001e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/collection/CollectionService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/collection/CollectionService.java\n@@ -330,7 +330,7 @@\n         map.put(Command.MMCONTAINSENTRY, new ContainsEntryHandler(this));\n         map.put(Command.MMKEYS, new MMKeysHandler(this));\n         map.put(Command.MMLOCK, new LockHandler(this));\n-        map.put(Command.MMUNLOCK, new UnlockHandler(this));\n+        map.put(Command.MMUNLOCK, new MMUnlockHandler(this));\n         map.put(Command.MMTRYLOCK, new TryLockHandler(this));\n         map.put(Command.MMLISTEN, new ListenHandler(this));\n         return map;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 333,
        "bugNodeStartChar": 15244,
        "bugNodeLength": 23,
        "fixLineNum": 333,
        "fixNodeStartChar": 15244,
        "fixNodeLength": 25,
        "sourceBeforeFix": "new UnlockHandler(this)",
        "sourceAfterFix": "new MMUnlockHandler(this)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416",
        "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 139,
        "bugNodeStartChar": 5905,
        "bugNodeLength": 14,
        "fixLineNum": 139,
        "fixNodeStartChar": 5767,
        "fixNodeLength": 13,
        "sourceBeforeFix": "values == null",
        "sourceAfterFix": "value == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3b1d91e0105be86ffa011c5ca9ebbba49e3fcd5d",
        "fixCommitParentSHA1": "6539c5f464693490047c9e677a95d6acb9942d4e",
        "bugFilePath": "tool/test/org/antlr/v4/test/TestCommonTokenStream.java",
        "fixPatch": "diff --git a/tool/test/org/antlr/v4/test/TestCommonTokenStream.java b/tool/test/org/antlr/v4/test/TestCommonTokenStream.java\nindex f5ec1e2..6394d9e 100644\n--- a/tool/test/org/antlr/v4/test/TestCommonTokenStream.java\n+++ b/tool/test/org/antlr/v4/test/TestCommonTokenStream.java\n@@ -114,7 +114,7 @@\n         tokens.LT(i++); // push it past end\n         tokens.LT(i++);\n \n-        String result = tokens.toString();\n+        String result = tokens.getText();\n         String expecting = \"x = 3 * 0 + 2 * 0;\";\n         assertEquals(expecting, result);\n     }\n@@ -146,7 +146,7 @@\n         tokens.consume();\n         tokens.LT(1);\n \n-        String result = tokens.toString();\n+        String result = tokens.getText();\n         String expecting = \"x = 3 * 0 + 2 * 0;\";\n         assertEquals(expecting, result);\n     }\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 117,
        "bugNodeStartChar": 4562,
        "bugNodeLength": 17,
        "fixLineNum": 117,
        "fixNodeStartChar": 4562,
        "fixNodeLength": 16,
        "sourceBeforeFix": "tokens.toString()",
        "sourceAfterFix": "tokens.getText()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "097a6b00c39c7dee3b2d6d321a7fe5b3eb626fb0",
        "fixCommitParentSHA1": "758c003f7301cc680117334fc9661e5d82907a35",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\nindex 235eea3..91889a0 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n@@ -89,7 +89,7 @@\n         && !NettyUtils.isDomainSocketSupported(address)\n         && blockSource == BlockInStreamSource.LOCAL) {\n       try {\n-        LOG.info(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n+        LOG.debug(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n         return createLocalBlockInStream(context, address, blockId, blockSize, options);\n       } catch (NotFoundException e) {\n         // Failed to do short circuit read because the block is not available in Alluxio.\n@@ -103,7 +103,7 @@\n       builder.setOpenUfsBlockOptions(openUfsBlockOptions);\n     }\n \n-    LOG.info(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n+    LOG.debug(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n         NetworkAddressUtils.getClientHostName());\n     return createNettyBlockInStream(context, address, blockSource, builder.buildPartial(),\n         blockSize, options);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 92,
        "bugNodeStartChar": 3453,
        "bugNodeLength": 83,
        "fixLineNum": 92,
        "fixNodeStartChar": 3453,
        "fixNodeLength": 84,
        "sourceBeforeFix": "LOG.info(\"Creating short circuit input stream for block {} @ {}\",blockId,address)",
        "sourceAfterFix": "LOG.debug(\"Creating short circuit input stream for block {} @ {}\",blockId,address)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e3c87cba0bbed00c739e01599e29a5621c9ef3b3",
        "fixCommitParentSHA1": "c44a6dee3d0bf523339972715f752e878e2b346a",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\nindex 3df1e33..34bf6b6 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n@@ -71,7 +71,7 @@\n \t\tRSocketWebSocketNettyRouteProvider rSocketWebsocketRouteProvider(RSocketProperties properties,\n \t\t\t\tRSocketMessageHandler messageHandler) {\n \t\t\treturn new RSocketWebSocketNettyRouteProvider(properties.getServer().getMappingPath(),\n-\t\t\t\t\tmessageHandler.serverResponder());\n+\t\t\t\t\tmessageHandler.responder());\n \t\t}\n \n \t}\n@@ -104,7 +104,7 @@\n \t\t@ConditionalOnMissingBean\n \t\tRSocketServerBootstrap rSocketServerBootstrap(RSocketServerFactory rSocketServerFactory,\n \t\t\t\tRSocketMessageHandler rSocketMessageHandler) {\n-\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverResponder());\n+\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.responder());\n \t\t}\n \n \t\t@Bean\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 107,
        "bugNodeStartChar": 4974,
        "bugNodeLength": 39,
        "fixLineNum": 107,
        "fixNodeStartChar": 4974,
        "fixNodeLength": 33,
        "sourceBeforeFix": "rSocketMessageHandler.serverResponder()",
        "sourceAfterFix": "rSocketMessageHandler.responder()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "14b91c00dca45c89cac63abe46f38955cdca7b86",
        "fixCommitParentSHA1": "d47c56e7ee80b76a4cffd4770237239cfea0ffd6",
        "bugFilePath": "client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java",
        "fixPatch": "diff --git a/client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java b/client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java\nindex 1b189ac..531eaad 100755\n--- a/client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java\n+++ b/client/src/main/java/org/asynchttpclient/netty/ws/NettyWebSocket.java\n@@ -99,7 +99,7 @@\n \n   @Override\n   public Future<Void> sendBinaryFrame(ByteBuf payload, boolean finalFragment, int rsv) {\n-    return channel.writeAndFlush(new BinaryWebSocketFrame(payload));\n+    return channel.writeAndFlush(new BinaryWebSocketFrame(finalFragment, rsv, payload));\n   }\n \n   @Override\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 102,
        "bugNodeStartChar": 3600,
        "bugNodeLength": 33,
        "fixLineNum": 102,
        "fixNodeStartChar": 3600,
        "fixNodeLength": 53,
        "sourceBeforeFix": "new BinaryWebSocketFrame(payload)",
        "sourceAfterFix": "new BinaryWebSocketFrame(finalFragment,rsv,payload)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e11dd72dc1b56e49d14bde084a77e894cfdea206",
        "fixCommitParentSHA1": "d5331b18a910844e30b3d6ccb36c08d982c13114",
        "bugFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/webapp/TestHsWebServices.java",
        "fixPatch": "diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/webapp/TestHsWebServices.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/webapp/TestHsWebServices.java\nindex 45a464e..66b3663 100644\n--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/webapp/TestHsWebServices.java\n+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/webapp/TestHsWebServices.java\n@@ -348,7 +348,7 @@\n       String hadoopBuildVersion, String hadoopVersion, long startedon) {\n     WebServicesTestUtils.checkStringMatch(\"hadoopVersionBuiltOn\",\n         VersionInfo.getDate(), hadoopVersionBuiltOn);\n-    WebServicesTestUtils.checkStringMatch(\"hadoopBuildVersion\",\n+    WebServicesTestUtils.checkStringEqual(\"hadoopBuildVersion\",\n         VersionInfo.getBuildVersion(), hadoopBuildVersion);\n     WebServicesTestUtils.checkStringMatch(\"hadoopVersion\",\n         VersionInfo.getVersion(), hadoopVersion);\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 351,
        "bugNodeStartChar": 12469,
        "bugNodeLength": 118,
        "fixLineNum": 351,
        "fixNodeStartChar": 12469,
        "fixNodeLength": 118,
        "sourceBeforeFix": "WebServicesTestUtils.checkStringMatch(\"hadoopBuildVersion\",VersionInfo.getBuildVersion(),hadoopBuildVersion)",
        "sourceAfterFix": "WebServicesTestUtils.checkStringEqual(\"hadoopBuildVersion\",VersionInfo.getBuildVersion(),hadoopBuildVersion)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8f7d75074fcb38c9ab2d3d9b39343c98bc27eb79",
        "fixCommitParentSHA1": "1faf832adacd24e7b394b3ecf4c6073204e1c279",
        "bugFilePath": "src/com/google/javascript/jscomp/ClosureCheckModule.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ClosureCheckModule.java b/src/com/google/javascript/jscomp/ClosureCheckModule.java\nindex a809416..f95a0bb 100644\n--- a/src/com/google/javascript/jscomp/ClosureCheckModule.java\n+++ b/src/com/google/javascript/jscomp/ClosureCheckModule.java\n@@ -45,9 +45,8 @@\n           \"@export is not allowed here in a non-legacy goog.module.\"\n           + \" Consider using goog.exportSymbol instead.\");\n \n-  // TODO(tbreisacher): Make this an error when existing violations are fixed.\n   static final DiagnosticType GOOG_MODULE_IN_NON_MODULE =\n-      DiagnosticType.disabled(\n+      DiagnosticType.error(\n           \"JSC_GOOG_MODULE_IN_NON_MODULE\",\n           \"goog.module() call must be the first statement in a module.\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 50,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 140,
        "fixLineNum": 50,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 137,
        "sourceBeforeFix": "DiagnosticType.disabled(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "35093914b0f3797a355bd9ea6f7c8148768a8d67",
        "fixCommitParentSHA1": "9542a04806a853686859bf69394fc57f900a91cb",
        "bugFilePath": "web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java",
        "fixPatch": "diff --git a/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java b/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\nindex 5990f27..a322aa2 100644\n--- a/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\n+++ b/web/src/main/java/org/openmrs/web/controller/visit/VisitFormController.java\n@@ -326,7 +326,7 @@\n \t\r\n \t@ModelAttribute(\"visitTypes\")\r\n \tpublic List<VisitType> getVisitTypes() throws Exception {\r\n-\t\treturn Context.getVisitService().getAllVisitTypes();\r\n+\t\treturn Context.getVisitService().getAllVisitTypes(true);\r\n \t}\r\n \t\r\n \t@ModelAttribute(\"attributeTypes\")\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 329,
        "bugNodeStartChar": 13284,
        "bugNodeLength": 44,
        "fixLineNum": 329,
        "fixNodeStartChar": 12956,
        "fixNodeLength": 48,
        "sourceBeforeFix": "Context.getVisitService().getAllVisitTypes()",
        "sourceAfterFix": "Context.getVisitService().getAllVisitTypes(true)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "6ed3c275fc3f67ecc814a1cb838915661f782f22",
        "fixCommitParentSHA1": "66c7b2cfffaaee3200369d146ab4b24f1b7effd6",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\nindex 08ba486..72e26f8 100755\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\n@@ -76,7 +76,7 @@\n     @Test\n     public void testFormAuthSingleSignOn(@ArquillianResource URL baseURLNoAuth) throws Exception {\n         log.info(\"+++ testFormAuthSingleSignOn\");\n-        SSOBaseCase.executeFormAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n+        SSOTestBase.executeFormAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n     }\n \n     /**\n@@ -85,7 +85,7 @@\n     @Test\n     public void testNoAuthSingleSignOn(@ArquillianResource URL baseURLNoAuth) throws Exception {\n         log.info(\"+++ testNoAuthSingleSignOn\");\n-        SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n+        SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n     }\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 88,
        "bugNodeStartChar": 3472,
        "bugNodeLength": 76,
        "fixLineNum": 88,
        "fixNodeStartChar": 3472,
        "fixNodeLength": 76,
        "sourceBeforeFix": "SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)",
        "sourceAfterFix": "SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "312ba4238e15b4f95054ca33ee1b3604afbd8d74",
        "fixCommitParentSHA1": "1adb490974aa0d69fcb64a58f59576424993cb41",
        "bugFilePath": "api/src/main/java/org/openmrs/validator/PatientProgramValidator.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\nindex fa91205..9bb6eb4 100644\n--- a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\n+++ b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java\n@@ -140,7 +140,7 @@\n \t\t\t\t\tif (OpenmrsUtil.compareWithNullAsLatest(patientState.getEndDate(), patientState.getStartDate()) < 0) {\r\n \t\t\t\t\t\terrors.rejectValue(\"states\", \"PatientState.error.endDateCannotBeBeforeStartDate\");\r\n \t\t\t\t\t\treturn;\r\n-\t\t\t\t\t} else if (statesAndStartDates.contains(patientState.getState().getId() + \"\"\r\n+\t\t\t\t\t} else if (statesAndStartDates.contains(patientState.getState().getUuid() + \"\"\r\n \t\t\t\t\t        + patientState.getStartDate())) {\r\n \t\t\t\t\t\t// we already have a patient state with the same work flow state and start date\r\n \t\t\t\t\t\terrors.rejectValue(\"states\", \"PatientState.error.duplicatePatientStates\");\r\n@@ -185,7 +185,7 @@\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t\t\r\n-\t\t\t\t\tstatesAndStartDates.add(patientState.getState().getId() + \"\" + patientState.getStartDate());\r\n+\t\t\t\t\tstatesAndStartDates.add(patientState.getState().getUuid() + \"\" + patientState.getStartDate());\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 188,
        "bugNodeStartChar": 8199,
        "bugNodeLength": 31,
        "fixLineNum": 188,
        "fixNodeStartChar": 8012,
        "fixNodeLength": 33,
        "sourceBeforeFix": "patientState.getState().getId()",
        "sourceAfterFix": "patientState.getState().getUuid()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "88ab3f29c17cb38e01cfa655876b7627558c6de1",
        "fixCommitParentSHA1": "70b1bec449354d435db79264481f66862b3b543f",
        "bugFilePath": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\nindex 1105756..899a3cd 100644\n--- a/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n+++ b/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\n@@ -483,7 +483,7 @@\n \n         Node rhsValue = ref.getNext();\n         Node newName = IR.name(moduleName).srcref(ref);\n-        newName.putProp(Node.ORIGINALNAME_PROP, rhsValue);\n+        newName.putProp(Node.ORIGINALNAME_PROP, qName);\n \n         Node parent = ref.getParent();\n         parent.replaceChild(ref, newName);\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 486,
        "bugNodeStartChar": 16773,
        "bugNodeLength": 49,
        "fixLineNum": 486,
        "fixNodeStartChar": 16773,
        "fixNodeLength": 46,
        "sourceBeforeFix": "newName.putProp(Node.ORIGINALNAME_PROP,rhsValue)",
        "sourceAfterFix": "newName.putProp(Node.ORIGINALNAME_PROP,qName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "93ec35952feb5bdcd58a7ac6ad0f07307ed0d367",
        "fixCommitParentSHA1": "7a8314212d4a273685e93ae401b805a42736e46f",
        "bugFilePath": "tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java",
        "fixPatch": "diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java\nindex 7230dfe..0980afc 100644\n--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java\n+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java\n@@ -1054,7 +1054,7 @@\n                 prop.getField().getJavaDoc().setFullText(option.getDescription());\n             }\n             if (!Strings.isBlank(option.getDefaultValue())) {\n-                if (\"java.lang.String\".equals(option.getType())) {\n+                if (\"java.lang.String\".equals(option.getJavaType())) {\n                     prop.getField().setStringInitializer(option.getDefaultValue());\n                 } else if (\"long\".equals(option.getJavaType()) || \"java.lang.Long\".equals(option.getJavaType())) {\n                     // the value should be a Long number\n@@ -1149,7 +1149,7 @@\n                 prop.getField().getJavaDoc().setFullText(option.getDescription());\n             }\n             if (!Strings.isBlank(option.getDefaultValue())) {\n-                if (\"java.lang.String\".equals(option.getType())) {\n+                if (\"java.lang.String\".equals(option.getJavaType())) {\n                     prop.getField().setStringInitializer(option.getDefaultValue());\n                 } else if (\"long\".equals(option.getJavaType()) || \"java.lang.Long\".equals(option.getJavaType())) {\n                     // the value should be a Long number\n",
        "projectName": "apache.camel",
        "bugLineNum": 1152,
        "bugNodeStartChar": 58239,
        "bugNodeLength": 16,
        "fixLineNum": 1152,
        "fixNodeStartChar": 58239,
        "fixNodeLength": 20,
        "sourceBeforeFix": "option.getType()",
        "sourceAfterFix": "option.getJavaType()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0e5b7eee0fb534954add01460e09f1e61db831aa",
        "fixCommitParentSHA1": "844694c391061363886fc3c5a12c499e24600ea7",
        "bugFilePath": "src/com/google/javascript/jscomp/ClosureCheckModule.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ClosureCheckModule.java b/src/com/google/javascript/jscomp/ClosureCheckModule.java\nindex f95a0bb..a809416 100644\n--- a/src/com/google/javascript/jscomp/ClosureCheckModule.java\n+++ b/src/com/google/javascript/jscomp/ClosureCheckModule.java\n@@ -45,8 +45,9 @@\n           \"@export is not allowed here in a non-legacy goog.module.\"\n           + \" Consider using goog.exportSymbol instead.\");\n \n+  // TODO(tbreisacher): Make this an error when existing violations are fixed.\n   static final DiagnosticType GOOG_MODULE_IN_NON_MODULE =\n-      DiagnosticType.error(\n+      DiagnosticType.disabled(\n           \"JSC_GOOG_MODULE_IN_NON_MODULE\",\n           \"goog.module() call must be the first statement in a module.\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 49,
        "bugNodeStartChar": 1868,
        "bugNodeLength": 137,
        "fixLineNum": 49,
        "fixNodeStartChar": 1868,
        "fixNodeLength": 140,
        "sourceBeforeFix": "DiagnosticType.error(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")",
        "sourceAfterFix": "DiagnosticType.disabled(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "5855ba3b3a70f813d1d47b40bf856b15b694534a",
        "fixCommitParentSHA1": "c568ccdebf927562166af05c3c9aa02e61c602c3",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\nindex 9423166..a25f7b0 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n@@ -143,7 +143,7 @@\n      // if source has no outputs, it is the end of the process, and its parent process should be checked.\t  \n \tif (srcActivity.getOutgoingTransitions().size() == 0) {\n \t\tvisitedActivities.add(srcActivity);\n-\t\tif (srcActivity.getParent() == null)\n+\t\tif (srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity) )\n \t\t\treturn false;\n \t\tsrcActivity = (PvmActivity) srcActivity.getParent();\n \t}\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 146,
        "bugNodeStartChar": 5951,
        "bugNodeLength": 31,
        "fixLineNum": 146,
        "fixNodeStartChar": 5951,
        "fixNodeLength": 84,
        "sourceBeforeFix": "srcActivity.getParent() == null",
        "sourceAfterFix": "srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "78cee55f0fc0c43885fc2254e2b14939e17224ee",
        "fixCommitParentSHA1": "8e8644d0a5ec5f6be2756f7176979c643e89652d",
        "bugFilePath": "nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobFileInputVertex.java",
        "fixPatch": "diff --git a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobFileInputVertex.java b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobFileInputVertex.java\nindex 909a910..0224cc9 100644\n--- a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobFileInputVertex.java\n+++ b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/jobgraph/JobFileInputVertex.java\n@@ -275,7 +275,7 @@\n \t\t}\n \n \t\tfinal int numSubtasks = getNumberOfSubtasks();\n-\t\tfinal List<FileInputSplit> inputSplits = new ArrayList<FileInputSplit>(numSubtasks);\n+\t\tfinal List<FileInputSplit> inputSplits = new ArrayList<FileInputSplit>();\n \n \t\t// get all the files that are involved in the splits\n \t\tList<FileStatus> files = new ArrayList<FileStatus>();\n@@ -301,7 +301,7 @@\n \t\t\t}\n \n \t\t\tfinal long minSplitSize = 1;\n-\t\t\tfinal long maxSplitSize = totalLength / numSubtasks + (totalLength % numSubtasks == 0 ? 0 : 1);\n+\t\t\tfinal long maxSplitSize = (numSubtasks < 1) ? Long.MAX_VALUE : (totalLength / numSubtasks + (totalLength % numSubtasks == 0 ? 0 : 1));\n \n \t\t\t// now that we have the files, generate the splits\n \t\t\tfor (FileStatus file : files) {\n",
        "projectName": "apache.flink",
        "bugLineNum": 278,
        "bugNodeStartChar": 7956,
        "bugNodeLength": 42,
        "fixLineNum": 278,
        "fixNodeStartChar": 7956,
        "fixNodeLength": 31,
        "sourceBeforeFix": "new ArrayList<FileInputSplit>(numSubtasks)",
        "sourceAfterFix": "new ArrayList<FileInputSplit>()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0d033264d0139a1080c54706d5681d4876a8f881",
        "fixCommitParentSHA1": "f5f134fe08151b1d5592dd81a38c4851012b76e1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/core/MapLoader.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/core/MapLoader.java b/hazelcast/src/main/java/com/hazelcast/core/MapLoader.java\nindex 5d54cd5..73d69df 100644\n--- a/hazelcast/src/main/java/com/hazelcast/core/MapLoader.java\n+++ b/hazelcast/src/main/java/com/hazelcast/core/MapLoader.java\n@@ -32,7 +32,7 @@\n  * will be placed into the distributed map and they will stay in-memory until they are\n  * explicitly removed or implicitly evicted (if eviction is configured).\n  */\n-public interface MapLoader {\n+public interface MapLoader<K, V> {\n     /**\n      * Loads the value of a given key. If distributed map doesn't contain the value\n      * for the given key then Hazelcast will call implementation's load (key) method\n@@ -42,7 +42,7 @@\n      * @param key\n      * @return value of the key\n      */\n-    Object load(Object key);\n+    V load(K key);\n \n     /**\n      * Loads given keys. This is batch load operation so that implementation can\n@@ -51,5 +51,5 @@\n      * @param keys keys of the values entries to load\n      * @return map of loaded key-value pairs.\n      */\n-    Map loadAll(Collection keys);\n+    Map<K, V> loadAll(Collection<K> keys);\n }\n\\ No newline at end of file\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 36,
        "bugNodeStartChar": 1436,
        "bugNodeLength": 423,
        "fixLineNum": 36,
        "fixNodeStartChar": 1436,
        "fixNodeLength": 413,
        "sourceBeforeFix": "/**   * Loads the value of a given key. If distributed map doesn't contain the value for the given key then Hazelcast will call implementation's load (key) method to obtain the value. Implementation can use any means of loading the given key; such as an O/R mapping tool, simple SQL or reading a file etc.  * @param key  * @return value of the key  */ Object load(Object key); ",
        "sourceAfterFix": "/**   * Loads the value of a given key. If distributed map doesn't contain the value for the given key then Hazelcast will call implementation's load (key) method to obtain the value. Implementation can use any means of loading the given key; such as an O/R mapping tool, simple SQL or reading a file etc.  * @param key  * @return value of the key  */ V load(K key); "
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "e4c831dfe87668dd3a1c308ae43378e015e416b4",
        "fixCommitParentSHA1": "e5171364428594d6f8a18f35e7c112f55574e085",
        "bugFilePath": "cli/src/main/java/org/jboss/as/cli/handlers/module/ASModuleHandler.java",
        "fixPatch": "diff --git a/cli/src/main/java/org/jboss/as/cli/handlers/module/ASModuleHandler.java b/cli/src/main/java/org/jboss/as/cli/handlers/module/ASModuleHandler.java\nindex ab6e08a..4f6084f 100644\n--- a/cli/src/main/java/org/jboss/as/cli/handlers/module/ASModuleHandler.java\n+++ b/cli/src/main/java/org/jboss/as/cli/handlers/module/ASModuleHandler.java\n@@ -243,7 +243,7 @@\n         final String[] resourceArr = (resourcePaths == null) ? new String[0] : resourcePaths.split(pathDelimiter);\n         File[] resourceFiles = new File[resourceArr.length];\n         for(int i = 0; i < resourceArr.length; ++i) {\n-            final File f = new File(ctx.getCurrentDir(), resourceArr[i]);\n+            final File f = new File(resourceArr[i]);\n             if(!f.exists()) {\n                 throw new CommandLineException(\"Failed to locate \" + f.getAbsolutePath());\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 246,
        "bugNodeStartChar": 10677,
        "bugNodeLength": 45,
        "fixLineNum": 246,
        "fixNodeStartChar": 10677,
        "fixNodeLength": 24,
        "sourceBeforeFix": "new File(ctx.getCurrentDir(),resourceArr[i])",
        "sourceAfterFix": "new File(resourceArr[i])"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "c52a15b7ae80a8f3619791df1577774b374ac4d4",
        "fixCommitParentSHA1": "553f83e77fda7cc6ca1cd97af598716e370c8b33",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/SecurityDomainMergingProcessor.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/SecurityDomainMergingProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/SecurityDomainMergingProcessor.java\nindex 5f466c8..7b7715b 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/SecurityDomainMergingProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/merging/SecurityDomainMergingProcessor.java\n@@ -94,9 +94,9 @@\n                 }\n             }\n         }\n-        if (securityDomain != null)\n+        if (securityDomain != null && ! securityDomain.isEmpty())\n             description.setSecurityDomain(securityDomain);\n-        else if (globalSecurityDomain != null)\n+        else if (globalSecurityDomain != null && !globalSecurityDomain.isEmpty())\n             description.setSecurityDomain(globalSecurityDomain);\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 99,
        "bugNodeStartChar": 5100,
        "bugNodeLength": 28,
        "fixLineNum": 99,
        "fixNodeStartChar": 5100,
        "fixNodeLength": 63,
        "sourceBeforeFix": "globalSecurityDomain != null",
        "sourceAfterFix": "globalSecurityDomain != null && !globalSecurityDomain.isEmpty()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0b64c9c15f46376af519c35d98fb56e227190b48",
        "fixCommitParentSHA1": "bb39262031409930d18a7019aa5425b7f112f6bd",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/impl/MulticastService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/impl/MulticastService.java b/hazelcast/src/main/java/com/hazelcast/impl/MulticastService.java\nindex 089fc11..56ded15 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/MulticastService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/MulticastService.java\n@@ -51,7 +51,7 @@\n         logger = node.getLogger(MulticastService.class.getName());\n         Config config = node.getConfig();\n         this.multicastSocket = multicastSocket;\n-        int bufferSize = 1024 * 1024;\n+        int bufferSize = 64 * 1024;\n         this.datagramPacketReceive = new DatagramPacket(new byte[bufferSize], bufferSize);\n         this.datagramPacketSend = new DatagramPacket(new byte[bufferSize], bufferSize, InetAddress\n                 .getByName(config.getNetworkConfig().getJoin().getMulticastConfig().getMulticastGroup()),\n@@ -127,7 +127,7 @@\n                 joinInfo.writeToPacket(datagramPacketSend);\n                 multicastSocket.send(datagramPacketSend);\n             } catch (IOException e) {\n-                logger.log(Level.WARNING, e.getMessage(), e);\n+                logger.log(Level.WARNING, \"You probably have too long Hazelcast configuration!\", e);\n             }\n         }\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 54,
        "bugNodeStartChar": 2072,
        "bugNodeLength": 11,
        "fixLineNum": 54,
        "fixNodeStartChar": 2072,
        "fixNodeLength": 9,
        "sourceBeforeFix": "1024 * 1024",
        "sourceAfterFix": "64 * 1024"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "41df5a6f7ebe103b007a01aa58d400864e09de26",
        "fixCommitParentSHA1": "944a7c54ecdbf278b7d80053ab6101980c4baadb",
        "bugFilePath": "core/src/main/java/com/zaxxer/hikari/HikariConfig.java",
        "fixPatch": "diff --git a/core/src/main/java/com/zaxxer/hikari/HikariConfig.java b/core/src/main/java/com/zaxxer/hikari/HikariConfig.java\nindex f14946b..5bafd77 100644\n--- a/core/src/main/java/com/zaxxer/hikari/HikariConfig.java\n+++ b/core/src/main/java/com/zaxxer/hikari/HikariConfig.java\n@@ -403,7 +403,7 @@\n             logger.error(\"idleTimeout cannot be negative.\");\n             throw new IllegalStateException(\"idleTimeout cannot be negative.\");\n         }\n-        else if (idleTimeout < 30000)\n+        else if (idleTimeout < 30000 && idleTimeout != 0)\n         {\n             logger.warn(\"idleTimeout is less than 30000ms, did you specify the wrong time unit?  Using default instead.\");\n             idleTimeout = IDLE_TIMEOUT;\n@@ -438,7 +438,7 @@\n             logger.error(\"maxLifetime cannot be negative.\");\n             throw new IllegalStateException(\"maxLifetime cannot be negative.\");\n         }\n-        else if (maxLifetime < 120000)\n+        else if (maxLifetime < 120000 && maxLifetime != 0)\n         {\n             logger.warn(\"maxLifetime is less than 120000ms, did you specify the wrong time unit?  Using default instead.\");\n             maxLifetime = MAX_LIFETIME;\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 441,
        "bugNodeStartChar": 12405,
        "bugNodeLength": 20,
        "fixLineNum": 441,
        "fixNodeStartChar": 12405,
        "fixNodeLength": 40,
        "sourceBeforeFix": "maxLifetime < 120000",
        "sourceAfterFix": "maxLifetime < 120000 && maxLifetime != 0"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9e383f401a22ab6c7085d7cb2e949ad11f020e8b",
        "fixCommitParentSHA1": "89ce79eafb05ca594ef43c811f3dc304d4bf19ab",
        "bugFilePath": "components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java\nindex bf7d324..1dee194 100644\n--- a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java\n+++ b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/DefaultCxfBinding.java\n@@ -171,7 +171,7 @@\n                                                           DataFormat.class);\n         boolean isXop = Boolean.valueOf(camelExchange.getProperty(Message.MTOM_ENABLED, String.class));\n         // propagate attachments if the data format is not POJO with MTOM enabled\n-        if (cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && !isXop)) {\n+        if (cxfMessage.getAttachments() != null && !(DataFormat.POJO.equals(dataFormat) && isXop)) {\n             // propagate attachments\n             for (Attachment attachment : cxfMessage.getAttachments()) {\n                 camelExchange.getOut().addAttachment(attachment.getId(), attachment.getDataHandler());\n",
        "projectName": "apache.camel",
        "bugLineNum": 174,
        "bugNodeStartChar": 7626,
        "bugNodeLength": 6,
        "fixLineNum": 174,
        "fixNodeStartChar": 7626,
        "fixNodeLength": 5,
        "sourceBeforeFix": "!isXop",
        "sourceAfterFix": "isXop"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "02d326b888b3ce431468700ce32602c1b247bd91",
        "fixCommitParentSHA1": "23f263bd327b8cbee01cca161c306dd081ba93af",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex d11308b..7c84dd9 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -153,7 +153,7 @@\n       // reduce log level, as normally we're not interested in logging this exception\n       log.debug(\"Optimistic locking exception : \" + exception);\n     } else {\n-      log.debug(\"Error while closing command context\", exception);\n+      log.error(\"Error while closing command context\", exception);\n     }\n   }\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 156,
        "bugNodeStartChar": 7326,
        "bugNodeLength": 59,
        "fixLineNum": 156,
        "fixNodeStartChar": 7326,
        "fixNodeLength": 59,
        "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
        "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e4ce636e7fd9b892e3a696366c1981d3fae46ab4",
        "fixCommitParentSHA1": "8979e2d3549fd954d7a873f7dbd25bb798f8c6c6",
        "bugFilePath": "components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java",
        "fixPatch": "diff --git a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\nindex b547d91..0ec7363 100644\n--- a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\n+++ b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\n@@ -94,7 +94,7 @@\n         MockEndpoint mock = context.getEndpoint(\"mock:result\", MockEndpoint.class);\n \n         // There should be two good blog entries from the feed\n-        mock.expectedMessageCount(2);\n+        mock.expectedMinimumMessageCount(2);\n \n         // Asserts that the above expectations is true, will throw assertions exception if it failed\n         // Camel will default wait max 20 seconds for the assertions to be true, if the conditions\n",
        "projectName": "apache.camel",
        "bugLineNum": 97,
        "bugNodeStartChar": 4331,
        "bugNodeLength": 28,
        "fixLineNum": 97,
        "fixNodeStartChar": 4331,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(2)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1a8a22256592dd5b5a78df7c6eb03d1ca0f02d7e",
        "fixCommitParentSHA1": "2ddbc2230d856c8a20962f9f16dd777eddcc1c75",
        "bugFilePath": "components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzRouteFireNowTest.java",
        "fixPatch": "diff --git a/components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzRouteFireNowTest.java b/components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzRouteFireNowTest.java\nindex d45f21d..d8dcb7f 100644\n--- a/components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzRouteFireNowTest.java\n+++ b/components/camel-quartz2/src/test/java/org/apache/camel/component/quartz2/QuartzRouteFireNowTest.java\n@@ -30,7 +30,7 @@\n     @Test\n     public void testQuartzRoute() throws Exception {\n         resultEndpoint = getMockEndpoint(\"mock:result\");\n-        resultEndpoint.expectedMessageCount(2);\n+        resultEndpoint.expectedMinimumMessageCount(2);\n         resultEndpoint.message(0).header(\"triggerName\").isEqualTo(\"myTimerName\");\n         resultEndpoint.message(0).header(\"triggerGroup\").isEqualTo(\"myGroup\");\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 33,
        "bugNodeStartChar": 1227,
        "bugNodeLength": 38,
        "fixLineNum": 33,
        "fixNodeStartChar": 1227,
        "fixNodeLength": 45,
        "sourceBeforeFix": "resultEndpoint.expectedMessageCount(2)",
        "sourceAfterFix": "resultEndpoint.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2119d33293008fcc876f5fcd58ede2993eb24d6",
        "fixCommitParentSHA1": "69fcae6b44cb9443bd970f89f7215258d6092bcc",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\nindex 250e3ac..ceafa9d 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n@@ -153,7 +153,7 @@\n \t@Configuration\n \t@ConditionalOnClass(JdbcTemplate.class)\n \t@ConditionalOnBean(DataSource.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"db\")\n+\t@ConditionalOnEnabledHealthIndicator(\"db\")\n \tpublic static class DataSourcesHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<DataSourceHealthIndicator, DataSource>\n \t\t\timplements InitializingBean {\n@@ -193,7 +193,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(MongoTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mongo\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mongo\")\n \tpublic static class MongoHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<MongoHealthIndicator, MongoTemplate> {\n \n@@ -210,7 +210,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RedisConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"redis\")\n+\t@ConditionalOnEnabledHealthIndicator(\"redis\")\n \tpublic static class RedisHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<RedisHealthIndicator, RedisConnectionFactory> {\n@@ -228,7 +228,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RabbitTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"rabbit\")\n+\t@ConditionalOnEnabledHealthIndicator(\"rabbit\")\n \tpublic static class RabbitHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<RabbitHealthIndicator, RabbitTemplate> {\n \n@@ -245,7 +245,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(SolrServer.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"solr\")\n+\t@ConditionalOnEnabledHealthIndicator(\"solr\")\n \tpublic static class SolrHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<SolrHealthIndicator, SolrServer> {\n \n@@ -261,7 +261,7 @@\n \t}\n \n \t@Configuration\n-\t@ConditionalOnEnablednHealthIndicator(\"diskspace\")\n+\t@ConditionalOnEnabledHealthIndicator(\"diskspace\")\n \tpublic static class DiskSpaceHealthIndicatorConfiguration {\n \n \t\t@Bean\n@@ -280,7 +280,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {\n@@ -298,7 +298,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(ConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"jms\")\n+\t@ConditionalOnEnabledHealthIndicator(\"jms\")\n \tpublic static class JmsHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<JmsHealthIndicator, ConnectionFactory> {\n \n@@ -315,7 +315,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(Client.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"elasticsearch\")\n+\t@ConditionalOnEnabledHealthIndicator(\"elasticsearch\")\n \t@EnableConfigurationProperties(ElasticsearchHealthIndicatorProperties.class)\n \tpublic static class ElasticsearchHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<ElasticsearchHealthIndicator, Client> {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 213,
        "bugNodeStartChar": 8824,
        "bugNodeLength": 46,
        "fixLineNum": 213,
        "fixNodeStartChar": 8824,
        "fixNodeLength": 45,
        "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"redis\")",
        "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"redis\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40db776fd1a038366d4e72c6b81f21b88792122a",
        "fixCommitParentSHA1": "817b2beee208f6dff1c9393209d261a77d7666cf",
        "bugFilePath": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\nindex 12b1036..6560668 100644\n--- a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n+++ b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n@@ -80,7 +80,7 @@\n @Category(CommonCriteria.class)\n public class AuthenticationTestCase {\n \n-    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getServerAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n+    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getHttpAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n     private static final String WAR_URL = \"http://\" + SERVER_HOST_PORT + \"/ejb3security/\";\n \n     /*\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 3644,
        "bugNodeLength": 39,
        "fixLineNum": 83,
        "fixNodeStartChar": 3644,
        "fixNodeLength": 37,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getHttpAddress()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2071f9b5421f853e8515f309b2874399c895c43a",
        "fixCommitParentSHA1": "b43c32ad0a3674fcda782d2e28d0975b72382470",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java\nindex f3c6677..e14f103 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java\n@@ -288,7 +288,7 @@\n \n             @Override\n             public void close() throws IOException {\n-                throw new IOException();\n+                throw new IOException(\"Test IOException\");\n             }\n         });\n     }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 291,
        "bugNodeStartChar": 9892,
        "bugNodeLength": 17,
        "fixLineNum": 291,
        "fixNodeStartChar": 9892,
        "fixNodeLength": 35,
        "sourceBeforeFix": "new IOException()",
        "sourceAfterFix": "new IOException(\"Test IOException\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 312,
        "bugNodeStartChar": 11416,
        "bugNodeLength": 632,
        "fixLineNum": 312,
        "fixNodeStartChar": 11105,
        "fixNodeLength": 617,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\nindex d655239..aa1bc16 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/TestLeftRecursion.java\n@@ -1755,7 +1755,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1781,7 +1781,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1807,7 +1807,7 @@\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(239);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(238);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {print($ctx.toStringTree(recog=self))} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{True}?\\n\");\n@@ -1908,7 +1908,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1941,7 +1941,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1974,7 +1974,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -2007,7 +2007,7 @@\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n \n-\t\tStringBuilder grammarBuilder = new StringBuilder(561);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(560);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {print($e.v)};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1784,
        "bugNodeStartChar": 80257,
        "bugNodeLength": 22,
        "fixLineNum": 1784,
        "fixNodeStartChar": 80257,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(239)",
        "sourceAfterFix": "new StringBuilder(238)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5b13fe70c25812157a1e4432135eb9639e72bc6a",
        "fixCommitParentSHA1": "1429274992a0a98e2bec1b72ecc06a507f39e9a3",
        "bugFilePath": "meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/ReplaceTest.java",
        "fixPatch": "diff --git a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/ReplaceTest.java b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/ReplaceTest.java\nindex 2c73a4d..541cf6f 100755\n--- a/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/ReplaceTest.java\n+++ b/meteor/meteor-meteor/src/test/java/eu/stratosphere/meteor/base/ReplaceTest.java\n@@ -32,7 +32,7 @@\n \t\tfinal Sink normalizedPersons = new Sink(\"normalizedPersons.json\").withInputs(replace);\n \t\texpectedPlan.setSinks(normalizedPersons);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -54,7 +54,7 @@\n \t\tfinal Sink normalizedPersons = new Sink(\"normalizedPersons.json\").withInputs(replace);\n \t\texpectedPlan.setSinks(normalizedPersons);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n \n \t@Test\n@@ -79,6 +79,6 @@\n \t\tfinal Sink normalizedPersons = new Sink(\"normalizedPersons.json\").withInputs(replace);\n \t\texpectedPlan.setSinks(normalizedPersons);\n \n-\t\tassertEquals(expectedPlan, actualPlan);\n+\t\tassertPlanEquals(expectedPlan, actualPlan);\n \t}\n }\n",
        "projectName": "apache.flink",
        "bugLineNum": 82,
        "bugNodeStartChar": 3502,
        "bugNodeLength": 38,
        "fixLineNum": 82,
        "fixNodeStartChar": 3502,
        "fixNodeLength": 42,
        "sourceBeforeFix": "assertEquals(expectedPlan,actualPlan)",
        "sourceAfterFix": "assertPlanEquals(expectedPlan,actualPlan)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "668cb3afd0ddec789ef7f3f81940f31e976d042b",
        "fixCommitParentSHA1": "94df4ad94faa1230f06521e9457472e0ebd2715a",
        "bugFilePath": "src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java",
        "fixPatch": "diff --git a/src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java b/src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java\nindex a9eb52c..190c1f4 100644\n--- a/src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java\n+++ b/src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java\n@@ -47,7 +47,7 @@\n     public static void setConfigurationBuilder() throws CheckstyleException {\n         final List<Configuration> configs = getCheckConfigs(\"ParameterName\");\n \n-        Assert.assertEquals(configs.size(), 1);\n+        Assert.assertEquals(1, configs.size());\n \n         config = configs.get(0);\n         format = config.getAttribute(\"format\");\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 50,
        "bugNodeStartChar": 2052,
        "bugNodeLength": 38,
        "fixLineNum": 50,
        "fixNodeStartChar": 2052,
        "fixNodeLength": 38,
        "sourceBeforeFix": "Assert.assertEquals(configs.size(),1)",
        "sourceAfterFix": "Assert.assertEquals(1,configs.size())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "627efb94e9ec8bcf09829fb8be5cbc4f4334fceb",
        "fixCommitParentSHA1": "bb16e0693819afb821bce6943d8cbd178266a63e",
        "bugFilePath": "src/main/java/org/jsoup/safety/Whitelist.java",
        "fixPatch": "diff --git a/src/main/java/org/jsoup/safety/Whitelist.java b/src/main/java/org/jsoup/safety/Whitelist.java\nindex 6340c10..a0ff66b 100644\n--- a/src/main/java/org/jsoup/safety/Whitelist.java\n+++ b/src/main/java/org/jsoup/safety/Whitelist.java\n@@ -77,7 +77,7 @@\n \n     /**\n      This whitelist allows a fuller range of text nodes: <code>a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li,\n-     ol, p, pre, q, small, strike, strong, sub, sup, u, ul</code>, and appropriate attributes.\n+     ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul</code>, and appropriate attributes.\n      <p/>\n      Links (<code>a</code> elements) can point to <code>http, https, ftp, mailto</code>, and have an enforced\n      <code>rel=nofollow</code> attribute.\n@@ -90,7 +90,7 @@\n         return new Whitelist()\n                 .addTags(\n                         \"a\", \"b\", \"blockquote\", \"br\", \"cite\", \"code\", \"dd\", \"dl\", \"dt\", \"em\",\n-                        \"i\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"strike\", \"strong\", \"sub\",\n+                        \"i\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"span\", \"strike\", \"strong\", \"sub\",\n                         \"sup\", \"u\", \"ul\")\n \n                 .addAttributes(\"a\", \"href\")\n@@ -122,7 +122,7 @@\n \n     /**\n      This whitelist allows a full range of text and structural body HTML: <code>a, b, blockquote, br, caption, cite,\n-     code, col, colgroup, dd, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, strike, strong, sub,\n+     code, col, colgroup, dd, div, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, span, strike, strong, sub,\n      sup, table, tbody, td, tfoot, th, thead, tr, u, ul</code>\n      <p/>\n      Links do not have an enforced <code>rel=nofollow</code> attribute, but you can add that if desired.\n@@ -134,7 +134,7 @@\n                 .addTags(\n                         \"a\", \"b\", \"blockquote\", \"br\", \"caption\", \"cite\", \"code\", \"col\",\n                         \"colgroup\", \"dd\", \"div\", \"dl\", \"dt\", \"em\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n-                        \"i\", \"img\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"strike\", \"strong\",\n+                        \"i\", \"img\", \"li\", \"ol\", \"p\", \"pre\", \"q\", \"small\", \"span\", \"strike\", \"strong\",\n                         \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\",\n                         \"ul\")\n \n",
        "projectName": "jhy.jsoup",
        "bugLineNum": 133,
        "bugNodeStartChar": 4975,
        "bugNodeLength": 453,
        "fixLineNum": 133,
        "fixNodeStartChar": 4975,
        "fixNodeLength": 461,
        "sourceBeforeFix": "new Whitelist().addTags(\"a\",\"b\",\"blockquote\",\"br\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"dd\",\"div\",\"dl\",\"dt\",\"em\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"i\",\"img\",\"li\",\"ol\",\"p\",\"pre\",\"q\",\"small\",\"strike\",\"strong\",\"sub\",\"sup\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"tr\",\"u\",\"ul\")",
        "sourceAfterFix": "new Whitelist().addTags(\"a\",\"b\",\"blockquote\",\"br\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"dd\",\"div\",\"dl\",\"dt\",\"em\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"i\",\"img\",\"li\",\"ol\",\"p\",\"pre\",\"q\",\"small\",\"span\",\"strike\",\"strong\",\"sub\",\"sup\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"tr\",\"u\",\"ul\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3439fb13b3fa16d5e42d0e064065be5ae7462eb",
        "fixCommitParentSHA1": "a9985cbe64988960f30426fd36cbb4487e6d10b4",
        "bugFilePath": "src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\nindex cb35755..8377fbe 100644\n--- a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n+++ b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n@@ -407,12 +407,12 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n+        public Builder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n             configBuilder.setMaximumConnectionsPerHost(defaultMaxConnectionPerHost);\n             return this;\n         }\n \n-        public DerivedBuilder setConnectionTimeoutInMs(int connectionTimeuot) {\n+        public Builder setConnectionTimeoutInMs(int connectionTimeuot) {\n             configBuilder.setConnectionTimeoutInMs(connectionTimeuot);\n             return this;\n         }\n@@ -427,52 +427,52 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n+        public Builder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n             configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);\n             return this;\n         }\n \n-        public DerivedBuilder setCompressionEnabled(boolean compressionEnabled) {\n+        public Builder setCompressionEnabled(boolean compressionEnabled) {\n             configBuilder.setCompressionEnabled(compressionEnabled);\n             return this;\n         }\n \n-        public DerivedBuilder setUserAgent(String userAgent) {\n+        public Builder setUserAgent(String userAgent) {\n             configBuilder.setUserAgent(userAgent);\n             return this;\n         }\n \n-        public DerivedBuilder setAllowPoolingConnection(boolean allowPoolingConnection) {\n+        public Builder setAllowPoolingConnection(boolean allowPoolingConnection) {\n             configBuilder.setAllowPoolingConnection(allowPoolingConnection);\n             return this;\n         }\n \n-        public DerivedBuilder setScheduledExecutorService(ScheduledExecutorService reaper) {\n+        public Builder setScheduledExecutorService(ScheduledExecutorService reaper) {\n             configBuilder.setScheduledExecutorService(reaper);\n             return this;\n         }\n \n-        public DerivedBuilder setExecutorService(ExecutorService applicationThreadPool) {\n+        public Builder setExecutorService(ExecutorService applicationThreadPool) {\n             configBuilder.setExecutorService(applicationThreadPool);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n+        public Builder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n             configBuilder.setSSLEngineFactory(sslEngineFactory);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLContext(final SSLContext sslContext) {\n+        public Builder setSSLContext(final SSLContext sslContext) {\n             configBuilder.setSSLContext(sslContext);\n             return this;\n         }\n \n-        public DerivedBuilder setRequestCompressionLevel(int requestCompressionLevel) {\n+        public Builder setRequestCompressionLevel(int requestCompressionLevel) {\n             configBuilder.setRequestCompressionLevel(requestCompressionLevel);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmDomain(String domain) {\n+        public Builder setRealmDomain(String domain) {\n             realm().setDomain(domain);\n             return this;\n         }\n@@ -482,27 +482,27 @@\n             return this;\n         }\n \n-        public DerivedBuilder setRealmPassword(String password) {\n+        public Builder setRealmPassword(String password) {\n             realm().setPassword(password);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmScheme(Realm.AuthScheme scheme) {\n+        public Builder setRealmScheme(Realm.AuthScheme scheme) {\n             realm().setScheme(scheme);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmName(String realmName) {\n+        public Builder setRealmName(String realmName) {\n             realm().setRealmName(realmName);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n+        public Builder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n             realm().setUsePreemptiveAuth(usePreemptiveAuth);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmEnconding(String enc) {\n+        public Builder setRealmEnconding(String enc) {\n             realm().setEnconding(enc);\n             return this;\n         }\n@@ -517,22 +517,22 @@\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPrincipal(String principal) {\n+        public Builder setProxyPrincipal(String principal) {\n             this.proxyPrincipal = principal;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPassword(String password) {\n+        public Builder setProxyPassword(String password) {\n             this.proxyPassword = password;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPort(int port) {\n+        public Builder setProxyPort(int port) {\n             this.proxyPort = port;\n             return this;\n         }\n         \n-        public DerivedBuilder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n+        public Builder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n         {\n             this.defaultThrowableHandler = throwableHandler;\n             return this;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 520,
        "bugNodeStartChar": 19787,
        "bugNodeLength": 139,
        "fixLineNum": 520,
        "fixNodeStartChar": 19787,
        "fixNodeLength": 132,
        "sourceBeforeFix": "public DerivedBuilder setProxyPrincipal(String principal){   this.proxyPrincipal=principal;   return this; } ",
        "sourceAfterFix": "public Builder setProxyPrincipal(String principal){   this.proxyPrincipal=principal;   return this; } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dda99609dbe5b3ef9a831b570c99ee79530f4d0a",
        "fixCommitParentSHA1": "f1a5eef2542f5b40778cfb317273b4d6006d3bd4",
        "bugFilePath": "src/jvm/clojure/lang/Module.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Module.java b/src/jvm/clojure/lang/Module.java\nindex c99f9c2..0c28aab 100644\n--- a/src/jvm/clojure/lang/Module.java\n+++ b/src/jvm/clojure/lang/Module.java\n@@ -47,7 +47,7 @@\n }\n \n public static TRef intern(String moduleName, String name) throws Exception{\n-\tModule module = findModule(name);\n+\tModule module = findModule(moduleName);\n \tif(module == null)\n \t\tthrow new Exception(String.format(\"Module %s not found\", moduleName));\n \treturn module.intern(name);\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 50,
        "bugNodeStartChar": 1320,
        "bugNodeLength": 16,
        "fixLineNum": 50,
        "fixNodeStartChar": 1320,
        "fixNodeLength": 22,
        "sourceBeforeFix": "findModule(name)",
        "sourceAfterFix": "findModule(moduleName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d41aad3b391de7aeb6b43e16692b974e5a35148e",
        "fixCommitParentSHA1": "8aed59f4be0850d2a6ace518d89a54693db5bbd9",
        "bugFilePath": "library/src/android/support/v4/view/MenuInflater.java",
        "fixPatch": "diff --git a/library/src/android/support/v4/view/MenuInflater.java b/library/src/android/support/v4/view/MenuInflater.java\nindex f32a2aa..d8a0728 100644\n--- a/library/src/android/support/v4/view/MenuInflater.java\n+++ b/library/src/android/support/v4/view/MenuInflater.java\n@@ -435,7 +435,7 @@\n         private Method mMethod;\r\n \r\n         public InflatedOnMenuItemClickListener(String methodName) {\r\n-            final Class<?> localClass = MenuInflater.this.getClass();\r\n+            final Class<?> localClass = mContext.getClass();\r\n             try {\r\n                 mMethod = localClass.getMethod(methodName, PARAM_TYPES);\r\n             } catch (Exception e) {\r\n@@ -453,7 +453,7 @@\n             final Object[] params = new Object[] { item };\r\n             try {\r\n                 if (mMethod.getReturnType() == Boolean.TYPE) {\r\n-                    return (Boolean)mMethod.invoke(MenuInflater.this, params);\r\n+                    return (Boolean)mMethod.invoke(mContext, params);\r\n                 }\r\n                 return false;\r\n             } catch (Exception e) {\r\n",
        "projectName": "JakeWharton.ActionBarSherlock",
        "bugLineNum": 438,
        "bugNodeStartChar": 19184,
        "bugNodeLength": 17,
        "fixLineNum": 438,
        "fixNodeStartChar": 18747,
        "fixNodeLength": 8,
        "sourceBeforeFix": "MenuInflater.this.getClass()",
        "sourceAfterFix": "mContext.getClass()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1adccc7a5bdc515f01ae6bd644097ab85336bd84",
        "fixCommitParentSHA1": "ac703759a1cede64d1b718cc8e7be84f6b7916d9",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\nindex c907ba8..6c7dc17 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/map/impl/nearcache/ClientMapNearCacheTest.java\n@@ -997,7 +997,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.clear();\n \n@@ -1019,7 +1019,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1051,7 +1051,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // call evictAll\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.evictAll();\n \n@@ -1073,7 +1073,7 @@\n         populateNearCache(clientMap, 1000);\n \n         // member comes\n-        HazelcastInstance member = hazelcastFactory.newHazelcastInstance();\n+        HazelcastInstance member = hazelcastFactory.newHazelcastInstance(newConfig());\n \n         // add test listener to count clear events\n         final ClearEventCounterEventHandler handler = new ClearEventCounterEventHandler();\n@@ -1109,7 +1109,7 @@\n         ((NearCachedClientMapProxy) clientMap).addNearCacheInvalidateListener(handler);\n \n         // create a new client to send events\n-        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient();\n+        HazelcastInstance anotherClient = hazelcastFactory.newHazelcastClient(newClientConfig());\n         IMap<Object, Object> anotherClientMap = anotherClient.getMap(clientMap.getName());\n         anotherClientMap.loadAll(true);\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1022,
        "bugNodeStartChar": 36391,
        "bugNodeLength": 39,
        "fixLineNum": 1022,
        "fixNodeStartChar": 36391,
        "fixNodeLength": 50,
        "sourceBeforeFix": "hazelcastFactory.newHazelcastInstance()",
        "sourceAfterFix": "hazelcastFactory.newHazelcastInstance(newConfig())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "38eb6222bddaf49c3c9ae73ddef0cfe4ff5efa48",
        "fixCommitParentSHA1": "c24917392a0f2b6868215a33bf4091d20f90d53a",
        "bugFilePath": "dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java",
        "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\nindex ac0802b..0f36da4 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/test/java/com/alibaba/dubbo/remoting/codec/ExchangeCodecTest.java\n@@ -119,7 +119,7 @@\n \n     @Test\n     public void test_Decode_Error_Length() throws IOException {\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -135,7 +135,7 @@\n     @Test\n     public void test_Decode_Error_Response_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -208,7 +208,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -223,7 +223,7 @@\n     @Test\n     public void test_Decode_Return_Request_Event_String() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         String event = Request.READONLY_EVENT;\n         byte[] request = getRequestBytes(event, header);\n \n@@ -238,7 +238,7 @@\n     @Test\n     public void test_Decode_Return_Request_Heartbeat_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xff, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         byte[] request = getRequestBytes(null, header);\n         Request obj = (Request) decode(request);\n         Assert.assertEquals(null, obj.getData());\n@@ -251,7 +251,7 @@\n     @Test\n     public void test_Decode_Return_Request_Object() throws IOException {\n         //|10011111|20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -266,7 +266,7 @@\n     @Test\n     public void test_Decode_Error_Request_Object() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xdf, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0xe2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n         //bad object\n@@ -281,7 +281,7 @@\n     @Test\n     public void test_Header_Response_NoSerializationFlag() throws IOException {\n         //00000010-response/oneway/hearbeat=false/noset |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, (byte) 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n@@ -294,7 +294,7 @@\n     @Test\n     public void test_Header_Response_Heartbeat() throws IOException {\n         //00000010-response/oneway/hearbeat=true |20-stats=ok|id=0|length=0\n-        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n+        byte[] header = new byte[]{MAGIC_HIGH, MAGIC_LOW, 0x02, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n         Person person = new Person();\n         byte[] request = getRequestBytes(person, header);\n \n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 122,
        "bugNodeStartChar": 4620,
        "bugNodeLength": 69,
        "fixLineNum": 122,
        "fixNodeStartChar": 4620,
        "fixNodeLength": 69,
        "sourceBeforeFix": "{MAGIC_HIGH,MAGIC_LOW,0x20,20,0,0,0,0,0,0,0,0,0,0,0,0}",
        "sourceAfterFix": "{MAGIC_HIGH,MAGIC_LOW,0x02,20,0,0,0,0,0,0,0,0,0,0,0,0}"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e78b610375a31d161665d2990bb6baa41933e0ee",
        "fixCommitParentSHA1": "8fc3e597b75f0e65a156200a9a40838e08d87f29",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/MapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/MapService.java b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\nindex 9334f31..80200f3 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n@@ -196,7 +196,7 @@\n             for (int i = 0; i < nodeEngine.getPartitionService().getPartitionCount(); i++) {\n                 RecordStore recordStore = getPartitionContainer(i).getRecordStore(mapContainer.getName());\n                 // add your owned entries to the map so they will be merged\n-                if (nodeEngine.getPartitionService().getPartitionOwner(i).equals(nodeEngine.getClusterService().getThisAddress())) {\n+                if (nodeEngine.getClusterService().getThisAddress().equals(nodeEngine.getPartitionService().getPartitionOwner(i))) {\n                     if (!recordMap.containsKey(mapContainer)) {\n                         recordMap.put(mapContainer, new ArrayList<Record>());\n                     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 199,
        "bugNodeStartChar": 8704,
        "bugNodeLength": 32,
        "fixLineNum": 199,
        "fixNodeStartChar": 8704,
        "fixNodeLength": 30,
        "sourceBeforeFix": "nodeEngine.getPartitionService()",
        "sourceAfterFix": "nodeEngine.getClusterService()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "0e056863e4b10421a51c9276f21ad6fdc4af9ff5",
        "fixCommitParentSHA1": "d9f423f55deb81e4f5ae2bf4334de72dfec8dd6f",
        "bugFilePath": "server/src/main/java/io/druid/client/DirectDruidClient.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/client/DirectDruidClient.java b/server/src/main/java/io/druid/client/DirectDruidClient.java\nindex 5429485..34d6569 100644\n--- a/server/src/main/java/io/druid/client/DirectDruidClient.java\n+++ b/server/src/main/java/io/druid/client/DirectDruidClient.java\n@@ -375,7 +375,7 @@\n         private long checkQueryTimeout()\n         {\n           long timeLeft = timeoutAt - System.currentTimeMillis();\n-          if (timeLeft >= 0) {\n+          if (timeLeft <= 0) {\n             String msg = StringUtils.safeFormat(\"Query[%s] url[%s] timed out.\", query.getId(), url);\n             setupResponseReadFailure(msg, null);\n             throw new RE(msg);\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 378,
        "bugNodeStartChar": 14572,
        "bugNodeLength": 13,
        "fixLineNum": 378,
        "fixNodeStartChar": 14572,
        "fixNodeLength": 13,
        "sourceBeforeFix": "timeLeft >= 0",
        "sourceAfterFix": "timeLeft <= 0"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bc53fc00817adf77d0e25d07ae0aaea0f16dddd7",
        "fixCommitParentSHA1": "1d36bed3166504e5bde0c6e1e5b988cb70197875",
        "bugFilePath": "core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java",
        "fixPatch": "diff --git a/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java b/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\nindex 2841d1f..328f85a 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/BlockStoreMeta.java\n@@ -77,7 +77,7 @@\n    * @return A mapping from storage tier alias to blocks\n    */\n   public Map<String, List<Long>> getBlockList() {\n-    Preconditions.checkNotNull(mBlockIdsOnTiers);\n+    Preconditions.checkNotNull(mBlockIdsOnTiers,\"mBlockIdsOnTiers\");\n \n     return mBlockIdsOnTiers;\n   }\n@@ -128,7 +128,7 @@\n    * @return the number of blocks\n    */\n   public int getNumberOfBlocks() {\n-    Preconditions.checkNotNull(mBlockIdsOnTiers);\n+    Preconditions.checkNotNull(mBlockIdsOnTiers,\"mBlockIdsOnTiers\");\n \n     int numberOfBlocks = 0;\n     for (List<Long> blockIds : mBlockIdsOnTiers.values()) {\n@@ -168,7 +168,7 @@\n    * @param manager a block metadata manager handle\n    */\n   private BlockStoreMeta(BlockMetadataManager manager, boolean shouldIncludeBlockIds) {\n-    Preconditions.checkNotNull(manager);\n+    Preconditions.checkNotNull(manager,\"manager\");\n     for (StorageTier tier : manager.getTiers()) {\n       Long capacityBytes = mCapacityBytesOnTiers.get(tier.getTierAlias());\n       Long usedBytes = mUsedBytesOnTiers.get(tier.getTierAlias());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 80,
        "bugNodeStartChar": 2749,
        "bugNodeLength": 44,
        "fixLineNum": 80,
        "fixNodeStartChar": 2749,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Preconditions.checkNotNull(mBlockIdsOnTiers)",
        "sourceAfterFix": "Preconditions.checkNotNull(mBlockIdsOnTiers,\"mBlockIdsOnTiers\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4314519bcd87425e9866385e7c91f2f8b1a34211",
        "fixCommitParentSHA1": "7ecf078ce765d4d976c554fe04b3ba7cf037c045",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/FileConsumeNoopIdempotentDisabledTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeNoopIdempotentDisabledTest.java b/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeNoopIdempotentDisabledTest.java\nindex 0469add..676a36d 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeNoopIdempotentDisabledTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeNoopIdempotentDisabledTest.java\n@@ -36,7 +36,7 @@\n     public void testNoop() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n         // should be able to read the file multiple times as idempotent is false\n-        mock.expectedMessageCount(2);\n+        mock.expectedMinimumMessageCount(2);\n \n         assertMockEndpointsSatisfied();\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 39,
        "bugNodeStartChar": 1557,
        "bugNodeLength": 28,
        "fixLineNum": 39,
        "fixNodeStartChar": 1557,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(2)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(2)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9c50b2d46f7ca1268a465be84e0fbac7a0874a35",
        "fixCommitParentSHA1": "3c4b4c1bba025f12d4864f169aaf29a616f4154f",
        "bugFilePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/XidImpl.java",
        "fixPatch": "diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/XidImpl.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/XidImpl.java\nindex d03e59a..e3a688b 100644\n--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/XidImpl.java\n+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/XidImpl.java\n@@ -129,13 +129,13 @@\n     @Override\n     public byte[] getGlobalTransactionId()\n     {\n-        return globalId.clone();\n+        return globalId;\n     }\n \n     @Override\n     public byte[] getBranchQualifier()\n     {\n-        return branchId.clone();\n+        return branchId;\n     }\n \n     @Override\n@@ -147,13 +147,13 @@\n     @Override\n     public boolean equals( Object o )\n     {\n-        if ( !(o instanceof Xid) )\n+        if ( !(o instanceof XidImpl) )\n         {\n             return false;\n         }\n         \n-        return Arrays.equals( globalId, ((Xid) o).getGlobalTransactionId() ) &&\n-               Arrays.equals( branchId, ((Xid) o).getBranchQualifier() );\n+        return Arrays.equals( globalId, ((XidImpl) o).globalId ) &&\n+               Arrays.equals( branchId, ((XidImpl) o).branchId );\n     }\n \n     private volatile int hashCode = 0;\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 150,
        "bugNodeStartChar": 4290,
        "bugNodeLength": 16,
        "fixLineNum": 150,
        "fixNodeStartChar": 4290,
        "fixNodeLength": 20,
        "sourceBeforeFix": "o instanceof Xid",
        "sourceAfterFix": "o instanceof XidImpl"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "038ea1803bae1cf3be279b36395b4de4e0ff39b5",
        "fixCommitParentSHA1": "17380150434ec1f8ab8a8caff3f9af5e2bbdaa9a",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\nindex 89010de..010aef6 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n@@ -98,7 +98,7 @@\n \t */\n \tpublic GarageDoorData getGarageData() throws InvalidLoginException,\n \t\t\tIOException {\n-\t\tlogger.debug(\"Retreiveing door data\");\n+\t\tlogger.trace(\"Retreiveing door data\");\n \t\tString url = String.format(\n \t\t\t\t\"%s/api/v4/userdevicedetails/get?appId=%s&SecurityToken=%s\",\n \t\t\t\tWEBSITE, enc(appId), enc(getSecurityToken()));\n@@ -112,7 +112,7 @@\n \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n-\t\tlogger.debug(\"attempting to login\");\n+\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));\n@@ -183,13 +183,13 @@\n \t\t\tString payload, String payloadType, boolean retry)\n \t\t\tthrows IOException, InvalidLoginException {\n \n-\t\tlogger.debug(\"Requsting URL {}\", url);\n+\t\tlogger.trace(\"Requsting URL {}\", url);\n \n \t\tString dataString = executeUrl(method, url, header,\n \t\t\t\tpayload == null ? null : IOUtils.toInputStream(payload),\n \t\t\t\tpayloadType, timeout);\n \n-\t\tlogger.debug(\"Received MyQ  JSON: {}\", dataString);\n+\t\tlogger.trace(\"Received MyQ  JSON: {}\", dataString);\n \n \t\tif (dataString == null) {\n \t\t\tthrow new IOException(\"Null response from MyQ server\");\n@@ -199,7 +199,7 @@\n \t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tJsonNode rootNode = mapper.readTree(dataString);\n \t\t\tint returnCode = rootNode.get(\"ReturnCode\").asInt();\n-\t\t\tlogger.debug(\"myq ReturnCode: {}\", returnCode);\n+\t\t\tlogger.trace(\"myq ReturnCode: {}\", returnCode);\n \n \t\t\tMyQResponseCode rc = MyQResponseCode.fromCode(returnCode);\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 115,
        "bugNodeStartChar": 3206,
        "bugNodeLength": 35,
        "fixLineNum": 115,
        "fixNodeStartChar": 3206,
        "fixNodeLength": 35,
        "sourceBeforeFix": "logger.debug(\"attempting to login\")",
        "sourceAfterFix": "logger.trace(\"attempting to login\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "24d4f1a7133defb3bf9a8726cfb864004a5876ca",
        "fixCommitParentSHA1": "72cd039f4793c351866f960d5082aa40e5089a4d",
        "bugFilePath": "src/com/google/javascript/jscomp/NameAnalyzer.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex ff37887..a6863dc 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -147,7 +147,7 @@\n \n   static final DiagnosticType REPORT_PATH_IO_ERROR =\n       DiagnosticType.error(\"JSC_REPORT_PATH_IO_ERROR\",\n-          \"Error writing compiler report to {0}\");\n+          \"Error writing compiler report to {0}:\\n{1}\");\n \n   /**\n    * All the aliases in a program form a graph, where each global name is\n@@ -1132,7 +1132,7 @@\n     try {\n       Files.write(\"\", new File(reportPath), UTF_8);\n     } catch (IOException e) {\n-      compiler.report(JSError.make(REPORT_PATH_IO_ERROR, reportPath));\n+      compiler.report(JSError.make(REPORT_PATH_IO_ERROR, reportPath, e.getMessage()));\n     }\n   }\n \n@@ -1158,7 +1158,7 @@\n       try {\n         Files.append(getHtmlReport(), new File(reportPath), UTF_8);\n       } catch (IOException e) {\n-        compiler.report(JSError.make(REPORT_PATH_IO_ERROR, reportPath));\n+        compiler.report(JSError.make(REPORT_PATH_IO_ERROR, reportPath, e.getMessage()));\n       }\n     }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1135,
        "bugNodeStartChar": 38562,
        "bugNodeLength": 46,
        "fixLineNum": 1135,
        "fixNodeStartChar": 38562,
        "fixNodeLength": 62,
        "sourceBeforeFix": "JSError.make(REPORT_PATH_IO_ERROR,reportPath)",
        "sourceAfterFix": "JSError.make(REPORT_PATH_IO_ERROR,reportPath,e.getMessage())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 593,
        "bugNodeStartChar": 22265,
        "bugNodeLength": 10,
        "fixLineNum": 593,
        "fixNodeStartChar": 22265,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15852",
        "sourceAfterFix": "id=10999"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 169,
        "bugNodeStartChar": 6634,
        "bugNodeLength": 225,
        "fixLineNum": 169,
        "fixNodeStartChar": 6466,
        "fixNodeLength": 221,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2efffc72002968f835a0ea6a70f8e7762752b15",
        "fixCommitParentSHA1": "71fdc224c67c6fda92aa8e89592745a281dcafb6",
        "bugFilePath": "api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java b/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\nindex d5eb318..204add3 100644\n--- a/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\n+++ b/api/src/test/java/org/openmrs/validator/ConceptValidatorTest.java\n@@ -116,7 +116,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(duplicateName);\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t}\r\n \t\r\n@@ -128,7 +128,7 @@\n \t@Test(expected = DuplicateConceptNameException.class)\r\n \t@Verifies(value = \"should fail if there is a duplicate unretired preferred name in the same locale\", method = \"validate(Object,Errors)\")\r\n \tpublic void validate_shouldFailIfThereIsADuplicateUnretiredPreferredNameInTheSameLocale() throws Exception {\r\n-\t\tContext.setLocale(Context.getLocale());\r\n+\t\tContext.setLocale(new Locale(\"en\"));\r\n \t\tConcept concept = Context.getConceptService().getConcept(5497);\r\n \t\tConceptName preferredName = new ConceptName(\"preferred name\", Context.getLocale());\r\n \t\tconcept.setPreferredName(preferredName);\r\n@@ -139,7 +139,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(\"preferred name\");\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t}\r\n \t\r\n@@ -177,7 +177,7 @@\n \t@Test\r\n \t@Verifies(value = \"should pass if the duplicate ConceptName is neither preferred nor fully Specified\", method = \"validate(Object,Errors)\")\r\n \tpublic void validate_shouldPassIfTheDuplicateConceptNameIsNeitherPreferredNorFullySpecified() throws Exception {\r\n-\t\tContext.setLocale(Context.getLocale());\r\n+\t\tContext.setLocale(new Locale(\"en\"));\r\n \t\tConcept concept = Context.getConceptService().getConcept(5497);\r\n \t\tConceptName duplicateName = new ConceptName(\"duplicate name\", Context.getLocale());\r\n \t\t//note that the name is neither fully specified nor preferred,\r\n@@ -191,7 +191,7 @@\n \t\tConceptName assumedDuplicateName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tassumedDuplicateName.setName(duplicateName.getName());\r\n \t\tnewConcept.addName(assumedDuplicateName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t\tAssert.assertEquals(false, errors.hasErrors());\r\n \t}\r\n@@ -212,7 +212,7 @@\n \t\tConceptName anotherConceptName = ConceptNameTest.createMockConceptName(3, Context.getLocale(), null, true);\r\n \t\tanotherConceptName.setName(duplicateName);\r\n \t\tnewConcept.addName(anotherConceptName);\r\n-\t\tErrors errors = new BindException(concept, \"concept\");\r\n+\t\tErrors errors = new BindException(newConcept, \"concept\");\r\n \t\tnew ConceptValidator().validate(newConcept, errors);\r\n \t\tAssert.assertEquals(false, errors.hasErrors());\r\n \t}\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 142,
        "bugNodeStartChar": 6692,
        "bugNodeLength": 37,
        "fixLineNum": 142,
        "fixNodeStartChar": 6551,
        "fixNodeLength": 40,
        "sourceBeforeFix": "new BindException(concept,\"concept\")",
        "sourceAfterFix": "new BindException(newConcept,\"concept\")"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "d9a2914d0c3fc866e16a2cc4b67f83198a71a16c",
        "fixCommitParentSHA1": "f850e77d4ba974eab8ec51636ac58a90ab472d40",
        "bugFilePath": "nephele/nephele-management/src/main/java/eu/stratosphere/nephele/profiling/types/ThreadProfilingEvent.java",
        "fixPatch": "diff --git a/nephele/nephele-management/src/main/java/eu/stratosphere/nephele/profiling/types/ThreadProfilingEvent.java b/nephele/nephele-management/src/main/java/eu/stratosphere/nephele/profiling/types/ThreadProfilingEvent.java\nindex e57d87f..15a6a5c 100644\n--- a/nephele/nephele-management/src/main/java/eu/stratosphere/nephele/profiling/types/ThreadProfilingEvent.java\n+++ b/nephele/nephele-management/src/main/java/eu/stratosphere/nephele/profiling/types/ThreadProfilingEvent.java\n@@ -124,7 +124,7 @@\n \t@Override\n \tpublic boolean equals(Object obj) {\n \n-\t\tif (super.equals(obj)) {\n+\t\tif (!super.equals(obj)) {\n \t\t\treturn false;\n \t\t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 127,
        "bugNodeStartChar": 3579,
        "bugNodeLength": 17,
        "fixLineNum": 127,
        "fixNodeStartChar": 3579,
        "fixNodeLength": 18,
        "sourceBeforeFix": "super.equals(obj)",
        "sourceAfterFix": "!super.equals(obj)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2296150cacd0bc1b8dec9539144ce00169d26bb6",
        "fixCommitParentSHA1": "e5e04d116bbe00f8b1f5bdceb5238e035bdff356",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java b/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\nindex f44b08d..6345e8a 100644\n--- a/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\n+++ b/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\n@@ -124,7 +124,7 @@\n     }\n \n     public String[] getRequires() {\n-        return alternatives;\n+        return requires;\n     }\n \n     public EnumSet<AttributeAccess.Flag> getFlags() {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 127,
        "bugNodeStartChar": 4498,
        "bugNodeLength": 20,
        "fixLineNum": 127,
        "fixNodeStartChar": 4498,
        "fixNodeLength": 16,
        "sourceBeforeFix": "return alternatives; ",
        "sourceAfterFix": "return requires; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c136490318387755a73ef7061050010b0ffe6125",
        "fixCommitParentSHA1": "383f6c69b3add555b7d38ef8603cb769ecb26721",
        "bugFilePath": "modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java",
        "fixPatch": "diff --git a/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java b/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\nindex 4e7f3ea..59541d2 100644\n--- a/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\n+++ b/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\n@@ -60,7 +60,7 @@\n         ar = new AtmosphereResourceImpl(config,\n                 broadcaster,\n                 mock(AtmosphereRequest.class),\n-                AtmosphereResponse.create(),\n+                AtmosphereResponse.newInstance(),\n                 mock(BlockingIOCometSupport.class),\n                 atmosphereHandler);\n \n@@ -85,7 +85,7 @@\n         ar = new AtmosphereResourceImpl(config,\n                 broadcaster,\n                 mock(AtmosphereRequest.class),\n-                AtmosphereResponse.create(),\n+                AtmosphereResponse.newInstance(),\n                 mock(BlockingIOCometSupport.class),\n                 atmosphereHandler);\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 63,
        "bugNodeStartChar": 2356,
        "bugNodeLength": 27,
        "fixLineNum": 63,
        "fixNodeStartChar": 2356,
        "fixNodeLength": 32,
        "sourceBeforeFix": "AtmosphereResponse.create()",
        "sourceAfterFix": "AtmosphereResponse.newInstance()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "19dac46f389eff0af027d9d11176db6eec0cdbc3",
        "fixCommitParentSHA1": "ccbdf71b5a6c6fecac7c9bd60b013f14bfa820c0",
        "bugFilePath": "jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java",
        "fixPatch": "diff --git a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\nindex d0561c7..4d1e98b 100644\n--- a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n+++ b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n@@ -224,7 +224,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n@@ -252,7 +252,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 227,
        "bugNodeStartChar": 10305,
        "bugNodeLength": 18,
        "fixLineNum": 227,
        "fixNodeStartChar": 10305,
        "fixNodeLength": 30,
        "sourceBeforeFix": "findDelegate(name)",
        "sourceAfterFix": "findDelegateForNewObject(name)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f",
        "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30",
        "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 105,
        "bugNodeStartChar": 4630,
        "bugNodeLength": 50,
        "fixLineNum": 105,
        "fixNodeStartChar": 4630,
        "fixNodeLength": 49,
        "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)",
        "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1581,
        "bugNodeStartChar": 86919,
        "bugNodeLength": 90,
        "fixLineNum": 1581,
        "fixNodeStartChar": 86919,
        "fixNodeLength": 90,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"favorites.json\",new PostParameter[0],true))"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "4281cc1c5d3aa51b56db9d9e251c761c52a855e3",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 70,
        "bugNodeStartChar": 2827,
        "bugNodeLength": 18,
        "fixLineNum": 70,
        "fixNodeStartChar": 2758,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f3a240337ca4534b2a61fc9f004b56472c0e1371",
        "fixCommitParentSHA1": "22e30006db815a302631e823d4fbd95a9d030105",
        "bugFilePath": "bundles/persistence/org.openhab.persistence.influxdb/java/org/openhab/persistence/influxdb/internal/InfluxDBPersistenceService.java",
        "fixPatch": "diff --git a/bundles/persistence/org.openhab.persistence.influxdb/java/org/openhab/persistence/influxdb/internal/InfluxDBPersistenceService.java b/bundles/persistence/org.openhab.persistence.influxdb/java/org/openhab/persistence/influxdb/internal/InfluxDBPersistenceService.java\nindex 04e3b8a..9b86925 100644\n--- a/bundles/persistence/org.openhab.persistence.influxdb/java/org/openhab/persistence/influxdb/internal/InfluxDBPersistenceService.java\n+++ b/bundles/persistence/org.openhab.persistence.influxdb/java/org/openhab/persistence/influxdb/internal/InfluxDBPersistenceService.java\n@@ -172,12 +172,12 @@\n     }\n \n     if (!isProperlyConfigured) {\n-      logger.error(\"Configuration for influxdb not yet loaded or broken.\");\n+      logger.warn(\"Configuration for influxdb not yet loaded or broken.\");\n       return;\n     }\n \n     if (!isConnected()) {\n-      logger.error(\"InfluxDB is not yet connected\");\n+      logger.warn(\"InfluxDB is not yet connected\");\n       return;\n     }\n \n@@ -210,7 +210,7 @@\n       // e.g. raised by authentication errors\n       logger\n           .error(\n-              \"database connection error may be wrong password, username or dbname: {}\",\n+              \"database error: {}\",\n               e.getMessage());\n     }\n   }\n@@ -264,12 +264,12 @@\n     logger.debug(\"got a query\");\n \n     if (!isProperlyConfigured) {\n-      logger.error(\"Configuration for influxdb not yet loaded or broken.\");\n+      logger.warn(\"Configuration for influxdb not yet loaded or broken.\");\n       return Collections.emptyList();\n     }\n \n     if (!isConnected()) {\n-      logger.error(\"InfluxDB is not yet connected\");\n+      logger.warn(\"InfluxDB is not yet connected\");\n       return Collections.emptyList();\n     }\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 267,
        "bugNodeStartChar": 8732,
        "bugNodeLength": 68,
        "fixLineNum": 267,
        "fixNodeStartChar": 8732,
        "fixNodeLength": 67,
        "sourceBeforeFix": "logger.error(\"Configuration for influxdb not yet loaded or broken.\")",
        "sourceAfterFix": "logger.warn(\"Configuration for influxdb not yet loaded or broken.\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\nindex b3b91fd..c6de456 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/csharp/TestLeftRecursion.java\n@@ -1553,7 +1553,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1574,7 +1574,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1595,7 +1595,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {Console.WriteLine($ctx.ToStringTree(this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1676,7 +1676,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1704,7 +1704,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1732,7 +1732,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1760,7 +1760,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(741);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(740);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {Console.WriteLine($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1679,
        "bugNodeStartChar": 84099,
        "bugNodeLength": 22,
        "fixLineNum": 1679,
        "fixNodeStartChar": 84099,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(741)",
        "sourceAfterFix": "new StringBuilder(740)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b75894aec218a045bd91652840f07f0aecf01a73",
        "fixCommitParentSHA1": "e7153dd604416e0d964d93c3e7da250e79606fd0",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/env/PropertySourcesLoader.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/env/PropertySourcesLoader.java b/spring-boot/src/main/java/org/springframework/boot/env/PropertySourcesLoader.java\nindex 4aa2a34..ac249e4 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/env/PropertySourcesLoader.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/env/PropertySourcesLoader.java\n@@ -168,7 +168,7 @@\n \n \t\tEnumerableCompositePropertySource group = getGeneric(basename);\n \t\tgroup.add(source);\n-\t\tlogger.info(\"Adding PropertySource: \" + source + \" in group: \" + basename);\n+\t\tlogger.trace(\"Adding PropertySource: \" + source + \" in group: \" + basename);\n \t\tif (this.propertySources.contains(group.getName())) {\n \t\t\tthis.propertySources.replace(group.getName(), group);\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 171,
        "bugNodeStartChar": 6067,
        "bugNodeLength": 74,
        "fixLineNum": 171,
        "fixNodeStartChar": 6067,
        "fixNodeLength": 75,
        "sourceBeforeFix": "logger.info(\"Adding PropertySource: \" + source + \" in group: \"+ basename)",
        "sourceAfterFix": "logger.trace(\"Adding PropertySource: \" + source + \" in group: \"+ basename)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "aa2e0a36d1bf926dade3a92cdca38f6d6ee834b3",
        "fixCommitParentSHA1": "b1e433081ffdaa614da574f58c340bca2e178289",
        "bugFilePath": "retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java",
        "fixPatch": "diff --git a/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java\nindex 0467696..3f5c7e8 100644\n--- a/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java\n+++ b/retrofit-converters/wire/src/main/java/retrofit/converter/WireConverter.java\n@@ -37,7 +37,7 @@\n     }\n \n     if (!MIME_TYPE.equalsIgnoreCase(body.mimeType())) {\n-      throw new IllegalArgumentException(\"Expected a proto but was: \" + body.mimeType());\n+      throw new ConversionException(\"Expected a proto but was: \" + body.mimeType());\n     }\n \n     InputStream in = null;\n",
        "projectName": "square.retrofit",
        "bugLineNum": 40,
        "bugNodeStartChar": 1301,
        "bugNodeLength": 76,
        "fixLineNum": 40,
        "fixNodeStartChar": 1301,
        "fixNodeLength": 71,
        "sourceBeforeFix": "new IllegalArgumentException(\"Expected a proto but was: \" + body.mimeType())",
        "sourceAfterFix": "new ConversionException(\"Expected a proto but was: \" + body.mimeType())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "62daee8bf2d60c90827d2adc864662c9db6c4713",
        "fixCommitParentSHA1": "17192c873c62e527859f80085a07e89d5b098dd7",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\nindex d4f45af..d56bb5d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/config/managed/ManagedServiceInterceptor.java\n@@ -119,10 +119,10 @@\n                                     ManagedAtmosphereHandler h = new ManagedAtmosphereHandler();\n                                     h.configure(config, config.framework().newClassInstance(ap.target().getClass()));\n                                     config.framework().addAtmosphereHandler(path, h,\n-                                            config.getBroadcasterFactory().lookup(a.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(a.broadcaster(), path, true), w.interceptors);\n                                 } else {\n                                     config.framework().addAtmosphereHandler(path, w.atmosphereHandler,\n-                                            config.getBroadcasterFactory().lookup(a.broadcaster(), true), w.interceptors);\n+                                            config.getBroadcasterFactory().lookup(a.broadcaster(), path, true), w.interceptors);\n                                 }\n                                 request.setAttribute(FrameworkConfig.NEW_MAPPING, \"true\");\n                             } catch (Throwable e) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 122,
        "bugNodeStartChar": 4635,
        "bugNodeLength": 60,
        "fixLineNum": 122,
        "fixNodeStartChar": 4635,
        "fixNodeLength": 66,
        "sourceBeforeFix": "config.getBroadcasterFactory().lookup(a.broadcaster(),true)",
        "sourceAfterFix": "config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "885f7d1e71f16d5051ea7a71fb522ebf85821e97",
        "fixCommitParentSHA1": "964fe7d76dde886bb186161a111a5d36888d6861",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\nindex 1956312..64c1f67 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanHomeProcessor.java\n@@ -109,7 +109,7 @@\n                             }\n                         });\n                         //add the interceptor\n-                        configuration.addClientInterceptor(method, factory, InterceptorOrder.View.COMPONENT_DISPATCHER);\n+                        configuration.addViewInterceptor(method, factory, InterceptorOrder.View.COMPONENT_DISPATCHER);\n \n                     }\n                 }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 112,
        "bugNodeStartChar": 7151,
        "bugNodeLength": 95,
        "fixLineNum": 112,
        "fixNodeStartChar": 7151,
        "fixNodeLength": 93,
        "sourceBeforeFix": "configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)",
        "sourceAfterFix": "configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "53ec9af4fd879482a6b8e04cff029d5db9634870",
        "fixCommitParentSHA1": "49022384daa01c2e0de497703a99627b748fd985",
        "bugFilePath": "src/jvm/clojure/lang/LispReader.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/LispReader.java b/src/jvm/clojure/lang/LispReader.java\nindex dc8be57..d4d03f8 100644\n--- a/src/jvm/clojure/lang/LispReader.java\n+++ b/src/jvm/clojure/lang/LispReader.java\n@@ -684,7 +684,7 @@\n \t\telse\r\n \t\t\tret = RT.list(Compiler.QUOTE, form);\r\n \r\n-\t\tif(form instanceof IObj && ((IObj) form).meta() != null)\r\n+\t\tif(form instanceof IObj && !(form instanceof Var) && ((IObj) form).meta() != null)\r\n \t\t\t{\r\n \t\t\t//filter line numbers\r\n \t\t\tIPersistentMap newMeta = ((IObj) form).meta().without(RT.LINE_KEY);\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 687,
        "bugNodeStartChar": 19151,
        "bugNodeLength": 52,
        "fixLineNum": 687,
        "fixNodeStartChar": 18465,
        "fixNodeLength": 78,
        "sourceBeforeFix": "form instanceof IObj && ((IObj)form).meta() != null",
        "sourceAfterFix": "form instanceof IObj && !(form instanceof Var) && ((IObj)form).meta() != null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4665dcf9ab41c3c61cd42aad296ebfe518bfa003",
        "fixCommitParentSHA1": "52e3e25337f4fecbd4e5dbd9e8ef6f7506658c93",
        "bugFilePath": "backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java",
        "fixPatch": "diff --git a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\nindex 52bba05..c76f91a 100644\n--- a/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n+++ b/backends/gdx-backend-jglfw/src/com/badlogic/gdx/backends/jglfw/JglfwGL10.java\n@@ -52,7 +52,7 @@\n \t}\n \n \tpublic void glBindTexture (int target, int texture) {\n-\t\tGL.glBindTextureEXT(target, texture);\n+\t\tGL.glBindTexture(target, texture);\n \t}\n \n \tpublic void glBlendFunc (int sfactor, int dfactor) {\n@@ -91,11 +91,11 @@\n \t}\n \n \tpublic void glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) {\n-\t\tGL.glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);\n+\t\tGL.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n \t}\n \n \tpublic void glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {\n-\t\tGL.glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);\n+\t\tGL.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n \t}\n \n \tpublic void glCullFace (int mode) {\n@@ -103,7 +103,7 @@\n \t}\n \n \tpublic void glDeleteTextures (int n, IntBuffer textures) {\n-\t\tGL.glDeleteTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glDeleteTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic void glDepthFunc (int func) {\n@@ -123,7 +123,7 @@\n \t}\n \n \tpublic void glDrawArrays (int mode, int first, int count) {\n-\t\tGL.glDrawArraysEXT(mode, first, count);\n+\t\tGL.glDrawArrays(mode, first, count);\n \t}\n \n \tpublic void glDrawElements (int mode, int count, int type, Buffer indices) {\n@@ -147,7 +147,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, IntBuffer textures) {\n-\t\tGL.glGenTexturesEXT(n, textures, Memory.getPosition(textures));\n+\t\tGL.glGenTextures(n, textures, Memory.getPosition(textures));\n \t}\n \n \tpublic int glGetError () {\n@@ -175,7 +175,7 @@\n \t}\n \n \tpublic void glPolygonOffset (float factor, float units) {\n-\t\tGL.glPolygonOffsetEXT(factor, units);\n+\t\tGL.glPolygonOffset(factor, units);\n \t}\n \n \tpublic void glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) {\n@@ -209,7 +209,7 @@\n \n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\n \t\tBuffer pixels) {\n-\t\tGL.glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n+\t\tGL.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels, Memory.getPosition(pixels));\n \t}\n \n \tpublic void glViewport (int x, int y, int width, int height) {\n@@ -261,7 +261,7 @@\n \t}\n \n \tpublic void glGenTextures (int n, int[] textures, int offset) {\n-\t\tGL.glGenTexturesEXT(n, toBuffer(textures, offset), 0);\n+\t\tGL.glGenTextures(n, toBuffer(textures, offset), 0);\n \t}\n \n \tpublic void glGetIntegerv (int pname, int[] params, int offset) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 126,
        "bugNodeStartChar": 3755,
        "bugNodeLength": 38,
        "fixLineNum": 126,
        "fixNodeStartChar": 3755,
        "fixNodeLength": 35,
        "sourceBeforeFix": "GL.glDrawArraysEXT(mode,first,count)",
        "sourceAfterFix": "GL.glDrawArrays(mode,first,count)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "425403eeed99d409a1c49ad5243a3a0bd86ed66c",
        "fixCommitParentSHA1": "08a5696023a5db3eb8652cf99366b9ab68babd3b",
        "bugFilePath": "src/com/google/javascript/jscomp/PhaseOptimizer.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/PhaseOptimizer.java b/src/com/google/javascript/jscomp/PhaseOptimizer.java\nindex 19324a7..1b6dcc7 100644\n--- a/src/com/google/javascript/jscomp/PhaseOptimizer.java\n+++ b/src/com/google/javascript/jscomp/PhaseOptimizer.java\n@@ -91,7 +91,8 @@\n   // new pass scheduler was written. If we need to revisit this order in the\n   // future, we should write new code to do it.\n   @VisibleForTesting\n-  static final List<String> OPTIMAL_ORDER = ImmutableList.of(\n+  static final ImmutableList<String> OPTIMAL_ORDER =\n+      ImmutableList.of(\n      \"inlineFunctions\",\n      \"inlineVariables\",\n      \"deadAssignmentsElimination\",\n@@ -103,7 +104,8 @@\n      \"minimizeExitPoints\",\n      \"removeUnreachableCode\");\n \n-  static final List<String> CODE_MOTION_PASSES = ImmutableList.of(\n+  static final ImmutableList<String> CODE_MOTION_PASSES =\n+      ImmutableList.of(\n       Compiler.CROSS_MODULE_CODE_MOTION_NAME, Compiler.CROSS_MODULE_METHOD_MOTION_NAME);\n \n   static final int MAX_LOOPS = 100;\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 106,
        "bugNodeStartChar": 3965,
        "bugNodeLength": 12,
        "fixLineNum": 106,
        "fixNodeStartChar": 3965,
        "fixNodeLength": 21,
        "sourceBeforeFix": "List<String>",
        "sourceAfterFix": "ImmutableList<String>"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "cfa8eba2d2d6b3d15b2e81a1f4360bf87ebc6520",
        "fixCommitParentSHA1": "a70a6eac18491c8ba1759a5e1bc9b8ab92ec0aa7",
        "bugFilePath": "testsuite/shared/src/main/java/org/jboss/as/test/integration/management/rbac/RbacUtil.java",
        "fixPatch": "diff --git a/testsuite/shared/src/main/java/org/jboss/as/test/integration/management/rbac/RbacUtil.java b/testsuite/shared/src/main/java/org/jboss/as/test/integration/management/rbac/RbacUtil.java\nindex 38c81dd..e4ecdf8 100644\n--- a/testsuite/shared/src/main/java/org/jboss/as/test/integration/management/rbac/RbacUtil.java\n+++ b/testsuite/shared/src/main/java/org/jboss/as/test/integration/management/rbac/RbacUtil.java\n@@ -109,7 +109,7 @@\n                     fail(\"Didn't fail: \" + result.asString());\n                 }\n                 String failureDesc = result.get(FAILURE_DESCRIPTION).asString();\n-                if (!failureDesc.contains(\"14807\") && !failureDesc.contains(\"14883\")) {\n+                if (!failureDesc.contains(\"14807\") && !failureDesc.contains(\"14883\") && !failureDesc.contains(\"11340\")) {\n                     fail(\"Incorrect failure type: \" + result.asString());\n                 }\n                 break;\n@@ -120,7 +120,7 @@\n                 }\n                 String failureDesc = result.get(FAILURE_DESCRIPTION).asString();\n                 if (failureDesc.contains(\"14807\") || failureDesc.contains(\"14883\")\n-                        || failureDesc.contains(\"13456\")) {\n+                        || failureDesc.contains(\"13456\") || failureDesc.contains(\"11340\")) {\n                     fail(\"Incorrect failure type: \" + result.asString());\n                 }\n                 break;\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 112,
        "bugNodeStartChar": 5472,
        "bugNodeLength": 64,
        "fixLineNum": 112,
        "fixNodeStartChar": 5472,
        "fixNodeLength": 98,
        "sourceBeforeFix": "!failureDesc.contains(\"14807\") && !failureDesc.contains(\"14883\")",
        "sourceAfterFix": "!failureDesc.contains(\"14807\") && !failureDesc.contains(\"14883\") && !failureDesc.contains(\"11340\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
        "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
        "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 39,
        "bugNodeStartChar": 954,
        "bugNodeLength": 23,
        "fixLineNum": 39,
        "fixNodeStartChar": 954,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Color.fromRGB(0x287697)",
        "sourceAfterFix": "Color.fromRGB(0xD88198)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "b366b2fb1840d4df542a69a8021a2e5498f7eec2",
        "fixCommitParentSHA1": "6d8771908c8eb77f8478fb772fcad090a902884f",
        "bugFilePath": "guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java b/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java\nindex e0d0e3b..910cd61 100644\n--- a/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java\n+++ b/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java\n@@ -323,7 +323,7 @@\n     Thread t2 = newStartedThread(c2);\n     awaitTermination(t1);\n     awaitTermination(t2);\n-    assertEquals(c1.counts + c2.counts, SIZE * COUNTDOWN);\n+    assertEquals(SIZE * COUNTDOWN, c1.counts + c2.counts);\n   }\n \n   /**\n",
        "projectName": "google.guava",
        "bugLineNum": 326,
        "bugNodeStartChar": 8810,
        "bugNodeLength": 53,
        "fixLineNum": 326,
        "fixNodeStartChar": 8810,
        "fixNodeLength": 53,
        "sourceBeforeFix": "assertEquals(c1.counts + c2.counts,SIZE * COUNTDOWN)",
        "sourceAfterFix": "assertEquals(SIZE * COUNTDOWN,c1.counts + c2.counts)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7369734ba2477dc5f208c9bcdbf438d42e92ac25",
        "fixCommitParentSHA1": "01196f282535b641f0c3c19933c214286e0cac2f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 7dc5690..eb02c1b 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -14,7 +14,7 @@\n  * {@link Table} with a single cell but is more lightweight.\n  * @author Nathan Sweet */\n public class Container<T extends Actor> extends WidgetGroup {\n-\tprivate Actor actor;\n+\tprivate T actor;\n \tprivate Value minWidth = Value.minWidth, minHeight = Value.minHeight;\n \tprivate Value prefWidth = Value.prefWidth, prefHeight = Value.prefHeight;\n \tprivate Value maxWidth = Value.zero, maxHeight = Value.zero;\n@@ -31,7 +31,7 @@\n \t\tsetTransform(false);\n \t}\n \n-\tpublic Container (Actor actor) {\n+\tpublic Container (T actor) {\n \t\tthis();\n \t\tsetActor(actor);\n \t}\n@@ -151,7 +151,7 @@\n \t}\n \n \t/** @param actor May be null. */\n-\tpublic void setActor (Actor actor) {\n+\tpublic void setActor (T actor) {\n \t\tif (actor == this) throw new IllegalArgumentException(\"actor cannot be the Container.\");\n \t\tif (this.actor != null) super.removeActor(this.actor);\n \t\tthis.actor = actor;\n@@ -160,7 +160,7 @@\n \n \t/** @return May be null. */\n \tpublic T getActor () {\n-\t\treturn (T)actor;\n+\t\treturn actor;\n \t}\n \n \t/** @deprecated Container may have only a single child.\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 154,
        "bugNodeStartChar": 5353,
        "bugNodeLength": 11,
        "fixLineNum": 154,
        "fixNodeStartChar": 5353,
        "fixNodeLength": 7,
        "sourceBeforeFix": "Actor actor",
        "sourceAfterFix": "T actor"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0256c6ceff897814a8d532fc43d6006c8b9bd7b6",
        "fixCommitParentSHA1": "bc41c54cb9918f672e356777a19e46a73e714c8b",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/Vector3.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/Vector3.java b/gdx/src/com/badlogic/gdx/math/Vector3.java\nindex dee8938..beb8d36 100644\n--- a/gdx/src/com/badlogic/gdx/math/Vector3.java\n+++ b/gdx/src/com/badlogic/gdx/math/Vector3.java\n@@ -461,7 +461,7 @@\n \t\tfinal float b = y - this.y;\r\n \t\tfinal float c = z - this.z;\r\n \r\n-\t\treturn a * a + b * b + c * b;\r\n+\t\treturn a * a + b * b + c * c;\r\n \t}\r\n \r\n \t/** @return the distance between this point and the given point */\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 464,
        "bugNodeStartChar": 15956,
        "bugNodeLength": 5,
        "fixLineNum": 464,
        "fixNodeStartChar": 15493,
        "fixNodeLength": 5,
        "sourceBeforeFix": "c * b",
        "sourceAfterFix": "c * c"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "463750c397e836dbcea5cee0d960c4551f6cebaf",
        "fixCommitParentSHA1": "ca8be46e7bd85b9e2d6747c69dd3e3bef36c0e93",
        "bugFilePath": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java",
        "fixPatch": "diff --git a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\nindex 235eea3..91889a0 100644\n--- a/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n+++ b/core/client/fs/src/main/java/alluxio/client/block/stream/BlockInStream.java\n@@ -89,7 +89,7 @@\n         && !NettyUtils.isDomainSocketSupported(address)\n         && blockSource == BlockInStreamSource.LOCAL) {\n       try {\n-        LOG.info(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n+        LOG.debug(\"Creating short circuit input stream for block {} @ {}\", blockId, address);\n         return createLocalBlockInStream(context, address, blockId, blockSize, options);\n       } catch (NotFoundException e) {\n         // Failed to do short circuit read because the block is not available in Alluxio.\n@@ -103,7 +103,7 @@\n       builder.setOpenUfsBlockOptions(openUfsBlockOptions);\n     }\n \n-    LOG.info(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n+    LOG.debug(\"Creating netty input stream for block {} @ {} from client {}\", blockId, address,\n         NetworkAddressUtils.getClientHostName());\n     return createNettyBlockInStream(context, address, blockSource, builder.buildPartial(),\n         blockSize, options);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 92,
        "bugNodeStartChar": 3453,
        "bugNodeLength": 83,
        "fixLineNum": 92,
        "fixNodeStartChar": 3453,
        "fixNodeLength": 84,
        "sourceBeforeFix": "LOG.info(\"Creating short circuit input stream for block {} @ {}\",blockId,address)",
        "sourceAfterFix": "LOG.debug(\"Creating short circuit input stream for block {} @ {}\",blockId,address)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b28171ed750594402a3d1a93bca38beea9ba835a",
        "fixCommitParentSHA1": "36900cac998f0e2d5e1276eaa04cfa65dc18eaad",
        "bugFilePath": "app/lib/ApiClientImpl.java",
        "fixPatch": "diff --git a/app/lib/ApiClientImpl.java b/app/lib/ApiClientImpl.java\nindex 521787c..2d3e2e7 100644\n--- a/app/lib/ApiClientImpl.java\n+++ b/app/lib/ApiClientImpl.java\n@@ -319,7 +319,7 @@\n             if (radio == null) {\n                 if (node == null) {\n                     if (nodes != null) {\n-                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\");\n+                        log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\", new Throwable());\n                     }\n                     node(serverNodes.any());\n                 }\n@@ -334,7 +334,7 @@\n                 if (user != null) {\n                     session(user.getSessionId());\n                 } else {\n-                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\");\n+                    log.warn(\"You did not add unauthenticated() nor session() but also don't have a current user. You probably meant unauthenticated(). This is a bug!\", new Throwable());\n                 }\n             }\n             final URL url = prepareUrl(target);\n@@ -544,7 +544,7 @@\n                 }\n \n                 if (unauthenticated && sessionId != null) {\n-                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\");\n+                    log.error(\"Both session() and unauthenticated() are set for this request, this is a bug, using session id.\", new Throwable());\n                 }\n                 if (sessionId != null) {\n                     // pass the current session id via basic auth and special \"password\"\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 322,
        "bugNodeStartChar": 10296,
        "bugNodeLength": 126,
        "fixLineNum": 322,
        "fixNodeStartChar": 10296,
        "fixNodeLength": 143,
        "sourceBeforeFix": "log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\")",
        "sourceAfterFix": "log.error(\"Multiple nodes are set, but execute() was called. This is most likely a bug and you meant to call executeOnAll()!\",new Throwable())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "79946366e1ab141ef2b595e0079dcac7b913da2b",
        "fixCommitParentSHA1": "840e7143a58542da18227e443df935e1ea429fc9",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\nindex a729bab..80827df 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java\n@@ -76,7 +76,8 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n     }\n \n     @Test\n@@ -87,7 +88,9 @@\n             \"1: \" + getCheckMessage(MSG_KEY_MISMATCH),\n         };\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -99,7 +102,8 @@\n         };\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -108,7 +112,8 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectory.java\"), expected);\n+        verify(checkConfig, getNonCompilablePath(\"InputPackageDeclarationDiffDirectory.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -117,7 +122,9 @@\n         checkConfig.addAttribute(\"matchDirectoryStructure\", \"false\");\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n-        verify(checkConfig, getPath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"), expected);\n+        verify(checkConfig,\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtParent.java\"),\n+                expected);\n     }\n \n     @Test\n@@ -127,7 +134,8 @@\n         final String[] expected = CommonUtil.EMPTY_STRING_ARRAY;\n \n         verify(checkConfig,\n-                getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"), expected);\n+                getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\"),\n+                expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 130,
        "bugNodeStartChar": 5277,
        "bugNodeLength": 64,
        "fixLineNum": 130,
        "fixNodeStartChar": 5277,
        "fixNodeLength": 77,
        "sourceBeforeFix": "getPath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")",
        "sourceAfterFix": "getNonCompilablePath(\"InputPackageDeclarationDiffDirectoryAtSubpackage.java\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java\nindex b550a76..d04c75b 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java\n@@ -172,7 +172,7 @@\n      * @throws NullPointerException if the lines array is null\n      */\n     public FileText(File file, List<String> lines) {\n-        final StringBuilder buf = new StringBuilder();\n+        final StringBuilder buf = new StringBuilder(1024);\n         for (final String line : lines) {\n             buf.append(line).append('\\n');\n         }\n@@ -195,7 +195,7 @@\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n-        final StringBuilder buf = new StringBuilder();\n+        final StringBuilder buf = new StringBuilder(1024);\n         final FileInputStream stream = new FileInputStream(inputFile);\n         final Reader reader = new InputStreamReader(stream, decoder);\n         try {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 198,
        "bugNodeStartChar": 6763,
        "bugNodeLength": 19,
        "fixLineNum": 198,
        "fixNodeStartChar": 6763,
        "fixNodeLength": 23,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(1024)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ec5961a27122b228cb8adb634ee183eebcefa98c",
        "fixCommitParentSHA1": "5fd1cf27b028500451c9b53ce62e24fd7358f7e3",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java\nindex e350fe7..f86941b 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java\n@@ -324,7 +324,7 @@\n     mapredWork work = new mapredWork();\n     work.setPathToAliases(new LinkedHashMap<String, ArrayList<String>>());\n     work.setPathToPartitionInfo(new LinkedHashMap<String, partitionDesc>());\n-    work.setAliasToWork(new HashMap<String, Operator<? extends Serializable>>());\n+    work.setAliasToWork(new LinkedHashMap<String, Operator<? extends Serializable>>());\n     work.setTagToValueDesc(new ArrayList<tableDesc>());\n     work.setReducer(null);\n     return work;\n",
        "projectName": "apache.hive",
        "bugLineNum": 327,
        "bugNodeStartChar": 12895,
        "bugNodeLength": 49,
        "fixLineNum": 327,
        "fixNodeStartChar": 12895,
        "fixNodeLength": 55,
        "sourceBeforeFix": "HashMap<String,Operator<? extends Serializable>>",
        "sourceAfterFix": "LinkedHashMap<String,Operator<? extends Serializable>>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0cb756acf8ee44c28bee8b9ea626e2a65cee5880",
        "fixCommitParentSHA1": "60e108886fcb173ca21f3966965a0b57cf5b5797",
        "bugFilePath": "android/guava-tests/test/com/google/common/hash/HashTestUtils.java",
        "fixPatch": "diff --git a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\nindex f2b8971..8dfbdb0 100644\n--- a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n+++ b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n@@ -509,9 +509,9 @@\n     rng.nextBytes(bytes);\n     ByteBuffer littleEndian = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n-    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));\n+    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(bigEndian));\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHasherByteBufferPreservesByteOrder(HashFunction hashFunction) {\n@@ -522,9 +522,9 @@\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n     assertEquals(\n         hashFunction.newHasher().putBytes(littleEndian).hash(),\n-        hashFunction.newHasher().putBytes(littleEndian).hash());\n+        hashFunction.newHasher().putBytes(bigEndian).hash());\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHashBytesThrowsCorrectExceptions(HashFunction hashFunction) {\n",
        "projectName": "google.guava",
        "bugLineNum": 514,
        "bugNodeStartChar": 18286,
        "bugNodeLength": 20,
        "fixLineNum": 514,
        "fixNodeStartChar": 18286,
        "fixNodeLength": 17,
        "sourceBeforeFix": "littleEndian.order()",
        "sourceAfterFix": "bigEndian.order()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "de994d857881dbfd727485b898152ed5422eb684",
        "fixCommitParentSHA1": "59900f36f2adf5f07e6c7cc351c778c6ae3630e0",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\nindex e0068c4..16098a1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java\n@@ -314,7 +314,7 @@\n \r\n \t/** Disables scrolling of the list shown when the select box is open. */\r\n \tpublic void setScrollingDisabled (boolean y) {\r\n-\t\tselectBoxList.setScrollingDisabled(false, y);\r\n+\t\tselectBoxList.setScrollingDisabled(true, y);\r\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 317,
        "bugNodeStartChar": 11186,
        "bugNodeLength": 44,
        "fixLineNum": 317,
        "fixNodeStartChar": 10870,
        "fixNodeLength": 43,
        "sourceBeforeFix": "selectBoxList.setScrollingDisabled(false,y)",
        "sourceAfterFix": "selectBoxList.setScrollingDisabled(true,y)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c131546eaadd07baf950bd6a44d07ee42d109e4c",
        "fixCommitParentSHA1": "c27e2a77005db355da9e72656af8b0df8b1dfe75",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java b/flink-runtime/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java\nindex 1b45006..2a65cac 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java\n@@ -185,7 +185,7 @@\n \t\tfinal DummyRpcEndpoint rpcEndpoint = new DummyRpcEndpoint(akkaRpcService);\n \t\trpcEndpoint.start();\n \n-\t\tCompletableFuture<Boolean> terminationFuture = rpcEndpoint.getTerminationFuture();\n+\t\tCompletableFuture<Void> terminationFuture = rpcEndpoint.getTerminationFuture();\n \n \t\tassertFalse(terminationFuture.isDone());\n \n@@ -246,7 +246,7 @@\n \n \t\trpcEndpoint.shutDown();\n \n-\t\tCompletableFuture<Boolean> terminationFuture = rpcEndpoint.getTerminationFuture();\n+\t\tCompletableFuture<Void> terminationFuture = rpcEndpoint.getTerminationFuture();\n \n \t\ttry {\n \t\t\tterminationFuture.get();\n@@ -265,7 +265,7 @@\n \n \t\tsimpleRpcEndpoint.shutDown();\n \n-\t\tCompletableFuture<Boolean> terminationFuture = simpleRpcEndpoint.getTerminationFuture();\n+\t\tCompletableFuture<Void> terminationFuture = simpleRpcEndpoint.getTerminationFuture();\n \n \t\t// check that we executed the postStop method in the main thread, otherwise an exception\n \t\t// would be thrown here.\n@@ -285,7 +285,7 @@\n \n \t\t\trpcEndpoint.start();\n \n-\t\t\tCompletableFuture<Boolean> terminationFuture = rpcEndpoint.getTerminationFuture();\n+\t\t\tCompletableFuture<Void> terminationFuture = rpcEndpoint.getTerminationFuture();\n \n \t\t\trpcService.stopService();\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 288,
        "bugNodeStartChar": 9911,
        "bugNodeLength": 26,
        "fixLineNum": 288,
        "fixNodeStartChar": 9911,
        "fixNodeLength": 23,
        "sourceBeforeFix": "CompletableFuture<Boolean>",
        "sourceAfterFix": "CompletableFuture<Void>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e01faced430c1b097957598a4c96359141d8c720",
        "fixCommitParentSHA1": "191768f0142b8bb707e3ebe27407563f5029c3a0",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java b/camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java\nindex 5fe4642..74e3f0e 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java\n@@ -165,7 +165,7 @@\n                 Class<?> clazz = null;\n                 for (ClassLoader loader : resolver.getClassLoaders()) {\n                     try {\n-                        clazz = loader.loadClass(name);\n+                        clazz = ObjectHelper.loadClass(name, loader);\n                         LOG.trace(\"Loaded {} as class {}\", name, clazz);\n                         classes.add(clazz);\n                         // class founder, so no need to load it with another class loader\n",
        "projectName": "apache.camel",
        "bugLineNum": 168,
        "bugNodeStartChar": 8034,
        "bugNodeLength": 22,
        "fixLineNum": 168,
        "fixNodeStartChar": 8034,
        "fixNodeLength": 36,
        "sourceBeforeFix": "loader.loadClass(name)",
        "sourceAfterFix": "ObjectHelper.loadClass(name,loader)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "7d6e8e06aac1ca273f180c38456922e77443811b",
        "fixCommitParentSHA1": "f8a20a52fe8617cc5ed774b44766b781c1cda363",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_BlockingTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_BlockingTest.java b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_BlockingTest.java\nindex 0d89c7d..684de7b 100644\n--- a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_BlockingTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationservice/impl/Invocation_BlockingTest.java\n@@ -334,7 +334,7 @@\n      */\n     @Test\n     public void async_whenMultipleAndThenOnSameFuture() throws Exception {\n-        int callTimeout = 1000;\n+        int callTimeout = 5000;\n         Config config = new Config().setProperty(OPERATION_CALL_TIMEOUT_MILLIS.getName(), \"\" + callTimeout);\n \n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 337,
        "bugNodeStartChar": 15330,
        "bugNodeLength": 18,
        "fixLineNum": 337,
        "fixNodeStartChar": 15330,
        "fixNodeLength": 18,
        "sourceBeforeFix": "callTimeout=1000",
        "sourceAfterFix": "callTimeout=5000"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1ccc740dcb588e324c33571df8d7475c09bf962a",
        "fixCommitParentSHA1": "33f6d067225967c8335c0d61920c19a00dd62786",
        "bugFilePath": "flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java",
        "fixPatch": "diff --git a/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java b/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java\nindex 6ffd5d2..2391d54 100644\n--- a/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java\n+++ b/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/NFAITCase.java\n@@ -378,9 +378,9 @@\n \t\ttimeoutPattern4.put(\"start\", Collections.singletonList(new Event(2, \"start\", 1.0)));\n \n \t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern1, 11L));\n-\t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern2, 13L));\n+\t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern2, 12L));\n \t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern3, 11L));\n-\t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern4, 13L));\n+\t\texpectedTimeoutPatterns.add(Tuple2.of(timeoutPattern4, 12L));\n \n \t\tPattern<Event, ?> pattern = Pattern.<Event>begin(\"start\").where(new SimpleCondition<Event>() {\n \t\t\tprivate static final long serialVersionUID = 7907391379273505897L;\n",
        "projectName": "apache.flink",
        "bugLineNum": 381,
        "bugNodeStartChar": 13503,
        "bugNodeLength": 31,
        "fixLineNum": 381,
        "fixNodeStartChar": 13503,
        "fixNodeLength": 31,
        "sourceBeforeFix": "Tuple2.of(timeoutPattern2,13L)",
        "sourceAfterFix": "Tuple2.of(timeoutPattern2,12L)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d298a84f8d65d9b4edf47c7b742921ec134648d1",
        "fixCommitParentSHA1": "aee808a686afac2b9bafd0f7dca8fcca094072c9",
        "bugFilePath": "components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java",
        "fixPatch": "diff --git a/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java b/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\nindex 1123c29..0f2984a 100644\n--- a/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\n+++ b/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowEndpoint.java\n@@ -72,11 +72,11 @@\n     private Boolean throwExceptionOnFailure;\n     @UriParam\n     private Boolean transferException;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean keepAlive = Boolean.TRUE;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean tcpNoDelay = Boolean.TRUE;\n-    @UriPath(label = \"producer\", defaultValue = \"true\")\n+    @UriParam(label = \"producer\", defaultValue = \"true\")\n     private Boolean reuseAddresses = Boolean.TRUE;\n     @UriParam(label = \"producer\", prefix = \"option.\", multiValue = true)\n     private Map<String, Object> options;\n",
        "projectName": "apache.camel",
        "bugLineNum": 75,
        "bugNodeStartChar": 3008,
        "bugNodeLength": 51,
        "fixLineNum": 75,
        "fixNodeStartChar": 3008,
        "fixNodeLength": 52,
        "sourceBeforeFix": "@UriPath(label=\"producer\",defaultValue=\"true\")",
        "sourceAfterFix": "@UriParam(label=\"producer\",defaultValue=\"true\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
        "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 86,
        "bugNodeStartChar": 5050,
        "bugNodeLength": 33,
        "fixLineNum": 86,
        "fixNodeStartChar": 5050,
        "fixNodeLength": 39,
        "sourceBeforeFix": "deletionRetentionStrategy == null",
        "sourceAfterFix": "deletionRetentionStrategyConfig == null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a0f2bac065232855e4f8bb1221a60b0cbf7fd2a9",
        "fixCommitParentSHA1": "03a15583ca8b257f4159b27ace4d80cc71f0b174",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\nindex 38b8be4..d090042 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java\n@@ -472,13 +472,13 @@\n     @Test\n     public void test_1168408_1() throws Exception {\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_01.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_01.java\"), expected);\n     }\n \n     @Test\n     public void test_1168408_2() throws Exception {\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_02.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_02.java\"), expected);\n     }\n \n     @Test\n@@ -486,7 +486,7 @@\n         checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");\n         checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");\n         final String[] expected = {};\n-        verify(checkConfig, getSrcPath(\"checks/javadoc/Input_03.java\"), expected);\n+        verify(checkConfig, getPath(\"checks/javadoc/Input_03.java\"), expected);\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 489,
        "bugNodeStartChar": 25358,
        "bugNodeLength": 42,
        "fixLineNum": 489,
        "fixNodeStartChar": 25358,
        "fixNodeLength": 39,
        "sourceBeforeFix": "getSrcPath(\"checks/javadoc/Input_03.java\")",
        "sourceAfterFix": "getPath(\"checks/javadoc/Input_03.java\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5755cf96d1689e1eda7dd2d7e03f1eff3bf5a074",
        "fixCommitParentSHA1": "ddda7e5bae297e7f3c356a35d29134015262bb49",
        "bugFilePath": "src/main/java/spark/ExceptionHandlerImpl.java",
        "fixPatch": "diff --git a/src/main/java/spark/ExceptionHandlerImpl.java b/src/main/java/spark/ExceptionHandlerImpl.java\nindex 30e1136..d50c68d 100644\n--- a/src/main/java/spark/ExceptionHandlerImpl.java\n+++ b/src/main/java/spark/ExceptionHandlerImpl.java\n@@ -16,18 +16,19 @@\n  */\n package spark;\n \n-public abstract class ExceptionHandlerImpl implements ExceptionHandler {\n+public abstract class ExceptionHandlerImpl<T extends Exception> implements ExceptionHandler<T> {\n+\n     /**\n      * Holds the type of exception that this filter will handle\n      */\n-    protected Class<? extends Exception> exceptionClass;\n+    protected Class<? extends T> exceptionClass;\n \n     /**\n      * Initializes the filter with the provided exception type\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public ExceptionHandlerImpl(Class<? extends Exception> exceptionClass) {\n+    public ExceptionHandlerImpl(Class<T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -36,7 +37,7 @@\n      *\n      * @return Type of exception\n      */\n-    public Class<? extends Exception> exceptionClass() {\n+    public Class<? extends T> exceptionClass() {\n         return this.exceptionClass;\n     }\n \n@@ -45,7 +46,7 @@\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public void exceptionClass(Class<? extends Exception> exceptionClass) {\n+    public void exceptionClass(Class<? extends T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -56,5 +57,5 @@\n      * @param request   The request object providing information about the HTTP request\n      * @param response  The response object providing functionality for modifying the response\n      */\n-    public abstract void handle(Exception exception, Request request, Response response);\n+    public abstract void handle(T exception, Request request, Response response);\n }\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 23,
        "bugNodeStartChar": 791,
        "bugNodeLength": 19,
        "fixLineNum": 23,
        "fixNodeStartChar": 791,
        "fixNodeLength": 11,
        "sourceBeforeFix": "? extends Exception",
        "sourceAfterFix": "? extends T"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 24,
        "bugNodeStartChar": 603,
        "bugNodeLength": 40,
        "fixLineNum": 24,
        "fixNodeStartChar": 603,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7012976421d9e593d8b276697b2fbbc9328b6fa5",
        "fixCommitParentSHA1": "c25f3ed04a7dcad130303a10f6d235e7ee7b36fd",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\nindex 40146f3..8dd0fce 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java\n@@ -286,7 +286,7 @@\n \n \t/** Sets the minWidth and minHeight to the specified values. */\n \tpublic Container<T> minSize (float width, float height) {\n-\t\tminSize(new Fixed(width));\n+\t\tminSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -326,7 +326,7 @@\n \n \t/** Sets the prefWidth and prefHeight to the specified value. */\n \tpublic Container<T> prefSize (float width, float height) {\n-\t\tprefSize(new Fixed(width));\n+\t\tprefSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n@@ -378,7 +378,7 @@\n \n \t/** Sets the maxWidth and maxHeight to the specified values. */\n \tpublic Container<T> maxSize (float width, float height) {\n-\t\tmaxSize(new Fixed(width));\n+\t\tmaxSize(new Fixed(width), new Fixed(height));\n \t\treturn this;\n \t}\n \n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 289,
        "bugNodeStartChar": 9188,
        "bugNodeLength": 25,
        "fixLineNum": 289,
        "fixNodeStartChar": 9188,
        "fixNodeLength": 44,
        "sourceBeforeFix": "minSize(new Fixed(width))",
        "sourceAfterFix": "minSize(new Fixed(width),new Fixed(height))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "daba0256b7cf360824aebb3ff176d5937c862e46",
        "fixCommitParentSHA1": "0e0ede5a02b931e68c7d8c538ef815c47561e92e",
        "bugFilePath": "api/src/test/java/org/openmrs/api/AdministrationServiceTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java b/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\nindex 51f946b..5201f1d 100644\n--- a/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\n@@ -474,7 +474,7 @@\n \t@Verifies(value = \"should return all global properties in the database\", method = \"getAllGlobalProperties()\")\n \tpublic void getAllGlobalProperties_shouldReturnAllGlobalPropertiesInTheDatabase() throws Exception {\n \t\texecuteDataSet(ADMIN_INITIAL_DATA_XML);\n-\t\tAssert.assertEquals(20, Context.getAdministrationService().getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(21, Context.getAdministrationService().getAllGlobalProperties().size());\n \t}\n \t\n \t/**\n@@ -546,9 +546,9 @@\n \t\texecuteDataSet(ADMIN_INITIAL_DATA_XML);\n \t\tAdministrationService as = Context.getAdministrationService();\n \t\t\n-\t\tAssert.assertEquals(20, as.getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(21, as.getAllGlobalProperties().size());\n \t\tas.purgeGlobalProperty(as.getGlobalPropertyObject(\"a_valid_gp_key\"));\n-\t\tAssert.assertEquals(19, as.getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(20, as.getAllGlobalProperties().size());\n \t}\n \t\n \t/**\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 477,
        "bugNodeStartChar": 20959,
        "bugNodeLength": 91,
        "fixLineNum": 477,
        "fixNodeStartChar": 20959,
        "fixNodeLength": 91,
        "sourceBeforeFix": "Assert.assertEquals(20,Context.getAdministrationService().getAllGlobalProperties().size())",
        "sourceAfterFix": "Assert.assertEquals(21,Context.getAdministrationService().getAllGlobalProperties().size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "886096e8fc457546dd4071295b7c5cce2d722ecc",
        "fixCommitParentSHA1": "ba0fdffa3175f00fc241825c796364ea6e46c3ad",
        "bugFilePath": "batch/scheduling/src/test/java/org/javaee7/batch/samples/scheduling/ManagedScheduledBatchTest.java",
        "fixPatch": "diff --git a/batch/scheduling/src/test/java/org/javaee7/batch/samples/scheduling/ManagedScheduledBatchTest.java b/batch/scheduling/src/test/java/org/javaee7/batch/samples/scheduling/ManagedScheduledBatchTest.java\nindex 275b057..5dc046b 100644\n--- a/batch/scheduling/src/test/java/org/javaee7/batch/samples/scheduling/ManagedScheduledBatchTest.java\n+++ b/batch/scheduling/src/test/java/org/javaee7/batch/samples/scheduling/ManagedScheduledBatchTest.java\n@@ -61,7 +61,7 @@\n                 MyManagedScheduledBatchBean.class,\n                 MyManagedScheduledBatchAlternative.class)\n             .addAsWebInfResource(\n-                new StringAsset(beansXml.createAlternatives().clazz(\n+                new StringAsset(beansXml.getOrCreateAlternatives().clazz(\n                     MyManagedScheduledBatchAlternative.class.getName()).up().exportAsString()),\n                 beansXml.getDescriptorName())\n             .addAsResource(\"META-INF/batch-jobs/myJob.xml\");\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 64,
        "bugNodeStartChar": 2380,
        "bugNodeLength": 29,
        "fixLineNum": 64,
        "fixNodeStartChar": 2380,
        "fixNodeLength": 34,
        "sourceBeforeFix": "beansXml.createAlternatives()",
        "sourceAfterFix": "beansXml.getOrCreateAlternatives()"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "c2023397cf81452d755a5401fe95b1d47dbde48a",
        "fixCommitParentSHA1": "5d9939034fe7bce54ba6d40f5e8e6d5d98b0fe39",
        "bugFilePath": "scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java",
        "fixPatch": "diff --git a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\nindex 4f3e7e4..67df4b0 100644\n--- a/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n+++ b/scribejava-httpclient-okhttp/src/main/java/com/github/scribejava/httpclient/okhttp/OkHttpHttpClient.java\n@@ -165,19 +165,19 @@\n         BYTE_ARRAY {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (byte[]) bodyContents);\n+                return RequestBody.create((byte[]) bodyContents, mediaType);\n             }\n         },\n         STRING {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (String) bodyContents);\n+                return RequestBody.create((String) bodyContents, mediaType);\n             }\n         },\n         FILE {\n             @Override\n             RequestBody createBody(MediaType mediaType, Object bodyContents) {\n-                return RequestBody.create(mediaType, (File) bodyContents);\n+                return RequestBody.create((File) bodyContents, mediaType);\n             }\n         };\n \n",
        "projectName": "scribejava.scribejava",
        "bugLineNum": 180,
        "bugNodeStartChar": 7483,
        "bugNodeLength": 50,
        "fixLineNum": 180,
        "fixNodeStartChar": 7483,
        "fixNodeLength": 50,
        "sourceBeforeFix": "RequestBody.create(mediaType,(File)bodyContents)",
        "sourceAfterFix": "RequestBody.create((File)bodyContents,mediaType)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "c3d4ff240dc74621d12e89e24133b5cd928635ca",
        "fixCommitParentSHA1": "664965e95ea96e695b677d8c633ac47a05aebb8e",
        "bugFilePath": "bundles/binding/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/EcobeeBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/EcobeeBinding.java b/bundles/binding/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/EcobeeBinding.java\nindex d487457..78d1377 100644\n--- a/bundles/binding/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/EcobeeBinding.java\n+++ b/bundles/binding/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/EcobeeBinding.java\n@@ -339,7 +339,8 @@\n \t\t// Iterate through bindings and update all inbound values.\n \t\tfor (final EcobeeBindingProvider provider : this.providers) {\n \t\t\tfor (final String itemName : provider.getItemNames()) {\n-\t\t\t\tif (provider.isInBound(itemName) && credentialsMatch(provider, itemName, oauthCredentials)) {\n+\t\t\t\tif (provider.isInBound(itemName) && credentialsMatch(provider, itemName, oauthCredentials)\n+\t\t\t\t\t\t&& thermostats.containsKey(provider.getThermostatIdentifier(itemName))) {\n \t\t\t\t\tfinal State newState = getState(provider, thermostats, itemName);\n \n \t\t\t\t\tlogger.debug(\"readEcobee: Updating itemName '{}' with newState '{}'\", itemName, newState);\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 342,
        "bugNodeStartChar": 11241,
        "bugNodeLength": 86,
        "fixLineNum": 342,
        "fixNodeStartChar": 11241,
        "fixNodeLength": 163,
        "sourceBeforeFix": "provider.isInBound(itemName) && credentialsMatch(provider,itemName,oauthCredentials)",
        "sourceAfterFix": "provider.isInBound(itemName) && credentialsMatch(provider,itemName,oauthCredentials) && thermostats.containsKey(provider.getThermostatIdentifier(itemName))"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "35d27031902e30f4c9ed1f0a76800ef157449925",
        "fixCommitParentSHA1": "f0ee245e2a2c879785374d7b9649e7617b24b295",
        "bugFilePath": "messaging/src/main/java/org/jboss/as/messaging/ConnectorRefsAttribute.java",
        "fixPatch": "diff --git a/messaging/src/main/java/org/jboss/as/messaging/ConnectorRefsAttribute.java b/messaging/src/main/java/org/jboss/as/messaging/ConnectorRefsAttribute.java\nindex 19c6300..23a0ef9 100644\n--- a/messaging/src/main/java/org/jboss/as/messaging/ConnectorRefsAttribute.java\n+++ b/messaging/src/main/java/org/jboss/as/messaging/ConnectorRefsAttribute.java\n@@ -41,7 +41,7 @@\n \n     public static final ConnectorRefsAttribute CLUSTER_CONNECTION_CONNECTORS = new ConnectorRefsAttribute(CommonAttributes.STATIC_CONNECTORS, false, true);\n \n-    public static final ConnectorRefsAttribute BRIDGE_CONNECTORS = new ConnectorRefsAttribute(CommonAttributes.STATIC_CONNECTORS, true, false);\n+    public static final ConnectorRefsAttribute BRIDGE_CONNECTORS = new ConnectorRefsAttribute(CommonAttributes.STATIC_CONNECTORS, true, true);\n \n     public static final ConnectorRefsAttribute BROADCAST_GROUP = new ConnectorRefsAttribute(CommonAttributes.CONNECTORS, false, true);\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 44,
        "bugNodeStartChar": 1884,
        "bugNodeLength": 75,
        "fixLineNum": 44,
        "fixNodeStartChar": 1884,
        "fixNodeLength": 74,
        "sourceBeforeFix": "new ConnectorRefsAttribute(CommonAttributes.STATIC_CONNECTORS,true,false)",
        "sourceAfterFix": "new ConnectorRefsAttribute(CommonAttributes.STATIC_CONNECTORS,true,true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1dc7ebfc26b5ef1f88e84702582715eb631202db",
        "fixCommitParentSHA1": "d9e13ceacf00bcfa4df8cb6a0b56fc344f6a9f96",
        "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java",
        "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\nindex b838bab..600a4ac 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/IndexService.java\n@@ -103,7 +103,7 @@\n \n     // Not part an Index model instance method because opening/closing can be applied to indices without calculated ranges.\n     public void delete(String index) throws APIException, IOException {\n-        api.path(routes.IndicesResource().single(index))\n+        api.path(routes.IndicesResource().delete(index))\n                 .timeout(apiTimeout(\"index_delete\", 60, TimeUnit.SECONDS))\n                 .expect(204)\n                 .execute();\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 106,
        "bugNodeStartChar": 4041,
        "bugNodeLength": 38,
        "fixLineNum": 106,
        "fixNodeStartChar": 4041,
        "fixNodeLength": 38,
        "sourceBeforeFix": "routes.IndicesResource().single(index)",
        "sourceAfterFix": "routes.IndicesResource().delete(index)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "a5383d4f1932c9d50861d57676bbfe5767a9eb1e",
        "fixCommitParentSHA1": "3ebf96a23fa4527ee7d1383849c557a7f9905ef4",
        "bugFilePath": "openhab-runtime/core/core/src/main/java/org/openhab/core/events/AbstractEventSubscriber.java",
        "fixPatch": "diff --git a/openhab-runtime/core/core/src/main/java/org/openhab/core/events/AbstractEventSubscriber.java b/openhab-runtime/core/core/src/main/java/org/openhab/core/events/AbstractEventSubscriber.java\nindex 1163ad7..d39f500 100644\n--- a/openhab-runtime/core/core/src/main/java/org/openhab/core/events/AbstractEventSubscriber.java\n+++ b/openhab-runtime/core/core/src/main/java/org/openhab/core/events/AbstractEventSubscriber.java\n@@ -37,16 +37,16 @@\n \t\tString topic = event.getTopic();\n \t\tString[] topicParts = topic.split(TOPIC_SEPERATOR);\n \t\t\n-\t\tif(!(topicParts.length > 2) && !topicParts[0].equals(TOPIC_PREFIX)) {\n+\t\tif(!(topicParts.length > 2) || !topicParts[0].equals(TOPIC_PREFIX)) {\n \t\t\treturn; // we have received an event with an invalid topic\n \t\t}\n \t\tString operation = topicParts[1];\n \t\t\n-\t\tif(operation.equals(EventType.UPDATE)) {\n+\t\tif(operation.equals(EventType.UPDATE.toString())) {\n \t\t\tState newState = (State) event.getProperty(\"state\");\n \t\t\tif(newState!=null) receiveUpdate(itemName, newState);\n \t\t}\n-\t\tif(operation.equals(EventType.COMMAND)) {\n+\t\tif(operation.equals(EventType.COMMAND.toString())) {\n \t\t\tCommand command = (Command) event.getProperty(\"command\");\n \t\t\tif(command!=null) receiveCommand(itemName, command);\n \t\t}\n@@ -56,7 +56,7 @@\n \t\t// default implementation: do nothing\n \t}\n \n-\tpublic void receiveUpdate(String itemName, State newStatus) {\n+\tpublic void receiveUpdate(String itemName, State newState) {\n \t\t// default implementation: do nothing\n \t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 40,
        "bugNodeStartChar": 1475,
        "bugNodeLength": 63,
        "fixLineNum": 40,
        "fixNodeStartChar": 1475,
        "fixNodeLength": 63,
        "sourceBeforeFix": "!(topicParts.length > 2) && !topicParts[0].equals(TOPIC_PREFIX)",
        "sourceAfterFix": "!(topicParts.length > 2) || !topicParts[0].equals(TOPIC_PREFIX)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f9e409e3c509ceb2a9b376125b3478447fb31909",
        "fixCommitParentSHA1": "b712e00f2e8a0ef592fe732bc10d0cb19c10750e",
        "bugFilePath": "components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java",
        "fixPatch": "diff --git a/components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java b/components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java\nindex da67a8f..07c9922 100644\n--- a/components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java\n+++ b/components/camel-rmi/src/test/java/org/apache/camel/component/rmi/RmiRouteTest.java\n@@ -57,7 +57,7 @@\n \n         // START SNIPPET: invoke\n         Endpoint endpoint = camelContext.getEndpoint(\"direct:hello\");\n-        ISay proxy = ProxyHelper.createProxy(endpoint, ISay.class);\n+        ISay proxy = ProxyHelper.createProxy(endpoint, false, ISay.class);\n         String rc = proxy.say();\n         assertEquals(\"Good Bye!\", rc);\n         // END SNIPPET: invoke\n",
        "projectName": "apache.camel",
        "bugLineNum": 60,
        "bugNodeStartChar": 2010,
        "bugNodeLength": 45,
        "fixLineNum": 60,
        "fixNodeStartChar": 2010,
        "fixNodeLength": 52,
        "sourceBeforeFix": "ProxyHelper.createProxy(endpoint,ISay.class)",
        "sourceAfterFix": "ProxyHelper.createProxy(endpoint,false,ISay.class)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "298964dc444ecebcd230db6f6547bf62c9019a95",
        "fixCommitParentSHA1": "865cd2619a525ab90b44a3d65790884b9086cbc0",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/PublishEventNotifierTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/PublishEventNotifierTest.java b/camel-core/src/test/java/org/apache/camel/management/PublishEventNotifierTest.java\nindex 9b3e642..467f039 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/PublishEventNotifierTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/PublishEventNotifierTest.java\n@@ -41,7 +41,7 @@\n \n     public void testExchangeDone() throws Exception {\n         getMockEndpoint(\"mock:result\").expectedMessageCount(1);\n-        getMockEndpoint(\"mock:event\").expectedMessageCount(5);\n+        getMockEndpoint(\"mock:event\").expectedMessageCount(6);\n \n         template.sendBody(\"direct:start\", \"Hello World\");\n \n@@ -49,7 +49,7 @@\n     }\n \n     public void testExchangeFailed() throws Exception {\n-        getMockEndpoint(\"mock:event\").expectedMessageCount(5);\n+        getMockEndpoint(\"mock:event\").expectedMessageCount(6);\n \n         try {\n             template.sendBody(\"direct:fail\", \"Hello World\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1661,
        "bugNodeLength": 53,
        "fixLineNum": 44,
        "fixNodeStartChar": 1661,
        "fixNodeLength": 53,
        "sourceBeforeFix": "getMockEndpoint(\"mock:event\").expectedMessageCount(5)",
        "sourceAfterFix": "getMockEndpoint(\"mock:event\").expectedMessageCount(6)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "d76ba8118cca9f2f1c4f0e89e2dd15a9db02f7e8",
        "fixCommitParentSHA1": "a7044b0d94942f2a58c0dba5ab1b18690fa75b05",
        "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java",
        "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\nindex 751e237..8ad2754 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java\n@@ -41,7 +41,7 @@\n \t\t\tcase MotionEvent.ACTION_DOWN:\r\n \t\t\tcase MotionEvent.ACTION_POINTER_DOWN:\r\n \t\t\t\trealPointerIndex = input.getFreePointerIndex(); // get a free pointer index as reported by Input.getX() etc.\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = pointerId;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -59,7 +59,7 @@\n \t\t\tcase MotionEvent.ACTION_CANCEL:\r\n \t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\tif (realPointerIndex == -1) break;\r\n-\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\tinput.realId[realPointerIndex] = -1;\r\n \t\t\t\tx = (int)event.getX(pointerIndex);\r\n \t\t\t\ty = (int)event.getY(pointerIndex);\r\n@@ -80,7 +80,7 @@\n \t\t\t\t\ty = (int)event.getY(pointerIndex);\r\n \t\t\t\t\trealPointerIndex = input.lookUpPointerIndex(pointerId);\r\n \t\t\t\t\tif (realPointerIndex == -1) continue;\r\n-\t\t\t\t\tif (realPointerIndex > AndroidInput.NUM_TOUCHES) break;\r\n+\t\t\t\t\tif (realPointerIndex >= AndroidInput.NUM_TOUCHES) break;\r\n \t\t\t\t\tpostTouchEvent(input, TouchEvent.TOUCH_DRAGGED, x, y, realPointerIndex, timeStamp);\r\n \t\t\t\t\tinput.deltaX[realPointerIndex] = x - input.touchX[realPointerIndex];\r\n \t\t\t\t\tinput.deltaY[realPointerIndex] = y - input.touchY[realPointerIndex];\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 62,
        "bugNodeStartChar": 2635,
        "bugNodeLength": 43,
        "fixLineNum": 62,
        "fixNodeStartChar": 2574,
        "fixNodeLength": 44,
        "sourceBeforeFix": "realPointerIndex > AndroidInput.NUM_TOUCHES",
        "sourceAfterFix": "realPointerIndex >= AndroidInput.NUM_TOUCHES"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "2bac95c9764d5cc853dd00ccfc354b410b32251b",
        "fixCommitParentSHA1": "7dc4e4c75072173cb87d97110afade4b98819a9f",
        "bugFilePath": "src/edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalRelations.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalRelations.java b/src/edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalRelations.java\nindex 3f788f9..eefeb18 100644\n--- a/src/edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalRelations.java\n+++ b/src/edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalRelations.java\n@@ -339,8 +339,7 @@\n     new GrammaticalRelation(Language.UniversalChinese, \"nummod\", \"numeric modifier\",\n                             MODIFIER,\n                             \"QP|NP|DP\", tregexCompiler,\n-            \"NP|QP < ( QP  =target << M $++ NN|NP|QP)\",\n-            \"NP|QP < ( DNP=target < (QP < CD !< OD) !< JJ|ADJP $++ NP|QP )\"\n+            \"NP|QP < ( QP  =target << M $++ NN|NP|QP)\"\n             // the following rule is merged into mark:clf\n             //\"DP < ( DT $+ CLP=target )\"\n             );\n@@ -516,7 +515,7 @@\n             \"NP|CLP|QP < (ADJP=target $++ NP|CLP|QP ) \",\n             \"NP  $++ (CP=target << VA !<< VV) > NP \",\n             \"NP  < ( CP=target $++ NP << VA !<< VV)\",\n-            \"NP|QP < ( DNP=target < JJ|ADJP !< NP|QP $++ NP|QP )\");\n+            \"NP|QP < ( DNP=target < JJ|ADJP|QP !< NP $++ NP|QP )\");\n \n   /**\n    * The \"ordinal modifier\" (ordmod) grammatical relation.\n@@ -525,8 +524,7 @@\n           new GrammaticalRelation(Language.UniversalChinese, \"amod:ordmod\", \"ordinal numeric modifier\",\n                   ADJECTIVAL_MODIFIER,\n                   \"NP|QP\", tregexCompiler,\n-                  \"NP < (QP=target < OD !< CLP)\",\n-                  \"NP|QP < ( DNP=target < (QP < OD !< CD) !< JJ|ADJP $++ NP|QP )\"\n+                  \"NP < (QP=target < OD !< CLP)\"\n                   // the following rule is merged into mark:clf\n                   //\"QP < (OD=target $+ CLP)\"\n                   );\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 339,
        "bugNodeStartChar": 11721,
        "bugNodeLength": 420,
        "fixLineNum": 339,
        "fixNodeStartChar": 11721,
        "fixNodeLength": 343,
        "sourceBeforeFix": "new GrammaticalRelation(Language.UniversalChinese,\"nummod\",\"numeric modifier\",MODIFIER,\"QP|NP|DP\",tregexCompiler,\"NP|QP < ( QP  =target << M $++ NN|NP|QP)\",\"NP|QP < ( DNP=target < (QP < CD !< OD) !< JJ|ADJP $++ NP|QP )\")",
        "sourceAfterFix": "new GrammaticalRelation(Language.UniversalChinese,\"nummod\",\"numeric modifier\",MODIFIER,\"QP|NP|DP\",tregexCompiler,\"NP|QP < ( QP  =target << M $++ NN|NP|QP)\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c7f9129cf03d4e6e9089ba518a74efaf6bcaac68",
        "fixCommitParentSHA1": "050930350278b27ab84cb6a79ed78f27adaf7b0d",
        "bugFilePath": "sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/ArrayNode.java",
        "fixPatch": "diff --git a/sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/ArrayNode.java b/sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/ArrayNode.java\nindex 2402709..47f2dd7 100644\n--- a/sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/ArrayNode.java\n+++ b/sopremo/sopremo-common/src/main/java/eu/stratosphere/sopremo/type/ArrayNode.java\n@@ -49,12 +49,12 @@\n \t}\n \n \t/**\n-\t * Initializes an ArrayNode which cointains all {@link IJsonNode}s from the given Collection in proper sequence.\n+\t * Initializes an ArrayNode which cointains all {@link IJsonNode}s from the given Iterable in proper sequence.\n \t * \n \t * @param nodes\n \t *        a Collection of nodes that should be added to this ArrayNode\n \t */\n-\tpublic ArrayNode(final Collection<? extends IJsonNode> nodes) {\n+\tpublic ArrayNode(final Iterable<? extends IJsonNode> nodes) {\n \t\tthis();\n \t\tfor (final IJsonNode node : nodes)\n \t\t\tthis.children.add(node);\n",
        "projectName": "apache.flink",
        "bugLineNum": 57,
        "bugNodeStartChar": 1390,
        "bugNodeLength": 31,
        "fixLineNum": 57,
        "fixNodeStartChar": 1390,
        "fixNodeLength": 29,
        "sourceBeforeFix": "Collection<? extends IJsonNode>",
        "sourceAfterFix": "Iterable<? extends IJsonNode>"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "eef241f280971b1e1e0c71217456ba1c44af22d0",
        "fixCommitParentSHA1": "40058b05ac93205abac9a28b7ca76ef9954cae7c",
        "bugFilePath": "web/src/test/java/org/openmrs/web/controller/patient/ShortPatientFormValidatorTest.java",
        "fixPatch": "diff --git a/web/src/test/java/org/openmrs/web/controller/patient/ShortPatientFormValidatorTest.java b/web/src/test/java/org/openmrs/web/controller/patient/ShortPatientFormValidatorTest.java\nindex f8900b0..4f9bb3e 100644\n--- a/web/src/test/java/org/openmrs/web/controller/patient/ShortPatientFormValidatorTest.java\n+++ b/web/src/test/java/org/openmrs/web/controller/patient/ShortPatientFormValidatorTest.java\n@@ -228,7 +228,7 @@\n \tpublic void validate_shouldFailValidationIfBirthdateMakesPatient120YearsOldOrOlder() throws Exception {\r\n \t\tPatient p = ps.getPatient(2);\r\n \t\tCalendar c = Calendar.getInstance();\r\n-\t\tc.roll(Calendar.YEAR, -120);\r\n+\t\tc.roll(Calendar.YEAR, -121);\r\n \t\tp.setBirthdate(c.getTime());\r\n \t\tShortPatientModel model = new ShortPatientModel(p);\r\n \t\tErrors errors = new BindException(model, \"patientModel\");\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 231,
        "bugNodeStartChar": 9035,
        "bugNodeLength": 4,
        "fixLineNum": 231,
        "fixNodeStartChar": 8805,
        "fixNodeLength": 4,
        "sourceBeforeFix": "-120",
        "sourceAfterFix": "-121"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f7fc6c9d499231af985ed9f99de287aca5b4c0cf",
        "fixCommitParentSHA1": "9c1d80f9ca5d44ac6f50c622e8cd872731ea259a",
        "bugFilePath": "testsuite/integration/manualmode/src/test/java/org/wildfly/test/manual/management/ManagementOnlyModeTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/manualmode/src/test/java/org/wildfly/test/manual/management/ManagementOnlyModeTestCase.java b/testsuite/integration/manualmode/src/test/java/org/wildfly/test/manual/management/ManagementOnlyModeTestCase.java\nindex a43484f..be64f22 100644\n--- a/testsuite/integration/manualmode/src/test/java/org/wildfly/test/manual/management/ManagementOnlyModeTestCase.java\n+++ b/testsuite/integration/manualmode/src/test/java/org/wildfly/test/manual/management/ManagementOnlyModeTestCase.java\n@@ -79,16 +79,15 @@\n \n         // remove the conector\n         op = createOpNode(\"subsystem=undertow/server=default-server/http-listener=my-test\", REMOVE);\n-        op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);\n+        op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(false);\n         container.getClient().executeForResult(op);\n         op = createOpNode(\"socket-binding-group=standard-sockets/socket-binding=my-test-binding\", REMOVE);\n-        op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true);\n+        op.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(false);\n         ModelNode result = container.getClient().getControllerClient().execute(op);\n \n         //reload shouldn't be required by operations above, if it is, there is a problem\n         if (result.hasDefined(RESPONSE_HEADERS) && result.get(RESPONSE_HEADERS).hasDefined(PROCESS_STATE)) {\n-            Assert.assertFalse(\"reload-required\".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()));\n-\n+            Assert.assertTrue(\"reload-required\".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()));\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 90,
        "bugNodeStartChar": 4213,
        "bugNodeLength": 104,
        "fixLineNum": 90,
        "fixNodeStartChar": 4213,
        "fixNodeLength": 103,
        "sourceBeforeFix": "Assert.assertFalse(\"reload-required\".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()))",
        "sourceAfterFix": "Assert.assertTrue(\"reload-required\".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()))"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "a756acefb8a186c8bb2d8d4d899e2d18e1bfd576",
        "fixCommitParentSHA1": "738a29d1ade6addddd318d8aa8918cc6b163417a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\nindex 99115bf..043ce6e 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java\n@@ -80,7 +80,7 @@\n \r\n \t\taddListener(new InputListener() {\r\n \t\t\tpublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\r\n-\t\t\t\tif (disabled) return true;\r\n+\t\t\t\tif (disabled) return false;\r\n \t\t\t\tif (draggingPointer != -1) return false;\r\n \t\t\t\tdraggingPointer = pointer;\r\n \t\t\t\tcalculatePositionAndValue(x, y);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 83,
        "bugNodeStartChar": 4047,
        "bugNodeLength": 12,
        "fixLineNum": 83,
        "fixNodeStartChar": 3965,
        "fixNodeLength": 13,
        "sourceBeforeFix": "return true; ",
        "sourceAfterFix": "return false; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c97c55c5fe3bd7a54b9f36cf68f17b5cf19ecaf3",
        "fixCommitParentSHA1": "141a7f69dc05054e1cb02b894f4b77f83a0a258d",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/NettyAsyncHttpProvider.java\nindex c061ca1..e83ac10 100644\n--- a/src/main/java/com/ning/http/client/providers/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/NettyAsyncHttpProvider.java\n@@ -106,7 +106,7 @@\n \n     private final AsyncHttpClientConfig config;\n \n-    private final ConcurrentHashMap<Url, Channel> connectionsPool = new ConcurrentHashMap<Url, Channel>();\n+    private final ConcurrentHashMap<String, Channel> connectionsPool = new ConcurrentHashMap<String, Channel>();\n \n     private volatile int maxConnectionsPerHost;\n     private final HashedWheelTimer timer = new HashedWheelTimer();\n@@ -162,7 +162,7 @@\n     }\n \n     private Channel lookupInCache(Url url) {\n-        Channel channel = connectionsPool.get(url);\n+        Channel channel = connectionsPool.get(url.getBaseUrl());\n         if (channel != null) {\n             /**\n              * The Channel will eventually be closed by Netty and will becomes invalid.\n@@ -172,7 +172,7 @@\n             if (channel.isOpen()) {\n                 channel.setReadable(true);\n             } else {\n-                connectionsPool.remove(url);\n+                connectionsPool.remove(url.getBaseUrl());\n             }\n         }\n         return channel;\n@@ -461,7 +461,7 @@\n \n     public void close() {\n         isClose.set(true);\n-        Iterator<Entry<Url, Channel>> i = connectionsPool.entrySet().iterator();\n+        Iterator<Entry<String, Channel>> i = connectionsPool.entrySet().iterator();\n         while (i.hasNext()) {\n             i.next().getValue().close();\n         }\n@@ -640,7 +640,7 @@\n \n     private void markAsDoneAndCacheConnection(final NettyResponseFuture<?> future, final Channel channel) throws MalformedURLException {\n         if (future.getKeepAlive() && maxConnectionsPerHost++ < config.getMaxConnectionPerHost()) {\n-            connectionsPool.put(future.getUrl(), channel);\n+            connectionsPool.put(future.getUrl().getBaseUrl(), channel);\n         } else {\n             connectionsPool.remove(future.getUrl());\n         }\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 464,
        "bugNodeStartChar": 20103,
        "bugNodeLength": 19,
        "fixLineNum": 464,
        "fixNodeStartChar": 20103,
        "fixNodeLength": 22,
        "sourceBeforeFix": "Entry<Url,Channel>",
        "sourceAfterFix": "Entry<String,Channel>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7346f16a2b9513dabebfdbec521bbf520ad63d2b",
        "fixCommitParentSHA1": "42ef9aac9a8e3a381fdb0a1d3020268fd5aa6af9",
        "bugFilePath": "StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java",
        "fixPatch": "diff --git a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\nindex 52adb67..b007800 100644\n--- a/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n+++ b/StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java\n@@ -70,9 +70,9 @@\n         Graph graph;\n \n         if (mDirected) {\n-            graph = graphModel.getDirectedGraph();\n+            graph = graphModel.getDirectedGraphVisible();\n         } else {\n-            graph = graphModel.getUndirectedGraph();\n+            graph = graphModel.getUndirectedGraphVisible();\n         }\n \n         this.mGraphRevision = \"(\" + graph.getNodeVersion() + \", \" + graph.getEdgeVersion() + \")\";\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 73,
        "bugNodeStartChar": 1718,
        "bugNodeLength": 29,
        "fixLineNum": 73,
        "fixNodeStartChar": 1718,
        "fixNodeLength": 36,
        "sourceBeforeFix": "graphModel.getDirectedGraph()",
        "sourceAfterFix": "graphModel.getDirectedGraphVisible()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c84e09f6119233d59ae42a89eb8adc65202db69b",
        "fixCommitParentSHA1": "075d5e8d12d02a93b8fdc828baec42f6a0aa802b",
        "bugFilePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\nindex 2d2d632..0683800 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\n@@ -199,7 +199,7 @@\n \n \tprivate Cache getCache(String cacheName) {\n \t\tCache cache = this.cacheManager.getCache(cacheName);\n-\t\tAssert.notNull(\"No cache with name '\" + cacheName + \"' found.\");\n+\t\tAssert.notNull(cache, \"No cache with name '\" + cacheName + \"' found.\");\n \t\treturn cache;\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 202,
        "bugNodeStartChar": 7225,
        "bugNodeLength": 63,
        "fixLineNum": 202,
        "fixNodeStartChar": 7225,
        "fixNodeLength": 70,
        "sourceBeforeFix": "Assert.notNull(\"No cache with name '\" + cacheName + \"' found.\")",
        "sourceAfterFix": "Assert.notNull(cache,\"No cache with name '\" + cacheName + \"' found.\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\nindex a964c06..7b69c96 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\n@@ -71,7 +71,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (server != null) {\n-            LOG.trace(\"Terminating gRPC server\");\n+            LOG.debug(\"Terminating gRPC server\");\n             server.shutdown().shutdownNow();\n             server = null;\n         }\n@@ -93,10 +93,10 @@\n         }\n         \n         if (!ObjectHelper.isEmpty(configuration.getHost()) && !ObjectHelper.isEmpty(configuration.getPort())) {\n-            LOG.info(\"Building gRPC server on \" + configuration.getHost() + \":\" + configuration.getPort());\n+            LOG.debug(\"Building gRPC server on \" + configuration.getHost() + \":\" + configuration.getPort());\n             serverBuilder = NettyServerBuilder.forAddress(new InetSocketAddress(configuration.getHost(), configuration.getPort()));\n         } else if (ObjectHelper.isEmpty(configuration.getHost()) && !ObjectHelper.isEmpty(configuration.getPort())) {\n-            LOG.info(\"Building gRPC server on <any address>\" + \":\" + configuration.getPort());\n+            LOG.debug(\"Building gRPC server on <any address>\" + \":\" + configuration.getPort());\n             serverBuilder = NettyServerBuilder.forPort(configuration.getPort());\n         } else {\n             throw new IllegalArgumentException(\"No server start properties (host, port) specified\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 96,
        "bugNodeStartChar": 3862,
        "bugNodeLength": 94,
        "fixLineNum": 96,
        "fixNodeStartChar": 3862,
        "fixNodeLength": 95,
        "sourceBeforeFix": "LOG.info(\"Building gRPC server on \" + configuration.getHost() + \":\"+ configuration.getPort())",
        "sourceAfterFix": "LOG.debug(\"Building gRPC server on \" + configuration.getHost() + \":\"+ configuration.getPort())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7c3ad0194c2aa495bf464f68e0da6622733b4430",
        "fixCommitParentSHA1": "7ea02f16ec85e32ed5f2a91a100aa588e8358527",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java b/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\nindex dba7abc..5144c22 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/meta/TtlBucket.java\n@@ -30,7 +30,7 @@\n public final class TtlBucket implements Comparable<TtlBucket> {\n   /** The time interval of this bucket is the same as ttl checker's interval. */\n   private static long sTtlIntervalMs =\n-      Configuration.getInt(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS);\n+      Configuration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS);\n   /**\n    * Each bucket has a time to live interval, this value is the start of the interval, interval\n    * value is the same as the configuration of {@link PropertyKey#MASTER_TTL_CHECKER_INTERVAL_MS}.\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 33,
        "bugNodeStartChar": 1179,
        "bugNodeLength": 64,
        "fixLineNum": 33,
        "fixNodeStartChar": 1179,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Configuration.getInt(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS)",
        "sourceAfterFix": "Configuration.getMs(PropertyKey.MASTER_TTL_CHECKER_INTERVAL_MS)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e3e1fea787147261448e30c1745d9157f442cb9f",
        "fixCommitParentSHA1": "17e56f9c6b1e650c1ea9190d479ad390111234f1",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java b/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\nindex b2a70da..8eff86f 100644\n--- a/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\n+++ b/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\n@@ -26,7 +26,7 @@\n     public void test_ran_2() throws Exception {\n         Random rand = new Random();\n \n-        for (int i = 0; i < 1000 * 1000 * 10; ++i) {\n+        for (int i = 0; i < 1000 * 1000 * 1; ++i) {\n             float val = rand.nextFloat();\n \n             String str = JSON.toJSONString(new Model(val), SerializerFeature.BeanToArray);\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 29,
        "bugNodeStartChar": 810,
        "bugNodeLength": 16,
        "fixLineNum": 29,
        "fixNodeStartChar": 810,
        "fixNodeLength": 15,
        "sourceBeforeFix": "1000 * 1000 * 10",
        "sourceAfterFix": "1000 * 1000 * 1"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "aa82999d9d18f5c818216aac842929c02ab86be9",
        "fixCommitParentSHA1": "3051b9f3ec52f11f3eee60f62da85b47b3760557",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/DefaultAddressPicker.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/DefaultAddressPicker.java b/hazelcast/src/main/java/com/hazelcast/instance/DefaultAddressPicker.java\nindex 09f0853..4037115 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/DefaultAddressPicker.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/DefaultAddressPicker.java\n@@ -74,7 +74,7 @@\n             Throwable error = null;\n             for (int i = 0; i < 100; i++) {\n                 /**\n-                 * Instead of reusing the ServerSocket/ServerSocketChannel, we are going to close replace them on\n+                 * Instead of reusing the ServerSocket/ServerSocketChannel, we are going to close and replace them on\n                  * every attempt to find a free port. The reason to do this is because in some cases, when concurrent\n                  * threads/processes try to acquire the same port, the ServerSocket gets corrupted and isn't able to find\n                  * any free port at all (no matter if there are more than enough free ports available). We have seen this\n@@ -110,7 +110,7 @@\n                     }\n                 }\n             }\n-            if (serverSocket == null) {\n+            if (serverSocket == null || !serverSocket.isBound()) {\n                 throw new HazelcastException(\"ServerSocket bind has failed. Hazelcast cannot start! \" +\n                         \"config-port: \" + networkConfig.getPort() + \", latest-port: \" + port, error);\n             }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 113,
        "bugNodeStartChar": 5029,
        "bugNodeLength": 20,
        "fixLineNum": 113,
        "fixNodeStartChar": 5029,
        "fixNodeLength": 47,
        "sourceBeforeFix": "serverSocket == null",
        "sourceAfterFix": "serverSocket == null || !serverSocket.isBound()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "73b39f0f9d0221f0e932ea27f9ba779d6f5bb71b",
        "fixCommitParentSHA1": "af38b55b3c5e9bf2bd5fbe08f68e1d659340c66a",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex e56294b..547d8e6 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -117,7 +117,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -154,7 +154,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -229,7 +229,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -290,7 +290,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -316,14 +316,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 120,
        "bugNodeStartChar": 4387,
        "bugNodeLength": 89,
        "fixLineNum": 120,
        "fixNodeStartChar": 4387,
        "fixNodeLength": 84,
        "sourceBeforeFix": "LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "59e2775fe4349667d553fd5b87ae55bed08f0866",
        "fixCommitParentSHA1": "0fc67af628089a8a200f9bc4a5c752097ea448d7",
        "bugFilePath": "components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java",
        "fixPatch": "diff --git a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\nindex 7514e8e..f2d7fef 100755\n--- a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\n+++ b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\n@@ -73,13 +73,13 @@\n             setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"timeToLiveSeconds\")).longValue());\n         }\n         if (cacheSettings.containsKey(\"timeToIdleSeconds\")) {\n-            setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"timeToIdleSeconds\")).longValue());\n+            setTimeToIdleSeconds(Long.valueOf((String) cacheSettings.get(\"timeToIdleSeconds\")).longValue());\n         }\n         if (cacheSettings.containsKey(\"diskPersistent\")) {\n-            setEternal(Boolean.valueOf((String) cacheSettings.get(\"diskPersistent\")));\n+            setDiskPersistent(Boolean.valueOf((String) cacheSettings.get(\"diskPersistent\")));\n         }\n         if (cacheSettings.containsKey(\"diskExpiryThreadIntervalSeconds\")) {\n-            setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"diskExpiryThreadIntervalSeconds\")).longValue());\n+            setDiskExpiryThreadIntervalSeconds(Long.valueOf((String) cacheSettings.get(\"diskExpiryThreadIntervalSeconds\")).longValue());\n         }\n         \n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 76,
        "bugNodeStartChar": 3107,
        "bugNodeLength": 95,
        "fixLineNum": 76,
        "fixNodeStartChar": 3107,
        "fixNodeLength": 95,
        "sourceBeforeFix": "setTimeToLiveSeconds(Long.valueOf((String)cacheSettings.get(\"timeToIdleSeconds\")).longValue())",
        "sourceAfterFix": "setTimeToIdleSeconds(Long.valueOf((String)cacheSettings.get(\"timeToIdleSeconds\")).longValue())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "40df292ac802e1023d0208b497945d8841958022",
        "fixCommitParentSHA1": "6e38f0637d02780abd56df83699884a6f8f11cdc",
        "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java",
        "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\nindex 8786574..40ac4fa 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java\n@@ -90,9 +90,9 @@\n \n             List<Node> nodes = new ArrayList<Node>();\n             for (Node n : hgraph.getNodes()) {\n-                if (n.getNodeData().getId().toLowerCase().contains(str)) {\n+                if (n.getNodeData().getId().toLowerCase().equals(str)) {\n                     nodes.add(n);\n-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {\n+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {\n                     nodes.add(n);\n                 }\n             }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 93,
        "bugNodeStartChar": 2730,
        "bugNodeLength": 51,
        "fixLineNum": 93,
        "fixNodeStartChar": 2730,
        "fixNodeLength": 49,
        "sourceBeforeFix": "n.getNodeData().getId().toLowerCase().contains(str)",
        "sourceAfterFix": "n.getNodeData().getId().toLowerCase().equals(str)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "61e865ebbc51c172589f7f1ec9ef4ca4de62aa53",
        "fixCommitParentSHA1": "21ce480b22dff644396058dee23f1641d2ca99af",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/map/MapService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/MapService.java b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\nindex 4bb21f0..87c51cf 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/MapService.java\n@@ -194,7 +194,7 @@\n             for (int i = 0; i < nodeEngine.getPartitionService().getPartitionCount(); i++) {\n                 RecordStore recordStore = getPartitionContainer(i).getRecordStore(mapContainer.getName());\n                 // add your owned entries to the map so they will be merged\n-                if (nodeEngine.getPartitionService().getPartitionOwner(i).equals(nodeEngine.getClusterService().getThisAddress())) {\n+                if (nodeEngine.getClusterService().getThisAddress().equals(nodeEngine.getPartitionService().getPartitionOwner(i))) {\n                     if (!recordMap.containsKey(mapContainer)) {\n                         recordMap.put(mapContainer, new ArrayList<Record>());\n                     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 197,
        "bugNodeStartChar": 8590,
        "bugNodeLength": 32,
        "fixLineNum": 197,
        "fixNodeStartChar": 8590,
        "fixNodeLength": 30,
        "sourceBeforeFix": "nodeEngine.getPartitionService()",
        "sourceAfterFix": "nodeEngine.getClusterService()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "595fada2ff221b76c33da09b327973ed6a17ad2d",
        "fixCommitParentSHA1": "113279c1bce1216651b8c8f74ecc0c2363c86296",
        "bugFilePath": "spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\nindex 3b0422d..1f5dd7e 100644\n--- a/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n+++ b/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/data/RandomAccessDataFileTests.java\n@@ -87,28 +87,28 @@\n \t@Test\n \tpublic void fileNotNull() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null);\n \t}\n \n \t@Test\n \tpublic void fileExists() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"));\n \t}\n \n \t@Test\n \tpublic void fileNotNullWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must not be null\");\n+\t\tthis.thrown.expectMessage(\"File must not be null\");\n \t\tnew RandomAccessDataFile(null, 1);\n \t}\n \n \t@Test\n \tpublic void fileExistsWithConcurrentReads() throws Exception {\n \t\tthis.thrown.expect(IllegalArgumentException.class);\n-\t\tthis.thrown.equals(\"File must exist\");\n+\t\tthis.thrown.expectMessage(\"File must exist\");\n \t\tnew RandomAccessDataFile(new File(\"/does/not/exist\"), 1);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 111,
        "bugNodeStartChar": 3061,
        "bugNodeLength": 37,
        "fixLineNum": 111,
        "fixNodeStartChar": 3061,
        "fixNodeLength": 44,
        "sourceBeforeFix": "this.thrown.equals(\"File must exist\")",
        "sourceAfterFix": "this.thrown.expectMessage(\"File must exist\")"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "aebe2ca06a3fb220c7211b174c85250f36afae25",
        "fixCommitParentSHA1": "5ff88d1e66772818265923a2ccb2ecec1097c711",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\nindex 57fb3d0..38d5638 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n@@ -310,7 +310,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -330,7 +330,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -350,7 +350,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForNone\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"), e.getCause().getMessage());\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 353,
        "bugNodeStartChar": 14960,
        "bugNodeLength": 93,
        "fixLineNum": 353,
        "fixNodeStartChar": 14960,
        "fixNodeLength": 93,
        "sourceBeforeFix": "Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage(\"helloForNone\"))",
        "sourceAfterFix": "Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForNone\"),e.getCause().getMessage())"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "7d7049f9007a940fc7a20f28b706c1144c59223c",
        "fixCommitParentSHA1": "d371763a329b09c3dc3258b38bc91b74bca05f0b",
        "bugFilePath": "library/src/android/support/v4/view/MenuInflater.java",
        "fixPatch": "diff --git a/library/src/android/support/v4/view/MenuInflater.java b/library/src/android/support/v4/view/MenuInflater.java\nindex 8b8608c..31dd90a 100644\n--- a/library/src/android/support/v4/view/MenuInflater.java\n+++ b/library/src/android/support/v4/view/MenuInflater.java\n@@ -401,7 +401,7 @@\n \t\t\t\t} catch (Exception e) {\r\n \t\t\t\t\tthrow new InflateException(e);\r\n \t\t\t\t}\r\n-\t\t\t} else if (itemActionLayout >= 0) {\r\n+\t\t\t} else if (itemActionLayout > 0) {\r\n \t\t\t\titem.setActionView(itemActionLayout);\r\n \t\t\t}\r\n \t\t}\r\n",
        "projectName": "JakeWharton.ActionBarSherlock",
        "bugLineNum": 404,
        "bugNodeStartChar": 15503,
        "bugNodeLength": 21,
        "fixLineNum": 404,
        "fixNodeStartChar": 15100,
        "fixNodeLength": 20,
        "sourceBeforeFix": "itemActionLayout >= 0",
        "sourceAfterFix": "itemActionLayout > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a04df35fd9c932531fce2ebd85de52812a038b13",
        "fixCommitParentSHA1": "a641e82bef611b82380729f35ccd86dafeadf1da",
        "bugFilePath": "core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\nindex 7062e2a..1cdfda1 100644\n--- a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n+++ b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n@@ -258,7 +258,7 @@\n       client.getOutputProtocol().getTransport().close();\n       throw new IOException(e);\n     } finally {\n-      BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress, client);\n+      BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress, client);\n     }\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 261,
        "bugNodeStartChar": 9311,
        "bugNodeLength": 69,
        "fixLineNum": 261,
        "fixNodeStartChar": 9311,
        "fixNodeLength": 78,
        "sourceBeforeFix": "BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress,client)",
        "sourceAfterFix": "BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress,client)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3a1c3bdf687a2cc85c7477c6986f2421e1833c64",
        "fixCommitParentSHA1": "de2ed86d265bbad6d10201838cf720e8e6d17650",
        "bugFilePath": "connector/src/main/java/org/jboss/as/connector/services/ResourceAdapterService.java",
        "fixPatch": "diff --git a/connector/src/main/java/org/jboss/as/connector/services/ResourceAdapterService.java b/connector/src/main/java/org/jboss/as/connector/services/ResourceAdapterService.java\nindex 4a1dc55..942ba84 100644\n--- a/connector/src/main/java/org/jboss/as/connector/services/ResourceAdapterService.java\n+++ b/connector/src/main/java/org/jboss/as/connector/services/ResourceAdapterService.java\n@@ -30,7 +30,7 @@\n \n     @Override\n     public void start(StartContext context) throws StartException {\n-        log.errorf(\"started ResourceAdapterService %s\", context.getController().getName());\n+        log.infof(\"started ResourceAdapterService %s\", context.getController().getName());\n \n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 33,
        "bugNodeStartChar": 1008,
        "bugNodeLength": 82,
        "fixLineNum": 33,
        "fixNodeStartChar": 1008,
        "fixNodeLength": 81,
        "sourceBeforeFix": "log.errorf(\"started ResourceAdapterService %s\",context.getController().getName())",
        "sourceAfterFix": "log.infof(\"started ResourceAdapterService %s\",context.getController().getName())"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "e7919feab1a5f371806a2f6d267e84e9542e3f26",
        "fixCommitParentSHA1": "99b74df77f69e533c48e8ae0e25a6eb3780b9bf0",
        "bugFilePath": "src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\nindex 09a6cc6..24aa995 100644\n--- a/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n+++ b/src/main/java/org/apache/ibatis/executor/resultset/PrimitiveTypes.java\n@@ -39,7 +39,7 @@\n \n   private void add(final Class<?> primitiveType, final Class<?> wrapperType) {\n     primitiveToWrappers.put(primitiveType, wrapperType);\n-    primitiveToWrappers.put(wrapperType, primitiveType);\n+    wrappersToPrimitives.put(wrapperType, primitiveType);\n   }\n \n   public Class<?> getWrapper(final Class<?> primitiveType) {\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 42,
        "bugNodeStartChar": 1525,
        "bugNodeLength": 51,
        "fixLineNum": 42,
        "fixNodeStartChar": 1525,
        "fixNodeLength": 52,
        "sourceBeforeFix": "primitiveToWrappers.put(wrapperType,primitiveType)",
        "sourceAfterFix": "wrappersToPrimitives.put(wrapperType,primitiveType)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "73248ac2e39d5f905aeab743fc8410c6943474ba",
        "fixCommitParentSHA1": "d6339f5cf4fa98395ca6cb60de4d316b918649ad",
        "bugFilePath": "runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java",
        "fixPatch": "diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java\nindex 2b392fc..eddcbff 100644\n--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java\n+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/node/TestLeftRecursion.java\n@@ -1635,7 +1635,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {console.log($ctx.toStringTree(null, this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1658,7 +1658,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {console.log($ctx.toStringTree(null, this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1681,7 +1681,7 @@\n \t@Test\n \tpublic void testMultipleActionsPredicatesOptions_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(246);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(245);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s @after {console.log($ctx.toStringTree(null, this));} : e ;\\n\");\n \t\tgrammarBuilder.append(\"e : a=e op=('*'|'/') b=e  {}{true}?\\n\");\n@@ -1770,7 +1770,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_1() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(639);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(638);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {console.log($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1800,7 +1800,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_2() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(639);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(638);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {console.log($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1830,7 +1830,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_3() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(639);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(638);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {console.log($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n@@ -1860,7 +1860,7 @@\n \t@Test\n \tpublic void testMultipleAlternativesWithCommonLabel_4() throws Exception {\n \t\tmkdir(tmpdir);\n-\t\tStringBuilder grammarBuilder = new StringBuilder(639);\n+\t\tStringBuilder grammarBuilder = new StringBuilder(638);\n \t\tgrammarBuilder.append(\"grammar T;\\n\");\n \t\tgrammarBuilder.append(\"s : e {console.log($e.v);};\\n\");\n \t\tgrammarBuilder.append(\"e returns [int v]\\n\");\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 1773,
        "bugNodeStartChar": 87899,
        "bugNodeLength": 22,
        "fixLineNum": 1773,
        "fixNodeStartChar": 87899,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder(639)",
        "sourceAfterFix": "new StringBuilder(638)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "16c64bd14729e2982934c2fe72ee2a7e8e382819",
        "fixCommitParentSHA1": "33ced6685879a2f4c5ffacea24edcce63d2a424f",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\nindex fbcd7c0..e3d7fd5 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n@@ -461,16 +461,16 @@\n \t\tfloat x1, y1, x2, y2, x3, y3, x4, y4;\r\n \r\n \t\tx1 = x + c * (0 - originX) + -s * (0 - originY);\r\n-\t\ty1 = y + s * (0 - originY) + c * (0 - originY);\r\n+\t\ty1 = y + s * (0 - originX) + c * (0 - originY);\r\n \r\n \t\tx2 = x + c * (width - originX) + -s * (0 - originY);\r\n-\t\ty2 = y + s * (width - originY) + c * (0 - originY);\r\n+\t\ty2 = y + s * (width - originX) + c * (0 - originY);\r\n \r\n \t\tx3 = x + c * (width - originX) + -s * (height - originY);\r\n-\t\ty3 = y + s * (width - originY) + c * (height - originY);\r\n+\t\ty3 = y + s * (width - originX) + c * (height - originY);\r\n \r\n \t\tx4 = x + c * (0 - originX) + -s * (height - originY);\r\n-\t\ty4 = y + s * (0 - originY) + c * (height - originY);\r\n+\t\ty4 = y + s * (0 - originX) + c * (height - originY);\r\n \r\n \t\tif (currType == ShapeType.Line) {\r\n \t\t\trenderer.color(col1.r, col1.g, col1.b, col1.a);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 467,
        "bugNodeStartChar": 18209,
        "bugNodeLength": 15,
        "fixLineNum": 467,
        "fixNodeStartChar": 17743,
        "fixNodeLength": 15,
        "sourceBeforeFix": "width - originY",
        "sourceAfterFix": "width - originX"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "34a77d610669e59e9d5ab77c47908f907806e05f",
        "fixCommitParentSHA1": "d9107a081defae15c6d985037fa94c2cb9fc6a83",
        "bugFilePath": "tests/src/test/java/alluxio/shell/command/LsCommandTest.java",
        "fixPatch": "diff --git a/tests/src/test/java/alluxio/shell/command/LsCommandTest.java b/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\nindex da964c5..91d083e 100644\n--- a/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\n+++ b/tests/src/test/java/alluxio/shell/command/LsCommandTest.java\n@@ -90,7 +90,7 @@\n     String expected = \"\";\n     expected += getLsNoAclResultStr(\"/testRoot/testFileA\", files[0].getCreationTimeMs(), 10,\n         LsCommand.STATE_FILE_IN_MEMORY);\n-    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0,\n+    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1,\n         LsCommand.STATE_FOLDER);\n     expected += getLsNoAclResultStr(\"/testRoot/testFileC\", files[3].getCreationTimeMs(), 30,\n         LsCommand.STATE_FILE_NOT_IN_MEMORY);\n@@ -115,7 +115,7 @@\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[0].getPermission(),\n         files[0].isFolder());\n     expected +=\n-        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0, LsCommand.STATE_FOLDER,\n+        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1, LsCommand.STATE_FOLDER,\n             testUser, testUser, files[1].getPermission(), files[1].isFolder());\n     expected += getLsResultStr(\"/testRoot/testFileC\", files[3].getCreationTimeMs(), 30,\n         LsCommand.STATE_FILE_NOT_IN_MEMORY, testUser, testUser, files[3].getPermission(),\n@@ -192,7 +192,7 @@\n     expected += \"WARNING: lsr is deprecated. Please use ls -R instead.\\n\";\n     expected += getLsNoAclResultStr(\"/testRoot/testFileA\", files[0].getCreationTimeMs(), 10,\n         LsCommand.STATE_FILE_IN_MEMORY);\n-    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0,\n+    expected += getLsNoAclResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1,\n         LsCommand.STATE_FOLDER);\n     expected += getLsNoAclResultStr(\"/testRoot/testDir/testFileB\", files[2].getCreationTimeMs(), 20,\n         LsCommand.STATE_FILE_IN_MEMORY);\n@@ -221,7 +221,7 @@\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[0].getPermission(),\n         files[0].isFolder());\n     expected +=\n-        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 0, LsCommand.STATE_FOLDER,\n+        getLsResultStr(\"/testRoot/testDir\", files[1].getCreationTimeMs(), 1, LsCommand.STATE_FOLDER,\n             testUser, testUser, files[1].getPermission(), files[1].isFolder());\n     expected += getLsResultStr(\"/testRoot/testDir/testFileB\", files[2].getCreationTimeMs(), 20,\n         LsCommand.STATE_FILE_IN_MEMORY, testUser, testUser, files[2].getPermission(),\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 93,
        "bugNodeStartChar": 3963,
        "bugNodeLength": 105,
        "fixLineNum": 93,
        "fixNodeStartChar": 3963,
        "fixNodeLength": 105,
        "sourceBeforeFix": "getLsNoAclResultStr(\"/testRoot/testDir\",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER)",
        "sourceAfterFix": "getLsNoAclResultStr(\"/testRoot/testDir\",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9cc9147adcd5143e5b1253b279f2e436adcbe7a3",
        "fixCommitParentSHA1": "becc961ecab5db5f66c9bcc4291f6c56e862fea3",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java b/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\nindex d2dfa3b..ce7120b 100644\n--- a/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\n+++ b/hazelcast/src/main/java/com/hazelcast/config/XmlConfigBuilder.java\n@@ -863,9 +863,9 @@\n     \tfor (org.w3c.dom.Node child : new IterableNodeList(node.getChildNodes())) {\n     \t\tfinal String nodeName = cleanNodeName(child.getNodeName());\n     \t\tif(\"endpoints\".equals(nodeName)) {\n-    \t\t\thandleSecurityPermissionEndpoints(principalNode, permConfig);\n+    \t\t\thandleSecurityPermissionEndpoints(child, permConfig);\n     \t\t} else if(\"actions\".equals(nodeName)) {\n-    \t\t\thandleSecurityPermissionActions(principalNode, permConfig);\n+    \t\t\thandleSecurityPermissionActions(child, permConfig);\n     \t\t}\n     \t}\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 866,
        "bugNodeStartChar": 41250,
        "bugNodeLength": 60,
        "fixLineNum": 866,
        "fixNodeStartChar": 41250,
        "fixNodeLength": 52,
        "sourceBeforeFix": "handleSecurityPermissionEndpoints(principalNode,permConfig)",
        "sourceAfterFix": "handleSecurityPermissionEndpoints(child,permConfig)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "da5e1827cf1c86cb1bddf3886a83736990a36430",
        "fixCommitParentSHA1": "0c56f46fcdadb3e52d3f1e668e75a622a97884d6",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java b/camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java\nindex e8d01e5..979b59a 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java\n@@ -152,7 +152,7 @@\n \n         // prefer to coerce to the right hand side at first\n         if (rightValue instanceof Comparable) {\n-            Object value = converter.convertTo(rightValue.getClass(), leftValue);\n+            Object value = converter.tryConvertTo(rightValue.getClass(), leftValue);\n             if (value != null) {\n                 return ((Comparable) rightValue).compareTo(value) * -1;\n             }\n@@ -160,7 +160,7 @@\n \n         // then fallback to the left hand side\n         if (leftValue instanceof Comparable) {\n-            Object value = converter.convertTo(leftValue.getClass(), rightValue);\n+            Object value = converter.tryConvertTo(leftValue.getClass(), rightValue);\n             if (value != null) {\n                 return ((Comparable) leftValue).compareTo(value);\n             }\n",
        "projectName": "apache.camel",
        "bugLineNum": 155,
        "bugNodeStartChar": 6169,
        "bugNodeLength": 53,
        "fixLineNum": 155,
        "fixNodeStartChar": 6169,
        "fixNodeLength": 56,
        "sourceBeforeFix": "converter.convertTo(rightValue.getClass(),leftValue)",
        "sourceAfterFix": "converter.tryConvertTo(rightValue.getClass(),leftValue)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c5ccaee5065a52110a4124505002d6afeb7c13ca",
        "fixCommitParentSHA1": "a54217053f54e06a6f2f8f89709b1568e5d00827",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\nindex a5f1705..32d981c 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java\n@@ -1186,18 +1186,19 @@\n     private String readLineStandard() throws NotEnoughDataDecoderException {\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (undecodedChunk.readable()) {\n                 byte nextByte = undecodedChunk.readByte();\n                 if (nextByte == HttpConstants.CR) {\n                     nextByte = undecodedChunk.readByte();\n                     if (nextByte == HttpConstants.LF) {\n-                        return sb.toString();\n+                        return line.toString(charset);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n@@ -1225,7 +1226,8 @@\n         }\n         int readerIndex = undecodedChunk.readerIndex();\n         try {\n-            StringBuilder sb = new StringBuilder(64);\n+            ByteBuf line = buffer(64);\n+\n             while (sao.pos < sao.limit) {\n                 byte nextByte = sao.bytes[sao.pos++];\n                 if (nextByte == HttpConstants.CR) {\n@@ -1233,16 +1235,16 @@\n                         nextByte = sao.bytes[sao.pos++];\n                         if (nextByte == HttpConstants.LF) {\n                             sao.setReadPosition(0);\n-                            return sb.toString();\n+                            return line.toString(charset);\n                         }\n                     } else {\n-                        sb.append((char) nextByte);\n+                        line.writeByte(nextByte);\n                     }\n                 } else if (nextByte == HttpConstants.LF) {\n                     sao.setReadPosition(0);\n-                    return sb.toString();\n+                    return line.toString(charset);\n                 } else {\n-                    sb.append((char) nextByte);\n+                    line.writeByte(nextByte);\n                 }\n             }\n         } catch (IndexOutOfBoundsException e) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 1228,
        "bugNodeStartChar": 50198,
        "bugNodeLength": 41,
        "fixLineNum": 1228,
        "fixNodeStartChar": 50198,
        "fixNodeLength": 26,
        "sourceBeforeFix": "StringBuilder sb=new StringBuilder(64); ",
        "sourceAfterFix": "ByteBuf line=buffer(64); "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "59d0db7481bc37754dcfdc845d309c401bac50a9",
        "fixCommitParentSHA1": "6b7f549245504bfd406ade5d4ee34b6c39c14e40",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheReplicationOperation.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheReplicationOperation.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheReplicationOperation.java\nindex 0715222..e397c77 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheReplicationOperation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/operation/CacheReplicationOperation.java\n@@ -99,7 +99,7 @@\n                 Data key = next.getKey();\n                 CacheRecord record = next.getValue();\n                 iter.remove();\n-                cache.setRecord(key, record);\n+                cache.putRecord(key, record);\n             }\n         }\n         data.clear();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 102,
        "bugNodeStartChar": 3840,
        "bugNodeLength": 28,
        "fixLineNum": 102,
        "fixNodeStartChar": 3840,
        "fixNodeLength": 28,
        "sourceBeforeFix": "cache.setRecord(key,record)",
        "sourceAfterFix": "cache.putRecord(key,record)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1daccd54d2ff2ecdb21d8c60268600c37febbb70",
        "fixCommitParentSHA1": "ef063203d3f0503e52661a0bad1c27fd23c81f4c",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 3e80eb8..411c7b0 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -52,7 +52,7 @@\n \n   public static void createFiles() throws IOException {\n     long startTimeMs = CommonUtils.getCurrentMs();\n-    for (int k = 0; k < THREADS; k ++) {\n+    for (int k = 0; k < FILES; k++) {\n       int fileId = MTC.createFile(FILE_NAME + (k + BASE_FILE_NUMBER));\n       CommonUtils.printTimeTakenMs(startTimeMs, LOG, \"user_createFiles with fileId \" + fileId);\n     }\n@@ -109,12 +109,12 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-            mBuf.array()[0] = (byte) (k + mWorkerId);\n+            mBuf.putInt(0, k + mWorkerId);\n             dst.put(mBuf.array());\n           }\n           dst.clear();\n@@ -134,7 +134,7 @@\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n           if (!mMemoryOnly) {\n-            file = new RandomAccessFile(FOLDER + (mWorkerId + BASE_FILE_NUMBER), \"rw\");\n+            file = new RandomAccessFile(FOLDER + (times + BASE_FILE_NUMBER), \"rw\");\n             dst = file.getChannel().map(MapMode.READ_WRITE, 0, FILE_BYTES);\n           }\n           dst.order(ByteOrder.nativeOrder());\n@@ -180,10 +180,10 @@\n       mBuf.flip();\n       for (int pId = mLeft; pId < mRight; pId ++) {\n         long startTimeMs = System.currentTimeMillis();\n-        TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+        TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n         OutStream os = file.getOutStream(WriteType.MUST_CACHE);\n         for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-          mBuf.array()[0] = (byte) (k + mWorkerId);\n+          mBuf.putInt(0, k + mWorkerId);\n           os.write(mBuf.array());\n         }\n         os.close();\n@@ -216,10 +216,10 @@\n         LOG.info(\"Verifying the reading data...\");\n \n         for (int pId = mLeft; pId < mRight; pId ++) {\n-          TachyonFile file = mTC.getFile(FILE_NAME + mWorkerId);\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           IntBuffer intBuf;\n-          intBuf = buf.DATA.asIntBuffer();\n+          intBuf = buf.DATA.order(ByteOrder.nativeOrder()).asIntBuffer();\n           int tmp;\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             for (int k = 0; k < BLOCK_SIZE_BYTES / 4; k ++) {\n@@ -238,7 +238,7 @@\n       if (TACHYON_STREAMING_READ) {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           InputStream is = file.getInStream(ReadType.CACHE);\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n@@ -253,7 +253,7 @@\n       } else {\n         for (int pId = mLeft; pId < mRight; pId ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          TachyonFile file = mTC.getFile(FILE_NAME + (mWorkerId + BASE_FILE_NUMBER));\n+          TachyonFile file = mTC.getFile(FILE_NAME + (pId + BASE_FILE_NUMBER));\n           buf = file.readByteBuffer(0);\n           for (int i = 0; i < BLOCKS_PER_FILE; i ++) {\n             buf.DATA.get(mBuf.array());\n@@ -261,7 +261,7 @@\n           sum += mBuf.get(pId % 16);\n \n           if (DEBUG_MODE) {\n-            buf.DATA.flip();\n+            buf.DATA.order(ByteOrder.nativeOrder()).flip();\n             CommonUtils.printByteBuffer(LOG, buf.DATA);\n           }\n           buf.DATA.clear();\n@@ -323,10 +323,10 @@\n       if (mWrite) {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           OutputStream os = mHdfsFs.create(new Path(filePath));\n           for (int k = 0; k < BLOCKS_PER_FILE; k ++) {\n-            mBuf.array()[0] = (byte) (k + mWorkerId);\n+            mBuf.putInt(0, k + mWorkerId);\n             os.write(mBuf.array());\n           }\n           os.close();\n@@ -335,7 +335,7 @@\n       } else {\n         for (int times = mLeft; times < mRight; times ++) {\n           long startTimeMs = System.currentTimeMillis();\n-          String filePath = FILE_NAME + (mWorkerId + BASE_FILE_NUMBER);\n+          String filePath = FILE_NAME + (times + BASE_FILE_NUMBER);\n           InputStream is = mHdfsFs.open(new Path(filePath));\n           long len = BLOCKS_PER_FILE * BLOCK_SIZE_BYTES;\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 137,
        "bugNodeStartChar": 4602,
        "bugNodeLength": 28,
        "fixLineNum": 137,
        "fixNodeStartChar": 4602,
        "fixNodeLength": 24,
        "sourceBeforeFix": "mWorkerId + BASE_FILE_NUMBER",
        "sourceAfterFix": "times + BASE_FILE_NUMBER"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "57c1a20ed514174389b336b03ba40c191e2c6d32",
        "fixCommitParentSHA1": "1bfd2a3176f89ecfae25af2343708f9f2bb1c811",
        "bugFilePath": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java",
        "fixPatch": "diff --git a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\nindex 296483c..5d4619d 100644\n--- a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n+++ b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n@@ -48,26 +48,26 @@\n         Assert.assertEquals(\"timer:foo?period=4999\", details.get(0).getEndpointUri());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumber());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumberEnd());\n-        Assert.assertEquals(1062, details.get(0).getAbsolutePosition());\n+        Assert.assertEquals(1061, details.get(0).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(0).getLinePosition());\n \n         Assert.assertEquals(\"log:a\", details.get(1).getEndpointUri());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumber());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumberEnd());\n-        Assert.assertEquals(1145, details.get(1).getAbsolutePosition());\n+        Assert.assertEquals(1144, details.get(1).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(1).getLinePosition());\n \n         Assert.assertEquals(\"netty4-http:http:someserver:80/hello\", details.get(2).getEndpointUri());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumber());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumberEnd());\n-        Assert.assertEquals(1203, details.get(2).getAbsolutePosition());\n+        Assert.assertEquals(1202, details.get(2).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(2).getLinePosition());\n \n         // spans 2 lines\n         Assert.assertEquals(\"mock:foo?retainFirst=1\", details.get(6).getEndpointUri());\n         Assert.assertEquals(\"45\", details.get(6).getLineNumber());\n         Assert.assertEquals(\"46\", details.get(6).getLineNumberEnd());\n-        Assert.assertEquals(1457, details.get(6).getAbsolutePosition());\n+        Assert.assertEquals(1456, details.get(6).getAbsolutePosition());\n         Assert.assertEquals(17, details.get(6).getLinePosition());\n \n         List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 70,
        "bugNodeStartChar": 3425,
        "bugNodeLength": 63,
        "fixLineNum": 70,
        "fixNodeStartChar": 3425,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Assert.assertEquals(1457,details.get(6).getAbsolutePosition())",
        "sourceAfterFix": "Assert.assertEquals(1456,details.get(6).getAbsolutePosition())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "36f71405ee04602e76844b255e44f146bb476161",
        "fixCommitParentSHA1": "4638b77ab49e0f66e1c07b49ab5ff187afcc0576",
        "bugFilePath": "api/src/test/java/org/openmrs/ConceptNumericTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/ConceptNumericTest.java b/api/src/test/java/org/openmrs/ConceptNumericTest.java\nindex 7342857..5e1e47b 100644\n--- a/api/src/test/java/org/openmrs/ConceptNumericTest.java\n+++ b/api/src/test/java/org/openmrs/ConceptNumericTest.java\n@@ -75,7 +75,7 @@\n \t\tConceptNumeric cn = new ConceptNumeric(c);\r\n \t\t\r\n \t\tfor (ConceptSet cSet : cn.getConceptSets()) {\r\n-\t\t\tAssert.assertSame(cn, cSet.getConcept());\r\n+\t\t\tAssert.assertSame(cn, cSet.getConceptSet());\r\n \t\t}\r\n \t}\r\n \t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 78,
        "bugNodeStartChar": 2946,
        "bugNodeLength": 17,
        "fixLineNum": 78,
        "fixNodeStartChar": 2869,
        "fixNodeLength": 20,
        "sourceBeforeFix": "cSet.getConcept()",
        "sourceAfterFix": "cSet.getConceptSet()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "1edb2ce5f71ca1d719e708f475ce0914b3d7597c",
        "fixCommitParentSHA1": "9eec8df60589da1069885cd56345fe1f3d609859",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java\nindex a7e7b16..a43655a 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java\n@@ -112,11 +112,8 @@\n \n     private static final List<String> UNDOCUMENTED_PROPERTIES = Arrays.asList(\n             \"SuppressWithNearbyCommentFilter.fileContents\",\n-            \"SuppressionCommentFilter.fileContents\",\n-            \"MethodNameCheck.applyToPackage\",\n-            \"MethodNameCheck.applyToPrivate\",\n-            \"MethodNameCheck.applyToProtected\",\n-            \"MethodNameCheck.applyToPublic\");\n+            \"SuppressionCommentFilter.fileContents\"\n+    );\n \n     @Test\n     public void testAllChecksPresentOnAvailableChecksPage() throws IOException {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 113,
        "bugNodeStartChar": 4693,
        "bugNodeLength": 312,
        "fixLineNum": 113,
        "fixNodeStartChar": 4693,
        "fixNodeLength": 132,
        "sourceBeforeFix": "Arrays.asList(\"SuppressWithNearbyCommentFilter.fileContents\",\"SuppressionCommentFilter.fileContents\",\"MethodNameCheck.applyToPackage\",\"MethodNameCheck.applyToPrivate\",\"MethodNameCheck.applyToProtected\",\"MethodNameCheck.applyToPublic\")",
        "sourceAfterFix": "Arrays.asList(\"SuppressWithNearbyCommentFilter.fileContents\",\"SuppressionCommentFilter.fileContents\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c5c423ee77274339c43b42e9c20948f8ad0534e9",
        "fixCommitParentSHA1": "0ec0726a810a02c649c0b94ebe2ffd036f1b5816",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\nindex a9a0017..69a0454 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/mapstore/MapLoaderFailoverTest.java\n@@ -108,7 +108,7 @@\n         assertSizeAndLoadCount(map);\n \n         hz3.getLifecycleService().terminate();\n-        assertClusterSize(2, nodes[0]);\n+        assertClusterSizeEventually(2, nodes[0]);\n         map.loadAll(true);\n \n         assertSizeEventually(MAP_STORE_ENTRY_COUNT, map);\n@@ -132,7 +132,7 @@\n         pausingLoader.awaitPause();\n \n         hz3.getLifecycleService().terminate();\n-        assertClusterSize(2, nodes[0]);\n+        assertClusterSizeEventually(2, nodes[0]);\n \n         pausingLoader.resume();\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 135,
        "bugNodeStartChar": 4947,
        "bugNodeLength": 30,
        "fixLineNum": 135,
        "fixNodeStartChar": 4947,
        "fixNodeLength": 40,
        "sourceBeforeFix": "assertClusterSize(2,nodes[0])",
        "sourceAfterFix": "assertClusterSizeEventually(2,nodes[0])"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "b73b4c73108ed9718f84ff901ff6dfa49ed24cb9",
        "fixCommitParentSHA1": "2faf059ddd9402e9a9e6f40eceae3a1f523d035d",
        "bugFilePath": "src/main/java/org/graylog2/indexer/Indexer.java",
        "fixPatch": "diff --git a/src/main/java/org/graylog2/indexer/Indexer.java b/src/main/java/org/graylog2/indexer/Indexer.java\nindex afaddc7..24a0003 100644\n--- a/src/main/java/org/graylog2/indexer/Indexer.java\n+++ b/src/main/java/org/graylog2/indexer/Indexer.java\n@@ -60,11 +60,12 @@\n         URL url = new URL(Indexer.buildIndexURL());\n         HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n         conn.setRequestMethod(\"HEAD\");\n-        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {\n+        // Older versions of ElasticSearch return 400 Bad Request in cse of an existing index.\n+        if (conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST) {\n             return true;\n         } else {\n             if (conn.getResponseCode() != HttpURLConnection.HTTP_NOT_FOUND) {\n-                LOG.warn(\"Indexer response code was not 200 or 404, but \" + conn.getResponseCode());\n+                LOG.warn(\"Indexer response code was not (200 or 400) or 404, but \" + conn.getResponseCode());\n             }\n \n             return false;\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 63,
        "bugNodeStartChar": 2118,
        "bugNodeLength": 51,
        "fixLineNum": 64,
        "fixNodeStartChar": 2213,
        "fixNodeLength": 115,
        "sourceBeforeFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK",
        "sourceAfterFix": "conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fc319b0ad3b3163f7c20be7900d975fa7b9d59a0",
        "fixCommitParentSHA1": "b0ae186774c86c05b8b598b8386daefb11a58e9d",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/MapTransactionTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/MapTransactionTest.java b/hazelcast/src/test/java/com/hazelcast/map/MapTransactionTest.java\nindex 5c51100..866c716 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/MapTransactionTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/MapTransactionTest.java\n@@ -581,7 +581,7 @@\n                     final TransactionalMap<Object, Object> txMap = context.getMap(\"default\");\n                     txMap.put(\"5\", \"5\");\n                     assertEquals(3, txMap.keySet().size());\n-                    assertEquals(3, map2.keySet().size());\n+                    assertEquals(2, map2.keySet().size());\n \n                     throw new DummyUncheckedHazelcastTestException();\n                 }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 584,
        "bugNodeStartChar": 24555,
        "bugNodeLength": 37,
        "fixLineNum": 584,
        "fixNodeStartChar": 24555,
        "fixNodeLength": 37,
        "sourceBeforeFix": "assertEquals(3,map2.keySet().size())",
        "sourceAfterFix": "assertEquals(2,map2.keySet().size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "259a3493240c75dbde813d01445692847f2af772",
        "fixCommitParentSHA1": "7479653f6f237e52bee05838b36f2f47aa8bfd62",
        "bugFilePath": "dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java",
        "fixPatch": "diff --git a/dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java b/dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java\nindex ee2445b..bafb9b4 100644\n--- a/dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java\n+++ b/dex-tools/src/main/java/com/googlecode/dex2jar/tools/StdApkCmd.java\n@@ -59,7 +59,7 @@\n                 if (!nEntry.isDirectory()) {\n                     try (InputStream is = zipFile.getInputStream(e)) {\n                         while (true) {\n-                            int c = is.read(data);\n+                            int c = is.read(buffer);\n                             if (c < 0) {\n                                 break;\n                             }\n",
        "projectName": "pxb1988.dex2jar",
        "bugLineNum": 62,
        "bugNodeStartChar": 2491,
        "bugNodeLength": 13,
        "fixLineNum": 62,
        "fixNodeStartChar": 2491,
        "fixNodeLength": 15,
        "sourceBeforeFix": "is.read(data)",
        "sourceAfterFix": "is.read(buffer)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ba753282c681f55ff64cce2bbb9e545f5992b1ac",
        "fixCommitParentSHA1": "1bfa069d3781ed858f54055ef2cc8f2d1bf5c18c",
        "bugFilePath": "metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java",
        "fixPatch": "diff --git a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\nindex 8d38ad4..98ffe2f 100644\n--- a/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n+++ b/metrics-core/src/main/java/com/yammer/metrics/stats/ExponentiallyDecayingSample.java\n@@ -55,7 +55,7 @@\n             this.startTime = tick();\n             nextScaleTime.set(System.nanoTime() + RESCALE_THRESHOLD);\n         } finally {\n-            lockForRescale();\n+            unlockForRescale();\n         }\n     }\n \n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 58,
        "bugNodeStartChar": 2314,
        "bugNodeLength": 16,
        "fixLineNum": 58,
        "fixNodeStartChar": 2314,
        "fixNodeLength": 18,
        "sourceBeforeFix": "lockForRescale()",
        "sourceAfterFix": "unlockForRescale()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b321e8aadca131d89c08bc5e4fc8ee76ac302933",
        "fixCommitParentSHA1": "f38aa29944527b56013694ab4751f99abca463af",
        "bugFilePath": "guava/src/com/google/common/net/MediaType.java",
        "fixPatch": "diff --git a/guava/src/com/google/common/net/MediaType.java b/guava/src/com/google/common/net/MediaType.java\nindex 0a2957d..754482b 100644\n--- a/guava/src/com/google/common/net/MediaType.java\n+++ b/guava/src/com/google/common/net/MediaType.java\n@@ -615,7 +615,7 @@\n       }\n       return create(type, subtype, parameters.build());\n     } catch (IllegalStateException e) {\n-      throw new IllegalArgumentException(e);\n+      throw new IllegalArgumentException(\"Could not parse '\" + input + \"'\", e);\n     }\n   }\n \n",
        "projectName": "google.guava",
        "bugLineNum": 618,
        "bugNodeStartChar": 29315,
        "bugNodeLength": 31,
        "fixLineNum": 618,
        "fixNodeStartChar": 29315,
        "fixNodeLength": 66,
        "sourceBeforeFix": "new IllegalArgumentException(e)",
        "sourceAfterFix": "new IllegalArgumentException(\"Could not parse '\" + input + \"'\",e)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ea36259d22c518ae70f5eb951123c74351be48b6",
        "fixCommitParentSHA1": "de3a4990283f0c543f65b25e3e323c1045dc5025",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapLockTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapLockTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapLockTest.java\nindex f6a49f8..8ac8fa4 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapLockTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/map/ClientMapLockTest.java\n@@ -436,12 +436,12 @@\n         final String newValue = \"NEW_VALUE\";\n \n         map.put(key, oldValue);\n-        map.lock(key, 4, TimeUnit.SECONDS);\n+        map.lock(key, 1, TimeUnit.SECONDS);\n \n         final CountDownLatch tryPutReturned = new CountDownLatch(1);\n         new Thread() {\n             public void run() {\n-                map.tryPut(key, newValue, 8, TimeUnit.SECONDS);\n+                map.tryPut(key, newValue, 60, TimeUnit.SECONDS);\n                 tryPutReturned.countDown();\n             }\n         }.start();\n@@ -456,12 +456,12 @@\n         final String key = \"key\";\n         final String value = \"value\";\n \n-        map.lock(key, 4, TimeUnit.SECONDS);\n+        map.lock(key, 1, TimeUnit.SECONDS);\n \n         final CountDownLatch tryPutReturned = new CountDownLatch(1);\n         new Thread() {\n             public void run() {\n-                map.tryPut(key, value, 8, TimeUnit.SECONDS);\n+                map.tryPut(key, value, 60, TimeUnit.SECONDS);\n                 tryPutReturned.countDown();\n             }\n         }.start();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 444,
        "bugNodeStartChar": 13665,
        "bugNodeLength": 46,
        "fixLineNum": 444,
        "fixNodeStartChar": 13665,
        "fixNodeLength": 47,
        "sourceBeforeFix": "map.tryPut(key,newValue,8,TimeUnit.SECONDS)",
        "sourceAfterFix": "map.tryPut(key,newValue,60,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bfffe6afb376df07702965da9106062f5fa47e22",
        "fixCommitParentSHA1": "be13ae3f79efb90e3d1832b21984edf45a73f3df",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\nindex 833afdd..b780e41 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java\n@@ -59,7 +59,7 @@\n                 dataSizeSessionProperty(\n                         ORC_STREAM_BUFFER_SIZE,\n                         \"ORC: Size of buffer for streaming reads\",\n-                        config.getOrcMaxBufferSize(),\n+                        config.getOrcStreamBufferSize(),\n                         false),\n                 booleanSessionProperty(\n                         PARQUET_OPTIMIZED_READER_ENABLED,\n",
        "projectName": "facebook.presto",
        "bugLineNum": 62,
        "bugNodeStartChar": 2795,
        "bugNodeLength": 28,
        "fixLineNum": 62,
        "fixNodeStartChar": 2795,
        "fixNodeLength": 31,
        "sourceBeforeFix": "config.getOrcMaxBufferSize()",
        "sourceAfterFix": "config.getOrcStreamBufferSize()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c131546eaadd07baf950bd6a44d07ee42d109e4c",
        "fixCommitParentSHA1": "c27e2a77005db355da9e72656af8b0df8b1dfe75",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/JobManagerRunner.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/JobManagerRunner.java b/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/JobManagerRunner.java\nindex 5740bd7..4269243 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/JobManagerRunner.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/JobManagerRunner.java\n@@ -225,10 +225,10 @@\n \n \t\t\t\tjobManager.shutDown();\n \n-\t\t\t\tfinal CompletableFuture<Boolean> jobManagerTerminationFuture = jobManager.getTerminationFuture();\n+\t\t\t\tfinal CompletableFuture<Void> jobManagerTerminationFuture = jobManager.getTerminationFuture();\n \n \t\t\t\tjobManagerTerminationFuture.whenComplete(\n-\t\t\t\t\t(Boolean ignored, Throwable throwable) -> {\n+\t\t\t\t\t(Void ignored, Throwable throwable) -> {\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tleaderElectionService.stop();\n \t\t\t\t\t\t} catch (Throwable t) {\n",
        "projectName": "apache.flink",
        "bugLineNum": 228,
        "bugNodeStartChar": 8529,
        "bugNodeLength": 26,
        "fixLineNum": 228,
        "fixNodeStartChar": 8529,
        "fixNodeLength": 23,
        "sourceBeforeFix": "CompletableFuture<Boolean>",
        "sourceAfterFix": "CompletableFuture<Void>"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "f59da66a15b2ee188834a85d8d38ae2777f8e05f",
        "fixCommitParentSHA1": "51b7aa7f5000628ad4f4b4c05075a646c1022794",
        "bugFilePath": "src/api/org/openmrs/api/impl/UserServiceImpl.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/api/impl/UserServiceImpl.java b/src/api/org/openmrs/api/impl/UserServiceImpl.java\nindex 6b7b215..ac5b089 100644\n--- a/src/api/org/openmrs/api/impl/UserServiceImpl.java\n+++ b/src/api/org/openmrs/api/impl/UserServiceImpl.java\n@@ -428,7 +428,7 @@\n \t */\r\n \tpublic User setUserProperty(User user, String key, String value) {\r\n \t\tif (user != null) {\r\n-\t\t\tif (!user.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS) && !user.equals(Context.getAuthenticatedUser()))\r\n+\t\t\tif (!Context.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS) && !user.equals(Context.getAuthenticatedUser()))\r\n \t\t\t\tthrow new APIException(\"You are not authorized to change \" + user.getUserId() + \"'s properties\");\r\n \t\t\t\r\n \t\t\tuser.setUserProperty(key, value);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 431,
        "bugNodeStartChar": 13060,
        "bugNodeLength": 51,
        "fixLineNum": 431,
        "fixNodeStartChar": 12630,
        "fixNodeLength": 54,
        "sourceBeforeFix": "user.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS)",
        "sourceAfterFix": "Context.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "cade2271924f42b35da72efa4ad6b2eebc9875cd",
        "fixCommitParentSHA1": "d45561c1b3bf0e4a44a768407131a2fb2093efe9",
        "bugFilePath": "src/edu/stanford/nlp/international/spanish/SpanishVerbStripper.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/international/spanish/SpanishVerbStripper.java b/src/edu/stanford/nlp/international/spanish/SpanishVerbStripper.java\nindex 59df89a..72aa237 100644\n--- a/src/edu/stanford/nlp/international/spanish/SpanishVerbStripper.java\n+++ b/src/edu/stanford/nlp/international/spanish/SpanishVerbStripper.java\n@@ -73,7 +73,7 @@\n    *\n    * @param dictPath the path to the dictionary file\n    */\n-  private HashMap<String, String> setupDictionary(String dictPath) {\n+  private static HashMap<String, String> setupDictionary(String dictPath) {\n     HashMap<String, String> dictionary = new HashMap<>();\n     BufferedReader br = null;\n     try {\n@@ -83,7 +83,7 @@\n         if (words.length < 3) {\n           System.err.printf(\"SpanishVerbStripper: adding words to dict, missing fields, ignoring line: %s%n\", line);\n         } else {\n-          dict.put(words[0], words[2]);\n+          dictionary.put(words[0], words[2]);\n         }\n       }\n     } catch (UnsupportedEncodingException e) {\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 86,
        "bugNodeStartChar": 2931,
        "bugNodeLength": 28,
        "fixLineNum": 86,
        "fixNodeStartChar": 2931,
        "fixNodeLength": 34,
        "sourceBeforeFix": "dict.put(words[0],words[2])",
        "sourceAfterFix": "dictionary.put(words[0],words[2])"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "055f6dc3eb8705dbbfb04e44965a85cbfc0b10db",
        "fixCommitParentSHA1": "1b40386d39d7848eff0d1e6cec7fa17a96ef4f6e",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet.java b/flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet.java\nindex 961a464..ffb0dd4 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/jobmanager/web/JobManagerInfoServlet.java\n@@ -127,10 +127,10 @@\n \t\t\t\t\tthrow new RuntimeException(\"RequestJob requires a response of type JobResponse. \" +\n \t\t\t\t\t\t\t\"Instead the response is of type \" + result.getClass());\n \t\t\t\t}else {\n-\t\t\t\t\tfinal JobResponse jobResponse = (JobResponse) response;\n+\t\t\t\t\tfinal JobResponse jobResponse = (JobResponse) result;\n \n \t\t\t\t\tif(jobResponse instanceof JobFound){\n-\t\t\t\t\t\tExecutionGraph archivedJob = ((JobFound)response).executionGraph();\n+\t\t\t\t\t\tExecutionGraph archivedJob = ((JobFound)result).executionGraph();\n \t\t\t\t\t\twriteJsonForArchivedJob(resp.getWriter(), archivedJob);\n \t\t\t\t} else {\n \t\t\t\t\t\tLOG.warn(\"DoGet:job: Could not find job for job ID \" + jobId);\n",
        "projectName": "apache.flink",
        "bugLineNum": 130,
        "bugNodeStartChar": 4998,
        "bugNodeLength": 22,
        "fixLineNum": 130,
        "fixNodeStartChar": 4998,
        "fixNodeLength": 20,
        "sourceBeforeFix": "(JobResponse)response",
        "sourceAfterFix": "(JobResponse)result"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "cd0fa34a73bfd38b133fc0e1a28f4d26b947cfc7",
        "fixCommitParentSHA1": "9d80369c2b6a23e183604ba0094afaa6f27b9019",
        "bugFilePath": "server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java b/server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java\nindex 1befc1d..0740be8 100644\n--- a/server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java\n+++ b/server/src/main/java/com/metamx/druid/coordination/ZkCoordinator.java\n@@ -261,7 +261,7 @@\n       announcer.unannounceSegment(segment);\n     }\n     catch (Exception e) {\n-      log.makeAlert(\"Failed to remove segment\")\n+      log.makeAlert(e, \"Failed to remove segment\")\n           .addData(\"segment\", segment)\n           .emit();\n     }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 264,
        "bugNodeStartChar": 8587,
        "bugNodeLength": 41,
        "fixLineNum": 264,
        "fixNodeStartChar": 8587,
        "fixNodeLength": 44,
        "sourceBeforeFix": "log.makeAlert(\"Failed to remove segment\")",
        "sourceAfterFix": "log.makeAlert(e,\"Failed to remove segment\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a8513817db3153d638e818e9a27b0e2e1eed3bdc",
        "fixCommitParentSHA1": "837f3362ccd3f1802d545cd4e339899f184e5b69",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbIIOPDeploymentUnitProcessor.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbIIOPDeploymentUnitProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbIIOPDeploymentUnitProcessor.java\nindex 885db0a..8bb9a3b 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbIIOPDeploymentUnitProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/EjbIIOPDeploymentUnitProcessor.java\n@@ -193,11 +193,11 @@\n             beanMethodMap.put(op.getIDLName(), new SkeletonStrategy(method));\n             final OperationAnalysis setop = remoteAttrs[i].getMutatorAnalysis();\n             if (setop != null) {\n-                logger.debug(\"    \" + op.getJavaName() + \"\\n                \" + op.getIDLName());\n+                logger.debug(\"    \" + setop.getJavaName() + \"\\n                \" + setop.getIDLName());\n                 //translate to the deployment reflection index method\n                 //TODO: this needs to be fixed so it just returns the correct method\n                 final Method realSetmethod = translateMethod(deploymentReflectionIndex, setop);\n-                beanMethodMap.put(op.getIDLName(), new SkeletonStrategy(realSetmethod));\n+                beanMethodMap.put(setop.getIDLName(), new SkeletonStrategy(realSetmethod));\n             }\n         }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 200,
        "bugNodeStartChar": 10448,
        "bugNodeLength": 15,
        "fixLineNum": 200,
        "fixNodeStartChar": 10448,
        "fixNodeLength": 18,
        "sourceBeforeFix": "op.getIDLName()",
        "sourceAfterFix": "setop.getIDLName()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "615135aaa2ec18ea6c0b4785749079df4db5fd7a",
        "fixCommitParentSHA1": "714b96163228743244ba3f6341a676cff8895467",
        "bugFilePath": "jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java",
        "fixPatch": "diff --git a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\nindex 00d2edb..fdef319 100644\n--- a/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n+++ b/jsonschema2pojo-cli/src/test/java/org/jsonschema2pojo/cli/ArgumentsTest.java\n@@ -55,7 +55,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -72,7 +72,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(\"mypackage\"));\n         assertThat(args.isGenerateBuilders(), is(true));\n@@ -98,7 +98,7 @@\n         });\n \n         assertThat(args.didExit(), is(false));\n-        assertThat(args.getSource().next().getFile(), is(\"/home/source\"));\n+        assertThat(args.getSource().next().getFile(), endsWith(\"/home/source\"));\n         assertThat(args.getTargetDirectory(), is(theFile(\"/home/target\")));\n         assertThat(args.getTargetPackage(), is(nullValue()));\n         assertThat(args.isGenerateBuilders(), is(false));\n",
        "projectName": "joelittlejohn.jsonschema2pojo",
        "bugLineNum": 101,
        "bugNodeStartChar": 3968,
        "bugNodeLength": 18,
        "fixLineNum": 101,
        "fixNodeStartChar": 3968,
        "fixNodeLength": 24,
        "sourceBeforeFix": "is(\"/home/source\")",
        "sourceAfterFix": "endsWith(\"/home/source\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c047e252cc73596c519e538bd6de13c24350d09b",
        "fixCommitParentSHA1": "a6e2fa562e31f2168cc79ced85d9365aa6e9cecd",
        "bugFilePath": "components/camel-cxf/src/main/java/org/apache/camel/component/cxf/jaxrs/DefaultCxfRsBinding.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/jaxrs/DefaultCxfRsBinding.java b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/jaxrs/DefaultCxfRsBinding.java\nindex e31cdac..867536f 100644\n--- a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/jaxrs/DefaultCxfRsBinding.java\n+++ b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/jaxrs/DefaultCxfRsBinding.java\n@@ -263,7 +263,7 @@\n         Map<String, List<String>> headers = (Map<String, List<String>>)cxfMessage.get(org.apache.cxf.message.Message.PROTOCOL_HEADERS);\n         for (Map.Entry<String, List<String>>entry : headers.entrySet()) {\n             // just make sure the first String element is not null\n-            if (headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(), entry.getValue(), camelExchange) \n+            if (headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), entry.getValue(), camelExchange) \n                 || entry.getValue().get(0) == null) {\n                 LOG.trace(\"Drop CXF message protocol header: {}={}\", entry.getKey(), entry.getValue());\n             } else {\n",
        "projectName": "apache.camel",
        "bugLineNum": 266,
        "bugNodeStartChar": 12031,
        "bugNodeLength": 95,
        "fixLineNum": 266,
        "fixNodeStartChar": 12031,
        "fixNodeLength": 98,
        "sourceBeforeFix": "headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange)",
        "sourceAfterFix": "headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e896f6d400c7ad946141adbf7317df7c680fcdc6",
        "fixCommitParentSHA1": "1f2aadb80dacd061a2816d32a232db8bb5d54cb1",
        "bugFilePath": "src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java b/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\nindex 1647b02..a406839 100644\n--- a/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\n+++ b/src/main/java/org/apache/hadoop/hbase/mapreduce/TableRecordReaderImpl.java\n@@ -174,7 +174,7 @@\n     } catch (DoNotRetryIOException e) {\n       throw e;\n     } catch (IOException e) {\n-      LOG.debug(\"recovered from \" + StringUtils.stringifyException(e));\n+      LOG.info(\"recovered from \" + StringUtils.stringifyException(e));\n       if (lastSuccessfulRow == null) {\n         LOG.warn(\"We are restarting the first next() invocation,\" +\n             \" if your mapper's restarted a few other times like this\" +\n",
        "projectName": "apache.hbase",
        "bugLineNum": 177,
        "bugNodeStartChar": 5533,
        "bugNodeLength": 64,
        "fixLineNum": 177,
        "fixNodeStartChar": 5533,
        "fixNodeLength": 63,
        "sourceBeforeFix": "LOG.debug(\"recovered from \" + StringUtils.stringifyException(e))",
        "sourceAfterFix": "LOG.info(\"recovered from \" + StringUtils.stringifyException(e))"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "40f3ba0f619f5bac94bb32f6d5746117627dddb6",
        "fixCommitParentSHA1": "fd32a9faab9426e7b2f607e9ccfce9e204bfe661",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\nindex 9a8bacb..19219c5 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/executor/ClientExecutorServiceSubmitTest.java\n@@ -585,7 +585,7 @@\n             }\n         });\n \n-        assertOpenEventually(\"responseLatch\", responseLatch, 5);\n+        assertOpenEventually(\"responseLatch\", responseLatch);\n         assertEquals(msg + AppendCallable.APPENDAGE, result.get());\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 588,
        "bugNodeStartChar": 21784,
        "bugNodeLength": 55,
        "fixLineNum": 588,
        "fixNodeStartChar": 21784,
        "fixNodeLength": 52,
        "sourceBeforeFix": "assertOpenEventually(\"responseLatch\",responseLatch,5)",
        "sourceAfterFix": "assertOpenEventually(\"responseLatch\",responseLatch)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8f1349d4f3fb6affc967663a8c8032535735585a",
        "fixCommitParentSHA1": "7274d19d3eaeb4bc1ef2a16c0ac08e7447a27003",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java b/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\nindex 6a556cf..aa0ce64 100644\n--- a/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\n@@ -10,7 +10,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class ListBasicLocalTest extends ListBasicTest {\n+public class ListBasicLocalTest extends ListAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances(Config config) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 11,
        "bugNodeStartChar": 366,
        "bugNodeLength": 307,
        "fixLineNum": 11,
        "fixNodeStartChar": 366,
        "fixNodeLength": 310,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicLocalTest extends ListBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicLocalTest extends ListAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9908f3ec100099ff16b02aebfd3ee0137080006d",
        "fixCommitParentSHA1": "c71e0529883d73094e30ce2f9e864f6abb60eb2d",
        "bugFilePath": "providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java",
        "fixPatch": "diff --git a/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java b/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\nindex 1291eb0..201a377 100644\n--- a/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n+++ b/providers/apache/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n@@ -345,7 +345,7 @@\n \n             if (proxyServer.getPrincipal() != null) {\n                 Credentials defaultcreds = new UsernamePasswordCredentials(proxyServer.getPrincipal(), proxyServer.getPassword());\n-                client.getState().setCredentials(new AuthScope(null, -1, AuthScope.ANY_REALM), defaultcreds);\n+                client.getState().setProxyCredentials(new AuthScope(null, -1, AuthScope.ANY_REALM), defaultcreds);\n             }\n \n             ProxyHost proxyHost = proxyServer == null ? null : new ProxyHost(proxyServer.getHost(), proxyServer.getPort());\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 348,
        "bugNodeStartChar": 16984,
        "bugNodeLength": 92,
        "fixLineNum": 348,
        "fixNodeStartChar": 16984,
        "fixNodeLength": 97,
        "sourceBeforeFix": "client.getState().setCredentials(new AuthScope(null,-1,AuthScope.ANY_REALM),defaultcreds)",
        "sourceAfterFix": "client.getState().setProxyCredentials(new AuthScope(null,-1,AuthScope.ANY_REALM),defaultcreds)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a04df35fd9c932531fce2ebd85de52812a038b13",
        "fixCommitParentSHA1": "a641e82bef611b82380729f35ccd86dafeadf1da",
        "bugFilePath": "core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\nindex 7062e2a..1cdfda1 100644\n--- a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n+++ b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n@@ -258,7 +258,7 @@\n       client.getOutputProtocol().getTransport().close();\n       throw new IOException(e);\n     } finally {\n-      BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress, client);\n+      BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress, client);\n     }\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 261,
        "bugNodeStartChar": 9311,
        "bugNodeLength": 69,
        "fixLineNum": 261,
        "fixNodeStartChar": 9311,
        "fixNodeLength": 78,
        "sourceBeforeFix": "BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress,client)",
        "sourceAfterFix": "BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress,client)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "de8f91ad67b9881afc9f5af9cf9736b341bc3fbf",
        "fixCommitParentSHA1": "e6faf188e28b2ee83d5715d28c9a047301ff9a4b",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java\nindex c5ba375..89230f6 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java\n@@ -81,7 +81,7 @@\n         final int stringNumber =\n                 UniquePropertiesCheck.getLineNumber(testStrings,\n                         \"some key\");\n-        Assert.assertEquals(stringNumber, 0);\n+        Assert.assertEquals(0, stringNumber);\n     }\n \n     /**\n@@ -97,12 +97,12 @@\n         final SortedSet<LocalizedMessage> messages =\n                 check.process(file, Collections.<String>emptyList());\n         Assert.assertEquals(\"Wrong messages count: \" + messages.size(),\n-                messages.size(), 1);\n+                1, messages.size());\n         final LocalizedMessage message = messages.iterator().next();\n         final String retrievedMessage = messages.iterator().next().getKey();\n         Assert.assertEquals(\"Message key '\" + retrievedMessage\n-                + \"' is not valid\", retrievedMessage,\n-                \"unable.open.cause\");\n+                + \"' is not valid\", \"unable.open.cause\",\n+                retrievedMessage);\n         Assert.assertEquals(\"Message '\" + message.getMessage()\n                 + \"' is not valid\", message.getMessage(),\n                 getCheckMessage(IO_EXCEPTION_KEY, fileName, getFileNotFoundDetail(file)));\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 103,
        "bugNodeStartChar": 4061,
        "bugNodeLength": 145,
        "fixLineNum": 103,
        "fixNodeStartChar": 4061,
        "fixNodeLength": 145,
        "sourceBeforeFix": "Assert.assertEquals(\"Message key '\" + retrievedMessage + \"' is not valid\",retrievedMessage,\"unable.open.cause\")",
        "sourceAfterFix": "Assert.assertEquals(\"Message key '\" + retrievedMessage + \"' is not valid\",\"unable.open.cause\",retrievedMessage)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1b6db95bb43cfe3f3ac92f55f96cd35fff73317a",
        "fixCommitParentSHA1": "e6e1a276f58b1e843033b6bffb927d2afb8e8c36",
        "bugFilePath": "src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\nindex 206b355..d004cc5 100644\n--- a/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n+++ b/src/test/java/com/alibaba/druid/bvt/pool/basic/PoolableCallableStatementTest.java\n@@ -40,12 +40,12 @@\n             }\r\n         };\r\n \r\n-        Assert.assertEquals(0, raw.getParameters().size());\r\n+        Assert.assertEquals(0, raw.getOutParameters().size());\r\n         stmt.registerOutParameter(1, Types.INTEGER);\r\n-        Assert.assertEquals(1, raw.getParameters().size());\r\n+        Assert.assertEquals(1, raw.getOutParameters().size());\r\n \r\n         stmt.registerOutParameter(2, Types.DECIMAL, 10);\r\n-        Assert.assertEquals(2, raw.getParameters().size());\r\n+        Assert.assertEquals(2, raw.getOutParameters().size());\r\n     }\r\n \r\n     public void test_basic() throws Exception {\r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 45,
        "bugNodeStartChar": 1564,
        "bugNodeLength": 19,
        "fixLineNum": 45,
        "fixNodeStartChar": 1520,
        "fixNodeLength": 22,
        "sourceBeforeFix": "raw.getParameters()",
        "sourceAfterFix": "raw.getOutParameters()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5755cf96d1689e1eda7dd2d7e03f1eff3bf5a074",
        "fixCommitParentSHA1": "ddda7e5bae297e7f3c356a35d29134015262bb49",
        "bugFilePath": "src/main/java/spark/ExceptionHandlerImpl.java",
        "fixPatch": "diff --git a/src/main/java/spark/ExceptionHandlerImpl.java b/src/main/java/spark/ExceptionHandlerImpl.java\nindex 30e1136..d50c68d 100644\n--- a/src/main/java/spark/ExceptionHandlerImpl.java\n+++ b/src/main/java/spark/ExceptionHandlerImpl.java\n@@ -16,18 +16,19 @@\n  */\n package spark;\n \n-public abstract class ExceptionHandlerImpl implements ExceptionHandler {\n+public abstract class ExceptionHandlerImpl<T extends Exception> implements ExceptionHandler<T> {\n+\n     /**\n      * Holds the type of exception that this filter will handle\n      */\n-    protected Class<? extends Exception> exceptionClass;\n+    protected Class<? extends T> exceptionClass;\n \n     /**\n      * Initializes the filter with the provided exception type\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public ExceptionHandlerImpl(Class<? extends Exception> exceptionClass) {\n+    public ExceptionHandlerImpl(Class<T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -36,7 +37,7 @@\n      *\n      * @return Type of exception\n      */\n-    public Class<? extends Exception> exceptionClass() {\n+    public Class<? extends T> exceptionClass() {\n         return this.exceptionClass;\n     }\n \n@@ -45,7 +46,7 @@\n      *\n      * @param exceptionClass Type of exception\n      */\n-    public void exceptionClass(Class<? extends Exception> exceptionClass) {\n+    public void exceptionClass(Class<? extends T> exceptionClass) {\n         this.exceptionClass = exceptionClass;\n     }\n \n@@ -56,5 +57,5 @@\n      * @param request   The request object providing information about the HTTP request\n      * @param response  The response object providing functionality for modifying the response\n      */\n-    public abstract void handle(Exception exception, Request request, Response response);\n+    public abstract void handle(T exception, Request request, Response response);\n }\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 48,
        "bugNodeStartChar": 1480,
        "bugNodeLength": 19,
        "fixLineNum": 48,
        "fixNodeStartChar": 1480,
        "fixNodeLength": 11,
        "sourceBeforeFix": "? extends Exception",
        "sourceAfterFix": "? extends T"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 66,
        "bugNodeStartChar": 2706,
        "bugNodeLength": 40,
        "fixLineNum": 66,
        "fixNodeStartChar": 2706,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1f6258f535f114b88d9be038ffbcf23f7621dba3",
        "fixCommitParentSHA1": "a4bb56b93b9e1cf9a9f9cca787f0a821a1bdea26",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiverServer.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiverServer.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiverServer.java\nindex a1f766d..9bf95eb 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiverServer.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataXceiverServer.java\n@@ -161,7 +161,7 @@\n         // DataNode can run out of memory if there is too many transfers.\n         // Log the event, Sleep for 30 seconds, other transfers may complete by\n         // then.\n-        LOG.warn(\"DataNode is out of memory. Will retry in 30 seconds.\", ie);\n+        LOG.error(\"DataNode is out of memory. Will retry in 30 seconds.\", ie);\n         try {\n           Thread.sleep(30 * 1000);\n         } catch (InterruptedException e) {\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 164,
        "bugNodeStartChar": 6072,
        "bugNodeLength": 68,
        "fixLineNum": 164,
        "fixNodeStartChar": 6072,
        "fixNodeLength": 69,
        "sourceBeforeFix": "LOG.warn(\"DataNode is out of memory. Will retry in 30 seconds.\",ie)",
        "sourceAfterFix": "LOG.error(\"DataNode is out of memory. Will retry in 30 seconds.\",ie)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ObjectSet.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\nindex 126fda7..565058a 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ObjectSet.java\n@@ -61,7 +61,7 @@\n \t * before growing the backing table. */\n \tpublic ObjectSet (int initialCapacity, float loadFactor) {\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\n \n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 64,
        "bugNodeStartChar": 2644,
        "bugNodeLength": 18,
        "fixLineNum": 64,
        "fixNodeStartChar": 2644,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "514398e8c8316d890034adffbfbaf2fc0208d9e2",
        "fixCommitParentSHA1": "7bc18638710c7b568ea969b530b08fc73ee392ce",
        "bugFilePath": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\nindex f166463..5342026 100644\n--- a/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\n+++ b/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java\n@@ -348,7 +348,7 @@\n \t\t\tDeploymentInfo deployment, ServletContextInitializer... initializers) {\n \t\tServletContextInitializer[] mergedInitializers = mergeInitializers(initializers);\n \t\tInitializer initializer = new Initializer(mergedInitializers);\n-\t\tdeployment.addServletContainerInitalizer(new ServletContainerInitializerInfo(\n+\t\tdeployment.addServletContainerInitializer(new ServletContainerInitializerInfo(\n \t\t\t\tInitializer.class,\n \t\t\t\tnew ImmediateInstanceFactory<ServletContainerInitializer>(initializer),\n \t\t\t\tNO_CLASSES));\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 351,
        "bugNodeStartChar": 12613,
        "bugNodeLength": 193,
        "fixLineNum": 351,
        "fixNodeStartChar": 12613,
        "fixNodeLength": 194,
        "sourceBeforeFix": "deployment.addServletContainerInitalizer(new ServletContainerInitializerInfo(Initializer.class,new ImmediateInstanceFactory<ServletContainerInitializer>(initializer),NO_CLASSES))",
        "sourceAfterFix": "deployment.addServletContainerInitializer(new ServletContainerInitializerInfo(Initializer.class,new ImmediateInstanceFactory<ServletContainerInitializer>(initializer),NO_CLASSES))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8f7d75074fcb38c9ab2d3d9b39343c98bc27eb79",
        "fixCommitParentSHA1": "1faf832adacd24e7b394b3ecf4c6073204e1c279",
        "bugFilePath": "src/com/google/javascript/jscomp/ClosureCheckModule.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/ClosureCheckModule.java b/src/com/google/javascript/jscomp/ClosureCheckModule.java\nindex a809416..f95a0bb 100644\n--- a/src/com/google/javascript/jscomp/ClosureCheckModule.java\n+++ b/src/com/google/javascript/jscomp/ClosureCheckModule.java\n@@ -45,9 +45,8 @@\n           \"@export is not allowed here in a non-legacy goog.module.\"\n           + \" Consider using goog.exportSymbol instead.\");\n \n-  // TODO(tbreisacher): Make this an error when existing violations are fixed.\n   static final DiagnosticType GOOG_MODULE_IN_NON_MODULE =\n-      DiagnosticType.disabled(\n+      DiagnosticType.error(\n           \"JSC_GOOG_MODULE_IN_NON_MODULE\",\n           \"goog.module() call must be the first statement in a module.\");\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 50,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 140,
        "fixLineNum": 50,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 137,
        "sourceBeforeFix": "DiagnosticType.disabled(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_GOOG_MODULE_IN_NON_MODULE\",\"goog.module() call must be the first statement in a module.\")"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "7e00d8df5cbf268a8b13544d2a132f84166fe033",
        "fixCommitParentSHA1": "3c69ee4ccfbfbef1c3abf8e1fe91d6d79b30c16a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\nindex 5355448..409731d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\n@@ -296,12 +296,12 @@\n         for (;;) {\n             long nanos = removeTimeTakenNanos;\n             if (nanos <= Long.MAX_VALUE - duration) {\n-                if (REMOVALS_UPDATER.compareAndSet(this, nanos, nanos + duration)) {\n+                if (REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this, nanos, nanos + duration)) {\n                     return;\n                 }\n             } else {\n                 //counter full. Just reset.\n-                if (REMOVALS_UPDATER.compareAndSet(this, nanos, duration)) {\n+                if (REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this, nanos, duration)) {\n                     clear();\n                     return;\n                 }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 299,
        "bugNodeStartChar": 9941,
        "bugNodeLength": 61,
        "fixLineNum": 299,
        "fixNodeStartChar": 9941,
        "fixNodeLength": 76,
        "sourceBeforeFix": "REMOVALS_UPDATER.compareAndSet(this,nanos,nanos + duration)",
        "sourceAfterFix": "REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this,nanos,nanos + duration)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "8c68c5a3ae4d3d907528b64ec4b3daa5512d4be6",
        "fixCommitParentSHA1": "b32316b33cad851a8e22b5bd4cbe1de2485f1416",
        "bugFilePath": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java",
        "fixPatch": "diff --git a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\nindex 4a9cebd..390ca3d 100644\n--- a/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\n+++ b/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java\n@@ -123,7 +123,7 @@\n                 // * The user called Channel.read() or ChannelHandlerContext.read() in channelReadComplete(...) method\n                 //\n                 // See https://github.com/netty/netty/issues/2254\n-                if (config.isAutoRead() && !readPending) {\n+                if (!config.isAutoRead() && !readPending) {\n                     clearEpollIn();\n                 }\n             }\n",
        "projectName": "netty.netty",
        "bugLineNum": 126,
        "bugNodeStartChar": 4593,
        "bugNodeLength": 19,
        "fixLineNum": 126,
        "fixNodeStartChar": 4593,
        "fixNodeLength": 20,
        "sourceBeforeFix": "config.isAutoRead()",
        "sourceAfterFix": "!config.isAutoRead()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "543b5347b10c30dcb7f3381a5ad887babd499a3e",
        "fixCommitParentSHA1": "48e77d65c60772ad50c7459401021bce60ae3629",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\nindex d90b4ea..6432f3c 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java\n@@ -61,9 +61,9 @@\n     private static final Set<String> ALLOWED_TAGS = ImmutableSortedSet.of(\n             \"a\", \"abbr\", \"acronym\", \"address\", \"area\", \"b\", \"bdo\", \"big\",\n             \"blockquote\", \"br\", \"caption\", \"cite\", \"code\", \"colgroup\", \"dd\",\n-            \"del\", \"div\", \"dfn\", \"dl\", \"dt\", \"em\", \"fieldset\", \"h1\", \"h2\",\n-            \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"i\", \"img\", \"ins\", \"kbd\", \"li\",\n-            \"ol\", \"p\", \"pre\", \"q\", \"samp\", \"small\", \"span\", \"strong\",\n+            \"del\", \"div\", \"dfn\", \"dl\", \"dt\", \"em\", \"fieldset\", \"font\", \"h1\",\n+            \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"i\", \"img\", \"ins\", \"kbd\",\n+            \"li\", \"ol\", \"p\", \"pre\", \"q\", \"samp\", \"small\", \"span\", \"strong\",\n             \"style\", \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\",\n             \"thead\", \"tr\", \"tt\", \"ul\");\n \n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 61,
        "bugNodeStartChar": 2637,
        "bugNodeLength": 505,
        "fixLineNum": 61,
        "fixNodeStartChar": 2637,
        "fixNodeLength": 513,
        "sourceBeforeFix": "ImmutableSortedSet.of(\"a\",\"abbr\",\"acronym\",\"address\",\"area\",\"b\",\"bdo\",\"big\",\"blockquote\",\"br\",\"caption\",\"cite\",\"code\",\"colgroup\",\"dd\",\"del\",\"div\",\"dfn\",\"dl\",\"dt\",\"em\",\"fieldset\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"hr\",\"i\",\"img\",\"ins\",\"kbd\",\"li\",\"ol\",\"p\",\"pre\",\"q\",\"samp\",\"small\",\"span\",\"strong\",\"style\",\"sub\",\"sup\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"tr\",\"tt\",\"ul\")",
        "sourceAfterFix": "ImmutableSortedSet.of(\"a\",\"abbr\",\"acronym\",\"address\",\"area\",\"b\",\"bdo\",\"big\",\"blockquote\",\"br\",\"caption\",\"cite\",\"code\",\"colgroup\",\"dd\",\"del\",\"div\",\"dfn\",\"dl\",\"dt\",\"em\",\"fieldset\",\"font\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"hr\",\"i\",\"img\",\"ins\",\"kbd\",\"li\",\"ol\",\"p\",\"pre\",\"q\",\"samp\",\"small\",\"span\",\"strong\",\"style\",\"sub\",\"sup\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"tr\",\"tt\",\"ul\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "320421c66bab7fc9670e766769c4a9ec60063fe8",
        "fixCommitParentSHA1": "d64de19cca5af5532cc185a67af6df14eb7dc468",
        "bugFilePath": "enterprise/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/store/TestUpgradeStore.java",
        "fixPatch": "diff --git a/enterprise/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/store/TestUpgradeStore.java b/enterprise/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/store/TestUpgradeStore.java\nindex 15ec253..819aa61 100644\n--- a/enterprise/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/store/TestUpgradeStore.java\n+++ b/enterprise/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/store/TestUpgradeStore.java\n@@ -219,7 +219,7 @@\n     @Test\n     public void makeSureStoreCantBeUpgradedByBatchInserterEvenIfExplicitlyToldTo() throws Exception\n     {\n-        String path = path( 11 );\n+        String path = path( 14 );\n         new EmbeddedGraphDatabase( path ).shutdown();\n         setOlderNeoStoreVersion( path );\n         \n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 222,
        "bugNodeStartChar": 8165,
        "bugNodeLength": 10,
        "fixLineNum": 222,
        "fixNodeStartChar": 8165,
        "fixNodeLength": 10,
        "sourceBeforeFix": "path(11)",
        "sourceAfterFix": "path(14)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1d577b1b8bd3f51bcf8d9d89bb4598a28020af07",
        "fixCommitParentSHA1": "d23c3b3382ff6b2dc7625cb0a0cd31d767efafc5",
        "bugFilePath": "example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java",
        "fixPatch": "diff --git a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\nindex 5421956..0e599fb 100644\n--- a/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n+++ b/example/src/main/java/io/netty/example/securechat/SecureChatServerHandler.java\n@@ -47,10 +47,10 @@\n                 new GenericFutureListener<Future<Channel>>() {\n             @Override\n             public void operationComplete(Future<Channel> future) throws Exception {\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Welcome to \" + InetAddress.getLocalHost().getHostName() +\n                         \" secure chat service!\\n\");\n-                ctx.write(\n+                ctx.writeAndFlush(\n                         \"Your session is protected by \" +\n                         ctx.pipeline().get(SslHandler.class).engine().getSession().getCipherSuite() +\n                         \" cipher suite.\\n\");\n@@ -65,10 +65,10 @@\n         // Send the received message to all channels but the current one.\n         for (Channel c: channels) {\n             if (c != ctx.channel()) {\n-                c.write(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n+                c.writeAndFlush(\"[\" + ctx.channel().remoteAddress() + \"] \" +\n                         msg + '\\n');\n             } else {\n-                c.write(\"[you] \" + msg + '\\n');\n+                c.writeAndFlush(\"[you] \" + msg + '\\n');\n             }\n         }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 68,
        "bugNodeStartChar": 2767,
        "bugNodeLength": 88,
        "fixLineNum": 68,
        "fixNodeStartChar": 2767,
        "fixNodeLength": 96,
        "sourceBeforeFix": "c.write(\"[\" + ctx.channel().remoteAddress() + \"] \"+ msg+ '\\n')",
        "sourceAfterFix": "c.writeAndFlush(\"[\" + ctx.channel().remoteAddress() + \"] \"+ msg+ '\\n')"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d",
        "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f",
        "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java",
        "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 163,
        "bugNodeStartChar": 5679,
        "bugNodeLength": 26,
        "fixLineNum": 163,
        "fixNodeStartChar": 5517,
        "fixNodeLength": 27,
        "sourceBeforeFix": "cacheScaled5.setColor(red)",
        "sourceAfterFix": "cacheScaled5.setColors(red)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "41467c8004b716fb78002c3139ea771b70ed165d",
        "fixCommitParentSHA1": "22cc1f679312b3222cf3f460afa62f76a63c4c2f",
        "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java",
        "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\nindex 4698dda..d86125a 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontFlipTest.java\n@@ -147,7 +147,7 @@\n \t}\r\n \r\n \tprivate void renderCached () {\r\n-\t\tcache5.setColor(red);\r\n+\t\tcache5.setColors(red);\r\n \t\tcache5.draw(spriteBatch);\r\n \r\n \t\tcache1.draw(spriteBatch);\r\n@@ -160,7 +160,7 @@\n \t}\r\n \r\n \tprivate void renderCachedScaled () {\r\n-\t\tcacheScaled5.setColor(red);\r\n+\t\tcacheScaled5.setColors(red);\r\n \t\tcacheScaled5.draw(spriteBatch);\r\n \r\n \t\tcacheScaled1.draw(spriteBatch);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 163,
        "bugNodeStartChar": 5679,
        "bugNodeLength": 26,
        "fixLineNum": 163,
        "fixNodeStartChar": 5517,
        "fixNodeLength": 27,
        "sourceBeforeFix": "cacheScaled5.setColor(red)",
        "sourceAfterFix": "cacheScaled5.setColors(red)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6b76d27c535a56fb1060f8e89870a5b6764812c3",
        "fixCommitParentSHA1": "9f33838169e4c3165d5ab75b879a7b1e6fa96bab",
        "bugFilePath": "bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/WithingsGenericBindingProvider.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/WithingsGenericBindingProvider.java b/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/WithingsGenericBindingProvider.java\nindex b3992ff..1fd65b3 100644\n--- a/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/WithingsGenericBindingProvider.java\n+++ b/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/WithingsGenericBindingProvider.java\n@@ -47,7 +47,7 @@\n \t\tMeasureType measureType = null;\n \t\t\n \t\tif (configElements.length == 1) {\n-\t\t\tmeasureType = MeasureType.valueOf(configElements[1].toUpperCase());\n+\t\t\tmeasureType = MeasureType.valueOf(configElements[0].toUpperCase());\n \t\t}\n \t\telse if (configElements.length == 2) {\n \t\t\taccountId = configElements[0];\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 50,
        "bugNodeStartChar": 1653,
        "bugNodeLength": 17,
        "fixLineNum": 50,
        "fixNodeStartChar": 1653,
        "fixNodeLength": 17,
        "sourceBeforeFix": "configElements[1]",
        "sourceAfterFix": "configElements[0]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6ec3648a10965a2c74c9a595a4c7962aadb7e288",
        "fixCommitParentSHA1": "91e6a5fbee21d80b71c12f7a71c2d43bfdddf96a",
        "bugFilePath": "spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListenerTests.java",
        "fixPatch": "diff --git a/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListenerTests.java b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListenerTests.java\nindex 90a75cc..025058a 100644\n--- a/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListenerTests.java\n+++ b/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/ResetMocksTestExecutionListenerTests.java\n@@ -75,16 +75,16 @@\n \n \t\t@Bean\n \t\tpublic ExampleService after(MockitoBeans mockedBeans) {\n-\t\t\tExampleService mock = mock(ExampleService.class, MockReset.before());\n+\t\t\tExampleService mock = mock(ExampleService.class, MockReset.after());\n \t\t\tmockedBeans.add(mock);\n \t\t\treturn mock;\n \t\t}\n \n \t\t@Bean\n \t\tpublic ExampleService none(MockitoBeans mockedBeans) {\n-\t\t\tExampleService mock = mock(ExampleService.class, MockReset.before());\n+\t\t\tExampleService mock = mock(ExampleService.class);\n \t\t\tmockedBeans.add(mock);\n-\t\t\treturn mock(ExampleService.class);\n+\t\t\treturn mock;\n \t\t}\n \n \t\t@Bean\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 78,
        "bugNodeStartChar": 2499,
        "bugNodeLength": 18,
        "fixLineNum": 78,
        "fixNodeStartChar": 2499,
        "fixNodeLength": 17,
        "sourceBeforeFix": "MockReset.before()",
        "sourceAfterFix": "MockReset.after()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c2232f3917eba133a8b9afe0808375a2dc4dc64",
        "fixCommitParentSHA1": "2cfc2b322fa830816076de07a62992dc8c4f5d4c",
        "bugFilePath": "dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java",
        "fixPatch": "diff --git a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\nindex 464087e..7ba4a63 100644\n--- a/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n+++ b/dubbo-remoting/dubbo-remoting-netty4/src/main/java/org/apache/dubbo/remoting/transport/netty4/NettyClient.java\n@@ -78,7 +78,7 @@\n \n             @Override\n             protected void initChannel(Channel ch) throws Exception {\n-                int heartbeatInterval = UrlUtils.getIdleTimeout(getUrl());\n+                int heartbeatInterval = UrlUtils.getHeartbeat(getUrl());\n                 NettyCodecAdapter adapter = new NettyCodecAdapter(getCodec(), getUrl(), NettyClient.this);\n                 ch.pipeline()//.addLast(\"logging\",new LoggingHandler(LogLevel.INFO))//for debug\n                         .addLast(\"decoder\", adapter.getDecoder())\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 81,
        "bugNodeStartChar": 3411,
        "bugNodeLength": 33,
        "fixLineNum": 81,
        "fixNodeStartChar": 3411,
        "fixNodeLength": 31,
        "sourceBeforeFix": "UrlUtils.getIdleTimeout(getUrl())",
        "sourceAfterFix": "UrlUtils.getHeartbeat(getUrl())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "626cf14a6e42fa0a2d144e8e16940e09bafd754a",
        "fixCommitParentSHA1": "a95d9c46e2f7bb9bec968f8392ac62ccda6c0283",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/EC2AutoScalingStrategy.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/EC2AutoScalingStrategy.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/EC2AutoScalingStrategy.java\nindex 5422a21..45b5573 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/EC2AutoScalingStrategy.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/EC2AutoScalingStrategy.java\n@@ -218,7 +218,7 @@\n         }\n     );\n \n-    log.info(\"Performing lookup: %s --> %s\", ips, retVal);\n+    log.debug(\"Performing lookup: %s --> %s\", ips, retVal);\n \n     return retVal;\n   }\n@@ -250,7 +250,7 @@\n         }\n     );\n \n-    log.info(\"Performing lookup: %s --> %s\", nodeIds, retVal);\n+    log.debug(\"Performing lookup: %s --> %s\", nodeIds, retVal);\n \n     return retVal;\n   }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 253,
        "bugNodeStartChar": 7929,
        "bugNodeLength": 57,
        "fixLineNum": 253,
        "fixNodeStartChar": 7929,
        "fixNodeLength": 58,
        "sourceBeforeFix": "log.info(\"Performing lookup: %s --> %s\",nodeIds,retVal)",
        "sourceAfterFix": "log.debug(\"Performing lookup: %s --> %s\",nodeIds,retVal)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "bdc0df3522e75295355c176ffb0462906d7aea79",
        "fixCommitParentSHA1": "91bea81ae5bbc6697422a953646ad6220d7a679b",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\nindex 5bb6fae..0195d70 100644\n--- a/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n+++ b/presto-main/src/test/java/com/facebook/presto/sql/analyzer/TestFeaturesConfig.java\n@@ -36,7 +36,7 @@\n                 .setOptimizeMetadataQueries(false)\n                 .setOptimizeHashGeneration(true)\n                 .setOptimizeSingleDistinct(true)\n-                .setPushTableWriteThroughUnion(false)\n+                .setPushTableWriteThroughUnion(true)\n                 .setIntermediateAggregationsEnabled(false)\n                 .setColumnarProcessing(false)\n                 .setColumnarProcessingDictionary(false));\n@@ -53,7 +53,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -66,7 +66,7 @@\n                 .put(\"optimizer.optimize-metadata-queries\", \"true\")\n                 .put(\"optimizer.optimize-hash-generation\", \"false\")\n                 .put(\"optimizer.optimize-single-distinct\", \"false\")\n-                .put(\"optimizer.push-table-write-through-union\", \"true\")\n+                .put(\"optimizer.push-table-write-through-union\", \"false\")\n                 .put(\"optimizer.use-intermediate-aggregations\", \"true\")\n                 .put(\"optimizer.columnar-processing\", \"true\")\n                 .put(\"optimizer.columnar-processing-dictionary\", \"true\")\n@@ -80,7 +80,7 @@\n                 .setOptimizeMetadataQueries(true)\n                 .setOptimizeHashGeneration(false)\n                 .setOptimizeSingleDistinct(false)\n-                .setPushTableWriteThroughUnion(true)\n+                .setPushTableWriteThroughUnion(false)\n                 .setIntermediateAggregationsEnabled(true)\n                 .setColumnarProcessing(true)\n                 .setColumnarProcessingDictionary(true);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 31,
        "bugNodeStartChar": 1147,
        "bugNodeLength": 460,
        "fixLineNum": 31,
        "fixNodeStartChar": 1147,
        "fixNodeLength": 459,
        "sourceBeforeFix": "ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(false)",
        "sourceAfterFix": "ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 757,
        "bugNodeStartChar": 25683,
        "bugNodeLength": 83,
        "fixLineNum": 757,
        "fixNodeStartChar": 24927,
        "fixNodeLength": 85,
        "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,toFloatBuffer(value,offset,count * 9))",
        "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,toFloatBuffer(value,offset,count * 9))"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d1cc32143dffe1f3fbf41e1d14cc82ba9626f7fa",
        "fixCommitParentSHA1": "6bfbfce11419889e19840d0df1347d1574cecfbb",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java b/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\nindex 2b6d75a..5ec4e66 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\n@@ -48,9 +48,9 @@\n         TabularData data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{false}, new String[]{\"boolean\"});\n         assertEquals(3, data.size());\n \n-        // there should be 6 options\n+        // there should be 8 options\n         data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{true}, new String[]{\"boolean\"});\n-        assertEquals(6, data.size());\n+        assertEquals(8, data.size());\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 53,
        "bugNodeStartChar": 2235,
        "bugNodeLength": 28,
        "fixLineNum": 53,
        "fixNodeStartChar": 2235,
        "fixNodeLength": 28,
        "sourceBeforeFix": "assertEquals(6,data.size())",
        "sourceAfterFix": "assertEquals(8,data.size())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c4d1a9b3fde355c8cdfb6fcdc1d30c1fa38625d4",
        "fixCommitParentSHA1": "ce97445f0f81a6f22fea6cd944735e64e04ee8b5",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/SizeEstimatorTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/SizeEstimatorTest.java b/hazelcast/src/test/java/com/hazelcast/map/SizeEstimatorTest.java\nindex 666db8c..55e3c94 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/SizeEstimatorTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/SizeEstimatorTest.java\n@@ -56,7 +56,7 @@\n \n         final IMap<Integer, Long> map = h.getMap(MAP_NAME);\n         map.put(0, 10L);\n-        assertEquals(148, map.getLocalMapStats().getHeapCost());\n+        assertEquals(156, map.getLocalMapStats().getHeapCost());\n     }\n \n     @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 59,
        "bugNodeStartChar": 2002,
        "bugNodeLength": 55,
        "fixLineNum": 59,
        "fixNodeStartChar": 2002,
        "fixNodeLength": 55,
        "sourceBeforeFix": "assertEquals(148,map.getLocalMapStats().getHeapCost())",
        "sourceAfterFix": "assertEquals(156,map.getLocalMapStats().getHeapCost())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
        "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
        "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
        "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 186,
        "bugNodeStartChar": 6910,
        "bugNodeLength": 60,
        "fixLineNum": 186,
        "fixNodeStartChar": 6910,
        "fixNodeLength": 60,
        "sourceBeforeFix": "assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7)",
        "sourceAfterFix": "assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da",
        "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88",
        "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java",
        "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 605,
        "bugNodeStartChar": 24443,
        "bugNodeLength": 34,
        "fixLineNum": 605,
        "fixNodeStartChar": 24443,
        "fixNodeLength": 26,
        "sourceBeforeFix": "queryIdsSnapshot.remove(deadQuery)",
        "sourceAfterFix": "queryIds.remove(deadQuery)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8988b3f4c0ab891f31679d97d48dd376b4bd2fee",
        "fixCommitParentSHA1": "f76a6f40d40d581d615252a9a115ad7be5be4aad",
        "bugFilePath": "codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java",
        "fixPatch": "diff --git a/codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java b/codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java\nindex f502983..62cafc4 100644\n--- a/codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java\n+++ b/codec/src/main/java/io/netty/handler/codec/compression/LzmaFrameEncoder.java\n@@ -144,7 +144,7 @@\n         if (pb < 0 || pb > 4) {\n             throw new IllegalArgumentException(\"pb: \" + pb + \" (expected: 0-4)\");\n         }\n-        if (lc + pb > 4) {\n+        if (lc + lp > 4) {\n             if (!warningLogged) {\n                 logger.warn(\"The latest versions of LZMA libraries (for example, XZ Utils) \" +\n                         \"has an additional requirement: lc + lp <= 4. Data which don't follow \" +\n",
        "projectName": "netty.netty",
        "bugLineNum": 147,
        "bugNodeStartChar": 5672,
        "bugNodeLength": 7,
        "fixLineNum": 147,
        "fixNodeStartChar": 5672,
        "fixNodeLength": 7,
        "sourceBeforeFix": "lc + pb",
        "sourceAfterFix": "lc + lp"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "cd7ba294b22a9b392030fe5c6ee06247fc7868c1",
        "fixCommitParentSHA1": "00b718cbb214d82f6781c82b18c0c5c605940b98",
        "bugFilePath": "dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java",
        "fixPatch": "diff --git a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\nindex f112ec2..436cf8f 100644\n--- a/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\n+++ b/dubbo-common/src/main/java/org/apache/dubbo/common/utils/ConfigUtils.java\n@@ -217,7 +217,8 @@\n      */\r\n     public static Properties loadProperties(String fileName, boolean allowMultiFile, boolean optional) {\r\n         Properties properties = new Properties();\r\n-        if (fileName.startsWith(\"/\")) {\r\n+        // add scene judgement in windows environment Fix 2557\r\n+        if (fileName.startsWith(\"/\") || fileName.matches(\"^[A-z]:\\\\\\\\\\\\S+$\")) {\r\n             try {\r\n                 FileInputStream input = new FileInputStream(fileName);\r\n                 try {\r\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 220,
        "bugNodeStartChar": 8484,
        "bugNodeLength": 24,
        "fixLineNum": 221,
        "fixNodeStartChar": 8328,
        "fixNodeLength": 64,
        "sourceBeforeFix": "fileName.startsWith(\"/\")",
        "sourceAfterFix": "fileName.startsWith(\"/\") || fileName.matches(\"^[A-z]:\\\\\\\\\\\\S+$\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "62e7eb06d62b50ba6a03c25070c6ee1164c0962f",
        "fixCommitParentSHA1": "08d401c1aa6396b9bb36be6474dda8e9a3183f79",
        "bugFilePath": "components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java",
        "fixPatch": "diff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\nindex d394b9f..69863ae 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java\n@@ -1608,7 +1608,7 @@\n      * creation\n      */\n     protected ConnectionFactory createListenerConnectionFactory() {\n-        return getConnectionFactory();\n+        return getOrCreateConnectionFactory();\n     }\n \n     /**\n@@ -1616,7 +1616,7 @@\n      * creation\n      */\n     protected ConnectionFactory createTemplateConnectionFactory() {\n-        return getConnectionFactory();\n+        return getOrCreateConnectionFactory();\n     }\n \n     /**\n",
        "projectName": "apache.camel",
        "bugLineNum": 1619,
        "bugNodeStartChar": 84742,
        "bugNodeLength": 22,
        "fixLineNum": 1619,
        "fixNodeStartChar": 84742,
        "fixNodeLength": 30,
        "sourceBeforeFix": "getConnectionFactory()",
        "sourceAfterFix": "getOrCreateConnectionFactory()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "1be8d7fe7a40efb4c363679538e4c0cb31c6b43e",
        "fixCommitParentSHA1": "ef8bba0fe5429d2a4c8047ee309f844cb8d6b4ce",
        "bugFilePath": "src/com/google/javascript/jscomp/SourceMapInput.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/SourceMapInput.java b/src/com/google/javascript/jscomp/SourceMapInput.java\nindex 645d34a..d35d559 100644\n--- a/src/com/google/javascript/jscomp/SourceMapInput.java\n+++ b/src/com/google/javascript/jscomp/SourceMapInput.java\n@@ -33,10 +33,11 @@\n   private transient volatile boolean cached = false;\n \n   static final DiagnosticType SOURCEMAP_RESOLVE_FAILED =\n-      DiagnosticType.warning(\"SOURCEMAP_RESOLVE_FAILED\", \"Failed to resolve sourcemap: {0}\");\n+      DiagnosticType.warning(\"SOURCEMAP_RESOLVE_FAILED\", \"Failed to resolve sourcemap at {0}: {1}\");\n \n   static final DiagnosticType SOURCEMAP_PARSE_FAILED =\n-      DiagnosticType.warning(\"SOURCEMAP_PARSE_FAILED\", \"Failed to parse malformed sourcemap: {0}\");\n+      DiagnosticType.warning(\n+          \"SOURCEMAP_PARSE_FAILED\", \"Failed to parse malformed sourcemap in {0}: {1}\");\n \n   public SourceMapInput(SourceFile sourceFile) {\n     this.sourceFile = sourceFile;\n@@ -57,10 +58,12 @@\n         consumer.parse(sourceMapContents);\n         parsedSourceMap = consumer;\n       } catch (IOException e) {\n-        JSError error = JSError.make(SourceMapInput.SOURCEMAP_RESOLVE_FAILED, sourceMapPath);\n+        JSError error =\n+            JSError.make(SourceMapInput.SOURCEMAP_RESOLVE_FAILED, sourceMapPath, e.getMessage());\n         errorManager.report(error.getDefaultLevel(), error);\n       } catch (SourceMapParseException e) {\n-        JSError error = JSError.make(SourceMapInput.SOURCEMAP_PARSE_FAILED, sourceMapPath);\n+        JSError error =\n+            JSError.make(SourceMapInput.SOURCEMAP_PARSE_FAILED, sourceMapPath, e.getMessage());\n         errorManager.report(error.getDefaultLevel(), error);\n       }\n     }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 60,
        "bugNodeStartChar": 2329,
        "bugNodeLength": 68,
        "fixLineNum": 61,
        "fixNodeStartChar": 2341,
        "fixNodeLength": 84,
        "sourceBeforeFix": "JSError.make(SourceMapInput.SOURCEMAP_RESOLVE_FAILED,sourceMapPath)",
        "sourceAfterFix": "JSError.make(SourceMapInput.SOURCEMAP_RESOLVE_FAILED,sourceMapPath,e.getMessage())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 639,
        "bugNodeStartChar": 24395,
        "bugNodeLength": 8,
        "fixLineNum": 639,
        "fixNodeStartChar": 24395,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15865",
        "sourceAfterFix": "id=16512"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "92b9986bd0c48759694a83cac77858f293801a11",
        "fixCommitParentSHA1": "a8407fa310d85ed2a71b0075d2b5a948cd722d7e",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/JSON.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/JSON.java b/src/main/java/com/alibaba/fastjson/JSON.java\nindex c12f6b3..6eda084 100755\n--- a/src/main/java/com/alibaba/fastjson/JSON.java\n+++ b/src/main/java/com/alibaba/fastjson/JSON.java\n@@ -1001,7 +1001,7 @@\n             for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                 Object key = entry.getKey();\n                 String jsonKey = TypeUtils.castToString(key);\n-                Object jsonValue = toJSON(entry.getValue());\n+                Object jsonValue = toJSON(entry.getValue(), config);\n                 json.put(jsonKey, jsonValue);\n             }\n \n@@ -1014,7 +1014,7 @@\n             JSONArray array = new JSONArray(collection.size());\n \n             for (Object item : collection) {\n-                Object jsonValue = toJSON(item);\n+                Object jsonValue = toJSON(item, config);\n                 array.add(jsonValue);\n             }\n \n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 1017,
        "bugNodeStartChar": 37575,
        "bugNodeLength": 12,
        "fixLineNum": 1017,
        "fixNodeStartChar": 37575,
        "fixNodeLength": 20,
        "sourceBeforeFix": "toJSON(item)",
        "sourceAfterFix": "toJSON(item,config)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "d28eca7138217389631a406f7cb116f34a8f2814",
        "fixCommitParentSHA1": "46d713970b624b01a4f4d4cfbbc8523e57e16c14",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\nindex f3f5f02..fadf84f 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\n@@ -228,15 +228,15 @@\n         }\n \n         String upgrade = response.getHeader(Names.UPGRADE);\n-        if (Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n+        if (!Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response upgrade: \"\n-                    + response.getHeader(Names.UPGRADE));\n+                    + upgrade);\n         }\n \n         String connection = response.getHeader(Names.CONNECTION);\n-        if (Values.UPGRADE.equalsIgnoreCase(connection)) {\n+        if (!Values.UPGRADE.equalsIgnoreCase(connection)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response connection: \"\n-                    + response.getHeader(Names.CONNECTION));\n+                    + connection);\n         }\n \n         byte[] challenge = response.getContent().array();\n",
        "projectName": "netty.netty",
        "bugLineNum": 231,
        "bugNodeStartChar": 8432,
        "bugNodeLength": 42,
        "fixLineNum": 231,
        "fixNodeStartChar": 8432,
        "fixNodeLength": 43,
        "sourceBeforeFix": "Values.WEBSOCKET.equalsIgnoreCase(upgrade)",
        "sourceAfterFix": "!Values.WEBSOCKET.equalsIgnoreCase(upgrade)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b8108a370b039dbeccffad8c9b634f6ac85ed4a5",
        "fixCommitParentSHA1": "9b5d6555f6926a58420d3a17830a2d1e3edc9c00",
        "bugFilePath": "collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java",
        "fixPatch": "diff --git a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\nindex d8b78d1..da7f421 100644\n--- a/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n+++ b/collector/src/main/java/com/navercorp/pinpoint/collector/mapper/thrift/stat/TFAgentStatBatchMapper.java\n@@ -29,11 +29,11 @@\n  */\n public class TFAgentStatBatchMapper {\n     private final Logger logger = LoggerFactory.getLogger(this.getClass());\n-    public final TFAgentStatMappter tFAgentStatMappter = new TFAgentStatMappter();\n+    public final TFAgentStatMapper tFAgentStatMapper = new TFAgentStatMapper();\n \n     public TFAgentStatBatch map(AgentStatBo agentStatBo) {\n         try {\n-            List<TFAgentStat> tFAgentstatList = tFAgentStatMappter.map(agentStatBo);\n+            List<TFAgentStat> tFAgentstatList = tFAgentStatMapper.map(agentStatBo);\n             long startTimestamp = getStartTimestamp(agentStatBo);\n             TFAgentStatBatch tFAgentStatBatch = new TFAgentStatBatch(agentStatBo.getAgentId(), startTimestamp, tFAgentstatList);\n             return tFAgentStatBatch;\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 36,
        "bugNodeStartChar": 1342,
        "bugNodeLength": 35,
        "fixLineNum": 36,
        "fixNodeStartChar": 1342,
        "fixNodeLength": 34,
        "sourceBeforeFix": "tFAgentStatMappter.map(agentStatBo)",
        "sourceAfterFix": "tFAgentStatMapper.map(agentStatBo)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "647bac3a8b28b15a6d3fec9456f8062f1a2b8b3c",
        "fixCommitParentSHA1": "575d36a15dfacbbf04bff3baaefea13604cbdd42",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiCommandCommandClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiCommandCommandClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiCommandCommandClass.java\nindex bfd7d6b..3f051a0 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiCommandCommandClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiCommandCommandClass.java\n@@ -111,7 +111,7 @@\n \t\t\t\t}\n \t\t\t\telse {\n \t\t\t\t\tlogger.debug(\"NODE {}: Calling handleApplicationCommandRequest.\", this.getNode().getNodeId());\n-\t\t\t\t\tzwaveCommandClass.handleApplicationCommandRequest(serialMessage, offset + 2, 1);\n+\t\t\t\t\tzwaveCommandClass.handleApplicationCommandRequest(serialMessage, offset + 2, 0);\n \t\t\t\t}\n \t\t\t}\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 114,
        "bugNodeStartChar": 4196,
        "bugNodeLength": 79,
        "fixLineNum": 114,
        "fixNodeStartChar": 4196,
        "fixNodeLength": 79,
        "sourceBeforeFix": "zwaveCommandClass.handleApplicationCommandRequest(serialMessage,offset + 2,1)",
        "sourceAfterFix": "zwaveCommandClass.handleApplicationCommandRequest(serialMessage,offset + 2,0)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b5650404e00e249d1e305e8b1ce5e1ac12526e4b",
        "fixCommitParentSHA1": "ed9f52702e969697c8d35e9284803cb9c06debb9",
        "bugFilePath": "tool/src/org/antlr/v4/semantics/AttributeChecks.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/semantics/AttributeChecks.java b/tool/src/org/antlr/v4/semantics/AttributeChecks.java\nindex 94c48ea..0e96520 100644\n--- a/tool/src/org/antlr/v4/semantics/AttributeChecks.java\n+++ b/tool/src/org/antlr/v4/semantics/AttributeChecks.java\n@@ -135,7 +135,7 @@\n \t\t\tif ( rref!=null ) {\n \t\t\t\tif ( rref.args!=null && rref.args.get(y.getText())!=null ) {\n \t\t\t\t\tg.tool.errMgr.grammarError(ErrorType.INVALID_RULE_PARAMETER_REF,\n-\t\t\t\t\t\t\t\t\t\t\t  g.fileName, y, y.getText(), expr);\n+\t\t\t\t\t\t\t\t\t\t\t  g.fileName, y, y.getText(), rref.name, expr);\n \t\t\t\t}\n \t\t\t\telse {\n \t\t\t\t\terrMgr.grammarError(ErrorType.UNKNOWN_RULE_ATTRIBUTE,\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 137,
        "bugNodeStartChar": 5350,
        "bugNodeLength": 111,
        "fixLineNum": 137,
        "fixNodeStartChar": 5350,
        "fixNodeLength": 122,
        "sourceBeforeFix": "g.tool.errMgr.grammarError(ErrorType.INVALID_RULE_PARAMETER_REF,g.fileName,y,y.getText(),expr)",
        "sourceAfterFix": "g.tool.errMgr.grammarError(ErrorType.INVALID_RULE_PARAMETER_REF,g.fileName,y,y.getText(),rref.name,expr)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "dcfb1ed2788a4c497bc251ab777c2d04652fa20c",
        "fixCommitParentSHA1": "2f40ac3aa423af827c1978c9be977a7b2ce5e5c8",
        "bugFilePath": "druid-handler/src/java/org/apache/hadoop/hive/druid/HiveDruidQueryBasedInputFormat.java",
        "fixPatch": "diff --git a/druid-handler/src/java/org/apache/hadoop/hive/druid/HiveDruidQueryBasedInputFormat.java b/druid-handler/src/java/org/apache/hadoop/hive/druid/HiveDruidQueryBasedInputFormat.java\nindex cc4a8ef..787cd52 100644\n--- a/druid-handler/src/java/org/apache/hadoop/hive/druid/HiveDruidQueryBasedInputFormat.java\n+++ b/druid-handler/src/java/org/apache/hadoop/hive/druid/HiveDruidQueryBasedInputFormat.java\n@@ -254,7 +254,7 @@\n       }\n \n       intervals.add(new Interval(timeList.get(0).getValue().getMinTime().getMillis(),\n-              timeList.get(0).getValue().getMaxTime().getMillis()));\n+              timeList.get(0).getValue().getMaxTime().getMillis(), ISOChronology.getInstanceUTC()));\n     } else {\n       intervals.addAll(query.getIntervals());\n     }\n@@ -289,13 +289,13 @@\n         final long expectedRange = rangeSize - currTime;\n         if (interval.getEndMillis() - startTime >= expectedRange) {\n           endTime = startTime + expectedRange;\n-          currentIntervals.add(new Interval(startTime, endTime));\n+          currentIntervals.add(new Interval(startTime, endTime, ISOChronology.getInstanceUTC()));\n           startTime = endTime;\n           currTime = 0;\n           break;\n         }\n         endTime = interval.getEndMillis();\n-        currentIntervals.add(new Interval(startTime, endTime));\n+        currentIntervals.add(new Interval(startTime, endTime, ISOChronology.getInstanceUTC()));\n         currTime += (endTime - startTime);\n         startTime = intervals.get(++posIntervals).getStartMillis();\n       }\n",
        "projectName": "apache.hive",
        "bugLineNum": 256,
        "bugNodeStartChar": 10996,
        "bugNodeLength": 132,
        "fixLineNum": 256,
        "fixNodeStartChar": 10996,
        "fixNodeLength": 164,
        "sourceBeforeFix": "new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis())",
        "sourceAfterFix": "new Interval(timeList.get(0).getValue().getMinTime().getMillis(),timeList.get(0).getValue().getMaxTime().getMillis(),ISOChronology.getInstanceUTC())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\nindex 509dedf..dec10b8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n@@ -28,61 +28,61 @@\n     @EncodeMethod(id = 1)\n     void offer(String name, Data value, long timeoutMillis);\n \n-    @EncodeMethod(id = 1)\n+    @EncodeMethod(id = 2)\n     void put(String name, Data value);\n \n-    @EncodeMethod(id = 2)\n+    @EncodeMethod(id = 3)\n     void size(String name);\n \n-    @EncodeMethod(id = 3)\n+    @EncodeMethod(id = 4)\n     void remove(String name, Data value);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 5)\n     void poll(String name, long timeoutMillis);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 6)\n     void take(String name);\n \n-    @EncodeMethod(id = 5)\n+    @EncodeMethod(id = 7)\n     void peek(String name);\n \n-    @EncodeMethod(id = 6)\n+    @EncodeMethod(id = 8)\n     void iterator(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 9)\n     void drainTo(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 10)\n     void drainToMaxSize(String name, int maxSize);\n \n-    @EncodeMethod(id = 8)\n+    @EncodeMethod(id = 11)\n     void contains(String name, Data value);\n \n-    @EncodeMethod(id = 9)\n+    @EncodeMethod(id = 12)\n     void containsAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 10)\n+    @EncodeMethod(id = 13)\n     void compareAndRemoveAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 11)\n+    @EncodeMethod(id = 14)\n     void compareAndRetainAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 12)\n+    @EncodeMethod(id = 15)\n     void clear(String name);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 16)\n     void addAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 17)\n     void addListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 18)\n     void removeListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 19)\n     void remainingCapacity(String name);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 20)\n     void isEmpty(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 61,
        "bugNodeStartChar": 1722,
        "bugNodeLength": 6,
        "fixLineNum": 61,
        "fixNodeStartChar": 1722,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=9",
        "sourceAfterFix": "id=12"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ReplicatedMapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ReplicatedMapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ReplicatedMapTemplate.java\nindex e7c1e44..8ce0047 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ReplicatedMapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/ReplicatedMapTemplate.java\n@@ -64,10 +64,10 @@\n     @EncodeMethod(id = 13)\n     void addEntryListener(String name);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 14)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 15)\n     void keySet(String name);\n \n     @EncodeMethod(id = 16)\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 70,
        "bugNodeStartChar": 2091,
        "bugNodeLength": 7,
        "fixLineNum": 70,
        "fixNodeStartChar": 2091,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=16",
        "sourceAfterFix": "id=15"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ee201465a3287e5700c5cba712852a8f4de4bca",
        "fixCommitParentSHA1": "81189e975542a4c5274b418834f3b1c1fccc31d1",
        "bugFilePath": "components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java",
        "fixPatch": "diff --git a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\nindex 4872957..141056a 100644\n--- a/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n+++ b/components/camel-http-common/src/test/java/org/apache/camel/http/common/HttpSendDynamicAwareTest.java\n@@ -35,7 +35,7 @@\n     @Test\r\n     public void testHttpUndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -43,7 +43,7 @@\n     @Test\r\n     public void testHttpsUndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -51,7 +51,7 @@\n     @Test\r\n     public void testHttp4UndefinedPortWithPathParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if http4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -59,7 +59,7 @@\n     @Test\r\n     public void testHttps4UndefinedPortParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https4\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https4://localhost/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not add port if https4 and not specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -67,7 +67,7 @@\n     @Test\r\n     public void testHttpPort80ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:80/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if http and port 80 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -75,7 +75,7 @@\n     @Test\r\n     public void testHttpsPort443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:443/test\", null, null,null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should not port if https and port 443 specified\", \"localhost\", result[0]);\r\n     }\r\n@@ -83,7 +83,7 @@\n     @Test\r\n     public void testHttpPort8080ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"http\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"http://localhost:8080/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if http and port other than 80 specified\", \"localhost:8080\", result[0]);\r\n     }\r\n@@ -91,7 +91,7 @@\n     @Test\r\n     public void testHttpsPort8443ParseUri() {\r\n         this.httpSendDynamicAware.setScheme(\"https\");\r\n-        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null);\r\n+        DynamicAwareEntry entry = new DynamicAwareEntry(\"https://localhost:8443/test\", null, null, null);\r\n         String[] result = httpSendDynamicAware.parseUri(entry);\r\n         assertEquals(\"Parse should add port if https and port other than 443 specified\", \"localhost:8443\", result[0]);\r\n     }\r\n",
        "projectName": "apache.camel",
        "bugLineNum": 70,
        "bugNodeStartChar": 2999,
        "bugNodeLength": 61,
        "fixLineNum": 70,
        "fixNodeStartChar": 2930,
        "fixNodeLength": 67,
        "sourceBeforeFix": "new DynamicAwareEntry(\"http://localhost:80/test\",null,null)",
        "sourceAfterFix": "new DynamicAwareEntry(\"http://localhost:80/test\",null,null,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3c8d3e908b01f47c69600a235fb7e5173f4f0d7b",
        "fixCommitParentSHA1": "dce856f61b93d8d159f45b1f0ebfc5ea9c8f28b1",
        "bugFilePath": "src/com/google/javascript/rhino/jstype/FunctionType.java",
        "fixPatch": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex d931378..64890f1 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -577,7 +577,7 @@\n   }\n \n   /** Returns interfaces implemented directly by a class or its superclass. */\n-  public final Iterable<ObjectType> getImplementedInterfaces() {\n+  public final ImmutableList<ObjectType> getImplementedInterfaces() {\n     FunctionType superCtor = isConstructor() ? getSuperClassConstructor() : null;\n     if (superCtor == null) {\n       return implementedInterfaces;\n@@ -592,7 +592,7 @@\n   }\n \n   /** Returns interfaces directly implemented by the class. */\n-  public final Iterable<ObjectType> getOwnImplementedInterfaces() {\n+  public final ImmutableList<ObjectType> getOwnImplementedInterfaces() {\n     return implementedInterfaces;\n   }\n \n@@ -610,7 +610,7 @@\n   }\n \n   /** Returns interfaces directly extended by an interface */\n-  public final Iterable<ObjectType> getExtendedInterfaces() {\n+  public final ImmutableList<ObjectType> getExtendedInterfaces() {\n     return extendedInterfaces;\n   }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 580,
        "bugNodeStartChar": 18609,
        "bugNodeLength": 20,
        "fixLineNum": 580,
        "fixNodeStartChar": 18609,
        "fixNodeLength": 25,
        "sourceBeforeFix": "Iterable<ObjectType>",
        "sourceAfterFix": "ImmutableList<ObjectType>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3691be4c1f9974b445e682c6d290306700eab602",
        "fixCommitParentSHA1": "38c360dd4f610f9a37b150246b2d92081c8d3135",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\nindex eaaf479..58f9ee7 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n@@ -232,7 +232,7 @@\n      * @throws javax.servlet.ServletException\n      */\n     protected AtmosphereHandlerWrapper map(HttpServletRequest req) throws ServletException {\n-        String path = req.getRequestURI();\n+        String path = req.getServletPath() + req.getPathInfo();\n         if (path == null || path.length() == 0) {\n             path = \"/*\";\n         }\n@@ -242,7 +242,7 @@\n             final Map<String, String> m = new HashMap<String, String>();\n             for (Map.Entry<String,AtmosphereHandlerWrapper> e : config.handlers().entrySet()) {\n                 UriTemplate t = new UriTemplate(e.getKey());\n-                logger.trace(\"Trying to map {} to {}\", t, path);\n+                logger.debug(\"Trying to map {} to {}\", t, path);\n                 if (t.match(path, m)) {\n                     atmosphereHandlerWrapper = e.getValue();\n                     logger.trace(\"Mapped {} to {}\", t, e.getValue());\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 245,
        "bugNodeStartChar": 10117,
        "bugNodeLength": 47,
        "fixLineNum": 245,
        "fixNodeStartChar": 10117,
        "fixNodeLength": 47,
        "sourceBeforeFix": "logger.trace(\"Trying to map {} to {}\",t,path)",
        "sourceAfterFix": "logger.debug(\"Trying to map {} to {}\",t,path)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a9bf05f5e1a198ca52e50bdd9280cf53fdbdc728",
        "fixCommitParentSHA1": "682826efe5a312724a73d50fb601f4c61dc5a914",
        "bugFilePath": "hikaricp-java6/src/test/java/com/zaxxer/hikari/MiscTest.java",
        "fixPatch": "diff --git a/hikaricp-java6/src/test/java/com/zaxxer/hikari/MiscTest.java b/hikaricp-java6/src/test/java/com/zaxxer/hikari/MiscTest.java\nindex de2b4c2..944beae 100644\n--- a/hikaricp-java6/src/test/java/com/zaxxer/hikari/MiscTest.java\n+++ b/hikaricp-java6/src/test/java/com/zaxxer/hikari/MiscTest.java\n@@ -108,7 +108,7 @@\n          TestElf.setSlf4jTargetStream(LeakTask.class, ps);\n \n          Connection connection = ds.getConnection();\n-         PoolUtilities.quietlySleep(TimeUnit.SECONDS.toMillis(3));\n+         PoolUtilities.quietlySleep(TimeUnit.SECONDS.toMillis(4));\n          ps.close();\n          connection.close();\n          String s = new String(baos.toByteArray());\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 111,
        "bugNodeStartChar": 3226,
        "bugNodeLength": 28,
        "fixLineNum": 111,
        "fixNodeStartChar": 3226,
        "fixNodeLength": 28,
        "sourceBeforeFix": "TimeUnit.SECONDS.toMillis(3)",
        "sourceAfterFix": "TimeUnit.SECONDS.toMillis(4)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bd229bdbd2ea75bef4d5c5927fafd92a44e018a7",
        "fixCommitParentSHA1": "e5abb6616758f2b76adb358cebc76228f4699b53",
        "bugFilePath": "dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java",
        "fixPatch": "diff --git a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\nindex a1a81e6..d6b2704 100644\n--- a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n+++ b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n@@ -88,7 +88,7 @@\n                 .setSoTimeout(timeout)\n                 .build();\n \n-        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy))\n+        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy, name))\n                 .setConnectionManager(manager)\n                 .setDefaultRequestConfig(requestConfig)\n                 .setDefaultSocketConfig(socketConfig)\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 91,
        "bugNodeStartChar": 3686,
        "bugNodeLength": 71,
        "fixLineNum": 91,
        "fixNodeStartChar": 3686,
        "fixNodeLength": 77,
        "sourceBeforeFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy)",
        "sourceAfterFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy,name)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 355,
        "bugNodeStartChar": 13391,
        "bugNodeLength": 10,
        "fixLineNum": 355,
        "fixNodeStartChar": 13391,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15858",
        "sourceAfterFix": "id=10858"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "59970361c11b8177edbf56786e896ce4da82c6ba",
        "fixCommitParentSHA1": "47ec09e10ea6807f6c7f6a17273b3eeffe5958b7",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\nindex b3c25e4..2e40ff9 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n@@ -96,10 +96,10 @@\n \t\t}\n \t\t\n \t\tif (CopyableValue.class.isAssignableFrom(type)) {\n-\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n \t\t}\n \t\telse {\n-\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n \t\t}\n \t}\n \t\n",
        "projectName": "apache.flink",
        "bugLineNum": 99,
        "bugNodeStartChar": 3021,
        "bugNodeLength": 45,
        "fixLineNum": 99,
        "fixNodeStartChar": 3021,
        "fixNodeLength": 53,
        "sourceBeforeFix": "new ValueComparator(sortOrderAscending,type)",
        "sourceAfterFix": "new CopyableValueComparator(sortOrderAscending,type)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "90aa627ec53873e359cba24a9af6d2163e2b7272",
        "fixCommitParentSHA1": "17b903e83bb04c2e12e5af4a7cd85fc79c82e89b",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java b/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\nindex 2d4e462..dad06c4 100644\n--- a/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\n+++ b/presto-main/src/main/java/com/facebook/presto/type/TimestampOperators.java\n@@ -147,7 +147,7 @@\n             return parseTimestampWithoutTimeZone(session.getTimeZoneKey(), trim(value).toStringUtf8());\n         }\n         catch (IllegalArgumentException e) {\n-            throw new PrestoException(INVALID_CAST_ARGUMENT, e);\n+            throw new PrestoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);\n         }\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 150,
        "bugNodeStartChar": 6146,
        "bugNodeLength": 45,
        "fixLineNum": 150,
        "fixNodeStartChar": 6146,
        "fixNodeLength": 107,
        "sourceBeforeFix": "new PrestoException(INVALID_CAST_ARGUMENT,e)",
        "sourceAfterFix": "new PrestoException(INVALID_CAST_ARGUMENT,\"Value cannot be cast to timestamp: \" + value.toStringUtf8(),e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 458,
        "bugNodeStartChar": 15051,
        "bugNodeLength": 45,
        "fixLineNum": 458,
        "fixNodeStartChar": 14594,
        "fixNodeLength": 47,
        "sourceBeforeFix": "GL11.glGetTexParameter(target,pname,params)",
        "sourceAfterFix": "GL11.glGetTexParameteriv(target,pname,params)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "32d470c4e3edba4b399ae18bdcb9e09592e3cc14",
        "fixCommitParentSHA1": "f20b1443115bcc88cb41cd13abe0432a7ab5f782",
        "bugFilePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java",
        "fixPatch": "diff --git a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\nindex d4208e2..fc22998 100644\n--- a/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\n+++ b/extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild.java\n@@ -127,7 +127,7 @@\n \t\tios.cFlags += \" -DFT2_BUILD_LIBRARY\";\r\n \t\tios.cppFlags += \" -DFT2_BUILD_LIBRARY\";\r\n \r\n-\t\tnew NativeCodeGenerator().generate();\r\n+\t\tnew NativeCodeGenerator().generate(\"src\", \"bin:../../gdx/bin\", \"jni\");\r\n \t\tnew AntScriptGenerator()\r\n \t\t\t.generate(new BuildConfig(\"gdx-freetype\"), win32home, win32, win64, lin32, lin64, mac, mac64, android, ios);\r\n // BuildExecutor.executeAnt(\"jni/build-windows32home.xml\", \"-v clean\");\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 130,
        "bugNodeStartChar": 5590,
        "bugNodeLength": 36,
        "fixLineNum": 130,
        "fixNodeStartChar": 5461,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new NativeCodeGenerator().generate()",
        "sourceAfterFix": "new NativeCodeGenerator().generate(\"src\",\"bin:../../gdx/bin\",\"jni\")"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "daef17d4bb38e7a7961121288f1ef4ae3c56ec71",
        "fixCommitParentSHA1": "084fc2712c39b75c07094f226b7ccdb07a198935",
        "bugFilePath": "src/com/google/javascript/jscomp/AstValidator.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/AstValidator.java b/src/com/google/javascript/jscomp/AstValidator.java\nindex b0272ef..6d42f08 100644\n--- a/src/com/google/javascript/jscomp/AstValidator.java\n+++ b/src/com/google/javascript/jscomp/AstValidator.java\n@@ -1052,7 +1052,7 @@\n     Node caught = n.getFirstChild();\n     if (caught.isName()) {\n       validateName(caught);\n-    } else if (n.isArrayPattern()) {\n+    } else if (caught.isArrayPattern()) {\n       validateArrayPattern(Token.CATCH, caught);\n     } else {\n       validateObjectPattern(Token.CATCH, caught);\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1055,
        "bugNodeStartChar": 28434,
        "bugNodeLength": 18,
        "fixLineNum": 1055,
        "fixNodeStartChar": 28434,
        "fixNodeLength": 23,
        "sourceBeforeFix": "n.isArrayPattern()",
        "sourceAfterFix": "caught.isArrayPattern()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8018d1af58330b6d21c858fa5ebfee6a66cd10b3",
        "fixCommitParentSHA1": "915176c4e769f510f835f1ad182bc62586a01e0b",
        "bugFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
        "fixPatch": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\nindex 3875125..0aa3c85 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java\n@@ -298,7 +298,7 @@\n         }\n       } catch (IOException e) {\n         out.println(\"Cannot list keys for KeyProvider: \" + provider\n-            + \": \" + e.getMessage());\n+            + \": \" + e.toString());\n         throw e;\n       }\n     }\n@@ -350,12 +350,12 @@\n           printProviderWritten();\n         } catch (NoSuchAlgorithmException e) {\n           out.println(\"Cannot roll key: \" + keyName + \" within KeyProvider: \"\n-              + provider);\n+              + provider + \". \" + e.toString());\n           throw e;\n         }\n       } catch (IOException e1) {\n         out.println(\"Cannot roll key: \" + keyName + \" within KeyProvider: \"\n-            + provider);\n+            + provider + \". \" + e1.toString());\n         throw e1;\n       }\n     }\n@@ -422,7 +422,7 @@\n           out.println(keyName + \" has been successfully deleted.\");\n           printProviderWritten();\n         } catch (IOException e) {\n-          out.println(keyName + \" has not been deleted.\");\n+          out.println(keyName + \" has not been deleted. \" + e.toString());\n           throw e;\n         }\n       }\n@@ -484,13 +484,13 @@\n             + options.toString() + \".\");\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (IOException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       }\n     }\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 490,
        "bugNodeStartChar": 16400,
        "bugNodeLength": 14,
        "fixLineNum": 490,
        "fixNodeStartChar": 16400,
        "fixNodeLength": 12,
        "sourceBeforeFix": "e.getMessage()",
        "sourceAfterFix": "e.toString()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ea7fb1862789fea49f52407e31316885612d1d41",
        "fixCommitParentSHA1": "1f1358b8457b49820c4ec005d0e5b40e376bfe8d",
        "bugFilePath": "connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java",
        "fixPatch": "diff --git a/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java b/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\nindex f17e77f..8bf5474 100644\n--- a/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\n+++ b/connector/src/main/java/org/jboss/as/connector/subsystems/resourceadapters/ResourceAdaptersRootResourceDefinition.java\n@@ -68,7 +68,7 @@\n         TransformationDescription.Tools.register(builder120.build(), subsystem, ModelVersion.create(1, 3, 0));\n         ResourceTransformationDescriptionBuilder builder200 = TransformationDescriptionBuilder.Factory.createSubsystemInstance();\n         ResourceAdapterResourceDefinition.registerTransformers200(builder200);\n-        TransformationDescription.Tools.register(builder120.build(), subsystem, ModelVersion.create(2, 0, 0));\n+        TransformationDescription.Tools.register(builder200.build(), subsystem, ModelVersion.create(2, 0, 0));\n \n     }\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 71,
        "bugNodeStartChar": 4081,
        "bugNodeLength": 18,
        "fixLineNum": 71,
        "fixNodeStartChar": 4081,
        "fixNodeLength": 18,
        "sourceBeforeFix": "builder120.build()",
        "sourceAfterFix": "builder200.build()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "114870164ba9822afc3a92eefe5258f54a1c6a17",
        "fixCommitParentSHA1": "845ab7d135ab688e4943bd0f5472f0a5401528f8",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\nindex 4de3611..f71b5a3 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/runtime/TaskInvolvementTest.java\n@@ -26,7 +26,7 @@\n             assertEquals(1, taskService.createTaskQuery()\n                     .or()\n                     .taskInvolvedUser(\"involvedUser\")\n-                    .taskInvolvedGroups(groups)\n+                    .taskInvolvedGroupsIn(groups)\n                     .endOr()\n                     .count());\n \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 26,
        "bugNodeStartChar": 797,
        "bugNodeLength": 157,
        "fixLineNum": 26,
        "fixNodeStartChar": 797,
        "fixNodeLength": 159,
        "sourceBeforeFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroups(groups)",
        "sourceAfterFix": "taskService.createTaskQuery().or().taskInvolvedUser(\"involvedUser\").taskInvolvedGroupsIn(groups)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "cbed2a13b8417c5f78f4f0ac1cea2f9b6e4f5526",
        "fixCommitParentSHA1": "1c142484a3716712920867dd6faf8cd933696408",
        "bugFilePath": "stratosphere-java/src/main/java/eu/stratosphere/api/java/tuple/Tuple.java",
        "fixPatch": "diff --git a/stratosphere-java/src/main/java/eu/stratosphere/api/java/tuple/Tuple.java b/stratosphere-java/src/main/java/eu/stratosphere/api/java/tuple/Tuple.java\nindex fc8a07d..e0ecb40 100644\n--- a/stratosphere-java/src/main/java/eu/stratosphere/api/java/tuple/Tuple.java\n+++ b/stratosphere-java/src/main/java/eu/stratosphere/api/java/tuple/Tuple.java\n@@ -15,8 +15,8 @@\n /**\n  * The base class of all tuples. Tuples have a fix length and contain a set of fields,\n  * which may all be of different types. Because Tuples are strongly typed, each distinct\n- * tuple length is represented by its own class. Tuples exists with up to 22 fields and\n- * are described in the classes {@link Tuple1} to {@link Tuple22}.\n+ * tuple length is represented by its own class. Tuples exists with up to 25 fields and\n+ * are described in the classes {@link Tuple1} to {@link Tuple25}.\n  * <p>\n  * The fields in the tuples may be accessed directly a public fields, or via position (zero indexed)\n  * {@link #getField(int)}.\n@@ -28,7 +28,7 @@\n \t\n \tprivate static final long serialVersionUID = 1L;\n \t\n-\tpublic static final int MAX_ARITY = 22;\n+\tpublic static final int MAX_ARITY = 25;\n \t\n \t\n \t/**\n",
        "projectName": "apache.flink",
        "bugLineNum": 31,
        "bugNodeStartChar": 1668,
        "bugNodeLength": 14,
        "fixLineNum": 31,
        "fixNodeStartChar": 1668,
        "fixNodeLength": 14,
        "sourceBeforeFix": "MAX_ARITY=22",
        "sourceAfterFix": "MAX_ARITY=25"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fe6949476080c74f812a4496f858cfaec01e359f",
        "fixCommitParentSHA1": "e263796e9bb5791ef21e7f52f8456fea122f666e",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\nindex 4e69b45..96f15ec 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java\n@@ -290,14 +290,14 @@\n \t@Override\n \tpublic void log (String tag, String message) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void log (String tag, String message, Throwable exception) {\n \t\tif (logLevel > LOG_NONE) {\n-\t\t\tFoundation.NSLog(\"[info] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[info] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -305,14 +305,14 @@\n \t@Override\n \tpublic void error (String tag, String message) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void error (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_ERROR) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n@@ -320,14 +320,14 @@\n \t@Override\n \tpublic void debug (String tag, String message) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[debug] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[debug] \" + tag + \": \" + message);\n \t\t}\n \t}\n \n \t@Override\n \tpublic void debug (String tag, String message, Throwable exception) {\n \t\tif (logLevel >= LOG_DEBUG) {\n-\t\t\tFoundation.NSLog(\"[error] \" + tag + \": \" + message);\n+\t\t\tFoundation.log(\"[error] \" + tag + \": \" + message);\n \t\t\texception.printStackTrace();\n \t\t}\n \t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 308,
        "bugNodeStartChar": 9532,
        "bugNodeLength": 51,
        "fixLineNum": 308,
        "fixNodeStartChar": 9532,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Foundation.NSLog(\"[error] \" + tag + \": \"+ message)",
        "sourceAfterFix": "Foundation.log(\"[error] \" + tag + \": \"+ message)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "14ac271dc3a6481600560da99341aba0c692e0ce",
        "fixCommitParentSHA1": "a6630fb527f3853aa94a4e8fbe16f693bcb49bbe",
        "bugFilePath": "src/main/java/spark/CustomErrorPages.java",
        "fixPatch": "diff --git a/src/main/java/spark/CustomErrorPages.java b/src/main/java/spark/CustomErrorPages.java\nindex 7450924..ff7b124 100644\n--- a/src/main/java/spark/CustomErrorPages.java\n+++ b/src/main/java/spark/CustomErrorPages.java\n@@ -35,7 +35,7 @@\n         Object customRenderer = CustomErrorPages.getInstance().customPages.get(status);\r\n         Object customPage;\r\n \r\n-        customPage = status == 400 ? NOT_FOUND : INTERNAL_ERROR;\r\n+        customPage = status == 404 ? NOT_FOUND : INTERNAL_ERROR;\r\n \r\n         if (customRenderer instanceof String) {\r\n             customPage = customRenderer;\r\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 38,
        "bugNodeStartChar": 1316,
        "bugNodeLength": 13,
        "fixLineNum": 38,
        "fixNodeStartChar": 1279,
        "fixNodeLength": 13,
        "sourceBeforeFix": "status == 400",
        "sourceAfterFix": "status == 404"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5febe68b3c812a25f60d16e8faa74e39e87528a7",
        "fixCommitParentSHA1": "2b59c4b6fe289e1d293fea533c5a4de2fcce85f6",
        "bugFilePath": "retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java",
        "fixPatch": "diff --git a/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java b/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java\nindex 8b5ed7d..7ad58b2 100644\n--- a/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java\n+++ b/retrofit-converters/simplexml/src/test/java/retrofit2/converter/simplexml/SimpleXmlConverterFactoryTest.java\n@@ -71,8 +71,9 @@\n     assertThat(body.getCount()).isEqualTo(10);\n \n     RecordedRequest request = server.takeRequest();\n-    assertThat(request.getBody().readUtf8()).isEqualTo(\n-        \"<my-object><message>hello world</message><count>10</count></my-object>\");\n+    assertThat(request.getBody().readUtf8()).isIn(\n+        \"<my-object><message>hello world</message><count>10</count></my-object>\",\n+        \"<my-object><count>10</count><message>hello world</message></my-object>\");\n     assertThat(request.getHeader(\"Content-Type\")).isEqualTo(\"application/xml; charset=UTF-8\");\n   }\n \n",
        "projectName": "square.retrofit",
        "bugLineNum": 74,
        "bugNodeStartChar": 2641,
        "bugNodeLength": 133,
        "fixLineNum": 74,
        "fixNodeStartChar": 2641,
        "fixNodeLength": 210,
        "sourceBeforeFix": "assertThat(request.getBody().readUtf8()).isEqualTo(\"<my-object><message>hello world</message><count>10</count></my-object>\")",
        "sourceAfterFix": "assertThat(request.getBody().readUtf8()).isIn(\"<my-object><message>hello world</message><count>10</count></my-object>\",\"<my-object><count>10</count><message>hello world</message></my-object>\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a74d72d93563fd47ecb3846e594fa5476da6f555",
        "fixCommitParentSHA1": "1aec40ff9d21fe9372da13dda0dad566ec2059bc",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java b/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java\nindex bfda127..1351da0 100644\n--- a/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java\n@@ -1394,7 +1394,7 @@\n         latch.await();\n         es.shutdown();\n         assertTrue(es.awaitTermination(5, TimeUnit.SECONDS));\n-        for (int i = 0; i < 50; i++) {\n+        for (int i = 0; i < 100; i++) {\n             sleep(1000);\n             Runtime.getRuntime().gc();\n             long usedMemoryEnd = getUsedMemoryAsMB();\n@@ -1446,7 +1446,7 @@\n         latch.await();\n         es.shutdown();\n         assertTrue(es.awaitTermination(5, TimeUnit.SECONDS));\n-        for (int i = 0; i < 50; i++) {\n+        for (int i = 0; i < 100; i++) {\n             sleep(1000);\n             Runtime.getRuntime().gc();\n             long usedMemoryEnd = getUsedMemoryAsMB();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1397,
        "bugNodeStartChar": 57995,
        "bugNodeLength": 6,
        "fixLineNum": 1397,
        "fixNodeStartChar": 57995,
        "fixNodeLength": 7,
        "sourceBeforeFix": "i < 50",
        "sourceAfterFix": "i < 100"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7c3d863cf7e5c361a71e35e850ffc72550ada997",
        "fixCommitParentSHA1": "55406d91d20e43ba3e01d4b882ef036b16eb798b",
        "bugFilePath": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\nindex ac64130..f3633bd 100644\n--- a/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\n+++ b/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/security/servlet/EndpointRequest.java\n@@ -317,11 +317,11 @@\n \n \t\tpublic RequestMatcher antPath(RequestMatcherProvider matcherProvider,\n \t\t\t\tString... parts) {\n-\t\t\tString pattern = this.prefix;\n+\t\t\tStringBuilder pattern = new StringBuilder(this.prefix);\n \t\t\tfor (String part : parts) {\n-\t\t\t\tpattern += part;\n+\t\t\t\tpattern.append(part);\n \t\t\t}\n-\t\t\treturn matcherProvider.getRequestMatcher(pattern);\n+\t\t\treturn matcherProvider.getRequestMatcher(pattern.toString());\n \t\t}\n \n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 320,
        "bugNodeStartChar": 11061,
        "bugNodeLength": 29,
        "fixLineNum": 320,
        "fixNodeStartChar": 11061,
        "fixNodeLength": 55,
        "sourceBeforeFix": "String pattern=this.prefix; ",
        "sourceAfterFix": "StringBuilder pattern=new StringBuilder(this.prefix); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionHiddenFieldTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionHiddenFieldTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionHiddenFieldTest.java\nindex dc88696..9a26db1 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionHiddenFieldTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionHiddenFieldTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck;\n \n-public class XpathRegressionHiddenFieldTest extends AbstractXpathTestSupport {\n+public class XpathRegressionHiddenFieldTest extends XpathTestSupport {\n \n     @Test\n     public void testOne() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1313,
        "bugNodeLength": 2017,
        "fixLineNum": 31,
        "fixNodeStartChar": 1313,
        "fixNodeLength": 2009,
        "sourceBeforeFix": "public class XpathRegressionHiddenFieldTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=HiddenFieldCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionExplicitOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);     final String[] expectedViolation={\"10:34: \" + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,\"value\")};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionExplicitOne']/OBJBLOCK\" + \"/INSTANCE_INIT/SLIST/EXPR/METHOD_CALL/ELIST/LAMBDA/PARAMETERS\" + \"/PARAMETER_DEF[@text='value']/IDENT\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=HiddenFieldCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionExplicitTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);     final String[] expectedViolation={\"8:45: \" + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,\"other\")};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionExplicitTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='method']/PARAMETERS/PARAMETER_DEF[@text='other']/IDENT\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionHiddenFieldTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=HiddenFieldCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionExplicitOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);     final String[] expectedViolation={\"10:34: \" + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,\"value\")};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionExplicitOne']/OBJBLOCK\" + \"/INSTANCE_INIT/SLIST/EXPR/METHOD_CALL/ELIST/LAMBDA/PARAMETERS\" + \"/PARAMETER_DEF[@text='value']/IDENT\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=HiddenFieldCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionExplicitTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(HiddenFieldCheck.class);     final String[] expectedViolation={\"8:45: \" + getCheckMessage(HiddenFieldCheck.class,HiddenFieldCheck.MSG_KEY,\"other\")};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionExplicitTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='method']/PARAMETERS/PARAMETER_DEF[@text='other']/IDENT\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "4f952dac30892ce9458bee0403d908ee642c4481",
        "fixCommitParentSHA1": "517b4a2f15020263bac77ba06b605e3747f07219",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/descriptions/common/InterfaceDescription.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/descriptions/common/InterfaceDescription.java b/controller/src/main/java/org/jboss/as/controller/descriptions/common/InterfaceDescription.java\nindex e9333c8..aa0e427 100644\n--- a/controller/src/main/java/org/jboss/as/controller/descriptions/common/InterfaceDescription.java\n+++ b/controller/src/main/java/org/jboss/as/controller/descriptions/common/InterfaceDescription.java\n@@ -166,18 +166,18 @@\n             .build();\n \n     public static final AttributeDefinition ANY_ADDRESS = SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.ANY_ADDRESS, ModelType.BOOLEAN)\n-            .setAllowExpression(false).setAllowNull(false).setRestartAllServices()\n-            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, true))\n+            .setAllowExpression(false).setAllowNull(true).setRestartAllServices()\n+            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, false))\n             .addAlternatives(OTHERS).addAlternatives(ModelDescriptionConstants.ANY_IPV4_ADDRESS, ModelDescriptionConstants.ANY_IPV6_ADDRESS)\n             .build();\n     public static final AttributeDefinition ANY_IPV4_ADDRESS = SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.ANY_IPV4_ADDRESS, ModelType.BOOLEAN)\n-            .setAllowExpression(false).setAllowNull(false).setRestartAllServices()\n-            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, true))\n+            .setAllowExpression(false).setAllowNull(true).setRestartAllServices()\n+            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, false))\n             .addAlternatives(OTHERS).addAlternatives(ModelDescriptionConstants.ANY_ADDRESS, ModelDescriptionConstants.ANY_IPV6_ADDRESS)\n             .build();\n     public static final AttributeDefinition ANY_IPV6_ADDRESS = SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.ANY_IPV6_ADDRESS, ModelType.BOOLEAN)\n-            .setAllowExpression(false).setAllowNull(false).setRestartAllServices()\n-            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, true))\n+            .setAllowExpression(false).setAllowNull(true).setRestartAllServices()\n+            .setValidator(new ModelTypeValidator(ModelType.BOOLEAN, true, false))\n             .addAlternatives(OTHERS).addAlternatives(ModelDescriptionConstants.ANY_ADDRESS, ModelDescriptionConstants.ANY_IPV4_ADDRESS)\n             .build();\n     public static final AttributeDefinition INET_ADDRESS = SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.INET_ADDRESS, ModelType.STRING)\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 168,
        "bugNodeStartChar": 7789,
        "bugNodeLength": 156,
        "fixLineNum": 168,
        "fixNodeStartChar": 7789,
        "fixNodeLength": 155,
        "sourceBeforeFix": "SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.ANY_ADDRESS,ModelType.BOOLEAN).setAllowExpression(false).setAllowNull(false)",
        "sourceAfterFix": "SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.ANY_ADDRESS,ModelType.BOOLEAN).setAllowExpression(false).setAllowNull(true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "4aecd0d356c9990ebf8039b4b412fa08ca0c9353",
        "fixCommitParentSHA1": "b880e2d6d4b3b43fd235781c5758eb8fe4eae209",
        "bugFilePath": "src/edu/stanford/nlp/util/Execution.java",
        "fixPatch": "diff --git a/src/edu/stanford/nlp/util/Execution.java b/src/edu/stanford/nlp/util/Execution.java\nindex d2d2eb3..2a134c0 100644\n--- a/src/edu/stanford/nlp/util/Execution.java\n+++ b/src/edu/stanford/nlp/util/Execution.java\n@@ -597,7 +597,7 @@\n       log(FORCE, t);\n       exitCode = 1;\n     }\n-    endTrack(\"main\"); //ends main\n+    endTracksTo(\"main\");  // end main\n     if (exit) {\n       System.exit(exitCode);\n     }\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 600,
        "bugNodeStartChar": 20370,
        "bugNodeLength": 16,
        "fixLineNum": 600,
        "fixNodeStartChar": 20370,
        "fixNodeLength": 19,
        "sourceBeforeFix": "endTrack(\"main\")",
        "sourceAfterFix": "endTracksTo(\"main\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c136490318387755a73ef7061050010b0ffe6125",
        "fixCommitParentSHA1": "383f6c69b3add555b7d38ef8603cb769ecb26721",
        "bugFilePath": "modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java",
        "fixPatch": "diff --git a/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java b/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\nindex 4e7f3ea..59541d2 100644\n--- a/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\n+++ b/modules/cpr/src/test/java/org/atmosphere/cpr/WriteTimeoutTest.java\n@@ -60,7 +60,7 @@\n         ar = new AtmosphereResourceImpl(config,\n                 broadcaster,\n                 mock(AtmosphereRequest.class),\n-                AtmosphereResponse.create(),\n+                AtmosphereResponse.newInstance(),\n                 mock(BlockingIOCometSupport.class),\n                 atmosphereHandler);\n \n@@ -85,7 +85,7 @@\n         ar = new AtmosphereResourceImpl(config,\n                 broadcaster,\n                 mock(AtmosphereRequest.class),\n-                AtmosphereResponse.create(),\n+                AtmosphereResponse.newInstance(),\n                 mock(BlockingIOCometSupport.class),\n                 atmosphereHandler);\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 63,
        "bugNodeStartChar": 2356,
        "bugNodeLength": 27,
        "fixLineNum": 63,
        "fixNodeStartChar": 2356,
        "fixNodeLength": 32,
        "sourceBeforeFix": "AtmosphereResponse.create()",
        "sourceAfterFix": "AtmosphereResponse.newInstance()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bfb69f6eeabb7ba6140f95d27c6b16f6f2e40d47",
        "fixCommitParentSHA1": "10f82d19223e19a2e8b360ced7972126942416df",
        "bugFilePath": "hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/TestJobQueueInformation.java",
        "fixPatch": "diff --git a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/TestJobQueueInformation.java b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/TestJobQueueInformation.java\nindex b18a527..ea2980c 100644\n--- a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/TestJobQueueInformation.java\n+++ b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/TestJobQueueInformation.java\n@@ -98,7 +98,7 @@\n     dfsCluster.shutdown();\n   }\n \n-  public void testJobQueues() throws IOException {\n+  public void testJobQueues() throws Exception {\n     JobClient jc = new JobClient(mrCluster.createJobConf());\n     String expectedQueueInfo = \"Maximum Tasks Per Job :: 10\";\n     JobQueueInfo[] queueInfos = jc.getQueues();\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 101,
        "bugNodeStartChar": 3601,
        "bugNodeLength": 1577,
        "fixLineNum": 101,
        "fixNodeStartChar": 3601,
        "fixNodeLength": 1575,
        "sourceBeforeFix": "public void testJobQueues() throws IOException {   JobClient jc=new JobClient(mrCluster.createJobConf());   String expectedQueueInfo=\"Maximum Tasks Per Job :: 10\";   JobQueueInfo[] queueInfos=jc.getQueues();   assertNotNull(queueInfos);   assertEquals(1,queueInfos.length);   assertEquals(\"default\",queueInfos[0].getQueueName());   assertEquals(QueueState.RUNNING.getStateName(),queueInfos[0].getQueueState());   JobConf conf=mrCluster.createJobConf();   FileSystem fileSys=dfsCluster.getFileSystem();   conf=configureWaitingJob(conf);   conf.setJobName(\"test-job-queue-info-test\");   fileSys.delete(SHARE_DIR,true);   RunningJob rJob=jc.submitJob(conf);   while (rJob.getJobState() != JobStatus.RUNNING) {     UtilsForTests.waitFor(10);   }   int numberOfJobs=0;   for (  JobQueueInfo queueInfo : queueInfos) {     JobStatus[] jobStatusList=jc.getJobsFromQueue(queueInfo.getQueueName());     assertNotNull(queueInfo.getQueueName());     assertNotNull(queueInfo.getSchedulingInfo());     assertEquals(expectedQueueInfo,queueInfo.getSchedulingInfo());     numberOfJobs+=jobStatusList.length;     for (    JobStatus status : jobStatusList) {       assertEquals(JOB_SCHEDULING_INFO,status.getSchedulingInfo());     }   }   assertEquals(1,numberOfJobs);   UtilsForTests.signalTasks(dfsCluster,fileSys,getSignalFile(),getSignalFile(),4); } ",
        "sourceAfterFix": "public void testJobQueues() throws Exception {   JobClient jc=new JobClient(mrCluster.createJobConf());   String expectedQueueInfo=\"Maximum Tasks Per Job :: 10\";   JobQueueInfo[] queueInfos=jc.getQueues();   assertNotNull(queueInfos);   assertEquals(1,queueInfos.length);   assertEquals(\"default\",queueInfos[0].getQueueName());   assertEquals(QueueState.RUNNING.getStateName(),queueInfos[0].getQueueState());   JobConf conf=mrCluster.createJobConf();   FileSystem fileSys=dfsCluster.getFileSystem();   conf=configureWaitingJob(conf);   conf.setJobName(\"test-job-queue-info-test\");   fileSys.delete(SHARE_DIR,true);   RunningJob rJob=jc.submitJob(conf);   while (rJob.getJobState() != JobStatus.RUNNING) {     UtilsForTests.waitFor(10);   }   int numberOfJobs=0;   for (  JobQueueInfo queueInfo : queueInfos) {     JobStatus[] jobStatusList=jc.getJobsFromQueue(queueInfo.getQueueName());     assertNotNull(queueInfo.getQueueName());     assertNotNull(queueInfo.getSchedulingInfo());     assertEquals(expectedQueueInfo,queueInfo.getSchedulingInfo());     numberOfJobs+=jobStatusList.length;     for (    JobStatus status : jobStatusList) {       assertEquals(JOB_SCHEDULING_INFO,status.getSchedulingInfo());     }   }   assertEquals(1,numberOfJobs);   UtilsForTests.signalTasks(dfsCluster,fileSys,getSignalFile(),getSignalFile(),4); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b7e092e821021b7c0dbd91eacfe369181bfa28b8",
        "fixCommitParentSHA1": "73cd1c9c772a4618c64160f6df24b96c74f51d9d",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\nindex ad8a11f..27aaa43 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.java\n@@ -69,7 +69,7 @@\n \t\tRSocketWebSocketNettyRouteProvider rSocketWebsocketRouteProvider(RSocketProperties properties,\n \t\t\t\tRSocketMessageHandler messageHandler) {\n \t\t\treturn new RSocketWebSocketNettyRouteProvider(properties.getServer().getMappingPath(),\n-\t\t\t\t\tmessageHandler.serverAcceptor());\n+\t\t\t\t\tmessageHandler.serverResponder());\n \t\t}\n \n \t}\n@@ -101,7 +101,7 @@\n \t\t@ConditionalOnMissingBean\n \t\tRSocketServerBootstrap rSocketServerBootstrap(RSocketServerFactory rSocketServerFactory,\n \t\t\t\tRSocketMessageHandler rSocketMessageHandler) {\n-\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverAcceptor());\n+\t\t\treturn new RSocketServerBootstrap(rSocketServerFactory, rSocketMessageHandler.serverResponder());\n \t\t}\n \n \t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 104,
        "bugNodeStartChar": 4795,
        "bugNodeLength": 38,
        "fixLineNum": 104,
        "fixNodeStartChar": 4795,
        "fixNodeLength": 39,
        "sourceBeforeFix": "rSocketMessageHandler.serverAcceptor()",
        "sourceAfterFix": "rSocketMessageHandler.serverResponder()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9be0d0f5c99e2794eda0ae2189e4e3e6b7c7b132",
        "fixCommitParentSHA1": "6858f9681a0f19c9e697773ea76bb3d561539e0c",
        "bugFilePath": "components/camel-schematron/src/main/java/org/apache/camel/component/schematron/SchematronProducer.java",
        "fixPatch": "diff --git a/components/camel-schematron/src/main/java/org/apache/camel/component/schematron/SchematronProducer.java b/components/camel-schematron/src/main/java/org/apache/camel/component/schematron/SchematronProducer.java\nindex 70d73df..0b0e977 100644\n--- a/components/camel-schematron/src/main/java/org/apache/camel/component/schematron/SchematronProducer.java\n+++ b/components/camel-schematron/src/main/java/org/apache/camel/component/schematron/SchematronProducer.java\n@@ -52,7 +52,7 @@\n      * @throws Exception\n      */\n     public void process(Exchange exchange) throws Exception {\n-        final SchematronProcessor schematronProcessor = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules());\n+        final SchematronProcessor schematronProcessor = SchematronProcessorFactory.newSchematronEngine(endpoint.getRules());\n         final Object payload = exchange.getIn().getBody();\n         final String report;\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 55,
        "bugNodeStartChar": 2064,
        "bugNodeLength": 67,
        "fixLineNum": 55,
        "fixNodeStartChar": 2064,
        "fixNodeLength": 67,
        "sourceBeforeFix": "SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules())",
        "sourceAfterFix": "SchematronProcessorFactory.newSchematronEngine(endpoint.getRules())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "59c498e520c50c99b06affb6b2ff96959ae9744e",
        "fixCommitParentSHA1": "dd7c6f23472ca9bf0a8eef571c694921113145ee",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\nindex bafcb5c..1733f61 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/JarProfilerPluginClassInjector.java\n@@ -215,7 +215,7 @@\n             }\n         }\n         if (logger.isInfoEnabled()) {\n-            logger.debug(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n+            logger.info(\"defineClass pluginClass:{} cl:{}\", className, classLoader);\n         }\n         final byte[] bytes = ct.toBytecode();\n         return (Class<?>)DEFINE_CLASS.invoke(classLoader, ct.getName(), bytes, 0, bytes.length);\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 218,
        "bugNodeStartChar": 8928,
        "bugNodeLength": 72,
        "fixLineNum": 218,
        "fixNodeStartChar": 8928,
        "fixNodeLength": 71,
        "sourceBeforeFix": "logger.debug(\"defineClass pluginClass:{} cl:{}\",className,classLoader)",
        "sourceAfterFix": "logger.info(\"defineClass pluginClass:{} cl:{}\",className,classLoader)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "acc9d3961e1d0d8ebf12269a08566222ec382cf2",
        "fixCommitParentSHA1": "e19a3546c35eefddc429be2c0eb6193b72f719e6",
        "bugFilePath": "bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java b/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\nindex a815be2..341907b 100644\n--- a/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\n+++ b/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\n@@ -125,7 +125,7 @@\n \t\tput(43239, new VariableInformation(1,\t\"Total hot water operation time add\",\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43395, new VariableInformation(1,\t\"HPAC relays\",\t\t\t\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none\n \t\tput(43416, new VariableInformation(1,\t\"Compressor starts EB100-EP14\",\t\t\tNibeDataType.S32,\tType.Sensor));   // Unit: none\n-\t\tput(43420, new VariableInformation(10,\t\"Total operation time compressor\",\t\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n+\t\tput(43420, new VariableInformation(1,\t\"Total operation time compressor\",\t\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43424, new VariableInformation(1,\t\"Total hot water operation time compr\",\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43427, new VariableInformation(1,\t\"Compressor state EP14\",\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none, // 20 = Stopped, 40 = Starting, 60 = Running, 100 = Stopping \n \t\tput(43514, new VariableInformation(1,\t\"PCA-Base relayes EP14\",\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 128,
        "bugNodeStartChar": 9753,
        "bugNodeLength": 94,
        "fixLineNum": 128,
        "fixNodeStartChar": 9753,
        "fixNodeLength": 93,
        "sourceBeforeFix": "new VariableInformation(10,\"Total operation time compressor\",NibeDataType.S32,Type.Sensor)",
        "sourceAfterFix": "new VariableInformation(1,\"Total operation time compressor\",NibeDataType.S32,Type.Sensor)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5955ecf032d678aa27095bd5193e24ed865b32b4",
        "fixCommitParentSHA1": "187b2beb47ce960f6cb01712a760218267168e68",
        "bugFilePath": "processing/src/main/java/io/druid/query/aggregation/JavaScriptAggregatorFactory.java",
        "fixPatch": "diff --git a/processing/src/main/java/io/druid/query/aggregation/JavaScriptAggregatorFactory.java b/processing/src/main/java/io/druid/query/aggregation/JavaScriptAggregatorFactory.java\nindex ac85b75..90175c5 100644\n--- a/processing/src/main/java/io/druid/query/aggregation/JavaScriptAggregatorFactory.java\n+++ b/processing/src/main/java/io/druid/query/aggregation/JavaScriptAggregatorFactory.java\n@@ -150,7 +150,7 @@\n           @Override\n           public AggregatorFactory apply(String input)\n           {\n-            return new JavaScriptAggregatorFactory(name, Arrays.asList(input), fnAggregate, fnReset, fnCombine);\n+            return new JavaScriptAggregatorFactory(input, Arrays.asList(input), fnAggregate, fnReset, fnCombine);\n           }\n         }\n     );\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 153,
        "bugNodeStartChar": 5020,
        "bugNodeLength": 92,
        "fixLineNum": 153,
        "fixNodeStartChar": 5020,
        "fixNodeLength": 93,
        "sourceBeforeFix": "new JavaScriptAggregatorFactory(name,Arrays.asList(input),fnAggregate,fnReset,fnCombine)",
        "sourceAfterFix": "new JavaScriptAggregatorFactory(input,Arrays.asList(input),fnAggregate,fnReset,fnCombine)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f1b22619682351923e1d34481e6efe499f41745f",
        "fixCommitParentSHA1": "79e8351d357383e3b1f85f029883970fac601c46",
        "bugFilePath": "android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java",
        "fixPatch": "diff --git a/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java b/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\nindex 30f6477..dff58de 100644\n--- a/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n+++ b/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n@@ -209,8 +209,9 @@\n     fakePool.runAll();\n \n     // Check that the interruption of a SequentialExecutor's task is restored to the thread once\n-    // it is yielded.\n-    assertThat(Thread.currentThread().isInterrupted()).isTrue();\n+    // it is yielded. Clear the bit while checking so that the test doesn't hose JUnit or some other\n+    // test case.\n+    assertThat(Thread.currentThread().interrupted()).isTrue();\n   }\n \n   public void testInterrupt_doesNotStopExecution() {\n",
        "projectName": "google.guava",
        "bugLineNum": 213,
        "bugNodeStartChar": 5997,
        "bugNodeLength": 38,
        "fixLineNum": 214,
        "fixNodeStartChar": 6094,
        "fixNodeLength": 36,
        "sourceBeforeFix": "Thread.currentThread().isInterrupted()",
        "sourceAfterFix": "Thread.currentThread().interrupted()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cb937d34c8bba4cac4cee727931dddc8371bd38f",
        "fixCommitParentSHA1": "98a180bb7fa8ec943748d6cc61d92ec597bb60cd",
        "bugFilePath": "api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java b/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java\nindex 4345a9b..72884b9 100644\n--- a/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java\n@@ -333,7 +333,7 @@\n \t\t}\r\n \t\tif (!outcomesConcept.getAnswers().isEmpty()) {\r\n \t\t\tfor (ConceptAnswer conceptAnswer : outcomesConcept.getAnswers()) {\r\n-\t\t\t\tpossibleOutcomes.add(conceptAnswer.getConcept());\r\n+\t\t\t\tpossibleOutcomes.add(conceptAnswer.getAnswerConcept());\r\n \t\t\t}\r\n \t\t\treturn possibleOutcomes;\r\n \t\t}\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 336,
        "bugNodeStartChar": 11613,
        "bugNodeLength": 26,
        "fixLineNum": 336,
        "fixNodeStartChar": 11278,
        "fixNodeLength": 32,
        "sourceBeforeFix": "conceptAnswer.getConcept()",
        "sourceAfterFix": "conceptAnswer.getAnswerConcept()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9a2745bf5d2bf3d0f666ccdd4dde46490fcf1583",
        "fixCommitParentSHA1": "fa59143cbdc9923957e0454b2ea7184806b45ed5",
        "bugFilePath": "jaxr/src/main/java/org/jboss/as/jaxr/extension/JAXRSubsystemProviders.java",
        "fixPatch": "diff --git a/jaxr/src/main/java/org/jboss/as/jaxr/extension/JAXRSubsystemProviders.java b/jaxr/src/main/java/org/jboss/as/jaxr/extension/JAXRSubsystemProviders.java\nindex 7e87a7f..ea65442 100644\n--- a/jaxr/src/main/java/org/jboss/as/jaxr/extension/JAXRSubsystemProviders.java\n+++ b/jaxr/src/main/java/org/jboss/as/jaxr/extension/JAXRSubsystemProviders.java\n@@ -54,7 +54,7 @@\n             subsystem.get(DESCRIPTION).set(\"The JAXR subsystem\");\n             subsystem.get(HEAD_COMMENT_ALLOWED).set(true);\n             subsystem.get(TAIL_COMMENT_ALLOWED).set(true);\n-            subsystem.get(NAMESPACE).set(Namespace.CURRENT.toString());\n+            subsystem.get(NAMESPACE).set(Namespace.CURRENT.getUriString());\n \n             subsystem.get(ATTRIBUTES, ModelConstants.JNDI_NAME, ModelDescriptionConstants.DESCRIPTION).set(\"The datasource JNDI-NAME\");\n             subsystem.get(ATTRIBUTES, ModelConstants.JNDI_NAME, ModelDescriptionConstants.REQUIRED).set(true);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 57,
        "bugNodeStartChar": 2791,
        "bugNodeLength": 28,
        "fixLineNum": 57,
        "fixNodeStartChar": 2791,
        "fixNodeLength": 32,
        "sourceBeforeFix": "Namespace.CURRENT.toString()",
        "sourceAfterFix": "Namespace.CURRENT.getUriString()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b7a9f743db97d9925edf634525a7c8e6a6cc1dd1",
        "fixCommitParentSHA1": "71ecabd15322f7ca8a0a8cbb88965a0e1249dbd9",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\nindex 5bde0b0..10cc81c 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/initialization/ZWaveNodeStageAdvancer.java\n@@ -316,7 +316,7 @@\n \t\t\t\t\tif(currentStage.isStaticComplete()) {\n \t\t\t\t\t\t// If static stages are complete, then we skip forward to the next\n \t\t\t\t\t\t// stage.\n-\t\t\t\t\t\tlogger.debug(\"NODE {}: Retry timout: Advancing\");\n+\t\t\t\t\t\tlogger.debug(\"NODE {}: Retry timout: Advancing\", node.getNodeId());\n \t\t\t\t\t\tsetCurrentStage(currentStage.getNextStage());\n \t\t\t\t\t}\n \t\t\t\t\telse {\n@@ -324,7 +324,7 @@\n \t\t\t\t\t\t// up with incomplete information about the device.\n \t\t\t\t\t\t// During the static stages, we use the back off timer to pace things\n \t\t\t\t\t\t// and retry until the stage is complete\n-\t\t\t\t\t\tlogger.debug(\"NODE {}: Retry timout: Can't advance\");\n+\t\t\t\t\t\tlogger.debug(\"NODE {}: Retry timout: Can't advance\", node.getNodeId());\n \t\t\t\t\t\tbreak;\n \t\t\t\t\t}\n \t\t\t\t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 327,
        "bugNodeStartChar": 13948,
        "bugNodeLength": 52,
        "fixLineNum": 327,
        "fixNodeStartChar": 13948,
        "fixNodeLength": 70,
        "sourceBeforeFix": "logger.debug(\"NODE {}: Retry timout: Can't advance\")",
        "sourceAfterFix": "logger.debug(\"NODE {}: Retry timout: Can't advance\",node.getNodeId())"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "00840599a7a498cbd19d524ab5ad698365cbab4f",
        "fixCommitParentSHA1": "f96a7e0e57c382d2154fa7b004d18e6a6e2eaa89",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java b/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\nindex 6ffbd1b..2efe7e9 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\n@@ -925,13 +925,13 @@\n \t\tpublic void join(T1 in1, T2 in2, Collector<R> out) {\n \t\t\tfor(int i=0; i<fields.length; i++) {\n \t\t\t\tif(isFromFirst[i]) {\n-\t\t\t\t\tif(fields[i] >= 0) {\n+\t\t\t\t\tif(fields[i] >= 0 && in1 != null) {\n \t\t\t\t\t\toutTuple.setField(((Tuple)in1).getField(fields[i]), i);\n \t\t\t\t\t} else {\n \t\t\t\t\t\toutTuple.setField(in1, i);\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tif(fields[i] >= 0) {\n+\t\t\t\t\tif(fields[i] >= 0 && in2 != null) {\n \t\t\t\t\t\toutTuple.setField(((Tuple)in2).getField(fields[i]), i);\n \t\t\t\t\t} else {\n \t\t\t\t\t\toutTuple.setField(in2, i);\n",
        "projectName": "apache.flink",
        "bugLineNum": 928,
        "bugNodeStartChar": 41211,
        "bugNodeLength": 14,
        "fixLineNum": 928,
        "fixNodeStartChar": 41211,
        "fixNodeLength": 29,
        "sourceBeforeFix": "fields[i] >= 0",
        "sourceAfterFix": "fields[i] >= 0 && in1 != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bf40d52edbb88d5afaa35af24837e3b72ac84eab",
        "fixCommitParentSHA1": "8510d646bdb97321dcc7206d8e42b8179810396d",
        "bugFilePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java",
        "fixPatch": "diff --git a/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java\nindex 9fecda9..4a32ab7 100644\n--- a/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java\n+++ b/okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java\n@@ -2533,9 +2533,8 @@\n    * https://code.google.com/p/android/issues/detail?id=41576\n    */\n   @Test public void sameConnectionRedirectAndReuse() throws Exception {\n-    // TODO(jwilson): this behavior shouldn't rely on having another IP address to attempt.\n     urlFactory.setClient(urlFactory.client().newBuilder()\n-        .dns(new DoubleInetAddressDns())\n+        .dns(new SingleInetAddressDns())\n         .build());\n     server.enqueue(new MockResponse()\n         .setResponseCode(HttpURLConnection.HTTP_MOVED_TEMP)\n",
        "projectName": "square.okhttp",
        "bugLineNum": 2538,
        "bugNodeStartChar": 102679,
        "bugNodeLength": 26,
        "fixLineNum": 2538,
        "fixNodeStartChar": 102679,
        "fixNodeLength": 26,
        "sourceBeforeFix": "new DoubleInetAddressDns()",
        "sourceAfterFix": "new SingleInetAddressDns()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2798f6edf82b64780fd846aaa5b860185c87f915",
        "fixCommitParentSHA1": "b041bcdeb2b96589efd6e6058fb0ba9dc630e949",
        "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java",
        "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\nindex ec80980..73f13c3 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/superkoalio/SuperKoalio.java\n@@ -141,7 +141,7 @@\n \t\tkoala.stateTime += deltaTime;\r\n \r\n \t\t// check input and apply to velocity & state\r\n-\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.75f, 1)) && koala.grounded) {\r\n+\t\tif ((Gdx.input.isKeyPressed(Keys.SPACE) || isTouched(0.5f, 1)) && koala.grounded) {\r\n \t\t\tkoala.velocity.y += Koala.JUMP_VELOCITY;\r\n \t\t\tkoala.state = Koala.State.Jumping;\r\n \t\t\tkoala.grounded = false;\r\n@@ -219,7 +219,7 @@\n \t\t\t\tif (koala.velocity.y > 0) {\r\n \t\t\t\t\tkoala.position.y = tile.y - Koala.HEIGHT;\r\n \t\t\t\t\t// we hit a block jumping upwards, let's destroy it!\r\n-\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\t\t\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\t\t\t\tlayer.setCell((int)tile.x, (int)tile.y, null);\r\n \t\t\t\t} else {\r\n \t\t\t\t\tkoala.position.y = tile.y + tile.height;\r\n@@ -247,7 +247,7 @@\n \t\t// check if any finge is touch the area between startX and endX\r\n \t\t// startX/endX are given between 0 (left edge of the screen) and 1 (right edge of the screen)\r\n \t\tfor (int i = 0; i < 2; i++) {\r\n-\t\t\tfloat x = Gdx.input.getX() / (float)Gdx.graphics.getWidth();\r\n+\t\t\tfloat x = Gdx.input.getX(i) / (float)Gdx.graphics.getWidth();\r\n \t\t\tif (Gdx.input.isTouched(i) && (x >= startX && x <= endX)) {\r\n \t\t\t\treturn true;\r\n \t\t\t}\r\n@@ -256,7 +256,7 @@\n \t}\r\n \r\n \tprivate void getTiles (int startX, int startY, int endX, int endY, Array<Rectangle> tiles) {\r\n-\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(1);\r\n+\t\tTiledMapTileLayer layer = (TiledMapTileLayer)map.getLayers().get(\"walls\");\r\n \t\trectPool.freeAll(tiles);\r\n \t\ttiles.clear();\r\n \t\tfor (int y = startY; y <= endY; y++) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 250,
        "bugNodeStartChar": 9160,
        "bugNodeLength": 16,
        "fixLineNum": 250,
        "fixNodeStartChar": 8911,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Gdx.input.getX()",
        "sourceAfterFix": "Gdx.input.getX(i)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "864435a71cd9e8b0dec4150284ee43372167b091",
        "fixCommitParentSHA1": "fd6e6dc5922fcbf058911c6b72e21bf8c9c4ed50",
        "bugFilePath": "guava-tests/test/com/google/common/base/StopwatchTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/base/StopwatchTest.java b/guava-tests/test/com/google/common/base/StopwatchTest.java\nindex eb3436c..da4f15b 100644\n--- a/guava-tests/test/com/google/common/base/StopwatchTest.java\n+++ b/guava-tests/test/com/google/common/base/StopwatchTest.java\n@@ -160,18 +160,18 @@\n   public void testElapsedMillis() {\n     stopwatch.start();\n     ticker.advance(999999);\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(1);\n-    assertEquals(1, stopwatch.elapsedMillis());\n+    assertEquals(1, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_whileRunning() {\n     ticker.advance(78000000);\n     stopwatch.start();\n-    assertEquals(0, stopwatch.elapsedMillis());\n+    assertEquals(0, stopwatch.elapsed(MILLISECONDS));\n \n     ticker.advance(345000000);\n-    assertEquals(345, stopwatch.elapsedMillis());\n+    assertEquals(345, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_notRunning() {\n@@ -180,7 +180,7 @@\n     ticker.advance(4000000);\n     stopwatch.stop();\n     ticker.advance(9000000);\n-    assertEquals(4, stopwatch.elapsedMillis());\n+    assertEquals(4, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   public void testElapsedMillis_multipleSegments() {\n@@ -191,13 +191,13 @@\n     ticker.advance(16000000);\n \n     stopwatch.start();\n-    assertEquals(9, stopwatch.elapsedMillis());\n+    assertEquals(9, stopwatch.elapsed(MILLISECONDS));\n     ticker.advance(25000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n \n     stopwatch.stop();\n     ticker.advance(36000000);\n-    assertEquals(34, stopwatch.elapsedMillis());\n+    assertEquals(34, stopwatch.elapsed(MILLISECONDS));\n   }\n \n   @GwtIncompatible(\"String.format()\")\n",
        "projectName": "google.guava",
        "bugLineNum": 200,
        "bugNodeStartChar": 5286,
        "bugNodeLength": 25,
        "fixLineNum": 200,
        "fixNodeStartChar": 5286,
        "fixNodeLength": 31,
        "sourceBeforeFix": "stopwatch.elapsedMillis()",
        "sourceAfterFix": "stopwatch.elapsed(MILLISECONDS)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "057871ac29b57a45bbbe7ce6328c942056e075ab",
        "fixCommitParentSHA1": "a4c07cb84dbd1613bcde2a944a1b5bce0a8189ed",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/operations/deployment/ServerGroupDeploymentReplaceHandler.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/operations/deployment/ServerGroupDeploymentReplaceHandler.java b/host-controller/src/main/java/org/jboss/as/domain/controller/operations/deployment/ServerGroupDeploymentReplaceHandler.java\nindex 3e9eed6..9658ed3 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/operations/deployment/ServerGroupDeploymentReplaceHandler.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/operations/deployment/ServerGroupDeploymentReplaceHandler.java\n@@ -70,7 +70,7 @@\n \n     @Override\n     public ModelNode getModelDescription(Locale locale) {\n-        return DeploymentDescription.getDeployDeploymentOperation(locale);\n+        return DeploymentDescription.getReplaceDeploymentOperation(locale);\n     }\n \n     public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 73,
        "bugNodeStartChar": 3573,
        "bugNodeLength": 58,
        "fixLineNum": 73,
        "fixNodeStartChar": 3573,
        "fixNodeLength": 59,
        "sourceBeforeFix": "DeploymentDescription.getDeployDeploymentOperation(locale)",
        "sourceAfterFix": "DeploymentDescription.getReplaceDeploymentOperation(locale)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "cbed2a13b8417c5f78f4f0ac1cea2f9b6e4f5526",
        "fixCommitParentSHA1": "1c142484a3716712920867dd6faf8cd933696408",
        "bugFilePath": "stratosphere-java/src/main/java/eu/stratosphere/api/java/typeutils/TupleTypeInfo.java",
        "fixPatch": "diff --git a/stratosphere-java/src/main/java/eu/stratosphere/api/java/typeutils/TupleTypeInfo.java b/stratosphere-java/src/main/java/eu/stratosphere/api/java/typeutils/TupleTypeInfo.java\nindex 6630386..ea26376 100644\n--- a/stratosphere-java/src/main/java/eu/stratosphere/api/java/typeutils/TupleTypeInfo.java\n+++ b/stratosphere-java/src/main/java/eu/stratosphere/api/java/typeutils/TupleTypeInfo.java\n@@ -32,7 +32,7 @@\n \tprivate final Class<T> tupleType;\n \t\n \tpublic TupleTypeInfo(Class<T> tupleType, TypeInformation<?>... types) {\n-\t\tif (types == null || types.length == 0 || types.length >= Tuple.MAX_ARITY) {\n+\t\tif (types == null || types.length == 0 || types.length > Tuple.MAX_ARITY) {\n \t\t\tthrow new IllegalArgumentException();\n \t\t}\n \t\t\n",
        "projectName": "apache.flink",
        "bugLineNum": 35,
        "bugNodeStartChar": 1718,
        "bugNodeLength": 31,
        "fixLineNum": 35,
        "fixNodeStartChar": 1718,
        "fixNodeLength": 30,
        "sourceBeforeFix": "types.length >= Tuple.MAX_ARITY",
        "sourceAfterFix": "types.length > Tuple.MAX_ARITY"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "b867d32c799201e75770aaa0008f85694c3653f8",
        "fixCommitParentSHA1": "e90cde7d2db0fde2c30dc7a1a46c939aa1f135db",
        "bugFilePath": "components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java\nindex cc3e48f..d6ed579 100644\n--- a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java\n+++ b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfEndpoint.java\n@@ -923,7 +923,9 @@\n                 message.remove(CxfConstants.CAMEL_CXF_ATTACHMENTS);\n             }\n \n-            if (DataFormat.PAYLOAD == message.get(DataFormat.class)) {\n+            // Don't try to reset the parameters if the parameter is not CxfPayload instance\n+            // as the setParameter will be called more than once when using the fail over feature\n+            if (DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload) {\n \n                 CxfPayload<?> payload = (CxfPayload<?>) params[0];\n                 List<Source> elements = payload.getBodySources();\n",
        "projectName": "apache.camel",
        "bugLineNum": 926,
        "bugNodeStartChar": 33153,
        "bugNodeLength": 51,
        "fixLineNum": 928,
        "fixNodeStartChar": 33344,
        "fixNodeLength": 86,
        "sourceBeforeFix": "DataFormat.PAYLOAD == message.get(DataFormat.class)",
        "sourceAfterFix": "DataFormat.PAYLOAD == message.get(DataFormat.class) && params[0] instanceof CxfPayload"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5e911029a964c7c14df57a6b03c7b0e370c609b8",
        "fixCommitParentSHA1": "db8621e0da0affe631f3e656ef8d79c59bd8b328",
        "bugFilePath": "legacy/jacorb/src/main/java/org/jboss/as/jacorb/TransformUtils.java",
        "fixPatch": "diff --git a/legacy/jacorb/src/main/java/org/jboss/as/jacorb/TransformUtils.java b/legacy/jacorb/src/main/java/org/jboss/as/jacorb/TransformUtils.java\nindex 4188715..a1eedd9 100644\n--- a/legacy/jacorb/src/main/java/org/jboss/as/jacorb/TransformUtils.java\n+++ b/legacy/jacorb/src/main/java/org/jboss/as/jacorb/TransformUtils.java\n@@ -46,7 +46,7 @@\n         for (Property property : legacyModel.asPropertyList()) {\n             String name = property.getName();\n             final ModelNode legacyValue = property.getValue();\n-            if (legacyModel.isDefined()) {\n+            if (legacyValue.isDefined()) {\n                 final ModelNode value;\n                 switch (name) {\n                     case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 49,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 23,
        "fixLineNum": 49,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 23,
        "sourceBeforeFix": "legacyModel.isDefined()",
        "sourceAfterFix": "legacyValue.isDefined()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "30e80f8c5c7f0bb692dfd8efeadb24d1cf840be6",
        "fixCommitParentSHA1": "ec51b359c9d1ca36873b2de5251a7fbd8b4177f3",
        "bugFilePath": "transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java\nindex a5d3ab0..c1a6b3c 100644\n--- a/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java\n+++ b/transport/src/main/java/io/netty/channel/ChannelInboundMessageHandlerAdapter.java\n@@ -82,7 +82,7 @@\n                 try {\n                     if (!isSupported(msg)) {\n                         if (out == null) {\n-                            out = ctx.nextOutboundMessageBuffer();\n+                            out = ctx.nextInboundMessageBuffer();\n                         }\n                         out.add(msg);\n                         unsupportedFound = true;\n",
        "projectName": "netty.netty",
        "bugLineNum": 85,
        "bugNodeStartChar": 2922,
        "bugNodeLength": 31,
        "fixLineNum": 85,
        "fixNodeStartChar": 2922,
        "fixNodeLength": 30,
        "sourceBeforeFix": "ctx.nextOutboundMessageBuffer()",
        "sourceAfterFix": "ctx.nextInboundMessageBuffer()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7b6d887302ff951e04e9df4d907f6c7dfca608fb",
        "fixCommitParentSHA1": "0d62f9d2e47cc960422ca39070b116b3783ea750",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\nindex f06ddc8..649b193 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\n@@ -103,12 +103,12 @@\n         final DescriptionProvider readProxiesInfoConfiguration = new DefaultOperationDescriptionProvider(CommonAttributes.READ_PROXIES_CONFIGURATION, rootResolver);\n         registration.registerOperationHandler(CommonAttributes.READ_PROXIES_CONFIGURATION, ModClusterGetProxyConfiguration.INSTANCE, readProxiesInfoConfiguration, false, runtimeOnlyFlags);\n \n-        //These seem to be modifying the state so don't add the runtimeOnly stuff for now\n+        // add/remove a proxy from the proxy-list (it is not persisted operation).\n         final DescriptionProvider addProxy = new DefaultOperationDescriptionProvider(CommonAttributes.ADD_PROXY, rootResolver, HOST, PORT);\n-        registration.registerOperationHandler(CommonAttributes.ADD_PROXY, ModClusterAddProxy.INSTANCE, addProxy, false);\n+        registration.registerOperationHandler(CommonAttributes.ADD_PROXY, ModClusterAddProxy.INSTANCE, addProxy, false, runtimeOnlyFlags);\n \n         final DescriptionProvider removeProxy = new DefaultOperationDescriptionProvider(CommonAttributes.REMOVE_PROXY, rootResolver, HOST, PORT);\n-        registration.registerOperationHandler(CommonAttributes.REMOVE_PROXY, ModClusterRemoveProxy.INSTANCE, removeProxy, false);\n+        registration.registerOperationHandler(CommonAttributes.REMOVE_PROXY, ModClusterRemoveProxy.INSTANCE, removeProxy, false, runtimeOnlyFlags);\n \n         // node related operations.\n         final DescriptionProvider refresh = new DefaultOperationDescriptionProvider(CommonAttributes.REFRESH, rootResolver);\n@@ -119,23 +119,23 @@\n \n         // node (all contexts) related operations.\n         final DescriptionProvider enable = new DefaultOperationDescriptionProvider(CommonAttributes.ENABLE, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.ENABLE, ModClusterEnable.INSTANCE, enable, false);\n+        registration.registerOperationHandler(CommonAttributes.ENABLE, ModClusterEnable.INSTANCE, enable, false, runtimeOnlyFlags);\n \n         final DescriptionProvider disable = new DefaultOperationDescriptionProvider(CommonAttributes.DISABLE, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.DISABLE, ModClusterDisable.INSTANCE, disable, false);\n+        registration.registerOperationHandler(CommonAttributes.DISABLE, ModClusterDisable.INSTANCE, disable, false, runtimeOnlyFlags);\n \n         final DescriptionProvider stop = new DefaultOperationDescriptionProvider(CommonAttributes.STOP, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.STOP, ModClusterStop.INSTANCE, stop, false);\n+        registration.registerOperationHandler(CommonAttributes.STOP, ModClusterStop.INSTANCE, stop, false, runtimeOnlyFlags);\n \n         // Context related operations.\n         final DescriptionProvider enableContext = new DefaultOperationDescriptionProvider(CommonAttributes.ENABLE_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT);\n-        registration.registerOperationHandler(CommonAttributes.ENABLE_CONTEXT, ModClusterEnableContext.INSTANCE, enableContext, false);\n+        registration.registerOperationHandler(CommonAttributes.ENABLE_CONTEXT, ModClusterEnableContext.INSTANCE, enableContext, false, runtimeOnlyFlags);\n \n         final DescriptionProvider disableContext = new DefaultOperationDescriptionProvider(CommonAttributes.DISABLE_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT);\n-        registration.registerOperationHandler(CommonAttributes.DISABLE_CONTEXT, ModClusterDisableContext.INSTANCE, disableContext, false);\n+        registration.registerOperationHandler(CommonAttributes.DISABLE_CONTEXT, ModClusterDisableContext.INSTANCE, disableContext, false, runtimeOnlyFlags);\n \n         final DescriptionProvider stopContext = new DefaultOperationDescriptionProvider(CommonAttributes.STOP_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT, WAIT_TIME);\n-        registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT, ModClusterStopContext.INSTANCE, stopContext, false);\n+        registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT, ModClusterStopContext.INSTANCE, stopContext, false, runtimeOnlyFlags);\n     }\n \n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 138,
        "bugNodeStartChar": 8202,
        "bugNodeLength": 120,
        "fixLineNum": 138,
        "fixNodeStartChar": 8202,
        "fixNodeLength": 138,
        "sourceBeforeFix": "registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT,ModClusterStopContext.INSTANCE,stopContext,false)",
        "sourceAfterFix": "registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT,ModClusterStopContext.INSTANCE,stopContext,false,runtimeOnlyFlags)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "db556102db1b01327240df5c6265df1912104ec3",
        "fixCommitParentSHA1": "f9386c36231f158e62731bc09f3182f1e6e6aa47",
        "bugFilePath": "server/src/main/java/com/metamx/druid/master/SegmentReplicantLookup.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/master/SegmentReplicantLookup.java b/server/src/main/java/com/metamx/druid/master/SegmentReplicantLookup.java\nindex 41553b4..5607872 100644\n--- a/server/src/main/java/com/metamx/druid/master/SegmentReplicantLookup.java\n+++ b/server/src/main/java/com/metamx/druid/master/SegmentReplicantLookup.java\n@@ -52,7 +52,7 @@\n \n         // Also account for queued segments\n         for (DataSegment segment : serverHolder.getPeon().getSegmentsToLoad()) {\n-          Integer numReplicants = segmentsInCluster.get(segment.getIdentifier(), server.getTier());\n+          Integer numReplicants = loadingSegments.get(segment.getIdentifier(), server.getTier());\n           if (numReplicants == null) {\n             numReplicants = 0;\n           }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 55,
        "bugNodeStartChar": 2230,
        "bugNodeLength": 64,
        "fixLineNum": 55,
        "fixNodeStartChar": 2230,
        "fixNodeLength": 62,
        "sourceBeforeFix": "segmentsInCluster.get(segment.getIdentifier(),server.getTier())",
        "sourceAfterFix": "loadingSegments.get(segment.getIdentifier(),server.getTier())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "70f070f7158f18eb1396fedc8ae63b3827627219",
        "fixCommitParentSHA1": "bc30366a975b4df94d37e279ce724d61e942cdcf",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/cache/impl/HazelcastClientCacheManager.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/cache/impl/HazelcastClientCacheManager.java b/hazelcast-client/src/main/java/com/hazelcast/client/cache/impl/HazelcastClientCacheManager.java\nindex c489365..b0e40e6 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/cache/impl/HazelcastClientCacheManager.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/cache/impl/HazelcastClientCacheManager.java\n@@ -126,7 +126,7 @@\n     protected <K, V> CacheConfig<K, V> createConfigOnPartition(CacheConfig<K, V> cacheConfig) {\n         try {\n             int partitionId = clientContext.getPartitionService().getPartitionId(cacheConfig.getNameWithPrefix());\n-            CacheCreateConfigRequest request = new CacheCreateConfigRequest(cacheConfig, true, partitionId);\n+            CacheCreateConfigRequest request = new CacheCreateConfigRequest(cacheConfig, false, partitionId);\n             Future future = clientContext.getInvocationService()\n                                 .invokeOnKeyOwner(request, cacheConfig.getNameWithPrefix());\n             return (CacheConfig<K, V>) clientContext.getSerializationService().toObject(future.get());\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 129,
        "bugNodeStartChar": 5458,
        "bugNodeLength": 60,
        "fixLineNum": 129,
        "fixNodeStartChar": 5458,
        "fixNodeLength": 61,
        "sourceBeforeFix": "new CacheCreateConfigRequest(cacheConfig,true,partitionId)",
        "sourceAfterFix": "new CacheCreateConfigRequest(cacheConfig,false,partitionId)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "197c80a69418a88d3baa4d0b2c8b056c7b411320",
        "fixCommitParentSHA1": "12f4147df57593736fb69c17cfad3089eee7f543",
        "bugFilePath": "processing/src/main/java/io/druid/segment/LoggingProgressIndicator.java",
        "fixPatch": "diff --git a/processing/src/main/java/io/druid/segment/LoggingProgressIndicator.java b/processing/src/main/java/io/druid/segment/LoggingProgressIndicator.java\nindex e86716e..39b1bcb 100644\n--- a/processing/src/main/java/io/druid/segment/LoggingProgressIndicator.java\n+++ b/processing/src/main/java/io/druid/segment/LoggingProgressIndicator.java\n@@ -76,7 +76,7 @@\n   @Override\n   public void progressSection(String section, String message)\n   {\n-    Stopwatch sectionWatch = sections.remove(section);\n+    Stopwatch sectionWatch = sections.get(section);\n     if (sectionWatch == null) {\n       throw new ISE(\"[%s]: Cannot progress tracker for [%s]. Nothing started.\", progressName, section);\n     }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 79,
        "bugNodeStartChar": 2333,
        "bugNodeLength": 24,
        "fixLineNum": 79,
        "fixNodeStartChar": 2333,
        "fixNodeLength": 21,
        "sourceBeforeFix": "sections.remove(section)",
        "sourceAfterFix": "sections.get(section)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5221c15e183cb7029a305766d137d909f77e8941",
        "fixCommitParentSHA1": "b7a02b02d81c830d148355c90bc309bcd66fb592",
        "bugFilePath": "core/src/com/google/inject/TypeLiteral.java",
        "fixPatch": "diff --git a/core/src/com/google/inject/TypeLiteral.java b/core/src/com/google/inject/TypeLiteral.java\nindex 61034b3..d18087d 100644\n--- a/core/src/com/google/inject/TypeLiteral.java\n+++ b/core/src/com/google/inject/TypeLiteral.java\n@@ -171,7 +171,7 @@\n     for (int t = 0; t < types.length; t++) {\n       result[t] = resolve(types[t]);\n     }\n-    return ImmutableList.of(result);\n+    return ImmutableList.copyOf(result);\n   }\n \n   /**\n",
        "projectName": "google.guice",
        "bugLineNum": 174,
        "bugNodeStartChar": 5509,
        "bugNodeLength": 24,
        "fixLineNum": 174,
        "fixNodeStartChar": 5509,
        "fixNodeLength": 28,
        "sourceBeforeFix": "ImmutableList.of(result)",
        "sourceAfterFix": "ImmutableList.copyOf(result)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a8373f17c4ea0b2ad87b7bad71f9a2b27c2c28a1",
        "fixCommitParentSHA1": "4740f24c9aa35cc6c71aa7359018432853e5e7ee",
        "bugFilePath": "guava-tests/test/com/google/common/primitives/UnsignedBytesTest.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/primitives/UnsignedBytesTest.java b/guava-tests/test/com/google/common/primitives/UnsignedBytesTest.java\nindex 2724581..eac9422 100644\n--- a/guava-tests/test/com/google/common/primitives/UnsignedBytesTest.java\n+++ b/guava-tests/test/com/google/common/primitives/UnsignedBytesTest.java\n@@ -233,8 +233,23 @@\n     try {\n       Class.forName(unsafeComparatorClassName());\n       return true;\n-    } catch (ExceptionInInitializerError | ClassNotFoundException tolerable) {\n-      // probably running on Android\n+    } catch (Error | ClassNotFoundException tolerable) {\n+      /*\n+       * We're probably running on Android.\n+       *\n+       * A note on exception types:\n+       *\n+       * Android API level 10 throws ExceptionInInitializerError the first time and\n+       * ClassNotFoundException thereafter.\n+       *\n+       * Android API level 26 and JVM8 both let our Error propagate directly the first time and\n+       * throw NoClassDefFoundError thereafter. This is the proper behavior according to the spec.\n+       * See https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.4.2 (steps #11 and\n+       * #5).\n+       *\n+       * Note that that \"first time\" might happen in a test other than\n+       * testLexicographicalComparatorChoice!\n+       */\n       return false;\n     }\n   }\n",
        "projectName": "google.guava",
        "bugLineNum": 236,
        "bugNodeStartChar": 7747,
        "bugNodeLength": 52,
        "fixLineNum": 236,
        "fixNodeStartChar": 7747,
        "fixNodeLength": 30,
        "sourceBeforeFix": "ExceptionInInitializerError|ClassNotFoundException",
        "sourceAfterFix": "Error|ClassNotFoundException"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1a9bb447fd14415ef270f3dd7af8a0d4e0017177",
        "fixCommitParentSHA1": "20f724d2f2fab6996c7588e6d0115f35bfde8d32",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\nindex fe2b6df..994fe7d 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultAtmosphereResourceFactory.java\n@@ -87,7 +87,7 @@\n      */\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a) {\n         AtmosphereResource r = null;\n@@ -114,7 +114,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler) {\n@@ -135,7 +135,7 @@\n     @Override\n     public final AtmosphereResource create(AtmosphereConfig config,\n                                            Broadcaster broadcaster,\n-                                           DefaultAtmosphereRequest request,\n+                                           AtmosphereRequest request,\n                                            AtmosphereResponse response,\n                                            AsyncSupport<?> a,\n                                            AtmosphereHandler handler,\n@@ -220,7 +220,7 @@\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n                 noOps,\n-                DefaultAtmosphereRequest.newInstance(),\n+                AtmosphereRequest.newInstance(),\n                 response,\n                 config.framework().getAsyncSupport(),\n                 noOpsHandler);\n@@ -231,11 +231,11 @@\n      *\n      * @param config an {@link AtmosphereConfig}\n      * @param uuid   a String representing a UUID\n-     * @param request a {@link DefaultAtmosphereRequest}\n+     * @param request a {@link AtmosphereRequest}\n      * @return\n      */\n     @Override\n-    public final AtmosphereResource create(AtmosphereConfig config, String uuid, DefaultAtmosphereRequest request) {\n+    public final AtmosphereResource create(AtmosphereConfig config, String uuid, AtmosphereRequest request) {\n         AtmosphereResponse response = AtmosphereResponse.newInstance();\n         response.setHeader(HeaderConfig.X_ATMOSPHERE_TRACKING_ID, uuid);\n         return create(config,\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 223,
        "bugNodeStartChar": 9362,
        "bugNodeLength": 38,
        "fixLineNum": 223,
        "fixNodeStartChar": 9362,
        "fixNodeLength": 31,
        "sourceBeforeFix": "DefaultAtmosphereRequest.newInstance()",
        "sourceAfterFix": "AtmosphereRequest.newInstance()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f43cca9e4e3ea39ccf02fc3743be77ae4d7b80ab",
        "fixCommitParentSHA1": "609a3d70cb290251ddc4cc37e87c9c878e6a3b4c",
        "bugFilePath": "src/com/activeandroid/ModelInfo.java",
        "fixPatch": "diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java\nindex f86d05c..0790073 100644\n--- a/src/com/activeandroid/ModelInfo.java\n+++ b/src/com/activeandroid/ModelInfo.java\n@@ -156,7 +156,7 @@\n \t\t\t\t}\n \t\t\t\telse if (ReflectionUtils.isTypeSerializer(discoveredClass)) {\n \t\t\t\t\tTypeSerializer typeSerializer = (TypeSerializer) discoveredClass.newInstance();\n-\t\t\t\t\tmTypeSerializers.put(typeSerializer.getClass(), typeSerializer);\n+\t\t\t\t\tmTypeSerializers.put(typeSerializer.getDeserializedType(), typeSerializer);\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch (ClassNotFoundException e) {\n",
        "projectName": "pardom.ActiveAndroid",
        "bugLineNum": 159,
        "bugNodeStartChar": 4933,
        "bugNodeLength": 25,
        "fixLineNum": 159,
        "fixNodeStartChar": 4933,
        "fixNodeLength": 36,
        "sourceBeforeFix": "typeSerializer.getClass()",
        "sourceAfterFix": "typeSerializer.getDeserializedType()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7d5e825abd68a4ffcb86865149b917edf76a47b6",
        "fixCommitParentSHA1": "193474f51804bf6255bfcec58befcb1dc8ff8329",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\nindex 3f85374..9676c4e 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\n@@ -91,7 +91,7 @@\n     public static DetailAST getAnnotationHolder(DetailAST ast)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         final DetailAST annotationHolder;\n@@ -136,11 +136,11 @@\n         String annotation)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         if (annotation == null) {\n-            throw new NullPointerException(\"the annotation is null\");\n+            throw new IllegalArgumentException(\"the annotation is null\");\n         }\n \n         if (StringUtils.isBlank(annotation)) {\n@@ -179,7 +179,7 @@\n     public static DetailAST annotatingWhat(DetailAST ast)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         if (ast.getType() != TokenTypes.ANNOTATION) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 182,
        "bugNodeStartChar": 6088,
        "bugNodeLength": 43,
        "fixLineNum": 182,
        "fixNodeStartChar": 6088,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new NullPointerException(\"the ast is null\")",
        "sourceAfterFix": "new IllegalArgumentException(\"the ast is null\")"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "780a95c41d5d9ddafe1a237628183020746825a8",
        "fixCommitParentSHA1": "fea5adf8ad96a68cccb4dc621465f777982547e8",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/IntMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/IntMap.java b/gdx/src/com/badlogic/gdx/utils/IntMap.java\nindex 1208b96..0397ea8 100644\n--- a/gdx/src/com/badlogic/gdx/utils/IntMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/IntMap.java\n@@ -67,7 +67,7 @@\n \t * before growing the backing table. */\r\n \tpublic IntMap (int initialCapacity, float loadFactor) {\r\n \t\tif (initialCapacity < 0) throw new IllegalArgumentException(\"initialCapacity must be >= 0: \" + initialCapacity);\r\n-\t\tif (capacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n+\t\tif (initialCapacity > 1 << 30) throw new IllegalArgumentException(\"initialCapacity is too large: \" + initialCapacity);\r\n \t\tcapacity = MathUtils.nextPowerOfTwo(initialCapacity);\r\n \r\n \t\tif (loadFactor <= 0) throw new IllegalArgumentException(\"loadFactor must be > 0: \" + loadFactor);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 70,
        "bugNodeStartChar": 2827,
        "bugNodeLength": 18,
        "fixLineNum": 70,
        "fixNodeStartChar": 2758,
        "fixNodeLength": 25,
        "sourceBeforeFix": "capacity > 1 << 30",
        "sourceAfterFix": "initialCapacity > 1 << 30"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "9cbe9bcbaa33825a866bdc8a9bf92f270723d423",
        "fixCommitParentSHA1": "187e081d5a8afe1ddfe5d7b5e7de7a94512aa53e",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\nindex 8eb00f4..787422b 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java\n@@ -248,7 +248,7 @@\n \n       } catch (IOException e1) {\n         LOG.error(\"Cannot create writer for app \" + this.applicationId\n-            + \". Skip log upload this time. \");\n+            + \". Skip log upload this time. \", e1);\n         return;\n       }\n \n@@ -549,7 +549,7 @@\n         writer.append(logKey, logValue);\n       } catch (Exception e) {\n         LOG.error(\"Couldn't upload logs for \" + containerId\n-            + \". Skipping this container.\");\n+            + \". Skipping this container.\", e);\n         return new HashSet<Path>();\n       }\n       this.uploadedFileMeta.addAll(logValue\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 250,
        "bugNodeStartChar": 11007,
        "bugNodeLength": 109,
        "fixLineNum": 250,
        "fixNodeStartChar": 11007,
        "fixNodeLength": 113,
        "sourceBeforeFix": "LOG.error(\"Cannot create writer for app \" + this.applicationId + \". Skip log upload this time. \")",
        "sourceAfterFix": "LOG.error(\"Cannot create writer for app \" + this.applicationId + \". Skip log upload this time. \",e1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "032efde651a14f8175861d96a10a26b8948f5a54",
        "fixCommitParentSHA1": "cf15cd3b10e44f32f711918ce2644c92e1404492",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java b/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\nindex 86ad42e..a6dafbb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/LifecycleServiceImpl.java\n@@ -97,7 +97,7 @@\n     public void shutdown() {\n         synchronized (lifecycleLock) {\n             fireLifecycleEvent(SHUTTING_DOWN);\n-            instance.managementService.unregister();\n+            instance.managementService.destroy();\n             instance.node.shutdown(false, true);\n             HazelcastInstanceFactory.remove(instance);\n             fireLifecycleEvent(SHUTDOWN);\n@@ -107,7 +107,7 @@\n     public void kill() {\n         synchronized (lifecycleLock) {\n             fireLifecycleEvent(SHUTTING_DOWN);\n-            instance.managementService.unregister();\n+            instance.managementService.destroy();\n             instance.node.shutdown(true, true);\n             HazelcastInstanceFactory.remove(instance);\n             fireLifecycleEvent(SHUTDOWN);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 110,
        "bugNodeStartChar": 3633,
        "bugNodeLength": 39,
        "fixLineNum": 110,
        "fixNodeStartChar": 3633,
        "fixNodeLength": 36,
        "sourceBeforeFix": "instance.managementService.unregister()",
        "sourceAfterFix": "instance.managementService.destroy()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0ea48a75db6718c8e6a953495c20971ede930537",
        "fixCommitParentSHA1": "63a368bf671e3356c5be441b8833bad844a4ff8e",
        "bugFilePath": "integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java",
        "fixPatch": "diff --git a/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java b/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\nindex edf75e2..373d5f6 100644\n--- a/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\n+++ b/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\n@@ -146,7 +146,7 @@\n \n       // worker notifies the master\n       HeartbeatScheduler.schedule(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC);\n-      Assert.assertTrue(HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC, 500,\n+      Assert.assertTrue(HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC, 5,\n           TimeUnit.SECONDS));\n \n       fileInfo = getFileSystemMasterClient().getFileInfo(fileId);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 149,
        "bugNodeStartChar": 6208,
        "bugNodeLength": 105,
        "fixLineNum": 149,
        "fixNodeStartChar": 6208,
        "fixNodeLength": 103,
        "sourceBeforeFix": "HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC,500,TimeUnit.SECONDS)",
        "sourceAfterFix": "HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC,5,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "340b13d888b3f139b19681916757b166d191cdaa",
        "fixCommitParentSHA1": "99fb9be724c59e3c1b2bd77838a114a2d505e2cd",
        "bugFilePath": "components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerFullTest.java",
        "fixPatch": "diff --git a/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerFullTest.java b/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerFullTest.java\nindex 643c783..4e9a69e 100644\n--- a/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerFullTest.java\n+++ b/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerFullTest.java\n@@ -336,7 +336,8 @@\n         ConsumerRecord<String, String> record = records.get(0);\n         Headers headers = record.headers();\n         assertNotNull(\"Kafka Headers should not be null.\", headers);\n-        assertEquals(\"One propagated header is expected.\", 5, headers.toArray().length);\n+        // we have 5 headers and 1 header with breadcrumbId\n+        assertEquals(\"One propagated header is expected.\", 6, headers.toArray().length);\n         assertEquals(\"Propagated string value received\", propagatedStringHeaderValue,\n                 new String(getHeaderValue(propagatedStringHeaderKey, headers)));\n         assertEquals(\"Propagated integer value received\", propagatedIntegerHeaderValue,\n",
        "projectName": "apache.camel",
        "bugLineNum": 339,
        "bugNodeStartChar": 17367,
        "bugNodeLength": 79,
        "fixLineNum": 340,
        "fixNodeStartChar": 17427,
        "fixNodeLength": 79,
        "sourceBeforeFix": "assertEquals(\"One propagated header is expected.\",5,headers.toArray().length)",
        "sourceAfterFix": "assertEquals(\"One propagated header is expected.\",6,headers.toArray().length)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40e6bbe55f7141bd66a52261e108a1f3b575ca6f",
        "fixCommitParentSHA1": "4716e1f79433fd2fb2feee75f598744cbf69524c",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\nindex 9eaa0bd..bffe645 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheRecordStore.java\n@@ -294,7 +294,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return true;\n@@ -318,7 +319,8 @@\n         }\n         doRemoveRecord(key, source);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheExpiredEvent(key, toEventData(record), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheExpiredEvent(toEventData(key), toEventData(record),\n+                                                 CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                  origin, IGNORE_COMPLETION));\n         }\n         return null;\n@@ -378,7 +380,7 @@\n                 record.setExpirationTime(expiryTime);\n                 if (isEventsEnabled()) {\n                     CacheEventContext cacheEventContext =\n-                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toHeapData(key),\n+                            createBaseEventContext(CacheEventType.EXPIRATION_TIME_UPDATED, toEventData(key),\n                                                    toEventData(record.getValue()), expiryTime, null, IGNORE_COMPLETION);\n                     cacheEventContext.setAccessHit(record.getAccessHit());\n                     publishEvent(cacheEventContext);\n@@ -493,7 +495,8 @@\n         final R record = createRecord(value, expirationTime);\n         updateHasExpiringEntry(record);\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCreatedEvent(keyData, toEventData(value), expirationTime, origin, completionId));\n+            publishEvent(createCacheCreatedEvent(toEventData(keyData), toEventData(value),\n+                                                 expirationTime, origin, completionId));\n         }\n         return record;\n     }\n@@ -514,7 +517,7 @@\n             return record;\n         }\n         if (isEventsEnabled()) {\n-            publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+            publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                   origin, completionId));\n         }\n         return null;\n@@ -1002,7 +1005,7 @@\n             } else {\n                 result = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onPutIfAbsent(key, value, expiryPolicy, source, disableWriteThrough,\n@@ -1046,7 +1049,7 @@\n             if (record == null || isExpired) {\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1099,7 +1102,7 @@\n             }\n             if (!replaced) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             }\n             onReplace(key, oldValue, newValue, expiryPolicy, source, false, record, isExpired, replaced);\n@@ -1131,7 +1134,7 @@\n                 obj = null;\n                 replaced = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, completionId));\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), completionId));\n                 }\n             } else {\n                 replaced = updateRecordWithExpiry(key, value, record, expiryPolicy,\n@@ -1182,7 +1185,7 @@\n             if (record == null || isExpired) {\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n@@ -1235,7 +1238,7 @@\n             }\n             if (!removed) {\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             }\n@@ -1284,7 +1287,7 @@\n                 obj = null;\n                 removed = false;\n                 if (isEventsEnabled()) {\n-                    publishEvent(createCacheCompleteEvent(key, CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n+                    publishEvent(createCacheCompleteEvent(toEventData(key), CacheRecord.EXPIRATION_TIME_NOT_AVAILABLE,\n                                                           origin, completionId));\n                 }\n             } else {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 381,
        "bugNodeStartChar": 16116,
        "bugNodeLength": 15,
        "fixLineNum": 381,
        "fixNodeStartChar": 16116,
        "fixNodeLength": 16,
        "sourceBeforeFix": "toHeapData(key)",
        "sourceAfterFix": "toEventData(key)"
    }
]