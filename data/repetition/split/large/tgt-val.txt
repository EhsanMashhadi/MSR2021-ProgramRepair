id=79
mUiHandler.removeCallbacks(pae)
new FeaturesConfig().setExperimentalSyntaxEnabled(true).setDistributedIndexJoinsEnabled(true).setDistributedJoinsEnabled(false).setRedistributeWrites(false).setOptimizeMetadataQueries(true).setOptimizeHashGeneration(false).setOptimizeSingleDistinct(false).setPushTableWriteThroughUnion(false)
stores.containsKey(name)
localNodeData.dcLocalAddress.getHostAddress()
message.getConversation()
assertEquals((CodecFactory.fromString(codec).toString()),codecFactory.getCodec().toString())
logger.debug("Exception mapping responses to requests.",e)
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH
planRouteContext.getSnappedMode().getMapIconId()
appWindowToken == null || !appWindowToken.isVisible()
(System.currentTimeMillis() - lastAccessedTime.getTime()) >= timeout
conf.getRestBaseURL()
mRepeat > 0
file != null && file != file.getOriginalFile()
hostConfig.getCpuQuota()
DefaultCacheKeysFactory.staticCreateNaturalIdKey(naturalIdValues,persister,session)
context.getVariableResolver().replaceTokens(bsz)
!useDisplayListProperties
~PFLAG3_FITTING_SYSTEM_WINDOWS
appName != null && searchManager.getSearchableInfo(appName) != null
type.getDeclaredConstructor()
reader.skipCheckChunkTypeInt(CHUNK_STRINGPOOL_TYPE,CHUNK_NULL_TYPE)
nativePostCreate2(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
FileDownloadUtils.formatString("range[%d-%d)",currentOffset,endOffset)
Integer.parseInt(taskIdStr)
Throwable e
parent == null && myCurrentTree != null
new IndexShardRoutingTable.Builder(new ShardId(indexName,0))
pw.print(ps.getInstantApp(user.id))
!allowPrivate.isNull()
ai != null && ai.enabledSetting == PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED
Runtime.getRuntime().maxMemory()
i=1
LOG.warn("Cannot access storage directory " + rootPath,ex)
new WorldPoint(2447,3418,1)
getParameterValues(request,param,null)
final LongAdder8 cnt=new LongAdder8(); 
precision == null || precision.isEmpty()
testLogger.info("[v] Sync complete! The best block: " + bestBlock.getShortDescr())
selenium.click("//li[4]/span/a/span")
GeneratedJavaParser::ResultType
selenium.isElementPresent("link=Control Panel")
configProps.get(THREAD_SAFE_CLIENT_STATE_CLEANUP_PROP)
{1,0,0,0,0,0,0,0,0,0}
((NioEndpoint)getEndpoint()).getPollerThreadPriority()
userActivity(SystemClock.uptimeMillis(),-1,false,OTHER_EVENT,false)
LogUtils.initializeDefaultTestConsoleLogger()
accessible && member instanceof PsiClass && !(member instanceof PsiTypeParameter)
getMeasuredWidth()
interfaces != null && interfaces.length > 0
Beans.newDuration(casProperties.getAuthn().getOauth().getRefreshToken().getTimeToKillInSeconds()).getSeconds()
this.maxSessionIdleTimeout=timeout
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
FileUtil.loadFile(new File(getTestDataPath() + "/" + getTreeFileName()),true)
this.categoryWithApiModel=category
Deactivate(app)
convert(pkgAnnotation)
random.nextInt(8)
Set<IConfigurationListener>
LOG.debug(getQueueName() + " user=" + userName+ " used="+ queueUsage.getUsed()+ " numContainers="+ numContainers+ " headroom = "+ application.getHeadroom()+ " user-resources="+ user.getUsed())
defaultDMLFilename()
callback.onPulseFinished()
new NetworkRequestHandler.ResponseException(504,0)
indexNameExpressionResolver().concreteIndexNames(state,IndicesOptions.lenientExpandOpen(),HistoryStore.INDEX_PREFIX + "*")
logger.debug("Skipping delivery of hint for deleted columnfamily",e)
new IndexWriter(this.__test_dir,new org.apache.lucene.analysis.standard.StandardAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
Throwable ex
LambdaArgKt.foo(10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
VERSION=3
sr.getLastStartId()
Thread.sleep(1000)
flushStatements(true)
request.paramAsBoolean("v",true)
pathToFileInProject.lastIndexOf("error-prone")
sizeNeeded > items.length
CacheData<RealmObject>
selenium.click("//li[4]/span/a/span")
dpToPx(24f)
a.getLayoutDimension(R.styleable.BootstrapButton_android_layout_width,0)
/**   * The location of the child within the map view.  */ public IGeoPoint geoPoint; 
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class QueueBasicLocalTest extends QueueAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } 
MESSAGE_TUNE_DURATION_THRESHOLD_MILLIS=2000
buffer.flip()
Throwable e
DexFile.getDexOptNeeded(classPathElement,instructionSet,"speed",false,false)
new LinearLayoutManager(mContext,LinearLayoutManager.VERTICAL,false)
typeSerializer.getDeserializedType()
selenium.isElementPresent("link=Control Panel")
String.format("EsRecordWriter instance [%s] assigned to [%s]",currentInstance,uri)
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
log.debug("Not in OSGi: using plexus based maven parser")
new WorldPoint(3026,3628,0)
eKernel.length == 3
UpgradeStepRegistrator.class
tmpDataDirs.containsKey(id)
hongbaoContent == null || "查看红包".equals(hongbaoContent)
selenium.isElementPresent("link=Control Panel")
Float.parseFloat(strings[i])
mActiveStreamType == -1 || streamType != mActiveStreamType
request.path()
return childPermissions; 
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
bucket.isExists()
ObjectConverter.toBool(scriptValue)
specWidthMode == MeasureSpec.EXACTLY || specWidthMode == MeasureSpec.AT_MOST
log.info("Hooking new default : onErrorDropped")
compressed.limit()
!mKey.equals(other.mKey)
busHandler.pushExpectedEvents(NextEvent.PHASE,NextEvent.PHASE,NextEvent.INVOICE,NextEvent.NULL_INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
closeCode < 1001
m.getAverageJobWaitTime()
mJobs.valueAt(i)
getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
message.lastIndexOf(templateEnd,start)
owner == null || owner.getName().equals(PostgreConstants.PUBLIC_SCHEMA_NAME) || owner.getName().equals(PostgreConstants.CATALOG_SCHEMA_NAME)
getContext().enforceCallingPermission(android.Manifest.permission.CHANGE_OVERLAY_PACKAGES,message)
native_get_videoeditor_export_level(vidCodec)
myShowWindowAlarm.addRequest(new Runnable(){   public void run(){     if (isRunning()) {       showDialog();       final DialogWrapper popup=myDialog.myPopup;       if (popup != null) {         myFocusTrackback.onShown(popup.getPreferredFocusedComponent());       }     }   } } ,300,getModalityState())
leftTuple.setStagePrevious(last)
Context.getPersonService().getRelationshipsByPerson(Context.getPersonService().getPerson(personId))
return true; 
clazz == null
from > to
selenium.click("//li[4]/span/a/span")
dest.writeInt(mSubId)
sender().send(new StashIgnore(new SequenceActor.UpdateProcessed()))
logger.debug("gave up waiting for query reply from device {}",m_address)
ir.mHandler != null && ir.mImageListener != null
database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
dist <= bestdist
return true; 
dialect.supportsQuotedMixedCase() || dialect.supportsUnquotedMixedCase()
request.charset == null
upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0
DEBUG=false
dest.writeInt(mSubId)
npmAnalyzerPlugin.getNpmVersionFilter(version)
disable2ForUser(what,token,pkg,mCurrentUserId)
performDexOpt(pkg.packageName,null,true,causeFirstBoot ? REASON_FIRST_BOOT : REASON_BOOT,false)
listener != null && mHandler == null
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) != 0
new PeepholeSubstituteAlternateSyntax(true)
ConverterRegistry.getInstance().convert(type,value)
@Nullable
super.createEditorPopupActions()
beforeCaret.getText().indexOf('\\') >= 0
m_tagFactory.createTag(cls,a,annotationClass,m_transformer)
Long.parseLong(value)
Long.toString(arr[doc])
sDefaults.putBoolean(KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL,false)
event.getRawX()
mOverviewOpenedCountSinceQuickScrubTipDismiss >= QUICK_SCRUB_SHOW_ON_OVERVIEW_OPENED_COUNT
stateChangedLatch.await(3,TimeUnit.SECONDS)
Exception t
structuralLock.isHeldByCurrentThread()
mContext.sendBroadcast(intent)
ctxt.getServletContext()
mService.reassociate()
LOGGER.debug("Invalid number format for side pane component '" + componentName + "'.",e)
!configuration.getEntityStateListener().isEmpty()
mGnssCallback != null
timeout=20000
note == null || isFinishing()
typeSettingsProperties.toString()
Exception e
getMockEndpoint("mock:start").expectedMinimumMessageCount(5)
newExecutionInput().query(parameters.getQuery())
log.tracef("%s finished request %d",ManagementChannel.this,header.getBatchId())
new BuilderRemoteViews(mContext.getApplicationInfo(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
author.getIsChatModerator()
String message
buttonWidth.setPrefSize(300,30)
p.getNumberValue()
SURFACE_SELECTOR=32
assertEquals(10,tree.getSelectionCount())
uri.substring(2,pathend)
equalTo(7)
(pkg.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) != 0 && mInstaller != null
Exception ignored
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
migrateXmlString(content,22,34)
new Timespan(30,Timespan.TimeUnit.SECOND)
new IndexWriter(dir,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED)
lock.isHeldByCurrentThread()
globalMappings.differentiate(delta,removedPaths,filesToCompile,allCompiledFiles,allAffectedFiles)
replaces="doIntrinsicReceiverCachedLLVMTruffleObjectCached"
IllegalArgumentException e
log.error("Cannot retrieve roles for {} from {} due to {}",authenticatedUser,ab.getType(),e.toString(),e)
/**   * {@inheritDoc}  */ public Integer getFrom(){   return Integer.valueOf(from); } 
new IOException("ExifInterface only supports saving attributes on JPEG formats.")
recentsStackInfo == null && activityType == ACTIVITY_TYPE_RECENTS
Log.e(TAG,"This will become an error",ex)
method.getName().equals(writeMethodToUse.getName()) && !method.equals(writeMethodToUse) && !method.isBridge()&& method.getParameterTypes().length == writeMethodToUse.getParameterTypes().length
filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
field.createField(fieldType.indexedToReadable((String)sortValue),1.0f)
selenium.isElementPresent("link=Control Panel")
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
Futures.transform(executionClients.getRemoteExecutionService().execute(actionDigest),result -> {   executingScope.close();   return result; } ,MoreExecutors.directExecutor())
Assert.assertEquals(1,JournalFolderFinderUtil.countF_A_ByG_F(_group.getGroupId(),_folder1.getFolderId(),queryDefinition))
Math.max(clientCount,1)
position >= lastPos
checkCall(receiver)
new RuntimeException()
new Message("XML_STREAM_EXC",LOG,e.getMessage())
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
mUiHandler.removeCallbacks(pae)
mClearPaint.setColor(0x0000ff00)
return false; 
quad.toUnpacked(DefaultVertexFormats.ITEM)
file == null || !FileUtil.pathsEqual(configuration.getFilePath(),file.getVirtualFile().getPath())
@NotNull
getService().animateCollapseNotifications()
new Message("START_UP_SERVER_FAILED_MSG",LOG,e.getMessage(),port)
t.getDeclaredConstructors()
convert(BigDecimal.class,value,defaultValue)
accessor.valueOrNull()
Long.parseLong(val)
WrapUtil.<Object>toList("src/main/java","src/main/java","src/main/resources")
String message
ctx.write(msg,promise)
selenium.isElementPresent("link=Control Panel")
return true; 
new IndexWriter(dir,new StandardAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
layer.activate(input)
mContext.sendStickyBroadcastAsUser(mStorageFullIntent,UserHandle.ALL)
routes.InputTypesResource()
ft.replace(R.id.layout_fragment_container,commentFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commitAllowingStateLoss()
d1.isTimeOut()
win.mRemoved || !win.mHasSurface || !win.mPolicyVisibility
request.getRemoteAddr()
word.contains("://")
deltaY >= 0
generatorConfig.getDaoTargetFolder()
param.setThrowable(xparam.getThrowable())
ig0.context().query().dynamicTableCreate(SCHEMA_NAME,getEntity(),TMPL_NAME,null,1,true)
Thread.sleep(1000)
mPackageManager.hasSystemFeature(PackageManager.FEATURE_APP_WIDGETS) || context.getResources().getBoolean(R.bool.config_enableAppWidgetService)
List<Long>
logger.error("{} is missing from the session and can not be retrieved.",OAuthConstants.OAUTH20_CALLBACKURL)
dlFileEntryLocalService.getFileEntries(groupId,folderId)
DNSUtil.isNameCoveredByPattern(dnsId,identity)
mRedrawClip.isEmpty() || view.getParent() == null
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1).learningRate(0.1)
deadline < now && deadline != 0
TypeUtil.getName(type)
endBounds.height()
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
object=bean
lp.viewType == ITEM_VIEW_TYPE_HEADER_OR_FOOTER
filesizeMb * 1024L * 1024L
http2c.setInitialStreamRecvWindow(initialStreamSendWindow)
sPos >= 0
lineArgs[4]
mLteSignalStrength > 31
StringBuilder sb=new StringBuilder(); 
LOG.warn(rootPath + "is not a directory")
typeName.equalsIgnoreCase("Integer") || typeName.equalsIgnoreCase("int")
(Item)this
new WriteConcern(getSecondaryCount(testHosts) + 1,10000)
tfs.createFile(new TachyonURI("/root/testFile1"))
!getLocationEnabled()
winAnimator.prepareSurfaceLocked(recoveringMemory)
DEFAULT_PORT=1433
configurable.apply()
buffer.nextValue(null,i,info.type,info.meta)
ctx.alloc().buffer()
public static void main(String[] args) throws StartupError {   Bootstrap.main(args); } 
newValue.getReceivedNumber() >= Integer.valueOf(SettingUtility.getMsgCount())
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
moduleComponentSelector.getModule()
!issuer.equals(accessTokenV.getTokenIssuer())
err == 0
Assert.assertEquals(getNotAllowedExceptionMessage("helloForNone"),e.getCause().getMessage())
? extends T
REVISION=10804
rhs.getScore()
new WorldPoint(2973,3489,0)
a.getNameSelected(null)
LOGGER.debug("Application {} refreshed",newApp)
DbException.get(ErrorCode.OBJECT_CLOSED,e)
e.toString()
IllegalArgumentException e
!isRuleBasedFormat || stripped instanceof PsiThrowStatement || stripped instanceof PsiExpressionStatement
assertCompletionVariants(m,"RELEASE","LATEST","1")
"" + i
e == null
DumpUtils.checkDumpAndUsageStatsPermission(getContext(),TAG,pw)
attributes.getAllFlags()
Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
((-t + 2) * t - 1) * t / 2.0
mPolicy != null && wasPowered
assertEquals(2,resources.size())
mGoogleApiConnectionTask.trySetResult(bundle)
mOpenStreetMapView.dispatchDraw(canvas)
myBeforeFile.getName()
id=19908
!getRequiresCode()
tracesDir.mkdirs()
Math.min(values().length - 1,value)
c == null || c == interfaceClass
assertCompletionVariants(myProjectPom,"combine.children","combine.self")
!StringUtils.equals(filter.getKey(),RuleNormalizer.RuleField.LANGUAGE.field())
lc + lp
type.getDeclaredConstructor()
onDetachedFromWindows()
testWarning(js,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
FileUtils.getFilesDir(targetContext,"test-screenshots")
file != null && !file.isDirectory()
glyph.setSize(16)
checkCall(receiver)
segs == null
LOGGER.isDebugEnabled()
op2.z()
selenium.isElementPresent("link=Control Panel")
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
target.getClass().getMethod(getterName,EMPTY_CLASS_ARRAY)
moveCursorTo(pac.getRow(),1)
ArrayList<Item>
BitUtil.check(status,10)
selenium.isElementPresent("link=Control Panel")
props.getArray(PropsKeys.TRANSACTIONAL_CACHE_NAMES)
cs[c].set(r,rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1)
v.isString() && meta.isEnclosureForced() && !meta.isPadded()
message.lastIndexOf(templateEnd,start)
Flux.fromIterable(this.handlerMappings).concatMap(mapping -> mapping.getHandler(exchange)).next().switchIfEmpty(Mono.error(HANDLER_NOT_FOUND_EXCEPTION))
apnContext.getWaitingApns()
callback.onPulseFinished()
@Override public ExtendedCell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   return new TagRewriteCell(clonedBaseCell,this.tags); } 
mSyncStatus.valueAt(i)
PendingIntent.getActivityAsUser(ams.mContext,0,runningIntent,PendingIntent.FLAG_UPDATE_CURRENT,null,UserHandle.of(userId))
testSame(js)
logger.trace("Session created")
cc.getEnabled()
Path tempDataPath=tempNoCluster.toAbsolutePath(); 
watch.taken()
telephony.getVoiceMessageCountForSubscriber(subId,getOpPackageName())
Q.row(j).minus(delta_qj.scale(lRate))
session.saveWithoutFlush(model)
new IndexOutOfBoundsException(fieldNum + " for range [0.." + (this.numFields - 1)+ "]")
invokerFilterHelper.destroy()
public void setEnablePush(long enablePush) throws ConnectionException {   if (enablePush > 1) {     throw new ConnectionError(sm.getString("connectionSettings.enablePushInvalid",Long.toString(enablePush)),Http2Error.PROTOCOL_ERROR);   }   this.enablePush=(enablePush == 1); } 
timeUnit.toMillis(timeToLive)
checkManageOrCreateUsersPermission("getting profiles related to user " + userId)
LocalFileSystem.getInstance().findFileByIoFile(file)
(pInfo.applicationInfo.flags & (ApplicationInfo.FLAG_SYSTEM | ApplicationInfo.FLAG_UPDATED_SYSTEM_APP)) != 0
enabled=true
doTestNoDocValues(type)
Long.parseLong(val)
entry.getValue()
log.error("Error while closing command context",exception)
client.setIgnoreExternals(false)
Futures.allAsList(resultList)
insets.left != 0
b <= 'F'
logger.fine(String.format("performing disconnect (%s)",this.nsp))
sendMessageAtFrontOfQueue(CMD_STOP_AP)
producerFlowControl=false
CHECKIN_VERSION=29
a.getKey()
mMime.toLowerCase().startsWith("video/") || mMime.equalsIgnoreCase(MediaFormat.MIMETYPE_IMAGE_ANDROID_HEIC)
LOG.warn("Could not correlate acknowledgment with dispatched message: " + ack)
entry.notification.cloneLight()
myParameterNameField.getFocusableComponent()
categoryMap.get(category.getParentId(),rootCategory)
mime == null || mime.value().length == 0
1L << quotientBits
GroupFinderUtil.findByLayouts(TestPropsValues.getCompanyId(),parentGroupId,true,-1,-1,new GroupNameComparator(true))
selenium.isElementPresent("link=Control Panel")
query.getLong(7)
"DependencyReport".equals(scriptName) || "Upgrade".equals(scriptName) || "SetProxy".equals(scriptName)|| "AddProxy".equals(scriptName)
Throwable exc
final StatefulSession workingMemory=ruleBase.newStatefulSession(); 
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
@Override public final DivideByOnConditionStep andNot(Condition c){   return and(c.not()); } 
i + skip < textLengthToProcess
loadTask instanceof LongTask
assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals("there should be only one registration",1,regs1.size());     assertEquals("there should be only one registration",1,regs2.size());   } } )
unquotedValue.substring(idx + AS_CONNECTOR_WITH_SPACES.length())
result.getException() != null && result.getException().getMessage() != null && !"".equals(result.getException().getMessage())
loaded.getLoaded().getDeclaredConstructor()
new EmbeddedKafkaCluster(1,mkProperties(mkMap()),0L)
assertTrue(strayChild.isSafelyReplaceableBy(newChild))
GL.glPolygonOffset(factor,units)
rootView.getId()
ci.getConduit(info,bus)
@Nullable
new StringLengthValidator(1,Integer.MAX_VALUE,true,false)
sharedElements.get(localName)
mTargetNames == null
seconds * 1000L
ISuiteResult sr=suiteResults.get(propertyFileName); 
VERSION=6
configurator.setExcludedEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses")
account.hasSpamFolder()
dynamicType.getLoaded().getDeclaredConstructor()
/**   * Obtain the property descriptor for a specific property of the wrapped object.  * @param propertyName the property to obtain the descriptor for(may be a nested path, but no indexed/mapped property)  * @return the property descriptor for the specified property  * @throws InvalidPropertyException if there is no such property  */ PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException ; 
Integer.parseInt(attrValue)
JZVideoPlayerManager.getCurrentJzvd().currentState == JZVideoPlayer.CURRENT_STATE_PREPARING || JZVideoPlayerManager.getCurrentJzvd().currentState == JZVideoPlayer.CURRENT_STATE_PREPARING_CHANGING_URL
LOGGER.error("Unknown {} : {}",OAuthConstants.CLIENT_ID,clientId)
sb.index() - 1
new Paint(Paint.ANTI_ALIAS_FLAG)
assertNull(decoder.decode(null,null,ChannelBuffers.wrappedBuffer(ChannelBufferTools.convertArray(new int[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x0c,0x01,0x06,0x00,0x00,0x00,0x25,0x23,0x46,0x4d,0x32,0x3d,0x32,0x36,0x32,0x30,0x33,0x32,0x37,0x36,0x31,0x37,0x32,0x31,0x33,0x39,0x36,0x2c,0x32,0x36,0x32,0x30,0x33,0x2c,0x30,0x37,0x2e,0x30,0x32,0x2e,0x30,0x35,0x0d,0x0a,0x01,0x00,0x00,0x9a,0x2e}))))
queue.notifyAll()
String.format("BUG: %s changed score during rematch: %d -> %d",newNetwork.name(),score,newNetwork.getCurrentScore())
!Objects.equals(builtInVersion,configuredVersion)
validatorHelper.enclosingElementHasEActivity(element,validatedElements,valid)
batteryService.getBatteryLevelLow()
mLineageStore.reportLostFile(fileId)
openSession.closeAndClearTokenInformation()
getResource(exchange).switchIfEmpty(Mono.defer(() -> {   logger.trace("No matching resource found - returning 404");   exchange.getResponse().setStatusCode(HttpStatus.NOT_FOUND);   return Mono.empty(); } ))
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallback mBluetoothGattServerCallback=new IBluetoothGattServerCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
(currentGroup.isStatic && !CompositeType.isStaticName(c.name())) || !isSameGroup(current)
XmppStringUtils.parseBareJid(user)
new ServerSparseDoubleRow(rowId,startCol,endCol,0)
mAlpha.cancel()
ConditionalOnEnabledHealthIndicator.class
executeRunnableDismissingKeyguard(runnable,null,false,false)
intervalFraction * (nextValue - prevValue)
adapter.item(R.string.layer_recordings).selected(SHOW_RECORDINGS.get() ? 1 : 0).icons(R.drawable.ic_action_audio_dark,R.drawable.ic_action_audio_light).listen(listener).position(6)
myFindDialog.setModal(true)
new WorldPoint(3033,3308,0)
Math.min(DataModule.DISK_CACHE_SIZE,Integer.MAX_VALUE)
ORIENTATION_SETTLE_TIME_MS=250
checkCall(receiver)
new AMRuntimeException.IOException("Couldn't scale file entry " + fileVersion.getFileEntryId() + " to match Adaptive Media configuration "+ amImageConfigurationEntry.getUUID(),e)
new BorderLayout(UIUtil.DEFAULT_HGAP,UIUtil.DEFAULT_VGAP)
mMountTable.resolve(getPath(lastInode)).toString()
params.getInt("numPages",PageRankData.getNumberOfPages())
return true; 
Preferences.getBoolean(R.string.p_rmd_snooze_dialog,false)
result != null && result.bitmap != null
rightExpression == null || rightExpression instanceof PyBinaryExpression || node.getLeftExpression() instanceof PyBinaryExpression
message.setHeader("Message-ID",cursor.getString(12))
public Object execute(Context context){   KieSession ksession=((KnowledgeCommandContext)context).getKieSession();   if (this.outIdentifier != null) {     ((StatefulKnowledgeSessionImpl)ksession).getExecutionResult().getResults().put(this.outIdentifier,object);   }   ksession.setGlobal(this.identifier,this.object);   return null; } 
LOGGER.lifecycle(msg.apply())
addEdge(i3,i0,false,false)
dest.writeInt(mSubId)
viewerPanel.setRedraw(false)
compareStepMeta != null
distinctValues.put(slice,distinct)
animation.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
new DrmInitData(DATA_1,DATA_UNIVERSAL)
row.length < 1
getWriter().print("FAILED")
getReplicaProps(collection,shardId,thisCoreNodeName,null)
outState.putIntegerArrayList(KEY_OLD_SITES_IDS,mOldSitesIDs)
return false; 
params.get(key)
construct(ignoredList,mapType,staticValueType,vts,keySerializer,valueSerializer,null)
surroundWithTag=false
mWindowManager.getDefaultDisplay().getRealMetrics(metrics)
Integer.valueOf(compressionLevel)
CassandraRecordSetProvider.class
annotation.value()
invoiceBalance.divide(BigDecimal.TEN,BigDecimal.ROUND_HALF_UP)
hostsInPool.incrementAndGet()
classMapper.serializedClass(wrap.testPlan.getClass())
return 10; 
ImmutableList<Stats>
setUseSynchronousMode(false)
IndexerRegistryUtil.nullSafeGetIndexer(className)
MIN_CONNECTIVITY_COUNT=1
PropertyExtKt.getFoo("")
assertEquals(7,beanCount)
res.setBytes(100L)
service.asBinder().pingBinder()
id=10830
CaseInsensitiveStringHashingStrategy.INSTANCE.computeHashCode(value)
GregorianCalendar.getInstance()
gatherDisableActionsLocked(mCurrentUserId)
changeSet.toString()
assertEquals(5,databindings.size())
entity.func_70012_b(packet.scaledX,packet.scaledY,packet.scaledZ,packet.scaledYaw,packet.scaledPitch)
CompletableFuture<Void>
dbIdsRepository.getSnapshotId(component)
request.getServletPath()
28 * ClassSize.REFERENCE
selenium.isElementPresent("link=Control Panel")
pos1.getBlockY()
startBounds.height()
case PLAYER_QUIT: 
mTestStream.getFlushedBytes()
log.error(sm.getString("coyoteConnector.protocolHandlerInstantiationFailed",e),e)
containsString("State")
super.getHibernateTemplate().execute(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Example example=Example.create(arg).ignoreCase();     Criteria crit=session.createCriteria(clazz);     crit.add(example);     List results=crit.list();     if (results.size() > 0)     return results.get(0);     return null;   } } )
edges.setInt(edgePointer + E_ADDITIONAL,value)
PASSWORD_SCRYPT_N=11
selenium.click("//li[4]/span/a/span")
true || UISettings.getInstance().HIDE_TOOL_STRIPES && !PropertiesComponent.getInstance().isTrueValue(key)
mapCache1.addAndGet("4",1D)
" firstActiveTime=" + firstActiveTime
IOException e
logger.info("defineClass pluginClass:{} cl:{}",className,classLoader)
new LinkedList<>()
DefaultCacheKeysFactory.staticGetNaturalIdValues(cacheKey)
f.getAttrs().getMTime()
F.<Object>asList(ipFinder)
@NonNull
client.post(getAbsoluteUrl(url),params,responseHandler)
FastMath.min(origin,num.floatValue())
value.equals("")
headers.addValue("Vary")
future1.get(2,TimeUnit.SECONDS)
new IncorrectOperationException(getClass().getName())
WebUiResource.class
log.debug("No slayer task for {} in the Task database",taskName)
Throwable e
wxService.tagAddUsers(tagId,userIds,null)
TCN_RECOMMENDED_MINOR * 100
return 20_000; 
Assert.assertEquals("Received string: " + baos.toShortString(),10000000,baos.size())
JavaSourceGroovyPackagesSecuritySuite.suite()
friendlyURL.equals(layout.getFriendlyURL(locale))
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES,UserHandle.getUserId(getCallingUid()))
requestData.setInitialText(element.getPropertyAsString(TCPSampler.REQUEST))
ScanResult.is5GHz(frequency)
AtmosphereResponse.newInstance()
DEBUG=false
serializer.statementResult(mockExecutionResult(map("node",node[0],"rel",rel[0],"path",path,"map",map("n1",node[1],"r1",rel[1]))),false,ResultDataContent.rest)
configurator.setExcludedEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses","*Public*","*Secret*","*$*","jodd.petite.prox.*")
!mIsOnInnerCircle && hour != 0
tw.close()
mAppToken.isVisible()
ServletUtil.prepareParameters(new String[]{"",null,"   "},true,true,true)
mMccStr == null
pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA,userId)
new CallbackStub(this)
StringBuilder buffer=new StringBuilder(); 
Long.parseLong(dateStr)
DEBUG_STARTING_WINDOW=true
@Nullable
stopwatch.elapsed(MILLISECONDS)
nextNextInfo.distanceTo < TURN_IN_DISTANCE_END
maximumNumber < numberOfContainers && maximumNumber != 0
this.clsName.equals(transformedName)
contentLength <= 0
currentType != globalType && currenType != Type.INT
IndexReader.open(benchmark.getRunData().getDirectory())
!consumers.isEmpty()
commitPackageSettings(pkg,pkgSetting,user,scanFlags,(policyFlags & PackageParser.PARSE_CHATTY) != 0)
BuildEventStreamProtos.BuildStarted.newBuilder().setUuid(request.getId().toString()).setStartTimeMillis(request.getStartTime())
ProcessBundleDescriptors.fromExecutableStage("my_stage",stage,dataServer.getApiServiceDescriptor())
TelephonyManager.getDefault().getCurrentPhoneType()
SystemClock.uptimeMillis()
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers.kt")
new TBinaryProtocol(transport)
tokens.getText()
setValue(object,value.intValue())
selenium.isElementPresent("link=Control Panel")
m.getDeclaringClass()
new UnsupportedOperationException(getClass().getName())
new Paint()
lock.isHeldByCurrentThread()
new Vector2i(areaHint.x,availableHeight)
from >= to
typeConverter.convertTo(XMLStreamReader.class,exchange,stream)
serializer.serializeInsert(metadata,entity,columns,values,subQuery)
changeEntitlementAndCheckForCompletion(bpEntitlement,productName,BillingPeriod.ANNUAL,BillingActionPolicy.IMMEDIATE,NextEvent.CHANGE,NextEvent.INVOICE)
logger.fine(String.format("calling ack %s with %s",packet.id,packet.data))
Throwable e
getProjectViewPaneById(myCurrentViewId == null ? ProjectViewPane.ID : myCurrentViewId)
longVal(doc)
nai.networkCapabilities.satisfiedByImmutableNetworkCapabilities(networkCapabilities)
error == null || error.isNetworkError()
new AssertionError(name)
synchronized (mAm) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
Math.min(titleRight,subtitleRight)
flexItem.getMarginLeft()
order=0
postAgg.getName().equalsIgnoreCase(metricName)
mIpSecService.allocateSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
session == null || serverName == null
checkCall(receiver)
targetY - orginY
fieldMeta2.getString(field2)
e.getKeyCode()
JvmDeclarationOriginKt.OtherOriginFromPure(myClass,function)
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY(),Gravity.TOP | Gravity.LEFT)
indexOf(source,ch,origFromIndex)
/**   * {@code "content-security-policy"}  */ public static final AsciiString CONTENT_SECURITY_POLICY=new AsciiString("content-security-policy"); 
m2.getName().equals("getAttributes") && !m1.getName().equals(m2.getName())
result.expectedMinimumMessageCount(3)
RoleLocalServiceUtil.loadGetRole(companyId,name)
Validator.isNotNull(_uploadMessage)
tempPinnedTaskBounds != null && stack.isAnimatingBoundsToFullscreen()
props.containsKey("log.adapter")
classNode.hasMethod(mixinMethod.getName(),mixinMethod.getParameters())
bucket.isExists()
Integer count=itr.next(); 
getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
val != null && val != targetObject
parameter.name()
DpmTestUtils.newRestrictions(UserManager.DISALLOW_ADD_USER,UserManager.DISALLOW_ADD_MANAGED_PROFILE)
public LowerCaseTokenizer create(Reader input){   return new LowerCaseTokenizer(input); } 
logger.warn("Couldn't calculate the target package! Using default: " + DEFAULT_PACKAGE)
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
LOG.info("Download " + fileURI + " in "+ toFile)
mContext.sendStickyBroadcastAsUser(mStorageFullIntent,UserHandle.ALL)
arg1 == 1
mBatteryStatus=BATTERY_STATUS_UNKNOWN
activity == null || activity.isFinishing()
input.size(0)
mUiHandler.removeCallbacks(pae)
timeout >= 0
idx >= 0
soundResources.get(urlKey)
client.getVertx().setTimer(1000,id -> checkExpired())
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
Slog.e(TAG,"Unknown restriction: " + restriction)
activityNdx <= topActivityNdx
activityNdx <= topActivityNdx
mDisplayContent.getSplitScreenPrimaryStackIgnoringVisibility()
new String(plaintext)
new IllegalArgumentException("permission cannot be null or empty")
ClassFileVersion.forThisVm()
snapshotTypes != null && snapshotTypes.length > 0
uri != null
refreshRotationLockTile()
StatBuckets.prettyUptimeStr(secs)
new ShardRouting(index,shardId,currentNodeId,relocatingNodeId,null,primary,state,version,null,AllocationId.newInitializing(),true)
this.placeholders
Integer.parseInt(nextArgRequired())
DumpUtils.checkDumpAndUsageStatsPermission(mActivityManagerService.mContext,"meminfo",pw)
logger.warn("Field sorting failed, couldn't find table spec: " + model.getSimpleName())
super.onAttachedToWindow()
selenium.isElementPresent("link=Control Panel")
NestedSetBuilder.linkOrder()
0 != mUnwantedNetworkCapabilities
loaded.getLoaded().getDeclaredConstructor()
mSmallBatteryDevice ? 15 : 30
mPostKeyguardExitAnimation.hasEnded() || mCurrentTime - mPostKeyguardExitAnimation.getStartTime() > mPostKeyguardExitAnimation.getDuration()
user.getActualCompanyId()
WordPress.getCurrentBlog().getLocalTableBlogId()
lastPos < mTargetPos
!entry.getKey().equals(name)
selenium.isElementPresent("link=Control Panel")
r != null && !r.finishing
mObsoleteAgents.valueAt(i)
d.split(" ")
mAttributes.getAllFlags()
Exception e
logger.error("Failed to evaluate permissions",cause)
IndexReader.open(benchmark.getRunData().getDirectory())
Lifecycle.BEFORE_DESTROY_EVENT.equals(type)
assertEquals(6,beanCount)
synchronized (mAm) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
new SystemAudioActionFromTv(tv(),mAvrAddress,true,null)
entry.notification.cloneLight()
webRequest.getNativeResponse(HttpServletResponse.class)
OPEN_FUNCTIONS.contains(qname) && callSite != null
StrictMath.log(docCount)
Double.isInfinite(longitude)
type.getDeclaredConstructor()
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers2.kt")
interactor.startCommand(packageName,callback,mCommand,mArgs)
mMediaMetadataRetriever.getFrameAtTime(-1)
System.currentTimeMillis()
Period.months(lExpr.getIntervalYear())
tracesDir.mkdirs()
createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY)
getConfig().getInt(ASKONEXIT_OPTION,1)
message.getMessageId().getEntryLocator()
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1).learningRate(0.1)
Matchers.anyLong()
testPackage.getFormattedSuccessRate()
mUiHandler.removeCallbacks(pae)
FORBIDDEN_INDEX_SETTING.equals(name)
action.new ReroutePhase(null,request,listener)
mAm.addSharedAccountsFromParentUser(parentUserId,userId)
loaded.getLoaded().getDeclaredConstructor()
!allowStateLoss
i.getName().toString()
cursor == null
requestCode == RC_EMAIL_FLOW && resultCode == ResultCodes.OK
JComponent component
getLocalization(xml,languageId,false)
SystemProperties.getBoolean("debug.choreographer.animdraw",false)
id >= holdingColor.length
selenium.isElementPresent("link=Control Panel")
bitmap == null || bitmap.getWidth() == 0 || bitmap.getHeight() == 0
fluid != null && FluidRegistry.isFluidRegistered(fluid)
newSelection >= 0 && newSelection < rowElements.length
com.android.internal.util.DumpUtils.checkDumpAndUsageStatsPermission(mAm.mContext,TAG,pw)
jdbcTemplate.queryForObject("SELECT COUNT(0) FROM " + tableName,int.class)
15 * 60 * 1000
StatBuckets.prettyUptimeStr(secs)
new DebugFlag("debug.optimize_startinput",false)
new Paint()
getProperty().containsKey("spark.yarn.keytab")
intBuffer.clear()
BCFactoryBlocks.pump != null && BCFactoryBlocks.tank != null
assertCompletionVariants(myProjectPom,"RELEASE","LATEST")
callContactItem.setText(detail.getContactAddress())
notifyItemRangeChanged(positionStart,itemCount,payload)
ListeningPoint.TCP.equalsIgnoreCase(transport) || ListeningPoint.TLS.equalsIgnoreCase(transport)
protocolProvider.getAccountID().getUserID()
loadAnimator(fragment,transition,false,transitionStyle)
mTextUtil.nextRandomParagraph(WORD_LENGTH,STYLE_TEXT)
Long.valueOf(3)
trimmedLine.contains(delimiter)
Integer.parseInt(System.getProperty("cassandra.memtable_row_overhead_computation_step","100000"))
e.toString()
fis != null && fis.length > 0
assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions("-Xlint:-processing","-implicit:none")
logger.fine(String.format("emitting event %s",args))
Long.parseLong(id)
new Paint()
importedLayout.getGroup()
nodeEngine.getSharedService(LockService.SERVICE_NAME)
assertPhoneNumberNotEqual("123123","0123123",false)
MakeGLMModelHandler.oneHot(fr,interactions,useAll,standardize,false,skipMissing)
Simple.forClass(SkylarkDict.class)
callCountIndirect++
editor.waitAllMarkersInvisibility(ERROR)
logger.fine(String.format("server disconnect (%s)",this.nsp))
selenium.isElementPresent("link=Site Name")
new SctpMessage(protocolIdentifier,streamIdentifier,unordered,msg.retain())
lock.isHeldByCurrentThread()
object2StaticBuffer(expectedValue)
/**   * SSH port.  */ private Integer port=2000; 
lp.resolveLayoutDirection(layoutDirection)
mItems.add(toPosition - preItemCount,item)
listView.setSelectionFromTop(checkedItem,a.getDimensionPixelSize(R.styleable.AlertDialog_selectionScrollOffset,0))
grantRuntimePermissionsLPw(deviceProvisionPackage,ACCOUNTS_PERMISSIONS,userId)
SAMPLE_RATE_HZ_MAX=96000
display.getRealMetrics(dm)
final DomAnchor parent
verifySorted(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
list.removeFirst()
lockMode == InodeTree.LockMode.READ
AppLog.e(T.NOTIFS,"GCM Error: " + errorId)
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
"Use " + ATT_LOGOUT_SUCCESS_URL + " or "+ ATT_LOGOUT_HANDLER+ ", but not both"
sourceHeight > 0
new ArrayList<>(0)
LOG.warn("Failed to freeSpace: No StorageDirView has enough capacity of {} bytes",availableBytes)
max.getBlockZ()
mGnssCallback != null
Error ignored
CompanyService.class
justBootedUp
origin.realComponent().doubleValue() >= other
stts.readInt()
!this.sslHostnameValidationEnabled
return 9; 
Directory dir=newDirectory(); 
synchronized (mAm) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
value == null || Objects.equals(value,defaultValue)
new DefaultImageRaster(image,0,0,false)
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
response.getRawStatusCode()
type == BinaryMapAddressReaderAdapter.POSTCODES_TYPE
logger.error("Unexpected exception in updating executions",e)
locationServicesStatus.isLocationProviderRequired()
mOuterRadius * 0.9f
ViewLanguageTest.class
parentJob.isStopped() || trans.getErrors() != 0
telephony.getLteOnCdmaModeForSubscriber(subId,getOpPackageName())
config.isAnimateGrass()
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,methodHandleLoaded))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
new CountDownLatch(2)
view.getContext().getOpPackageName()
metadata.getFaces()
currentResponse != null && currentResponse.getAuthentication() != null
value == Long.MAX_VALUE
getSubprojects()
UserNotificationEventLocalServiceUtil.getDeliveredUserNotificationEventsCount(themeDisplay.getUserId(),UserNotificationDeliveryConstants.TYPE_WEBSITE,actionable,false)
GraphCommit<Id>
public T setStandardError(OutputStream outputStream){   operationParamsBuilder.setStderr(outputStream);   return getThis(); } 
mGnssCallback != null
mContext.checkCallingOrSelfPermission(android.Manifest.permission.READ_PRIVILEGED_PHONE_STATE)
parent instanceof AppWidgetHostView || parent == null
mPostKeyguardExitAnimation.hasEnded() || mCurrentTime - mPostKeyguardExitAnimation.getStartTime() > mPostKeyguardExitAnimation.getDuration()
Thread.sleep(300)
Long.parseLong(args[ai])
desktopSharingButton.setPressedIcon(ImageLoader.getImage(ImageLoader.DESKTOP_BUTTON_SMALL_PRESSED))
Boolean.parseBoolean(getOptional("kylin.query.enable-dict-enumerator","false"))
Instrument.create(null,new AdvancedInstrumentRootFactory(){   @Override public AdvancedInstrumentRoot createInstrumentRoot(  Probe probe,  Node node){     return new AdvancedInstrumentRoot(){       public String instrumentationInfo(){         return null;       }       @Override public Object executeRoot(      Node n,      VirtualFrame frame){         return null;       }     } ;   } } ,null,"test AdvancedInstrument")
FUNCTOR_PROCESS_DELAY=4
Math.max(leftLen,rightLen)
config.getMaxEntriesLocalHeap()
object.getDataSource()
entry == null || entry.get() == null
new MaterialDialog.Builder(getActivity()).title(R.string.about).positiveText(R.string.dismiss).content(R.string.about_body,true)
socialActivitySetFinder.countByRelation(userId)
telephony.isRadioOn(getOpPackageName())
offsetOrZero.add(numberOfRowsOrMax)
spec.getAllFields()
setop.getJavaName()
attributes.getFloat(R.styleable.ArcProgress_arc_angle,default_arc_angle)
statistics.addGetTimeNanos(System.nanoTime() - start)
selenium.isElementPresent("link=Control Panel")
GlobalContextKey.create("_prefer_target_jdk_javac_")
tree.getBounds()
return true; 
stateManager.register(store1,stateRestoreCallback)
assertPlanEquals(expectedPlan,actualPlan)
toolWrapper.addProblemElement(refEntity,problemDescriptor)
dockedBounds.right + dockDividerWidth
sublistsIndices.keySet().stream()
this.doIntrospect(interfaces,matchedInterfaces)
startActivity(in)
isSubDelimiter(c)
hasRows(oldTableName)
Response.ok(null,MediaType.TEXT_PLAIN)
mController.setRingerMode(AudioManager.RINGER_MODE_VIBRATE,false)
sendMessageAtFrontOfQueue(CMD_STOP_AP)
Base64.encodeBytes(key,Base64.DONT_BREAK_LINES)
lp.resolveLayoutDirection(layoutDirection)
twitter1.checkUserListMembership(id1.screenName,userList.getId(),id2.id)
getContext().enforceCallingPermission(android.Manifest.permission.DUMP,message)
Object[]
AbstractBottomUpTraversal<TargetNode<?>,RuntimeException>
LOG.warn("OpenTracing: Failed to capture tracing data",t)
id=13108
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers4.kt")
this.registrations.remove(handler)
DEFAULT_DISMISS_TO_VIEW_RATIO_LIMIT=.8f
e.toString()
info != null
pm.performDexOpt(pkg,null,true)
/**   */ class SctpServerPipelineSink extends AbstractSctpChannelSink {   static final InternalLogger logger=InternalLoggerFactory.getInstance(SctpServerPipelineSink.class);   private final SctpWorker[] workers;   private final AtomicInteger workerIndex=new AtomicInteger();   SctpServerPipelineSink(  Executor workerExecutor,  int workerCount){     workers=new SctpWorker[workerCount];     for (int i=0; i < workers.length; i++) {       workers[i]=new SctpWorker(workerExecutor);     }   }   @Override public void eventSunk(  ChannelPipeline pipeline,  ChannelEvent e) throws Exception {     Channel channel=e.getChannel();     if (channel instanceof SctpServerChannelImpl) {       handleServerSocket(e);     }  else     if (channel instanceof SctpChannelImpl) {       handleAcceptedSocket(e);     }   }   private void handleServerSocket(  ChannelEvent e){     if (!(e instanceof ChannelStateEvent)) {       return;     }     ChannelStateEvent event=(ChannelStateEvent)e;     SctpServerChannelImpl channel=(SctpServerChannelImpl)event.getChannel();     ChannelFuture future=event.getFuture();     ChannelState state=event.getState();     Object value=event.getValue(); switch (state) { case OPEN:       if (Boolean.FALSE.equals(value)) {         close(channel,future);       }     break; case BOUND:   if (value != null) {     bind(channel,future,(SocketAddress)value);   }  else {     close(channel,future);   } case INTEREST_OPS: if (event instanceof SctpBindAddressEvent) {   SctpBindAddressEvent bindAddressEvent=(SctpBindAddressEvent)event;   bindAddress(channel,bindAddressEvent.getFuture(),bindAddressEvent.getValue()); } if (event instanceof SctpUnbindAddressEvent) { SctpUnbindAddressEvent unbindAddressEvent=(SctpUnbindAddressEvent)event; unbindAddress(channel,unbindAddressEvent.getFuture(),unbindAddressEvent.getValue()); } break; } } private void handleAcceptedSocket(ChannelEvent e){ if (e instanceof ChannelStateEvent) { ChannelStateEvent event=(ChannelStateEvent)e; SctpChannelImpl channel=(SctpChannelImpl)event.getChannel(); ChannelFuture future=event.getFuture(); ChannelState state=event.getState(); Object value=event.getValue(); switch (state) { case OPEN: if (Boolean.FALSE.equals(value)) { channel.worker.close(channel,future); } break; case BOUND: case CONNECTED: if (value == null) { channel.worker.close(channel,future); } break; case INTEREST_OPS: channel.worker.setInterestOps(channel,future,(Integer)value); break; } }  else if (e instanceof MessageEvent) { MessageEvent event=(MessageEvent)e; SctpChannelImpl channel=(SctpChannelImpl)event.getChannel(); boolean offered=channel.writeBuffer.offer(event); assert offered; channel.worker.writeFromUserCode(channel); } } private void bind(SctpServerChannelImpl channel,ChannelFuture future,SocketAddress localAddress){ boolean bound=false; boolean bossStarted=false; try { channel.serverChannel.bind(localAddress,channel.getConfig().getBacklog()); bound=true; channel.setBound(); future.setSuccess(); fireChannelBound(channel,channel.getLocalAddress()); Executor bossExecutor=((SctpServerSocketChannelFactory)channel.getFactory()).bossExecutor; DeadLockProofWorker.start(bossExecutor,new Boss(channel)); bossStarted=true; }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); }  finally { if (!bossStarted && bound) { close(channel,future); } } } private void bindAddress(SctpServerChannelImpl channel,ChannelFuture future,InetAddress localAddress){ try { channel.serverChannel.bindAddress(localAddress); future.setSuccess(); }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } private void unbindAddress(SctpServerChannelImpl channel,ChannelFuture future,InetAddress localAddress){ try { channel.serverChannel.unbindAddress(localAddress); future.setSuccess(); }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } private void close(SctpServerChannelImpl channel,ChannelFuture future){ boolean bound=channel.isBound(); try { if (channel.serverChannel.isOpen()) { channel.serverChannel.close(); Selector selector=channel.selector; if (selector != null) { selector.wakeup(); } } channel.shutdownLock.lock(); try { if (channel.setClosed()) { future.setSuccess(); if (bound) { fireChannelUnbound(channel); } fireChannelClosed(channel); }  else { future.setSuccess(); } }   finally { channel.shutdownLock.unlock(); } }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } SctpWorker nextWorker(){ return workers[Math.abs(workerIndex.getAndIncrement() % workers.length)]; } private final class Boss implements Runnable { private final Selector selector; private final SctpServerChannelImpl channel; Boss(SctpServerChannelImpl channel) throws IOException { this.channel=channel; selector=Selector.open(); boolean registered=false; try { channel.serverChannel.register(selector,SelectionKey.OP_ACCEPT); registered=true; }   finally { if (!registered) { closeSelector(); } } channel.selector=selector; } @Override public void run(){ final Thread currentThread=Thread.currentThread(); channel.shutdownLock.lock(); try { for (; ; ) { try { if (selector.select(500) > 0) { selector.selectedKeys().clear(); } SctpChannel acceptedSocket=channel.serverChannel.accept(); if (acceptedSocket != null) { registerAcceptedChannel(acceptedSocket,currentThread); } }  catch (SocketTimeoutException e) { } catch (CancelledKeyException e) { } catch (ClosedSelectorException e) { } catch (ClosedChannelException e) { break; } catch (Throwable e) { if (logger.isWarnEnabled()) { logger.warn("Failed to accept a connection.",e); } try { Thread.sleep(1000); }  catch (InterruptedException e1) { } } } }   finally { channel.shutdownLock.unlock(); closeSelector(); } } private void registerAcceptedChannel(SctpChannel acceptedSocket,Thread currentThread){ try { ChannelPipeline pipeline=channel.getConfig().getPipelineFactory().getPipeline(); SctpWorker worker=nextWorker(); worker.register(new SctpAcceptedChannel(channel.getFactory(),pipeline,channel,SctpServerPipelineSink.this,acceptedSocket,worker,currentThread),null); }  catch (Exception e) { if (logger.isWarnEnabled()) { logger.warn("Failed to initialize an accepted socket.",e); } try { acceptedSocket.close(); }  catch (IOException e2) { if (logger.isWarnEnabled()) { logger.warn("Failed to close a partially accepted socket.",e2); } } } } private void closeSelector(){ channel.selector=null; try { selector.close(); }  catch (Exception e) { if (logger.isWarnEnabled()) { logger.warn("Failed to close a selector.",e); } } } } } 
layoutPageTemplateCollectionService.getLayoutPageTemplateCollections(getGroupId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,layoutPageTemplateCollectionNameComparator)
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,true)
subCursor.getString(COLUMN_ATTENDEE_ID_NAMESPACE)
bucket.isExists()
resolver.acquireUnstableContentProviderClient(uri)
mUfs.create(testFile,CreateOptions.defaults().setEnsureAtomic(true))
nextPos < mBoundPos
channel.sendHeaders()
a.getString(attr)
!mIsSummaryWithChildren || !mChildrenExpanded || (getNotificationChildren().size() == 1 && isClearable())
attribute.startsWith(keyPrefix) && attribute.length() > keyPrefix.length()
if (VDBG) {   Log.d(LOG_TAG,"hasBgCall: " + hasBgCall + "sameChannel:"+ sameChannel); } 
userInfo == null || !userInfo.canHaveProfile()
activeFrom == null
settings.readLPw(null,0,false)
dir.getAbsolutePath()
telephony.getNetworkTypeForSubscriber(subId,getOpPackageName())
appearance.getFloat(attr,0)
mQsDensityContainer.getX()
IndexReader.open(benchmark.getRunData().getDirectory())
PsiUtil.hasDefaultConstructor(value,true,false)
popupWindow.setContentWidth(menuWidth)
selenium.isElementPresent("link=Control Panel")
!DruidDataSourceUtils.isRemoveAbandoned(datasource)
this.httpHandler.handle(request,response).switchOnError(ex -> {   logger.error("Could not complete request",ex);   nativeResponse.setStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
list.append(ai)
Boolean.parseBoolean(BytesUtil.readUTFString(buffer))
participantAddresses.get(1)
LOG.debug("Getting synchronous method stub from channel")
PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE=0x00040000
slop.getNodeId()
tw.close()
new OutOfCapacityException(String.format("SchedulerGroup %s is out of capacity. numPending: %d, maxPending: %d, reservedThreads: %d threadsHardLimit: %d",groupContext.name(),groupContext.numPending(),maxPendingPerGroup,groupContext.totalReservedThreads(),resourceManager.getTableThreadsHardLimit()))
stateChangedLatch.await(3,TimeUnit.SECONDS)
new IndexWriter(dir,new StandardAnalyzer(),IndexWriter.MaxFieldLength.LIMITED)
getTypeName2(method.getReturnType())
re.iterator()
DBG=true
STATUS.isReleaseToRefresh(mStatus)
temp.reAddRight()
routeList == null || routeList.isEmpty()
StringBuilder paramTypesList=new StringBuilder("("); 
inflightRepository != null
!newDefaultSubIdObj.equals(mDefaultSubId)
new MapReduceIndex<K,V,FileContent>(indexId,extension.getIndexer(),storage)
plugin.processPayment(account.getId(),directPaymentId,account.getPaymentMethodId(),amount,currency,properties,callContext)
telephony.isOffhook(getOpPackageName())
performDexOpt(packageName,instructionSet,false)
this.controller.saveService(data)
context.declareTables()
tempMat4.set(worldMatrix)
"SELECT id, factId, combinedDue FROM cards WHERE type = 1 AND combinedDue > " + mDueCutoff + " ORDER BY combinedDue LIMIT "+ mQueueLimit
Simple.forClass(Integer.class)
RegexFilter.createFilter(".*(\n.*)*",new String[0],false,null,null)
Thread.sleep(10_000)
mUserPaddingEnd >= 0
SLTestTruffleBoundary01BuiltinFactory.getInstance()
mIconColor != null && mIconColor.isStateful()
dest.mkdirs()
etp.setSummary(etp.getText())
new VelocityTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_velocityEngine,_templateContextHelper,false)
lineageInfo.getChildren()
fs.renameFile(file,new File(file.getParent(),newName))
serviceTester.systemRunning()
EqualsBuilder.class
paused
isGreaterOrEqual(platformVersion,M)
new RMNodeStatusEvent(node.getNodeID(),status,new ArrayList<ContainerStatus>(),null,null)
invoiceItem.getAmount().divide(BigDecimal.TEN,BigDecimal.ROUND_HALF_UP)
state.isTerminalState()
System.currentTimeMillis() + WAIT_MILLIS_BEFORE_JOIN
1L << 36 - 1
dpToPx(64f)
List<T>
r != null && r.pid != Process.myPid() && Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.WTF_IS_FATAL,0) != 0
Setting.listSetting("searchguard.audit.config.http_endpoints",Lists.newArrayList("localhost:9200"),Function.identity(),Property.NodeScope,Property.Filtered)
private final WatcherRemoveCuratorFramework client; 
generateFluentSetters()
new WordToSentenceProcessor<IN>(WordToSentenceProcessor.NewlineIsSentenceBreak.ALWAYS)
selenium.isElementPresent("link=Control Panel")
c.findOne(new BasicDBObject("_id",17),null)
timeUnit != null
mock.expectedMinimumMessageCount(10)
FastMath.min(origin,num.floatValue())
new Paint()
assertEquals("string",model.getProperties().get(NAME).getType())
op == CALL
(Item)this
epsi(otherArr)
Arrays.asList("viel","nichts","wenig")
setExpression(expressions.get(myHistoryIndex))
revisionVersion=2
new MultiRootMessage(myProject,GitUtil.getRootsFromRepositories(roots),false,true)
LinkedList<Object>
Bytes.toBytes(tableNameOrRegionName)
selenium.isElementPresent("link=Control Panel")
mAccount.setChipColor(AccountSettings.this,color)
specHeightMode == MeasureSpec.EXACTLY || specHeightMode == MeasureSpec.AT_MOST
RESOURCES_UNAVAILABLE_OR_UNSPECIFIED=47
(call.getCallGroup() == null && otherCall.getCallGroup() == null) || (call.getCallGroup() != null || otherCall.getCallGroup() != null) && call.getCallGroup() != otherCall.getCallGroup()
Character.isLetterOrDigit(ch)
Long.parseLong(time)
Trans != NO_TRANSPOSE
entry.getSupportsPartial()
new UnlockHandler(this)
result.assertJson(this.getClass(),"search_debt_rule.json",false)
subjectConfData.getNotOnOrAfter().isBeforeNow()
FieldAccess.forField(delegateField).read()
@Override public ExtendedCell deepClone(){   throw new UnsupportedOperationException(); } 
LOG.debug(ex.getLocalizedMessage(),ex)
new Box(1,1,1)
globalExecutionStats.getStartedSplits()
selenium.isElementPresent("link=Control Panel")
Arrays.hashCode(mData)
WAIT_FOR_NETWORK_TIMEOUT_DEFAULT_MS=0
platformVersion < M
linkableToModuleMap.get(innerConstituent)
ImageView divider=new ImageView(mContext); 
builder.length() == 0 && s != null
shape.getMin().z
event.getRawX()
converter.tryConvertTo(rightValue.getClass(),leftValue)
myFile.getPath()
format("max-age=%s",300)
mNwService.setInterfaceConfig(mTetherInterfaceName,ifcg)
mReactInstanceManager.onResume(this,this)
validParts >= graphs.size()
JSError.make(SourceMapInput.SOURCEMAP_PARSE_FAILED,sourceMapPath,e.getMessage())
annotationHelper.printAnnotationError(element,"%s annotated element should not have a private constructor")
!Version.isBlackberry(this) || !"qnx".equals(System.getProperty("os.name"))
selenium.isElementPresent("link=Control Panel")
getTablename().getName()
MUCOwner iq=new MUCOwner(); 
new InstrumentedTimingCollector(Metrics.defaultRegistry())
!allowPrivate.isNull()
liveDocs == null || liveDocs.get(i)
new FilteringClassLikeInfo(classLikeInfo,ONLY_ENUM_ENTRIES){   @Override public JetClassOrObject getCorrespondingClassOrObject(){     return null;   }   @NotNull @Override public ClassKind getClassKind(){     return ClassKind.OBJECT;   }   @NotNull @Override public List<? extends JetParameter> getPrimaryConstructorParameters(){     return Collections.emptyList();   }   @NotNull @Override public List<JetTypeParameter> getTypeParameters(){     return Collections.emptyList();   } } 
@Nullable
newBase.hasNoEntries()
selenium.isElementPresent("link=Control Panel")
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,policy,IndexWriter.MaxFieldLength.LIMITED)
createTestBlockCapsule(1533529947843L + 3000L * 8 + 3000L * i,number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
recoveryDescs.putIfAbsent(id,recovery=new GridNioRecoveryDescriptor(queueLimit,node,log))
co.fadeInDuration=700
USE_STEP_BY_STEP_RENDERING.setModeDefaultValue(ApplicationMode.CAR,false)
getDestroyClosure()
ActivityManager.handleIncomingUser(callingPid,callingUid,userId,true,false,"enqueueNotification",pkg)
element.getLocalName()
parsedResult.getType()
time.put(current)
log.debug("Error extracting parameters meta data",e)
new ObjectMapper().readerFor(Map.class)
CommandUtils.convertMsToDate(files[0].getCreationTimeMs())
type.getDeclaredConstructor()
Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-","tomcat-embed-websocket-")
element.getTextTrim()
selenium.isElementPresent("link=Control Panel")
a.getBoolean(R.styleable.DragSortListView_use_default_controller,true)
assertEquals(12,beanCount)
private SettingsLocatorHelper _mockSettingsLocatorHelper; 
latch.startLatch.await(400,TimeUnit.MILLISECONDS)
"Footnote".equals(type) || "DocumentIndexMark".equals(type)
bag.recycle(reserved)
Collections.emptyList()
arrayName=options.get(ARRAY_NAME)
finalizationLock.wait(10)
return GCM; 
value.toLowerCase().startsWith(constraintLowerCase)
LOG.warn("Could not append. Requesting close of wal",e)
a.getLayoutDimension(com.android.internal.R.styleable.Spinner_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT)
a.getString(attr)
mQsDensityContainer.getX()
mSelectResponse != null && mSelectResponse.length > 0
commit.getAuthorTime()
TestSuiteEnvironment.getHttpAddress()
file.getAbsolutePath()
Beans.newDuration(tgc.getRememberMeMaxAge()).getSeconds()
ret0 != null && ret0 != TOMBSTONE
@Nullable
isGreaterOrEqual(platformVersion,M)
table.averageFloat(columnIndex)
stagingTypeSettingsProperties.toString()
log.info("caught exception",e)
commandLineConverter == null
!TextUtils.isEmpty(addresses)
region == null || !region.isValid()
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Boolean.valueOf(value)
position.setAltitude(buf.readShort())
agentInstances.findAgentAndRefreshStatus(uuid)
Mono.subscriberContext()
getTypeName2(decl.getMethodBinding().getReturnType())
ctx.getMapViewTrackingUtilities()
jp.getNumberValue()
synchronized (mLock) {   mSystemUnlockedUsers=ArrayUtils.removeInt(mSystemUnlockedUsers,userId); } 
DEBUG_STARTING_WINDOW_VERBOSE || false
Throwable ex
Response<RemoteCallResponseType>
selenium.isElementPresent("link=Control Panel")
DirectoryReader reader=IndexReader.open(dir); 
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
detector == null || !detector.isInProgress()
ProcessorDefinition<ExpressionNode>
error.expectedMinimumMessageCount(1)
getConversionByClass(value.getClass(),logicalType)
SubtleUtil.validateExists(inFile)
appOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
initialCapacity > 1 << 30
selenium.isElementPresent("link=Control Panel")
c == Long.class || c == Long.TYPE
getDialogTitle()
Thread.sleep(1000)
new FairAffinityFunction(false,512)
Throwable e
c("")
findAnnotationAttributes(element,annotationType.getName(),false,false)
lockForRescale()
binary.getDisplayName()
doTest(BASE_PATH + "/" + getTestName(false)+ ".java",warnings,false)
mEnded && !pending.hasRemaining() && mEndCallback != null
LinkedHashSet<JavaMethod>
handler.waitFor(3000)
create().select(param("p",String.class).as("p")).getSQL(false)
_log.warn(ioe,ioe)
mQueryTextView.length()
new NullPointerException("Emitter got a null throwable. Null values are generally not allowed in 2.x operators and sources.")
messenger.requestSmsObsolete(res)
signalParamHash(IS95_CONST_IR_SIGNAL_TONE,TAPIAMSSCDMA_SIGNAL_PITCH_UNKNOWN,IS95_CONST_IR_SIG_TONE_CALL_W)
createInstanceOn(event)
new PyStringLiteralLexer(PyTokenTypes.TRIPLE_QUOTED_STRING)
grantRuntimePermissionsLPw(deviceProvisionPackage,ACCOUNTS_PERMISSIONS,userId)
method.getMessageType()
builder.setNeutralButton(res.getString(R.string.import_message_replace),new DialogInterface.OnClickListener(){   @Override public void onClick(  DialogInterface dialog,  int which){     Resources res=getResources();     StyledDialog.Builder builder=new StyledDialog.Builder(DeckPicker.this);     builder.setTitle(res.getString(R.string.import_title));     builder.setMessage(res.getString(R.string.import_message_replace_confirm,mImportPath));     builder.setPositiveButton(res.getString(R.string.yes),new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog,      int which){         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_IMPORT_REPLACE,new DeckTask.TaskListener(){           @Override public void onPostExecute(          DeckTask.TaskData result){             if (mProgressDialog != null && mProgressDialog.isShowing()) {               mProgressDialog.dismiss();             }             if (result.getBoolean()) {               Resources res=getResources();               int count=result.getInt();               if (count < 0) {                 if (count == -2) {                   mDialogMessage=res.getString(R.string.import_log_no_apkg);                 }  else {                   mDialogMessage=res.getString(R.string.import_log_error);                 }                 showDialog(DIALOG_IMPORT_LOG);               }  else {                 Object[] info=result.getObjArray();                 updateDecksList((TreeSet<Object[]>)info[0],(Integer)info[1],(Integer)info[2]);               }             }  else {               handleDbError();             }           }           @Override public void onPreExecute(){             if (mProgressDialog == null || !mProgressDialog.isShowing()) {               mProgressDialog=StyledProgressDialog.show(DeckPicker.this,getResources().getString(R.string.import_title),getResources().getString(R.string.import_importing),true,false);             }           }           @Override public void onProgressUpdate(          DeckTask.TaskData... values){           }         } ,new TaskData(AnkiDroidApp.getCol(),mImportPath));         mImportPath=null;       }     } );     builder.setNegativeButton(res.getString(R.string.no),null);   } } )
/**   * TitanTransaction defines a transactional context for a  {@link TitanGraph}. Since TitanGraph is a transactional graph database, all interactions with the graph are mitigated by a TitanTransaction. <p/> All vertex and edge retrievals are channeled by a graph transaction which bundles all such retrievals, creations and deletions into one transaction. A graph transaction is analogous to a <a href="http://en.wikipedia.org/wiki/Database_transaction">database transaction</a>. The isolation level and <a href="http://en.wikipedia.org/wiki/ACID">ACID support</a> are configured through the storage backend, meaning whatever level of isolation is supported by the storage backend is mirrored by a graph transaction. <p/> A graph transaction supports: <ul> <li>Creating vertices, properties and edges</li> <li>Creating types</li> <li>Index-based retrieval of vertices</li> <li>Querying edges and vertices</li> <li>Aborting and committing transaction</li> </ul>  * @author Matthias Br&ouml;cheler (http://www.matthiasb.com)  */ public interface TitanTransaction extends Transaction {   /**   * Creates a new vertex in the graph with the given vertex id and the given vertex label. Note, that an exception is thrown if the vertex id is not a valid Titan vertex id or if a vertex with the given id already exists. <p/> Custom id setting must be enabled via the configuration option  {@link org.janusgraph.graphdb.configuration.GraphDatabaseConfiguration#ALLOW_SETTING_VERTEX_ID}. <p/> Use  {@link org.janusgraph.core.util.TitanId#toVertexId(long)} to construct a valid Titan vertex id from a user id.  * @param id vertex id of the vertex to be created  * @param vertexLabel vertex label for this vertex - can be null if no vertex label should be set.  * @return New vertex  */   public TitanVertex addVertex(  Long id,  VertexLabel vertexLabel);   /**   * Retrieves the vertex for the specified id. This method is intended for internal use only. Use  {@link org.apache.tinkerpop.gremlin.structure.Graph#vertices(Object)} instead.  * @param id id of the vertex to retrieve  * @return vertex with the given id if it exists, else null  */   public TitanVertex getVertex(  long id);   public Iterable<TitanVertex> getVertices(  long... ids);   public Iterable<TitanEdge> getEdges(  RelationIdentifier... ids);   /**   * Commits and closes the transaction. <p/> Will attempt to persist all modifications which may result in exceptions in case of persistence failures or lock contention. <br /> The call releases data structures if possible. All element references (e.g. vertex objects) retrieved through this transaction are stale after the transaction closes and should no longer be used.  * @throws org.janusgraph.diskstorage.BackendException if an error arises during persistence  */   public void commit();   /**   * Aborts and closes the transaction. Will discard all modifications. <p/> The call releases data structures if possible. All element references (e.g. vertex objects) retrieved through this transaction are stale after the transaction closes and should no longer be used.  * @throws org.janusgraph.diskstorage.BackendException if an error arises when releasing the transaction handle  */   public void rollback();   /**   * Checks whether the transaction is still open.  * @return true, when the transaction is open, else false  */   public boolean isOpen();   /**   * Checks whether the transaction has been closed.  * @return true, if the transaction has been closed, else false  */   public boolean isClosed();   /**   * Checks whether any changes to the graph database have been made in this transaction. <p/> A modification may be an edge or vertex update, addition, or deletion.  * @return true, if the transaction contains updates, else false.  */   public boolean hasModifications(); } 
size <= 1
resources.getDimensionPixelSize(R.dimen.close_handle_height)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
endpoint.getOrCreateConnectionFactory()
command.getDeviceId()
parent.resolveFile(iconfile)
mValues[8]
new GitException(ERROR_ADD_REMOTE_URL_MISSING)
Y1
8 + 8
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/SuperMethod.kt")
Throwable unexpectedException
RowKey.prefixKeyWithSalt(key)
@Override
QuotaCache.this.tableQuotaCache.containsKey(table)
FUNCTOR_PROCESS_DELAY=4
startActivity(in)
firstPos > mTargetPos
SitesImpl.class
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
id=10997
parent instanceof PsiParameterList || parent instanceof PsiParameter
params.getSimulatedPlatformVersion()
assertLeftRightCategory(3,category2b)
event.getRawY()
Integer.parseInt(attrValue)
UpgradeStepRegistrator.class
public class AbstractSerializationsTester extends CleanupHelper {   protected static final String CUR_VER=System.getProperty("cassandra.version","0.7");   protected static final Map<String,Integer> VERSION_MAP=new HashMap<String,Integer>(){ {       put("0.7",1);     }   } ;   protected static final boolean EXECUTE_WRITES=new Boolean(System.getProperty("cassandra.test-serialization-writes","False")).booleanValue();   protected final int getVersion(){     return VERSION_MAP.get(CUR_VER);   }   protected static DataInputStream getInput(  String name) throws IOException {     File f=new File("test/data/serialization/" + CUR_VER + "/"+ name);     assert f.exists() : f.getPath();     return new DataInputStream(new FileInputStream(f));   }   protected static DataOutputStream getOutput(  String name) throws IOException {     File f=new File("test/data/serialization/" + CUR_VER + "/"+ name);     f.getParentFile().mkdirs();     return new DataOutputStream(new FileOutputStream(f));   } } 
NestedSetBuilder.linkOrder()
new NativeAllocationRegistry(Canvas.class.getClassLoader(),getNativeFinalizer(),NATIVE_ALLOCATION_SIZE)
newNode.events().localListen(lsnr,EventType.EVT_NODE_LEFT,EventType.EVT_NODE_FAILED)
synchronized (mAuthorities) {   writeStatisticsLocked(); } 
startTest(getMethodName())
return true; 
service.getDomain().id()
mService != null
removeQuotes(timestring.trim())
cifar.test(100)
Slog.w(TAG,"Invalid wallpaper data")
string != null && string.indexOf(oldname) != -1
sendMsg(mAudioHandler,MSG_SET_DEVICE_VOLUME,SENDMSG_QUEUE,device,0,streamState,0)
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
dynamicType.getDeclaredConstructor()
Configuration.getInstance().setHostInjectionEnabled(host,Collections.singleton(languageId),true)
Context.getPermissionsManager().checkAttribute(getUserId(),entity.getAttributeId())
queue.removeFirst()
Throwable e
mock.expectedMinimumMessageCount(2)
public PoshiRunner(String classCommandName) throws Exception {   LoggerUtil.startLogger();   SeleniumUtil.startSelenium();   System.out.println("\nRunning " + classCommandName);   _testClassCommandName=classCommandName;   _testClassName=PoshiRunnerGetterUtil.getClassNameFromClassCommandName(_testClassCommandName); } 
lobMap.lowerKey(lobId)
mUiHandler.postDelayed(pae,timeout)
bbbGW.userDisconnectedFromGlobalAudio(emm.voiceConf,emm.userid,emm.name)
0.15 * VALUE_RANGE
resp.setHeader("Access-Control-Allow-Methods",methods)
width <= 0
exchFut.discoveryEvent().eventNode()
LogAdapter.createLog(name)
new DeadCodeEliminationPhase(Optional)
private Listener listener; 
rand.nextInt(gap)
engine.execute(query).dumpToString()
Throwable e
holder.getListener().onCaptureSequenceAborted(CameraDeviceImpl.this,requestId,lastFrameNumber)
other.unsafeBitcoinSerialize()
new AssetPortletAddURL(portlet.getPortletId(),message,resourceBundle,locale,addPortletURL)
new UnsupportedOperationException("Work in progress: DefaultDependencyMetadata is not really a DependencyMetadata")
list.toLongArray()
log.error("Problem in JSR223 script ",e)
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
setValue(object,value.intValue())
logger.fine(String.format("performing disconnect (%s)",this.nsp))
Arrays.asList(STANFORD_TOKENIZE,STANFORD_SSPLIT,STANFORD_POS)
mIsScrollableViewHandlingTouch || !isTouchEnabled()
styles_.command()
new Button("submit"){   private static final long serialVersionUID=4149741045073254811L;   @Override public void onSubmit(){     GeoServer gs=(GeoServer)geoServerModel.getObject();     GeoServerInfo global=gs.getGlobal();     global.setCoverageAccess((CoverageAccessInfo)coverageModel.getObject());     gs.save(global);     doReturn();   } } 
rows != null && rows.length != 0
new IllegalStateException("Encountered null sequence records for input index " + i)
@Override public final DivideByOnConditionStep andNotExists(Select<?> select){   return and(notExists(select)); } 
sanitaryName.equalsIgnoreCase(c.getPrettyName())
loaded.getLoaded().getDeclaredConstructor()
buffer.toByteArray()
destroy.isInternal()
super(position,message); 
that.getDomain() == null && getDomain() != null
strongClassCache.putIfAbsent(beanClass,results)
stores.next().getIdentityMap()
return true; 
nameHint == null
prev.getNextProp()
mService.stopLocalOnlyHotspot()
format("max-age=%s",300)
mBluetoothGatt.startScan(mScannerId,mSettings,mFilters,mResultStorages,ActivityThread.currentOpPackageName())
finishAndRemoveTask()
loaded.getLoaded().getDeclaredConstructor()
ActivityManagerNative.getDefault().updatePersistentConfiguration(config)
centerButton(mButtonNegative)
checkArgument(child.parent == null,"Cannot add already-owned child node.\nChild: %s\nExisting parent: %s\nNew parent: %s",child,parent,this)
id=35
LOG.error("Error while deserializing payload",e)
BaseMessages.getString(PKG,"Spoon.Dialog.PromptToSave.Message",fileName)
z.next_in[z.next_in_index++] != 0
rows[1].getLock().writeLock().unlock()
setProperty(POLICY,policy,HC4CookieHandler.DEFAULT_POLICY_NAME)
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
tree.getBounds()
connections.get(target)
timeout=10000
c.writeAndFlush("[" + ctx.channel().remoteAddress() + "] "+ msg+ '\n')
sdk != 21 && sdk != 22
Integer[]
mGnssCallback != null
ServletUtil.prepareParameters(p,true,true,false)
new HandlerThread(THREAD_NAME,android.os.Process.THREAD_PRIORITY_BACKGROUND)
ATLAS_MAP_ENTRY_FIELD_COUNT=3
buffer.size()
httpMethod.getResponseHeader(HEADER_CONTENT_ENCODING)
new ProcessInformations(sc,windows,macOrAix)
view.isScrollbarShown()
/**   * Changes the group of a file or directory specified by args.  */ public final class ChgrpCommand extends AbstractAclCommand {   public ChgrpCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return "chgrp";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String group=args[0];     TachyonURI path=new TachyonURI(args[1]);     chgrp(path,group,false);   }   @Override public String getUsage(){     return "chgrp <group> <path>";   } } 
dest.writeInt(mSubId)
myComponentsRegistry == null || !myComponentsRegistry.containsInterface(interfaceClass)
rv.length >= 4
issue.getRuleKey().toString()
FilenameUtils.getFullPathNoEndSeparator(destination)
SyncAccountService.addSyncAccount(filePathName,10,"test@liferay.com","test","http://localhost:8080/api/jsonws")
configInstance.getIntProperty(namespace + "eurekaServer.readTimeout",8)
Simple.forClass(String.class)
selenium.click("//li[4]/span/a/span")
allOf(withId(R.id.fab_expand_menu_button),withParent(withId(R.id.fab)))
Log.e(TAG,"This will become an error",ex)
oconf.getJSONObject("lapse").getDouble("mult")
vehicleControl.createDebugShape(SceneApplication.getApplication().getAssetManager())
functionName != null
!file.delete()
logger.info("Updating the serviceUrls as they seem to have changed from {} to {} ",Arrays.toString(eurekaServiceUrls.get().toArray()),Arrays.toString(serviceUrlList.toArray()))
containerLog.error(sm.getString("dataSourceRealm.getRoles.exception",username),e)
getPath("checks/javadoc/Input_03.java")
headers.getCommand()
ContextPathUtil.getContextPath(servletContext)
previousScroll == scrollY || mainScroll.getChildAt(0) == null
UserHandle.myUserId()
assertEquals(490,this.servletResponse.getContentLength())
theFeatures.muli(maxRange - minRange + Nd4j.EPS_THRESHOLD)
!hasOnClickListeners()
LOG.isDebugEnabled() && !(psiBlock instanceof PsiCodeFragment) && instruction instanceof ControlTransferInstruction&& after.length == 0
constraintSystem.getTypeParameterDescriptors()
type.getDeclaredConstructor()
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0,UserHandle.ALL)
mContext.sendBroadcastAsUser(intent,UserHandle.CURRENT)
resolveNamedStopWords(pathLoadedStopWords,version,ignore_case)
getServiceForUserLocked(userId)
allocator.getFlowController().prepareActionAllWrite(input,epsilon,nextEpsilon,gamma,dGammaView,dBetaView)
new AlertDialog.Builder(getActivity(),R.style.Theme_ownCloud_Dialog)
Algorithms.isEmpty(pd.getName()) && !Algorithms.isEmpty(nameStr) && !nameStr.equals(PointDescription.getAddressNotFoundStr(mapActivity))
file.getAbsolutePath()
((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(getProject())).cleanupAfterTest(false)
vehicleControl.createDebugShape(SceneApplication.getApplication().getAssetManager())
mDataAuthorities == null || data == null
upgrade()
new ResourceDefinition(name,jobMetaContent)
asyncResult.cause()
GroovyBundle.message("groovy.configure.facet.question.text",module.getName())
start + startIndex
dateTimeFormatter.format(value)
position.offset(mLeft,mTop)
R
(data + increment) % 4
new LFWDataSetIterator(batchSize,numSamples,new int[]{numRows,numColumns,nChannels},outputNum,useSubset,true,new Random(seed))
assertThat("Unexpected error: \n" + cli.getErrorOutput(),cli.getErrorOutput().length(),equalTo(0))
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,false)
logger.trace(evt.getReason())
Float.valueOf(value)
getTestName(true)
o1 instanceof Comparable && o2 instanceof Comparable && o1.getClass() == o2.getClass()
final ServiceTicket sId=getCentralAuthenticationService().grantServiceTicket(tId.getId(),TestUtils.getService()); 
clo.apply(null,true)
_log.warn(ioe,ioe)
assertEquals(490,this.servletResponse.getContentLength())
Map<String,Long>
checkCall(receiver)
new VectorDrawableAnimatorUI(this)
deleteCondition.isInternal()
assertNotNull("SqlStatement to test is NOT null.",statementUnderTest)
DAO_RESCUE_BLOCK=1_800_000
IccUtils.cdmaBcdByteToInt((byte)0x8c)
mArrowImage != null && mShowTabsInDrawer
mMenu.getNonActionItems()
attributes.getAllFlags()
binary.getDisplayName()
getServiceForUserLocked(userId)
Math.max(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
selenium.isElementPresent("link=Control Panel")
mReactInstanceManager.onResume(this,this)
Thread.sleep(500)
upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0
protected RuntimeException throwParserError(Throwable e){   if (e instanceof BytecodeParserError) {     return (BytecodeParserError)e;   }   BytecodeParser bp=this;   BytecodeParserError res=new BytecodeParserError(e);   while (bp != null) {     res.addContext("parsing " + bp.code.asStackTraceElement(bp.bci()));     bp=bp.parent;   }   return res; } 
resultSet.put("start",group_offset)
BatchQuickFix<CommonProblemDescriptor>
mPostKeyguardExitAnimation.hasEnded() || mCurrentTime - mPostKeyguardExitAnimation.getStartTime() > mPostKeyguardExitAnimation.getDuration()
hook.step(prg,op)
logger.trace("attempting to login")
new DeoptimizeNode(action,reason,speculation)
targetSdkVersion > N_MR1
StringBuilder log=new StringBuilder("The event isn't consumed, id:" + snapshot.getId() + " status:"+ snapshot.getStatus()+ " task-count:"+ taskList.size()); 
setReplyTo(replyTos)
Long.parseLong(id)
result.getCause()
!mIsOnInnerCircle && hour != 0
ReadCommand sent
SWIPE_UP_SHOW_ON_APP_LAUNCH_AFTER_DISMISS_BACK_OFF=40
!TextSecurePreferences.isWebrtcCallingEnabled(this) || isGroupConversation()
!mQuietEnable
mService.isDeviceOemUnlocked()
0 - originX
checkResultByText("dependencies {\n" + "    <dependency>\n" + "      <groupId>group</groupId>\n"+ "      <version>1.0</version>\n"+ "      <scope>runtime</scope>\n"+ "    </dependency>\n"+ "}",true)
StatBuckets.prettyUptimeStr(secs)
Arrays.asList("class","constraints","hasMany","mapping","properties",GormProperties.IDENTITY,GormProperties.VERSION,"domainClass","dirty",GormProperties.ERRORS,"dirtyPropertyNames")
c * c
ranges == null || ranges.length == 0
new TimeoutException("Idle timeout " + endPoint.getIdleTimeout() + " ms")
DEFAULT_WIDTH=0x00010000
synchronized (mLock) {   mSystemUnlockedUsers=ArrayUtils.removeInt(mSystemUnlockedUsers,userId); } 
request.getPathInfo()
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
sb.append(nc)
new WorldPoint(2447,3418,1)
entry.rxBytes == 0 && entry.txBytes == 0
heartbeatTimeoutIntervalMs > 0L
assertEquals("Was: " + map + ", no-auto-index:"+ functionalTestHelper.removeAnyAutoIndex(map),1,functionalTestHelper.removeAnyAutoIndex(map).size())
telephony.isRinging(getOpPackageName())
isAllowed()
new IndexWriter(dir,false,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
mInterpolator == null || mNativePtr == null
loaded.getLoaded().getDeclaredConstructor()
r != null && r.pid != Process.myPid() && Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.WTF_IS_FATAL,0) != 0
jp.getDoubleValue()
gen.get().document("target/testdocs","testsection")
h / 2
log.info("Hooking new default : onNextDropped")
CharSequence text
Slog.w(TAG,"ProcessState dead: name=" + mName + " pkg="+ mPackage+ " uid="+ mUid+ " common.name="+ mCommonProcess.mName)
host.setHeaderView(mExpandIndicator)
appearance.getFloat(attr,0)
dbStat.setString(1,table.getName())
"Failed to create OutgoingJingleSession.\n" + calleeAddress + " does not support jingle"
filter == null || unfilteredAppPaths == null
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
tokenStart > buffer.length()
tracesDir.mkdirs()
uri != null || !browser.isLoad()
64 * 1024
Log.d(TAG,"Got null argument for a defined keyset, ignoring!")
super.onDestroy()
final URLDetail webd=(URLDetail)d; 
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticMethodsFromImports.kt")
GetterUtil.getBoolean(serviceContext.getAttribute("updatePageCount"),true)
mSupportsBearing ? 1 : 0
!mUseHeadsUp || isDeviceInVrMode()
selenium.isElementPresent("link=Control Panel")
history2.getHistoryEntryId()
new HttpBlobStore(new URI("http://localhost:" + serverPort),30,credentials)
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicLocalTest extends IdGeneratorAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } 
mVibrator.vibrate(750L)
timeFormatter.format(value)
mRepeat > 0
UserGroupRoleLocalServiceUtil.createUserGroupRole(userGroupRolePK)
v2 & 0xc0
AnnotatedElementUtils.findAnnotationAttributes(method,annotationType)
ParceledListSlice<ActivityManager.RecentTaskInfo>
structuralLock.isHeldByCurrentThread()
JMeterUtils.getPropDefault(USE_RHINO_ENGINE_PROPERTY,false)
return 0; 
getProperties().requestCacheEnabled()
psiTypeParameter.getName()
AbstractHadoopJob.loadKylinPropsAndMetadata()
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range(refElement)).descriptionAndTooltip(message)
mInstalld.createProfileSnapshot(appId,packageName,codePath)
LOGGER.warn("Could not execute markEntries",ex)
ScanResult.is5GHz(frequency)
UPGRADE_TASKS
textSize.y + 6
!isRotationEnabled
Trans != NO_TRANSPOSE
toggleBreakpoint(getScriptPath(),15)
_log.warn(ioe,ioe)
new UnsupportedOperationException(getClass().getName())
stepElement.getAttribute(ID_ATTR)
doReopen(false)
Thread.sleep(1000)
assertLeftRightCategory(11,category2c)
@Override public ExtendedCell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   if (clonedBaseCell instanceof ByteBufferCell) {     return new ValueAndTagRewriteByteBufferCell((ByteBufferCell)clonedBaseCell,this.value,this.tags);   }   return new ValueAndTagRewriteCell(clonedBaseCell,this.value,this.tags); } 
mMccStr == null
mp.getResolvedValue()
selenium.isElementPresent("link=Control Panel")
selenium.isElementPresent("link=Control Panel")
instructionStart + 6
assertTrue("Expected special chars, got: '" + result + "'",result.indexOf("\u00f6\u00e4\u00fc\u00df") != -1)
" firstActiveTime=" + firstActiveTime
!Values.WEBSOCKET.equalsIgnoreCase(upgrade)
registerUsageCallback(networkType,subscriberId,thresholdBytes,callback,null)
old + 9
deployOneTaskTestProcess()
EventLog.writeEvent(EventLogTags.NOTIFICATION_CANCEL_ALL,pkg,mustHaveFlags,mustNotHaveFlags)
Thread.sleep(500)
war.setWebXML(SimpleWebTestCase.class.getPackage(),"web.xml")
/**   * Returns the next pseudorandom  {@link ArrayValue} of date elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of date elements.  */ public DateArray nextDateArray(){   return Values.dateArray(nextDateArrayRaw(minArray(),maxArray())); } 
selenium.isElementPresent("link=Control Panel")
final ImportControl root=ImportControlLoader.load(new File(getPath("import-control_WithNewElement.xml")).toURI()); 
getIntent().getStringExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
private void _runCommand() throws Exception {   _runClassCommandName(_testClassCommandName); } 
selectRestriction(spRestriction.getSelectedItemPosition())
LOG.warn("OpenTracing: Failed to capture tracing data",t)
new GroupTest(false)
globalFacetsForCategorySearch || category == null
path.lastIndexOf("/") <= 0
enforceCallingPermission(android.Manifest.permission.MANAGE_ACTIVITY_STACKS,"stopLockTaskModeOnCurrent")
lock.isHeldByCurrentThread()
selenium.isElementPresent("link=Control Panel")
Float.parseFloat(strings[i])
getWebElement(locator)
(contentType == null) || (contentType.startsWith("text")) || (contentType.endsWith("xml"))|| (contentType.contains("/javascript"))
connections.get(target)
pur.getFileById(dirId.getId())
Blocks.dirt.getUnlocalizedName()
new LightweightThread(null,null,this,stackSize)
assertEquals(10,result.getBySeverity(AnalyticsMessageBase.Severity.WARNING).size())
add(bytes)
origin >= other
selenium.isElementPresent("link=Control Panel")
RulesProfile qProfile
specBuilder.setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE)
route.getOutputs() == null || route.getOutputs().isEmpty()
type.getDataFormat(routeContext)
accountHandle.getComponentName().flattenToString()
Utils.writeUtf8File(parentDir.getAbsolutePath(),FILE_NAME,xmlBuffer.toXML())
new IllegalArgumentException("Attempting to send sliced reindex-style request to a node that doesn't support " + "it. Version is [" + out.getVersion() + "] but must be ["+ BulkByScrollTask.V_5_1_0_UNRELEASED+ "]")
Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
mPostKeyguardExitAnimation.hasEnded() || mCurrentTime - mPostKeyguardExitAnimation.getStartTime() > mPostKeyguardExitAnimation.getDuration()
types == null || types.isEmpty()
HeaderSpec.this
!blocked.isDone()
getSupportActionBar()
PullBufferStream.class
new SyncedFolderItem(UNPERSISTED_ID,mediaFolder.absolutePath,getString(R.string.instant_upload_path) + "/" + mediaFolder.folderName,true,false,false,AccountUtils.getCurrentOwnCloudAccount(this).name,0,false,mediaFolder.filePaths,mediaFolder.folderName,mediaFolder.numberOfFiles)
loginResult != null && loginResult.getProperties() != null
TransactionUtil.validTokenAbbrName(assetIssueContract.getAbbr().toByteArray())
new ToggleAutoTestAction(getEnvironment())
"jar".equals(url.getProtocol()) || url.toString().endsWith(".jar")
mPPS != null && mSPS != null
owners.add(0,Receiver.<String>make(clazzGT.getType()))
ImmutableSortedMap.naturalOrder()
domainModel.execute(ExecutionContextBuilder.Factory.create(update).build(),resultHandler)
odi.close()
_channel.abort(new IOException("unconsumed input"))
mWasActivatedOnDown || !mNeedsDimming || isTouchExplorationEnabled()
typeSettingsProperties.toString()
selenium.isElementPresent("link=Control Panel")
expectedCommentLength <= maxCommentLength
type.getDeclaredConstructor()
SingleModel<U>
mContext.startActivityAsUser(intent,UserHandle.of(mCurrentUserId))
verifyViewMethodsNotDeclaredFinal(sessionBeanClass,localBusinessInterfaces)
(mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0 && telephonyService.isOffhook() && interactive
mQsDensityContainer.getX()
requestFiles == null
dockedBounds.top - dockDividerWidth
SSLContext.getDefault().createSSLEngine(address.getHost(),address.getPort())
node.executorManager.executeLocally(new Runnable(){   public void run(){     MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,cm,MembershipEvent.MEMBER_REMOVED);     for (    MembershipListener listener : listenerSet) {       listener.memberRemoved(membershipEvent);     }   } } )
specModel.getRawProps()
setValue(key,PSS_USS_AVERAGE,(long)(((val * (double)count) + (avgUss * (double)inCount)) / (count + inCount)))
mccStr.isEmpty() || mccStr.equals(String.valueOf(Integer.MAX_VALUE))
userInfo.getWebsite()
LOG.info(e)
lastListener == null
@Override public Variable emitByteSwap(Value input){   Variable result=newVariable(LIRKind.derive(input));   append(new SPARCByteSwapOp(this,result,input));   return result; } 
ShutdownOperations.addOperation(new Runnable(){   public void run(){     deferredBindingActions.remove();   } } ,true)
result.setAttributePrefix("")
defaultDndAccess != null
WindowedValue.valueInGlobalWindow(2,PaneInfo.ON_TIME_AND_ONLY_FIRING)
response.getRawStatusCode()
other.getLimit()
recoveryFile.sync()
Duration.between((Temporal)right,(Temporal)left)
new KeyEvent(eventTime,SystemClock.uptimeMillis(),KeyEvent.ACTION_UP,keyEventCode,0,0,KeyCharacterMap.VIRTUAL_KEYBOARD,0,KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE)
serialVersionUID=1527919222
usersStats.getMax()
return true; 
new HttpHost(proxy.host,proxy.port)
ISOChronology.getInstance(getZone())
item.setTypeText(notice)
typeName.contains("CHAR") || typeName.contains("char")
case INODE_REFERENCE: 
Integer.parseInt(taskIdStr)
GL20.glUniformMatrix4fv(location,transpose,value)
delta < radius
DexFile.getDexOptNeeded(path,isa,compilerFilter,newProfile,false)
failingOnThis.without(UpgradePolicy.canary).startedFailingOn(version)
holder.addCallback(callback)
checkCall(receiver)
assertTrue(message.getPayload() instanceof Collection<?>)
builder.length() == 0 && s != null
mAdapter != null && mDataSetObserver != null
collectJSVariables(clazz,candidates,false,false,true,true,true)
data.dropNull(inputName)
Thread.sleep(50)
mAuthorities.valueAt(i)
!mIsPipRecentsOverlayShown || !mIsRecentsShown || !mIsPipFocusedInRecent|| !mPipManager.isPipShown()
Float.parseFloat(param.getValue())
el.getPropertyAsString(HTTPSampler.METHOD)
ScopedProxyUnwrapper.unwrapIfNecessary(resourceRef)
mSelectResponse != null && mSelectResponse.length > 0
id=10838
Expression.ge(this.propertyName,arguments[0])
renderUpdate(errorChannel,results)
Long.parseLong(val)
list.append(pi)
getPresenter().getRepoId()
selenium.isElementPresent("link=Control Panel")
LOG.debug("Failed to get mount information: {}",e.getMessage())
final TcpChannel channel; 
dist >= maxDist
clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS)
checkStoreUsage(1,0,1,1)
now.plusDays(3).withTimeAtStartOfDay()
logger.warn("Table spec retrieval failed!")
new PriorityQueue<>(items.rows(),new HeapObjectComparator())
8 + 8
locator.getRegionLocation(regionName,true)
assertEquals("that/has/two/bangs",result)
localImageSize == null
isTouched(0.5f,1)
LocaleUtil.getSiteDefault()
UNINITIALIZED
verifySorted(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
instruction.getRegister()
e instanceof NoSuchUserException || e instanceof RequiredReminderQueryException || e instanceof SendPasswordException|| e instanceof UserActiveException|| e instanceof UserLockoutException|| e instanceof UserReminderQueryException
new NullOutputOperatorFactory(operatorId,sourceTypes)
9 * 60 * 1000
getEffectiveHstsEnforced()
HTTPConstants.GET.equals(getMethod()) || HTTPConstants.DELETE.equals(getMethod()) || HTTPConstants.OPTIONS.equals(getMethod())
mAdapter != null && mDataSetObserver != null
MAX_URL_LENGTH=1900
asList(DERBY,FIREBIRD,ORACLE,SQLSERVER,SYBASE)
152 + (USE_OLD_HISTORY ? 1000 : 0)
this.timeoutNs / Time.NS_PER_MS
T[]
new CsvFilter(columns)
new ModLoaderModContainer(bmClazz,canonicalFile)
new UnsupportedOperationException("read-only")
dataSource.setSoftMinEvictableIdleTimeMillis(Long.parseLong(getConnectionAge()))
getPolicy().getMaxBinaryMessageSize()
myRootHandler == null || !myRootHandler.isValid()
_connector.getResponse("GET //bad/foo?data=1 HTTP/1.0\n\n")
order=2
logIndex <= lastSeenCommitIndex
/**   * @return  */ private StringBuilder getCurrentBuffer(){   if (!TransactionSynchronizationManager.hasResource(bufferKey)) {     TransactionSynchronizationManager.bindResource(bufferKey,new StringBuffer());     TransactionSynchronizationManager.registerSynchronization(new TransactionSynchronizationAdapter(){       @Override public void afterCompletion(      int status){         clear();       }       @Override public void beforeCommit(      boolean readOnly){         try {           if (!readOnly) {             complete();           }         }  catch (        IOException e) {           throw new FlushFailedException("Could not write to output buffer",e);         }       }       private void complete() throws IOException {         StringBuffer buffer=(StringBuffer)TransactionSynchronizationManager.getResource(bufferKey);         if (buffer != null) {           String string=buffer.toString();           byte[] bytes=string.getBytes(encoding);           int bufferLength=bytes.length;           ByteBuffer bb=ByteBuffer.wrap(bytes);           int bytesWritten=channel.write(bb);           if (bytesWritten != bufferLength) {             throw new IOException("All bytes to be written were not successfully written");           }           if (forceSync) {             channel.force(false);           }           if (TransactionSynchronizationManager.hasResource(closeKey)) {             closeCallback.run();           }         }       }       private void clear(){         if (TransactionSynchronizationManager.hasResource(bufferKey)) {           TransactionSynchronizationManager.unbindResource(bufferKey);         }         if (TransactionSynchronizationManager.hasResource(closeKey)) {           TransactionSynchronizationManager.unbindResource(closeKey);         }       }     } );   }   return (StringBuffer)TransactionSynchronizationManager.getResource(bufferKey); } 
new Paint(Paint.ANTI_ALIAS_FLAG)
NotificationManager.getInstance().onMessageNotification(messageItem)
Timber.e(error)
logger.trace("Error while matching regex [" + matched + "] for string ["+ matcher+ "] "+ pse.getMessage())
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
InsertReturningStep<R>
String.format("%s: Xmx value has exceeded the allowed limit (max Xmx = %s)",getId(),maxXmx)
ServiceLoader.load(ReportSenderFactory.class,getClass().getClassLoader())
synchronized (mLock) {   for (int i=0; i < mVolumes.size(); i++) {     final VolumeInfo vol=mVolumes.valueAt(i);     if (vol.isVisibleForRead(userId) && vol.isMountedReadable()) {       final StorageVolume userVol=vol.buildStorageVolume(mContext,userId,false);       mHandler.obtainMessage(H_VOLUME_BROADCAST,userVol).sendToTarget();       final String envState=VolumeInfo.getEnvironmentForState(vol.getState());       mCallbacks.notifyStorageStateChanged(userVol.getPath(),envState,envState);     }   }   mSystemUnlockedUsers=ArrayUtils.appendInt(mSystemUnlockedUsers,userId); } 
LOG.warn(String.format("%d ms elapsed since build job marked as finished, but still missing finished status from some workers.",elapseMillisSinceFirstFinishedStatus))
lp.viewType == ITEM_VIEW_TYPE_HEADER_OR_FOOTER
assertThat(set.contains("123")).isTrue()
users.get(j)
registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)
config.getMaxEntriesLocalHeap()
r.curApp != null && r.curApp.curReceiver == r
shadowSize <= 0
mTfs.delete(mTfs.open(new TachyonURI(filePath)),true)
that.getDomain() == null && getDomain() != null
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicDistributedTest extends ListAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(2).newInstances(config);   } } 
queuedChunk.provider.originalLoadChunk(queuedChunk.x,queuedChunk.z)
fileType_ == null || !fileType_.canAutoIndent()
transform(matrix,source,width,height,true,recycle)
new IllegalStateException("Comments are not consistent")
mTo == 0
mWriteOwners != null && includingOwners
clearIndex()
type.getGenericType()
mValues[8]
JettyWebSocketServer.LISTEN_PORT.getDisplayName()
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
err.jspError("jsp.error.tld.mandatory.element.missing","tlib-version",uri)
4 * height
/**   * Rest integration test. runs against external cluster in 'mvn verify'   */ public class RestIT extends ESRestTestCase {   public RestIT(  RestTestCandidate testCandidate){     super(testCandidate);   }   @ParametersFactory public static Iterable<Object[]> parameters() throws IOException, RestTestParseException {     return createParameters(0,1);   } } 
Arrays.asList("android.hardware.audio@2.0::IDevicesFactory","android.hardware.bluetooth@1.0::IBluetoothHci","android.hardware.camera.provider@2.4::ICameraProvider","android.hardware.graphics.composer@2.1::IComposer","android.hardware.media.omx@1.0::IOmx","android.hardware.sensors@1.0::ISensors","android.hardware.vr@1.0::IVr")
Arg args
strippedQuotesLine.contains(" throws ")
CONSTELLATION_TYPE_SHIFT_WIDTH=4
selenium.isElementPresent("link=Control Panel")
Cheese.class
isAllowed()
id=10809
KING_BLACK_DRAGON(NpcID.KING_BLACK_DRAGON,9,ChronoUnit.SECONDS,ItemID.PRINCE_BLACK_DRAGON)
Log.debug(this + " JVM BUG(s) - injecting delay" + _jvmFix2+ " times")
selenium.isElementPresent("link=Control Panel")
name == null || name.isEmpty()
mAuthorities.valueAt(i)
appearance.getFloat(attr,0)
new LayerView(this,0x0f0000ff)
assertThat(KeepOneFilter.isDeletable(createSnapshotWithDate(1L,"2011-05-01").setLast(true))).isFalse()
previousException.compareToIgnoreCase(currentException)
ChannelBuffers.wrappedBuffer(sb.toString().getBytes(bodyCharset))
http2c.setInitialStreamRecvWindow(initialStreamSendWindow)
java.util.concurrent.Executors.newFixedThreadPool(chPrepareThreads)
registerProblem(rightExpression,PyBundle.message("INSP.format.requires.no.mapping"))
@Nullable
imageResOnLoading != 0
DEBUG_STARTING_WINDOW=true
checkManageOrCreateUsersPermission("getting profiles related to user " + userId)
SystemKeyspace.getLocalHostId()
type.getDeclaredConstructor()
a.getDimension(attr,0)
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,JavaConstant.MethodType.ofLoaded(loadedMethodType)))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
UpgradeStepRegistrator.class
__logger.warn("Unable to set 'this.bundle.install' " + " for the bundle " + bundle.getSymbolicName(),t)
public AfterWatermarkEarlyAndLate withLateFirings(OnceTriggerStateMachine lateTrigger){   return new AfterWatermarkEarlyAndLate(earlyTrigger,lateTrigger); } 
structuralLock.isHeldByCurrentThread()
LLVMAMD64WriteAddressRegisterNodeGen.create(sourceLocation,from,frame)
synchronized (mAm) {   pw.print(prefix);   pw.print("SERVICE ");   pw.print(r.shortName);   pw.print(" ");   pw.print(Integer.toHexString(System.identityHashCode(r)));   pw.print(" pid=");   if (r.app != null)   pw.println(r.app.pid);  else   pw.println("(not running)");   if (dumpAll) {     r.dump(pw,innerPrefix);   } } 
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.LOCKDOWN_IN_POWER_MENU,0,getCurrentUser().id)
asList(4L)
parsedResult.getType()
myGutterComponent.convertX(e.getX()) > myGutterComponent.getWhitespaceSeparatorOffset()
classNode.hasMethod(mixinMethod.getName(),mixinMethod.getParameters())
REJECT_OUTSIZED_RESTORE=true
engine.execute(query).dumpToString()
schemeSpecificParts != null && data != null
reporter.report("A class cannot have default members",m)
IllegalStateException.class
COOKIE_SYNC_MANAGER=false
new ArrayList<String>(256)
TelephonyManager.getDefault().getCurrentPhoneType()
result.routes[0].legs[0].steps[1]
mappers.mapper().searchQuoteAnalyzer()
updateChildren()
logger.debug("Skipping delivery of hint for deleted columnfamily",e)
cfm.getColumnDefinition(columnName.key)
Thread.sleep(1000)
ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
Slog.d(TAG,"showSaveLocked(): no mStructure")
from("seda:foo").startupOrder(1).delay(500)
Throwable e1
appInfo.getQueueName()
assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals("there should be only one registration",1,regs1.size());     assertEquals("there should be only one registration",1,regs2.size());   } } )
e2.getValue()
mService.removeNetwork(netId,mContext.getOpPackageName())
ACTIVATION_CONFLICT
new PaymentApiException(e,ErrorCode.PAYMENT_PLUGIN_EXCEPTION,e.getErrorMessage())
rename.isInternal()
context.getPackageManager().queryIntentActivitiesAsUser(intent,0,userId)
computeAntiJoin(inputStatistics,inputStatistics,x,unknown)
newDto(RecipeDto.class).withContent(DEFAULT_DOCKER_IMAGE)
fix.android.opengl.GLES20.glVertexAttribPointer(maVelocityHandle,3,GLES20.GL_FLOAT,false,0,0)
!service.mRequestFilterKeyEvents || (service.mServiceInterface == null)
getFirstWindowIndexInSource(sourceIndex)
selenium.isElementPresent("link=Control Panel")
TArrays_STRING()
containsString("Could not load compiled classes for script-display-name from cache.")
this.messageService.fluxPostAuthorizeFindById(1L).subscriberContext(withUser)
telephony.getCdmaEriIconIndexForSubscriber(subId,getOpPackageName())
AndroidExcludedRefs.createAppDefaults()
hsbPolicy=HORIZONTAL_SCROLLBAR_ALWAYS
super.getHibernateTemplate().execute(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Criteria crit=session.createCriteria(clazz);     for (Iterator i=expressions.iterator(); i.hasNext(); ) {       GrailsMethodExpression current=(GrailsMethodExpression)i.next();       crit.add(current.getCriterion());     }     List results=crit.list();     if (results.size() > 0) {       return results.get(0);     }  else {       return null;     }   } } )
AttributeCache.instance().get(packageName,realTheme,styleable.Window,userId)
holders.remove(holder)
activity == null || activity.isFinishing()
Optional.ofNullable(caCertificatesFile)
status.getCode().getNumber()
activityNdx <= topActivityNdx
volume.getMtpReserveSpace() * 1024L * 1024L
moveInputMethodWindowsIfNeededLocked(false) || displayed
retry.attempt()
i.getTouchIconUrl() == null
new LayerVisitor(asFlatRegion(region),minimumBlockY(region),maximumBlockY(region),ground)
selenium.isElementPresent("link=Control Panel")
new SessionParams(layoutParser,RenderingMode.NORMAL,null,configGenerator.getHardwareConfig(),resourceResolver,layoutLibCallback,0,19,getLayoutLog())
EntityCacheUtil.putResult(DefinitionModelImpl.ENTITY_CACHE_ENABLED,DefinitionImpl.class,definition.getPrimaryKey(),definition)
mUiHandler.removeCallbacks(pae)
new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarCorePath,serviceTypeRegistryService,annotationKeyRegistryService)
basicDLTest_Regression("./smalldata/logreg/prostate.csv","prostateRegression50.hex",new PrepData(){   @Override int prep(  Frame fr){     fr.remove("ID").remove();     return fr.find("AGE");   } } ,50,37.93380250522667,DeepLearningParameters.Activation.Rectifier)
get(context,R.string.pref_auto_viewed,false)
data.split("\\s*,\\s*",-1)
-26
telephony.isOffhook(getOpPackageName())
native_get_videoeditor_export_level(vidCodec)
LinkageError e
ArraySet<UidRange>
location.equals(BlockStoreLocation.anyTier())
client.login(email,password,code).compose(Transformers.pipeApiErrorsTo(tfaError)).compose(Transformers.neverError()).doOnSubscribe(() -> formSubmitting.onNext(true)).doAfterTerminate(() -> formSubmitting.onNext(false))
mAudioSink.buildConfig(mDesiredSamplingRate,mDesiredChannelMask,mDesiredFormat,null)
new IdentityHashMap<>()
dto.setVariables(variables)
Math.min(desiredTileWidth,desiredTileHeight)
mIpSecService.allocateSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
!isViewAncestorOf(focused,this) || distanceToView(focused) > 0
service.getName()
Arg args
rows[topIndex]
log.error(message)
index >= 0
IllegalStateException nsee
logger.debug("There is no alarm running on {}",getUDN())
layer.setLayerPaint(mLayerPaint)
c.getParent() != originalParent
type.getSimpleName()
Math.min(buffer.length,offset + length)
LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE,e)
new IllegalArgumentException(sm.getString("pojoMethodMapping.duplicateMessageParam",m.getName(),m.getClass().getName()))
Representor<T,S>
CompilerDirectives.inCompilationRoot()
realm.checkIfValid()
IndexReader.open(dir)
threadCount=25
type.getDeclaredConstructor()
CLOSURE_DO_CALL_METHOD.equals(methodName) || CLOSURE_CALL_METHOD.equals(methodName)
file == null || file instanceof PsiCompiledElement
configInstance.getIntProperty(namespace + "eurekaServer.readTimeout",8)
new EmoteClue("Panic by the mausoleum in Morytania. Wave before you speak to me. Equip a mithril plate skirt, a maple longbow and no boots.",new WorldPoint(3504,3576,0),PANIC,WAVE,item(MITHRIL_PLATESKIRT),item(MAPLE_LONGBOW),emptySlot("No boots",BOOTS))
MAX_DIMEN_FOR_ROUNDING=1920
CopyOnWriteArrayList<MessageListener<Object>>
return _responseBuffers; 
numConnections=20
A a
rcvdBytesCnt.longValue()
mUiHandler.removeCallbacks(pae)
DefaultKeyGenerator.setMaxTolerateTimeDifferenceMilliseconds(10)
Slog.d(TAG,"showSaveLocked(): no mStructure")
intervalFraction * (nextValue - prevValue)
configInstance.getIntProperty(namespace + "eurekaServer.connectTimeout",5)
in.readOptionalUTF()
event.getRawX()
req.getServletPath()
Math.toDegrees(Math.asin(burgerWidth / hypotenuse)) - 100
setImageDrawable(icon,false)
media != null && media.getMediaType() == MediaType.AUDIO
_masterVec != null
Log_OC.d(TAG,"onResume() start")
new ZipAggregationStrategy(true,true)
logger.warn("{}",builder)
scanFeatures(getCamelKarafFeatureUrl(),"xml-specs-api","camel-core","camel-spring","camel-" + feature)
config.getIdleConnectionTimeoutInMs() > 0 && requestTimeout != -1 && requestTimeout < config.getIdleConnectionTimeoutInMs()
@InputIntMethodAnnotation(value=-45)
mCryptConnector.execute("cryptfs","createnewuserdir",userHandle,path)
KeyStore.getInstance("PKCS11",Security.getProvider(pkcs11.getName()))
type <= 4095
new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(null,null,null))
mState.mPivotYRel != relative
handshakeStatus == HandshakeStatus.NOT_HANDSHAKING || handshakeStatus == HandshakeStatus.FINISHED
resetTimeInSeconds * 1000L
!handle.parent().exists()
addBuildConfigSpectiStrategy(parametersBuilder,imageText)
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
out.getVersion().onOrAfter(Version.V_5_4_0_UNRELEASED)
new IllegalStateException("Advertising can't be both connectable and scannable")
oldConfig.densityDpi != newConfig.densityDpi || oldConfig.getLayoutDirection() != newConfig.getLayoutDirection()
mAttributes.getAllFlags()
mHotspotBounds.set(left,top,right,bottom)
lastSyncTimestamp=now
size=10.0f
System.currentTimeMillis()
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(4,Duration.ofMillis(100),Duration.ofMillis(2000)).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1,0,1,0,1,0,1).expectErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 4/4").hasCause(exception))
apnContext.getWaitingApns()
Locale.getDefault().toLanguageTag()
randomIntBetween(1,pbr.length() - sliceOffset)
Validator.isNotNull(ppe.getCause().getMessage())
new GlobalStatusEnum(65,ONLINE_STATUS,loadIcon("service.gui.statusicons.USER_ONLINE_ICON"),"service.gui.ONLINE")
Mono<Void>
LOG.debug(e)
mockRegionInfo.isMetaTable()
commandExecutor.evalWriteAsync(getName(),codec,EVAL_GET_TTL,"local value = redis.call('hget', KEYS[1], ARGV[2]); " + "if value == false then " + "return nil; "+ "end; "+ "local t, val = struct.unpack('dLc0', value); "+ "local expireDate = 92233720368547758; "+ "local expireDateScore = redis.call('zscore', KEYS[2], ARGV[2]); "+ "if expireDateScore ~= false then "+ "expireDate = tonumber(expireDateScore) "+ "end; "+ "if t ~= 0 then "+ "local expireIdle = redis.call('zscore', KEYS[3], ARGV[2]); "+ "if expireIdle ~= false then "+ "if tonumber(expireIdle) > tonumber(ARGV[1]) then "+ "local value = struct.pack('dLc0', t, string.len(val), val); "+ "redis.call('hset', KEYS[1], ARGV[2], value); "+ "redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), ARGV[2]); "+ "end; "+ "expireDate = math.min(expireDate, tonumber(expireIdle)) "+ "end; "+ "end; "+ "if expireDate <= tonumber(ARGV[1]) then "+ "return nil; "+ "end; "+ "return val; ",Arrays.<Object>asList(getName(),getTimeoutSetName(),getIdleSetName()),System.currentTimeMillis(),key)
LOG.info(e)
SystemKeyspace.getLocalHostId()
createMessageConsumer(session,destinationName,null,false,null)
selenium.isElementPresent("link=Control Panel")
Slog.e(TAG,"Starting rect for app requested, but none available",new Throwable())
connections.containsKey(manager)
options.put(engineKey,System.getProperty(key))
Log.setTraceEnabled(JiveGlobals.getBooleanProperty(Log.LOG_TRACE_ENABLED,false))
new ObjectMapper().readerFor(Map.class)
selenium.isElementPresent("link=Control Panel")
getSettings().SAVE_GLOBAL_TRACK_INTERVAL.get()
responseBodyRegex == null || responseBodyRegex.length() == 0
this.methodResolver.getRequestMappingMethod(handlerMethod).invoke(exchange,bindingContext).doOnNext(result -> result.setExceptionHandler(exceptionHandler)).switchOnError(exceptionHandler)
this.messageService.fluxPostAuthorizeBeanFindById(1L).subscriberContext(withUser)
i * BLOCK_SIZE
private class Tester extends AbstractInteropTest {   @Override protected ManagedChannel createChannel(){     if (!useOkHttp) {       InetAddress address;       try {         address=InetAddress.getByName(serverHost);         if (serverHostOverride != null) {           address=InetAddress.getByAddress(serverHostOverride,address.getAddress());         }       }  catch (      UnknownHostException ex) {         throw new RuntimeException(ex);       }       SslContext sslContext=null;       if (useTestCa) {         try {           sslContext=GrpcSslContexts.forClient().trustManager(TestUtils.loadCert("ca.pem")).build();         }  catch (        Exception ex) {           throw new RuntimeException(ex);         }       }       return NettyChannelBuilder.forAddress(new InetSocketAddress(address,serverPort)).flowControlWindow(65 * 1024).negotiationType(useTls ? NegotiationType.TLS : NegotiationType.PLAINTEXT).sslContext(sslContext).build();     }  else {       OkHttpChannelBuilder builder=OkHttpChannelBuilder.forAddress(serverHost,serverPort);       if (serverHostOverride != null) {         builder.overrideAuthority(GrpcUtil.authorityFromHostAndPort(serverHostOverride,serverPort));       }       if (useTls) {         try {           SSLSocketFactory factory=useTestCa ? TestUtils.newSslSocketFactoryForCa(TestUtils.loadCert("ca.pem")) : (SSLSocketFactory)SSLSocketFactory.getDefault();           builder.sslSocketFactory(factory);         }  catch (        Exception e) {           throw new RuntimeException(e);         }       }       return builder.build();     }   } } 
mContainerView.getHeight()
columnDefinition.getLoadFromCursorMethod(isModelContainerAdapter)
IP_FILTER_ENABLED_HTTP_SETTING.getDefaultRaw(s)
? extends T
logger.warn("license [{}] - invalid",license.uid())
subCursor.getString(COLUMN_ATTENDEE_IDENTITY)
selenium.isElementPresent("link=Control Panel")
new LayerView(this,0x0f00ff00)
setValue(object,value.intValue())
previousPropertyName.compareToIgnoreCase(propertyName)
(MergedObject<T>)cur
maxSize < (used / 1024 / 1024)
deltaY >= 0
setSort(3)
databaseFile.getName()
mOneShot=false
condition.signalAll()
telephony.isOffhook(getOpPackageName())
recurrence != null && recurrence.length() > 0
hours >= 2 || (hours > 0 && minutes == 0)
mappers.mapper().searchQuoteAnalyzer()
processor.open(w2,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,w))
String.format("NODE %d: Already in or beyond node stage, ignoring. current = %s, requested = %s",this.node.getNodeId(),this.node.getNodeStage().getLabel(),targetStage.getLabel())
formatter.print()
checkCallerIsSystemOrShell()
redirectToErrorPage(authSession,Response.Status.INTERNAL_SERVER_ERROR,message,null,parameters)
MonitoringPortlet.isMonitoringPortletRenderRequest()
getStartPeriod() + offset * getPeriodLength()
cassandraProperties.getUsernameAttribute()
ImageResource2x img; 
chooser.showOpenDialog(null)
file == null || beforeDir == null || afterDir == null
selenium.isElementPresent("link=Control Panel")
addMedia(mediaUri)
-619863281
i <= getATN().maxTokenType
key.flip()
jsonObject.put("displayStyle",displayStyleFacet)
it.getJavadocComment()
longSize >= 640
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,value))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
program.stackPop().intValueSafe()
deleteChildrenRecursively(child)
myCache1.getCacheConfiguration().getMaxEntriesLocalHeap()
(byte)0xe2
!filePath.endsWith(".jpg") && !filePath.endsWith(".gif")
-v1
mPanProfile.isProfileReady()
TestShardRouting.newShardRouting(WatchStore.INDEX,0,"_node_id",null,true,ShardRoutingState.STARTED)
mAppOpsManager.noteOpNoThrow(opCode,callingUid,opPackageName)
action != KeyEvent.ACTION_UP
prevNerEndIndex != (start - 1) || nextNerStartIndex != end
format(msg,Arrays.toString(UNICAST_KEYS),Arrays.toString(MULTICAST_KEYS))
log.error("Filtering key {} due to exception",k,e)
this.principalSuffix != null && userPrincipalName.indexOf('@') < 0
element == null || !element.getValid()
Math.min(m,s.size())
c.getInt(31)
handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
new InetSocketAddress("localhost",0)
n >= 0 && n < count(coll)
existingLayout == null
tracesDir.mkdirs()
nmRmConnectionWaitMs + delta
ServiceApiUtil.validateAndResolveApplication(application,sfs,CONF_DEFAULT_DNS)
Stream.of("CYPHER 3.1","CYPHER 3.4")
order=1
GroupPermissionUtil.contains(themeDisplay.getPermissionChecker(),team.getGroupId(),ActionKeys.MANAGE_ANNOUNCEMENTS) && RolePermissionUtil.contains(themeDisplay.getPermissionChecker(),themeDisplay.getScopeGroupId(),role.getRoleId(),ActionKeys.MANAGE_ANNOUNCEMENTS)
Lists.newArrayListWithCapacity(resultMessages.size())
qux.getDeclaredConstructor()
portalTopLevelBuildData.getBuildURL()
new InterruptedException("TEST EXCEPTION")
new RedisCommand<String>("PING")
stream.rstStream()
sep < 0 || sep > j
sendMessageAtFrontOfQueue(CMD_STOP_AP)
NUM_DAYS_AGO=7
result.getType()
GrIntroduceHandlerBase.findAnchor(context.getOccurrences(),scope)
createRecord(value,now,expiryTime)
!this.isStompConnected || conn == null
assertPlanEquals(expectedPlan,actualPlan)
valueMono.switchIfEmpty(exchange.isNotModified() ? Mono.empty() : NO_VALUE_MONO)
Env.fromString(env)
scopeProperty.eq(scope)
ClusterUtils.getCurrentPartitionMapping(cluster)
anomalyFailureCount == 0 && anomalyWarningCount == 0
loaded.getLoaded().getDeclaredConstructor()
new LabelSet.ArrayBasedLabelSet(labels)
Map<String,Object>
selenium.isElementPresent("link=Control Panel")
specBuilder.setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE)
y <= 32
FullScreenOverdrawActivity.class
3 * 1000
new AutoBuffer().put(this).buf()
syncOperation.delay <= 0
mLteSignalStrength > 31
storedOverlayInfos.valueAt(i)
mData.remove(subItem)
mSelector.setHotspot(x,y)
log.info("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
getServiceGuarded().importMultimediaMessage(callingPkg,contentUri,messageId,timestampSecs,seen,read)
selection.getFiles()
range.getTo()
mPlayer.getCurrentPosition() * 1000L
fill || textureImage != null
daysBack=7
return mChangingDisappearingDelay; 
Arrays.asList("100b","100")
Timber.v(negativeResponseFromNewToken,"Authentication exception for new token, permanent error assumed")
c == Byte.class || c == Byte.TYPE
isText(mimeType) || APPLICATION_CEA608.equals(mimeType) || APPLICATION_CEA708.equals(mimeType)|| APPLICATION_SUBRIP.equals(mimeType)|| APPLICATION_TTML.equals(mimeType)|| APPLICATION_TX3G.equals(mimeType)|| APPLICATION_MP4VTT.equals(mimeType)|| APPLICATION_RAWCC.equals(mimeType)|| APPLICATION_VOBSUB.equals(mimeType)|| APPLICATION_PGS.equals(mimeType)
/**   * Call WebModuleUtil.startModule on each started module  * @param servletContext  * @throws ModuleMustStartException if the context cannot restart due to a{@link MandatoryModuleException} or {@link OpenmrsCoreModuleException}  */ public static void performWebStartOfModules(ServletContext servletContext) throws ModuleMustStartException, Exception {   Log log=LogFactory.getLog(Listener.class);   List<Module> startedModules=new ArrayList<Module>();   startedModules.addAll(ModuleFactory.getStartedModules());   boolean someModuleNeedsARefresh=false;   for (  Module mod : startedModules) {     try {       boolean thisModuleCausesRefresh=WebModuleUtil.startModule(mod,servletContext,true);       someModuleNeedsARefresh=someModuleNeedsARefresh || thisModuleCausesRefresh;     }  catch (    Exception e) {       mod.setStartupErrorMessage("Unable to start module",e);     }   }   if (someModuleNeedsARefresh) {     try {       WebModuleUtil.refreshWAC(servletContext,true,null);     }  catch (    ModuleMustStartException ex) {       throw ex;     } catch (    Exception e) {       Throwable rootCause=getActualRootCause(e,true);       if (rootCause != null) {         log.fatal("Unable to refresh the spring application context.  Root Cause was:",rootCause);       }  else {         log.fatal("Unable to refresh the spring application context. Unloading all modules,  Error was:",e);       }       try {         WebModuleUtil.shutdownModules(servletContext);         for (        Module mod : ModuleFactory.getLoadedModules()) {           if (!mod.isCoreModule() && !mod.isMandatory()) {             try {               ModuleFactory.stopModule(mod,true,true);             }  catch (            Throwable t3) {               log.trace("Unable to shutdown module:" + mod,t3);             }           }         }         WebModuleUtil.refreshWAC(servletContext,true,null);       }  catch (      MandatoryModuleException ex) {         throw new MandatoryModuleException(ex.getModuleId(),"Got an error while starting a mandatory module: " + e.getMessage() + ". Check the server logs for more information");       } catch (      Throwable t2) {         log.warn("caught another error: ",t2);         throw t2;       }     }   }   for (  Module mod : ModuleFactory.getStartedModules()) {     WebModuleUtil.loadServlets(mod,servletContext);     WebModuleUtil.loadFilters(mod,servletContext);   } } 
/**   * The root package controller.   */ private ImportControl root; 
DEBUG=false
tnext.getValue()
langModuleLanguageProperties.containsKey(languageKey)
dlFileEntryFinder.filterCountByG_U_F_M(groupId,0,folderIds,mimeTypes,new QueryDefinition(WorkflowConstants.STATUS_ANY))
response.getContentAsByteArray()
XmppStringUtils.parseBareJid(userJID)
List<IdFetcher>
Subqueries.lt(0L,subquery)
LOG.warn("Skipping incompatibly changed class: " + className)
chargeUAh > 0 && level > 0
result.length() < 2
mService.mLockTaskController.checkLockedTask(tr)
channel != null
verify(instrumentation,times(2)).isRedefineClassesSupported()
logger.trace(evt.getReason())
mWindowManager.removeViewImmediate(mPopupView)
initialCapacity > 1 << 30
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
Optional<S>
_log.warn(ioe,ioe)
setEnabledFunctions(mDefaultFunctions,true)
new PyClassType(project,typeName,false)
o instanceof ArticleTravelCard
!isFullyCollapsed() && !mTracking && !mClosing
Integer.parseInt(sid[0],16)
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
new LFWLoader(imgDim,imageTransform,normalizeValue,useSubset).getRecordReader(batchSize,numExamples,imgDim,numLabels,labelGenerator,train,splitTrainTest,rng)
/**   * {@inheritDoc}   */ @Override public void start() throws IgniteException {   if (dataSrc == null)   throw new IgniteCheckedException("Failed to initialize cache store (data source is not provided).");   if (dialect == null)   dialect=resolveDialect(); } 
Localization.menuTitle("BibTeX")
StringUtils.isBlank(cert)
doc != NO_MORE_DOCS
messenger.signUpObsolete(name,null,false)
WindowedValue.valueInGlobalWindow(2,PaneInfo.ON_TIME_AND_ONLY_FIRING)
input.readFully(b)
optionsOverride.getLambdaRole()
Mono<Void>
{0,0}
selenium.click("//li[4]/span/a/span")
Log.d(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
mHwSession.isConfigFlagSet(flag,(int result,boolean value) -> {   halResult.value=result;   flagState.value=value; } )
verify(client).atomicIncrement((AtomicIncrementRequest)any())
task.getInputs().file(futureValue)
publishWorkspaceStatusEvent(workspaceId,STOPPED,status,"Error occurs on workspace runtime stop. Error: " + event.getError())
update.metadata().name
Objects.hashCode(mLocationPolicy,mReadType,mCacheIncompleteBlock)
incomingMessage.getMessagePayloadByte(1)
latch.await(5000,TimeUnit.MILLISECONDS)
counter + 1
apnContext.getWaitingApns()
mTextColorLink.getColorForState(ds.drawableState,0)
"Error resetting interface " + mTetherInterfaceName + ", :"+ e
HashCode.fromLong(hashCode())
registryCache.put(channel.getName(),registry)
Optional.ofNullable(realmName)
replaces="directCall"
Preconditions.checkNotNull(content)
!(orderParams instanceof CancelOrderByIdParams) || !(orderParams instanceof CancelOrderByCurrencyPair)
EntityCacheUtil.putResult(AssetModelImpl.ENTITY_CACHE_ENABLED,AssetImpl.class,asset.getPrimaryKey(),asset)
actor.addCaptureListener(listener)
from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(500)
new LightweightThread(null,null,new MergeTest())
prefsWriter.apply()
@Override public Response example(String type,Object example){   if (examples == null) {     examples=new HashMap<String,Object>();   }   examples.put(type,example);   return this; } 
!conf.contains("spark.submit.deployMode") || !conf.get("spark.submit.deployMode").equals("cluster")
from > to
logger.debug("NODE {}: BATTERY LOW!",this.getNode().getNodeId())
DEBUG=false
LOG.debug("Creating short circuit input stream for block {} @ {}",blockId,address)
mHomeStack == null && mDisplayId == Display.DEFAULT_DISPLAY
conversation.getContactJid().split("/",2)
client.disconnect()
new ApiEventBuilder().setSubscriptionId(subscription.getId()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setEffectiveDate(effectiveDate).setRequestedDate(requestedDate)
new JBList(new SearchListModel()){   int lastKnownHeight=JBUI.scale(30);   @Override public Dimension getPreferredSize(){     final Dimension size=super.getPreferredSize();     if (size.height == -1) {       size.height=lastKnownHeight;     }  else {       lastKnownHeight=size.height;     }     return new Dimension(Math.max(myBalloon.getSize().width,Math.min(size.width - 2,POPUP_MAX_WIDTH)),myList.isEmpty() ? JBUI.scale(30) : size.height);   }   @Override public void clearSelection(){   }   @Override public Object getSelectedValue(){     try {       return super.getSelectedValue();     }  catch (    Exception e) {       return null;     }   } } 
q.setTimeout(timeoutParam.intValue())
Boolean.parseBoolean(attrValue)
LocalDateTimeUtils.getLocalDateTimeClass()
counter < max
!isExcludedClass(theClass)
LOG.fine(() -> String.format("Discovering tests during launcher %s phase in engine '%s'.",phase,testEngine.getId()))
getExecutionContext()
-1829091458
!ON_TOP
this.mappingDestFile
mValues[8]
LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layoutUuid,groupId,true)
(encoded >> 32) & 0xFFFF_FFFFL
expect(cluster.getClusterName()).andReturn("cluster").times(1)
onFocusChange(mHostUrlInput,false)
new IllegalStateException(String.format("File \"%1$s\" has incorrect indentation in comment." + "Line %2$d: comment:%3$d, actual:%4$d.",aFileName,lineNumber,indentInComment,actualIndent))
settings.readLPw(null,0,false)
dynamicType.getLoaded().getDeclaredConstructor()
poolProperties.getRemoveAbandonedTimeout() * 1000L
ActivityManagerNative.getDefault().updatePersistentConfiguration(config)
imageHolder.getStyleClass().add("page")
PipelineLabel.create(labelTemplate)
DataType.set(datatype)
BackupManagerServiceInterface svc=mService; 
new JComboBox(accounts)
private File modSource; 
super.notifyListenersAboutRemovedElement(element)
listener.iterationDone(mln,iterationCount,epochCount)
setColors(color)
thrown.expect(UserCodeException.class)
wasLoaded && !myStreamProvider.isVersioningRequired() && !(myStreamProvider instanceof OldStreamProviderAdapter || myStreamProvider instanceof CurrentUserHolder)
!mResources.getConfiguration().isScreenRound() || mAttachInfo == null
ic.readFloat("zFarOverride",0)
convert31YToMeters(xB,xA)
SSLParametersImpl.getDefaultX509TrustManager()
viewCache.getObject(monitor,this,name,DB2View.class)
context.world().setBlock(x2,y,z2,block,meta + 8,3)
mVibratorService.vibratePattern(null,new long[]{0},0,new Binder())
new StreamException(sm.getString("streamStateMachine.invalidFrame",stream.getConnectionId(),stream.getIdentifier(),state,frameType),state.errorCodeForInvalidFrame,stream.getIdentifier().intValue())
mConnectionById.containsKey(callId)
List<Fragment>
firstPos > mTargetPos
TimeValue.timeValueNanos(delay)
Log.w(mTag,"Adjusting remote volume without a controller!")
allGpxAdapter.getGroupCount() > 0 && allGpxAdapter.isShowingSelection()
PULL_DECAY_TIME=1000
@Nullable
new Paint(Paint.ANTI_ALIAS_FLAG)
origin > other
!mScreenOnEarly
new ChannelInboundHandlerAdapter(){   @Override public void channelWritabilityChanged(  ChannelHandlerContext ctx) throws Exception {     buf.append(ctx.channel().isWritable());     buf.append(' ');   } } 
!isPartialUpdate || id.views == null
selenium.isElementPresent("link=Control Panel")
Validate.notEmpty(name,"Cookie name must not be empty")
Throwable t
queryNotifyLatch.await(1000,TimeUnit.MILLISECONDS)
mAdapter == null || mAdapter.getCount() == 0
ap.getSsidStr()
selenium.isElementPresent("link=Control Panel")
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
6 * (float)Math.cbrt(radius)
request.getPathInfo()
selenium.isElementPresent("link=Control Panel")
xCapClient.disconnect()
CACHE_MANAGER.addCacheIfAbsent(storageCache)
!hasOnClickListeners()
matcher.find()
mPanelClosedOnDown && !mHeadsUpManager.hasPinnedHeadsUp() && !mTracking&& !mStatusBar.isBouncerShowing()&& !mStatusBar.isKeyguardFadingAway()
selenium.isElementPresent("link=Control Panel")
logger.warn("Couldn't calculate the target package! Using default: " + DEFAULT_PACKAGE)
Integer.parseInt(val)
ctor.getDeclaringClass().isEnum() || !KotlinDetector.isKotlinType(ctor.getDeclaringClass())
isReturnGeneratedKeys() || isReturnGeneratedKeys() && generatedKey.isPresent()
mUiHandler.postDelayed(pae,timeout)
r != null
/**   * Gets the value of the miterlimit property.  * @return possible object is {@link BigDecimal }  */ public String getMiterlimit(){   return miterlimit; } 
defaultMappingsDir.exists()
ApplicationManager.getApplication().invokeLater(() -> {   project.getMessageBus().connect().subscribe(ToolWindowManagerListener.TOPIC,myPostponedEventsListener);   installContentListener(); } ,project.getDisposed())
ev.mTimeSamples.length >= NT
mClocks.uptimeMillis()
methodFlatteningResolver.resolve(methodDescription)
encoded != Integer.MAX_VALUE
input.setSourceFileFieldName(wSourceFileNameField.getText())
response.setStatus(statusCode)
DebuggerUtilsEx.collectLambdas(original,true)
ultimateRecyclerView.enableDefaultSwipeRefresh(true)
new PseudoDescription().loadSilent()
new StatsLogEventWrapper(tagId,10)
return false; 
new JBHiDPIScaledImage(myScale,newUserWidth,newUserHeight,getType(),RoundingMode.ROUND)
_constructor.newInstance(0,fileEntry.getFileEntryId(),fileEntry.getFileEntryId(),_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK)
" firstActiveTime=" + firstActiveTime
new BottomEntity()
Throwable e
lock.isHeldByCurrentThread()
ConfigPropertyVetoException exception=null; 
new FreeMarkerTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,context,_configuration,_templateContextHelper,false)
logger.debug("Line-in of {} is not connected",remoteHandler.getUDN())
downstreamNodes.containsAll(executionPhase.nodeIds())
List.class
ufsPath.toString()
@Priority(5)
PatchedRouteInfo r; 
c.getRemovedMessageStatement()
selenium.isElementPresent("link=Control Panel")
revisionVersion=1
loaded.getLoaded().getDeclaredConstructor()
ret.setComplete(e,response)
myClassScopeTypeNames != null
promise.trySuccess()
null != rootCause && rootCause.getCause() != null
new SAXException(e.getMessage(),e)
instructions == null
assertEquals(2,this.context.getBean(FilterChainProxy.class).getFilterChains().size())
32 << 10
context.getOpPackageName()
validateFriendlyURL(group.getCompanyId(),group.getGroupId(),group.getClassNameId(),group.getClassPK(),friendlyURL)
this.controller.saveService(data)
startTemplate(editor,null,template,listener,null,true)
variable.getModifiers()
obj != null
hidePrivateMembers=false
">>> Started two caches bound to '" + POLICY_40MB_EVICTION + "' memory region."
GenericStructContainer parent
number.longValue()
setupStrokePaint(paint,opacity)
element == null && editor != null
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).onErrorResume(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
element.isRoot()
loaded.getLoaded().getDeclaredConstructor()
/**   * @see Submit  */ public class SubmitTag extends AbstractClosingTag {   private static final long serialVersionUID=2179281109958301343L;   protected String action;   protected String method;   protected String align;   protected String type;   protected String src;   public Component getBean(  ValueStack stack,  HttpServletRequest req,  HttpServletResponse res){     return new Submit(stack,req,res);   }   protected void populateParams(){     super.populateParams();     Submit submit=((Submit)component);     submit.setAction(action);     submit.setMethod(method);     submit.setAlign(align);     submit.setType(type);     submit.setSrc(src);   }   public void setAction(  String action){     this.action=action;   }   public void setMethod(  String method){     this.method=method;   }   public void setAlign(  String align){     this.align=align;   }   public String getType(){     return type;   }   public void setType(  String type){     this.type=type;   }   public void setSrc(  String src){     this.src=src;   } } 
DirectoryReader.openIfChanged(oldReader)
updateChildren()
Thread.sleep(1000)
selenium.isElementPresent("link=Control Panel")
readWifiSleepPolicy()
serialVersionUID=1725335927
IOException e
new IllegalStateException("Unable to close transaction",Iterables.getOnlyElement(txCloseExceptions.values()))
PyDebugRunner.createCommandLinePatchers(myFixture.getProject(),pyState,profile,serverLocalPort)
ImplementationMethodDescriptor methodDescriptor
ConfigUtils.absoluteStormLocalDir(stormConf)
LOG.error(result.getDescription(),e)
LOGGER.debug("Resolved service [{}] from the authentication request",selectedService)
Arrays.asList("spring-boot-starter-jetty-","jetty-continuation","jetty-util-","javax.servlet-","jetty-io-","jetty-http-","jetty-server-","jetty-security-","jetty-servlet-","jetty-servlets","jetty-webapp-","websocket-api","javax.annotation-api","jetty-plus","javax-websocket-server-impl-","asm-","javax.websocket-api-","asm-tree-","asm-commons-","websocket-common-","jetty-annotations-","javax-websocket-client-impl-","websocket-client-","websocket-server-","jetty-xml-","websocket-servlet-")
w.applyTo(myNode)
gasPrice != null && gasPrice.length > HASH_LENGTH
!target.toFile().exists() || target.toFile().isDirectory()
_fileEntryDisplayContextHelper.isCheckedOutByOther()
new ParameterSpec("executedValue",types.toArray(new TypeMirror[types.size()]),false,Cardinality.ONE)
checkCall(receiver)
repo.setRecoveryInterval(1000,TimeUnit.MILLISECONDS)
new StatsLogEventWrapper(SystemClock.elapsedRealtimeNanos(),tagId,10)
new IndexWriter(directory,autoCommit,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
input.readFully(b)
latch.await(10000,TimeUnit.MILLISECONDS)
pluginClasspathUrl.toString()
checkCall(receiver)
new ActFmServiceException(object.getString("message"),object)
_ddmStructure.getDefinition()
t.getCause()
next != 1 && next < getLineCount()
r.getUri().getPath()
getSQL()
new LineNumberRange(0,0,move)
msgss == null && !ctx.localizations.isEmpty()
animator.setMinFrame(-9000)
url.toServiceStringWithoutResolving()
greaterThanOrEqualTo(3)
!Const.isEmpty(stepTablename)
null == result || XmlSuite.DEFAULT_JUNIT.equals(result)
checkArgument(fnSpec.getSpec().getUrn().equals(CUSTOM_JAVA_DO_FN_URN),"Expected %s to be %s with URN %s, but URN was %s",DoFn.class.getSimpleName(),FunctionSpec.class.getSimpleName(),CUSTOM_JAVA_DO_FN_URN,fnSpec.getSpec().getUrn())
new Message("XML_STREAM_EXC",LOG,e.getMessage())
Blocks.dirt.getUnlocalizedName()
logger.info("No file to compact for user defined compaction")
group != null && this == group.mInternalConnection
loadWallpaper(forDraw,false)
m.size()
contentType.equals(ContentTypes.PRESENTATIONML_MAIN) || contentType.equals(ContentTypes.PRESENTATIONML_TEMPLATE)
SCAN_STATUS_COMPLETE=2
xml.optAttribute("name",name)
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,1,UserHandle.USER_CURRENT)
Long.parseLong(val)
myTabs.isEditorTabs() && UISettings.getShadowInstance().getShowCloseButton() && hasIcons()
size.longValueSafe()
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.4")
LAST_VERSION=170
getProperties().requestCacheEnabled()
new RuntimeException(e)
!_calledSetTotal
group.isLayout() || group.isLayoutSetPrototype() || group.isSite()|| group.isUser()
mListener.setConnectionId(1)
logger.fine("Computing Control Flow Graph")
isOffhook || AudioSystem.isStreamActive(AudioSystem.STREAM_VOICE_CALL)
DataStreamSink<OUT>
root.isDownloads()
!GrantCredentialsPermissionActivity.class.getName().equals(targetActivityInfo.getClass().getName()) && !CantAddAccountActivity.class.equals(targetActivityInfo.getClass().getName()) && PackageManager.SIGNATURE_MATCH != pm.checkSignatures(authUid,targetUid)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
new WorldPoint(1303,3762,0)
/**   * Helper method, has same effect as <pre>return enhance(cls, interfaces, ih, null, null);</pre>  * @see #enhance(Class,Class[],MethodInterceptor,ClassLoader,Method,MethodFilter)  */ public static Factory enhance(Class cls,Class interfaces[],Callback callback){   return enhanceHelper(cls,interfaces,callback,null,null); } 
!hasNextChunk()
runAllTasks()
CalendarBookingServiceUtil.addCalendarBooking(calendarId,CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,titleMap,descriptionMap,location,startDateJCalendar.getTime(),endDateJCalendar.getTime(),allDay,recurrence,0,0,serviceContext)
onDetachedFromWindow()
assertEquals(5,tool.getAllRules().size())
mPowerManager.isInteractive()
factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
(Long)criteria.uniqueResult()
mRouter.selectRouteInt(mRouteTypes,route)
getServiceGuarded().importMultimediaMessage(callingPkg,contentUri,messageId,timestampSecs,seen,read)
discardChannel.receive(1000)
animation.setDuration(300L)
task == null || !task.isCompleted()
result.signum() < 0
log.warn(exception.getMessage())
centerButton(mButtonNegative)
row - 0.5f
mChildrenExpanded ? mDividerHeight : mChildPadding
FridgeChannelSelector selector=(FridgeChannelSelector)getValueSelectorFromChannelID(channelID); 
c.close()
new GridConcurrentHashSet<>(entries.size())
mouseEvent.getModifiersEx()
offset * 6
config.getClientNumThreads()
mService.mDisplayContents.valueAt(displayNdx)
BooleanUtils.isNotTrue(p.getMetadata().getExcluded())
capContacts.contains(protoContact)
checkCall(receiver)
-1
clearFromMember.join()
for (AnnotationInstance annotation : excludeClassAnnotations) {   final AnnotationTarget target=annotation.target();   if (target instanceof MethodInfo) {     final MethodInfo methodInfo=MethodInfo.class.cast(target);     final MethodIdentifier methodIdentifier=methodIdentifierFromMethodInfo(methodInfo);     componentConfiguration.excludeClassInterceptors(methodIdentifier);   }  else {     throw new DeploymentUnitProcessingException("ExcludeClassInterceptors not applied to method: " + target);   } } 
LOG.error("Operation completely failed, aborting request id: {}",stage.getRequestId())
war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
value == null || value.equals("")
UPDATES_BEFORE_CHECK_LOCATION=40
FileUtil.shortenFileName(foundFile,directories)
drawable != mBackgroundDrawable || mBackgroundResource != 0
!this.mrwork.getHadoopSupportsSplittable()
Throwable e
checkAndDisplayMatrix()
d.handledType()
((VarcharType)type).getLengthSafe()
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,true)
mService.enableNetwork(netId,attemptConnect)
selenium.isElementPresent("link=Control Panel")
new StatsLogEventWrapper(SystemClock.elapsedRealtimeNanos(),tagId,10)
getPackageManager().addPreferredActivity(filter,bestMatch,set,intent.getComponent())
FunctionTypesKt.isFunctionType(((ClassDescriptor)containingDeclaration).getDefaultType())
getApplicationInfo().targetSdkVersion > O
generateFluentSetters()
sharedLibrary != null
searcher.get().getRawReader()
IntrospectionSupport.getProperties(configuration,params,null,false)
S.toString(GridTcpDiscoveryNode.class,this)
Trans != NO_TRANSPOSE
myCache1.get("myKey1").getObjectValue()
/**   * Takes the blob of Kubernetes JSON (pod, replication controller, service, config, template etc) and applies it to the runtime environment so that any changes or new items take effect  */ String apply(String json) throws Exception ; 
anchorView.getApplicationWindowToken()
selenium.isElementPresent("link=Control Panel")
JavaSourceTckSuite.suite()
scheduler.scheduleRecurring(indexPopulation,countInvocationsJob,2,MILLISECONDS)
Math.min(MAX_ALPHA,mGlowAlpha + (Math.abs(deltaDistance) * PULL_DISTANCE_ALPHA_GLOW_FACTOR),MAX_ALPHA)
manualClock.addTimeMs(1001)
JoglNewtDisplay.class
authHeaders == null || authHeaders.size() != 1
return GCM; 
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(refElement).descriptionAndTooltip(message)
TeraGen.class
prefix == null
loaded.getLoaded().getDeclaredConstructor()
(status & 0x80000000) != 0
TABLE_SYSTEM.equals(this.table) || TABLE_SECURE.equals(this.table) || TABLE_GLOBAL.equals(this.table)
configElements[0]
selenium.isElementPresent("link=Control Panel")
getTestName(true)
relationshipCursor.type()
Log.w(TAG,e.getMessage(),e)
node.getLifecycleService().shutdown()
order=1
channel.sendHeaders()
cSet.getConceptSet()
mService != null
order=13
mContext.getPackageManager().getUserBadgedIcon(icon,new UserHandle(td.userId))
getChildFragmentManager().beginTransaction().replace(R.id.stats_pager_container,fragment)
new Paint(Paint.ANTI_ALIAS_FLAG)
MINOR_ALPHA=.42f
Boolean.valueOf((String)disableMultipart)
new PagesListAddPageRecord(cacheId,prevId,nextId)
selenium.isElementPresent("link=Control Panel")
mUserPaddingStart > 0
assertEquals(flowerVocab.getIndex(),2)
logger.debug("cs-change-async-action-callback. current-step:" + currentStep.getKey())
doNotUseAnimations ? 1 : ZOOM_MOVE_ANIMATION_TIME
viewRootImpl.getAccessibilityInteractionController().findAccessibilityNodeInfosByTextClientThread(text,accessibilityNodeId,interactionId,callback,interrogatingPid,interrogatingTid)
h >>> 63
new IgfsListingEntry(oldInfo)
Flux.fromIterable(this.handlerMappings).concatMap(mapping -> mapping.getHandler(exchange)).next().switchIfEmpty(Mono.error(HANDLER_NOT_FOUND_EXCEPTION))
getConnectTimeout()
ap.getSsidStr()
workerCount--
selenium.isElementPresent("link=Control Panel")
DeprecationLogger.nagUserWith("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
new WorldPoint(2566,3461,0)
wrapper != null && myFocusTrackback != null
ProductOptionValueTranslationImpl.class
fieldDescriptor.calcValueName()
mSharedElements.size()
Settings.Secure.getIntForUser(mContext.getContentResolver(),DOZE_SENSORS_WAKE_UP_FULLY,0,UserHandle.USER_CURRENT)
Math.min(titleRight,subtitleRight)
MLPMnistTwoLayerExample.class
jp.getLongValue()
isTextEditable() && isSuggestionsEnabled() && !(this instanceof ExtractEditText)
e.getMessage()
@Override public T dependsOnModules(String... dependencyArtifactIds){   backingModule.dependsOnModules(dependencyArtifactIds);   return t(); } 
consoles.waitJDTLSStartedMessage()
endLogicalColumn <= marginColumns
UIPasteboard.getGeneralPasteboard()
uri.getAssetName().toLowerCase()
new IOException(sm.getString("frame.readFailed",Integer.valueOf(read)))
new InetSocketAddress("localhost",6333)
ImmutableList.copyOf(interceptors)
mQueryTextView.length()
mConfiguration.keyboard != Configuration.KEYBOARD_UNDEFINED && mConfiguration.keyboard != Configuration.KEYBOARD_NOKEYS
Messages.MESSAGES.pathParameterNotProvided(param)
readBytes > 0
getItemsFromModel(modelName)
generator.emitMove(register.asValue(val.getKind()),val)
public PhoneticFilter create(TokenStream input){   return new PhoneticFilter(input,encoder,name,inject); } 
assertCompletionVariants(myProjectPom,"3.8.1","3.8.2","4.0","RELEASE","LATEST")
random().nextInt(9) + 2
new PackagesNotificationPanel()
getResource(exchange).switchIfEmpty(Mono.defer(() -> {   logger.trace("No matching resource found - returning 404");   exchange.getResponse().setStatusCode(HttpStatus.NOT_FOUND);   return Mono.empty(); } ))
new PlaybackServiceStarter(context,media).startWhenPrepared(true)
myPluginDescriptor != null && myPluginDescriptor.getPluginClassLoader() != null
Convolution.im2col(input,kH,kW,sY,sX,pY,pX,dh,dw,false,out3p)
Trans != NO_TRANSPOSE
verifyAttributes(decoder,binary("0011000315A07F440B1D07534554494f20636f6e66696775726174696f6e2064617461206f6b341C"))
AssetTagFinderUtil.countByG_C_N(_scopeGroup.getGroupId(),classNameId,assetTagName)
command.getDeviceId()
mSearchInput.setFocusableInTouchMode(focusable)
/**   * Support the range subscript operator for String  */ public static CharSequence get(CharSequence text,Range range){   int from=normaliseIndex(InvokerHelper.asInt(range.getFrom()),text.length());   int to=normaliseIndex(InvokerHelper.asInt(range.getTo()),text.length());   int length=text.length();   if (from > to) {     int tmp=from;     from=to;     to=tmp;   }   return text.subSequence(from,to + 1); } 
progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress && !myResultsPreviewSearchProgress.isCanceled()
Boolean.parseBoolean(attrValue)
return false; 
Iterables.filter(getPlayers(),new Predicate<ProxiedPlayer>(){   @Override public boolean apply(  ProxiedPlayer input){     return (input == null) ? false : input.getName().toLowerCase().contains(partialName.toLowerCase());   } } )
InsertReturningStep<R>
LOG.info("Found spell checking wrapper is not local " + spellCheckingWrapper)
new LayerView(this,0x0f00ff00)
/**   * Add a  {@link Publication} for publishing messages to subscribers.  * @param channel  for receiving the messages known to the media layer.  * @param streamId within the channel scope.  * @return the new Publication.  */ public ConcurrentPublication addPublication(final String channel,final int streamId){   clientLock.lock();   try {     return conductor.addPublication(channel,streamId);   }   finally {     clientLock.unlock();   } } 
@Deprecated
LOGGER.warn("Could not execute unmarkEntries",ex)
measureRun(0,0,offset,mLen,true,fmi)
JSRefactoringUtil.createTypeElement(myTargetClass.getProject(),type,JavaScriptSupportLoader.ECMA_SCRIPT_L4)
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
String.format("The variables input contains a field name '%s' that is not defined for input object type '%s' ",fieldName,GraphQLTypeUtil.getUnwrappedTypeName(graphQLType))
Validator.isNull(type) || !PortalUtil.isLayoutFirstPageable(type)
new LightweightThread(null,null,this)
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
mCard.getVisibility() != View.VISIBLE || (mSimpleCard != null && mSimpleCard.getVisibility() == View.VISIBLE)
bound.equals(type2)
public FileFilter getFileFilterFromFileTypes(String fileTypes){   String glob;   if (fileTypes.equals("*"))   glob=".*";  else   glob="^.*\\.(" + fileTypes.replace(",","|") + ")$";   return new GlobFileFilter(glob,true); } 
DarkIconDispatcher.getTint(tintArea,mMobileActivity,tint)
Throwable e
selenium.isElementPresent("link=Control Panel")
RepositoryDirectoryUI.getTreeWithNames(newJob,rep,dircolor,sortColumn,includeDeleted,ascending,false,true,directoryTree,null,null)
(mOomMinFreeHigh[5] * 7) / 4
TimeUnit.SECONDS.toMillis(5)
boolean store() default false; 
MAX_PARAGRAPH_TIMEOUT_SEC=120
type.getDeclaredConstructor()
/**   * Something that can be called, passed parameters to, and return something back.  * @author dcheryasov  */ public interface Callable extends PyTypedElement {   /**   * @return a list of parameters passed to this callable, possibly empty.  */   @NotNull PyParameterList getParameterList();   /**   * @return the type of returned value.  */   @Nullable PyType getReturnType(  @NotNull TypeEvalContext context,  @Nullable PyQualifiedExpression callSite);   /**   * @return a methods returns itself, non-method callables return null.  */   @Nullable PyFunction asMethod();   /**   * Returns the qualified name of the function.  * @return the qualified name of the function, or null for a lambda expression.  */   @Nullable String getQualifiedName(); } 
p3.isTerminated() == false || p3.getResult() == null
bicyclePriorityValues.put("steps",0.6d)
from >= to
Status.createStatuseList(get(getApiBaseURL() + V1 + user+ "/lists/"+ id+ "/statuses.json",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))
stream.rstStream()
mListView.getListChildAt(index)
widthRatio > 0
new WriteResult(translateCommandResult(new RemoveOperation(getNamespace(),remove,getDocumentCodec(),getBufferPool(),getSession(),false).execute()),aWriteConcern)
typeDefinition.getMethods()
ignoreUnknown=true
options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)
FastMath.min(origin,num.floatValue())
logger.trace("{} unsupported item type {} for item {}",LoggerConstants.TFMODELUPDATE,provider.getItem(itemName),itemName)
return maxPagePartitioningBufferSize; 
@Override public File getSource(){   return modSource; } 
Status.createStatuseList(get(getBaseURL() + "statuses/retweets/" + statusId+ ".json",true))
mPm.getPackageUidAsUser(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
root.isDownloads()
a.getBoolean(R.styleable.View_fadeScrollbars,true)
myDefinition != null && definition != null && myDefinition.getNestedClassName(definition.getTypeId()) == null
!trimmedLine.equals("}) {") && trimmedLine.startsWith(StringPool.CLOSE_CURLY_BRACE) && line.endsWith(StringPool.OPEN_CURLY_BRACE)
getOptional(HTABLE_DEFAULT_COMPRESSION_CODEC,"")
this.messageService.fluxPreAuthorizeBeanFindById(2L).subscriberContext(withAdmin)
from >= to
policy_init == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS
((JavaLibrary)exported).getImmediateClasspaths()
-73.99408
session.executeAsynchronousPost(syncAccount.getUrl() + "/api/jsonws" + urlPath,parameters,_handler)
SamplingProfiler.newThreadGroupThreadSet(group)
new WorldPoint(1500,3703,0)
defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
lock.isHeldByCurrentThread()
logger.warn("license [{}] - grace",license.uid())
getDirectory(createTempDir())
(startTime + 500) / 500
ruleContext.throwWithRuleError("Xcode version must be specified to use an Apple CROSSTOOL")
sourceNodeTextData != null
mApplicationObject == null && (Process.SYSTEM_UID == Process.myUid())
NotifyUtil.show("Warning",formatter.formatMessage(record),MessageType.WARNING,listener,10000)
glyph.setSize(sizeSlider.getValue())
dataBuffer.flip()
new LLVMInsertDoubleValueNode(sourceAggregate,resultAggregate,size,offset,(LLVMDoubleNode)valueToInsert)
cause.getCause()
h.addParameters("--merge")
Boolean.parseBoolean(attrValue)
StringUtils.trimToEmpty(comparisonObjectSchema.getName())
initialCapacity > 1 << 30
childLeftTuple.reAddLeft()
log.debug("Error loading known hosts",e)
transformations.isEmpty()
MacMessages.showYesNoDialog(title,message,YES_BUTTON,NO_BUTTON,WindowManager.getInstance().suggestParentWindow(project))
params.getSimulatedPlatformVersion()
sqlRouteResult.getSqlParsedResult().getType()
log.info("Not found",e)
new ActionModeImpl(mContextView.getContext(),callback)
@SystemApi
selenium.isElementPresent("link=Control Panel")
conn.getResponseCode() != HttpURLConnection.HTTP_PARTIAL && conn.getResponseCode() != HttpURLConnection.HTTP_OK
logger.warn("Could not locate PropertySource: " + (errorBody == null ? error == null ? "label not found" : error.getMessage() : errorBody))
SimpleAttributeDefinitionBuilder.create("max-inclusive",ModelType.BOOLEAN,true)
StartupManager.getInstance(module.getProject()).runWhenProjectIsInitialized(new DumbAwareRunnable(){   public void run(){     ApplicationManager.getApplication().runWriteAction(new Runnable(){       public void run(){         onModuleInitialized(module);       }     } );   } } )
LanguageUtil.get(resourceBundle,getKey())
mSyncStatus.valueAt(i)
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
tfs.ls(Constants.PATH_SEPARATOR,true)
GL11.glTexParameterfv(target,pname,params)
assertEquals(arr2,view.getBinaryByteArray(0,0))
new UnsupportedOperationException(String.format("Cannot apply plugin with id '%s' to '%s' (class: %s) as it is not a Project",pluginId,target.toString(),target.getClass().getName()))
privateJDBCClassDetermine jdbcClassDetermine=new JDBCClassDetermine(); 
new TypeResolver(hasRelatedOfString)
assertThat(targetConnectionCount).isLessThanOrEqualTo(goodServerStats.getTotalRequestsCount())
LOGGER.info("Attaching API Key: " + apiKey)
layer.setLayerPaint(mLayerPaint)
myLookup.getTopLevelEditor().getInlayModel().addInlineElement(caretOffset,true,createGrayRenderer(suffix))
WordPress.getCurrentBlog().getLocalTableBlogId()
Character.isLetterOrDigit(ch)
ReportCompilerRequestMessageListener.class
ByteArray.fromString(assetId)
targetInfo != null && targetInfo.metaData != null
new IllegalStateException("Legacy advertisement can't be connectable and non-scannable")
XmppStringUtils.parseBareJid(user)
extractTimeValue(settings)
inOrder.verify(mockAwareService).publish(any(),eq(clientId),eq(publishConfig),sessionProxyCallback.capture())
@NotNull Document documentRange
Integer.parseInt(value)
new NullPointerException("Emitter got a null throwable. Null values are generally not allowed in 2.x operators and sources.")
new CacheConfiguration(CACHE2_NAME)
deltaY <= 0
isAllowed()
subscriptionSender.setContextAttribute("[$CONTENT_URL$]",contentURL,false)
websocketComponent.setMaxThreads(20)
LinkedHashMap<String,ASTNode>
result.signum() < 0
mService.setWifiApConfiguration(wifiConfig,mContext.getOpPackageName())
selenium.isElementPresent("link=Control Panel")
case OK: 
directories.getDirectoryForNewSSTables()
targetBoard == null || !targetBoard.getId().equals(split[2])
new TypeMismatchException("'" + toName(object.getClass()) + "."+ field.getName()+ "' can not refer to the value '"+ newValue+ "' (type "+ toName(newValue.getClass())+ "), because it is of the type "+ toName(field.getType()))
synchronized (mService) {   mService.mStackSupervisor.startActivityFromRecents(callingPid,callingUid,mTaskId,null); } 
LOG.debug("Exception occurred during processing request: {}",e.getMessage(),e)
loadAnimator(fragment,transition,false,transitionStyle)
mService.mAppOps.startOpNoThrow(mAppOp,uid,packageName,true)
mediaVideoItem.getHeight() / 2
mConnectionById.containsKey(callId)
info.getOldIndex() < 0 || !thrownTypes[info.getOldIndex()].equals(info.createType(method,method.getManager()))
mHomeStack == null && mDisplayId == Display.DEFAULT_DISPLAY
checkCall(receiver)
R resource
public Throwable getException(){   return exception; } 
public <A>SubType fullJoin(Expr<A> entity,Iterable<A> col){   query.alias(entity,col).fullJoin((Expr<?>)entity);   return self; } 
IndexReader.open(store)
Float.parseFloat(encoding.substring(equalsPos + 1))
str.startsWith(exampleName) && !str.endsWith("-sources.jar") && !str.endsWith("-tests.jar")&& !str.endsWith("-javadoc.jar")
Log.e(TAG,"Found activity " + r + " in proc activity list using "+ r.app+ " instead of expected "+ app)
log.warn(exception.getMessage())
executeRunnableDismissingKeyguard(runnable,null,false,false)
isReplicateRequest()
new Paint()
logger.warn("P2p handling failed",cause)
COMPONENTS_IN_LEVEL_1_AT_CONSTRUCTION + 22 + 47+ 1+ 56+ 1
Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
mBarChart.addTiming(section,2,serializeResult.runDuration / 1000f)
mWM.isKeyguardLocked()
LensPositionSelectors.front()
tracesDir.mkdirs()
new EditSessionBlockChangeDelegate(editSession)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
mStackScroller.getChildAtRawPosition(x,y)
SAMPLE_RATE_HZ_MAX=96000
this.policy.setMaxBinaryMessageSize(anno.maxBinaryMessageSize())
mPanProfile.isProfileReady()
_buildTemplateWithGradle("portlet-provider","provider-dependency-management","--dependency-management-enabled")
LOG.warn("Could not correlate acknowledgment with dispatched message: " + ack)
processor.open(w,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,w))
LOG.warn("Failed to write into TachyonStorage, the block " + getCurrentBlockId() + " will not be in TachyonStorage")
new LogicalRelationship(logicalModel,fromTable,toTable,fromColumn,toColumn)
public static final class TutorialSupportFragmentImpl extends TutorialSupportFragment {   private TutorialOptions mTutorialOptions;   public TutorialSupportFragmentImpl(){   }   @SuppressLint("ValidFragment") private TutorialSupportFragmentImpl(  @NonNull TutorialOptions tutorialOptions){     mTutorialOptions=tutorialOptions;   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     setRetainInstance(true);   }   @Override protected TutorialOptions provideTutorialOptions(){     return mTutorialOptions;   } } 
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class TransactionalSetBasicLocalTest extends TransactionalSetAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } 
latch.endLatch.await(800,TimeUnit.MILLISECONDS)
dateTimeFormatter.format(value)
new WebdavEntry(resp.getResponses()[0],getUri().getPath())
new PNGDecoder(pngStream)
public AuthenticationType authentication() default AuthenticationType.CONTAINER; 
PsiTreeUtil.getParentOfType(context,PsiStatement.class,false)
selenium.isElementPresent("link=Control Panel")
initiator == HttpSender.CHECK_FOR_UPDATES_INITIATOR || initiator == HttpSender.AUTHENTICATION_INITIATOR
securityMode != SecurityMode.None || !mLockPatternUtils.isLockScreenDisabled(KeyguardUpdateMonitor.getCurrentUser())
type.toLowerCase(ENGLISH)
mValues[8]
new ByteBuddy().subclass(MemoryDatabase.class).method(named("load")).intercept(MethodDelegation.to(new ForwardingLoggerInterceptor(memoryDatabase)).appendParameterBinder(Pipe.Binder.install(Forwarder.class))).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
maxAlongDimension.isVector()
Objects.toStringHelper(this).add("granularity",granularity)
numNodes=0
child.resetRtlProperties()
status().isFound()
LinkedHashMap<String,LinkedHashMap<String,ASTNode>>
sendTo("direct:foo")
assertNotNull("Should find entry",getThreadCacheEntry(LOCAL_HOST))
linesInput > meta.getRowLimit() && meta.getRowLimit() > 0
rs.isLast()
conceptAnswer.getAnswerConcept()
setDefault.isInternal()
isFormat(format,F40,F60)
isInsert
selenium.isElementPresent("link=Control Panel")
ArraySet<UidRange>
serializer.serializeInsert(metadata,entity,columns,values,subQuery)
selenium.isElementPresent("link=Control Panel")
shardSearchStats.onFailedFetchPhase(context)
targetPoint.x - shift
type.getDeclaredConstructor()
_log.warn(ioe,ioe)
className.lastIndexOf(CONTROLLER_SUFFIX)
new Rect(20,0,280,0)
query.response().getContent().toString(Charset.forName("UTF-8")).substring(0,15)
mFailedAttempts >= MAX_FAILED_ATTEMPTS
!checkSimilar(last,r)
"Interceptors contributed by endpoint: " + i3
jsonModel.insert(async)
startingWindow != null && ttoken.startingView != null
list.append(ai)
MessagingService.instance().sendRR(BatchlogManager.getBatchlogMutationFor(mutations,uuid,targetVersion).createMessage(),target,handler,false)
blog.getLocalTableBlogId()
value == Long.MAX_VALUE
assertEquals(false,StringUtils.isAlphanumeric(""))
res.startsWith("android") || res.startsWith("Vtok")
FBUtilities.getLocalAddress()
!price.getAmount().equals(BigDecimal.ZERO)
ImmutableList<String>
actor.addListener(listener)
inLatch.startLatch.await(400,TimeUnit.MILLISECONDS)
methodName.startsWith("getUseScope")
addDaysAndCheckForCompletion(6,NextEvent.PAYMENT_ERROR)
arguments.size() != 0
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
Lists.newArrayList("id","bool","BOOL","SEL","IMP","unichar","nil","Nil","YES","NO","TRUE","FALSE","auto","const","extern","inline","register","restrict","signed","goto","sizeof","struct","typedef","union","volatile","and","and_eq","asm","bitand","bitor","compl","const_cast","delete","dynamic_cast","explicit","export","friend","mutable","namespace","not","not_eq","operator","or","or_eq","reinterpret_cast","static_cast","template","typeid","typename","using","virtual","wchar_t","xor","xor_eq","self","isa","ptrdiff_t","size_t","wchar_t","wint_t","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intptr_t","uintptr_t","intmax_t","uintmax_t","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","INT8_MIN","INT16_MIN","INT32_MIN","INT64_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","UINT64_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST64_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","INT_LEAST64_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST64_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","INT_FAST64_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST64_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","INTMAX_MIN","INTMAX_MAX","UINTMAX_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIZE_MAX","WCHAR_MAX","WCHAR_MIN","WINT_MIN","WINT_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","UINT8_C","UINT16_C","UINT32_C","UINT64_C","INTMAX_C","UINTMAX_C","va_list","fpos_t","FILE","off_t","ssize_t","BUFSIZ","EOF","FOPEN_MAX","FILENAME_MAX","TMP_MAX","SEEK_SET","SEEK_CUR","SEEK_END","stdin","stdout","stderr","ct_rune_t","rune_t","div_t","ldiv_t","lldiv_t","dev_t","mode_t","NULL","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","MB_CUR_MAX","MB_CUR_MAX_L","errno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EDEADLK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EAGAIN","EWOULDBLOCK","EINPROGRESS","EALREADY","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","ENOTSUP","ENOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","ELOOP","ENAMETOOLONG","EHOSTDOWN","EHOSTUNREACH","ENOTEMPTY","EPROCLIM","EUSERS","EDQUOT","ESTALE","EREMOTE","EBADRPC","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOLCK","ENOSYS","EFTYPE","EAUTH","ENEEDAUTH","EPWROFF","EDEVERR","EOVERFLOW","EBADEXEC","EBADARCH","ESHLIBVERS","EBADMACHO","ECANCELED","EIDRM","ENOMSG","ENOATTR","EBADMSG","EMULTIHOP","ENODATA","ENOLINK","ENOSR","ENOSTR","EPROTO","ETIME","ENOPOLICY","ENOTRECOVERABLE","EOWNERDEAD","EQFULL","EILSEQ","EOPNOTSUPP","ELAST","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_GETOWN","F_SETOWN","F_GETLK","F_SETLK","F_SETLKW","FD_CLOEXEC","F_RDLCK","F_UNLCK","F_WRLCK","SEEK_SET","SEEK_CUR","SEEK_END","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","O_NONBLOCK","O_APPEND","O_SYNC","O_CREAT","O_TRUNC","O_EXCL","O_NOCTTY","O_NOFOLLOW","DOMAIN","HUGE","INFINITY","NAN","OVERFLOW","SING","UNDERFLOW","CFMSYSTEMCALLS","CGLUESUPPORTED","FUNCTION_PASCAL","FUNCTION_DECLSPEC","FUNCTION_WIN32CC","GENERATING68881","GENERATING68K","GENERATINGCFM","GENERATINGPOWERPC","OLDROUTINELOCATIONS","PRAGMA_ALIGN_SUPPORTED","PRAGMA_ENUM_PACK","PRAGMA_ENUM_ALWAYSINT","PRAGMA_ENUM_OPTIONS","PRAGMA_IMPORT","PRAGMA_IMPORT_SUPPORTED","PRAGMA_ONCE","PRAGMA_STRUCT_ALIGN","PRAGMA_STRUCT_PACK","PRAGMA_STRUCT_PACKPUSH","TARGET_API_MAC_CARBON","TARGET_API_MAC_OS8","TARGET_API_MAC_OSX","TARGET_CARBON","TYPE_BOOL","TYPE_EXTENDED","TYPE_LONGDOUBLE_IS_DOUBLE","TYPE_LONGLONG","UNIVERSAL_INTERFACES_VERSION","BIG_ENDIAN","BYTE_ORDER","LITTLE_ENDIAN","PDP_ENDIAN","DEBUG","NDEBUG","scale")
buffer.limit()
compensationRange.contains(compensation)
cursor == null || !cursor.moveToFirst()
stack.peek()
protocolProvider.getProtocolDisplayName()
range.myStartLine <= start
60 * 1000
listener != null && mHandler == null
partialUri.toLowerCase()
QuotaCache.this.tableQuotaCache.containsKey(table)
mFlexItemInEdit.setAlignSelf(AlignItems.BASELINE)
type.getDeclaredConstructor()
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_SELECT_AV_INPUT_FUNCTION,false)
appearance.getFloat(attr,0)
super.dispatchTouchEvent(cancel)
bedtime - SystemClock.uptimeMillis()
loaded.getLoaded().getDeclaredConstructor()
invoke(agentInfo,payload,DEFAULT_FUTURE_TIMEOUT)
DiagnosticType.warning("JSC_REDECLARED_VARIABLE","Redeclared variable: {0}")
DictionaryGenerator.buildDictionaryFromValueList(tblColRef.getType(),Collections2.transform(valueMap.get(tblColRef),new Function<String,byte[]>(){   @Nullable @Override public byte[] apply(  String input){     return input.getBytes();   } } ),tblColRef.getType())
resp.setHeader("Access-Control-Allow-Methods",methods)
remaining == 0
existing.getScriptParameters()
Algorithms.isEmpty(pd.getName()) && !Algorithms.isEmpty(nameStr) && !nameStr.equals(PointDescription.getAddressNotFoundStr(mapActivity))
MESSAGES.persistenceUnitNotFound(absolutePath,puName,current)
delta.assetsSeq != ASSETS_SEQ_UNDEFINED && delta.assetsSeq != assetsSeq
media != null && media.getMediaType() == MediaType.AUDIO
guiResource.getImageSlaveTree()
new Integer(getIntValue(workingMemory,object))
parent.getOuterClass()
r.destination != null && !r.destination.isEmpty()
PRAYER_ENHANCE("prayerenhance","Prayer enhance",275,ChronoUnit.SECONDS)
b.getBroadcasterConfig().applyFilters(r,t)
revWalk.close()
PsiClass superClass=((PsiAnonymousClass)typeDefinition).getBaseClassType().resolve(); 
len - 2
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED) || ctTypeStr.equals(ContentType.MULTIPART_ALTERNATIVE)
System.nanoTime()
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_UP,x,y,0)
container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
ACC_BRIDGE | ACC_SYNTHETIC | ACC_STATIC
LOG.debug("Couldn't run process with PTY",t)
Collections.addAll(result,"十二星座","成功学","不转不是中国人","经典语录")
Lists.newArrayList(PROPERTY_PROJECT_BASEDIR,CoreProperties.WORKING_DIRECTORY,PROPERTY_MODULES,CoreProperties.PROJECT_DESCRIPTION_PROPERTY)
type.getDeclaredConstructor()
assertEquals(16,services.size())
new HttpBlobStore(new URI("http://localhost:" + serverPort),30,credentials)
PART_COUNT=1000
Integer.parseInt(cmd.getOptionValue(SIZE_OPTION))
synchronized (references) {   if (transformed != null) {     if (transformed instanceof List) {       @SuppressWarnings("unchecked") List<T> casted=(List<T>)transformed;       return casted;     }  else {       throw new InitializationTypeConflictException(transformed.getClass());     }   }  else {     return data;   } } 
OrderUtils.getPriority(((DecoratingProxy)obj).getDecoratedClass())
PORT_2=8180
new IllegalStateException("No overridden descriptors found for (fake override) " + descriptor)
getConnectTimeout()
mHomeStack == null && mDisplayId == Display.DEFAULT_DISPLAY
ImmutableList<ObjectType>
subCursor.getString(COLUMN_VALUE)
Executor.class
hintInfo.hintHitProbability >= hintHitProbabilityThresholdForDeoptimizingSnippet() && hintInfo.exact == null
recordSetVersion1.getVersion()
lastPos < mTargetPos
Set<SkyKey>
mTrustListeners.remove(i)
mQueryTextView.length()
new MalformedException("Unrecognized message placeholder referenced: " + phName,node)
(getSource().y() + getTarget().y()) / 3f
registry.createDataBindingSource(mimeType,bindingTargetType,bindingSource)
CollectionUtils.newList(GrailsResourceUtils.appendPiecesForUri(SLASHED_VIEWS_DIR_PATH,uri),uri)
ConfigPropertyVetoException ex
selenium.isElementPresent("link=Control Panel")
new JGroupsFilter(bc)
UseItemCaptureMessage.newBuilder().setEncounterId(this.getEncounterId()).setSpawnPointId(this.getSpawnPointId())
biomeList[biome.biomeID].typeList.toArray(new Type[0])
Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
selenium.isElementPresent("link=Control Panel")
!UNKNOWN_PARAMETER_TYPE.equals(wrappedRHS) && !gt.isCompatibleWith(wrappedRHS) && !isNullConstant(rightExpression)
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
String.format("NODE %d: Already in or beyond node stage, ignoring. current = %s, requested = %s",this.node.getNodeId(),this.node.getNodeStage().getLabel(),targetStage.getLabel())
Thread.sleep(1000)
selenium.isElementPresent("link=Control Panel")
substitutor.substituteAndCapture(parameter.getType())
RuntimeImpl.isNewVersion()
_log.warn(ioe,ioe)
IndexSettingsModule.newIndexSettings(new Index("_index"),Settings.EMPTY)
getPredicate()::apply
clocks.uptime+=111
new Paint(Paint.ANTI_ALIAS_FLAG)
ServiceContextThreadLocal.getServiceContext()
UnsupportedTypeException.raise(ex,arguments)
Log.warn("Disable autoInstallOSGiBundles as the contexts folder '" + scandir.getAbsolutePath() + " does not exist.")
currentScreen == SCREEN_WINDOW_FULLSCREEN || currentScreen == SCREEN_WINDOW_TINY
in.readFully(message)
promise.tryFailure(cause)
stackIterator.remove()
service.getInterface()
Flyway.configure(classLoader).configuration(createFlywayConfig(envVars))
new NTCredentials(PROXY_USER,PROXY_PASS,LOCALHOST,PROXY_DOMAIN)
!ignoreInjectedPsi
MORE_DEBUG && okay && mAgent != null
value.getMajorType()
ArrayList<>
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY(),Gravity.TOP | Gravity.LEFT)
entry.getName().equals(BOOT_INF_CLASSES)
ownedEntryCount == nearCacheSize
task.abort()
stack.peek()
Math.max(1000L,connectionTimeout)
selenium.isElementPresent("link=Control Panel")
USER_OPERAND_TYPE(true,3)
s1.isStrictlyNegative()
c.getName()
group != null && this == group.mInternalConnection
query.toString(s)
"maxHeaderSize must be a positive integer: " + maxHeaderSize
query.componentRoots().toArray()
new Duration(30,SECONDS)
keyCache.get(method)
assertEquals(4,StringUtil.countMatches(drl,"import "))
StorageProxy.read(commands,select.getConsistencyLevel())
logger.fine(String.format("encoded %s as %s",obj,str))
e.toString()
id=20
LocaleUtil.getSiteDefault()
type.getDeclaredConstructor()
new String[9]
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
getServiceGuarded().importMultimediaMessage(callingPkg,contentUri,messageId,timestampSecs,seen,read)
d1.isTimeOut()
ft.replace(R.id.layout_fragment_container,commentFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commit()
totalHistogram.getValueAtPercentile(95)
new Intent(Intent.ACTION_USER_PRESENT)
new IndexWriter(dir,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED)
match.getRule().getLocQualityIssueType().toString()
columnType.equalsIgnoreCase("date") || columnType.equalsIgnoreCase("timestamp")
i < size
mDownloadXtraDataPending=false
blockUri.getIdentifier().toLowerCase()
note == null || isFinishing()
new LwjglPreferences(name,".prefs/")
isLinux(expectedSql)
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
trim.equals(inspectionToolID) || trim.equalsIgnoreCase(ALL)
new NamespaceFilter("-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN",XmlUtil.FACELETS_TAGLIB_URI,XmlUtil.FACELETS_TAGLIB_URI2)
logger.warn("couldn't execute commandLine '" + commandLine + "'",e)
myFileChooser.requestFocus()
_availCPU + amount
mAttributes.getAllFlags()
ServiceContextThreadLocal.getServiceContext()
hasProperty("key2").withValue(1234L)
source.isInteractive()
new GitException("Remote " + remoteName + " not found. ")
isInputViewShown()
new LightweightThread(null,null,new SuspendableRunnable(){   @Override public final void run() throws SuspendExecution {     SomeInterface i=new C();     System.out.println("i = " + i);     i.doStuff();   } } )
FileSwapSpaceSpi fileSwap=(FileSwapSpaceSpi)swap; 
@Test public void testResolveMultiplePaths() throws Exception {   String expected=tmpFolder.getRoot().toPath().resolve("aa").resolve("bb").resolve("cc").toString();   assertEquals(expected,IOChannelUtils.resolve(tmpFolder.getRoot().getPath(),"aa","bb","cc")); } 
out.writeInt(mProgress)
type.getDeclaredConstructor()
new ProtocolException(sm.getString("upgradeHandler.invalidPreface",connectionId))
e.toString()
mView.setVisibility(mFinalVisibility)
LOG.error("Failed to shut down ActorSystem",t)
name.equals("Devices") || name.equals("UUIDs")
writeString(writer,fieldName,String.valueOf(reader.getBoolean()))
new SolrException(500,"Schema Parsing Failed",e,false)
protocolProvider.getAccountID().getUserID()
groupIds[0]
edgeData.getAttributes() != null
Long.parseLong(param.getValue())
mStackSupervisor.mAppVisibilitiesChangedSinceLastPause || mService.mStackSupervisor.getStack(PINNED_STACK_ID) != null
1
new HandlingEvent(cargo,new Date(10L),new Date(20L),HandlingEvent.Type.RECEIVE,b5,null)
actionCache.remove(execPath)
/**   * Needed for statistics.   */ private final LongAdder8 startedJobsCnt=new LongAdder8(); 
concreteInterface.getInterfaces()
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
getParent() == null || startActionMode(callback) == null
mListener.getConnectionId() != -1 && requestHeader.mConnectionID != null
((SipStackImpl)this.stack).obtainLocalAddress(dst,dstPort,localAddress,0)
StringBuilder sb=new StringBuilder(32); 
targetApi
sampleFactory.getDeclaredConstructor()
ImmutableMap.of(BuildInfo.BUILD_TIMESTAMP,Key.of(KeyType.INTEGER,"0","0"),BuildInfo.BUILD_SCM_REVISION,Key.of(KeyType.STRING,"0","0"),BuildInfo.BUILD_SCM_STATUS,Key.of(KeyType.STRING,"","redacted"))
next != null && next.isHomeActivity()
connection.zrevrangeByLex(key,max,min)
objectManager.enqueueUnusedObject(this)
Thread.sleep(1000)
CodeStyleSettingsManager.getSettings(myProject).WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN
selenium.isElementPresent("link=Control Panel")
!record.isMms() || record.isMmsNotification() || record.isGroupAction()
propName.equals(Constants.FACTORY) || propName.equals("scope") || propName.equals("auth")|| propName.equals("singleton")
mAppToken.isVisible()
public AbstractExecHandleBuilder setIgnoreExitValue(boolean ignoreExitValue){   this.ignoreExitValue=ignoreExitValue;   return this; } 
curComp.equals(service)
intervalFraction * (nextValue - prevValue)
saveTask instanceof LongTask
interactor.startCommand(packageName,callback,mCommand,mArgs)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commitAllowingStateLoss()
GL11.glGetFloatv(pname,params)
List<TaggedWord>
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5FilenameNoRoot(weightsHdf5Filename)
assertEquals(8,fieldNames.size())
copyDocComment(sourceMethod,resultMethod)
mOneShot=false
mPowerManager.isInteractive()
value == null || value.size() == 0
myBeforeFile.getName()
UndertowLogger.CLIENT_LOGGER.jettyALPNNotFound("HTTP2")
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES,UserHandle.getUserId(getCallingUid()))
mTrustListeners.remove(i)
PortalPermissionUtil.check(getPermissionChecker(),ActionKeys.ADD_COMMUNITY)
nsDescriptor.getAttributeImpl(localName,namespace)
new Bitmap(nativeInt,null,isMutable,null,density)
privateDataManager == null
startMediaTimeState == START_NOT_SET
assertEquals(12,definitions.size())
project.members(IContainer.INCLUDE_HIDDEN)
yamlFactory.createParser(input)
viewToClick != null && viewToClick.isAttachedToWindow()
@Nullable
setIntegerPart(String.valueOf(integerPart))
currentOffset > documentText.length()
file.contains("http://") || file.contains("https://")
T[]
Exception t
camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService)
assertThat(stack.selectAllIssues()).isEmpty()
SyncAccountService.addSyncAccount(filePathName,10,"test@liferay.com","test",false,"http://localhost:8080/api/jsonws")
slaveMasters.containsKey(nodeId)
ONE_MINUTE=1800
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(1,Duration.ofMillis(100),Duration.ofMillis(2000),0.9).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1).expectErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 1/1").hasCause(exception))
gatherServerResponses(realtimeCompositeFuture,scatterGatherStats,false,realtimeTableName,processingExceptions)
geom.getMaterial().equals(mat)
mWm.freezeRotation(-1)
lp.resolveLayoutDirection(layoutDirection)
DumpUtils.checkDumpAndUsageStatsPermission(getContext(),TAG,pw)
uri.getAssetName().toLowerCase()
r != null && passThruFields != null
UPPER_BOUND_VIOLATED.on(argumentTypeReference,substitutedBound,typeArgument)
out.writeByte(CLASS_CONSTANT_VALUE_TAG)
new MapProducerCapabilities(false,false,true,true,null)
assertTrue(dr.isFailure())
logger.error("Callback onResult call produced an error",e)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
selenium.click("//li[4]/span/a/span")
targetCondn == null || (nodeCondn.size() != targetCondn.size())
ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null,null)
StepVerifier.create(source.flux().bufferWhen(open,o -> close)).then(() -> {   source.assertSubscribers();   open.assertSubscribers();   close.assertSubscribers();   open.next(1); } ).then(() -> {   open.assertSubscribers();   close.assertSubscribers();   source.complete(); } ).expectNextMatches(List::isEmpty).verifyComplete()
type == null || type == Object.class
stateChangedLatch.await(3,TimeUnit.SECONDS)
pos + toFind.length() <= limit
!getLocationEnabled()
_typeSettingsProperties.toSortedString()
ONE_MINUS_DST_ALPHA(7)
AndroidMessenger messenger
new ProgressDialog(lvApp.getContext())
new PaymentType("CUSTOMER_PAYMENT","Customer Payment",true)
WordPress.getCurrentBlog().getLocalTableBlogId()
dic.buildRouterChain()
mUiHandler.postDelayed(pae,timeout)
in.getVersion().before(Version.V_7_0_0_alpha1)
artifact.getExecPath()
appearance.getFloat(attr,0)
checkOrderItemOfferAppliedCount(order) == 2
logger.debug("Exception mapping responses to requests.",e)
(bytes[bytes.length - 1] & outputValueMask) == STATUS_SWITCHING_OFF
loaded.getLoaded().getDeclaredConstructor()
Arrays.asList("spring-boot-starter-jetty-","jetty-continuation","jetty-util-","javax.servlet-","jetty-io-","jetty-http-","jetty-server-","jetty-security-","jetty-servlet-","jetty-servlets","jetty-webapp-","websocket-api","javax.annotation-api","jetty-plus","javax-websocket-server-impl-","apache-el","asm-","javax.websocket-api-","asm-tree-","asm-commons-","websocket-common-","jetty-annotations-","javax-websocket-client-impl-","websocket-client-","websocket-server-","jetty-xml-","websocket-servlet-")
selenium.isElementPresent("link=Control Panel")
new CallbackStub(this)
win.isDrawnLw() || win.hasAppShownWindows()
getProperties().put("hibernate.connection.handling_mode","DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT")
new CartesianPolyFilterBuilder("",4,15)
generateFluentSetters()
new SSALinearScanResolveDataFlowPhase(this)
generator.generate(signedByKeyPair.getPrivate())
System.nanoTime()
selenium.isElementPresent("link=Control Panel")
StepVerifier.create(Flux.just(1).filterWhen(v -> {   throw new IllegalStateException(); } )).verifyError(IllegalStateException.class)
this.reader.comparator.compare(reader.blockIndex.blockKeys[b],0,reader.blockIndex.blockKeys[b].length,key,offset,length)
new CacheConfiguration(CACHE2_NAME)
TOWN(4000)
mCryptConnector.execute("cryptfs","createnewuserdir",userHandle,path)
assertEquals(6,scannedBeanCount)
pinScrollBy(mAutoScrollX,mAutoScrollY,true,0)
usersStats.getMin()
this.urlPathHelper.getLookupPathForRequest(request)
Status.createStatuseList(get(getBaseURL() + "favorites.json","page",String.valueOf(page),true))
dockerClient.waitContainerCmd(container.getId())
sharedPreferences.edit().remove(PREF_KEY_HIDDEN_DEFAULT_ENGINES).apply()
settings.readLPw(null,0,false)
sendCommand(CLIENT,Keyword.GETNAME.raw)
h.addParameters("-n1","--pretty=format:%H","HEAD")
appOps.checkOpNoThrow(AppOpsManager.OP_GET_USAGE_STATS,uid,pkg)
context.getRangeLocation(node,0,node.astName(),0)
Throwable e
selenium.isElementPresent("link=Control Panel")
assertEquals(8,this.context.getBean(FilterChainProxy.class).getFilterChains().size())
mSelecting=true
mn.getTypeDescriptor().equals(candidate.getTypeDescriptor()) && !mn.isAbstract() && !mn.isStatic()
id=21
CommandUtils.convertMsToDate(files[3].getCreationTimeMs())
string.length() > 0
populateUi()
UIPasteboard.getGeneralPasteboard()
DBG=false
mWidth - mMinWidth
Thread.sleep(3000)
win.isDrawnLw() || win.hasAppShownWindows()
assetAutoTaggerEntries.isEmpty()
delayMs <= 0
origin.realComponent().doubleValue() < other
list.add(idx,v)
mHomeStack == null && mDisplayId == Display.DEFAULT_DISPLAY
mock.expectedMinimumMessageCount(10)
InsertReturningStep<R>
USE_DISPLAY_LIST_PROPERTIES=false
ppiY / 2.54f
StringBundler.concat("select companyId, preferences from PortletPreferences ","where portletId = '",_PORTLET_ID,"' AND ownerType = ",PortletKeys.PREFS_OWNER_TYPE_COMPANY)
response == null || response.value == null
requestUrlregex == null || requestUrlregex.length() == 0
mDisplay.getRealMetrics(mDisplayMetrics)
selenium.isElementPresent("link=Control Panel")
type.isEmpty()
new SystemVibrator(context)
greaterThan(0L)
!mUserVisibleHint && isVisibleToUser && mState < STARTED && mFragmentManager != null
String.format("Starting audit...%n" + expectedPath + ":3:14: "+ "Name 'InputMain' must match pattern '^[a-z0-9]*$'.%n"+ expectedPath+ ":5:7: "+ "Name 'InputMainInner' must match pattern '^[a-z0-9]*$'.%n"+ "Audit done.%n"+ "Checkstyle ends with 2 errors.%n",expectedPath)
sum=1f
mBackdrop.animate().alpha(0.002f)
log.debug("Error loading known hosts",e)
minSize > curSize
new KeywordMap(false)
scheduleRemoveStartingWindowLocked(wtoken)
supported.getProtocols()
log.debug("Checking bounds [{}, {}) (expect {} keys)",new Object[]{startCol,endCol,expected.size()})
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
Exception t
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED) || ctTypeStr.equals(ContentType.MULTIPART_ALTERNATIVE)
in.readStringNull(10)
mWasActivatedOnDown || !mNeedsDimming || isTouchExplorationEnabled()
tests.add(0,objectExpressionType.getGenericsTypes()[0].getType())
Pattern.compile("(--?[a-zA-Z_]+)=(.*)",Pattern.DOTALL)
mUiHandler.postDelayed(pae,timeout)
c == Short.class || c == Short.TYPE
mListView.getListChildAt(index)
public static final class TutorialSupportFragmentImpl extends TutorialSupportFragment {   private TutorialOptions mTutorialOptions;   public TutorialSupportFragmentImpl(){   }   @SuppressLint("ValidFragment") private TutorialSupportFragmentImpl(  @NonNull TutorialOptions tutorialOptions){     mTutorialOptions=tutorialOptions;   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     setRetainInstance(true);   }   @Override protected TutorialOptions provideTutorialOptions(){     return mTutorialOptions;   } } 
" firstActiveTime=" + firstActiveTime
new SystemException("Company id should never be " + UserImpl.DEFAULT)
melody.length() - 1
96.0f / 160
LOG.debug(ex.getLocalizedMessage(),ex)
enabled=false
socket != null
parsedResult.getType()
packet.getFrom().split("/",2)
startServer(new HttpServlet(){   @Override protected void doGet(  HttpServletRequest req,  HttpServletResponse resp) throws ServletException, IOException {     if (req.getHeader("Via") != null)     resp.addHeader(PROXIED_HEADER,"true");     if (target.equals(req.getRequestURI())) {       if (query.equals(req.getQueryString())) {         resp.setStatus(200);         return;       }     }     resp.setStatus(404);   } } )
SequenceBatchCSVRecord.class
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
mBondState.setBondState(address.toUpperCase(),state,reason)
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class CountDownLatchBasicLocalTest extends CountDownLatchAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } 
selenium.isElementPresent("link=Control Panel")
TelephonyManager.getDefault().getCurrentPhoneType()
UpdateFrequency=updateFrequency
sp.vim_regsub_multi(regmatch,lnum,sub,1,false)
Thread.sleep(1000)
input.length() >= 4
DefaultCacheKeysFactory.staticCreateEntityKey(id,persister,factory,tenantIdentifier)
restrictions[name.position]
mock.expectedMinimumMessageCount(3)
getNext().invoke(proxy,method,args)
getAdapter() == null || getAdapter().getCount() == 0
onDetachedFromWindow()
assertTrue(dr.isFailure())
JMeterUtils.getPropDefault("proxy.cert.validity",7)
name.indexOf(endQuote,startQuote.length())
permissions+=64
new Paint()
new Paint()
GridTestUtils.waitForCondition(new GridAbsPredicate(){   @Override public boolean apply(){     return backupQueue(ignite(0)).isEmpty();   } } ,5000)
initial(randToUse)
telephony.getCdmaEriIconIndexForSubscriber(subId,getOpPackageName())
assertThat(ds.getValidationInterval()).isEqualTo(3000L)
EditText croutonDurationEdit=(EditText)findViewById(R.id.edit_text_duration); 
Messages.getString("TransMeta.Exception.ErrorOpeningOrValidatingTheXMLFile",fname)
lock.isHeldByCurrentThread()
activityNdx <= topActivityNdx
transparencies != null && (faceTextures == null || faceTextures[face] == -1)
new StringBundler()
LongAdder8 cntr
params[1]
new Duration(30,SECONDS)
DEBUG=false
new ByteBuddy(ClassFileVersion.JAVA_V8).subclass(Object.class).implement(Class.forName(DEFAULT_METHOD_INTERFACE)).implement(Class.forName(CONFLICTING_DEFAULT_METHOD_INTERFACE)).method(named("foo")).intercept(DefaultMethodCall.prioritize(Class.forName(DEFAULT_METHOD_INTERFACE))).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
currentType != Type.INT
inUtc || allDay
assertNumMessagesInQueue("Should be rolled back",connection,dlq,1,2500)
buffer.flip()
logger.fine(String.format("emitting packet with ack id %d",ids))
mDisplay.getRealMetrics(mDisplayMetrics)
LOGICAL_TYPE_TIME_MILLIS.equals(logicalName)
return true; 
ModLoaderHelper.sidedHelper == null || !ModLoaderHelper.sidedHelper.clientConnectionClosed(manager,mod)
j < count
TCN_REQUIRED_PATCH=28
telephony.getCdmaEriIconModeForSubscriber(subId,getOpPackageName())
Exception e
!token.hasVisible && !mClosingApps.contains(token) && !token.mDeferRemoval
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
composite.isDisposed() || text == null
m.getDeclaringClass()
RIGHT_ID=3533
server0.getStoreRepository().getStorageEngine(storeName)
consumerPort=9123
myIcon == null || IconLoader.isGoodSize(myIcon)
deployment.addServletContainerInitializer(new ServletContainerInitializerInfo(Initializer.class,new ImmediateInstanceFactory<ServletContainerInitializer>(initializer),NO_CLASSES))
new IndexWriter(directory,autoCommit,ANALYZER,false,IndexWriter.MaxFieldLength.LIMITED)
verifySorted(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
logger.debug("Execution of UDF '{}' failed",name,e)
new Node.JspAttribute(tai,qName,uri,localName,value,false,el,dynamic)
intermediatePoints != null && !intermediatePoints.isEmpty()
new WorldPoint(2458,3364,0)
DEBUG_CAMERA_LIFT=false
RunnerApi.Trigger.newBuilder().setAfterEndOfWindow(RunnerApi.Trigger.AfterEndOfWindow.newBuilder().setEarlyFirings(subtrigger1))
setop.getJavaName()
service.asBinder().pingBinder()
protected Task createTaskGenerate(File wsdlFile,File tmpDir){   String taskName=GradleUtil.getTaskName(LiferayJavaPlugin.BUILD_WSDL_TASK_NAME + "Generate",wsdlFile);   JavaExec javaExec=GradleUtil.addTask(_project,taskName,JavaExec.class);   File tmpSrcDir=new File(tmpDir,"src");   javaExec.args("--output=" + FileUtil.getAbsolutePath(tmpSrcDir));   javaExec.args(FileUtil.getAbsolutePath(wsdlFile));   javaExec.setClasspath(getConfiguration());   javaExec.setMain("org.apache.axis.wsdl.WSDL2Java");   TaskInputs taskInputs=javaExec.getInputs();   taskInputs.file(wsdlFile);   TaskOutputs taskOutputs=javaExec.getOutputs();   taskOutputs.dir(tmpSrcDir);   return javaExec; } 
poList[2]
store.forceBlockingFlush()
super.onAttachedToWindow()
entry.getSupportsPartial()
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,JavaConstant.MethodHandle.ofLoaded(methodHandleLoaded)))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
raw.getOutParameters()
mConnector.executeForList("volume","list","broadcast")
theiaProjectTree.waitItem(projectName)
outLatch.startLatch.await(400,TimeUnit.MILLISECONDS)
call.getStartTime()
syncDLFileVersionDiffPersistence.fetchByF_S_D(fileEntryId,sourceFileVersionId,destinationFileVersionId)
filter.getTickSize()
pluginPanel.rebuild()
assertEquals(0.3116490253190556,mse,1e-8)
GitWorkingDirectoryFactory.newGitWorkingDirectory(portalGitWorkingDirectory.getUpstreamBranchName(),JenkinsResultsParserUtil.getProperty(portalReleaseProperties,"lp.plugins.dir"))
AbstractBeginNode node
new GetExecutionVariableInstancesCmd(executionId,variableNames,true,locale,withLocalizationFallback)
this.getDefaultReadOnly()
String.format("BUG: %s changed score during rematch: %d -> %d",newNetwork.name(),score,newNetwork.getCurrentScore())
topLevelEditor.getDocument()
new ModelRenderer(model,0,1)
new IllegalStateException("Result is already complete: succeeded")
!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled() || dataSet.getEntryCount() == 0
pubKeyStore == null
new ProtoFile("nestedmaps.proto",null,NO_STRINGS,NO_STRINGS,Arrays.asList(expected),NO_SERVICES,map(),NO_EXTEND_DECLARATIONS)
Long.parseLong(strings[i])
P params
!_parms._lambda_search && _state._iter == 0
selenium.isElementPresent("link=Control Panel")
buffers[i]
new SmileXContentParser(smileFactory.createParser(reader))
selenium.isElementPresent("link=Control Panel")
return true; 
StepVerifier.create(Flux.just(1).then()).verifyComplete()
mph >= 10 || am.hasFastSpeed()
c.networkId == netId && c.SSID.equals(config.SSID)
new MethodDescription.Token(FOO,MODIFIERS,Collections.singletonList(mock(GenericTypeDescription.class)),first,Collections.singletonList(secondParameter),Collections.singletonList(mock(GenericTypeDescription.class)),Collections.singletonList(mock(AnnotationDescription.class)),null)
MoreObjects.toStringHelper(this).add("user",getUser()).add("timeZoneKey",timeZoneKey).add("locale",locale).add("startTime",startTime).add("properties",propertyValues)
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.4")
field.getType()
realm.checkIfValid()
println_native(logId,ERROR,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
EntityCacheUtil.putResult(CheckoutModelImpl.ENTITY_CACHE_ENABLED,CheckoutImpl.class,checkout.getPrimaryKey(),checkout)
new IndexOutOfBoundsException("negative offset:" + offset)
mSelectResponse != null && mSelectResponse.length > 0
public Builder setProxyPassword(String password){   this.proxyPassword=password;   return this; } 
Slog.w(TAG,"APK " + fileName + " has compressed dex code "+ entry.getName())
TelephonyManager.getDefault().getCurrentPhoneType()
mWasActivatedOnDown || !mNeedsDimming || isTouchExplorationEnabled()
mAlpha.cancel()
mService.disconnect()
request.getContentType().startsWith("application/x-www-form-urlencoded")
mDrawerItems.size() > position
Activate(app)
mQsDensityContainer.getLayoutParams()
durableSubscriptions.remove(key)
MAX_DISMISSAL_ON_SWIPE_UP_SHOW=2
parameterTokens.set(index,new ParameterDescription.Token(token.getParameterTokens().get(index).getType(),CompoundList.of(token.getParameterTokens().get(index).getAnnotations(),new ArrayList<AnnotationDescription>(annotations)),token.getParameterTokens().get(index).getName(),token.getParameterTokens().get(index).getModifiers()))
blog.getLocalTableBlogId()
Integer.toString(gramSize)
ClassFileVersion.JAVA_V5.getVersion()
Exceptions.duplicateOnSubscribeException()
Hooks.resetOnLastOperator()
getJSONValue(activity.getExtraData(),"title",kbArticle.getTitle())
Nd4j.pullRows(weights,1,indexes,'c')
Thread.sleep(3)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ctrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
is.read(buffer)
refresh(true)
logger.warn("Field sorting failed!")
synchronized (mService) {   mService.mStackSupervisor.startActivityFromRecents(callingPid,callingUid,mTaskId,null); } 
nextArg()
(GridDrStatus)in.readObject()
!mSingleFolderMode || mMessageListFragment.isManualSearch()
s.toString().toLowerCase()
FileSystem.getLocal(conf).delete(localScratchDir,true)
mExitingAppTokens.get(i)
lock.isHeldByCurrentThread()
days >= 2 || (days > 0 && hours == 0)
copy.getGenericsTypes()
UserHandle.myUserId()
Map<String,FilterBuilder>
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dtrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0)
TimeUnit.SECONDS.toMillis(5)
matcher.find()
log.logError(BaseMessages.getString(PKG,"JobUnZip.TargetFolderNotFolder.Label",realTargetdirectory))
new Paint()
ti >= 0
Id
PendingIntent.getActivity(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
sDefaults.putBoolean(KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL,true)
ActivityManagerNative.getDefault().updatePersistentConfiguration(config)
j--
oldConfig.densityDpi != newConfig.densityDpi || oldConfig.getLayoutDirection() != newConfig.getLayoutDirection()
doTestWithRuntime()
new Fault(e)
getExecutorServiceManager().shutdownNow(errorHandlerExecutorService)
context.add("exceptionalMethod",123.0f)
TestWriteStripedFileWithFailure.class
this.httpHandler.handle(request,response).onErrorResume(ex -> {   logger.error("Could not complete request",ex);   nativeResponse.setStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
syncContext.setPortletPreferencesMap(getPortletPreferencesMap())
JvmDeclarationOriginKt.OtherOriginFromPure(myClass,valueOfFunction)
WEB_SYNC_MANAGER=false
BlockWorkerUtils.getWorkerAddress(mTachyonConf).getAddress().getHostAddress()
!message.isDiscussion()
enforceCallingPermission(android.Manifest.permission.MANAGE_ACTIVITY_STACKS,"startLockTaskModeOnCurrent")
new WrappedEpoxyModelClickListener(this,clickListener)
httpRequest.getSession().removeAttribute(ACEGI_SECURITY_TARGET_URL_KEY)
getActiveFgCall().getPhone().startDtmf(c)
if (DEBUG_DEVICES) {   Log.d(TAG,"onSetA2dpSinkConnectionState btDevice=" + btDevice + "state="+ state); } 
performDexOpt(packageName,instructionSet,false)
wait <= 0 && BlockUtil.canChangeBlock(worldObj,target.x,target.y,target.z)
mSelector.setHotspot(x,y)
public static LocalTimeArray localTimeArray(LocalTime[] values){   return new LocalTimeArray(values); } 
retriever.getFrameAtTime(-1)
new UncheckedIOException(String.format("Could not load properties for module '%s' from %s",name,jarFile),e)
new ObjectMapper().readerFor(defaultInstance().constructCollectionType(List.class,DiskBalancerWorkEntry.class))
GridGgfsTestUtils.jsonToMap(primaryIpcEndpointConfiguration(gridName))
merge4dCnnData(labelsToMerge)
mUiHandler.postDelayed(pae,timeout)
generateRandomStringArray(2,4,false,false)
setSort(2)
telephony.getCdmaEriIconModeForSubscriber(subId,getOpPackageName())
new byte[11]
symbolUsageValidator.validateCall(resolvedCall,functionDescriptor,context.trace,loopRangeExpression)
si.deliveryCount > 1
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5FilenameNoRoot(weightsHdf5Filename)
scope == null
logger.warn("",ex)
Thread.sleep(1000)
info == null || !mConfig.bindPermission.equals(info.permission)
mPowerManager.isInteractive()
dest.writeValue(this.milestone)
nodeManager.getWorkerNodes()
resources.getDimensionPixelSize(R.dimen.close_handle_height)
ctClass.toClass(clazz.getClassLoader(),null)
new GitException("Remote url " + url + " is invalid. ")
type.getDeclaredConstructor()
BookmarksFolder.class
logoutRedirect != null
mService.mDisplayContents.valueAt(displayNdx)
v == BlockingSubscriber.TERMINATED
gatt.setPeriodicAdvertisingEnable(this.advertiserId,enable)
new File(normalTaskFilePath)
Exception e
expanded.toString().replaceAll("\\$\\$","\\$")
selenium.isElementPresent("link=Control Panel")
_viewFinder.setTorchMode(this._torchMode)
monochrome=true
notebook.importNote(exportedNoteJson,"Title",null)
userInfo == null || !userInfo.canHaveProfile()
final SimulatedDpad mSimulatedDpad; 
TypedQuery<Number>
new LinkedFileViewModel(linkedFile,entry,databaseContext,dialogService,taskExecutor)
batteryService.getBatteryLevelLow()
Boolean.parseBoolean(getOptional("kylin.htrace.show-gui-trace-toggle","false"))
loopButton.isActivated()
@NonNull
variants.containsKey(variant)
BeginNode node
compressedSliceInput.getRetainedSize()
new Paint()
console.addToHistory(string,attributes)
mConnectionById.containsKey(callId)
DeprecationLogger.nagUserWith("<someIdeTask>.whenConfigured is deprecated! Replaced by whenMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
LOGGER.warn(msg.apply())
new Paint(Paint.ANTI_ALIAS_FLAG)
state.isKeyguardShowingAndNotOccluded() || state.dozing
RunnerApi.Trigger.newBuilder().setAfterEndOfWindow(RunnerApi.Trigger.AfterEndOfWindow.newBuilder().setEarlyFirings(subtrigger1).setLateFirings(subtrigger2))
v.getContext().startActivityAsUser(intent,UserHandle.CURRENT)
new ColumnInfo(Messages.getString("SetVariableDialog.Fields.Column.VariableType"),ColumnInfo.COLUMN_TYPE_CCOMBO,SetVariableMeta.getVariableTypeDescriptions(),false)
lp.resolveLayoutDirection(layoutDirection)
Strings.isNotBlank(newAlgorithm)
isDirect=false
!finished || !processorQueue.isEmpty()
avb.getData().rewind()
ENABLED.set(true)
amp*=0.9
SCAN_STATUS_COMPLETE=2
devicePort.type() == AudioManager.DEVICE_OUT_HDMI || devicePort.type() == AudioManager.DEVICE_OUT_HDMI_ARC
selenium.isElementPresent("link=Control Panel")
new ClusterTopologyCheckedException("Failed to send message to node (has node left grid?): " + nodeId)
scheme.equalsIgnoreCase("tel") || scheme.equalsIgnoreCase("sip") || scheme.equalsIgnoreCase("sms")|| scheme.equalsIgnoreCase("smsto")|| scheme.equalsIgnoreCase("mailto")|| scheme.equalsIgnoreCase("nfc")
UnderFileSystemUtils.deleteFileIfExists(mUfs,mTempCheckpointPath)
meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTableName()))
Log_OC.d(TAG,"Requesting sync for " + getAccount().name + " at "+ MainApp.getAuthority()+ " with new API")
scaleX == 1
new BigInteger(1,difficulty)
waitForDownWithWait(CCMBridge.IP_PREFIX + '2',c.cluster,10)
Object[]
e.toString()
verify(mWifiService).stopLocalOnlyHotspot(TEST_PACKAGE_NAME)
userSession.addComponentUuidPermission(UserRole.ADMIN,"PROJECT_1","PROJECT_1")
protocolStatusCombos.size() - hiddenProviders == 1 && !isHidden
layer.activate(input)
/**   * Public size counter.   */ private final LongAdder8 mapPubSize=new LongAdder8(); 
new ErrorDialogFragment()
new AutoCompleteListener(searchAutoCompleter)
GenericSendAndReceiveGateway gateway
mDuration >= 0 && mTransitions != null
type.getPresentableText()
LOG.error("failed to send {} messages to {}: {}",numMessages,dstAddressPrefixedName,future.getCause())
Trans != NO_TRANSPOSE
selenium.isElementPresent("link=Control Panel")
current.getUnresolvedSuperClass()
LOGGER.debug("no property for " + type + ", "+ format)
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
info.crashInfo.stackTrace.length() > 30000
mContext.startActivityAsUser(intent,null,UserHandle.CURRENT)
previousTypeSettingsProperties.toString()
proxyHTTPSServer.getText()
BigDecimal.valueOf(100d)
mDatabaseHandler == null || mDatabaseHandler.isClosed()
new Button("submit"){   @Override public void onSubmit(){     GeoServer gs=getGeoServer();     gs.save((GeoServerInfo)globalInfoModel.getObject());     gs.save((LoggingInfo)loggingInfoModel.getObject());     doReturn();   } } 
kernelWidth > (inWidth + 2 * padWidth)
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",newNetwork.name(),nc,newNetwork.networkCapabilities)
myTypeChecker.checkExpressionIsAssignableToType(rOperand,numberType,"javascript.expression.type.implicitly.coerced.to.unrelated.type",null,false)
endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
builder.length() == 0 && s != null
new String(_byteStore.get(dictionaryId),UTF_8)
appWindowToken == null || !appWindowToken.isVisible()
type.getDeclaredConstructor()
tester.nodeRepository().getNodes(NodeType.tenant,Node.State.ready)
server.getClass()
three.setAxisIndex(LEAF)
minBukkitBuildVersion=711
JwsUtils.verify(jws,stateString).getDecodedJwsPayload()
Collection<PsiMethod>
gapExpression != null
log.error("Problem in JSR223 script ",e)
execute()
new DatabaseExplorerDialog(shell,SWT.NONE,dbinfo,jobMeta.databases,true)
m.getDeclaringClass()
parent.getExactOverriddenJoinTable(propertyName)
serviceContext.getModifiedDate(null)
clearIndex()
HDR_TYPE_ERR=0x04
position + dockDividerWidth
reactContext.runOnNativeModulesQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
/**   * Callback that is invoked after each test method has been invoked.  * @param context the current test extension context  */ void afterEach(TestExtensionContext context) throws Exception ; 
new OutputStreamWriter(output,ContentUtils.DEFAULT_CHARSET)
a.getDimension(attr,0)
DirectoryReader open=null; 
final PsiMethod constructor
getUserBadgedIcon(dr,new UserHandle(mContext.getUserId()))
mRouter.selectRouteInt(mRouteTypes,route)
Mockito.times(6)
this.jumpSpeed=jumpSpeed
id=2
mAppToken.isVisible()
client.getLocalPlayer().getInteracting().getName().contains(FISHING_SPOT)
editor == null && this.formattingService != null
@Autowired HandlingEventRepository handlingEventRepository; 
delegate.writeStartElement(prefix,localName,namespaceURI)
gtasksService.getAllGtasksFromListId(DEFAULT_LIST,false,false)
error.getMessage()
containingClass.getContainingClass()
PsiTreeUtil.instanceOf(instruction.getElement(),PyStatementList.class)
MAX_CACHE_PREPARED=10000
new StringRepresentation(ret.toString(),MediaType.APPLICATION_JSON)
!firstIteration
connection.psubscribe(jedisPubSub,patterns)
plotNode(g2,loc,c,size,"")
FileType.of(".h",".hh",".hpp",".ipp",".hxx",".inc")
annotationHelper.printAnnotationError(element,"%s annotated element should have only one constructor")
from > to
constraints.weightx=0.5f
queuedChunk.provider.originalLoadChunk(queuedChunk.x,queuedChunk.z)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
klass.getDeclaredMethodsUnchecked(false,declaredMethods)
new OsMoControlDevice(app,service,tracker)
loadAnimator(fragment,transition,false,transitionStyle)
checkDirectory(config.getString("tsd.http.cachedir"),MUST_BE_WRITEABLE,CREATE_IF_NEEDED)
new double[test_N][n_out]
builder().experimentalBuildSettingApi(false).experimentalCcSkylarkApiEnabledPackages(ImmutableList.of()).experimentalEnableAndroidMigrationApis(false).experimentalEnableRepoMapping(false).experimentalRemapMainRepo(false).experimentalPlatformsApi(false).experimentalStarlarkConfigTransitions(false).incompatibleBzlDisallowLoadAfterStatement(false).incompatibleDepsetIsNotIterable(false).incompatibleDepsetUnion(false).incompatibleDisableDeprecatedAttrParams(false).incompatibleDisableObjcProviderResources(false).incompatibleDisallowConflictingProviders(true).incompatibleDisallowDataTransition(false).incompatibleDisallowDictPlus(false).incompatibleDisallowFileType(false).incompatibleDisallowLegacyJavaInfo(false).incompatibleDisallowLoadLabelsToCrossPackageBoundaries(false).incompatibleDisallowOldStyleArgsAdd(false).incompatibleDisallowSlashOperator(true).incompatibleExpandDirectories(false).incompatibleGenerateJavaCommonSourceJar(false).incompatibleNewActionsApi(false).incompatibleNoAttrLicense(false).incompatibleNoOutputAttrDefault(false).incompatibleNoSupportToolsInActionInputs(false).incompatibleNoTargetOutputGroup(false).incompatibleNoTransitiveLoads(false).incompatiblePackageNameIsAFunction(false)
logger.debug("Exception mapping responses to requests.",e)
declarationDescriptors == null
RECONNECT_DELAY_MIN=2
Assert.assertEquals(peer.getSyncBlockRequested().isEmpty(),true)
!"none".equals(max_items)
mPhone.getContext().enforceCallingPermission("android.permission.SEND_SMS","Sending SMS message")
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",newNetwork.name(),nc,newNetwork.networkCapabilities)
mccMncs != null
logger.debug("JSR-330 'javax.inject.Named' annotation found and supported for component scanning")
out.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
Number rate
new DDMFormAssetRenderer(formInstanceRecord,formInstanceRecordVersion,_ddmFormInstanceRecordLocalService,_ddmFormRenderer,_ddmFormValuesFactory,_ddmFormValuesMerger)
Boolean.parseBoolean(attrValue)
id=13106
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).onErrorResume(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
this.mPlatformBitmapFactory=platformBitmapFactory
LinkedHashMap<String,Account[]>
new Chat(name,mMessageEdit.getText().toString(),uid)
super.onAttachedToWindow()
pushExecutor.execute(new NamedRunnable("OkHttp %s Push Headers[%s]",hostName,streamId){   @Override public void execute(){     boolean cancel=pushObserver.onHeaders(streamId,requestHeaders,inFinished);     try {       if (cancel)       frameWriter.rstStream(streamId,ErrorCode.CANCEL);       if (cancel || inFinished) { synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )
blog.getLocalTableBlogId()
module == null || module.isDisposed()
m.getDeclaringClass()
new Duration(endsMillis,System.currentTimeMillis())
this.cusolverDnDsyevd_bufferSize.invoke(null,solverDn,jobz,uplo,M,(DoublePointer)xAPointer.getDevicePointer(),M,(DoublePointer)xRPointer.getDevicePointer(),(IntPointer)worksizeBuffer.addressPointer())
mValues[8]
mWidth - mMinWidth
System.err.println(s)
final LongAdder8 locAdder=new LongAdder8(); 
selenium.isElementPresent("link=Control Panel")
sTestCaseCounter == 0
IndexSettingsModule.newIndexSettings(new Index("_index"),Settings.EMPTY)
PortletFileRepositoryUtil.getPortletRepositoryId(groupId,PortletKeys.DOCUMENT_LIBRARY,serviceContext)
result.getPlatformKind()
getPreferences().getBoolean(SIGNAL_PREF,false)
new SQLException("Table exists","I6000",288)
selenium.isElementPresent("link=Control Panel")
isGreaterOrEqual(platformVersion,M)
!broadcasterClassName.equalsIgnoreCase(DefaultBroadcaster.class.getName())
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallback mBluetoothGattServerCallback=new IBluetoothGattServerCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
ap.getSsidStr()
outLatch.startLatch.await(400,TimeUnit.MILLISECONDS)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_SAVE_AS,true)
memoryReservation.addAndGet(bytes)
getConfig().getBoolean(SPIDER_PARSE_ROBOTS_TXT,true)
tableItem.setText(6,Const.NVL(meta.getPassword(),""))
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
f.getAttrs().getMTime()
type.getDeclaredConstructor()
HandleConstructor.createConstructor(AccessLevel.PACKAGE,builderType,Collections.<EclipseNode>emptyList(),false,true,annotationNode,Collections.<Annotation>emptyList())
mFrameSlots.remove(name)
g.cluster().localNode()
new Paint()
result=55
new SelectWidget("Show server home page:",new String[]{"Automatic","Always","Never"},new String[]{"sessions","always","never"},false,true,false)
buffer.length() != 0
mContext.enforceCallingOrSelfPermission(android.Manifest.permission.BACKUP,"isBackupServiceActive")
display.getRealMetrics(dm)
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
WordPress.getCurrentBlog().getLocalTableBlogId()
RecentProjectsManager.getInstance().getRecentProjectsActions(true)
setServiceForegroundInnerLocked(r,id,notification,flags)
Collection<FunctionDesc>
shard.applyIndexOperationOnReplica(0,1,VersionType.EXTERNAL,IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP,false,SourceToParse.source(shard.shardId().getIndexName(),"test","id",new BytesArray("{}"),XContentType.JSON),mappingConsumer)
engine.execute(query).dumpToString()
genericParameterType.getSort()
descriptorDecoder.originalChannel()
(FileActivity)getActivity()
mListUrlBuilder.reset()
Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
!displayContent.isReady() || !mPolicy.isScreenOn() || !okToAnimate()
winAnimator.setSurfaceBoundariesLocked(recoveringMemory)
binary.size()
!tour.getStageInformation().isEmpty()
nodeEngine.getClusterService()
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallback mBluetoothGattServerCallback=new IBluetoothGattServerCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
connection.hlen(key)
new SummariserRunningSample("DELTA")
toArrayHelper(0)
callback.onPulseFinished()
editor.commit()
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
selenium.isElementPresent("link=Control Panel")
Convolution.im2col(input,kH,kW,sY,sX,pY,pX,dh,dw,false,out2p)
tokenLength >= 1
config.setClientMappingCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString())
(BigDecimal)config.get("location")
getMethod()
stream.rstStream()
members == null || members.isEmpty()
securityMode != SecurityMode.None || !mLockPatternUtils.isLockScreenDisabled(KeyguardUpdateMonitor.getCurrentUser())
r != null && !r.finishing
newDto(RecipeDto.class).withContent(DEFAULT_DOCKER_IMAGE)
exportAttributes && attributeModel != null
getMockEndpoint("mock:" + i).expectedMessageCount(200)
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
PathUtils.concatPath(homeDir,YML_FILE_DIR)
program.getUuid()
return true; 
child2.setBytes(200L)
eocBound == Bound.END
ObjectStreamClass.lookup(clazz)
mKeyguardController.isKeyguardShowing(display.mDisplayId)
type.isAssignableFrom(number.getClass())
Format.createAudioSampleFormat(null,MimeTypes.AUDIO_RAW,streamInfo.bitRate(),Format.NO_VALUE,streamInfo.channels,streamInfo.sampleRate,null,null)
dynamicType.getLoaded().getDeclaredConstructor()
hasRows(newTableName)
recipient.getExpireMessages() * 1000L
Thread.sleep(5000)
n < colPI
Integer.parseInt(rightStr)
m_data.rewind().forward((int)key_offset).getFixString((int)key_length,charsetName)
public abstract ResolvedReferenceType deriveTypeParameters(ResolvedTypeParametersMap typeParametersMap); 
testable.sort(reverse.clone())
Slog.d(TAG,"Hardware Activity-Recognition not supported.")
new ClearDatabaseChangeLogTableStatement(schema)
Collections.enumeration(Collections.emptySet())
newDto(RecipeDto.class).withContent(DEFAULT_DOCKER_IMAGE)
Thread.sleep(1000)
count=1
myMatcher.getElementsByPattern(namePattern,name,myCheckboxState,new Computable<Boolean>(){   public Boolean compute(){     return myCancelled;   } } )
countNewlines(headerFragment + lhsFragment + thenFragment) + 2
proc != null && proc.thread != null
mock.expectedHeaderReceived(CaffeineConstants.ACTION_HAS_RESULT,true)
size.longValueSafe()
Slog.d(TAG,"showSaveLocked(): no mStructure")
typeSettingsProperties.toString()
queueAccess.get(0) == selectedItem.getId()
Context.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS)
new Duration(30,SECONDS)
polyLats.length - 2
LOG.warn("Could not parse syslog message. Not further handling.",e)
DEBUG=false
loadingSegments.get(segment.getIdentifier(),server.getTier())
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,fout)
id=10842
/**   * Tests that compression is turned on.  */ @RunWith(JUnit4.class) public class TransportCompressionTest extends AbstractInteropTest {   private static int serverPort=TestUtils.pickUnusedPort();   private static final DecompressorRegistry decompressors=DecompressorRegistry.newEmptyInstance();   private static final CompressorRegistry compressors=CompressorRegistry.newEmptyInstance();   @Before public void beforeTests(){     Fzip.INSTANCE.anyRead=false;     Fzip.INSTANCE.anyWritten=false;   }   /**   * Start server.   */   @BeforeClass public static void startServer(){     decompressors.register(Fzip.INSTANCE,true);     compressors.register(Fzip.INSTANCE);     startStaticServer(ServerBuilder.forPort(serverPort).compressorRegistry(compressors).decompressorRegistry(decompressors),new ServerInterceptor(){       @Override public <ReqT,RespT>Listener<ReqT> interceptCall(      MethodDescriptor<ReqT,RespT> method,      ServerCall<RespT> call,      Metadata headers,      ServerCallHandler<ReqT,RespT> next){         Listener<ReqT> listener=next.startCall(method,call,headers);         call.setMessageCompression(true);         return listener;       }     } );   }   /**   * Stop server.   */   @AfterClass public static void stopServer(){     stopStaticServer();   }   @Test public void compresses(){     final SimpleRequest request=SimpleRequest.newBuilder().setResponseSize(314159).setResponseType(PayloadType.COMPRESSABLE).setPayload(Payload.newBuilder().setBody(ByteString.copyFrom(new byte[271828]))).build();     final SimpleResponse goldenResponse=SimpleResponse.newBuilder().setPayload(Payload.newBuilder().setType(PayloadType.COMPRESSABLE).setBody(ByteString.copyFrom(new byte[314159]))).build();     assertEquals(goldenResponse,blockingStub.unaryCall(request));     assertTrue(Fzip.INSTANCE.anyRead);     assertTrue(Fzip.INSTANCE.anyWritten);   }   @Override protected ManagedChannel createChannel(){     return ManagedChannelBuilder.forAddress("localhost",serverPort).decompressorRegistry(decompressors).compressorRegistry(compressors).intercept(new ClientInterceptor(){       @Override public <ReqT,RespT>ClientCall<ReqT,RespT> interceptCall(      MethodDescriptor<ReqT,RespT> method,      CallOptions callOptions,      Channel next){         final ClientCall<ReqT,RespT> call=next.newCall(method,callOptions);         return new ForwardingClientCall<ReqT,RespT>(){           @Override protected ClientCall<ReqT,RespT> delegate(){             return call;           }           @Override public void start(          final ClientCall.Listener<RespT> responseListener,          Metadata headers){             ClientCall.Listener<RespT> listener=new ForwardingClientCallListener<RespT>(){               @Override protected io.grpc.ClientCall.Listener<RespT> delegate(){                 return responseListener;               }               @Override public void onHeaders(              Metadata headers){                 super.onHeaders(headers);                 String encoding=headers.get(GrpcUtil.MESSAGE_ENCODING_KEY);                 assertEquals(encoding,Fzip.INSTANCE.getMessageEncoding());               }             } ;             super.start(listener,headers);             setMessageCompression(true);           }         } ;       }     } ).usePlaintext(true).build();   } static final class Fzip implements Codec {     static final Fzip INSTANCE=new Fzip();     volatile boolean anyRead;     volatile boolean anyWritten;     @Override public String getMessageEncoding(){       return "fzip";     }     @Override public OutputStream compress(    OutputStream os) throws IOException {       return new FilterOutputStream(os){         @Override public void write(        int b) throws IOException {           super.write(b);           anyWritten=true;         }       } ;     }     @Override public InputStream decompress(    InputStream is) throws IOException {       return new FilterInputStream(is){         @Override public int read() throws IOException {           int val=super.read();           anyRead=true;           return val;         }         @Override public int read(        byte[] b,        int off,        int len) throws IOException {           int total=super.read(b,off,len);           anyRead=true;           return total;         }       } ;     }   } } 
!mKey.equals(other.mKey)
log.error("Problem in JSR223 script ",e)
? super T
Matchers.greaterThanOrEqualTo(1)
!ObjectUtils.isEmpty(getLocations()) || !ObjectUtils.isEmpty(getClasses())
new IllegalStateException("Advertising can't be both connectable and anonymous")
dy == 0
this(icon,title,intent,new Bundle(),null,true); 
res.time >= 250
mock.expectedMinimumMessageCount(2)
telephony.getDataNetworkTypeForSubscriber(subId,getOpPackageName())
dcEndpoints.get(dc).get() < responses.get(dc).get()
new Notification(StatusBarTest.this,R.drawable.ic_statusbar_missedcall,"tick tick tick",System.currentTimeMillis() - (1000 * 60 * 60* 24))
HashMap<TurnPathHelper.TurnResource,Bitmap>
rule.setQsdiscard(true)
SmsHeader.toByteArray(header).length + 2
defaultSelectors(executor)
element.getLocalName()
new TextPaint()
resources.getDimensionPixelSize(R.dimen.close_handle_height)
testClass.getSimpleName()
EnumSet.of(PROPERTY,CLASSMETHOD,STATICMETHOD,TYPING_OVERLOAD)
guiResource.getImageJobGraph()
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
artifactResolver.resolveTransitively(artifacts,originatingArtifact,localRepository,remoteRepositories,artifactMetadataSource,filter)
typeSettingsProperties.toSortedString()
actionButton.setPressedIcon(new ImageIcon(ca.getPressedIcon()).getImage())
mToolbar.setTitle(mToolbarTitle)
routes.IndicesResource().delete(index)
new ModelNode().set(10L)
mDataAuthorities == null || data == null
currentPath == null || currentPath.isEmpty()
expression.substring(0,pathSeparator)
mCol.getDb().queryLongScalar("SELECT nid FROM cards WHERE id = " + id)
-110
dy == 0
Maps.newTreeMap()
buffer == null || buffer.getWidth() <= 1 || buffer.getHeight() <= 1
deadline < now && deadline != 0
!Boolean.parseBoolean(ldapConfig.get("startEmbeddedLdapServer"))
mFrameSlots.remove(name)
myCardModel.getQuestionAlign()
"weighting " + weightingStr + " not supported"
in2 >= 0x7f
RowKey.getSaltBytes(salt_bucket)
isInputViewShown()
evaluate("value = read_config('foo', 'bar', 'baz')").moduleLookup("value")
new IllegalArgumentException("Unsupported search type [" + searchType + "]")
configTimeRegionFactoryHolder.remove()
affVer.topologyVersion() > 0 && diffFromAffinityVer.compareTo(affVer) <= 0
!uuid.equals(NULL)
out.readFully(compressed,0,chunkSize)
edgeClass.isEnabled() && vizConfig.isShowArrows() && dataBridge.isDirected()
mSyncStatus.valueAt(i)
Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
s == null || s.length() == 0
mAnswer.setBackground(mTextBackground)
selenium.isElementPresent("link=Control Panel")
mirror.getType()
!binding.getName().equals("compareTo") || node.getBody() == null
telephonyService.getMeid(0)
helper.setMinTextSize(TypedValue.COMPLEX_UNIT_PX,minTextSize)
useEquals()
new IllegalStateException("Result is already complete: failed")
EqualityComparer<TKey>
telephony.getLteOnCdmaModeForSubscriber(subId,getOpPackageName())
!"none".equals(max_items)
isSingleTableOnly || shardingRule.tryFindTableRule(tableName).isPresent() || shardingRule.findBindingTableRule(tableName).isPresent()|| shardingRule.getDataSourceRule().getDefaultDataSource().isPresent()
command.getOldName()
Integer.parseInt(nextArgRequired())
resolver.acquireUnstableContentProviderClient(uri)
assertEquals("Size of " + r,2,r.size())
matchAxisFilter != 0 || wrapAxisFilter != 0
JournalTemplateServiceUtil.getTemplate(webDavRequest.getGroupId(),journalTypeId,true)
System.out.println("--")
new Coordinator("local",Settings.EMPTY,clusterSettings,transportService,writableRegistry(),ESAllocationTestCase.createAllocationService(Settings.EMPTY),new MasterService("local",Settings.EMPTY,threadPool),() -> new InMemoryPersistedState(0,ClusterState.builder(new ClusterName("cluster")).build()),r -> emptyList(),new NoOpClusterApplier(),new Random(random().nextLong()))
out.println(e.getMessage())
PyUtil.addListNode(this,param,beforeWhat,params.length == 0,true)
inOrder.verify(mockAwareService).subscribe(any(),eq(clientId),eq(subscribeConfig),sessionProxyCallback.capture())
Number value=list.get(i); 
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED) || ctTypeStr.equals(ContentType.MULTIPART_ALTERNATIVE)
simpleRecyclerViewAdapter.removeLast()
getSSLContext().getSocketFactory().createSocket(arg0,arg1,arg2,true)
Integer.parseInt(leftStr)
UnderFileSystem.get(tmpFolder,ufsConf)
getJSDocType(cp)
new IndexWriter(directory,analyzer,false,IndexWriter.MaxFieldLength.LIMITED)
assetUri.getAssetName().toLowerCase()
DBG=false
AnalyticsDataFactory.clearAnalyticsData()
new TelnetServerInitializer()
assertEquals(5,lm.getFields().size())
monitoredRegion.getUniqueId()
queryUpdateLatestPosition=new NamedParameterStatement(globalConnection,query)
DEFAULT_STREAM_TYPE_OVERRIDE_DELAY_MS=0
targetDatabase.setObjectQuotingStrategy(originalStrategy)
assertThat(container.size()).isEqualTo(40)
component.setSelectedIndex(selected)
declaredMethods[i].isBridge() || name.indexOf('+') >= 0
Parameter.forConstructor(errorHandler,constructor)
http2c.setInitialStreamRecvWindow(initialStreamSendWindow)
Thread.sleep(1000)
connections.containsKey(manager)
hitTestImpl(child,localPoint.x,localPoint.y,viewSelector,allowViewGroupResult)
pathParts[2] != null && pathParts[2].length() > 1
super(ctx,aList,pMarker,pMarkerHotspot,aOnItemTapListener,pResourceProxy); 
mIpSecService.allocateSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
executeRunnableDismissingKeyguard(runnable,null,false,false)
id=16504
Log.w(TAG,e.getMessage(),e)
position <= firstPos
Simple.forClass(SkylarkDict.class)
Locale.getDefault().toLanguageTag()
LogAdapter.createLog(name)
Stream.of("CYPHER 3.1","CYPHER 3.4")
"http".equals(protocol) || "ws".equals(protocol)
selenium.isElementPresent("link=Control Panel")
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/ImportsFromObjectNoDuplicates.kt")
TableNotFoundException e
new PrintWriter(deprecationPrinter,true)
grammar.getTokenDisplayNames()
private final MessageHeaderAccessor headerAccessor; 
!mLoadingErrorResource && getBitmapFromMemCache(key) == null
a.getFont(attr)
type == null || type instanceof PsiWildcardType
CANCEL_TIMEOUT_LIMIT=3000
origin.absoluteValue().doubleValue() < complexNumber.absoluteValue().doubleValue()
selenium.isElementPresent("link=Control Panel")
callNode.call(evaluateArgs(frame))
new Max()
Log_OC.d(TAG,"onSaveInstanceState() start")
SOURCE_PATH.deref()
myTools != null && scope != null
odi.close()
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,1,UserHandle.USER_CURRENT)
SystemProperties.getBoolean("persist.vr.use_standby_to_exit_vr_mode",true)
type.getDeclaredConstructor()
logger.debug("Action Invalid Value Format Exception {}",ex.getMessage())
new StringBuilder()
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH
args[1]
column.getValueClobFile() != null || (column.getType() != null && column.getType().equalsIgnoreCase("CLOB"))
waitForMappingUpdateOnAll("dynamic_table","my_object.a","my_object.b")
startActivity(in)
mHelper.onActivityCreate()
new UnsupportedOperationException("Cannot force ephemeral users on systems without split system user.")
Settings.Secure.getInt(getContext().getContentResolver(),ROUNDED_DIVIDER,0)
LocalIndexesActivity.class
mavenProject.getDisplayName()
mHeader.callOnClick()
view.getCompoundDrawablesRelative()
Throwable e
query.startsWith("about:")
Boolean.parseBoolean(attrValue)
Log_OC.e(TAG,"Trying to share a NULL OCFile")
GL20.glUniform1fv(location,toFloatBuffer(v,offset,count))
@Override public CharsRefBuilder append(CharSequence csq,int start,int end){   if (csq == null) {     return append(NULL_STRING);   }   grow(ref.length + end - start);   for (int i=start; i < end; ++i) {     setCharAt(ref.length++,csq.charAt(i));   }   return this; } 
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0,UserHandle.USER_CURRENT)
new VideoMediaDeviceSession(this,oldSession)
result != node.isNegated()
telephony.getCdmaEriTextForSubscriber(subId,getOpPackageName())
!allowPrivate.isNull()
!mRenderNode.isPivotExplicitlySet()
entry.getValue().getTimeWindowSet().size() < 1
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Allocation.createFromBitmap(mRS,outb,Allocation.MipmapControl.MIPMAP_NONE,Allocation.USAGE_SCRIPT)
checkMatch(inv,x,y,true)
Settings.Global.getInt(cr,Settings.Global.DOCK_AUDIO_MEDIA_ENABLED,0)
connectedHeaders.setVersion("1.2")
assertEquals(1,resultList.size())
mContext.sendBroadcast(intent)
public WordDelimiterFilter create(TokenStream input){   return new WordDelimiterFilter(input,generateWordParts,generateNumberParts,catenateWords,catenateNumbers,catenateAll,splitOnCaseChange); } 
logger.warn("{}",builder.toString())
Thread.sleep(1000)
uri == null || LauncherActivity.isLaunchUri(uri)
this.exchanges.remove(requestId)
logger.warn("Error creating pool to " + host,t)
lastPos > mBoundPos
new CallbackStub(this)
new UnsupportedOperationException("Cannot force ephemeral users on systems without split system user.")
mn.getTypeDescriptor().equals(candidate.getTypeDescriptor()) && !mn.isAbstract() && !mn.isStatic()
processor.process(tempReq)
Math.min(mGlowAlpha + (Math.abs(deltaDistance) * PULL_DISTANCE_ALPHA_GLOW_FACTOR))
initialCapacity <= capacity
nativeLibraryDir.getPath()
sr.getLastStartId()
me.showWebPage(errorUrl,false,true,null)
sizeNeeded > items.length
writeDirectly(serverInfo + columnEnd)
new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression,String.class)
versionObject.getVersionBase()
(Item)this
new CatchResult(response)
TransitiveInfoCollection current
nativePostCreate2(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
file.getPath()
Arrays.asList(STANFORD_TOKENIZE,STANFORD_SSPLIT,STANFORD_POS,STANFORD_LEMMA,STANFORD_NER)
url.addEncodedArgument(getAttributeValue(nodeAtts,"name"),getAttributeValue(nodeAtts,"value"))
buildWSDLTask.dependsOn(jar)
DataStreamSink<OUT>
expression == null || primaryIndexes.size() > indexes.size()
Ignition.start("examples/config/example-ignite.xml")
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
new TextField<String>(BrokerConfiguration.BROKER_URL_KEY,String.class)
loaded.getLoaded().getDeclaredConstructor()
origin > other
telephony.getCdmaEriIconIndexForSubscriber(subId,getOpPackageName())
ClusterGroupEmptyCheckedException ignore
mCurrentVrCompositorService == null
source.getCharacters()
ServerApplicationConfig.class
DISABLE_TIMEOUT=20000
selectedPos <= lastPos
ts.getJobId() == jobId
@Autowired ApplicationEvents applicationEvents; 
public SubType where(Expr.EBoolean... o){   query.where(o);   return self; } 
sourceString=Html.fromHtml(this.source).toString()
c.close()
realm.checkIfValid()
VertexAttribute.ColorPacked()
XmlUtils.readIntAttribute(parser,ATTR_DATABASE_VERSION)
UIUtil.invokeLaterIfNeeded(new Runnable(){   @Override public void run(){     if (myRunContext != null) {       runnable.run();       return;     }     final boolean needsRestart=isIdleQueueEmpty();     myIdleRequests.add(runnable);     if (isFocusTransferReady()) {       flushIdleRequests();     }  else {       if (needsRestart) {         restartIdleAlarm();       }     }   } } )
log.severe("Change Set " + toString(false) + " failed.  Error: "+ e.getMessage())
Timber.v(e,"Authentication exception for new token, permanent error assumed")
new ToolTip(new ToolTipLine(StringUtils.localize("tip.tool.add")))
sep < 0 || sep > j
selenium.isElementPresent("link=Control Panel")
AUTH_BYTE=0x00
moduleComponentSelector.getModule()
currentModelTransform=renderable.modelTransform
new StreamingModeExecutionState(NameContextsForTests.nameContextForTest(),"testState",null,NoopProfileScope.NOOP,null)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
return true; 
System.nanoTime()
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
testTLS(Cert.CLIENT_PEM_ROOT_CA,Trust.SERVER_JKS,Cert.SERVER_JKS,Trust.CLIENT_PEM_ROOT_CA).requiresClientAuth().serverUsesCrl()
Thread.sleep(100)
new Paint()
PendingIntent.getActivity(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
Integer.parseInt(st.nextToken())
setServiceForegroundInnerLocked(r,id,notification,0)
match(rule,goodSentence.getSource(),goodSentence.getTarget(),srcTool,languageTool)
depthError("modelZ")
entry.getValue().getIdentifiesControllerService() != null && props.get(entry.getKey()) != null
new TextField<String>(JMSConfiguration.GROUP_KEY,String.class)
mState != STATE_PREPARE && mState != STATE_FINISHED
mChildrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
Thread.sleep(1000)
EntityRegistry.registerGlobalEntityID(entityClass,entityName,id,background,foreground)
TelephonyManager.getDefault().getCurrentPhoneType()
ImmutableSet.<String>builder().add(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JOURNAL_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ,SAVEDSEARCHES_CREATE,SAVEDSEARCHES_EDIT,SAVEDSEARCHES_READ,CLUSTER_CONFIG_ENTRY_READ)
FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY)
new OptionValue<>(60.0D)
BodyExtractor<Mono<MultiValueMap<String,String>>,ServerHttpRequest>
expert == null
FileTemplateManager.getDefaultInstance()
U
invocation.pendingResponse != null
child.getMeasuredWidth()
person.getPersonType() == Person.PersonType.USER || person.getPersonType() == Person.PersonType.VIEWER
attribute.getDefinition().getMarshaller()
lib.returnStringVarArgs2("","Test")
lastPos > mBoundPos
TimeoutUtil.sleep(1500)
new IndexWriter(dir,anlzr,true,IndexWriter.MaxFieldLength.LIMITED)
new SortField(fieldName,nullStringLastComparatorSource,true)
++length >= maxFieldLength
mParent == null
"https".equals(protocol) || "wss".equals(protocol)
listAdapter.notifyDataSetChanged()
1
mAccessibilityController.isAccessibilityEnabled()
new UnsatisfiedLinkError(msg)
patternLen == 0 || nameIndex >= nameLen
highlighter.getTargetArea() != HighlighterTargetArea.LINES_IN_RANGE || myDocument.getLineNumber(highlighter.getEndOffset()) < myDocument.getLineCount() - 1
sreq.getRequestURI()
testClosureFunction("goog.isArray",ALL_TYPE,ARRAY_TYPE,ALL_TYPE)
RecentsVerticalScrollView.super.removeView(view)
logger.warn("Couldn't write to file: " + filename)
defaultMavenProfile.setOutputRelativeToContentRoot(true)
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_DOWN,x,y,0)
editedGroup != null && editedGroup.getClass() == ExplicitGroup.class
appOpsManager.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
mainSize <= size
csFoldingEnabled.getSelection()
MimeUtility.DEFAULT_ATTACHMENT_MIME_TYPE.equalsIgnoreCase(contentType)
Throwable e
new MaterializingOperator(operatorContext,sourceTypes)
String fsUuid
stream2.getId()
lp.viewType == ITEM_VIEW_TYPE_HEADER_OR_FOOTER
items[17]
!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) || !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)
myNameField.getFocusableComponent()
addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
dir.mkdirs()
!newDefaultSubIdObj.equals(mDefaultSubId)
nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
"Skipped invalid content exclude pattern: " + excludeExp
possibleCenters.elementAt(i)
Short.parseShort(param.getValue())
new String(actualKeyBytes,StandardCharsets.UTF_8)
new RuntimeException(e.getMessage(),e)
getIntent().getAction() == null && savedInstanceState == null
crashInfo != null && crashInfo.durationMillis != -1
ir.mHandler != null && ir.mImageListener != null
mMccStr == null
views.html.search.noresults.render(currentUser(),q,searchResult,null)
Localization.menuTitle("File")
assertEquals(3,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())
type.getDeclaredConstructor()
imageView.setImageDrawable(null)
mPathBitmap == null || mPathBitmap.getWidth() != mViewPortHandler.getChartWidth() || mPathBitmap.getHeight() != mViewPortHandler.getChartHeight()
isDoubleCategory(typeRe)
currentFileContext.get(BindingContext.FILE_TO_NAMESPACE,currentFile)
lock.unlock()
SCAN_STATUS_PARTIAL=1
offlineTableConfig == null || offlineTableConfig.getValidationConfig() == null
not(equalTo(tcp22.getPort()))
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
{BOOLEAN,BOOLEAN_ARRAY,DATE,DATE_ARRAY,DOUBLE,DOUBLE_ARRAY,FLOAT,FLOAT_ARRAY,INTEGER,INTEGER_ARRAY,LONG,LONG_ARRAY,NUMBER,NUMBER_ARRAY,SHORT,SHORT_ARRAY,STRING,STRING_ARRAY,STRING_ARRAY_LOCALIZED,STRING_LOCALIZED}
@Nullable
r.curApp != null && r.curApp.curReceiver == r
fulfillmentAmount.compareTo(new BigDecimal(0D)) == 0 || band.getResultAmount().compareTo(fulfillmentAmount) <= 0
indexNameExpressionResolver().concreteIndexNames(state,IndicesOptions.lenientExpandOpen(),HistoryStore.INDEX_PREFIX + "*")
if (myUnqualifiedOrLocalResolve) {   final PsiElement topParent=JSResolveUtil.getTopReferenceParent(myParent);   localProcessor=new SinkResolveProcessor<ResolveResultSink>(myReferencedName,myRef,new ResolveResultSink(myRef,myReferencedName)){     @Override public boolean needPackages(){       if (myParent instanceof JSReferenceExpression && topParent instanceof JSImportStatement) {         return true;       }       return super.needPackages();     }   } ;   localProcessor.setToProcessHierarchy(true);   JSReferenceExpressionImpl.doProcessLocalDeclarations(myRef,myQualifier,localProcessor,true,false,null);   PsiElement jsElement=localProcessor.getResult();   if (myQualifier instanceof JSThisExpression && localProcessor.processingEncounteredAnyTypeAccess() && jsElement != null) {     localProcessor.getResults().clear();     jsElement=null;   }   if (myQualifier == null) {     final JSReferenceExpression namespaceReference=JSReferenceExpressionImpl.getNamespaceReference(myRef);     ResolveResult[] resolveResultsAsConditionalCompilationVariable=null;     if (namespaceReference != null && (namespaceReference == myRef || namespaceReference.resolve() == namespaceReference)) {       if (jsElement == null && ModuleUtilCore.findModuleForPsiElement(myRef) == null) {         return new ResolveResult[]{new JSResolveResult(myRef)};       }       resolveResultsAsConditionalCompilationVariable=resolveConditionalCompilationVariable(myRef);     }     if (resolveResultsAsConditionalCompilationVariable != null && resolveResultsAsConditionalCompilationVariable.length > 0 && (jsElement == null || resolveResultsAsConditionalCompilationVariable[0].isValidResult())) {       return resolveResultsAsConditionalCompilationVariable;     }   }   if (jsElement != null || localProcessor.isEncounteredDynamicClasses() && myQualifier == null || !localProcessor.processingEncounteredAnyTypeAccess() && !localProcessor.isEncounteredDynamicClasses()) {     return localProcessor.getResultsAsResolveResults();   } }  else {   final QualifiedItemProcessor<ResolveResultSink> processor=new QualifiedItemProcessor<>(new ResolveResultSink(myRef,myReferencedName),myContainingFile);   processor.setTypeContext(JSResolveUtil.isExprInTypeContext(myRef));   JSTypeEvaluator.evaluateTypes(myQualifier,myContainingFile,processor);   if (processor.resolved == QualifiedItemProcessor.TypeResolveState.PrefixUnknown) {     return dummyResult(myRef);   }   if (processor.resolved == QualifiedItemProcessor.TypeResolveState.Resolved || processor.resolved == QualifiedItemProcessor.TypeResolveState.Undefined || processor.getResult() != null) {     return processor.getResultsAsResolveResults();   }  else {     localProcessor=processor;   } } 
type.getDeclaredConstructor()
serviceTester.systemRunning()
httpResponseCode != 204
i < size
log.logError(BaseMessages.getString(PKG,"JobUnZip.MoveToDirectoryEmpty.Label"))
Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath,ufsPath,mountOptions)
rc.tiles.size() > 35 && rc.getSubRegions().size() > 0
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_ztrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
drawable != null
@NotNull Id getOneOfHeads(); 
mFinishing && mSupportHardware && mHwCenterX != null
outputDirectory="."
CloudJettyRunner lastJetty=null; 
!trans.isFinished() && !parentJob.isStopped() && trans.getErrors() == 0
rep.saveJobEntryAttribute(id_job,getID(),"success_condition",getSuccessConditionCode(successCondition))
state == AsyncState.DISPATCHING || state == AsyncState.MUST_DISPATCH
log.error("Exception while processing message: " + e,e)
Localization.menuTitle("BibTeX")
ortho(-width / 2,+width / 2,+height / 2,-height / 2,cameraNear,cameraFar)
importData ? 4 : 3
scheduleRemoveStartingWindowLocked(wtoken)
ContainerUtil.newLinkedHashSet(actions)
schemaField.createField(readableValue,1.0f)
mCaCerts != null && mCaCerts.length > 0
canonicalURI.normalize().getRawPath()
FastMath.min(origin,num.floatValue())
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
debugRootView.addView(button)
(outputFolder + File.separator + modelFolder).replace("/",File.separator)
assertEquals(2,r.getProperties().size())
configureAtmosphereInterceptor(scFacade)
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_SEGMENTS))
out.writeInt(sampleCount)
mSyncStatus.valueAt(i)
ToolUtils.sleepIgnoreInterrupt(30000)
bar.getValue() >= 0
reportsE.appendChild(reportE)
@Nullable @Override public KtTypeReference getContentElement(){   return findChildByClass(KtTypeReference.class); } 
mForgotPatternButton != null && mForgotPatternButton.getVisibility() == View.VISIBLE
logger.warn("{}",builder)
public PhotoSize getThumb(){   return thumb; } 
SwingUtilities.invokeLater(new Runnable(){   public void run(){     if (checkForRejectOrByPass(command,forced,result))     return;     if (myRequestFocusCmd == command) {       myRequestFocusCmd=null;       command.run().doWhenDone(new Runnable(){         public void run(){           LaterInvocator.invokeLater(new Runnable(){             public void run(){               result.setDone();             }           } );         }       } ).doWhenRejected(new Runnable(){         public void run(){           result.setRejected();         }       } );       restartIdleAlarm();       if (forced) {         myForcedFocusRequestsAlarm.addRequest(new Runnable(){           public void run(){             setLastEffectiveForcedRequest(null);           }         } ,250);       }     }  else {       rejectCommand(command,result);     }   } } )
ObjectAnimator.ofFloat(target,ALPHA,INVISIBLE,VISIBLE)
getDefaultSystemHandlerActivityPackageLPr(deviceProvisionIntent,userId)
ParceledListSlice<ActivityManager.RecentTaskInfo>
nodeVersion.onOrAfter(Version.V_5_3_0_UNRELEASED)
new ArrayList<>(2)
updateChildren()
ExceptionUtils.getStackTrace(th)
result.getReceipt().getEnergyTotal()
getSupportFragmentManager().beginTransaction().add(R.id.fragmentContainer,new FirstUsageWelcomeFragment(),FirstUsageWelcomeFragment.TAG).commitAllowingStateLoss()
Slog.w(TAG,"Session failed to close due to remote exception",e)
Math.max(leftLen,rightLen)
future.isDone()
myEditor.getBackgroundColor()
in.getVersion().onOrAfter(Version.V_5_4_0_UNRELEASED)
fieldTree.isStandalone()
LOG.warn("Ignoring duplicate class " + className)
CACHE.findOrInsert(classLoader,new TypeCache.SimpleKey(type,additionalInterfaces),new Callable<Class<?>>(){   @Override public Class<?> call() throws Exception {     return new ByteBuddy().with(new NamingStrategy.SuffixingRandom("SpockMock")).ignore(none()).subclass(type).implement(additionalInterfaces).implement(ISpockMockObject.class).method(any()).intercept(MethodDelegation.withDefaultConfiguration().withBinders(Morph.Binder.install(ByteBuddyInvoker.class)).to(ByteBuddyInterceptorAdapter.class)).transform(Transformer.ForMethod.withModifiers(SynchronizationState.PLAIN,Visibility.PUBLIC)).implement(ByteBuddyInterceptorAdapter.InterceptorAccess.class).intercept(FieldAccessor.ofField("$spock_interceptor")).defineField("$spock_interceptor",IProxyBasedMockInterceptor.class,Visibility.PRIVATE).make().load(classLoader).getLoaded();   } } ,CACHE)
Arg args
Log.w("RemoteViews","Cannot setOnClickPendingIntent for collection item " + "(id: " + viewId + ")")
c.getLiquid() == null || c.getLiquid().amount == 0
calleeAddress + ": jingle supported "
dy == 0
"Got ACTION_DEVICE_CHANGED from unexpected device: " + device
appearance.getFloat(attr,0)
new SimpleSourceInclusionScanner(testIncludes,testExcludes)
ELECTRON_BEAM_OFF_ANIMATION_DURATION_MILLIS=400
FileSystemMaster.class
constraintSystem.getTypeParameterDescriptors()
labels.size(0)
solrDocument2.getFieldNames()
computeRealHorizontalScrollRange()
activity.createTimeListPreference(settings.SAVE_TRACK_INTERVAL,SECONDS,MINUTES,1000,R.string.save_track_interval,R.string.save_track_interval_descr)
selenium.isElementPresent("link=Control Panel")
currentModelTransform=renderable.modelTransform
mService.disconnect(src)
(((float)bytes.get()) * 8) / 1000
Long.parseLong(strings[i])
stack.get(stack.size() - 3).longValueSafe()
Slog.e(TAG,message,th)
Exceptions.duplicateOnSubscribeException()
focusedTopActivity != null && focusedTopActivity.getStack().getStackId() != PINNED_STACK_ID
mSyncStatus.valueAt(i)
a.getDimension(attr,0)
NoSuchPackageException.class
bufferedBytes < maxBufferedBytes
assertEquals(12,beanCount)
Thread.sleep(1000)
stack.peek()
serializedSettings != null
Logger.getLogger(loggerName).getEffectiveLevel()
serialVersionUID=279799301
Generics.newTreeMap()
selenium.isElementPresent("link=Site Name")
assertBusy(() -> {   final Snapshot snapshot=new Snapshot("test-repo",snapshotId);   List<IndexShardSnapshotStatus.Stage> stages=snapshotShardsService.currentSnapshotShards(snapshot).values().stream().map(status -> status.asCopy().getStage()).collect(Collectors.toList());   assertThat(stages,hasSize(shards));   assertThat(stages,everyItem(equalTo(IndexShardSnapshotStatus.Stage.DONE))); } ,30L,TimeUnit.SECONDS)
getTupledSet()
topLevelBuildData.getJenkinsGitHubURL()
LoggerSink.class
interceptor.doIntercept(invocation)
setInputMethodEnabledLocked(info.getId(),true)
callback.onDownloadFailure(0,0)
widthRatio > 0
Throwable e
log.infof("started ResourceAdapterService %s",context.getController().getName())
mDataAuthorities == null || data == null
new InetSocketAddress("localhost",0)
new WeightedRandomChestContent(item,min,max,weight)
!mScreenOnEarly
latch.endLatch.await(800,TimeUnit.MILLISECONDS)
selenium.isElementPresent("link=Control Panel")
user2.id()
Arrays.asList(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
nativeLinkable.getBuildTarget()
DefaultCacheKeysFactory.staticCreateNaturalIdKey(naturalIdValues,persister,session)
new Paint()
clazz.isPrimitive() || clazz.isArray() || desc.getSerialVersionUID() == 0
assertEquals(Service.State.FAILED,service.state())
gatecoinOrder.getSide()
mDateView.setTypeface(Typeface.SANS_SERIF,Typeface.BOLD)
hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))
new Packet(data,operation.getPartitionId())
imageView.setImageDrawable(drawable)
assertThat(map).containsExactly(p)
parent.getRegionNameAsString()
Throwable e
resourceTableStream.readFully(tableBytes,0,(int)alignedSize)
mDisplay.getRealMetrics(mDisplayMetrics)
new TreeScanner<Void,Void>(){   @Override public Void visitMethod(  MethodTree tree,  Void unused){     if (tree.getModifiers().getFlags().contains(Modifier.NATIVE)) {       hasAnyNativeMethods.set(true);     }     return null;   } } .scan(tree,null)
List<ConstructorCallExpression>
args.length > 0
mContentView.findViewById(android.R.id.list)
NotificationColorUtil.calculateContrast(foregroundColor,backgroundColor)
logger.info("--> checking snapshot status after it is done with empty repository")
video_st != null && video_st.metadata() != null
executeKeywords != null && executeKeywords.length > 0
128 * 1024
routes.BuffersResource()
type.getDeclaredConstructor()
twitter1.getRetweets(1021608606934822912L)
Mono.subscriberContext()
equalAny(Symbol.LT_GT,DefaultKeyword.LIKE)
Id
assertEquals(10,definitions.size())
proxy == null
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
@UnrelatedTwo
Slog.d(TAG,"showSaveLocked(): no mStructure")
AnnotatedElementUtils.findAnnotationAttributes(type,annotationType)
locations.isDefined()
loaded.getLoaded().getDeclaredConstructor()
config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
mAuthorities.valueAt(i)
BasicChaosInstanceSelector.class
usersFile.getPath()
DBG=true
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
MapRouteInfoMenu.isVisible()
previousResultRsmSet.getFirst()
String message
configure(COMPONENT,"cxf-jaxb")
getRequestMethod != null
intervalFraction * (nextValue - prevValue)
BATCH_SIZE=100
doTestWithRuntime()
obj.has("error")
String.format("BUG: %s changed score during rematch: %d -> %d",newNetwork.name(),score,newNetwork.getCurrentScore())
plus > 0
JDBCUtils.safeGetStringTrimmed(resultSet,"ROLENAME")
cSubmitLimit=10
MonitoringPortlet.isMonitoringPortletResourceRequest()
Throwable e
notifyAccessibilityStateChanged(AccessibilityEvent.CONTENT_CHANGE_TYPE_PANE_TITLE)
n.extras.getCharSequence(Notification.EXTRA_TITLE)
this.doIntrospect(extendedInterfaces,matchedInterfaces)
sep < 0 || sep > j
formsFound=true
protected BasicFontMetrics fontMetrics; 
realm.checkIfValid()
holder.getListener().onCaptureSequenceCompleted(CameraDeviceImpl.this,requestId)
!isPartialUpdate || id.views == null
synchronized (mLock) {   for (int i=0; i < mVolumes.size(); i++) {     final VolumeInfo vol=mVolumes.valueAt(i);     if (vol.isVisibleForRead(userId) && vol.isMountedReadable()) {       final StorageVolume userVol=vol.buildStorageVolume(mContext,userId,false);       mHandler.obtainMessage(H_VOLUME_BROADCAST,userVol).sendToTarget();       final String envState=VolumeInfo.getEnvironmentForState(vol.getState());       mCallbacks.notifyStorageStateChanged(userVol.getPath(),envState,envState);     }   }   mSystemUnlockedUsers=ArrayUtils.appendInt(mSystemUnlockedUsers,userId); } 
123 + (USE_OLD_HISTORY ? 1000 : 0)
displayAttachmentNotSavedMessage()
sourceHeight > 0
!mIsPipRecentsOverlayShown || !mIsRecentsShown || mIsPipFocusedInRecent
entry.getHeader().getEventLength() * 6
(NotificationListener)null
ReferencesSearch.search(referenceTo,scope,true)
obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
T exception
nativeLibraryDir.getPath()
Integer.toHexString(realQuality)
jobLogText.getText()
DEBUG=false
dos.writeInt(valueBytes.length)
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
response.getRawStatusCode()
@Nullable
mCameraUser.submitRequest(request,false)
javaBeanSerializer.getFieldValues(javaObject,json)
Thread.sleep(1000)
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),mNotificationChannel.getImportance(),mSbn,null,null,null,null,null)
selenium.isElementPresent("link=Control Panel")
mInterpolator == null || mNativePtr == null
mDataAuthorities == null || data == null
updaterOrigina.getStateViewArray().unsafeDuplication(true)
Rule.DEFAULT_WEIGHT * 1.2
bindService(serviceIntent,conn,BIND_AUTO_CREATE | BIND_NOT_FOREGROUND)
dataSourceContainer.getDriver().getFullName()
lineArgs[4]
type.isEmpty()
selenium.isElementPresent("link=Control Panel")
flyway.setLocations("db.migration","com.googlecode.flyway.sample.migration")
el.classNames()
toEventData(key)
first > 0 && first < listApp.size()
server.addBean(new ErrorHandler(){   @Override protected void handleErrorPage(  HttpServletRequest request,  Writer writer,  int code,  String message) throws IOException {     writer.write("<!DOCTYPE<html><head><title>Error</title></head><html><body>" + code + " - "+ HttpStatus.getMessage(code)+ "</body></html>");   } } ,false)
e.printStackTrace(err)
findKeyFromPubKey(recipient)
new String(byteArrayOutputStream.toByteArray(),"UTF-8")
_hint != null || _snapshot
JBSplitter pane=(JBSplitter)getComponent(0); 
String assetName
registerForAllMatchingVersions(level -> UnsupportedFeaturesUtil.raiseHasNoArgsUnderFinally(node,level)," not support this syntax. Raise with no arguments can only be used in an except block",node,null)
getLocalPort()
this.args.getNetNodeId()
success=false
target.getText()
resources.getDimensionPixelSize(R.dimen.close_handle_height)
mImage.getFrameCount() > 1
config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString())
TypeResolver.resolve(channelTypeUID,locale)
localCache.put(name,cacheEntry)
builder().experimentalAnalysisTestingImprovements(false).experimentalCcSkylarkApiEnabledPackages(ImmutableList.of()).experimentalEnableAndroidMigrationApis(false).experimentalEnableRepoMapping(false).experimentalRemapMainRepo(false).experimentalPlatformsApi(false).experimentalStarlarkConfigTransitions(false).incompatibleBzlDisallowLoadAfterStatement(false).incompatibleDepsetIsNotIterable(false).incompatibleDepsetUnion(false).incompatibleDisableDeprecatedAttrParams(false).incompatibleDisableObjcProviderResources(false).incompatibleDisallowConflictingProviders(true)
maker.getTaggedData(RESERVED_FOR_LOGBUILDER_LATENCY_MILLIS)
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
writeString(writer,fieldName,String.valueOf(reader.getFloat()))
privateDataManager == null
_buildTemplateWithGradle("npm-jquery-portlet","jquery-dependency-management","--dependency-management-enabled")
new DSXOrder(pair,type,new BigDecimal("0.1"),new BigDecimal("900"),0,DSXOrder.OrderType.limit)
buffer.put(indices,offset,count)
config.setPort(25668)
id=30
commitBatchSize=100
context.setItemsToShow(namedElements)
Arrays.asList("jar","ejb-client","war","rar","ejb3","par","sar","wsr","har","app-client")
BeanParamUtil.getInteger(contact,actionRequest,"prefixId")
config.getEndTime()
mc.theWorld.getScoreboard().getPlayersTeam(player.name)
reportNotAnnotatedInterfaces=true
Numeric.toHexStringWithPrefixSafe(filterId)
spawnSettings.containsKey(id)
LOGGER.error("Error with XML parser configuration",e1)
response != null && response.getBitmap() != null
contentType != null && charset == null
assertClusterSizeEventually(2,nodes[0])
!allowPrivate.isNull()
child.getProperties().isStreamPartitionedOn(partitioningRequirement)
mAttributes.getAllFlags()
new ArrayList<Data>(entries.size())
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED) || ctTypeStr.equals(ContentType.MULTIPART_ALTERNATIVE)
logger.debug("The GENA Subscription for serviceID {} ended for device {}",subscription.getService().getServiceId(),subscription.getService().getDevice())
activityNdx <= topActivityNdx
mUiHandler.removeCallbacks(pae)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ctrmm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
createFromResourceStream(null,null,is,srcName,null)
mFile.getStoragePath()
mappingData.wrapperPath.setString("")
telephony.isOffhook(getOpPackageName())
DBG=false
trip ? (val & 0x3F) : 63
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
LOGGER.isDebugEnabled()
privObj.getObjectName().equals("masking_acid_no_masking") || privObj.getObjectName().startsWith("masking_acid_no_masking_n")
Set<Integer>
javaProject.getAllPackageFragmentRoots()
mSyncStatus.valueAt(i)
fb.limit()
new IOException(targetException)
operation == RESTORE_OPERATION || operation == BACKUP_OPERATION
outLatch.startLatch.await(400,TimeUnit.MILLISECONDS)
mPressedView != null && mPressedView.getBackground() != null
if (override) {   sb.append("\" !important;"); }  else {   sb.append("\";"); } 
t.start()
BLOCKED_ADDR_QUEUE.remove(i)
new ConcurrentHashMap<String,RootBeanDefinition>(256)
connection.setConnectTimeout(1000)
ObjectAnimator.ofFloat(mView,"alpha",1f,dimAlpha)
Long.toString(arr[doc])
node.hasDefined(Constants.ALIAS)
getLookupString()
getConnectTimeout()
LOGGER.warn("Could not execute delete",ex)
layout.createFolder(BOTTOM_BOTTOM_LEFT,IPageLayout.BOTTOM,0.7f,FOLDER_NAVIGATION)
@Mock private PanProfile mPanProfile; 
Throwable e
e instanceof IOException || e.getCause() instanceof IOException
new Server()
FileUtil.join(portalConfiguration,compileOnlyConfiguration,sourceSet.getRuntimeClasspath(),portalTestConfiguration)
getOriginalAmount().subtract(remainingAmount)
super((JFrame)null,JMeterUtils.getResString("search_tree_title"),false); 
logger.info(log)
log.info("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
new TestCaseGeneratorImpl(true,true)
selenium.isElementPresent("link=Control Panel")
renderer.rect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
log.warn("Couldn't get resource: " + filename)
statistics.addPutTimeNanos(System.nanoTime() - start)
DEBUG=false
type.copyFrom(other.getType())
type.getDeclaredConstructor()
d instanceof URLDetail
dateTimeFormatter.format(value)
thirdMessageReceived.await(60,TimeUnit.SECONDS)
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,newDeviceState,prevDeviceState)
InetAddress.getByName("0.0.0.0")
new ConnectionException(sm.getString("http2Parser.processFrameHeaders.decodingFailed"),Http2Error.COMPRESSION_ERROR)
activity instanceof AstridActivity && ((AstridActivity)activity).getFragmentLayout() != AstridActivity.LAYOUT_SINGLE
mMediaRouter.addCallback(MediaRouter.ROUTE_TYPE_REMOTE_DISPLAY,mMediaRouterCallback,MediaRouter.CALLBACK_FLAG_PASSIVE_DISCOVERY)
mImm.hideStatusIconInternal(mToken)
fields != null && fields.size() > 0
tracesDir.mkdirs()
DiagnosticType.disabled("JSC_TOO_MANY_TEMPLATE_PARAMS","{0}")
addDaysAndCheckForCompletion(2,NextEvent.PAYMENT_ERROR)
id.provider != null && id.provider.info != null
mNavigationBarView.getPaddingLeft()
!(receiver instanceof GroovyObject) || ((GroovyObject)receiver).getMetaClass() != metaClass
mappers.mapper().searchQuoteAnalyzer()
wZipFilename.getText()
mDataAuthorities == null || data == null
WaypointDialogHelper.showWaypointsDialog(mapActivity)
mPtr != 0L
mSelector.setHotspot(x,y)
myEditor.getBackgroundColor()
selection.getFiles()
Map<String,String>
AsteriskActionEnum.valueOf(action)
telephony.isRinging(getOpPackageName())
new StringBuilder(734)
!query.getDimensionSpec().preservesOrdering()
verifyAttributes(decoder,binary("232302004200000880316890202968001e02582d00000000000000050000320000018901920000001dc1e2001601081154255d0202005a0053875a00a57e5a00af80"))
IOException ex
TelephonyManager.getDefault().getCurrentPhoneType()
resolve(type,true,false,true)
popupWindow.setContentWidth(menuWidth)
System.getProperty("line.separator")
sliceInput.getRetainedSize()
PortalTopLevelBuildData portalTopLevelBuildData=getBuildData(); 
LISTEN_RADIO_POWER_STATE_CHANGED=0x00800000
paramDefines.hashCode()
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,0,1,1,1,1,1,1,3,3,3,3,3,3,3,5,0,3,2,3,1,1,3,3,1,1,0,4,3,3,5,5}
entry.rxBytes == 0 && entry.txBytes == 0
parent.getOuterClass()
gatherDisableActionsLocked(mCurrentUserId)
TimeUtils.millis()
HtmlUtil.escape(_href)
validatePropertyElement(propertyElement,filePath)
loaded.getLoaded().getDeclaredConstructor()
mPrivateInput == null || mReplyHeader.responseCode == -1
refreshRotationLockTile()
Event.PREFIX_TEMP + i
mFrameTransformation.printShortString(pw)
new KettleRowException("Couldn't find hop '" + from + "' to read from")
/**   * Returns the next pseudorandom  {@link ArrayValue} of local-time elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of local-time elements.  */ public LocalTimeArray nextLocalTimeArray(){   LocalTime[] array=nextLocalTimeArrayRaw(minArray(),maxArray());   return Values.localTimeArray(array); } 
LOGGER.isDebugEnabled()
ObjectAnimator.ofFloat(mView,"alpha",1f,dimAlpha)
15 * 60 * 1000
JSONValue.parseWithException(isr)
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
name == null || name.isEmpty()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ctrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
DataBufferUtils.read(channel,this.bufferFactory,3)
functionFactory.expm1(iX)
boundary.endsWith("\"")
case 5: 
parsed && name.length() > 0
log.debug("Can't check auto-commit state",e)
id=16
hasFocus() && showClearButton && !TextUtils.isEmpty(getText())&& isEnabled()
CommonBundle.getWarningTitle()
log.debug("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
!"".equals(callRingtone.canPlayType("audio/ogg;"))
tagService.getTagsAsString(task.getId(),true)
callback.onPulseFinished()
jdk.getHomeDirectory() == null || jdk.getBinPath() == null
SC_FILE_SIZE_EXCEPTION=493
selenium.isElementPresent("link=Control Panel")
assertEquals(13,beanCount)
String message
enabled=false
!condition.isEmpty()
!messageReference.equals(account.getUuid(),folder,uid)
mValues[8]
Log_OC.d(TAG,"onSaveInstanceState()")
si.deliveryCount > 1
Drawable drawable
firstWakeup != null && mNextWakeup != firstWakeup.start
@Nullable Object value
into.get(j)
activityOptions != null && activityOptions.getAnimationType() == ActivityOptions.ANIM_SCENE_TRANSITION
new AtomicBoolean(true)
Utils.field(value)
person.getPersonVoidReason()
field != null && !(field instanceof PsiEnumConstant)
rejectedPromise(new RuntimeException("Cannot find appropriate breakpoint type"))
simpleRecyclerViewAdapter.insertFirst("rand added item")
retryHandler.onComplete(results)
mState == STATE_UNINITIALIZED
Trans != NO_TRANSPOSE
log.debug("In OSGi: using programmatically wired maven parser")
wordDetector.getCursorOffset()
enter && hasWindowFocus() && isFocused()&& isVisibleToUser()
parameters == null || parameters.length == 0
endpoint.expectedMinimumMessageCount(1)
internedParseStringCharacters(innerText)
tnCount=70
/**   * {@inheritDoc}   */ @Override public void stop() throws IgniteException { } 
logger.debug("TuneIn service not found")
from >= to
telephony.getNetworkTypeForSubscriber(subId,getOpPackageName())
busHandler.pushExpectedEvents(NextEvent.CHANGE,NextEvent.INVOICE,NextEvent.NULL_INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
StringBuilder resultPath=new StringBuilder(DefaultGroovyMethods.join(config.getClasspath(),File.pathSeparator)); 
buildMode.getBuildMode()
mSite.getSpaceAllowed()
pathParameterMap != null
mEditText.append(mValue)
Math.min(DataModule.DISK_CACHE_SIZE,Integer.MAX_VALUE)
Boolean.parseBoolean(context.getInitParameter(VALIDATE))
~(1L << n)
registerError(expression,expression)
mouse().pressAt(0,0)
methodName.equalsIgnoreCase("scan")
mGnssCallback != null
new AlertDialog.Builder(mContext).setMessage(R.string.error_disable_esim_msg).setTitle(R.string.error_disable_esim_title).setCancelable(false).setPositiveButton(R.string.ok,null)
DEBUG=false
batteryVp > high
createDouble(buffer.length(),init,workspace)
analysis.getTypeWithCoercions(aggregate)
cacheFb.setMaxEntriesLocalHeap(5)
getConnectTimeout()
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0,UserHandle.USER_CURRENT)
context.getOpPackageName()
mAttributes.getAllFlags()
HashMap.class
assertThat(messages).isNotNull().isNotEmpty().hasSize(53)
processGoType(resolveType,processor,state)
setTimeToIdleSeconds(Long.valueOf((String)cacheSettings.get("timeToIdleSeconds")).longValue())
counter > max
e.toString()
!isSeekable() || position < firstFramePosition
a.getInteracting().equals(actor)
size * 1.8f
DensityUtil.dpToPx(100,this)
volume.getType() == VolumeInfo.TYPE_PUBLIC && volume.getMountUserId() == userId
ByteBuffer audioData
FastMath.min(origin,num.floatValue())
this.saveTotalNetWeight(1L)
stores.containsKey(name)
new LinkedList<ReleaseStep>(attempted)
Trans != NO_TRANSPOSE
realm.checkIfValid()
PaginationRequest.of(10,1)
assertTrue(false)
"Error Log is full, consider increasing " + ERROR_BUFFER_LENGTH_PROP_NAME
width <= 0
PendingIntent.getActivity(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
new StringBuilder(245)
sysPs != null && sysPs.pkg != null
UURIFactory.getInstance(curi.getUURI(),attrValue)
docDisplay_.getFileType().isR()
r.thread != null && !r.isolated
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
/**   * Returns a wrapper around  {@code ciphertextDestination}, such that any read-operation via the wrapper results in AEAD-decryption of the underlying ciphertext, using  {@code additionalData}as additional authenticated data. <p>The returned InputStream may support  {@code mark()}/ {@code reset()}, but does not have to do it --  {@code markSupported()} provides the corresponding info.<p>The returned InputStream supports  {@code skip()}, yet possibly in an inefficient way, i.e. by reading a sequence of blocks until the desired position. If a more efficient  {@code skip()}-functionality is needed, the Channel-based API can be used.  */ InputStream newDecryptingStream(InputStream ciphertextSource,byte[] associatedData) throws GeneralSecurityException, IOException ; 
parent.setAxisIndex(0)
trade.getType().equalsIgnoreCase("buy")
myTempDir.getPath()
i=1
mService.disableNetwork(netId,mContext.getOpPackageName())
UI_MODE_SERVICE.equals(name)
m.isReadBackupData()
isGreaterOrEqual(platformVersion,M)
mContext.sendBroadcast(intent)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
id=16513
support.isFlexUnit1Subclass(aClass)
Throwable err
DBG=false
(status & 0x00010000) != 0
public class XpathRegressionMultipleVariableDeclarationsTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=MultipleVariableDeclarationsCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionMultipleVariableDeclarationOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(MultipleVariableDeclarationsCheck.class);     final String[] expectedViolation={"4:5: " + getCheckMessage(MultipleVariableDeclarationsCheck.class,MultipleVariableDeclarationsCheck.MSG_MULTIPLE_COMMA)};     final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/TYPE/LITERAL_INT","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/TYPE/LITERAL_INT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=MultipleVariableDeclarationsCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionMultipleVariableDeclarationTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(MultipleVariableDeclarationsCheck.class);     final String[] expectedViolation={"4:5: " + getCheckMessage(MultipleVariableDeclarationsCheck.class,MultipleVariableDeclarationsCheck.MSG_MULTIPLE)};     final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/TYPE/LITERAL_INT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
config.memory || config.cipher != null
request.getPathInfo()
assertThat(pod).hasName(expectedId)
new ConstantTopologyChangeWorker(TOP_CHANGE_THREAD_CNT)
Modifier.isStatic(field.getModifiers()) || field.isSynthetic() && !field.getName().equals("this$0")
!onlyEnabled
ItemStack.areItemStackTagsEqual(stack,result)
getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)
new ModelNode().set(1L)
new QSDetailClipper(mDetail)
Long tillId
dest.writeInt(mSubId)
mSyncStatus.valueAt(i)
Debug.logv(msg,args)
createMigrationProfile(managerEx,null,null)
asList(CUBRID,DERBY,FIREBIRD,ORACLE,SQLITE,SQLSERVER,SYBASE)
Thread.sleep(1000)
Long.parseLong(id)
Thread.sleep(2000)
logger.trace("Error while matching regex [" + matcher + "] for string ["+ matched+ "] "+ pse.getMessage())
selenium.isElementPresent("link=Control Panel")
protected abstract T getThis(); 
structuralLock.isHeldByCurrentThread()
buildFullCategoryHierarchy(document,cache,categoryId,new HashSet<Long>())
reactContext.runOnUiBackgroundQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(),new File("idea/idea-completion/testData/handlers/basic/staticMembers"),Pattern.compile("^(.+)\\.kt$"),true)
g.events().stopLocalListen(lsnr,EventType.EVT_NODE_LEFT,EventType.EVT_NODE_FAILED)
JournalArticleLocalServiceUtil.addArticle(TestPropsValues.getUserId(),groupId,JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,JournalArticleConstants.CLASSNAME_ID_DEFAULT,0,StringPool.BLANK,true,JournalArticleConstants.VERSION_DEFAULT,titleMap,descriptionMap,content,ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey(),null,displayDateCalendar.get(Calendar.MONTH),displayDateCalendar.get(Calendar.DAY_OF_MONTH),displayDateCalendar.get(Calendar.YEAR),displayDateCalendar.get(Calendar.HOUR_OF_DAY),displayDateCalendar.get(Calendar.MINUTE),0,0,0,0,0,true,0,0,0,0,0,true,true,false,null,null,null,null,serviceContext)
allowedIdentifiersCheckDigitsInts[i]
selenium.isElementPresent("link=Control Panel")
pk.getColumnNameInSql()
ONE_MINUS_DST_ALPHA(7)
Optional.fromNullable(resourceManagementScheduler)
new ScheduledJob(job,jobName,delay,period)
RegexEngine.class
ast != null && ast.atnState != null
builder.addAddress(vpn6,128)
new LayerView(this,0x0f0000ff)
BackupManagerServiceInterface svc=mService; 
telephonyService.getMeid(0)
BLANK_LINES_AROUND_METHOD_IN_INTERFACE=1
new HashSet<>(0)
NotificationColorUtil.calculateContrast(foregroundColor,backgroundColor)
m.size()
BufferUtil.zeroBuffer(1)
JComponent component
enabled=true
type.getDeclaredConstructor()
conf.getRestBaseURL()
entry.rxPackets == 0 && entry.txPackets == 0
new SpannedString(new CustomSpannable(first),true)
EntityCacheUtil.putResult(TypeModelImpl.ENTITY_CACHE_ENABLED,TypeImpl.class,type.getPrimaryKey(),type)
anomalyFilter.containsKey(filterKey)
gavin.getStudentNumber()
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_CONF))
desc.getName()
assertTrue(runtimeOptions.isMonochrome())
mValues[8]
type.getDeclaredConstructor()
Throwable e
DEBUG=false
findDelegateForNewObject(name)
AssetTagFinderUtil.countByG_N(_scopeGroup.getGroupId(),assetTagName)
json.length() - 1
project == null || project.isDisposed()
Double.parseDouble(param.getValue())
stateAfter() == null || stateAfter().bci == FrameState.AFTER_BCI
mJobs.valueAt(i)
android.provider.Downloads.Impl.isStatusSuccess(statusCode)
_typeSettingsProperties.toString()
new ConcurrentHashMap<String,InjectionMetadata>(256)
appOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
Cli.buildCli("presto",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommand(Help.class)
(options & ActionBar.DISPLAY_HOME_AS_UP) != 0 ? VISIBLE : GONE
Assert.assertTrue(rule.appliesTo(builder.interval(new Interval("0500-01-01/2100-12-31")).build(),now))
isHandshaking(clientResult) || isHandshaking(serverResult)
this == NTI_ONLY
size=10
constraint.hasCondition()
n.doubleValue()
new UnsupportedOperationException(getClass().getName())
6 * width * height
rt != null && other != null
logger.debug("moveToStep[" + policy + "] ["+ index.getName()+ "]"+ currentStepKey+ " -> "+ nextStepKey)
new ConcurrentHashMap<Class<?>,Boolean>(256)
logError(message)
result.expectedMinimumMessageCount(1)
getResultHandler(result).handleResult(exchange,result).onErrorResume(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult -> getResultHandler(exceptionResult).handleResult(exchange,exceptionResult)))
annotation.authentication()
LOG.debug("Creating short circuit input stream for block {} @ {}",blockId,address)
gatherDisableActionsLocked(mCurrentUserId)
Thread.sleep(1000)
"com.google.android.talk".equals(callingPackage) || "com.google.android.quicksearchbox".equals(callingPackage) || "com.google.android.googlequicksearchbox".equals(callingPackage)
whitelist.addTags("span","hr","kbd","samp","tt","del","s","strike","u","details","summary")
edgeColumn.getIndex()
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
parentFile.isFile()
new CircularImportProblem(configClass,this.importStack,configClass.getMetadata())
Assert.assertEquals(getNotAllowedExceptionMessage("helloForNone"),e.getCause().getMessage())
new IllegalStateException("Result is already complete: succeeded")
index >= 0
requestHeaderRegex == null || requestHeaderRegex.length() == 0
assertEquals("Range for response status value " + result.getResponse().getStatus(),HttpStatus.Series.REDIRECTION,getHttpStatusSeries(result))
new PushNotificationReceiveJob(this)
Long.toString(localExpire)
lastUpdate.after(updated) || lastUpdate.equals(updated)
getPreferences().getBoolean(DEBUG_PREF,false)
internalCallContextFactory.createInternalCallContext(account.getId(),context)
_committedTo != lastCompletedOffset
mBluetoothLock.readLock().unlock()
getTestName(true)
selenium.isElementPresent("link=Control Panel")
LinkageError e
TRANSPORT_TRACE=false
testStatus.equals("FIXED") || testStatus.equals("PASSED") || testStatus.equals("SKIPPED")
@Internal
transaction.commitAllowingStateLoss()
writeRepeatedFixed64Impl(id,val)
(Long)123L
Configuration.getMs(PropertyKey.USER_FILE_WAITCOMPLETED_POLL_MS)
si.deliveryCount > 1
new ClassCastException("Return type " + returnType + " does not match result "+ result.getClass())
AeadWrapper.class
basicDLTest_Regression("./smalldata/gbm_test/alphabet_cattest.csv","alphabetRegression.hex",new PrepData(){   @Override int prep(  Frame fr){     return fr.find("y");   } } ,10,4.975570190016591E-6,DeepLearningParameters.Activation.Rectifier)
anyInt()
enabled=true
mCurrentVrCompositorService == null
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
return true; 
config.getOrcStreamBufferSize()
now.plusDays(3).withTimeAtStartOfDay()
getOrCreate(entry.getKey())
getActiveFgCall().getPhone().startDtmf(c)
id.provider != null && id.provider.info != null
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).switchOnError(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
block.localsLiveIn.andNot(block.localsLiveKill)
callback.onPulseFinished()
log.warn(sm.getString("contextConfig.role.link",link))
lc + lp
create.fetch(meta().getSchemas(),SQLDataType.VARCHAR,SQLDataType.VARCHAR)
mJobs.valueAt(i)
SKELETONS_VERSION=4
textRange.getEndOffset() <= ref.length()
model.getShadowConfig()
service.getId().equals(PublicizeConstants.GOOGLE_PLUS_ID) && mShouldHideGPlus
i >= 0
-Math.sin(Math.PI / 8)
GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
new ColorUIResource(0x7F6C00)
ExportImportConfigurationParameterMapFactoryUtil.buildFullPublishParameterMap()
mBackingBitmap.getWidth()
specBuilder.setDigests(KeyProperties.DIGEST_NONE)
score > 1.001
resources.getDimensionPixelSize(R.dimen.close_handle_height)
return 1906861161L; 
v3.getString()
meta.getEnclosure()
tags != null && tags.length > 0
/**   * Theater of Blood reward chest inventory (Raids 2)  */ THEATRE_OF_BLOOD_CHEST(612)
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
V
debugProcess.isDetached()
Math.abs(f) >= 65520
reviewer.putExtra("deckFilename",mDeckFilename)
getNumberOfJournalFiles() <= 4
selenium.isElementPresent("link=Control Panel")
V2=true
!isViewAncestorOf(focused,this) || distanceToView(focused) > 0
@Override public final DivideByOnConditionStep or(Condition c){   condition.addConditions(Operator.OR,c);   return this; } 
client.getTransport()
createRenderScript(true)
new SessionParams(layoutParser,RenderingMode.NORMAL,null,configGenerator.getHardwareConfig(),resourceResolver,layoutLibCallback,0,19,getLayoutLog())
getColors(which,TYPE_DARK)
DefaultCacheKeysFactory.staticGetNaturalIdValues(cacheKey)
mAttributes.getAllFlags()
baseKey.plusDays(addedBucketsLeft * interval)
getClassInternalName(exceptionType)
LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
_valid.remove(_parms._offset_column)
state != null && state.mTint != null
sendMessageAtFrontOfQueue(CMD_STOP_AP)
(PyQualifiedExpression)expression
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
DateFormat.getMediumDateFormat(context)
telephony.isOffhook(getOpPackageName())
new Path(tblDesc.getLocation(),Warehouse.makePartPath(addPartitionDesc.getPartSpec()))
request.getDueDate()
Exception e
mWM.removeViewImmediate(mView)
event.getTime() > currentPlayTime || event.getTime() == DURATION_INFINITE
Assert.assertEquals(21,Context.getAdministrationService().getAllGlobalProperties().size())
super.addPage(userId,nodeId,title,content,summary,minorEdit,serviceContext)
mMenuDrawer.isMenuVisible()
mContext.sendStickyBroadcastAsUser(mStorageFullIntent,UserHandle.ALL)
fr != null
mActiveStreamType == -1 || streamType != mActiveStreamType
TargetMinSubTotal=4000
checkCall(receiver)
standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
6 * width * height
Key<Long>
from > to
typeSettingsProperties.toSortedString()
getSQL()
oldOverride.addParameter("enabled","enabled")
nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
Configuration.getMs(PropertyKey.USER_FILE_LOAD_TTL)
mBiometricUnlock.stop()
U
assetDisplayPageEntry.getLayoutPageTemplateEntryId()
setBuffer(Type.Index,2,new short[]{0,1})
expiresOn.getTime()
blackHoleGenerator.getDeclaredConstructor()
selenium.isElementPresent("link=Control Panel")
XContentType.JSON.mediaType()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,policy,IndexWriter.MaxFieldLength.LIMITED)
@LargeTest
invoiceDao.create(invoice,1,true,context)
Network.connectToServer(TestChatServer.NAME,TestChatServer.VERSION,host,TestChatServer.PORT)
callTimeoutMillis=3000
partId == null
whitelist.addAttributes("img","align","alt","height","src","title","width")
HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
partStore.finishSave()
Trans != NO_TRANSPOSE
timeout >= 0
Utils.writeUtf8File(parentDir.getAbsolutePath(),FILE_NAME,xmlBuffer.toXML())
!JDBCUtils.safeGetBoolean(dbResult,"COLUMN_IS_NULLABLE")
BorrowablePath.notBorrowablePath(output.getUnchecked())
selenium.isElementPresent("link=Control Panel")
constructor.newInstance(conf,keyPrefix,options,writer,charset,fs)
mapper.getTypeFactory().constructType(InspectContainerResponse.class)
GetterUtil.getString(serviceReference.getProperty("javax.portlet.description"))
Math.abs(oldDist - dist) < 10
quoineTicker.getLastTradedPrice()
request.getPathInfo()
j++
MethodConstant.ofPrivileged(instrumentedMethod.asDefined())
Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
loaded.getLoaded().getDeclaredConstructor()
origin.absoluteValue().doubleValue() < complexNumber.absoluteValue().doubleValue()
mAdapter == null || !mIsAttached
state == null && obj.fieldsCount() > 0
POSITIVE_X(0)
display.getRealMetrics(dm)
DBG=false
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,policy,IndexWriter.MaxFieldLength.LIMITED)
vm.canGetInstanceInfo()
display.getRealMetrics(mDisplayMetrics)
mService.stopLocalOnlyHotspot(mContext.getOpPackageName())
declaringClass.getSimpleName()
processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())
loaded.getLoaded().getDeclaredConstructor()
childCalendarBooking.isMasterBooking() || ArrayUtil.contains(childCalendarIds,childCalendarBooking.getCalendarId())
camelContext.getComponent(component,false)
new DataRow(key,val,ver,partId,expireTime)
selenium.click("//li[4]/span/a/span")
new IndexWriter(indexStore,new SimpleAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
Validator.isNotNull(portletResource)
field.getFieldName().equalsIgnoreCase(s)
getBaseType()
accountHandle.getComponentName().flattenToString()
@Priority(5)
FRAME_STATS_COUNT=16
new Paint(Paint.ANTI_ALIAS_FLAG)
createRecord(value,now,expiryTime)
getStepIOMeta().getInfoStreams()
serializer.serializeInsert(metadata,entity,columns,values,subQuery)
assertThat(targetConnectionCount).isLessThanOrEqualTo(goodServerStats.getTotalRequestsCount())
MBTestUtil.addMessage(serviceContext.getScopeGroupId())
Assert.assertEquals(permissionEntity.getOptionalFields().size(),3)
out.writeInt(sampleCount)
@Override public Response example(String type,Object example){   throw new RuntimeException("Not implemented"); } 
public ArabicNormalizationFilter create(TokenStream input){   return new ArabicNormalizationFilter(input); } 
targetInfo != null && targetInfo.metaData != null
c == Integer.class || c == Integer.TYPE
reader.getType(reader.readSmallUint(protoIdItemOffset + RETURN_TYPE_OFFSET))
StateManagementUtils.createEndForkedExecutionMojoBinding()
ofSeconds(10)
this.internalNameMapping
!mIsPipRecentsOverlayShown || !mIsRecentsShown || mIsPipFocusedInRecent
String.format(Locale.ROOT,"%-15s: -",user)
id=19906
isDoubleCategory(typeRe)
artifactFilter == null || resolvedArtifacts == null
Throwable e
searchUICore.getSearchSettings().setEmptyQueryAllowed(true).setAddressSearch(true).setSortByName(false)
completion.switchOnError(ex -> handler.handle(exchange,ex))
buf.getUnsignedByte(buf.readerIndex() + 2)
/**   * Sender node ID.   */ private final GridNode sndNode; 
bb.get() == SEMICOLON_BYTE
timeToLive > 0
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
cursor == null
StatsLog.write(StatsLog.ANR_OCCURRED,app.uid,app.processName,activity == null ? "unknown" : activity.shortComponentName,annotation,(app.info != null) ? (app.info.isInstantApp() ? StatsLog.ANROCCURRED__IS_INSTANT_APP__TRUE : StatsLog.ANROCCURRED__IS_INSTANT_APP__FALSE) : StatsLog.ANROCCURRED__IS_INSTANT_APP__UNAVAILABLE,app != null ? (app.isInterestingToUserLocked() ? StatsLog.ANROCCURRED__FOREGROUND_STATE__FOREGROUND : StatsLog.ANROCCURRED__FOREGROUND_STATE__BACKGROUND) : StatsLog.ANROCCURRED__FOREGROUND_STATE__UNKNOWN)
addTexture(normal,"NormalMap",keyName)
new IllegalArgumentException(sm.getString("pojoMethodMapping.duplicateMessageParam",m.getName(),m.getClass().getName()))
ArraysUtil.toString(extensionArray)
fieldType instanceof PsiPrimitiveType || fieldType instanceof PsiArrayType
Math.round(ratio * 1000) / 1000f
final ImportControl root=ImportControlLoader.load(new File(getPath("import-control_complete.xml")).toURI()); 
mPointRealContainerLl.getChildAt(i).setSelected(i == newCurrentPoint)
m.getCurrentWaitingJobs()
m.getDeclaringClass()
new GridBag().setDefaultInsets(new Insets(0,0,DEFAULT_VGAP,DEFAULT_HGAP)).setDefaultWeightX(1).setDefaultWeightY(0)
odi.close()
IOUtils.closeQuietly(is)
selenium.isElementPresent("link=Control Panel")
found=false
serialVersionUID=1859629119
Log.w(TAG,"readStaticField(SYSTEM_SERVICE_MAP) from %s fail",e,baseContext.getClass())
endsWith("/home/source")
row == null || row.size() == 0
AbstractBeginNode beginNode=block.getBeginNode(); 
proxyRequest.getRegion()
rootView.getId()
mGnssCallback != null
bottomLeft.addPlaceholder(DatabaseBrowserView.VIEW_ID)
changeAffiliationByAdmin(jids,"owner")
assertEquals(13,beanCount)
Slog.w(TAG,"APK " + fileName + " has compressed dex code "+ entry.getName())
LOGGER.isDebugEnabled()
gavin.getStudentNumber()
popupWindow.setContentWidth(menuWidth)
columnSums.sum(1)
getChatWritePanel().getEditorPane().requestFocusInWindow()
logger.warn("Cannot parse " + str + " using 0 minutes")
mAuthorities.valueAt(i)
new AlphaNode(context.getNextId(),(AlphaNodeFieldConstraint)constraint,context.getObjectSource(),context.getRuleBase().getConfiguration().isAlphaMemory(),context.getRuleBase().getConfiguration().getAlphaNodeHashingThreshold())
preparedStatement.setNCharacterStream(paramIndex,tmpReader)
mController.setRingerMode(AudioManager.RINGER_MODE_VIBRATE,false)
formatter.print()
HttpClient.create().compress(true)
selenium.isElementPresent("link=Control Panel")
new Integer(0)
new StringBundler(5)
vehicleControl.createDebugShape(SceneApplication.getApplication().getAssetManager())
"Unknown id: " + id
Math.max(leftLen,rightLen)
tw.close()
telephony.getLteOnCdmaModeForSubscriber(subId,getOpPackageName())
assertEquals(70008,exchange.getIn().getBody().toString().length())
setIntegerPart(String.valueOf(integerPart))
new InputStreamReader(f,"UTF-8")
nestedSimpleIA.setContext(context)
new ContextName(name,null)
DLFileEntryTypeFinderUtil.filterCountByKeywords(_group.getCompanyId(),new long[]{_group.getGroupId()},StringPool.BLANK,true)
assertEquals(13,beanCount)
t.getMessage()
limitRows < 0
requestCode == LegacyEditorFragment.ACTIVITY_REQUEST_CODE_CREATE_LINK && data != null
Boolean.parseBoolean(attrValue)
Simple.forClass(value.getClass())
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
groupType == null || device.isGatewayExtras()
assertEquals("Two samples should have been collected",3,samples.size())
InputMethodManager.getInstance()
@ConditionalOnEnabledHealthIndicator("mail")
new GetExecutionVariableInstancesCmd(executionId,variableNames,true,locale,withLocalizationFallback)
target != null && !target.isEmpty()
ps.saveRelationship(rel)
headers.addValue("Vary")
selenium.isElementPresent("link=Control Panel")
Thread.sleep(1000)
authManager.refresh(conf,new HBasePolicyProvider())
iconSize * DisplayMetrics.DENSITY_HIGH >= availableHeight
toPreProcess.getFeatures().divi(maxRange - minRange + Nd4j.EPS_THRESHOLD)
(ConcurrentPublication)resourceByRegIdMap.get(registrationId)
@Override public S fillFromImpl(ModelMetricsBinomial modelMetrics){   super.fillFromImpl(modelMetrics);   r2=modelMetrics.r2();   logloss=modelMetrics._logloss;   AUC2 auc=modelMetrics._auc;   if (null != auc) {     AUC=auc._auc;     Gini=auc._gini;     String[] thresholds=new String[auc._nBins];     for (int i=0; i < auc._nBins; i++)     thresholds[i]=Double.toString(auc._ths[i]);     AUC2.ThresholdCriterion crits[]=AUC2.ThresholdCriterion.VALUES;     String[] colHeaders=new String[crits.length + 2];     String[] colHeadersMax=new String[7];     String[] types=new String[crits.length + 2];     String[] formats=new String[crits.length + 2];     colHeaders[0]="Threshold";     types[0]="double";     formats[0]="%f";     int i;     for (i=0; i < crits.length; i++) {       if (colHeadersMax.length > i)       colHeadersMax[i]="max " + crits[i].toString();       colHeaders[i + 1]=crits[i].toString();       types[i + 1]=crits[i]._isInt ? "long" : "double";       formats[i + 1]=crits[i]._isInt ? "%d" : "%f";     }     colHeaders[i + 1]="idx";     types[i + 1]="int";     formats[i + 1]="%d";     TwoDimTable thresholdsByMetrics=new TwoDimTable("Metrics for Thresholds","Binomial metrics as a function of classification thresholds",new String[auc._nBins],colHeaders,types,formats,null);     for (i=0; i < auc._nBins; i++) {       int j=0;       thresholdsByMetrics.set(i,j,thresholds[i]);       for (j=0; j < crits.length; j++) {         double d=crits[j].exec(auc,i);         thresholdsByMetrics.set(i,1 + j,crits[j]._isInt ? (Object)((long)d) : d);       }       thresholdsByMetrics.set(i,1 + j,i);     }     this.thresholds_and_metric_scores=new TwoDimTableV3().fillFromImpl(thresholdsByMetrics);     TwoDimTable maxMetrics=new TwoDimTable("Maximum Metrics","Maximum metrics at their respective thresholds",colHeadersMax,new String[]{"Threshold","Value","idx"},new String[]{"double","double","long"},new String[]{"%f","%f","%d"},"Metric");     for (i=0; i < colHeadersMax.length; i++) {       int idx=crits[i].max_criterion_idx(auc);       maxMetrics.set(i,0,idx == -1 ? Double.NaN : auc._ths[idx]);       maxMetrics.set(i,1,idx == -1 ? Double.NaN : crits[i].exec(auc,idx));       maxMetrics.set(i,2,idx);     }     max_criteria_and_metric_scores=new TwoDimTableV3().fillFromImpl(maxMetrics);   }   return this; } 
mTmpRect.height() > 0 && mTmpRect.width() > 0
new RuntimeException(e.getMessage(),e)
actual.currentContext()
statement.execute()
cbWhitelistExtra2.isChecked()
chargeUAh > 0 && level > 0
Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
new RuntimeException(e.toString())
mPhone.getContext().enforceCallingOrSelfPermission("android.permission.SEND_SMS","Sending SMS message")
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
new StringBuilder(238)
((Number)s.first()).doubleValue()
ColorProperties.getColor("primaryControlShadow")
revWalk.close()
new ChangesBrowser(project,null,Collections.<Change>emptyList(),null,false,false,null,ChangesBrowser.MyUseCase.LOCAL_CHANGES,null)
tag_names.getId("dc")
customResourceLocator(url)
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
!singleBccRecipientFromAccount
new NotSupportedException("getResultSetInfo() is not supported by this resource adapter as per spec 15.11.3")
mPanProfile.isProfileReady()
friendlyURL.equals(layout.getFriendlyURL(locale))
return _this; 
!mDreamsEnabledOnBatteryConfig
selenium.click("//li[4]/span/a/span")
ufsPath.toString()
new DefaultMemoryManager(totalMemory,numSlots,pageSize,true)
legacyValue.isDefined()
usage.getUsed()
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range(refElement)).descriptionAndTooltip(message)
element != null && PsiTreeUtil.isAncestor(node,element,true) && PsiTreeUtil.getParentOfType(element,PyRaiseStatement.class) != null
toArrayHelper(0)
type instanceof PsiClassType
mccMncs != null
_ddmStructureLocalService.fetchDDMStructure(structureId)
PropertyExtKt.getFoo("")
Preconditions.checkNotNull(blockWorker,"blockWorker")
result == JOptionPane.CANCEL_OPTION || result == JOptionPane.CLOSED_OPTION
fluidStack != null && fluidStack.getFluid() != null
gauge == null || gauge.getValue() == null
ProductOptionTranslationImpl.class
TicketGrantingTicket.class
"GET".equalsIgnoreCase(httpMethod)
expandableView.getIntrinsicHeight()
Character.isJavaIdentifierPart(c) || c == '\''
MapActivity.launchMapActivityMoveToTop(mapActivity)
selenium.isElementPresent("link=Control Panel")
@XmlAttribute(name="miterlimit") protected String miterlimit; 
page.getRetainedSizeInBytes()
mService.queryDisplayStatus(getCallbackWrapper(callback))
Log.e(TAG,"This will become an error",ex)
m.getDeclaringClass()
Timber.e("Cannot remove EXPUNGEd messages")
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) != 0
Simple.forClass(type)
mContext.startActivityAsUser(intent,null,UserHandle.CURRENT)
!isFullyCollapsed() && !mTracking && !mClosing
mapper.setAttributePrefix("")
value & 0xFF
selenium.isElementPresent("link=Control Panel")
isMoving || operationMode == Mode.MOVING
Integer.parseInt(stackIdStr)
collectionsTypeName != null
/**   * {@inheritDoc}  */ public Integer getFrom(){   return Integer.valueOf(from); } 
DEBUG_LOC
Log.d(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level+ " isActiveNetwork "+ isActiveNetwork)
super(1); 
m.getContent(InputStream.class)
cluster.getRexBuilder().makeCall(retType,calciteOp,childRexNodeLst)
agg.setBatchTimeout(2000L)
Exception e
rw.close()
assertThat(stack.selectChangelog("ISSUE-1")).isEmpty()
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
colon > 0
script.getBytes("UTF8")
n.floatValue()
mHwSession.isConfigFlagSet(flag,(int result,boolean value) -> {   halResult.value=result;   flagState.value=value; } )
LOG.warn("Error in response for blockId: " + recvMsg.getBlockId() + " message: "+ recvMsg.getStatus().getMessage())
selenium.isElementPresent("link=Control Panel")
mWM.isKeyguardLocked()
new StaticStringValuesReferenceProvider(false,"input","button","image","submit")
mStartActivity.task == null || mStartActivity.task == parent
value + MINIMUM_BACKLIGHT
dbManager.getDynamicPropertiesStore().saveAllowSameTokenName(1)
this.mTitle.compareToIgnoreCase(another.mTitle)
Math.max(clientCount,1)
assertEquals("deflate",dataFileStream.getMetaString("avro.codec"))
!mTextServicesManager.isSpellCheckerEnabled() || mTextServicesManager.getCurrentSpellCheckerSubtype(true) == null
loaded.getLoaded().getDeclaredConstructor()
assertMockEndpointsSatisfied()
column.getLocalDeletionTime() >= gcBefore
builder200.build()
adminPreferences.getBoolean(AdminPreferencesActivity.KEY_SELECT_SPLASH_SCREEN,true)
userImpFactor.addEqual(userFactors.row(userIdx,false))
Thread.sleep(1000)
isBetween(10500,12000,alt.getDistance())
synchronized (this) {   return (Class)classCache.get(name); } 
project.getTestDirs()
closed.get()
headers.getCommand()
new Configuration(true,false,Predicates.<NamespaceDescriptor>alwaysTrue())
new GroovyScriptDescriptor(this,scriptClass,place)
path.lastIndexOf(';')
startingWindow != null && ttoken.startingView != null
new OverflowPanelViewHelper(mContext,mIconTextSpacing)
resultsJSONObject.put("results",jsonObject)
new SortedList<>(entriesFiltered)
conceptToValidate.getUuid()
vals.length != _sparseLen
lp.type == WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL || lp.type == WindowManager.LayoutParams.TYPE_INPUT_METHOD
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY(),Gravity.TOP | Gravity.LEFT)
private static final String DATE_FORMAT_PATTERN="yyyy-MM-dd'T'HH:mm:ss.SSSXXX"; 
new FocusResultState(lockSucceeded,needsExposureMeasurement)
response.addHeader(WWW_AUTHENTICATE,value)
onDetachedFromWindow()
Class.forName(className,true,value.getClass().getClassLoader())
i=0
mChildrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
windowToken != null && !mHideLockScreen
ColorProperties.getColor("textColor")
columnType.equalsIgnoreCase("long") || columnType.equalsIgnoreCase("tinyint") || columnType.equalsIgnoreCase("smallint")|| columnType.equalsIgnoreCase("int")|| columnType.equalsIgnoreCase("bigint")
fs.renameFile(file,new File(file.getParent(),newName))
!dockOnTopOrLeft
CharSequence url
GL20.glUniform1fv(location,v)
inOrder.verify(mockAwareService).subscribe(any(),eq(clientId),eq(subscribeConfig),any())
Nd4j.zeros(1,size)
lock.isHeldByCurrentThread()
digitalRefreshInterval=10 * 1000
j < parameters.size()
serviceInfo.getRequiredServices() == null || serviceInfo.getRequiredServices().size() == 0
StringBuilder buffer=new StringBuilder(strings[i]); 
matrix.preApply(transform)
new ArrayList<>(3)
mNavigationBarView.getPaddingLeft()
new RuntimeConfigurationWarning("No attest runner found in selected interpreter")
getScheduledThreadPoolExecutor().scheduleWithFixedDelay(new Runnable(){   public void run(){     cleanup();   } } ,cleanupPeriod,cleanupPeriod,TimeUnit.MILLISECONDS)
return GCM; 
row.setBackgroundDrawable(getResources().getDrawable(R.drawable.comment_pending_bg_selector))
assertEquals(6,config.getMapConfigs().size())
this.evaluator.prepareRightObject(handle)
t.equalsIgnoreCase(type)
mCameraUser.submitRequest(request,false)
BufferUtils.disposeUnsafeByteBuffer(bytebuffer)
findAllAndRemove(query,null,collectionName)
UserHandle.of(mDeviceProvisionedController.getCurrentUser())
new UnsupportedOperationException("read-only")
firstChatPanel.getChatStatusIcon()
System.out.println()
width / 2.0f
attributes.getAllFlags()
selenium.click("//li[4]/span/a/span")
config.getMaxQueryMemoryPerNode().toBytes() <= maxMemory.toBytes()
MeasureSpec.makeMeasureSpec(myHeight,MeasureSpec.EXACTLY)
synchronized (this) {   return (Class)classCache.get(name); } 
BackupManagerServiceInterface svc=mService; 
LOGGER.warn("Could not execute delete",ex)
exception.getMessage()
element.getTextTrim()
mAutoScroller.autoScroll(-mHeaderOffset,mRefreshCompleteToDefaultScrollingDuration)
T[]
fragUtils.fragmentType()
spellParser.isParsing()
attributeDescriptor.getDependencies()
height / 2.0f
new IllegalStateException("Legacy advertising can't include TX power level in header")
log.logError(BaseMessages.getString(PKG,"JobUnZip.TargetFolderNotFound.Label"))
graphModel.getGraph().getNodeCount()
StringBuilder sb=new StringBuilder(); 
mEncoder.swithToHardEncoder()
i < 3
counter > max
loaded.getLoaded().getDeclaredConstructor()
view.setVisibility(View.VISIBLE)
getKey(companyId,repositoryId,dirName)
new Notification(R.drawable.stat_sys_phone,"Incoming call from: Imperious Leader",System.currentTimeMillis() - (1000 * 60 * 60* 24),"Imperious Leader","(888) 555-5038",null)
queryMixin.rightJoin(target)
attr.getNamespaceURI()
ref.getParentObject()
Settings.Secure.putStringForUser(cr,OWNER_INFO,"",userId)
amount.scale()
server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)
binary.getDisplayName()
plugin.getWorldEdit().handleArmSwing(player)
delta < 7000
next.getLabels().size(1)
mService.mHandler.obtainMessage(MSG_SYSTEM_UNLOCK_USER,userHandle,0)
_validation_metrics.auc().defaultThreshold()
sceneRoot.setTagInternal(com.android.internal.R.id.scene_layoutid_cache,scenes)
queueLength.asString()
new PaymentApiException(e,ErrorCode.PAYMENT_PLUGIN_EXCEPTION,e.getErrorMessage())
!getLocationEnabled()
new IllegalArgumentException(sm.getString("pojoMethodMapping.duplicateLastParam",m.getName(),m.getClass().getName()))
client != null && client.autofillClientIsFillUiShowing()
serverSocket.setReuseAddress(true)
new FlywayException("Unable to instantiate class: " + clazz,e)
new Paint()
mImageSize == MediaSettingsImageSize.FULL && TextUtils.isEmpty(mEditorImageMetaData.getCaption())
/**   * [Sa * Da, Sc * Dc]   */ MULTIPLY(24)
context.formatNewLine()
origin >= other
return 0L; 
assertEmpty(text,errors)
type.getDeclaredConstructor()
runelite.getEventBus().unregister(plugin)
new IndexWriter(dir3,anlzr,false,IndexWriter.MaxFieldLength.LIMITED)
this.dataType()
new MissingPropertyException("The property '" + name + "' is missing from the binding.",name,Binding.class)
myStoredLength > 16384
Throwable e
si.intent == null && N > 1
call != null && call.resolveMethod() != null
i=1
Math.abs(path.getDistance() - tmpDist) > 5
getServiceGuarded().importMultimediaMessage(callingPkg,contentUri,messageId,timestampSecs,seen,read)
StringUtils.isNoneEmpty(runtime.getRuntimeError())
counter > max
selenium.isElementPresent("link=Control Panel")
destroy()
samlServletDeployment(SalesPostAutodetectServlet.DEPLOYMENT_NAME,"sales-post-autodetect/WEB-INF/web.xml",SendUsernameServlet.class)
LOGGER.fine(e.toString())
synchronized (points) {   points.add(point);   int size=points.size();   if (size > MAX_RESULT_POINTS) {     points.subList(0,size - MAX_RESULT_POINTS / 2).clear();   } } 
_sharingEntryService.addOrUpdateSharingEntry(user.getUserId(),classNameId,classPK,themeDisplay.getScopeGroupId(),shareable,sharingEntryPermissionDisplayActionKey.getSharingEntryActionKeys(),expirationDate,serviceContext)
holder.setGone(getLoadFailViewId(),visible)
mThumbPosition >= getThumbScrollRange() / 2
out.writeLong(duration)
getter.getType()
(FrameLayout)findViewById(R.id.flashcard)
logger.debug("The GENA Subscription for serviceID {} is established for device {}",sub.getService().getServiceId(),sub.getService().getDevice())
lookup="org.jboss.as.test.integration.ee.datasourcedefinition.DataSourceBean/dataSource3"
from > to
Runnable t=new RunAfterTester(new DisconnectionBehavior(h2,h1),new MultiCallBuilder(h2)); 
mapper.writeValueAsBytes(segment)
nai.networkCapabilities.satisfiedByImmutableNetworkCapabilities(networkCapabilities)
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=3
selenium.isElementPresent("link=Control Panel")
DEFAULT_TETHER_OFFLOAD_DISABLED=1
config.enterpriseConfig != null && config.enterpriseConfig.getEapMethod() != WifiEnterpriseConfig.Eap.NONE
Exception e
logger.info("Updating the serviceUrls as they seem to have changed from {} to {} ",Arrays.toString(eurekaServiceUrls.get().toArray()),Arrays.toString(serviceUrlList.toArray()))
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
process(unionSelect.left(),sb)
Assert.assertEquals(8,clients.size())
whiteSpaceAfterEnd << 1
timeDifferenceMilliseconds < maxTolerateTimeDifferenceMilliseconds
new PrestoException(INVALID_CAST_ARGUMENT,"Value cannot be cast to timestamp: " + value.toStringUtf8(),e)
getTestName(true)
new StreamTaskException(exceptionMessage,e)
selenium.isElementPresent("link=Control Panel")
synchronized (mAm) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
f1.getPanelDisplayName().compareToIgnoreCase(f2.getPanelDisplayName())
new RxNettyHttpServer()
work >= 0
command.execute(answerForm)
Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN_MR1 && mCamera != null
new Random(A)
upload1.getUploadEndTimestamp() == 0 || upload2.getUploadEndTimestamp() == 0
globalExecutionStats.getStartedSplits()
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
Log_OC.d(TAG,"onSaveInstanceState() start")
new EqualsWithEps(arrayX,arrayY,Nd4j.EPS_THRESHOLD)
verify(mWifiService).stopLocalOnlyHotspot()
args == null || args.isEmpty()
indexOutURI.toString()
process == null || !process.willAutoInsert(AutoCompletionPolicy.SETTINGS_DEPENDENT,result.getPrefixMatcher())
tablelist == null || tablelist.getItems() == null
this.getStyleClass().add("document-viewer")
file.contentsToByteArray()
VerificationResult.withCount(1)
getSupportFragmentManager().beginTransaction().add(R.id.fragmentContainer,new FirstUsageWelcomeFragment(),FirstUsageWelcomeFragment.TAG).commitAllowingStateLoss()
EntityCacheImpl.class
verify(connection,exception)
Throwable ex
popup.showInBestPositionFor(selectedEditor)
LocalFileSystem.getInstance().findFileByIoFile(lib)
_jsonWebServiceServiceAction.getJSON(null,mockHttpServletRequest,mockHttpServletResponse)
KtPsiUtilKt.getHighlightingRange(expression)
tsdb.metaTable()
fieldNameMaps.containsKey(parentThing)
mGnssCallback != null
sp.getBoolean(PREF_AUTO_DELETE_MEDIA_PLAYBACK_COMPLETED,false)
source.getAddress()
in.readFully(serCondition)
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY(),Gravity.TOP | Gravity.LEFT)
kl.getAvailableKiosks()
logger.debug("Playlist '{}' not found",playlist)
elementType == null || elementType == Object.class
!f
maxPendingPersists <= 0
/**   * Returns last child <b>element</b> with given name or <code>null</code> if no such child node exist.  */ public Element getLastChildElement(String elementName){   if (childNodes == null) {     return null;   }   int from=childNodes.size() - 1;   for (int i=from; i >= 0; i--) {     Node child=childNodes.get(i);     if (elementName.equals(child.getNodeName())) {       child.initSiblingNames();       return child;     }   }   return null; } 
new StackManager(new File(stackRoot),null,osFamily,false,metaInfoDao,actionMetadata,stackDao)
targetClassLoader == null || targetClassLoader.getClass().getName().equals("jdk.internal.loader.ClassLoaders$PlatformClassLoader")
toPreProcess.getFeatures().divi(maxRange - minRange + Nd4j.EPS_THRESHOLD)
HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName()
getLocalPort()
new IOException("Mocked failed close!")
target.getDestinationLinkAddress()
a.getString(attr)
mBiometricUnlock.stop()
private String method; 
NCNameResourceCodec.encode(ci)
locale != null
assertProtonResourceLimits(0.9,0.77,new ContentClusterBuilder().protonMemoryLimit(0.77).getXml())
part.publicSize()
a(2,1,15)
Localization.menuTitle("Check integrity")
Assert.assertTrue("reload-required".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()))
iterations=1
AssertionError e
verify(mock)
protected ResolvedReferenceType create(ResolvedReferenceTypeDeclaration typeDeclaration,ResolvedTypeParametersMap typeParametersMap){   return create(typeDeclaration,typeDeclaration.getTypeParameters().stream().map(typeParametersMap::getValue).collect(Collectors.toList())); } 
promise.trySuccess()
Preconditions.checkNotNull(uri,"uri")
MethodNotFoundException.class
selenium.isElementPresent("link=Control Panel")
getTestVector().getNumNonZeroElements()
MonitoringPortlet.isMonitoringPortletActionRequest()
dest.writeInt(txPower)
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
Map<String,Object>
new NeuralNetConfiguration.Builder().momentum(9e-1f).weightInit(WeightInit.DISTRIBUTION).dist(Nd4j.getDistributions().createNormal(1e-1,1)).lossFunction(LossFunctions.LossFunction.RECONSTRUCTION_CROSSENTROPY).iterations(10).learningRate(1e-1f).nIn(4).nOut(3).layerFactory(layerFactory).list(2).hiddenLayerSizes(new int[]{3}).override(1,new ConfOverride(){   @Override public void overrideLayer(  int i,  NeuralNetConfiguration.Builder builder){     if (i == 1) {       builder.weightInit(WeightInit.ZERO);       builder.activationFunction("softmax");       builder.lossFunction(LossFunctions.LossFunction.MCXENT);     }   } } )
telephony.getCdmaEriIconModeForSubscriber(subId,getOpPackageName())
mAlarmManager.setExact(AlarmManager.ELAPSED_REALTIME,timestampMs,mPeriodicAlarmIntent)
new ConcurrentHashMap<String,Boolean>(256)
host.setHeaderView(mExpandIndicator)
findAnnotationAttributes(element,annotationType.getName(),false,false)
String.format("(%s) violated quota. Actual: (%f), Threshold: (%f)",metric.metricName(),value,quota.bound())
Lists.newCopyOnWriteArrayList()
checkCall(receiver)
appearance.getFloat(attr,0)
config != Config.ARGB_8888 || colorSpace == ColorSpace.get(ColorSpace.Named.SRGB)
new Paint()
{newFilePath}
pk.getColumnNameInSql()
lastModified >= (headerValue + 1000)
!fr.isExists()
putBytes(v)
out.writeInt(sampleCount)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
StreamException se
selenium.isElementPresent("link=Control Panel")
KNOWN_TO_FAIL_STRICT.add("comments/generic_methods.unit:46  var")
Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
mAudioHandler.hasMessages(MSG_SET_A2DP_SINK_CONNECTION_STATE,device)
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
level >= 95
targetInfo != null && targetInfo.metaData != null
historicState(item,timestamp,serviceName)
selenium.isElementPresent("link=Control Panel")
new ExecutionEnvironment(new MockProfile(),MOCK_EXECUTOR,myProject,null)
new JAXWSHttpSpiTransportFactory(context)
getPath("InputGenericWhitespaceEndsTheLine.java")
new TextPaint()
{4,5,5,11,6,5,7,7,11,11}
position.getValid()
from > to
i < 1000
vf != null && !vf.isDirectory()
uri.getPort() == -1 && request.getVirtualHost() != null
return true; 
Thread.sleep(2000)
mValues[8]
is(4)
Throwable ex
Throwable e
("".equals(nodeJID) && "".equals(resourceJID)) || ((RoutableChannelHandler)nameRoutes).getAddress().equals(node)
checkCall(receiver)
intermediateArtifacts.combinedArchitectureBinary()
tgt.grantServiceTicket("ST2",service,new NeverExpiresExpirationPolicy(),true,false)
Optional.ofNullable(BuckAddDependencyIntention.create(referenceElement,psiClass))
new BuilderRemoteViews(mContext.getApplicationInfo(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
name + "." + signatureEntry.getKey()+ "."+ outputEntry.getKey()
isOffhook || AudioSystem.isStreamActive(AudioSystem.STREAM_VOICE_CALL)
args[1]
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers2.kt")
manager.beginTransaction().remove(fragment).commitAllowingStateLoss()
getMeasuredWidth()
newPacked[j]
Settings.Secure.putStringForUser(cr,OWNER_INFO,"",userId)
public DummyObject readFrom(Class<DummyObject> type,Type genericType,Annotation[] annotations,MediaType mediaType,MultivaluedMap<String,String> httpHeaders,InputStream entityStream) throws IOException, WebApplicationException {   throw new WebApplicationException(999); } 
Assert.assertEquals(transaction.getEffectiveDate().toLocalDate().compareTo(expected.getPaymentDate()),0,"Actual date " + transaction.getEffectiveDate() + ", expected date "+ expected.getPaymentDate())
Lists.newArrayList("id","bool","BOOL","SEL","IMP","unichar","nil","Nil","YES","NO","TRUE","FALSE","auto","const","entry","extern","goto","inline","register","restrict","signed","sizeof","struct","typedef","union","unsigned","volatile","asm","const_cast","delete","dynamic_cast","friend","explicit","mutable","namespace","not","operator","reinterpret_cast","static_cast","template","typeid","typename","using","virtual","self","isa","ptrdiff_t","size_t","wchar_t","wint_t","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intptr_t","uintptr_t","intmax_t","uintmax_t","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","INT8_MIN","INT16_MIN","INT32_MIN","INT64_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","UINT64_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST64_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","INT_LEAST64_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST64_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","INT_FAST64_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST64_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","INTMAX_MIN","INTMAX_MAX","UINTMAX_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIZE_MAX","WCHAR_MAX","WCHAR_MIN","WINT_MIN","WINT_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","UINT8_C","UINT16_C","UINT32_C","UINT64_C","INTMAX_C","UINTMAX_C","va_list","fpos_t","FILE","off_t","ssize_t","BUFSIZ","EOF","FOPEN_MAX","FILENAME_MAX","TMP_MAX","SEEK_SET","SEEK_CUR","SEEK_END","stdin","stdout","stderr","ct_rune_t","rune_t","div_t","ldiv_t","lldiv_t","dev_t","mode_t","NULL","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","MB_CUR_MAX","MB_CUR_MAX_L","errno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EDEADLK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EAGAIN","EWOULDBLOCK","EINPROGRESS","EALREADY","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","ENOTSUP","ENOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","ELOOP","ENAMETOOLONG","EHOSTDOWN","EHOSTUNREACH","ENOTEMPTY","EPROCLIM","EUSERS","EDQUOT","ESTALE","EREMOTE","EBADRPC","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOLCK","ENOSYS","EFTYPE","EAUTH","ENEEDAUTH","EPWROFF","EDEVERR","EOVERFLOW","EBADEXEC","EBADARCH","ESHLIBVERS","EBADMACHO","ECANCELED","EIDRM","ENOMSG","ENOATTR","EBADMSG","EMULTIHOP","ENODATA","ENOLINK","ENOSR","ENOSTR","EPROTO","ETIME","ENOPOLICY","ENOTRECOVERABLE","EOWNERDEAD","EQFULL","EILSEQ","EOPNOTSUPP","ELAST","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_GETOWN","F_SETOWN","F_GETLK","F_SETLK","F_SETLKW","FD_CLOEXEC","F_RDLCK","F_UNLCK","F_WRLCK","SEEK_SET","SEEK_CUR","SEEK_END","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","O_NONBLOCK","O_APPEND","O_SYNC","O_CREAT","O_TRUNC","O_EXCL","O_NOCTTY","O_NOFOLLOW","DOMAIN","HUGE","INFINITY","NAN","OVERFLOW","SING","UNDERFLOW","CFMSYSTEMCALLS","CGLUESUPPORTED","FUNCTION_PASCAL","FUNCTION_DECLSPEC","FUNCTION_WIN32CC","GENERATING68881","GENERATING68K","GENERATINGCFM","GENERATINGPOWERPC","OLDROUTINELOCATIONS","PRAGMA_ALIGN_SUPPORTED","PRAGMA_ENUM_PACK","PRAGMA_ENUM_ALWAYSINT","PRAGMA_ENUM_OPTIONS","PRAGMA_IMPORT","PRAGMA_IMPORT_SUPPORTED","PRAGMA_ONCE","PRAGMA_STRUCT_ALIGN","PRAGMA_STRUCT_PACK","PRAGMA_STRUCT_PACKPUSH","TARGET_API_MAC_CARBON","TARGET_API_MAC_OS8","TARGET_API_MAC_OSX","TARGET_CARBON","TYPE_BOOL","TYPE_EXTENDED","TYPE_LONGDOUBLE_IS_DOUBLE","TYPE_LONGLONG","UNIVERSAL_INTERFACES_VERSION","BIG_ENDIAN","BYTE_ORDER","LITTLE_ENDIAN","PDP_ENDIAN","DEBUG","NDEBUG","scale")
label != null
chatButton.setPressedIcon(ImageLoader.getImage(ImageLoader.CHAT_BUTTON_SMALL_PRESSED))
localFileSystem.refreshAndFindFileByPath(keyMapsPath)
unsetDefault.isInternal()
new ROC(32)
log.debug("getModelLastUpdateTimes(): Session ID is unknown: {}",currentSessionID)
mValues[8]
conf.unset("tez.queue.name")
TelephonyManager.getDefault().getCurrentPhoneType()
updater.myComponent.isVisible()
dbStat.setInt(1,sessionType.getPid())
CommonProblemDescriptor[]
Boolean.parseBoolean(resizeableStr)
BlockLiquid.getFlowingBlock(material)
_layoutRevisionLocalService.getLayoutRevisionsByStatus(WorkflowConstants.STATUS_PENDING)
new WalkUpResolveProcessor(name,psiFile,getElement(),BaseJSSymbolProcessor.MatchMode.Any)
!mShouldTranslateContents
mUiHandler.removeCallbacks(pae)
stack.peek()
Long.parseLong(param.getValue())
!mIsOnInnerCircle && hour != 0
connectedHeaders.setVersion("1.2")
getViewAtRelativeIndex(1)
new Paint()
msg.nextOffset()
ReleaseId releaseId=KieServices.Factory.get().newReleaseId(namespace,"memory","1.0-SNAPSHOT"); 
context.getLocation(argument)
dest.writeInt(mSubId)
platformVersion < M
engine.execute(query).dumpToString()
lock.isHeldByCurrentThread()
dest.writeInt(mTxPower)
sendMessageAtFrontOfQueue(CMD_STOP_AP)
DBG=false
getDefaultCountry()
UpgradeStepRegistrator.class
testable.sort(sorted.clone())
Pattern.compile(foundAuthor,Pattern.LITERAL)
Request.class
notifyChildSamplerListenersOfFilteredSamples=true
onDetachedFromWindow()
UrlUtils.isStartPageUrl(currentTab.getUrl())
loaded.getLoaded().getDeclaredConstructor()
authenticator.executeCommandAndAuthenticateIfNecessary(project,repo,source,"pull",arguments,arguments.size() - 1)
return START_NOT_STICKY; 
DirectoryReader.open(writer)
LAST_VERSION=709
public Version getVersion(){   return version; } 
@ConditionalOnEnabledHealthIndicator("db")
application.getBaseContext()
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
owner == null || owner.getName().equals(PostgreConstants.PUBLIC_SCHEMA_NAME) || owner.getName().equals(PostgreConstants.CATALOG_SCHEMA_NAME)
addOrReplace(feedbackPanel)
hasColumn("KBTemplate","cacheable")
Response.ok()
conv.convert(bc,cc,true)
Timeout.seconds(900)
Native.getLibraryOptions(classes[i])
(OrderItemAttribute)obj
writeStartElement(null,localName,namespaceURI)
StringBuilder padding=new StringBuilder("\t"); 
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
tea.save(true)
/**   * Callback that is invoked <em>after</em> all test methods have been invoked.  * @param context the current container extension context  */ void afterAll(ContainerExtensionContext context) throws Exception ; 
mRecyclerView.smoothScrollBy(hScroll,vScroll)
new IndexWriter(store,new SimpleAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
selenium.isElementPresent("link=Control Panel")
Double.doubleToRawLongBits(v)
"Deleting existing file: " + target
ev.getY() < mQsContainer.getBottom() && !mIsBeingDragged
assertion.getSamlObject()
dpToPx(24f)
panel.getAuthors()
!ro.isStopApplicable(ro.bearingVsRouteDirection(loc),i)
assertPhoneNumberNotEqual("123123","0123123",false)
mMapView.invalidateMapCoordinates(frameLeft - 2,frameTop - 2,frameRight + 2,frameBottom + 2)
bungee.getTranslation("outdated_client",bungee.getGameVersion())
columnType.equalsIgnoreCase("double") || columnType.equalsIgnoreCase("float")
T exception
Thread.sleep(1000)
new GeoLocation(array.getDouble(1),array.getDouble(0))
accountHandle.getComponentName().flattenToString()
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
selenium.isElementPresent("link=Control Panel")
getIntent().getStringExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
SUCCEEDED
!useLayoutWithDefault() && (!hasValidSelection || mLastSelected != checkedPos) && mAlwaysButton != null
optiqConnection.setSchema(name)
mService.getProfiles(UserHandle.myUserId(),false)
AssetTagFinderUtil.countByG_N(_scopeGroup.getGroupId(),assetTagName)
LOG.trace("Finding components in url: {}",url)
new TypeList.Explicit(enterTypes)
println_native(logId,ERROR,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
new ArgumentPreparedStatementSetter(args)
assertResultExchange(result.getExchanges().get(0),true)
new CountDownLatch(2)
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
log.logError(BaseMessages.getString(PKG,"JobUnZip.MoveToDirectoryEmpty.Label"))
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
constraints.weightx=1f
blog.getLocalTableBlogId()
entry.notification.cloneLight()
1
mMatchMode=matchMode
handlers.length == 0 || handlers[0] == null
configType == null || wordTypesType == null || configType == null
mMethod == Methods.getByIndex || mMethod == Methods.getByInetAddress
Minecraft.getMinecraft().renderEngine.getMissingIcon(0)
this.constraints.updateFromFactHandle(workingMemory,handle)
mappedSuperclass.getMetadataComplete()
Arrays.toString(volumes.get())
asList(HSQLDB)
exchange.getProtocol().equalToString("https")
Integer.parseInt(attrValue)
rhs.getScore()
Build.VERSION.SDK_INT < 21 && mDrawerLayout != null
mAnswer.setBackground(mTextBackground)
singletonComponentInstance == null
contract.getNewContract()
htmlElementContent(obj.toString())
Integer.parseInt(taskIdStr)
callback.reconnectCallback(name,jsa)
sep < 0 || sep > j
app.getSettings().AVOID_FERRIES.getModeValue(params.mode)
isES() || major < 3
dockerClient.startContainerCmd(container.getId())
PsiTreeUtil.getParentOfType(position,PsiClass.class,false,PsiCodeBlock.class,PsiMethod.class,PsiExpressionList.class)
getServiceForUserLocked(userId)
Integer.parseInt(stackIdStr)
dictionary.put(words[0],words[2])
Log.d(TAG,"Got null argument for a signing keyset, ignoring!")
file.getName().getBaseName()
getCurrCapacityUsed()
mPowerManager.isInteractive()
indexOutURI.toString()
Drawable.scaleFromDensity(sourcePadding.bottom,sourceDensity,targetDensity,true)
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
Log_OC.e(TAG,"\t account is NULL")
Preconditions.checkNotNull(containerIdGenerator,"containerIdGenerator")
file.getPath()
selenium.isElementPresent("link=Control Panel")
requestedProvider.get().isAvailable(service)
Integer.parseInt(attrValue)
ValueGeometry.getFromEWKB(bytes)
Enumeration<Servlet>
client.getDefaultRequestOptions().setMaximumExecutionTimeInMs(timeout)
userState.mIsAccessibilityEnabled || userState.mIsDisplayMagnificationEnabled
COUNTER_UPDATER.addAndGet(this,-vs.size) <= 0
filter.setAngle(mAngle)
app.getAudio().newAudioRecoder(44100,true)
a.getDimensionPixelSize(attr,DEFAULT_MIN_WIDTH)
selenium.isElementPresent("link=Control Panel")
from("direct:tap").delay(1000)
getDelegate().handle(exchange).onErrorResume(ex -> {   if (logger.isDebugEnabled()) {     logger.debug("Could not complete request",ex);   }   response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
DataBufferUtils.read(channel,this.bufferFactory,2)
@Override
assertEquals(1,auth.getFailures().size())
getTypeDeclaration(swaggerModel.getAdditionalProperties())
c == '\\' && i + 1 < cursor
collector.getRangeCounters(range)
ImmutableMap<String,String>
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,false)
new InvokedMethod(tr.getTestClass(),tr.getMethod(),new Object[0],true,false,tr.getStartMillis(),tr)
!hasPermission(permission)
new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){   @Override public Set<String> execute(  Jedis connection){     return connection.spop(key,count);   } } 
U.sleep(20000)
iconsByFilename_.put(filespec.toLowerCase(),icon)
new IntRangeValidator(0,true,true)
PortletFileRepositoryUtil.addPortletFileEntry(serviceContext.getScopeGroupId(),userId,KBArticle.class.getName(),kbArticle.getClassPK(),PortletKeys.KNOWLEDGE_BASE_ARTICLE,kbArticle.getAttachmentsFolderId(),inputStream,shortFileName,mimeType,true)
sendMsg(mAudioHandler,MSG_PERSIST_VOLUME,SENDMSG_QUEUE,PERSIST_LAST_AUDIBLE,device,s,PERSIST_DELAY)
T1
@Mock private PanProfile mPanProfile; 
new ExportDBTask(targetContext,filename -> {   assertThat(filename,is(not(nullValue())));   File f=new File(filename);   assertTrue(f.exists());   assertTrue(f.canRead()); } )
selenium.isElementPresent("link=Control Panel")
WordPress.getCurrentBlog().getLocalTableBlogId()
getFullName()
remoteTableHandle.isPresent()
RECONNECT_DELAY_MAX=5
toolWindow.setContentUiType(ToolWindowContentUiType.COMBO,null)
add(food(10),TUNA,CRAB_MEAT,CHOPPED_TUNA,COOKED_CHOMPY)
valueOfDateTimeOriginal != null && getAttribute(TAG_DATETIME) == null
ZipUtil.unzip(null,myCoursesDir,file,null,null,true)
TransactionUtil.validAssetName(assetIssueContract.getAbbr().toByteArray())
testAllocation("test3snippet",4,0,0)
new PrestoException(INVALID_CAST_ARGUMENT,"Value cannot be cast to date: " + value.toStringUtf8(),e)
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))).append(targetNode)
hazelcastFactory.newHazelcastClient(newClientConfig())
LOG.error("DataNode is out of memory. Will retry in 30 seconds.",ie)
dockedBounds.top - dockDividerWidth
this.mMesh.postDraw(this.mShaderProgram)
assertEquals("Invalid content-length",11,outputMessage.getHeaders().getContentLength())
log.debug("Null primary key column for '" + object.getName() + "'")
type.getDeclaredConstructor()
lockFileAccess.length() <= INFORMATION_REGION_POS
ENDER_PORTAL_FRAME(120)
this.mChildScene == null || !this.mChildSceneModalUpdate
bedtime - SystemClock.uptimeMillis()
pGLState.loadModelViewGLMatrixIdentity()
getName().equals(type) || getNameWithoutPackage().equals(type)
sampleOffset * 1000L
mApplicationObject == null && (Process.SYSTEM_UID == Process.myUid())
i <= lastLine
addIndices != null
getRootInternal()
GL20.glGetProgramiv(program,pname,params)
IndexReader.open(userindex)
normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTPS_PROTOCOL)
sceneToLocalTransformation.preConcat(parent.getSceneToLocalTransformation())
weekRange.add(Calendar.DATE,6)
getUserStateLocked(resolvedUserId)
!((TileGenericPipe)source.getTile()).isPipeConnected(direction)
builder.humanReadableField(ThrottlerField.THROTTLE_PERIOD.getPreferredName(),ThrottlerField.THROTTLE_PERIOD_HUMAN.getPreferredName(),throttlePeriod)
child.getAttributeValue(ATTRIBUTE_ENABLED,"true")
loaded.getLoaded().getDeclaredConstructor()
!hasAnnotation(annotatable,annotationMirror) || annotatable instanceof JAnnotationArrayMember
@Input
given().contentType(ContentType.BINARY).content(file).when().put("/file")
mRilDataRadioTechnology=m.getInt("dataRadioTechnology")
selenium.isElementPresent("link=Control Panel")
new GroovyBugError("The lookup for " + name + " caused a failed compilaton. There should not have been any compilation from this call.",cfe)
myApplicabilityError.remove()
bedtime - SystemClock.uptimeMillis()
new DeadCodeEliminationPhase(Required)
Integer.parseInt(taskIdStr)
mContext.checkCallingPermission(android.Manifest.permission.CAPTURE_VIDEO_OUTPUT) == PackageManager.PERMISSION_GRANTED
this.getTheSocket()
type == TRIANGLE || type == TRIANGLES
return false; 
uploadProgressHandler.onProgress(downloaded,total)
Long.parseLong(attrValue)
pd == activePresentationDescriptor && activePresentationDescriptor.getPresentationType().isPersistent()
new XmlPathConfig(jaxbObjectMapperFactory,defaultParserType,defaultDeserializer,charset,features)
parameters.getPositions().get(1)
new AnalyzedToken(word,lowerTaggerTokens[i + 1],lowerTaggerTokens[i],pos)
JavaSourceCodehausPackagesSuite.suite()
data[1] > 290
new DMLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters,url)
Thread.sleep(1000)
BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.DoesNotExists.Message",slaveServerName)
lock.isHeldByCurrentThread()
platformVersion < M
proxyClassName.equals(otherClassName)
HEADER.getBytes(Constants.UTF8)
PublisherPeek<T>
staticColumns.values()
field.createField(fieldType.indexedToReadable((String)sortValue),1.0f)
setIntegerPart(String.valueOf(integerPart))
LOG.warn("I/O error when running rpc",e)
limitOrder.getType() == OrderType.BID || limitOrder.getType() == OrderType.EXIT_ASK
/**   * Controls tesselation transform (e.g similar to the vertex shader, but required to mix inputs manual)  */ TessellationEvaluation
config.getProperty("peer.p2p.pingInterval",5)
mContext.sendBroadcastAsUser(intent,UserHandle.ALL)
level < RF_STATUS_HIGH_SIGNAL
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
setop.getIDLName()
addDaysAndCheckForCompletion(2,NextEvent.PAYMENT_ERROR)
handleDnsConfigurationChange(usedNetworkType)
mStackSupervisor.anyTaskForIdLocked(taskId)
location.equals(BlockStoreLocation.anyTier())
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
status().isFound()
mService.setAppPolicy(UID_A,POLICY_NONE)
targetHeight == 0
/**   * The upper value in the range.  * @return the upper value in the range  */ T getTo(); 
String.format("null label in rule %s, %s",getLabel().toString(),context)
assertUpgraded(client())
assertTrue(oldChild.isSafelyReplaceableBy(newChild))
delay=5000
mp.getResolvedValue()
clearIndex()
failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")|| failureDesc.contains("11340")
!hasViewPagerIndicator
service.getDomain().id()
val == null || val.length() == 0
exchange.getIn()
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
setIntegerPart(String.valueOf(integerPart))
justBootedUp
selenium.isElementPresent("link=Control Panel")
new ArrayList<>(1)
bounds.height()
QuartzHelper.class
getParameterValues(request,param,null)
initialCapacity > 1 << 30
canCacheErrors || hasErrors
matchIfMissing=false
result.getProject()
StateManagementUtils.createEndForkedExecutionMojoBinding()
inLatch.endLatch.await(800,TimeUnit.MILLISECONDS)
connect(monitor,null,null,false,true)
prevNerEndIndex != (start - 1) || nextNerStartIndex != end
hold <= 0 || pendingElements.size() > 0
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES,UserHandle.getUserId(getCallingUid()))
prev.isGuardBindsCache()
post.isLocalChange()
/**   * {@inheritDoc}  */ public Integer getTo(){   return Integer.valueOf(to); } 
dest.writeInt(mSubId)
logger.fine(String.format("server disconnect (%s)",this.nsp))
assertEquals(9,tokens.size())
TimeUtils.millis()
new ClusterConfiguration("whatever","cluster://1","cluster://2")
selenium.click("//li[4]/span/a/span")
return false; 
FieldsWriter<S,?>
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),mNotificationChannel.getImportance(),mSbn,null,null,null,null,null)
expected=4
if (MORE_DEBUG) Slog.d(TAG,"Need to launch agent for " + pkg); 
"Flow " + flowName + " cannot be found in project "+ projectName
fdoProvider.getFdoMode() != FdoMode.OFF || fdoProvider.getPrefetchHintsArtifact() != null
SmartEnterProcessors.INSTANCE.allForLanguage(fixture.getFile().getLanguage())
MeasureTypeFactory.getUDAFs()
c == Float.class || c == Float.TYPE
new StringBuilder(238)
assertMockEndpointsSatisfied()
mConnector.execute("volume","format",vol.id,"auto")
c == Integer.class || c == Integer.TYPE
mConnectionById.containsKey(callId)
account.getDescription()
VERSION=6
In.forValue(apiKeyAuthConfig.in().toValue())
assertEquals(1,artifacts.size())
c == Short.class || c == Short.TYPE
DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.retrieveFromCache(resource.getBroadcaster().getID(),resource)
context.getContentResolver()
Type.getObjectType(stubInternalName)
con.getClass().getSimpleName()
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
file(path).isFile()
new Intent(ACTION_QUICK_CONTACT)
LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
layerFilter != null && readParameters != null
tile.getUrn().getModuleName()
appearance.getFloat(attr,0)
new DMLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters,url)
getResultHandler(result).handleResult(exchange,result).switchOnError(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult -> getResultHandler(exceptionResult).handleResult(exchange,exceptionResult)))
viewFlow.getChildWidth()
"Surface(native-token=" + mSurfaceControl + ")"
homeListView.setSelection(0)
outputType == ProcessOutputTypes.STDERR && !looksLikeProgress(line)
outputDir.mkdirs()
Trans != NO_TRANSPOSE
executeMethodAndConvertExceptions(httpPost)
!FilenameIndex.processFilesByName(PubspecYamlUtil.PUBSPEC_YAML,false,falseProcessor,module.getModuleContentScope(),project,null)
this.messageService.fluxPreAuthorizeHasRoleFindById(1L).subscriberContext(withUser)
new Intent(Intent.ACTION_USER_PRESENT)
proc != null && proc.thread != null
new ChromeWebDriverImpl(projectDirName,portalURL)
oldBuffer.size() >= 0
CellNames.simpleDense(SuperColumns.scName(name))
MathUtils.random(width)
new CommandLineException("Communication error",e)
UDecoder.URLDecode(candidate,connector.getURIEncoding())
new Paint()
producer.send(expiredMessage,Message.DEFAULT_DELIVERY_MODE,Message.DEFAULT_PRIORITY,1000)
filteredMessage.addLast(perRequestFilter(r,new Entry(o,r,f,o),false))
new StringBuilder(256)
getDelegate().getDefaultCipherSuites()
IccUtils.cdmaBcdByteToInt((byte)0x8c)
formatTimeMs(fullWifiLockOnTime / 1000)
@Override protected Block getBlock(){   return blockBuilder; } 
name.length() > 0 && name.charAt(name.length() - 1) != '.'
verify(mWifiService).stopLocalOnlyHotspot(TEST_PACKAGE_NAME)
proxyHTTPSPort.setText(Integer.toString(Preferences.getInteger("proxy.https.port",8443)))
Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
verifyAttributes(decoder,binary("79790020940A035985708053908307060104900402788950301217070401538F0003E8210D0A"))
name.equals("getNetworkOperatorName") || name.equals("gsm.operator.alpha")
new Paint()
threadSafe=true
newId >= max
assertTrue(message.getPayload() instanceof Collection<?>)
mFile.getStoragePath()
loaded.getLoaded().getDeclaredConstructor()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
new CallbackStub(this)
Util.killAsync(ffmpegLoadLibraryAsyncTask) || Util.killAsync(ffmpegExecuteAsyncTask)
NIO_GROUP.shutdownGracefully(0,10,TimeUnit.SECONDS)
@InputIntMethodAnnotation(-44)
new Paint()
this.exchanges.remove(requestId)
logger.trace("myq securityToken: {}",securityToken)
((WithNode)node).getNestedStatement()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
before == after
TIMESTAMPTZ_READ_METHOD.invoke(object,connection)
ENABLE_KERNEL_UPDATES=true
recycle(true)
remaining == 0
new SimpleCanalConnector(address,username,password,destination)
activity == null || activity.isFinishing()
((NioEndpoint)getEndpoint()).getPollerThreadPriority()
parsedResult.getType()
EnumValidator.create(Target.class,true,false)
initialCapacity > 1 << 30
Slog.e(TAG,"Starting rect for task: " + taskId + " requested, but not available",new Throwable())
Long.valueOf(p.getProperty(screenName + ".id"))
new RefCntRamDirectory()
metadata.getPropertyClosureIterator()
new DateTime(2007,1,1,0,0,0,0)
logger.fine("Aliasing common strings")
message.getConversation()
selenium.isElementPresent("link=Control Panel")
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
reader.waitFor()
loaded.getLoaded().getDeclaredConstructor()
VMDebug.attachAgent(library + "=" + options,classLoader)
expected == boolean.class || expected == Boolean.class
bos.toString("UTF-8")
new Thread(shutdownHandler)
dest.writeInt(mSubId)
new ImageIcon(image)
lp.resolveLayoutDirection(layoutDirection)
selectedRingColor=0xFF33b5e5
getLlvmReturnType()
ignoreUnknown=true
index - 1 >= 0
VertexAttribute.ColorUnpacked()
id=13107
y
Long chatId
rnaPath.endsWith("rotation") || rnaPath.endsWith("rotation_euler")
LocalFileSystem.getInstance().findFileByIoFile(parentIoFile)
Mono.subscriberContext()
new FormAttachment(wSeq,-margin)
mWindowManager.getDefaultDisplay().getRealMetrics(metrics)
typeName != null
consistency_level.filterForQuery(table,nextEndpoints)
new Paint()
isAbstract()
StringBuilder charNum=new StringBuilder(); 
Locale.getDefault().toLanguageTag()
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY(),Gravity.TOP | Gravity.LEFT)
factory.getEmbeddedServletContainer()
type.getModifiers()
LOGGER.trace("Cache expiration duration after reads is set to [{}]",currentDuration)
PyDebugRunner.createCommandLinePatchers(state,configuration,PORT)
new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true,false)
!WPUrlUtils.isWordPressCom(xmlrpcUri)
evaluate(123.5f,DataTypes.FLOAT)
sysPs != null && sysPs.pkg != null
CONCURRENT_THREAD_COUNT=30
Boolean.parseBoolean(attrValue)
workerCount=2
new InputStreamReader(resourceInputStream,encoding)
popup.requestFocusInWindow()
Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
selenium.isElementPresent("link=Control Panel")
args0.length > 1
(inWidth - kW + 2 * padW) / sW
origin.realComponent().doubleValue() >= other
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
adapter != null && getActivity() != null
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
pathURL.toURI().getSchemeSpecificPart()
Throwable err
Integer.parseInt(stackIdStr)
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_zsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
passwd.getBytes(StringUtils.UTF8)
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
getTestName(true)
log.debug("Error invalidating SSH tunnel",e)
t != null && t.length() > 0
klass.getDeclaredMethodsUnchecked(false,declaredMethods)
getImportRootPath()
saHooks != null && !saHooks.isEmpty()
conf.getRestBaseURL()
getMeasuredWidth()
stateMap.get("CurrentURIMetaData") != null && !stateMap.get("CurrentURIMetaData").isEmpty()
Localization.lang("New article")
getPackageManager().addPreferredActivity(filter,bestMatch,set,intent.getComponent())
INACCESSIBLEMEM_OR_ARGMEMONLY
row("p_comment",null,7.0,0.0,null,null,null)
url.appendPath(branchRelativeUrl,false)
qualifiedName(node)
data.cx.initStandardObjects(null,false)
getEmptyCellElement()
e.getMessage()
new Handler(looper){   @Override public void handleMessage(  Message msg){ switch (msg.what) { case MSG_CLEAR_WALLPAPER: synchronized (this) {         mWallpaper=null;       }     break; } } } 
mCol.getDb().getDatabase().endTransaction()
nativePostCreate2(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
/**   * Opened connections.   */ @GridToStringExclude private final LongAdder8 opened=new LongAdder8(); 
getSupportActionBar()
(filterMap.getDispatcherMapping() & FilterMap.ERROR) != 0
WordPress.getCurrentBlog().getLocalTableBlogId()
valueFactory.bootstrapping(token)
mGnssCallback != null
realm.checkIfValid()
NFC_UID=1027
Thread.sleep(10)
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallback mBluetoothGattCallback=new IBluetoothGattCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
return START_STICKY; 
MeasureSpec.makeMeasureSpec(myHeight,MeasureSpec.EXACTLY)
state != null && state.mTint != null
Integer.compare(o1.order(),o2.order())
appOpsManager.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
repository.loadForRequest(null)
bindingGroup.hasDefined(PORT_OFFSET)
endPos < bufEnd
args != null && args.size() > 1
isBookmarksList()
/**   * <p>Formats the receiver using the given format.</p> <p>This uses  {@link Formattable} to perform the formatting. Two variable maybe used to embed the left and right elements. Use  {@code %1$} for the leftelement (key) and  {@code %2$} for the right element (value).The default format used by  {@code toString()} is {@code (%1$s,%2$s)}.</p>  * @param format  the format string, optionally containing {@code %1$} and {@code %2$}, not null  * @return the formatted string, not null  */ public String toString(String format){   return String.format(format,getLeft(),getRight()); } 
assertPlanEquals(expectedPlan,actualPlan)
"application/xson".equals(contentType) || "xson".equalsIgnoreCase(contentType)
executionJobVertex.getMaxParallelism()
Thread.sleep(2500)
new RepositoryException(container,e.getMessage(),e)
Constants.JVM_NAME.contains("HotSpot") || Constants.JVM_NAME.contains("OpenJDK")
grammar.getTokenDisplayNames()
Duration.between((Temporal)right,(Temporal)left)
Throwable e
new IfNode(currentGraph.unique(new IsNullNode(receiver)),trueSucc,falseSucc,0.5,graphId)
MediaSessionLegacyHelper.getHelper(mContext).sendVolumeKeyEvent(event,AudioManager.USE_DEFAULT_STREAM_TYPE,true)
logger.error("Repair session " + future.session.getName() + " failed.",e)
ImmutableList<PersistentLocalScope>
temp.requestFocusInWindow()
mContext.sendBroadcastAsUser(intent,UserHandle.CURRENT)
writer.flush()
passCodeIsEnabled()
JSError.make(ref.source.getName(),ref.node,NAME_DEFINED_LATE_WARNING,name.fullName(),parent.fullName(),parent.declaration.source.getName(),String.valueOf(parent.declaration.node.getLineno()))
ensureYellow()
LinkageError e
LOGGER.isDebugEnabled()
appOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
klass.getDeclaredMethodsUnchecked(false,declaredMethods)
/**   * Called to resolve a input from a variable. Null if not possible.  * @param input is never null  * @return null if not possible/invalid  */ I parseValue(Object input); 
alarm.getId()
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
jarEntry.isDirectory()
rasterFilter != null && grid != null
new RotationPersist3Fragment()
selenium.isElementPresent("link=Control Panel")
mPostKeyguardExitAnimation.hasEnded() || mCurrentTime - mPostKeyguardExitAnimation.getStartTime() > mPostKeyguardExitAnimation.getDuration()
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/staticMembers/classObjectMethod.kt")
ObservableSource<T>
dynamicClassType.getDeclaredConstructor()
wireFormat.setConnectAttemptTimeout(connectTimeout)
jp.getLongValue()
new String[5]
JSRootConfiguration.getInstance(getProject()).storeLanguageLevelAndUpdateCaches(null)
(offset >= start && offset <= start + len) || (end >= start && end <= start + len) || (offset <= start && end >= start + len)
logExitAPICall(log,transactionType,account,payment != null ? payment.getPaymentMethodId() : null,payment != null ? payment.getId() : null,paymentTransaction != null ? paymentTransaction.getId() : null,paymentTransaction != null ? paymentTransaction.getProcessedAmount() : null,paymentTransaction != null ? paymentTransaction.getProcessedCurrency() : null,payment != null ? payment.getExternalKey() : null,paymentTransaction != null ? paymentTransaction.getExternalKey() : null,paymentTransaction != null ? paymentTransaction.getTransactionStatus() : null,paymentControlPluginNames,null)
name.indexOf(endQuote,startQuote.length())
LOGGER.lifecycle(msg.apply())
DefaultCacheKeysFactory.staticGetNaturalIdValues(cacheKey)
doTest(false,false)
dest.writeInt(mSubId)
CharSequence text
this.httpHandler.handle(req,resp).switchOnError(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
mFile.getStoragePath()
!mShowLockscreenNotifications
new RuntimeException("error initializing deserializer: " + deserializer.getClass().getName(),e)
StringUtil.isNotEmpty(functionName) && !"_".equals(functionName) && o.getContainingFile().getImportMap().containsKey(functionName)
ignoreUnknownFields=true
getPreferences().put(key,value)
logger.fine("Remove try/catch/finally")
pm.queryIntentServicesAsUser(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA)
homeListView.smoothScrollToPosition(0)
loaded.getLoaded().getDeclaredConstructor()
isLinux(expectedSql)
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
windowState.isOnScreen() && windowState.isVisibleLw() && !windowState.mWinAnimator.mEnterAnimationPending
LanguageUtil.isAvailableLocale(languageId)
NumberFormatException expected
mNavigationBarView.inScreenPinning() || mStatusBar.isKeyguardShowing()
builder.setPlaceholderImage(getResources().getDrawable(ActorSDK.sharedActor().style.getAvatarBackgroundResourse()),ScalingUtils.ScaleType.CENTER_CROP)
stat.st_mtim.tv_nsec.longValue()
SelectTimeZonePacificStandardTimeCPMATest.class
new EditSessionBlockChangeDelegate(editSession)
makeTypeWithArguments(rightNode)
type.getDeclaredConstructor()
new Duration(30,SECONDS)
Throwable e
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_STOP_FUNCTION,false)
new DDMFormViewFormInstanceRecordDisplayContext(request,response,_ddmFormInstanceRecordLocalService,_ddmFormRenderer,_ddmFormValuesFactory,_ddmFormValuesMerger)
discardChannel.receive(10_000)
dest.writeInt(mSubId)
WaitUtils.waitForPageToLoad()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ctrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
uuid.getMostSignificantBits() & 0xFFFFFFFF00000000L
scrollWebElementIntoView(webElement)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
intent.setDataAndType(uri,DocumentsContract.Root.MIME_TYPE_ITEM)
new Color(0xbfbfbfff)
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/staticMembers/ImportFromCompanionObject.kt")
mComment.getId()
parent instanceof AppWidgetHostView || parent == null
conf.setTimeDuration(ScmConfigKeys.OZONE_SCM_HEARTBEAT_INTERVAL,hbInterval.get(),TimeUnit.MILLISECONDS)
tokensToUpdateInSystemTable.add(token)
blog.getLocalTableBlogId()
selenium.isElementPresent("link=Control Panel")
MimeUtil.ENC_7BIT.equalsIgnoreCase(encoding) || MimeUtil.ENC_8BIT.equalsIgnoreCase(encoding) || MimeUtil.ENC_BINARY.equalsIgnoreCase(encoding)
ActivityOptions.makeBasic()
{4,7,5,11,6,5,7,5,11,11}
sUseRenderThread=false
syncOperation.delay <= 0
setValue(object,value.intValue())
start.expectedMessageCount(7)
m.size()
!mRenderNode.isPivotExplicitlySet()
jMethod.put("used",mUsed)
new Label(wSettings,SWT.RIGHT)
minorVersion=4
selenium.isElementPresent("link=Control Panel")
type.getDeclaredConstructor()
delegate.upsert(entity)
blog.getCapabilities() == null || !blog.getCapabilities().equals(capabilities)
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
new WorldPoint(2636,3453,0)
!connection.isClosed()
moveLock(orig,dest)
selenium.isElementPresent("link=Control Panel")
process(unionSelect.right(),sb)
index < _paramAnnotations.length
getConnectTimeout()
OutputScrapingExecutionFailure.hasFailure(output)
MethodNotFoundException.class
9 + count
Throwable e
offset >= i
ENABLE_SQLITE_LOG=false
lineCount == 5
displayAttachmentNotSavedMessage()
selenium.isElementPresent("link=Control Panel")
ReleaseId releaseId=KieServices.Factory.get().newReleaseId(namespace,"memory","1.0-SNAPSHOT"); 
mHandler.obtainMessage(MSG_FINGERPRINT_AUTHENTICATED)
obtainMessage(MSG_ZEN_MODE_CHANGED,zen ? 1 : 0,0)
fb.limit()
Assert.assertEquals(_memoryClusteredJobs.toString(),2,_memoryClusteredJobs.size())
Beans.newDuration(rtProps.getTimeToKillInSeconds()).getSeconds()
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
Arrays.asList("Java","CSharp","Python2","Python3","Node","Cpp")
c <= 'Z'
ConfigurePortletSMRootLayoutTest.class
websocketComponent.setMaxThreads(20)
PsiLiteralUtil.parseDouble(text)
found != null && found.getElementType() == ElementType.XML_COMMENT_START
id=10851
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/QualifiedSuperMembers.kt")
validatePossiblePropertyValues(propertyElement,possiblePropertyValues,filePath)
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
getPlayerPosition().y
w.createReadableString()
display.getRealMetrics(dm)
nextTokenIs(b,IDENTIFIER)
log.debug("Existing HeaderManager '" + mgr.getName() + "' merged with '"+ value.getName()+ "'")
ImmutableSortedMap<String,SortedMap<String,Object>>
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
super.onRequestSendAccessibilityEventInternal(child,event)
expand("serializedforms/JobDataMapSerializationTest.testEmptyMap.{?}.ser","JDK16","JDK17","JDK18")
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_UP,x,y,0)
config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
localFileSystem.refreshAndFindFileByIoFile(vimKeyMapFile)
service.getDomain().id()
((IPowerReceptor)pipe).powerRequest(from)
WeakSafeReadWriteLock strongReference
simpleEl.element("simple-trigger-value")
new Paint()
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.4")
scope == null || scope.equals("provided")
((AstridActivity)getActivity()).onFilterItemClicked(newFilter)
mResources.getDrawable(id,null)
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
new IllegalArgumentException(JSON_BUILDER + "invalid element")
/**   * The invoker component.  */ private final Component invoker; 
getPaymentMethodById(account.getPaymentMethodId(),true,context)
!_pds._job.isStopped()
T[]
new NoteDrawerCategoryAdapterViewHolder()
sceneRoot.setTagInternal(com.android.internal.R.id.scene_layoutid_cache,scenes)
reduceConfigWidthSize(sw,Surface.ROTATION_270,density,unrotDh,unrotDw)
cSet.setConceptSet(this)
getIndexes().hasIndex() && OBJECT.equals(mapConfig.getInMemoryFormat())
getFullJID(0)
result.ocFile.getMimeType()
next.handle(request).then(responseProcessor)
this.getFullyQualifiedName(DBPEvaluationContext.DDL)
makeString(actual,",","(",")")
TimeBase.class
mService.reconnect()
indexFile.isFile()
Optional.fromNullable(resourceManagement.getStats())
LOG.error("Failed to delete temp folder",e)
targets.getIntermediatePoints()
isColumnVector()
addAOEntitlementAndCheckForCompletion(bpSubscription.getBundleId(),"Telescopic-Scope",ProductCategory.ADD_ON,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.BLOCK,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
selenium.isElementPresent("link=Control Panel")
@RequestMapping
mAppToken.isVisible()
String.format("Error while checking frozen types on field %s of %s %s: %s",field.getName(),classDescription,field.getDeclaringClass().getName(),e.getMessage())
((JetPostfixExpression)element).getOperationReference()
origin.absoluteValue().doubleValue() < complexNumber.absoluteValue().doubleValue()
synchronized (mAm) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
imageView.setImageDrawable(null)
Collection<trainingListeners>
entry == null || entry.get() == null
new Notification(R.drawable.ic_statusbar_missedcall,"tick tick tick",System.currentTimeMillis() - (1000 * 60 * 60* 24),"(453) 123-2328","",null)
numDocs <= docsToGather
/**   */ private final LongAdder8 mapPubSize=new LongAdder8(); 
ColorProperties.getColor("scrollBarDarkShadow")
targetSdkVersion > N_MR1
!Values.WEBSOCKET.equalsIgnoreCase(upgrade)
tickEnd
Integer.parseInt(attrValue)
state.isAlive()
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
LAST_VERSION=260
ACRA.log.i(LOG_TAG,"ACRA is disabled for " + context.getPackageName() + " - forwarding uncaught Exception on to default ExceptionHandler")
RENDERER_COUNT=6
mContext.getString(R.string.branded_monitoring_description_app_personal,primaryVpn)
GregorianCalendar.getInstance()
telephony.isRadioOn(getOpPackageName())
ISODateTimeFormat.dateTime().withOffsetParsed()
log.warn("Unexpected exception on closing transaction.  Cause: " + e)
new LeftTuple(f0,sink)
new File(themeDirStr)
Map.Entry<String,Extension>
!mScreenOnEarly
logger.debug("Cannot update channel for group member ({})",e.getMessage())
!isBottomRightVisible
new RelativeCoordinatesProvider(hRef,hDelta,vRef,vDelta)
24 * density
origin.realComponent().doubleValue() < other
mNextNonWakeupDeliveryTime < nowELAPSED
mConnectionById.containsKey(callId)
ViewConfiguration.getLongPressTimeout() * 2.5f
assertEquals("Size of " + r,11,r.size())
new Paint()
GoExecutor.in(module).withParameterString(task.getCommand())
mExecutor.awaitTermination(1000,TimeUnit.MILLISECONDS)
child.getMeasuredWidth()
new AlreadyExistsException(cfm.ksName,cfm.cfName)
selenium.isElementPresent("link=Control Panel")
answer == null || comparator.compare(value,answer) > 0
checkCall(receiver)
log.debug("Performing lookup: %s --> %s",ips,retVal)
IServiceManager.getService()
new RuntimeException("Could not create TypeInformation for type " + type.getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.4")
REJECT_OUTSIZED_RESTORE=true
RedisRunner.shutDownDefaultRedisServerInstance()
Map<List<Object>,T>
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
assertEquals(typeString,actual().toString())
new InvalidPluginRequestException("A version must be specified for the tomcat plugin")
d.size(0)
mPowerManager.wakeUp(SystemClock.uptimeMillis(),"android.policy:FINGERPRINT")
granted.equals(NULL_ROLE)
tab[index]=newArr
decoder.originalChannel()
Collection<T>
externalMediaDir.getPath()
getExecutionContext(event,false)
appearance.getFloat(attr,0)
annotationProcessors.isEmpty() && plugins.isEmpty() && annotationProcessorDeps.isEmpty()
modIcon.getWidth()
jobLogText.getText()
TransactionUtil.validAssetName(assetIssueContract.getAbbr().toByteArray())
needRefresh || !isAllSized()
mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED && mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS) != PackageManager.PERMISSION_GRANTED
displayContent.getDockedStackVisibleForUserLocked()
log.info("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
Thread.sleep(1000)
m.getDeclaringClass()
myHeight - myDelegate.getIconHeight()
BeanPropertiesUtil.getObjectSilent(model,_rowIdProperty)
assertEquals(defsPath + " children",8,children.size())
assertEquals(7,beanCount)
new IllegalArgumentException("Cacheability is null")
upgradeDDLRecordVersionClassName(classNameDependencies)
mContent != null && ((Fragment)mContent).isAdded()
new MediaController(mContext,token)
targetRegistry.registerAlias(transactionManagerRef,"transactionManager")
new CargoWithHistoryDTO(cargo.trackingId().idString(),cargo.origin().unLocode().idString(),cargo.finalDestination().unLocode().idString(),StatusCode.claimed,"AAAAA","BALO",cargo.isMisdirected())
fileSizeKb / 1024
selenium.isElementPresent("link=Control Panel")
@Nullable private final P params; 
appWindowToken == null || !appWindowToken.isVisible()
part.publicSize()
prefs.getBoolean(PERSIST_SERVICE,true)
new LLVMSymbolReadResolver(runtime,frame,getStackSpaceFactory)
assetUri.getAssetName().toLowerCase()
annotations()
1.0
outLatch.endLatch.await(800,TimeUnit.MILLISECONDS)
query.startsWith("about:")
win.isAnimatingLw() && appWindow && showWhenLocked&& mKeyguardHidden
myVirtualFile != null && myProject != null
strategy.getFullJavaIdentifier(parameter)
dlg.setNegativeButton(fButtons[0],new AlertDialog.OnClickListener(){   public void onClick(  DialogInterface dialog,  int which){     dialog.dismiss();     notification.success(new PluginResult(PluginResult.Status.OK,1),callbackId);   } } )
DualViewColumnInfo<TreeNodeOnVcsRevision,T>
Exception t
laf.getClassName()
createShrinkFadeOutFromBottomAnimation(mContentContainer,0,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();   } } )
NETWORK_ACCESS_TIMEOUT_DEFAULT_MS=2000
serviceLocalException(new Throwable("remoteBrokerInfo is null"))
stall_till_cloudsize(5)
!rule.hasBuildSteps()
from("direct:start").aggregator().header("id").batchTimeout(500L)
~View.SYSTEM_UI_TRANSPARENT
strongClassCache.putIfAbsent(beanClass,results)
t.getCause()
parentOrActualGroup.isCompany() || parentOrActualGroup.isUser() || parentOrActualGroup.isUserGroup()
case Incoming: 
serializer.serializeInsert(metadata,entity,batch.getColumns(),batch.getValues(),batch.getSubQuery())
super.getIsNullProvider(path)
typeSettingsProperties.toString()
_log.warn(ioe,ioe)
intent.resolveType(getContentResolver())
dest.writeInt(mTxPower)
getNetworkPolicies(mContext.getOpPackageName())
dis.readFully(serializedData,0,length)
ERROR(true,true,false,false,false)
response.getLongContentLength()
final LongAdder8 puts=new LongAdder8(); 
!mUserVisibleHint && isVisibleToUser && mState < STARTED && mFragmentManager != null
PrivacyManager.getSettingBool(0,PrivacyManager.cSettingOnDemand,true,false)
i <= address.getMaxAddressLineIndex()
-1L
position + dockDividerWidth
myInflatorId == -1
mFileLength <= mBlockSize
MAX_DIMEN_FOR_ROUNDING=1920
group != null && this == group.mInternalConnection
qtype instanceof PyNoneType || qtype instanceof PyTypeReference
remaining == 0
variableName.substring((scopeName + ".").length())
!header.equals(sameHeader)
schedulerEventListenerWrapper.setClassName(groupName)
KotlinTestUtils.navigationMetadata("idea/testData/quickfix/autoImports/indexCallExtensionImportSetOnNoOperatorWarning.test")
Sets.intersection(new HashSet<>(a.getPropertyKeys()),new HashSet<>(b.getPropertyKeys()))
IccUtils.cdmaBcdByteToInt((byte)0x8c)
VERSION=28
lang.length() > 3
position.offset(mLeft,mTop)
getClass().getResource("porterTestData.zip").toURI()
protected T getCurrentTree(){   return myCurrentTree; } 
message.isExpired()
WikiTestUtil.addPage(TestPropsValues.getUserId(),node.getNodeId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString(),true,true,serviceContext)
Messages.showYesNoDialog(parentComponent,msg,ReportMessages.ERROR_REPORT,Messages.getErrorIcon())
Throwable exception
getOccurrence() <= count
mDuration >= 0 && mTransitions != null
config.getOrcStreamBufferSize()
info.getDeviceIdForPhone(slotId,mContext.getOpPackageName())
data.getAvatar() != null && data.getAvatar().getFullImage() != null
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
Collections.singletonList(ItemStack.EMPTY)
!includeGlobalTemplates || (template != null)
config.getReadOnlyCacheSize()
origin <= other
pathname.getName()
namespaceReverseRouter=true
ActivityManager.getService().handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,false,"isAppInactive",null)
target.setField(1,val2)
!asynchronous && mySynchronousRefreshCount == 0
new Paint()
mDarkIntensity != DARK_INTENSITY_NOT_SET
checkNotEmpty(className,EMPTY_STRING_MSG)
resultSetView.getGridControl()
op.get("address").add("host",host)
currentTx.concatenate(matrixTx)
_buildTemplateWithGradle("service-wrapper","wrapper-dependency-management","--service","com.liferay.portal.kernel.service.UserLocalServiceWrapper","--dependency-management-enabled")
@Child private DirectCallNode child=runtime.createDirectCallNode(innerTarget); 
mediaDriverBroadcastReceiver.receive(this,activeCorrelationId)
sTestCaseCounter == 0
fluidFuel.getBlockID()
position <= firstPos
MimeTypeUtil.isVideo(mFile)
!getDatabaseTypeEnvironment().isEnabled() || !isExecuted()
new MediaController(mContext,token)
lvl != null && this.levels.get(overrideLevelId) != null
publisher.publishWanReplicationUpdateBackup(name,view)
odi.close()
MetricRegistry localRegistry
mNotificationsUtilsWrapper.mapJsonToFormattableContent(bodyArray.getJSONObject(i))
psiClass != null && !(psiClass instanceof PsiTypeParameter)
isActive() && mInfo != null
Long.parseLong(strings[i])
counter > max
return mAppearingDelay; 
mWindowingMode != WINDOWING_MODE_PINNED
new ArrayList<>(mapMarkers)
this.constraints.updateFromFactHandle(workingMemory,handle)
imageView.setImageDrawable(drawable)
Registry.is("ide.hide.excluded.files",true)
params.getSimulatedPlatformVersion()
new FtrlDelta(true,alpha)
MAX_PERCENT_DIFFERENCE=0.3
_version=version
assertEquals(ImageRequest.DEFAULT_IMAGE_BACKOFF_MULT,2f,0)
esVersion.onOrAfter(Version.V_5_3_0_UNRELEASED)
EvaluationResult<SkyValue>
getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)
out.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
new MessageHeaderAccessor(originalMessage)
REGISTER_BG_SETTINGS=false
ConstantNode.forInt(config.logOfHRGrainBytes)
