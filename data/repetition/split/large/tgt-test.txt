strategiesBuilder::customMessageReader
mNwService.getInterfaceConfig(mTetherInterfaceName)
UNPINNED=0
layout.isTypeControlPanel() || layout.isPublicLayout() || SitesUtil.isUserGroupLayoutSetViewable(permissionChecker,layout.getGroup())
new LocalTachyonClusterResource(Constants.GB,Constants.KB,BLOCK_SIZE,Constants.KEYVALUE_ENABLED,"true")
new KBArticleTitleException("Missing title")
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",newNetwork.name(),nc,newNetwork.networkCapabilities)
len % (1024 * 1024) / 10000
mState.action == ACTION_OPEN_TREE || mState.action == ACTION_PICK_COPY_DESTINATION
selenium.isElementPresent("link=Control Panel")
BodyExtractor<Mono<MultiValueMap<String,String>>,ReactiveHttpInputMessage>
updateChildren()
/**   * This is  {@link CasWebflowClientSessionContextConfigurationTests}.  * @author Misagh Moayyed  * @since 5.0.0  */ public class CasWebflowClientSessionContextConfigurationTests extends BaseCasWebflowSessionContextConfiguration {   @Autowired @Qualifier("loginFlowExecutor") private FlowExecutor flowExecutorViaClientFlowExecution;   @Override public FlowExecutor getFlowExecutor(){     return this.flowExecutorViaClientFlowExecution;   } } 
child.getProperties().isStreamPartitionedOn(partitioningRequirement)
timeout=60_000L
jdbcTemplate.queryForObject("SELECT COUNT(0) FROM " + tableName,Integer.class)
createUrl(Url.append(myRepositoryRoot,originUrl),false)
value.length() < MAX_LENGTH
MonitoringPortlet.isMonitoringPortletRenderRequest()
@Override
params[1]
logger.debug("Cannot update channel for group member ({})",e.getMessage())
Long.parseLong(delay)
completion.onErrorResume(ex -> handler.handle(exchange,ex))
HttpEntity.class.isAssignableFrom(parameterType)
logger.warn("Niko Home Control: error sending message, trying to restart communication")
assertClusterSizeEventually(2,nodes[0])
logger.warn("{}",general)
Map<JsName,JsFunction>
type.getDeclaredConstructor()
Slog.w(TAG,"Service done with onDestroy, but executeNesting=" + r.executeNesting + ": "+ r)
ams.mContext.createPackageContextAsUser(appInfo.packageName,0,new UserHandle(userId))
CacheService.instance.keyCache.getInternal(key)
IntentFactory.create(mContext,type,classifiedText)
new GroupDialog(frame,oldGroup)
m.nclasses()
1000.0 * FILES_BYTES
new StatusText(this){   @Override protected boolean isStatusVisible(){     return UIUtil.uiChildren(JBPanelWithEmptyText.this).filter(Component::isVisible).isEmpty();   } } 
contextBuilder.allowCreateThread(allow_create_thread)
this == READY
method.getDeclaringClass()
AnalyticsDataFactory.clearAnalyticsData()
left.getFieldName().equalsIgnoreCase(right.getFieldName())
new IndexingStats.Stats(3L,71L,0L,0L,0L,0L,0L,0L,true,302L)
PaymentMethodResource.class
RESULT_TIMEOUT=5000
input.getPeekPosition()
cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())
assertTrue(jmsTemplate.isPubSubDomain())
beans.add(bean)
new IllegalStateException("Legacy advertisement can't be connectable and non-scannable")
id=46
-Float.parseFloat(position.getChildByName("Y").getText())
ap.getSsidStr()
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
assertEquals(fc2,fc)
synchronized (mAuthorities) {   writeStatisticsLocked(); } 
random.randomValues().nextBasicMultilingualPlaneTextArray()
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
!(layer instanceof FrozenLayer) && layer.type() == Layer.Type.CONVOLUTIONAL
parent instanceof AppWidgetHostView || parent == null
IllegalArgumentException e
Pair<Type,Accessor>
id=10804
List<Fragment>
arguments[1]
!newDefaultSubIdObj.equals(mDefaultSubId)
Thread.sleep(500L)
artifact.getName().getType()
assertFalse(storer().shouldProcess(curi1))
pushExecutor.execute(new NamedRunnable("OkHttp %s Push Request[%s]",hostName,streamId){   @Override public void execute(){     boolean cancel=pushObserver.onRequest(streamId,requestHeaders);     try {       if (cancel) {         frameWriter.rstStream(streamId,ErrorCode.CANCEL); synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )
@Override public VariableExpression visitBuiltInTypePrmrAlt(BuiltInTypePrmrAltContext ctx){   return configureAST(this.visitBuiltInType(ctx.builtInType()),ctx); } 
info == null || info.transactionStatus == null
elementalType.getKind()
/**   * Creates an empty struct with the given location.   */ public SkylarkInfo createEmpty(Location loc){   return SkylarkInfo.createSchemaless(this,ImmutableMap.of(),loc); } 
Map<String,Object>
ic.readFloat("zFarOverride",0)
new DeadCodeEliminationPhase(Optional)
ShrinkWrap.create(WebArchive.class).addClass(MyBatchlet.class).addAsWebInfResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")).addAsResource("META-INF/batch-jobs/myJob.xml")
final IGeoPoint geoPoint
myConfiguration.setInt(Generator.GENERATOR_MAX_COUNT,2)
current >= 0
StringBuilder sb=new StringBuilder(); 
inUseByte != Record.IN_USE.byteValue() && inUseByte != Record.NOT_IN_USE.byteValue()
myFixture.testCompletionVariants(getTestName(true) + ".go","bar","break","const","continue","defer","for","go","if","return","fallthrough","goto","select","switch","var","struct","map","type")
mService.saveConfiguration()
new CheckboxTreeViewer(parent,style)
return true; 
autoCommit != null && autoCommit != conn.getAutoCommit()
serviceDataUuid == null || mServiceData == null
new PriorityTieredBrokerSelectorStrategy(0,1)
appContext.getSystemService(Context.WINDOW_SERVICE)
WebUtils.toHttp(response).sendError(HttpServletResponse.SC_UNAUTHORIZED)
"Error resetting interface " + mTetherInterfaceName + ", :"+ e
@Override public S fillFromImpl(ModelBuilder builder){   super.fillFromImpl((Job)builder);   this.messages=new ValidationMessageBase[builder._messages.length];   int i=0;   for (  ModelBuilder.ValidationMessage vm : builder._messages) {     this.messages[i++]=new ValidationMessageV3().fillFromImpl(vm);   }   ValidationMessageBase.mapValidationMessageFieldNames(this.messages,new String[]{"_train","_valid"},new String[]{"training_frame","validation_frame"});   this.error_count=builder.error_count();   ModelBuilderSchema s=(ModelBuilderSchema)Schema.schema(this.getSchemaVersion(),builder).fillFromImpl(builder);   parameters=s.parameters;   return this; } 
args.length == 1
GL11.glTexParameteriv(target,pname,params)
selenium.isElementPresent("link=Control Panel")
case OK: 
log.debug("Performing lookup: %s --> %s",nodeIds,retVal)
selenium.isElementPresent("link=Control Panel")
addButton.setActionCommand(addCommand)
warningCompilationClause.withWarningContaining("@org.neo4j.procedure.Context usage warning: found unsupported restricted type " + "<org.neo4j.server.security.enterprise.log.SecurityLog> on EnterpriseProcedure#securityLog.\n" + "  The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\n"+ "  You can ignore this warning by passing the option -AIgnoreContextWarnings to the Java compiler").in(sproc).onLine(42)
mController.setRingerMode(AudioManager.RINGER_MODE_NORMAL,false)
event.getRawY()
this.route(request).map(RouterFunctions::cast).switchIfEmpty(Mono.defer(() -> other.route(request).map(RouterFunctions::cast)))
!newDefaultSubIdObj.equals(mDefaultSubId)
delimiterText != null && delimiterText.equals(SQLConstants.DEFAULT_STATEMENT_DELIMITER)
rootView.getId()
new IndexingStats.Stats(0L,0L,0L,0L,0L,0L,0L,0L,true,randomLong())
selenium.isElementPresent("link=Control Panel")
assertEquals(2,map2.keySet().size())
private void speedOtherPlayers(final Server server,final CommandSender sender,final boolean isFly,final boolean isBypass,final float speed,final String name) throws PlayerNotFoundException {   boolean skipHidden=sender instanceof Player && !ess.getUser(sender).isAuthorized("essentials.vanish.interact");   boolean foundUser=false;   final List<Player> matchedPlayers=server.matchPlayer(name);   for (  Player matchPlayer : matchedPlayers) {     final User player=ess.getUser(matchPlayer);     if (skipHidden && player.isHidden()) {       continue;     }     foundUser=true;     if (isFly) {       matchPlayer.setFlySpeed(getRealMoveSpeed(speed,isFly,isBypass));       sender.sendMessage(_("moveSpeed",_("flying"),speed,matchPlayer.getDisplayName()));     }  else {       matchPlayer.setWalkSpeed(getRealMoveSpeed(speed,isFly,isBypass));       sender.sendMessage(_("moveSpeed",_("walking"),speed,matchPlayer.getDisplayName()));     }   }   if (!foundUser) {     throw new NotEnoughArgumentsException(_("playerNotFound"));   } } 
temporaryFolder.newFolder()
mParent == null
Long.decode(str)
entry != null && (entry.info.flags & ApplicationInfo.FLAG_INSTALLED) != 0
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=3
selenium.isElementPresent("link=Control Panel")
max=2000
resolveExecutableType(child,castSourceType)
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
i != 0 && j != 0
loaded.getLoaded().getDeclaredConstructor()
null != m_isJUnit && !m_isJUnit.equals(XmlSuite.DEFAULT_JUNIT)
warningBytes > limitBytes && limitBytes != LIMIT_DISABLED
response.setStatus(statusCode)
checkCall(receiver)
row.getTable().moveLastOver(row.getIndex())
JBIterable.from(getSelectedValuesList())
mInterpolator == null || mNativePtr == null
return 10; 
(short)suggestions.size() >= max_results
params.getSimulatedPlatformVersion()
are("resource1-reflections.xml","resource2-reflections.xml")
selenium.isElementPresent("link=Control Panel")
frameCount <= 1
Timber.i("Creating SAVING_DIALOG")
assertMockEndpointsSatisfied()
portletDataContext.addReferenceElement(stagedModel,entityElement,layout,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true)
LambdaArgExtKt.foo("",10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
MAX_PERCENT_DIFFERENCE=0.3
counter > max
runner.run(1,true,false)
synchronized (mAuthorities) {   writeStatisticsLocked(); } 
metadata.addHaving(new BooleanBuilder())
mAppToken.isVisible()
selenium.isElementPresent("link=Control Panel")
setIntegerPart(String.valueOf(integerPart))
nextArg()
/**   * Tests for  {@link Es6SortedDependencies}  */ public class Es6SortedDependenciesTest extends SortedDependenciesTestHelper {   @Override public SortedDependencies<SimpleDependencyInfo> createSortedDependencies(  List<SimpleDependencyInfo> shuffled) throws CircularDependencyException {     return new Es6SortedDependencies<>(shuffled);   }   @Override public boolean handlesCycles(){     return true;   } } 
Person person=new Person(); 
Manager.this.readyState == ReadyState.OPEN || Manager.this.readyState == ReadyState.OPENING
getFragmentManager()
activity.getMyApplication().getSettings().MAP_EMPTY_STATE_ALLOWED
dto.setVariables(variables)
StyleableProperty<Number>
epsi(otherArr)
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
id=16505
previousResultRsmSet.getFirst()
sr0.getValue().f2
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
deadline < now && deadline != 0
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
endTracksTo("main")
(Number)resultList
this.contactTabsTable.put(contact.getMetaUID(),chatPanel)
myCache1.get("myKey1").getObjectValue()
dest.writeInt(mSubId)
USE_DISPLAY_LIST_PROPERTIES=false
E edge
name.isEmpty() || entries == null
result.addUnsafeEnchantment(enchantment,(Integer)entry.getValue())
activity == null || activity.isFinishing()
new File(propertyFiles.get(fileName),fileName)
Boolean.parseBoolean(notification.getFieldValue("isNewAlert"))
DISMISS_TO_VIEW_RATIO_LIMIT=.4
new DefaultCompatibilityCheckResult<Object>(requested,candidate)
SamplingProfiler.newThreadGroupThreadSet(group)
subCursor.getString(COLUMN_NAME)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
selenium.isElementPresent("link=Control Panel")
pane.getFirstComponent()
host.setHeaderView(mExpandIndicator)
out.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
LOGGER.error(msg.apply())
new LightweightThread(null,null,new Merge2Test())
Arrays.asList(MimeTypes.VIDEO_MP4,MimeTypes.VIDEO_WEBM,MimeTypes.VIDEO_H263,MimeTypes.AUDIO_MP4,MimeTypes.AUDIO_MPEG)
dockedBounds.left - dockDividerWidth
DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
hook.step(prg,op)
Throwable e
startUnicastCluster(4,new int[]{0},-1)
meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
final URLDetail wd=detailIterator.next(); 
props.load(is)
fromRegistries(fromProviders(provider),codecRegistry)
mLinearLayout.setVisibility(View.VISIBLE)
insets.left != 0
assertEquals(5,body.size())
Throwable e
Setting.intSetting("indices.queries.cache.count",1000,1,Property.NodeScope)
stripFilter.skipWhiteSpace(charBuffer,stringWriter,true)
POSITIVE_Y(2)
!"POST".equals(connection.getRequestMethod()) && !"PUT".equals(connection.getRequestMethod())
new Duration(30,SECONDS)
ATLAS_MAP_ENTRY_FIELD_COUNT=3
selenium.isElementPresent("link=Control Panel")
LOGGER.error("Error with XML parser configuration",e1)
selenium.click("//li[4]/span/a/span")
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(statement).descriptionAndTooltip(message)
dest.writeInt(mSubId)
lp.resolveLayoutDirection(layoutDirection)
uncollectedPointCreator.createUnCollectedPoint(timestamp)
new Rect(left,top,right,bottom)
options.setTaskOverlay(true,true)
emptyView != null && emptyView.getImportantForAccessibility() == IMPORTANT_FOR_ACCESSIBILITY_AUTO
r.thread != null && !r.isolated
getPath("InputDefaultConfig.java")
prop.getParamValue()
new BasicSessionCredentials(accessKey,secretKey,sessionToken)
Thread.sleep(1)
Call<RemoteCallResponseType>
cs[c].set(r,(long)((_createFrame.integer_range + 1) * (1 - 2 * rng.nextDouble())))
@Nullable
remainingAmount != null && originalAmount != null
ENERGY_COUNTER=5
log.debug("Error loading known hosts",e)
src.remaining()
!onDemand
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
SamplingProfiler.newThreadGroupThreadSet(group)
in.readStringFixed(8)
expression.getContainingFile()
responseRaw(p)
moveInputMethodWindowsIfNeededLocked(false) || displayed
httpResponseCode != 204
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0))
V
checkCall(receiver)
formController.getEventLogger().logEvent(EventLogger.EventTypes.BACKGROUND_LOCATION_ENABLED,0,null,false)
adminMaxThreads / 2
Log_OC.e(TAG,"Trying to share a NULL OCFile")
mNotificationsUtilsWrapper.mapJsonToFormattableContent(bodyArray.getJSONObject(i))
qs[1]
Slog.e(TAG,"couldn't inflate view for notification " + ident,exception)
new MockNode(settings.build(),Version.CURRENT,Arrays.asList(MarvelPlugin.class,LicensePlugin.class))
Instant.ofEpochMilli(millis)
Preconditions.checkNotNull(options,"fragment options unavailable: " + optionsClass.getName())
Thread.sleep(1000)
-921224945
engine.execute(query).dumpToString()
new ReflectionsException("could not create class object from file " + file.getRelativePath(),e)
Util.SDK_INT >= 25
stat.st_ctim.tv_nsec.longValue()
startActivity(in)
Log.e(TAG,"This will become an error",ex)
getTestName(false)
intBuffer.clear()
Boolean.parseBoolean(System.getProperty("cassandra.consistent.rangemovement","true"))
LocationManager.GPS_PROVIDER.equals(name) || LocationManager.NETWORK_PROVIDER.equals(name) || LocationManager.FUSED_PROVIDER.equals(name)
mGnssCallback != null
Build.VERSION.SDK_INT < 11 || CamcorderProfile.hasProfile(CamcorderProfile.QUALITY_LOW)
type.getDeclaredConstructor()
session == null || serverName == null
builder.build()
Assert.assertEquals(1,configs.size())
metastore.getHost()
assertEquals("Range for response status value " + result.getResponse().getStatus(),HttpStatus.Series.CLIENT_ERROR,getHttpStatusSeries(result))
new GitException("Remote push url " + url + " is invalid. ")
dbStat.setString(1,table.getName())
new ServerPartition(partitionKeyNew,RowType.T_DOUBLE_DENSE,0.0)
IllegalStateException e=expectThrows(IllegalStateException.class,() -> {   try (XContentBuilder builder=XContentBuilder.builder(randomFrom(XContentType.values()).xContent())){     builder.startObject();     builder.field("status",randomFrom(RestStatus.values()));     builder.endObject();     try (XContentParser parser=createParser(builder.contentType().xContent(),builder.bytes())){       BytesRestResponse.errorFromXContent(parser);     }    }  } ); 
onFailed(x)
distDir.getAbsolutePath()
Collection<PostgreTableBase>
Thread.sleep(1000)
Stream.of(null,null)
tag.setLabelposition("top")
mStartActivity.task == null || mStartActivity.task == parent
activityNdx <= topActivityNdx
testable.sort(sorted.clone())
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
destinationMap.remove(destination,adapter)
selenium.click("//li[4]/span/a/span")
return true; 
Number value=iterator.next(); 
users.get(j)
overrideAllAssetTagNames != null
parser.nextText()
selenium.isElementPresent("link=Control Panel")
mRvc == null || !session.isActive()
!libraryOrderEntry.isValid()
SSLParametersImpl.getDefaultX509TrustManager()
from > to
!trackMotionScroll(delta,delta)
Assert.assertEquals(120L,ownerCapsuleNew.getNetUsage())
IllegalArgumentException.class
toPatterns("gradle-core","gradle-cli","slf4j-api","logback-classic","logback-core","jul-to-slf4j")
head.equals("ntpath") || head.equals("posixpath")
debug(Log.IGNORED,ignored)
XContentType.JSON.mediaType()
drawable != null
pm.performDexOpt(pkg,null,true)
Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS),1)
return false; 
TypeSpec.parse(builder,false)
Math.max(1000L,connectionTimeout)
regUser * trusteeWeightValue * trusteeFactorValue* trusteeFactorValue
StagingServiceHttp.createStagingRequest(httpPrincipal,remoteGroupId,checksum)
rematchAllNetworksAndRequests(networkAgent,oldScore)
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
TestSuiteEnvironment.getServerAddressNode1()
new IllegalStateException("Legacy advertising can't include TX power level in header")
new TextPaint(Paint.ANTI_ALIAS_FLAG)
actionBuilder.setStderr(BuildEventStreamProtos.File.newBuilder().setName("stderr").setUri(pathConverter.apply(stderr)).build())
product.getName()
curr.end < intervals[i].start
CacheFactory.setMaxLifetimeProperty(getName(),maxLifetime)
Sets.intersection(new HashSet<>(a.getPropertyKeys()),new HashSet<>(b.getPropertyKeys()))
lock.isHeldByCurrentThread()
new AlertDialog.Builder(this)
new AndroidDownloader().downloadAsString(fileListURL,false)
selenium.isElementPresent("link=Control Panel")
new KillableColoredProcessHandler(commandLine,true)
r.curApp != null && r.curApp.curReceiver == r
inHeatableTicks=20
os.copiedByteArray()
encoding == null
getIntent().getStringExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
mBatteryStatus=BATTERY_STATUS_UNKNOWN
countNewlines(headerFragment + lhsFragment + thenFragment) + 2
timeout(10000)
checkNoPlanNodeMatches(exchange(),"Expected rules to be fired before 'AddExchanges' optimizer")
scheme.equalsIgnoreCase("tel") || scheme.equalsIgnoreCase("sip") || scheme.equalsIgnoreCase("sms")|| scheme.equalsIgnoreCase("smsto")|| scheme.equalsIgnoreCase("mailto")|| scheme.equalsIgnoreCase("nfc")
mLastAnnouncementWasQuickSettings && !mTracking && !isCollapsing()
entity instanceof ProcessDefinitionEntity
parser.parse("-u",username,"-p",password,"-U",url)
DBG=true
c.context()
String.format(Locale.ROOT,"User [%s] doesn't exist",username)
m1.getName().equals("getAttributes") && !m1.getName().equals(m2.getName())
callbacks.onImageFailed()
recalculateRouteInBackground(lastFixedLocation,finalLocation,currentGPXRoute)
configurations.maybeCreate(Dependency.DEFAULT_CONFIGURATION)
selenium.isElementPresent("link=Control Panel")
device == AudioSystem.DEVICE_OUT_HDMI || device == AudioSystem.DEVICE_OUT_HDMI_ARC
isAllowed()
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
am.getRecentTasks(MAX_TASKS,ActivityManager.RECENT_IGNORE_UNAVAILABLE)
(exifIFD0Directory == null) || !exifIFD0Directory.containsTag(ExifIFD0Directory.TAG_ORIENTATION)
MAX_PERCENT_DIFFERENCE=0.3
vel < mFlingExpandMinVelocityPx
new QuickAdapter(PAGE_SIZE)
DeprecationLogger.nagUserWith("<someIdeTask>.withXml is deprecated! Moved to the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
clusterType == UNKNOWN && newDescription.getType() != REPLICA_SET_GHOST
Number rate=(Number)map.get(MediaFormat.KEY_FRAME_RATE); 
model.getCurrentResult() != null && graphModel != null
new TrustException("DERIVED_KEY_ERROR",e,LOG)
GL20.glUniform3iv(location,toIntBuffer(v,offset,count * 3))
@Override public final DivideByOnConditionStep or(String sql){   return or(condition(sql)); } 
Map<String,Object>
XmlPullParserFactory.newInstance("org.xmlpull.mxp1.MXParserFactory",null)
builder.humanReadableField(Field.TIMEOUT.getPreferredName(),Field.TIMEOUT_HUMAN.getPreferredName(),timeout)
classFile.matcher(file.getName()).matches()
!propertyValue.toString().matches(regex)
"Stream " + importerName
mContext.startActivityAsUser(intent,UserHandle.CURRENT)
HttpConnectionParams.setConnectionTimeout(httpParams,socketTimeout)
Native.getLibraryOptions(classes[i])
duration.getHours()
selenium.isElementPresent("link=Control Panel")
replicaEngine.refresh("test")
Long.parseLong(val)
super.getSummary()
LinkedHashSet<>
selenium.isElementPresent("link=Control Panel")
binding.getEntityAttribute() != null && binding.getEntityAttribute().getName().equals(binding.getMetaAttribute().getName()) || binding instanceof DBDAttributeBindingType
selenium.isElementPresent("link=Control Panel")
getRequestParameters()
myCache1.get("myKey1").getObjectValue()
String message
terminal.receivedSendToTerminal(event.getInputText())
httpClient.getSSLSocketMiddleware()
varX("listener",vclClassNode)
result != null && !result.missesRequiredFields()
fullJid.split("/",2)
/**   * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception.  */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException {   throw new RuntimeException(new InputMismatchException(recognizer)); } 
telephony.getDataNetworkTypeForSubscriber(subId,getOpPackageName())
QuickStartMySitePrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
DATABASE_VERSION=65
Screen.dp(33)
8 * data.length
new StringBuilder(729)
layerInput.size(0)
label != null
StringUtils.isEmpty(content)
context.getProjectCompileScope()
appOps.checkOpNoThrow(AppOpsManager.OP_GET_USAGE_STATS,uid,pkg)
!satellite.isCurrentWindowSatellite()
grantRuntimePermissionsLPw(pkg,permissions,permissionGrant.fixed,userId)
mValues[8]
IOException ex
info.getOldIndex() != -1 && info.getOldIndex() < oldParameters.length
false && mNumOps.getOpsAdded() >= opsAllowed
T[]
resources.getDimensionPixelSize(R.dimen.close_handle_height)
SAMPLE_RATE_HZ_MAX=96000
cCurrentVersion=409
transportError.augmentDescription("\n" + headers.toString())
-1
CompactionAwareWriter.class
crashInfo != null && crashInfo.durationMillis != -1
PsiUtil.isExpressionUsed(grAssignmentExpression)
onDetachedFromWindow()
mAllowGeneratedReplies=true
setServiceForegroundInnerLocked(r,id,notification,0)
result.getReceipt().getEnergyTotal()
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
mUiHandler.removeCallbacks(pae)
query.getLong(7)
activity == null || activity.isFinishing()
parent != null && ProjectFileIndex.getInstance(project).isInContent(parent)
1
BlobStoreUtils.class
oldCacheEntry == null
mFlexItemInEdit.setAlignSelf(AlignSelf.AUTO)
mMenu.getNonActionItems()
probability=0.5
!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create database")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop database")
Log_OC.e(TAG,"Incorrect action sent " + intent.getAction())
port < 0
framework.getBroadcasterFactory().lookup(a.broadcaster(),a.path(),true)
out.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
new UpdateDeParser(expressionDeParser,selectDeParser,buffer)
Number reduceResult
update.getName()
portalTopLevelBuildData.getBuildURL()
nextRenderId=39
ThemeUtils.primaryColor(getContext())
getRootInternal()
stats.getLastUpdateTime() >= lastUpdateTime
finishAndRemoveTask()
node.getName().toString()
SAVE_TRACK_TO_GPX.setModeValue(ApplicationMode.DEFAULT,false)
Double.doubleToRawLongBits(v)
hasColumn(oldTableName,"articleId")
UpgradeStepRegistrator.class
tnext.getValue()
logger.debug("NODE {}: Device discovery resolved to thingType {}",node.getNodeId(),foundProduct.getThingTypeUID())
StringBuilder text=new StringBuilder(status.getMessage()); 
logger.info(x.getClass() + ": " + x.getMessage())
editor.getColorsScheme().getAttributes(diffAttributeKey).getErrorStripeColor()
pos < size - 1 && CharacterHelper.charType(chars.charAt(pos),skipPunc) != CharacterHelper.charType(chars.charAt(pos + 1),skipPunc)
ThingFactoryHelper.class
/**   * Returns the next pseudorandom  {@link ArrayValue} of time elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of time elements.  */ public TimeArray nextTimeArray(){   OffsetTime[] array=nextTimeArrayRaw(minArray(),maxArray());   return Values.timeArray(array); } 
getName().equalsIgnoreCase("LONG") || getName().equalsIgnoreCase("NCLOB") || getName().equalsIgnoreCase("BFILE")|| getName().equalsIgnoreCase("ROWID")
verify(mWifiService).stopLocalOnlyHotspot(TEST_PACKAGE_NAME)
TEST_TIMEOUT_MS=400
doConvertAndCast(returnType)
new LeftTuple(new DefaultFactHandle(1,"cheese"),null)
Thread.sleep(5000)
selenium.isElementPresent("link=Control Panel")
new UnsupportedOperationException(getClass().getName())
new Paint()
H2O.unimpl("PCA currently only works on numeric data")
doc=ALLOW_EMPTY_DOC
max() > 32
new File(fileDialog.getDirectory(),fileDialog.getFile())
VertexAttribute.ColorPacked()
usersResource != null
Throwable ex
!settings.FAST_ROUTE_MODE.getModeValue(params.mode)
wZipFilename.setText(dir)
mSyncStatus.valueAt(i)
setPreference(prefs,editor,r,R.string.p_show_menu_sort,true,ifUnset)
new AssertionError("type=" + type)
SPConstants.WSS_X509_PKI_PATH_V1_TOKEN10.equals(requiredVersionAndType)
logger.error("Error getting value for expression " + expressionField.getExpression() + " "+ e.getMessage(),e)
mSyncStatus.valueAt(i)
synchronized (mAm) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
new SystemVibrator(context)
_wValue instanceof Integer && ((Integer)_wValue > 0) || (_wValue instanceof String && _wValue != null)
TaskLog.captureOutAndError(null,command,stdout,stderr,logLength,false)
!dockOnTopOrLeft
atCount >= 1
SystemKeyspace.setLocalHostId(hostId)
assertEquals(7.5,((Object[])result[0][0])[1])
new FormAttachment(100,0)
DocumentUtil.isInsideSurrogatePair(myEditor.getDocument(),startOffset)
httpClient.getSSLSocketMiddleware()
appearance.getFloat(attr,0)
log.getParent()
increment != 1 || Registry.is("ide.scroll.default.unit.increment")
mFrameTransformation.printShortString(pw)
point.getName()
agentInstances.findAgentAndRefreshStatus(uuid)
manyToOne.setLazy(true)
Long.parseLong(val)
GceMockUtils.class
Thread.sleep(1000)
Thread.sleep(1000)
messageType2.set(message2,"message","Hello World")
Assert.assertTrue(content.contains(GroupConstants.CONTROL_PANEL_FRIENDLY_URL))
expirationTime * 1000L
Trans != NO_TRANSPOSE
selenium.click("//li[4]/span/a/span")
channelIdle(ctx,IdleState.ALL_IDLE,lastIoTime)
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
Log.e(TAG,"This will become an error",ex)
viewFlow.getChildWidth()
Math.max(mXAxis.mAxisMinimum,pos.y)
Messages.MESSAGES.templateParameterNull(param)
winAnimator.setSurfaceBoundariesLocked(recoveringMemory)
Assert.assertEquals(modelAdditionCounters.toString(),5,modelAdditionCounters.size())
assertEquals(1840,res.getWeight(1,2),10)
dockedBounds.bottom + dockDividerWidth
new byte[14]
ISOChronology.getInstance(getZone())
code == 10
!useSuper && !isStatic && GroovyCategorySupport.hasCategoryInCurrentThread()&& name.length() > 0
loaded.getLoaded().getDeclaredConstructor()
param.size(0)
selenium.waitForVisible("//li[@title='Asset Publisher']/p/a")
!licensee.collectionEnabled()
mCurrIconRow != null && mCurrIconRow.isVisible()
BLOCK_LIGHT_SUN_POW=0.96f
if (DEBUG_DEVICES) {   Log.d(TAG,"onSetA2dpSinkConnectionState btDevice=" + btDevice + "state="+ state); } 
Trans != NO_TRANSPOSE
!cached && addFiltered && node.isFiltered()
IndexerRegistryUtil.nullSafeGetIndexer(className)
Exception e
resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,REAL,DOUBLE,VARCHAR)
ignoreUnknown=true
file.getFileNameOnly()
selenium.isElementPresent("link=Control Panel")
tw.close()
contentHolder.getChildren().setAll(content)
loader.stop()
idAnnotation != null && !method.isBridge()
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
LOG.debug("Detected JMX protocol is null for clusterName = " + clusterName + ", componentName = "+ componentName)
Exception e
MonitoringPortlet.setMonitoringPortletEventRequest(monitoringPortletEventRequest)
POOL_LIMIT=100
mListNavLayout != null
OutOfMemoryError e
(byte)0xe2
selenium.isElementPresent("link=Control Panel")
testerAnnotation.annotationType()
currentCall != null && currentCall == callId
ScanResult.is5GHz(frequency)
@Override public CharsRefBuilder append(CharSequence csq){   if (csq == null) {     return append(NULL_STRING);   }   return append(csq,0,csq.length()); } 
endTracksTo("main")
new SQLException(e.getMessage(),e)
AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))
PaginationRequest.of(10,1)
Math.floor((double)(powerQuery[out] * totalPowerContained) / totalPowerQuery)
javaVersion < 8
in.getAttribute("name")
blog.getLocalTableBlogId()
list != null && node.findMethodByName(method.getName(),false) == null
new Instant(20L)
note.get_id() == 0 && !noteTmp.isChanged(note)
mParent == null
value.length() < MAX_LENGTH
computator.getContentRectMinusAllMargins()
SYNC_OK=0
new Dependency("org.grails","grails-project-api",grailsVersion,true,"org.grails:grails-core")
logError(lcurly,"lcurly",lcurlyPos,curlyIndent())
GenerateUtils.class
mNwService.getInterfaceConfig(mTetherInterfaceName)
mask.length()
OverrideResolver.generateOverridesInFunctionGroup(methodName,null,functionsFromSupertypes,functionsFromCurrent,classDescriptor,new OverrideResolver.DescriptorSink(){   @Override public void addToScope(  @NotNull CallableMemberDescriptor fakeOverride){     functions.add((FunctionDescriptor)fakeOverride);   }   @Override public void conflict(  @NotNull CallableMemberDescriptor fromSuper,  @NotNull CallableMemberDescriptor fromCurrent){   } } )
MavenBuild.create(new File("projects/struts-1.3.9-diet/pom.xml")).setGoals("clean package","org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar")
repositoryEntry == null
IDHandler.getBounds(RelationCategory.PROPERTY,false)
TokenSet.create(JavaTokenType.C_STYLE_COMMENT,JavaTokenType.END_OF_LINE_COMMENT,JavaDocElementType.DOC_COMMENT,TokenType.WHITE_SPACE)
((SQLDataSource)dataSource).getSQLDialect().storesUnquotedCase()
left.getRowLength()
Boolean.class
deltaY >= 0
metadata.getFaces()
relatedProduct.getRelatedProduct()
getResource(GROOVY_AUTOCONFIG_FILE,myClassLoader,updateStatus)
loaded.getLoaded().getDeclaredConstructor()
selenium.isElementPresent("link=Control Panel")
new TextField<String>(TopicConfiguration.TOPIC_NAME_KEY,String.class)
doSubstitute(TypeSubstitutor.EMPTY,newOwner,modality,visibility,isOperator(),isInfix(),isExternal(),isInline(),isTailrec(),hasStableParameterNames(),hasSynthesizedParameterNames(),null,copyOverrides,kind)
BinaryFunction<Object>
ParamUtil.getString(uploadPortletRequest,"layoutTemplateId",PropsValues.DEFAULT_LAYOUT_TEMPLATE_ID)
type == null || type == UNKNOWN_PARAMETER_TYPE
getSessionPool().returnObject(session)
new ShardPath(false,path,path,shardId)
doTestWithRuntime()
CHECKIN_VERSION=30
getServiceGuarded().sendMessage(subId,callingPkg,contentUri,locationUrl,configOverrides,sentIntent)
bindings.or(ImmutableMap.<ColumnHandle,Object>of())
instruction.getNarrowLiteral()
TLS_RSA_WITH_3DES_EDE_CBC_SHA("DES-CBC3-SHA",KeyExchange.RSA,Authentication.RSA,Encryption.TRIPLE_DES,MessageDigest.SHA1,Protocol.SSLv3,false,EncryptionLevel.HIGH,true,112,168,"SSL_RSA_WITH_3DES_EDE_CBC_SHA")
logger.debug("Cannot play queue ({})",e.getMessage())
sender.waitForClose(1000)
ctx.grid().forCacheNodes(name())
rootDependency.toBundleUrlWithType()
ModuleIdentifier.fromString(moduleName)
channel.getName().equalsIgnoreCase(actualChatRoom.getIdentifier())
conceptAnswer.getAnswerConcept()
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
List<BottomEntity>
viewerPanel.setRedraw(false)
snapshotTypes != null && snapshotTypes.length > 0
new MailMessage(from,to,subject,userThreadBody,true)
components.afterEach(new Action<PlayApplicationSpec>(){   @Override public void execute(  PlayApplicationSpec playComponent){     playComponent.getSources().create("coffeeScript",CoffeeScriptSourceSet.class,new Action<CoffeeScriptSourceSet>(){       @Override public void execute(      CoffeeScriptSourceSet coffeeScriptSourceSet){         coffeeScriptSourceSet.getSource().srcDir("app/assets");         coffeeScriptSourceSet.getSource().include("**/*.coffee");       }     } );   } } )
allocator.getFlowController().prepareActionAllWrite(input,activations)
javacError(message,null)
id=10998
Object[]
field.holder().isInitialized()
legacyValue.isDefined()
StringBuilder message=new StringBuilder(); 
mValues[8]
Nd4j.getDistributions().createNormal(0,1)
myDebugger.close()
LIRInstructionClass<SPARCHotSpotJumpToExceptionHandlerInCallerOp>
config.getMaxQueryMemoryPerNode().toBytes() <= maxMemory.toBytes()
listener.iterationDone(valueNet,valueIterationCount,valueEpochCount)
eventListeners != null
result=60
entity instanceof EntityPlayerSP
temp.reAddLeft()
LinkageError e
animation.setDuration(300L)
mRilDataRadioTechnology=m.getInt("dataRadioTechnology")
holder.textView.setBackgroundDrawable(null)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
view != null && view.getParent() == this
new EnterSelectionDialog(shell,tablenames,Messages.getString("AccessOutputDialog.Dialog.SelectATable.Title"),Messages.getString("AccessOutputDialog.Dialog.SelectATable.Message"))
telephony.getNetworkTypeForSubscriber(subId,getOpPackageName())
BACKOFF_DISMISSAL_COUNT_ON_SWIPE_UP_SHOW=1
getDelegate().getDefaultCipherSuites()
MBThread.class
toShort(bytes,0,SIZEOF_SHORT)
viewGroup == null || viewGroup.getChildCount() == 0
focusable.isAccessibilityFocusable()
!method.getModifiers().contains(Modifier.STATIC) && method.getModifiers().contains(Modifier.ABSTRACT) && method.getParameters().isEmpty()&& method.getReturnType().getKind() != TypeKind.VOID && (!method.getReturnType().getKind().equals(TypeKind.DECLARED) || !builderTypeForFiltering.equals(env.getTypeUtils().asElement(method.getReturnType())))
cctx.gridEvents().isRecordable(EVT_CACHE_QUERY_OBJECT_READ)
Mono.subscriberContext()
terminal.receivedSendToTerminal(postCreateText)
selenium.isElementPresent("link=Control Panel")
Integer.parseInt(taskIdStr)
this.appView
password.startsWith("{MD5}") || password.startsWith("{SHA}")
mUiHandler.removeCallbacks(pae)
new ByteBuddy().subclass(Source.class).method(named("hello")).intercept(MethodDelegation.to(Target2.class)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
return maxPagePartitioningBufferSize; 
win.isAnimatingLw() && appWindow && showWhenLocked&& mKeyguardHidden
!mNetworkAvailable
verify(mWifiService).stopLocalOnlyHotspot()
FastMath.min(origin,num.doubleValue())
fields[i] >= 0 && in1 != null
super.onContextItemSelected(item)
"Using bind address: " + bindAddress
String[] value(); 
appContext.getSystemService(Context.WINDOW_SERVICE)
level.equals("ERROR") || level.equals("FATAL")
selenium.isElementPresent("link=Control Panel")
getFluid().getFluid().getLocalizedName(getFluid())
ordinals.size()
mService.getWifiServiceMessenger(mContext.getOpPackageName())
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_ONLY_JOB_OUTPUT))
causeString.contains("NoSuchGroupException") || causeString.contains("PrincipalException")
opSetSMS.removeMessageListener(messageSourceService)
WordPress.getCurrentBlog().getLocalTableBlogId()
mCursor.close()
KBFolderServiceUtil.getKBFolder(getParentResourcePrimKey())
endsWith("/home/source")
incrementAppWidgetServiceRefCount(appWidgetId,fc)
oldOverride.addParameter("enabled","enabled")
checkCall(receiver)
response.get(ROLLED_BACK)
public Object getRequestCacheKey(){   return requestCacheKey; } 
assertEquals(1,dbBoys.size())
expected == double.class || expected == Double.class
new IndexWriter(indexDir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
String message
info.getIccSerialNumberForSubscriber(subId,mContext.getOpPackageName())
bukkit.getRawNote()
parseJavaCodeReference(builder,false,true,false,false)
path.startsWith(FileSystemItem.HOME_PREFIX) || path.startsWith("/") || path.matches("^[a-zA-Z]:\\/.*")
selenium.isElementPresent("link=Control Panel")
JSONArray value
routes.InputTypesResource()
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
manager.beginTransaction().remove(fragment).commitAllowingStateLoss()
log.info(sm.getString("webappClassLoader.stackTrace",threadName,getStackTrace(thread)))
_start >= 0
RandomDocumentPicks.randomIngestDocument(random(),Collections.emptyMap())
mScreenBrightnessDarkConfig > screenBrightnessSettingMinimum
implement(Foo.class,MethodDelegation.to(Foo.class)).getLoaded().getDeclaredConstructor()
-30
mSeekBar.setProgress(0,true)
public ShippingInfo mapLine(FieldSet fieldSet,int lineNum){   ShippingInfo info=new ShippingInfo();   info.setShipperId(fieldSet.readString(SHIPPER_ID_COLUMN));   info.setShippingTypeId(fieldSet.readString(SHIPPING_TYPE_ID_COLUMN));   info.setShippingInfo(fieldSet.readString(ADDITIONAL_SHIPPING_INFO_COLUMN));   return info; } 
".md".equals(extension) || extension.toLowerCase().startsWith(".markdown")
CodeStyleManager.getInstance(myProject).reformatText(file,ranges)
new LeftTuple(f1,sink)
removeCachedServiceLocked(getChangingUserId())
dest.writeInt(mSubId)
i <= rlist.size() - 1
assertCorrectionsByOrder(rule,"Rytmus","Remus","Rhythmus")
SwingUtilities.invokeLater(new Runnable(){   public void run(){     if (checkForRejectOrByPass(command,forced,result))     return;     if (myRequestFocusCmd == command) {       myRequestFocusCmd=null;       command.run().doWhenDone(new Runnable(){         public void run(){           LaterInvocator.invokeLater(new Runnable(){             public void run(){               result.setDone();             }           } );         }       } ).doWhenRejected(new Runnable(){         public void run(){           result.setRejected();         }       } );       restartIdleAlarm();       if (forced) {         myForcedFocusRequestsAlarm.addRequest(new Runnable(){           public void run(){             setLastEffectiveForcedRequest(null);           }         } ,250);       }     }  else {       rejectCommand(command,result);     }   } } )
new OptionValue<>(3)
viewToClick != null && viewToClick.isAttachedToWindow()
journalArticle.getDisplayDate()
new EditorLanguage("mode/rdoc",false,false)
parent.getChildPosition(v)
logger.debug("Using override port of %d on client %s",overridePort,clientName)
telephony.isOffhook(getOpPackageName())
c == Byte.class || c == Byte.TYPE
element.getStringValue()
marshallerCache().context().preloader().syncFuture().listen(new CI1<IgniteInternalFuture<?>>(){   @Override public void apply(  IgniteInternalFuture<?> f){     ctx.marshallerContext().onMarshallerCacheReady(ctx);   } } )
((GrParameter)parameter).getDeclaredType()
selenium.isElementPresent("link=Control Panel")
conceptToValidate.getUuid()
interactor.startCommand(packageName,callback,mCommand,mArgs)
nonce.timeStamp <= now
mChildrenExpanded ? mDividerHeight : mChildPadding
new Paint(Paint.ANTI_ALIAS_FLAG)
partialUri.toLowerCase()
!getUnwrapDescription(file).showOptionsDialog() || ApplicationManager.getApplication().isUnitTestMode()
intent.setDataAndType(uri,DocumentsContract.Root.MIME_TYPE_ITEM)
mUserManager.getUsers(true)
taskService.createTaskQuery().or().taskInvolvedUser("involvedUser").taskInvolvedGroupsIn(groups)
continueUpdateBounds(HOME_STACK_ID)
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED) || ctTypeStr.equals(ContentType.MULTIPART_ALTERNATIVE)
context.getOpPackageName()
ServiceProxyFactory.newServiceTrackedInstance(PortalCapabilityLocator.class,LegacyExternalRepositoryDefiner.class,"_portalCapabilityLocator",false,true)
Math.min(desired,heightSize)
JSError.make(boundFunNode,GOOG_BIND_EXPECTS_FUNCTION,pair.type.toString())
new Paint()
getTestName(true)
!mIsAttached || mAdapter == null
host1.getSocketAddress()
mRepeat > 0
primitiveType != null || arrayComponentType != null
waitUntilElement(feedbackText,"Feedback message should be present").is().visible()
JSError.make(declNode,TypeCheck.CONFLICTING_SHAPE_TYPE,"dict",className)
getLog().warn("register druid-driver mbean error",ex)
new SimplexNoise(seed)
IndexReader.open(dir,false)
new ProtoFile("descriptor.proto",null,NO_STRINGS,Arrays.asList("src/test/resources/unittest_import.proto"),NO_TYPES,NO_SERVICES,map(),NO_EXTEND_DECLARATIONS)
mService.disconnect(mContext.getOpPackageName())
parent == null || !(parent instanceof PsiReferenceExpression)
new IllegalStateException("Advertising can't be both connectable and scannable")
handles[count]
String[]
clampScreenBrightness(mCurrentScreenBrightnessSetting)
super(numHits); 
HashMap<String,CstType>
checkCall(receiver)
assertEquals(3,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())
user != null
HighlightInfo.newHighlightInfo(HighlightInfoType.WARNING).range(range(element)).descriptionAndTooltip(message)
dest.writeInt(mSubId)
JMeterUtils.getPropDefault("httpclient4.validate_after_inactivity",1700)
Log.d(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
ActivityManager.handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,true,false,"cancelNotificationWithTag",pkg)
proxyHTTPSServer.setText(Preferences.get("proxy.https.server"))
mMat[7]
mSeekBar.setProgress(mLastProgress > -1 ? mLastProgress : mOriginalStreamVolume,true)
for (VirtualFile root : myRoots) {   Color color;   if (i >= ROOT_COLORS.length) {     color=getDefaultRootColor();   }  else {     color=ROOT_COLORS[i];     i++;   }   myRoots2Colors.put(root,color); } 
Looper.prepareMainLooper()
awsClient.deleteImage(resource.getId())
contact.getWorldManifold()
activityNdx <= topActivityNdx
old + 10
new IllegalStateException("Advertising can't be both connectable and anonymous")
mapExpressionStatement(node)
requestURI.startsWith(excludedPath)
diagnostic.getCode().equals("compiler.err.cant.access") || diagnostic.getCode().equals("compiler.err.proc.messager")
SCAN_STATUS_COMPLETE=2
latch.await(4000,TimeUnit.MILLISECONDS)
Validator.isNotNull(modified)
mCameraUser.submitRequest(request,true)
assertEquals(800f,animator.getFrame())
logger.fine(name)
mOverlay != null && mBottomOverlay != null && mRotation != RotationUtils.getExactRotation(mContext)
new RuntimeException(e.getMessage(),e)
StreamletNamePrefix prefix
times + BASE_FILE_NUMBER
scheduleRemoveStartingWindowLocked(wtoken)
new ArrayList<>(0)
logger.debug("Cannot clear queue ({})",e.getMessage())
!moduleFileIndex.isInTestSourceContent(fileOrDir)
row(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null)
texCoords.put(updateTexCoordArray,offset,size)
logger.getLoggedInfo().contains("This stubbing was never used")
CacheProjection<K,V>
selenium.isElementPresent("link=Control Panel")
textDelimiterTrailing.getSelection()
chargeUAh > 0 && level > 0
responseHelper.invokeCancel(callback)
GL20.glUniform3iv(location,toIntBuffer(v,offset,count * 3))
bitmap == null || bitmap.getWidth() == 0 || bitmap.getHeight() == 0
mappers.mapper().searchQuoteAnalyzer()
tracesDir.mkdirs()
d.setDefaultEncoding(mergedMetaData.getDefaultEncoding())
new UnsupportedOperationException("Resolved method declarations should have the " + TypeVariableResolutionCapability.class.getName() + ".")
clipItem.coerceToText(mContext)
currentFuel == null && fuel != null
Util.isCreditCardTopupSupported(activity,link)
result.getType()
TelephonyManager.getDefault().getCurrentPhoneType()
Pattern.compile(regexp,Pattern.CASE_INSENSITIVE)
LinkedHashSet<String>
requestLine.split("\\s",-1)
x2 - x1
mOverlay != null && mBottomOverlay != null && mRotation != RotationUtils.getExactRotation(mContext)
Integer.parseInt(options.getMaxKeys())
users.get(j)
libsDir() != null && libsDir().exists()
r.nextBoolean()
res.getString(R.string.data_usage_warning_body)
r.curApp != null && r.curApp.curReceiver == r
selenium.isElementPresent("link=Control Panel")
Integer.valueOf(compressionLevel)
mTempDate.get(Calendar.DAY_OF_YEAR) == mMaxDate.get(Calendar.DAY_OF_YEAR)
SCAN_STATUS_COMPLETE=2
Map<ShardId,ShardRestoreStatus>
new GZIPOutputStream(outputStream)
synchronized (mAm) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
instance.managementService.destroy()
intent.setDataAndType(uri,DocumentsContract.Root.MIME_TYPE_ITEM)
HashMap<Integer,ResTypeSpec>
Throwable exc
new CompletionThread(w,TestConcurrencyObserverEvent.onCompleted,f1,f2,f3,f4,f5,f6,f7,f8)
info.getDeviceIdForPhone(slotId,mContext.getOpPackageName())
fr != null
stts.readInt()
HttpConnectionUtil.getClient(timeout)
assertThat(connector.getSoLingerTime()).isEqualTo(30000)
loaded.getLoaded().getDeclaredConstructor()
sep == null || "".equals(sep)
settings.readLPw(null,0,false)
isChild() || !window.hasFeature(Window.FEATURE_ACTION_BAR) || mActionBar != null
proxyFactory.createClass().getDeclaredConstructor()
System.currentTimeMillis()
"Unknown id: " + id
position >= 0 && position < mData.size()
telephony.getDataNetworkTypeForSubscriber(subId,getOpPackageName())
bs.max() <= 32
new Paint()
!showNotifications.isNull()
Outdoor(1)
mDragState == STATE_IDLE
!displayContent.isReady() || !mPolicy.isScreenOn() || !okToAnimate()
String.format("null label in rule %s, %s",getLabel().toString(),context)
logger.fine("reconnect attempt error")
HttpStatus.FORBIDDEN.name()
return false; 
specModel.getRawProps()
new Entry(p.hash,p.key,p.value,head)
Long.parseLong(deadline)
getParent() == null || startActionMode(callback) == null
ccfg1.setWriteBehindFlushFrequency(60_000)
Foundation.log("[info] " + tag + ": "+ message)
HashMap evaluator=new HashMap(); 
myFixture.assertPreferredCompletionItems(0,"AXX.one","AXX.two","main","const","false","new","null","true","AbstractClassInstantiationError","AbstractClassInstantiationError","ArgumentError","ArgumentError","ArgumentError.notNull","ArgumentError.value","AssertionError","AssertionError","AXB","AXB.four","AXB.three","AXX","BidirectionalIterator")
StorageEngineFactory.getStorageEngine(cube,false)
!m.containsNonNullValue(TagMetadata.TAG_UUID) || m.getValue(TagMetadata.TAG_UUID) == 0
rPos >= 0
BooleanUtils.isNotTrue(p.getMetadata().getExcluded())
block.getChildren()[1]
!getInstance(project).ensureFilesWritable(files).hasReadonlyFiles()
typedAction.getRawHandler()
updateSubtreeNow(node)
IClientConfigKey<String>
_log.error(pe,pe)
new IllegalArgumentException(String.format("You cannot %s an empty string",operationDescription))
mPluggedIn ? Tile.STATE_UNAVAILABLE : mPowerSave ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE
sep < 0 || sep > j
mApplicationObject == null && (Process.SYSTEM_UID == Process.myUid())
UUID cfId=Schema.instance.getId(ksName,cfName); 
new CorruptedCacheException("block pointer must be >= -1, but was" + pos)
!trackMotionScroll(delta,delta)
Throwable e
link.bone.getWorldBindPosition()
type == TRIANGLE || type == TRIANGLES
_constructor.newInstance(0,0,0,StringPool.BLANK,_IMAGE_URL,StringPool.BLANK)
Arrays.asList(RFXComValueSelector.RAW_DATA,RFXComValueSelector.SIGNAL_LEVEL,RFXComValueSelector.COMMAND,RFXComValueSelector.CONTACT)
mode != null && !mode.isEmpty()
out.writeInt(sampleCount)
mContext.getPackageManager().getApplicationInfoAsUser(sbn.getPackageName(),0,sbn.getUser().getIdentifier())
selenium.isElementPresent("link=Control Panel")
type.getDeclaredConstructor()
new MongoClientEmbeddedException(format("Connection String contains invalid hosts: %s",connectionString.getHosts()))
tracesDir.mkdirs()
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
selenium.isElementPresent("link=Control Panel")
value == null
reactContext.runOnJSQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
new WorkflowException("Unable to lock workflow task " + workflowTaskInstanceId,pe)
instrumentation.isRedefineClassesSupported()
TEST_UTIL.waitUntilAllRegionsAssigned(TEST_TABLE.getTableName())
selenium.isElementPresent("link=Control Panel")
Long.parseLong(attrValue)
loaded.getLoaded().getDeclaredConstructor()
SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)
computator.getContentRectMinusAllMargins()
checkManageOrCreateUsersPermission("setupRestrictedProfile")
kbase.newStatefulKnowledgeSession(conf)
seconds * 1000L
Boolean.valueOf(value)
mPowerManager.isInteractive()
new Paint()
selenium.isElementPresent("link=Control Panel")
typeSerializer.getDeserializedType()
rhs.getScore()
public JobsV3 cancel(int version,JobsV3 c){   Job j=DKV.getGet(c.job_id.key());   if (j == null) {     throw new IllegalArgumentException("No job with key " + c.job_id.key());   }   j.cancel();   return c; } 
ProgressDialog.show(context,null,context.getText(R.string.signing_out),false)
selenium.isElementPresent("link=Control Panel")
infos == null || infos.length == 0
scheduleTask(alarm,taskLatch,task)
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Double.valueOf(value)
Slog.w(TAG,"Invalid wallpaper data")
File.listRoots()[0].getPath()
dest.writeTypedArray(remoteInputs,flags)
(ZWaveWakeUpCommandClass)node.getCommandClass(CommandClass.WAKE_UP)
appearance.getFloat(attr,0)
networkInfo == null || networkInfo.getType() == ConnectivityManager.TYPE_WIFI && !networkInfo.isConnected()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5FilenameNoRoot(weightsHdf5Filename)
n.doubleValue()
Validator.isNotNull(ppe.getCause().getMessage())
mService.enableNetwork(netId,attemptConnect,mContext.getOpPackageName())
assertEquals(6,result.getBySeverity(Severity.NOTE).size())
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
assertEquals("total runtime",119.859,model.getRunningTime(),0.000001)
ApacheAsyncHttpProvider.class
new File(_dir,extraLibDirName)
append(FlowManager.getTableName(table))
jniGetLocalAnchorB(addr,tmp)
mState.action == ACTION_OPEN_TREE || mState.action == ACTION_PICK_COPY_DESTINATION
dynamicType.getLoaded().getDeclaredConstructor()
runUTRunner(testDir.getPath(),testFile.getPath() + "::GoodTest::test_passes","true")
initIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY)
Simple.forClass(MutableList.class)
telephony.getNeighboringCellInfo(mContext.getOpPackageName())
out.writeByte(ANNOTATION_CONSTANT_TAG)
receiver != null && mjConnector.canConnect(receiver) && receiver.canConnect(mjConnector)
this.authDecisionStatementProviders
dateTimeFormatter.format(value)
new IndexWriter(startDir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
response.get(ROLLED_BACK)
getOptionalString(singletonMap("string",42),list)
valueFormatter != null && !(valueFormatter instanceof ValueFormatter.Raw)
mLteSignalStrength > 31
LOGGER.lifecycle(msg.apply())
dest.writeInt(mSubId)
IOException e
ImmutableSortedMap<String,SortedMap<String,Object>>
assertThat(dto.get("snapshotId")).isEqualTo(3L)
dateTimeFormatter.format(value)
isGreaterOrEqual(platformVersion,M)
ScriptingUtils.getMatcherForExternalGroovyScript(mappedAttributeName)
Exception e
FieldAccess.forField(delegateField).read()
LOG.debug(message)
getParent() == null || startActionMode(callback) == null
DiagnosticFactory0.create(WARNING)
assertThat(request.getBody().readUtf8()).isIn("<my-object><message>hello world</message><count>10</count></my-object>","<my-object><count>10</count><message>hello world</message></my-object>")
AnnotatedElementUtils.findAnnotationAttributes(method,annotType)
this.route(request).switchIfEmpty(Mono.defer(() -> other.route(request)))
LinkedHashMap<String,Operator<? extends Serializable>>
testModules("var foo = function () {if (true) var module = {};" + "module.exports = {};};" + "module.exports = foo;","goog.provide('module$test');" + "var foo$$module$test=function(){if(true)var module={};" + "module.exports={}};"+ "var module$test=foo$$module$test")
runtime.minus(provided)
logger.warn("license [{}] - invalid",license.uid())
AnnotatedElementUtils.findAnnotationAttributes(method,annotType)
REDEFINE_MODULE.invoke(instrumentation,module,Collections.singleton(target),Collections.emptyMap(),Collections.emptyMap(),Collections.emptySet(),Collections.emptyMap())
marketDataService.getBittrexOrderBook(pairString,50)
refresh(true)
oldVersion != 3
request.getContextPath()
120L * dbManager.getDynamicPropertiesStore().getTransactionFee()
Character.class
new FetchResponse(Errors.NONE,new LinkedHashMap<>(partitions),throttleTime,INVALID_SESSION_ID)
mappers.mapper().searchQuoteAnalyzer()
@Nullable UTXOProvider vUTXOProvider
(int)(editor.getLineHeight() * 0.1)
mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED && mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS) != PackageManager.PERMISSION_GRANTED
ENABLE_SQLITE_LOG=false
editor.isDirty()
X.hasCause(e,IgniteInterruptedCheckedException.class,InterruptedException.class)
new RequestCounter("tests.StatsTest.statsShowSpuriousValues",resetDurationMs,mockTime)
this.getContactJid().split("/",2)
throwable.printStackTrace(System.err)
_imageTrain.loadParam(networkParms)
groupsById.remove(cachedGroupId)
new Box2DTestCollection()
Preconditions.checkState(previous == null || previous.equals(value),"Expected header path to be consistent but key %s mapped to different values: " + "(old: %s, new: %s)",key,previous,value)
new QSDetailClipper(mDetail)
Integer.parseInt(System.getProperty("cassandra.memtable_row_overhead_computation_step","100000"))
command.execute(answerForm)
new IllegalStateException(sm.getString("messageSendStateMachine.changeType"))
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallback mBluetoothGattCallback=new IBluetoothGattCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
resources.lookup(normPath)
e.getPresentation().setEnabledAndVisible(false)
selenium.isElementPresent("link=Control Panel")
LinkedHashSet<PyType>
new ByteArrayInputStream(decryptedPayload)
selenium.isElementPresent("link=Control Panel")
Builder<M,B>
field.tokenStream(docMapper.mappers().indexAnalyzer())
i > 0 && i < 8
Integer.parseInt(taskIdStr)
null == iobj.getType() && Strings.isBlank(iobj.getFactory())
Slog.e(TAG,"Unknown restriction: " + restriction)
stmt.execute(sqlQuery)
suiteMethod.invoke(null)
new IndexWriter(dir,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
webRequest.getServletContext()
1
CodeStyle.getProjectOrDefaultSettings(project)
c == Long.class || c == Long.TYPE
info.prefixedName()
this.url=url
@ConditionalOnEnabledHealthIndicator("rabbit")
listeners.executed(context)
SimpleBoolFunction other=(SimpleBoolFunction)o; 
"Unable to get queryfields for SQL: " + Const.CR + sNewSQL
mRepeat > 0
String.format(Locale.US,"(\\d{0,%d})(\\.\\d{1,%d})?",integer,fraction)
@Nullable
new FreeMarkerTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_configuration,_templateContextHelper,false)
Integer.parseInt(topStr)
1 << 16
BatchServerInventoryViewProvider.class
new ObjectMapper().readerFor(List.class)
mFrameTransformation.printShortString(pw)
factory.getEmbeddedServletContainer()
!mRenderNode.isPivotExplicitlySet()
m.getTablePerHierarchy()
this.getClass().getName()
name + "." + signatureEntry.getKey()
getBoolean(SPIDER_PROCESS_FORM,true)
T[]
return true; 
log_lines[9].substring(0,774)
session.getMachineIdentifier().startsWith(config.getMachineIdentifier())
false && ourXWindowIDEA94683FocusBug && isFocused()&& !myRequestFocus&& prevOwner != null
assertEquals(200f,animator.getFrame())
System.out.println("The stack is full, can't insert value")
dimensionsIterator.remove()
VMDebug.attachAgent(library + "=" + options,classLoader)
E
HDR_TYPE_SM=0x03
new PoolBagEntry(null,0,pool)
getActiveFgCall().getPhone().startDtmf(c)
viewWidth <= 0 || viewWidth > screenWidth
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
byteBuffer == null || !(byteBuffer instanceof DirectBuffer)
doReturn(new Hashtable<String,String>()).when(bundle).getHeaders(StringPool.BLANK)
getPlayerPosition().y
mQsDensityContainer.getLayoutParams()
saleAdjustmentPrice.lessThanOrEqual(retailAdjustmentPrice)
EventLog.writeEvent(EventLogTags.NOTIFICATION_CANCEL,pkg,id,tag,mustHaveFlags,mustNotHaveFlags)
this.publicKey
sTestCaseCounter == 0
session.sessions().createUserSession(adminRealm,admin,"admin",null,"form",false,null,null)
dl.error("_offset_column","Offset is only supported for regression.")
LinkageError e
mpi < 135 || leftSide
holder.textView.setBackgroundDrawable(mSelectedBackground)
onDetachedFromWindows()
mIpSecService.allocateSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
out.writeData(entry.getValue())
new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy,name)
log.error("Error creating class:'" + className + "' in JavaSampler "+ getName()+ ", check for a missing jar in your jmeter 'search_paths' and 'plugin_dependency_paths' properties",ex)
path.getPath()
tok.getToken()
event.getRawY()
INTERRUPTION_THRESHOLD=10
loaded.getLoaded().getDeclaredConstructor()
mCallback.onInputUpdated(inputId)
new ResultSetIterator(conn,generatedKeys,getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())
/**   * This version of getRow() only takes data from certain rowsets We select these rowsets that have name = step Otherwise it's the same as the other one.  */ public synchronized RowMetaAndData getRowFrom(String from) throws KettleRowException {   output_rowset_nr=findInputRowSetNumber(from,0,stepname,0);   if (output_rowset_nr < 0) {     throw new KettleException("Couldn't find hop '" + from + "' to read from");   }   return getRowFrom(output_rowset_nr); } 
e instanceof InterruptedException || Thread.currentThread().isInterrupted()
mLastEvent.getMStartTime()
!c.isEncoded()
response.get(ROLLED_BACK)
Long.parseLong(job.findExtraInfoBackward(BatchConstants.LOOKUP_EXT_SNAPSHOT_SRC_RECORD_CNT_PFX + tableName,"-1"))
protocolProvider.getProtocolDisplayName()
/**   * The component supports both opt-in and opt-out warnings on a per-user basis using a simple algorithm of three variables: <ol> <li> {@link #setWarningAttributeName(String) warningAttributeName}</li> <li> {@link #setWarningAttributeValue(String)} warningAttributeValue}</li><li> {@link #setDisplayWarningOnMatch(boolean) displayWarningOnMatch}</li> </ol> The first two parameters define an attribute on the user entry to match on, and the third parameter determines whether password expiration warnings should be displayed on match. <p> Deployers MUST configure LDAP components to provide <code>warningAttributeName</code> in the set of attributes returned from the LDAP query for user details.  * @author Marvin S. Addison  */ public class OptionalWarningAccountStateHandler extends DefaultAccountStateHandler {   /**   * Name of user attribute that describes whether or not to display expiration warnings.   */   @NotNull private String warningAttributeName;   /**   * Attribute value to match.   */   @NotNull private String warningAttributeValue;   /**   * True to opt into password expiration warnings on match, false to opt out on match.   */   private boolean displayWarningOnMatch=true;   /**   * Sets the user attribute used to determine whether to display password expiration warnings.  * @param warningAttributeName Attribute on authenticated user entry.  */   public void setWarningAttributeName(  final String warningAttributeName){     this.warningAttributeName=warningAttributeName;   }   /**   * Sets the value of  {@link #warningAttributeName} used as basis of comparison.  * @param warningAttributeValue Value to match against.  */   public void setWarningAttributeValue(  final String warningAttributeValue){     this.warningAttributeValue=warningAttributeValue;   }   /**   * Determines whether password expiration warnings are opt-in or opt-out.  * @param displayWarningOnMatch True to opt into password expiration warnings on match, false to opt out on match.Default is true.  */   public void setDisplayWarningOnMatch(  final boolean displayWarningOnMatch){     this.displayWarningOnMatch=displayWarningOnMatch;   }   @Override protected void handleWarning(  final AccountState.Warning warning,  final AuthenticationResponse response,  final LdapPasswordPolicyConfiguration configuration,  final List<Message> messages){     final LdapAttribute attribute=response.getLdapEntry().getAttribute(this.warningAttributeName);     boolean matches=false;     if (attribute != null) {       matches=this.warningAttributeValue.equals(attribute.getStringValue());     }     if (displayWarningOnMatch == matches) {       super.handleWarning(warning,response,configuration,messages);     }   } } 
EmailableReporter2.class
flowParameters.putAll(flowParam)
m.getDeclaringClass()
unkn_parts.addAll(Hive.get().getPartitions(tab))
nextNext != null && nextNext.getElementType() == JetTokens.IDE_TEMPLATE_END
result != null && !result.missesRequiredFields()
methodsToImplement(type,methods)
ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forBrokerTenantDelete(brokerTag)
u.isUnknownType() || u == Indexer.idx.builtins.None
!mKey.equals(other.mKey)
mTo == 0
selenium.isElementPresent("link=Control Panel")
mScreenBrightnessDarkConfig > screenBrightnessSettingMinimum
mPlayer.getCurrentPosition() * 1000L
scanFlags & SCAN_REQUIRE_KNOWN
loadingSegments.get(segment.getIdentifier(),server.getTier())
mContext.startActivityAsUser(intent,null,UserHandle.CURRENT)
!src.isEnabled() || src.isLongClickable()
sDefaults.putBoolean(KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL,true)
tw.close()
delta + end
new IndexWriter(store,new SimpleAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
mLastAnnouncementWasQuickSettings && !mTracking && !isCollapsing()
data.indexOfFilterField >= 0
mAuthorities.valueAt(i)
LOGGER.warn("Could not parse entry",ex)
g.cachesx()
public Builder setMaximumNumberOfRedirects(int maxDefaultRedirects){   configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);   return this; } 
new SendReq(message.getPduHeaders(),body,message.getDatabaseMessageId(),message.getDatabaseMessageBox(),message.getSentTimestamp())
sendMsg(mAudioHandler,MSG_PERSIST_VOLUME,SENDMSG_QUEUE,PERSIST_CURRENT | PERSIST_LAST_AUDIBLE,device,streamState,PERSIST_DELAY)
!sameActivity || !sameIntent
context.getMainLooper()
_lrnConf(card)
ssl.hasDefined(CommonAttributes.CIPHER_SUITE)
BufferUtil.zeroBuffer(1)
message.processMessage(null)
JavaConversions.mapAsJavaMap(logManager.logsByTopicPartition())
strangeVocab.getElementFrequency()
position + dockDividerWidth
promise.tryFailure(cause)
VERSION=8
new WrappedEpoxyModelClickListener(this,clickListener)
types == null || types.isEmpty()
activityInfos.get(position).componentName
List<PdfComment>
applicationsContext.unbindService(TokenRefreshServiceConnection.this)
findTypeFromRefInner(expression)
myStartupManager.runWhenProjectIsInitialized(new Runnable(){   public void run(){     runnable.run();   } } )
h.addParameters("-M","--name-status",parser.getPretty(),"--encoding=UTF-8")
new IllegalStateException("Result is already complete: failed")
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallback mBluetoothGattServerCallback=new IBluetoothGattServerCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
display.getRealMetrics(mDisplayMetrics)
overlookOuterLimit || BackdoorToggles.getStatementMaxRows() == null
executorService.schedule(pingServerRunnable,nextPingIn,TimeUnit.SECONDS)
realm.checkIfValid()
new StringBuilder(246)
getXMLProperty(parent + "." + propName)
loaded.getLoaded().getDeclaredConstructor()
newDecl.isNovel()
Long.parseLong(delay)
mPackageUsage.write(false)
(mOomMinFreeHigh[5] * 7) / 4
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(refElement).descriptionAndTooltip(message)
VERSION.SDK_INT > VERSION_CODES.LOLLIPOP_MR1
"WPA".equals(networkTypeString) || "WPA2".equals(networkTypeString)
TYPE_ATSC_M_H=0x00030300
logger.debug("Could not send module un-availability notification of module " + deploymentModuleIdentifier + " to channel "+ this.channel,e)
old.getScore()
DvcsUtil.guessRepositoryForFile(project,GitUtil.getRepositoryManager(project),file,GitVcsSettings.getInstance(project).getRecentRootPath())
endpoint.getHostAddress()
intervalFraction * (nextValue - prevValue)
returnCode == 0
mSelector.setHotspot(x,y)
mWasActivatedOnDown || !mNeedsDimming || isTouchExplorationEnabled()
ATLAS_MAP_ENTRY_FIELD_COUNT=3
Foundation.log("[error] " + tag + ": "+ message)
excludesPattern == null || requestURI == null
createShrinkFadeOutFromBottomAnimation(mContentContainer,150,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
value == 0
myTempDir.getPath()
isSubDelimiter(c)
registerError(expression,expression)
off > buf.length
c <= 'Z'
migrateXmlString(content,22,35)
client.loginWithFacebook(fbAccessToken,code).compose(Transformers.pipeApiErrorsTo(tfaError)).compose(Transformers.neverError()).doOnSubscribe(() -> formSubmitting.onNext(true)).doAfterTerminate(() -> formSubmitting.onNext(false))
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_SEGMENT_DETAILS))
nai.networkCapabilities.satisfiedByImmutableNetworkCapabilities(networkCapabilities)
removeCallbacksAndMessages(null)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_CONNECTED)
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_CUBE))
mSyncStatus.valueAt(i)
logger.warn("Writing large partition {}/{}:{} ({}) to sstable {}",metadata.ksName,metadata.cfName,keyString,FBUtilities.prettyPrintMemory(rowSize),getFilename())
protected T getCurrentTree(){   return myCurrentTree; } 
deletionRetentionStrategyConfig == null
public Builder setConnectionTimeoutInMs(int connectionTimeuot){   configBuilder.setConnectionTimeoutInMs(connectionTimeuot);   return this; } 
/**   * @param currentItem     the current item we check  * @param nextItem        the item comming after the current item  * @param currentPosition the current position of the currentItem  * @return the HeaderItem we want to add after the currentItem  */ HeaderItem group(Item currentItem,Item nextItem,int currentPosition); 
DEF_MAXIMUM_NETWORK_LOGGING_NOTIFICATIONS_SHOWN=2
!mConnected || !UsbManager.containsFunction(mCurrentFunctions,UsbManager.USB_FUNCTION_ACCESSORY)
Throwable e
setIntegerPart(String.valueOf(integerPart))
StorageProxy.read(commands,select.getConsistencyLevel())
writer.close()
CodecUtil.checkHeader(in,CODEC_NAME,VERSION_START,VERSION_CURRENT)
new DBException("Error loading object metadata from database",ex,dataSource)
proto.getRootRelativePath()
subtypeProps == null || subtypeProps.isEmpty()
intermediateArtifacts.combinedArchitectureBinary()
assertEquals(11,definitions.size())
getMeasuredWidth()
groupPersistence.countByC_P_S(group.getCompanyId(),group.getGroupId(),true)
queryArtist != null && !queryArtist.trim().equals("<unknown>")
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
className.lastIndexOf(CONTROLLER_SUFFIX)
System.out.printf(Locale.ROOT,"graph.edge(%d, %d, %f, %s);\n",from,to,edge.getDistance(),fwd && bwd ? "true" : "false")
mMat[7]
builder200.build()
headerName.startsWith("proxy") || headerName.equals("keep-alive") || headerName.equals("host")
List<URLDetail>
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
COUNT_DATABASE.put(key,newVal)
selenium.isElementPresent("link=Control Panel")
insets.left != 0
i < MAX_AUDIO_PORTS
testable.sort(reverse.clone())
pm.performDexOpt(pkg,null,true)
c.getLocalDeletionTime() < gcBefore
responseType != null && !Void.class.equals(responseType)
CompilerDirectives.inCompiledCode() || forceNulling
new Paint()
picker.evaluateParams()
mWm.addAppToken(0,null,0,0,0,false,false,0,0,false,false)
target.toString()
idleTimeout < 30000 && idleTimeout != 0
is(0)
initIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY)
new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()))
generateFluentSetters()
FilterBuilders.existsFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY)
postfix.startsWith("id")
new JdbcUserServiceBeanDefinitionParser()
mode != null && !mode.isEmpty()
info.getURL()
E edge
log.error("Unable to initialize auth domain {} due to {}",ad,e.toString(),e)
jmsManager.removeQueueFromJNDI(queueName)
@JsonProperty(POSITION_FIELD)
LOG.warn(ex.getLocalizedMessage())
checkCall(receiver)
mAttributes.getAllFlags()
mNetAttributes[type].mLastState == state && mNetAttributes[type].mRadio == ConnectivityManager.TYPE_WIFI
execution.getJobs().remove(jobEntity)
incrementAppWidgetServiceRefCount(appWidgetId,fc)
synchronized (mAuthorities) {   writeStatisticsLocked(); } 
prePassivates != null
mHasPendingMoveOrDelete || mKeySnapshots.isEmpty()
sep < 0 || sep > j
lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)
!value.isStatic() && value.isPublic() && classNode.equals(value.getDeclaringClass())&& value.getLineNumber() > 0
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
filterPipeline.addFirst(new Canvas(width,height,croppingPosition))
mValues[8]
new Mutation(KSNAME,ByteBufferUtil.bytes(key))
mTextUtil.nextRandomParagraph(WORD_LENGTH,STYLE_TEXT)
setIcon(iconView,tree)
mSeekBar.setProgress(0,true)
message.get(Message.REQUESTOR_ROLE)
TOUCHEVENT_POOL.recyclePoolItem(this)
Integer.parseInt(quantifier)
columnTypes[column] == INT || columnTypes[column] == CATEGORICAL
Integer.parseInt(taskIdStr)
getContent(files,".obf",".zip",".zip-1",".zip-2",".zip-3",".zip-4")
is(true)
private TestMtpManager mMtpManager; 
sequence.first <= first && first <= sequence.last
stack.peek()
type.getDeclaredConstructor()
win.isAnimatingLw() && appWindow && showWhenLocked&& mKeyguardHidden
new CompositeException(e,ex)
UpgradeStepRegistrator.class
setColors(color)
i % dictionarySize
dest.writeInt(mSubId)
mRejectTimes[i]
DynamoDbDeploymentContextTableCache.class
ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)
selenium.isElementPresent("link=Control Panel")
converterLookup.addCustomConverter(NUMBER_ITEM_NAME,IntegerDecimalConverter.class)
destinationFactory == null
new SpannedString(new CustomSpannable(first),true)
BufferUtil.zeroBuffer(1)
LinkageError e
bucket.isExists()
stores.next().getIdentityMap()
UntrackedFilesNotifier.notifyUntrackedFilesOverwrittenBy(myProject,ServiceManager.getService(myProject,PlatformFacade.class),untrackedFilesWouldBeOverwrittenByMergeDetector.getFiles(),"merge",null)
NUM_PAGES=2
loaded.getLoaded().getDeclaredConstructor()
new RuntimeException(e)
arg.indexOf('.') >= 0 || arg.equals("android")
mask.length()
this.route(request).map(RouterFunctions::cast).switchIfEmpty(Mono.defer(() -> other.route(request).map(RouterFunctions::cast)))
new LocalAlluxioClusterResource(1000,Constants.GB,Constants.SECURITY_AUTHENTICATION_TYPE,AuthType.SIMPLE.getAuthName(),Constants.SECURITY_AUTHORIZATION_PERMISSION_ENABLED,"true")
uri == null || LauncherActivity.isLaunchUri(uri)
1
OrderByComparator<V>
tw.close()
StringBuilder msg=new StringBuilder(methodName); 
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.CONJUGATE_GRADIENT).iterations(100).weightInit(WeightInit.VI).stepFunction(new GradientStepFunction()).activationFunction("tanh").nIn(4).nOut(3).visibleUnit(RBM.VisibleUnit.GAUSSIAN).hiddenUnit(RBM.HiddenUnit.RECTIFIED).layerFactory(layerFactory).list(3).backward(true).hiddenLayerSizes(new int[]{3,2}).override(2,new ClassifierOverride(2))
range.containsOffset(offset)
updateCondition.isInternal()
getDelegate().getDefaultCipherSuites()
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
new UnsupportedOperationException(getClass().getName())
loaded.getLoaded().getDeclaredConstructor()
createCustomStudySession(new JSONArray(),new Object[]{sb.toString(),Consts.DYN_MAX_SIZE,Consts.DYN_RANDOM},true)
backups != null && backups.length == 0
commitPackageSettings(pkg,pkgSetting,user,scanFlags,(policyFlags & PackageParser.PARSE_CHATTY) != 0)
mTestStream.getFlushedBytes()
DirectMessage.createDirectMessageList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json"))
(outputFolder + File.separator + modelFolder).replace("/",File.separator)
mTrustListeners.remove(i)
new QSDetailClipper(mDetail)
htmlElementContent(obj.toString())
countDownLatch.await()
Assert.assertEquals(5,count)
hash != 0
logger.trace("NODE {}: App version requested but version is unknown",this.getNodeId())
file.name().endsWith(".etc1")
getContactType(getJsonString(email,"type"))
DiagnosticType.error("JSC_TOO_MANY_TEMPLATE_PARAMS","{0}")
newInstance(classResourcesKey,resDir,displayId,config,scale,isThemeable,token)
this.messageService.fluxPreAuthorizeBeanFindById(1L).subscriberContext(withUser)
mConnector.execute("volume","format",vol.id,"auto")
new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE,Message.Flag.OOB)
Mono.subscriberContext()
ConfiguredTargetValue.key(label,hostConfiguration)
DEFAULT_PLAYER_EYE_HEIGHT=0.7f
new Documentation(__ -> Optional.of(() -> "A"),__ -> Optional.of(() -> "B"),null,null,null,null)
uri.getEncodedQuery()
createDouble(buffer.length(),init)
return false; 
mCurrentDate.get(Calendar.MONTH) != month
Integer.parseInt(displayIdStr)
updateExistingRefreshToken(currentRefreshToken,at)
ReferenceType::allMethods
return mDisappearingDelay; 
onHold & ON_HOLD_REMOTELY
targetDescription.getDeclaredValueClassName()
"null".equals(value) || value == null
ams.mContext.createPackageContextAsUser(appInfo.packageName,0,new UserHandle(userId))
info.crashInfo.stackTrace.length() > 30000
getContext().enforceCallingPermission(android.Manifest.permission.DUMP,message)
new LinkedHashSet<String>(256)
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
PrivacyManager.getRestrictions(true)
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
Flux.from(inputStream).concatMap(value -> {   DataBuffer arraySeparator=bufferFactory.wrap(SEPARATOR_BUFFER);   return Flux.just(encodeValue(value,bufferFactory,elementType),arraySeparator); } )
mQueryTextView.length()
filteredMsgCount++ % 10000 == 0
structuralLock.isHeldByCurrentThread()
selenium.isElementPresent("link=Control Panel")
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
FastMath.min(origin,num.doubleValue())
new SdkListCellRenderer(getComboBox().getRenderer())
Nd4j.createUninitialized(forwardPassShapes[i])
!isConsole && !isOpOverride && (senderGroup != null ? permissionHandler.inGroup(auxUser.getName(),senderGroup.getName()) : false)
log.debug("Can't set transaction isolation level",e)
mPowerManager.isInteractive()
new GetExecutionVariableInstancesCmd(executionId,variableNames,true)
InputMethodManager.getInstance()
mIconBase.clone().iconText((String)mIcons.get(i))
_response.reset(true)
this.httpHandler.handle(req,resp).switchOnError(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
List<String>
from >= to
handshake.getProtocolVersion()
!_assetCategories.isEmpty()
callbacks.onHardwarePreDraw(canvas)
IBluetoothSap.class
JavaSourceTckSuite.suite()
resolve(type,true,false,true)
FileUtil.loadFileText(new File(patchPath),CharsetToolkit.UTF8)
LocalFileSystem.getInstance().refreshAndFindFileByPath(libPath)
activity == null || activity.isFinishing()
JSRootConfiguration.getInstance(getProject()).storeLanguageLevelAndUpdateCaches(JSLanguageLevel.JS_1_7)
LOGGER.error("Error while downloading file",ioex)
mDrawerItems.size() > position
targetColumn.getTable() != null && !diffResult.getUnexpectedTables().contains(targetColumn.getTable())
{0,0}
/**   * Line number filter.   */ private CsvFilter lineFilter; 
task.getInputs().file(futureValue)
logger.warn("Failed to enumerate network interfaces",e)
OracleDataType.class
BackupManagerServiceInterface svc=mService; 
getWebElement(locator,timeout)
contract.getNewContract()
TypeEvalContext.fastStubOnly(file)
endOffset > textLength
stall_till_cloudsize(1)
sfield != null && schema.getDynamicPattern(sfield.getName()) != null
handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
mTextColorLink.getColorForState(ds.drawableState,0)
partialUri.toLowerCase()
(device=1 << i) != AudioSystem.DEVICE_OUT_DEFAULT
Assert.assertEquals(120L,ownerCapsuleNew.getNetUsage())
200L * FileUtils.ONE_MB
PaginationRequest.of(10,1)
Validate.notEmpty(name,"Cookie name must not be empty")
_assertAttibutes(sourcesJSONArray.getJSONObject(1),200,50)
entry.getSupportsPartial()
type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE
event.getTime() != DURATION_INFINITE && event.getTime() <= currentPlayTime
mGnssCallback != null
FUNCTOR_PROCESS_DELAY=4
stall_till_cloudsize(5)
selenium.isElementPresent("link=Control Panel")
personalJournalList != null && !personalJournalList.trim().isEmpty()
AtlasBuildContext.atlasMainDexHelper.getMainSoFiles()
responseFilters != null
mState != STATE_INITIALIZED
trade.getType().equalsIgnoreCase("buy")
SpannableStringBuilder content=new SpannableStringBuilder(); 
testClass.getSimpleName()
Simple.forClass(Runtime.NoneType.class)
elementName=options.get(ELEMENT_NAME)
listeners.executed(context)
marketDataService.getOrderBook(CurrencyPair.BTC_USD)
processAssignment(substitutor.substitute(targetType),initializer,parameter.getNameIdentifierGroovy(),parameter)
loaded.getLoaded().getDeclaredConstructor()
indexMappingsDir.exists()
public class XpathRegressionRightCurlyTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     final String[] expectedViolation={"8:9: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_SAME,"}",9)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyOne']/OBJBLOCK" + "/METHOD_DEF[@text='test']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.ALONE.toString());     final String[] expectedViolation={"9:15: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_NEW,"}",15)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyTwo']/OBJBLOCK" + "/METHOD_DEF[@text='fooMethod']/SLIST/LITERAL_TRY/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testThree() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyThree.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.ALONE.toString());     final String[] expectedViolation={"5:72: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_ALONE,"}",72)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyThree']/OBJBLOCK" + "/METHOD_DEF[@text='sample']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testFour() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyFour.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.SAME.toString());     final String[] expectedViolation={"7:27: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_BREAK_BEFORE,"}",27)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyFour']/OBJBLOCK" + "/METHOD_DEF[@text='sample']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
root.isDownloads()
Collect.getInstance().getString(R.string.file_fetch_failed,downloadUrl,response.getStatusLine().getReasonPhrase(),statusCode)
createBaseEntitlementAndCheckForCompletion(account.getId(),"externalKey",productName,ProductCategory.BASE,term,NextEvent.CREATE,NextEvent.INVOICE,NextEvent.BLOCK)
type.getDeclaredConstructor()
System.currentTimeMillis() + syncDelta
case 4: 
postJob.toString()
createDouble(buffer.length(),init)
getUserFromDashboard(ownerDashboard,creatorId)
organization.toUnescapedModel()
constraint.hasCondition()
editor.apply()
propMember.getType()
input.readFully(b)
Arrays.sort(timestamps,unused + 1,11)
MessagingService.instance().sendRR(message,target,handler,true)
new ObjectMapper().readerFor(Map.class)
Exception ignored
new PrestoException(HIVE_FILESYSTEM_ERROR,"Failed to list directory: " + path,e)
new SpannedString(first,true)
TestSuiteEnvironment.getServerAddressNode1()
new ShieldVersion(V_1_0_0_ID,true,Version.V_1_4_0)
fragmentEntryPersistence.findByG_FCI_S(groupId,fragmentCollectionId,status,start,end,orderByComparator)
pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA,userId)
for (MediaType mediaType : result) {   if (mediaType.isConcrete()) {     return mediaType;   }  else   if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION_ALL)) {     return MediaType.APPLICATION_OCTET_STREAM;   } } 
Timber.i("Creating PROGRESS_DIALOG")
isPlayerPrepared() && getSongProgressMillis() > 2000
selenium.isElementPresent("link=Control Panel")
error(log,e,e.getMessage())
latch.await(7,TimeUnit.SECONDS)
mCallback.onInputUpdated(inputId)
type.getDeclaredConstructor()
r != null && !r.finishing
mDataAuthorities == null || data == null
mService.queryDisplayStatus(getCallbackWrapper(callback))
callback.onPulseFinished()
Locale.getDefault().toLanguageTag()
logger.trace("MyQ binding received command '{}' for item '{}'",command,itemName)
Glue optionalGlue
new VelocityTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_velocityEngine,_templateContextHelper,false)
latch.startLatch.await(400,TimeUnit.MILLISECONDS)
event.getRawX()
selenium.isElementPresent("link=Control Panel")
mSyncStatus.valueAt(i)
RIGHT_ID_F=3534
SSLParametersImpl.getDefaultX509TrustManager()
logger.trace(evt.getReason())
log.debug("Error sending end packet",iex)
ptexture=new Texture(this,pixelWidth,pixelHeight,texture.getParameters())
checkCall(receiver)
blog.getLocalTableBlogId()
Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",null,paging.asPostParameterList(),true))
lineArgs[4]
is(true)
dimension.height+=vGap
change.isMoved()
sketchWidth < sketchWidth0
config.getMaxEntriesLocalHeap()
(r.info.flags & ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS) != 0 && (r.intent.getFlags() & Intent.FLAG_ACTIVITY_CLOSE_SYSTEM_DIALOGS) == 0
size=6
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
baseKey.plusDays(addedBucketsLeft * interval)
logger.info(x.getClass() + ": " + x.getMessage())
isLinux(expectedSql)
pm.performDexOpt(pkg,null,true)
firstSlash <= 0
headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(),entry.getValue(),camelExchange)
LinkedList<Object>
-flexibleSpace <= translationY
hasColumn(oldTableName,"articleId")
revWalk.close()
minSimilar > 1
if (VDBG) loge("Exception trying to remove a route: " + e); 
LOGGER.warning("Unable to load image using TGA loader!")
mWidth - mMinWidth
mRouter.selectRouteInt(mRouteTypes,route)
TestUtils.randomByte() + 128
file.getFile()
Exception e
values == null || values.length == 0
log.error(message)
selenium.isElementPresent("link=Control Panel")
m.size()
table != null && type instanceof CustomFileType
uri.equals(patterns[k]) || patterns[k].length() == 0 && uri.equals("/")
this(texName,false); 
KaleoTaskInstanceTokenLocalServiceUtil.searchCount(RandomTestUtil.randomString(),RandomTestUtil.randomString(),RandomTestUtil.randomStrings(10),false,true,serviceContext)
pv.setBackgroundDrawable(getResources().getDrawable(R.drawable.list_highlight_bg))
timeout=1800000
journalArticle.getDisplayDate()
Math.max(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
assertEquals(2,handlers.size())
Exception e
config.getName()
(NotificationListener)null
documents.get(docNum).getCheckResults(paraText,paRes,footnotePositions,isParallelThread)
new IllegalStateException("File " + file.getPath() + " should not exist")
new IndexWriter(indexStore,new SimpleAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
mAuthorities.valueAt(i)
WebUiResource.class
delaySoFar >= mReEnableDelayMillis
mService != null
expected == byte.class || expected == Byte.class
poList[2]
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
Arrays.asList("amzn.to","bit.ly","bitly.com","fb.me","goo.gl","is.gd","j.mp","lnkd.in","ow.ly","R.BEETAGG.COM","r.beetagg.com","SCN.BY","su.pr","t.co","tinyurl.com","tr.im")
((Number)s.first()).longValue()
MAX_PERCENT_DIFFERENCE=0.3
getStringList(true,true,false)
mQsDensityContainer.getX()
mEvdoEcio >= 0
assertEquals(265L,response.rowCount())
phys.sync()
logger.info(String.format("Submitting %s metric for metric emission pool",metric.getName()))
!task.isFreeformTask() || includeFreeformTasks
new Paint()
!mScreenOnEarly
this(host,port,threadName,queueSize,timeout,sendBufferSize,DEFAULT_BUFFER_SIZE); 
tv.setTextSize(TypedValue.COMPLEX_UNIT_PX,mTextView.getTextSize())
ATLAS_MAP_ENTRY_FIELD_COUNT=3
mPm.getPackageUidAsUser(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
isDoubleA && isIntB
IOException e
state.facadeMatrix.getFacadeBlockId(direction) == 0
(visibility & VISIBILITY_MASK) == VISIBLE && mAttachInfo != null
return true; 
mFacetCategoryMap.get(category)
logger.fine("Moving functions + variable into deeper modules")
_node.getNodeId()
@GUIMenuSortOrder(4)
new IllegalStateException("Legacy advertisement can't be connectable and non-scannable")
new MultiParentClassLoader(parent.getChildClassLoader())
connectionManager.markOwnerConnectionAsClosed()
dynamicType.getDeclaredConstructor()
RowKey.prefixKeyWithSalt(key_a)
entry.notification.cloneLight()
Context.getVisitService().getAllVisitTypes()
{4,7,5,11,6,5,7,5,11,11}
!stopItem.isDisposed() && !stopItem.isEnabled() ^ !running
m.getDeclaringClass()
dataType.toString()
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
isAllowed()
mNetAttributes[type].mLastState == state && mNetAttributes[type].mRadio == ConnectivityManager.TYPE_WIFI
topActivity != null && topActivity.getStack().getStackId() != PINNED_STACK_ID
log.info("\"FocusKiller\" library not found or there were problems loading it.",t)
mBlockRemovalService.shutdown()
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
_typeSettingsProperties.toSortedString()
!GroovyPropertyUtils.isPropertyName(getName())
theFeatures.muli(maxRange - minRange + Nd4j.EPS_THRESHOLD)
jobDataMap.remove(JobDetailAwareTrigger.JOB_DETAIL_KEY)
actionRequest.getAttribute(WebKeys.SOFTWARE_CATALOG_PRODUCT_ENTRY)
jmsDestination == null || jmsDestination.isEmpty()
Long.parseLong(value)
telephony.isRinging(getOpPackageName())
setFlag(FLAG_AUTO_CANCEL,autoCancel)
MAX_PERCENT_DIFFERENCE=0.3
selenium.isElementPresent("link=Control Panel")
Number value2
addProperty(secondNode,"band","The Clash")
!getAllDeviceItems(deviceId).contains(commandId)
terms.size() >= maxExpansions
id=50
_buildTemplateWithMaven("activator","bar-activator","-DclassName=BarActivator","-Dpackage=bar.activator")
ModelReference.of("serviceRegistry",ServiceRegistry.class)
query.from(employee).distinctOn(employee.datefield,employee.timefield)
HSTRETCH_DURATION=0.5f
response.rows()[12]
listView.setSelectionFromTop(checkedItem,a.getDimensionPixelSize(R.styleable.AlertDialog_selectionScrollOffset,0))
isStatic || constructorEntryPoint
mScreenBrightnessDarkConfig > screenBrightnessSettingMinimum
i.getTouchIconUrl() == null
UpgradeStepRegistrator.class
longSize >= 640
maxSize < (used / total)
public HyphenatedWordsFilter create(TokenStream input){   return new HyphenatedWordsFilter(input); } 
drawable != mBackgroundDrawable || mBackgroundResource != 0
isObservable
javaWriter.emitSingleLineComment("foo")
method.getAnnotation(TruffleBoundary.class) == null
this.errorDetection=false
anyInt()
selenium.isElementPresent("link=Control Panel")
new ClosedByInterruptException()
Arrays.asList(0,1,2,3,4,5,6,7,8)
sr.getLastStartId()
isAllowed()
SystemProperties.getBoolean("persist.demo.hdmirotationlock",false)
new ModelRenderer(model,0,1)
out.writeInt(length())
loaded.getLoaded().getDeclaredConstructor()
new MqttFixedHeader(UNSUBACK,false,AT_LEAST_ONCE,false,0)
platformVersion < M
COUNTER_UPDATER.addAndGet(this,-vs.size) <= 0
ret != null
count < 0
beanFactory.getBeanNamesForType(CacheAspectSupport.class,false,false)
public Integer getAutoCommitInterval(){   return this.autoCommitInterval; } 
realm.checkIfValid()
String message
Files.deleteIfExists(dir.toPath())
CACHE_MANAGER.addCacheIfAbsent(storageCache)
ImmutableList<Arg>
new StringBundler(9)
onDetachedFromWindow()
parent != null ? parent.startNumber : 1
artifact.getId()
from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)
dexBuf.readUshort(interfacesOffset + 4 + (2 * index))
stop <= start
assertEquals(8,fieldNames.size())
{MAGIC_HIGH,MAGIC_LOW,0x02,20,0,0,0,0,0,0,0,0,0,0,0,0}
am.getRecentTasks(MAX_TASKS,ActivityManager.RECENT_IGNORE_UNAVAILABLE)
Generics.newTreeMap()
getCode().split("\n",-1)
a.getDimensionPixelSize(R.styleable.CollapsingToolbarLayout_scrimVisibleHeightTrigger,-1)
varDeclaration instanceof GoRecvStatement || varDeclaration instanceof GoRangeClause
Log_OC.e(TAG,"Access to unexisting list of files fragment!!")
statistics.addGetTimeNanos(System.nanoTime() - start)
SCROLL_BAR_SIZE=4
response.getStatus().getCode() / 100
DEBUG_ALL || true
ONBOARDING_ENABLED=true
mConnectionById.containsKey(callId)
typeSettingsProperties.toSortedString()
appearance.getFloat(attr,0)
i < conCount
mView.postOnAnimation(mAnimationStarter)
mScrollView.post(() -> mScrollView.restoreDefaultFocus())
doTestHighlighting(getTestName(false) + ".xml")
mState != STATE_PREPARE && mState != STATE_FINISHED
blockRoot.getToken() == null || blockRoot.getToken().getType() == Token.LEFT_CURLY_BRACE
expand("serializedforms/DailyTimeIntervalTriggerImplSerializationTest.testFired.{?}.ser","JDK16","JDK17_1","JDK17_2","JDK18")
any(Object.class)
assertEquals(0,tempDir.listFiles().length)
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.LINKING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))).append(targetNode)
isAssignableFrom0(supertypeName,cn.superName,cl)
matchAxisFilter != 0 || wrapAxisFilter != 0
lo != null
!hasCollapsibleActionView()
Integer.parseInt(attrValue)
fileContentBag == null
AstUtils.hasAtLeastOneAnnotation(classNode,"Controller","EnableWebMvc")
assertCompletionVariants(myProjectPom,"RELEASE","LATEST","2.0.2")
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
(Message)sendApiMethod(sendLocation)
speedIndex < mLastSpeedTimes.length && (line=reader.readLine()) != null
http2Stream.garbageCollector()
BorderFactory.createMatteBorder(5,0,5,0,UIUtil.getPanelBackground())
canonicalURI.normalize().getRawPath()
selenium.isElementPresent("link=Control Panel")
position.set(0,0,mRight - mLeft,mBottom - mTop)
panel.setBorder(new EmptyBorder(3,0,2,0))
log.info("Error registering JSP monitoring with jmx " + instance,ex)
buffer == null || buffer.getWidth() <= 1 || buffer.getHeight() <= 1
winAnimator.mSurfaceController == null || !winAnimator.hasSurface()
LOGGER.isDebugEnabled()
badgeText.length() == 1 || badgeText.length() == 0
mHeartbeatExecutor != null
mBindingServices.isEmpty()
N node
activityNdx <= topActivityNdx
payload.intPayload[1]
configurationPair.getValue()
pk.getColumnNameInSql()
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_CONF))
logger.warn("failed to close node {} on failed start",t,otherNode)
writeSource.setWriteCount()
parser.nextText()
name == null || name.isEmpty()
calendar.add(Calendar.DATE,2)
selenium.isElementPresent("link=Control Panel")
new IndexShardRoutingTable.Builder(new ShardId(WatchStore.INDEX,0))
this.specificIcon && this.clearIfManual && historyReference.getHistoryType() == HistoryReference.TYPE_MANUAL
id=10835
extractor.setScopeChildren()
N node
c.getStartOffset() != getStartOffset() && c.getStartOffset() < targetBlockStartOffset
selenium.isElementPresent("link=Control Panel")
Long.toString(bitstampOrder.getId())
_constructor.newInstance(0,fileEntry.getFileEntryId(),fileEntry.getFileEntryId() + 1,_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK)
QuickStartMySitePrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
callbackList.getBroadcastCookie(i)
new HttpBlobStore(new URI("http://localhost:" + serverPort),30,credentials)
FIRST_CUSTOM=8192
new SafeTextModel(value,Mode.relaxed)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
id=6
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
new DirectDruidClient(warehouse,smileMapper,httpClient,server.getHost())
allocator.getFlowController().prepareActionAllWrite(input,epsilon,activations,nextEpsilon)
new Location(target.getWorld(),x,y,z,target.getLocation().getYaw(),target.getLocation().getPitch())
FastMath.min(origin,num.floatValue())
tag.setLabelposition("left")
new Or(dst,tmp,dst)
new TextPaint(Paint.ANTI_ALIAS_FLAG)
FileUtil.loadFile(new File(getTestDataPath() + getTestName(true) + ".txt"),true)
getTokenDisplayNames()
syncOperation.delay <= 0
TelephonyManager.getDefault().getCurrentPhoneType()
new StringBuilder()
new PoolBagEntry(null,0,pool)
loaded.getLoaded().getDeclaredConstructor()
isPost(request)
csFoldingEnabled.setSelection(store.getBoolean(SQLPreferenceConstants.FOLDING_ENABLED))
dest.writeInt(mSubId)
createTestBlockCapsule(1533529947843L + 3000L * i,number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
basicDLTest_Regression("./smalldata/logreg/prostate.csv","prostateRegression5.hex",new PrepData(){   @Override int prep(  Frame fr){     fr.remove("ID").remove();     return fr.find("AGE");   } } ,5,41.8498354737908,DeepLearningParameters.Activation.Rectifier)
method.getMessageType()
is(true)
path.toString()
Env.fromString(env)
setBlock(minV,pattern.next(minV))
firstCacheCfg.setMemoryPolicyName(POLICY_40MB_EVICTION)
doTestCompletionVariants("av10.xml","fill_parent","match_parent","wrap_content","@android:")
reduceConfigWidthSize(sw,Surface.ROTATION_270,density,unrotDh,unrotDw)
selenium.isElementPresent("link=Control Panel")
new IndexWriter(dir,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
accountHandle.getComponentName().flattenToString()
@NotNull
ImmutableList<Arg>
sDefaults.putBoolean(KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOL,false)
CamelCloudServiceCallRoutesAutoConfiguration.class
appOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new SpriteBatch(5460)
content.length() > 1
docErrors.entry(i)
Thread.sleep(50)
DescriptorUtils.getContainingModule(fromOrModule)
mNetworkInfo != null && networkInfo != null && mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
Long index
beans.add(bean)
data.getTestPassed()
progress.dismissAllowingStateLoss()
Slog.d(TAG,"Adding signing keyset " + Long.toString(id) + " to "+ name)
method.getDeclaringClass()
queryIds.remove(deadQuery)
-1
new ProtoFile("descriptor.proto",null,Arrays.asList("src/test/resources/unittest_import.proto"),NO_STRINGS,NO_TYPES,NO_SERVICES,map(),NO_EXTEND_DECLARATIONS)
mAppToken.isVisible()
CommonBundle.getWarningTitle()
target.getDestinationLinkAddress()
MAX_DISMISSAL_ON_SWIPE_UP_SHOW=2
configTimeRegionFactoryHolder.remove()
mNextNonWakeupDeliveryTime < nowELAPSED
mMenuView.setBackground(null)
(Number)array[this.index]
highlightingItemStack.getItem()
newUiPrefs.enableStyleDiagnostics()
U
assertEquals(10,view.getEnqueueCount())
state == ApplicationState.STATUS || state == ApplicationState.STATUS_WITH_PORT
DEBUG=false
markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
eval instanceof Float || PsiType.FLOAT.equals(TypesUtil.unboxPrimitiveTypeWrapper(variable.getType())) && eval instanceof Number
RuntimeCall callTarget
LOG.warn("Plugin " + plugin.getName() + " has an artefact "+ shortName+ " without a package name "+ "This could lead to artefacts being excluded from the application")
zkDb.snapLog.getSnapDir()
attributes != null && !attributes.isEmpty()
JMeterUtils.getPropDefault("proxy.number.requests",true)
Exception ex
is(false)
true || UISettings.getInstance().HIDE_TOOL_STRIPES && !PropertiesComponent.getInstance().isTrueValue(key)
coverageDataManager.addCoverageSuite(name,new DefaultCoverageFileProvider(coverageFileName),getPatterns(),lastCoverageTime,getSuiteToMergeWith(),getCoverageRunner(),isTrackPerTestCoverage() && !isSampling(),!isSampling())
sRecentsBlacklist.contains(t.realActivity.getClassName()) || sRecentsBlacklist.contains(t.realActivity.getPackageName())
proxy == null || proxy != view.getAnimation()
verbosity.shouldPrintOutput()
-1
sp.edit().putBoolean(PREF_USER_REFUSED_SIGN_IN,refused).apply()
log.logError(BaseMessages.getString(PKG,"JobUnZip.ErrorUnzip.Label",realFilenameSource,e.getMessage()))
scheduleRemoveStartingWindowLocked(wtoken)
MoreObjects.toStringHelper(this).add("user",getUser()).add("timeZoneKey",timeZoneKey).add("locale",locale).add("startTime",startTime).add("properties",propertyValues)
taskDao.findByUserId(2L,new Sort(Direction.ASC,"id"))
doTestWithRuntime()
Response schema(Property property); 
{4,5,5,11,6,5,7,7,11,11}
remoteFormat != null
event.getFile() != null && event.getFile().getLength() < 0
private final Long id; 
new GetExecutionVariableInstancesCmd(executionId,variableNames,true)
channel.sendHeaders()
Messages.MESSAGES.pathParameterNotProvided(param)
telephony.getCdmaEriTextForSubscriber(subId,getOpPackageName())
!isPassword || shouldSpeakPasswordsForAccessibility()
targetDatabase.getObjectQuotingStrategy()
LOG.info("Unable to read HTTP response content",e)
fieldDescription.isVisibleTo(instrumentedType)
selenium.isElementPresent("link=Control Panel")
NoSuchPackageException.class
Assert.assertEquals(4,results.size())
Long.parseLong(name)
isEDT || app.isWriteAccessAllowed()
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
typeSettingsProperties.toString()
DBG=true
writePermission.intern()
javaWriter.emitSingleLineComment("foo")
ctx != null
mock.expectedBodiesReceivedInAnyOrder("B+END","A+END")
new SQLExecuteTemplate(executeEngine,backendConnection.isSerialExecute())
mNwService.setInterfaceConfig(mTetherInterfaceName,ifcg)
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,true)
new StringBuilder(1024)
DEBUG=false
groupPrincipalCallback.getSubject()
new FilterConfiguration(filterClass,filterParams)
operation.getType() != Operation.Type.COLUMN && operation.getType() != Operation.Type.PREPARED
new ByteBuddy().subclass(Foo.class).method(isDeclaredBy(Foo.class)).intercept(FixedValue.value("Hello World!")).method(named("foo")).intercept(FixedValue.value("Hello Foo!")).method(named("foo").and(takesArguments(1))).intercept(FixedValue.value("...")).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
HdmiCec.getTypeFromAddress(curAddress)
return true; 
project == null || !project.isDisposed()
selenium.isElementPresent("link=Control Panel")
MIN_SENTENCE_TOKEN_COUNT=4
put(TYPES,new MapTypeCaster(),Map.class)
lastPosition == null || position.getFixTime().compareTo(lastPosition.getFixTime()) > 0
responseRaw(p)
public T withCancellationToken(CancellationToken cancellationToken){   operationParamsBuilder.setCancellationToken(Preconditions.checkNotNull(cancellationToken));   return getThis(); } 
createLightFile("Test.java","class Test extends Type<A, B, C, D> {\n}")
protected static Object lock=new Object(); 
sender instanceof Player && ess.getUser(matchPlayer).isAuthorized("essentials.kill.exempt") && !ess.getUser(sender).isAuthorized("essentials.kill.force")
Assert.hasText(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated")
context.getComments()
request.getDecodedRequestURI()
LOG.error("Operation completely failed, aborting request id: {}",stage.getRequestId())
paths.get(0)
mUiHandler.postDelayed(pae,timeout)
assertSpnegoWorkflow(uri,mechTypes,kerberosToken,kerberosToken,false,true)
ensureGreen()
regUser * trusteeWeightValue * trusteeFactorValue* trusteeFactorValue
selenium.isElementPresent("link=Control Panel")
cacheDirectory.mkdirs()
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) != 0
convert(connection.getRedisClient().getAddr())
statistics.addGetTimeNanos(System.nanoTime() - start)
new ByteArrayResource(groovyPages.get(location).getBytes("UTF-8"),location)
append(myRepositoryRoot,myLastPath,false)
CHECK_PKGNAME=true
-37.0f
IllegalDataException.class
StringBuilder detailBuffer=new StringBuilder(); 
Assert.assertSame(_ehcachePortalCache.ehcache,_ehcache)
new StringInputRowParser(dataSpec == null ? null : dataSpec.toParseSpec(timestampSpec,dimensionExclusions),null,null,null,null)
StringBuilder buffer=new StringBuilder("("); 
mCurrentDate.get(Calendar.MONTH) != month
Log.d(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level+ " isActiveNetwork "+ isActiveNetwork)
readBuffer.remaining() == 0
selenium.isElementPresent("link=Control Panel")
loaded.getLoaded().getDeclaredConstructor()
tw.close()
mProgress != null && getActivity() != null
itemCache.put(item.id,item)
new ModelNode().set(5000L)
!metaInjectMeta.isNoExecution()
getClientConnectionManager()
LOGGER.warn("Could not execute copy",ex)
primitiveType != null || arrayComponentType != null
new MediaController(mContext,token)
DEBUG_RC=false
logger.severe("Failed to process response: " + responsePacket + " on response thread:"+ getName(),e)
tester.getRequest()
assertFalse(mDisabled.hasFocus())
Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
getAnonID() != null && getWordPressComUserName() != null
Collections.unmodifiableList(customNonFilteredExtensions)
logException(exception)
IronEngineCoolant.addCoolant(new LiquidStack(Block.waterStill,LiquidContainerRegistry.BUCKET_VOLUME),0.0023F)
host.getSocketAddress()
buffer.put(indices,offset,count)
mHotspotBounds.set(left,top,right,bottom)
Log_OC.e(TAG,"Trying to share a NULL OCFile")
appInfo.targetSdkVersion > O
PyNames.STATICMETHOD.equals(decoratorName) || PyNames.CLASSMETHOD.equals(decoratorName) || PyNames.ABSTRACTMETHOD.equals(decoratorName)
List<PackagingElement<?>>
m.size()
Thread.sleep(10000)
Log_OC.e(TAG,"Access to unexisting list of files fragment!!")
new InternalSearchResponse(new InternalSearchHits(new InternalSearchHit[]{hit},1l,1f),null,null,null,false,false)
log.debug("Error extracting callable results",e)
SQLException e
parts.length != 0
BackupManagerServiceInterface svc=mService; 
Sets.newLinkedHashSet()
return false; 
mPolicy != null && wasPowered
mode == MODELVIEW
id=10844
Build.VERSION.SDK_INT < 24
newDto(RecipeDto.class).withContent(DEFAULT_DOCKER_IMAGE)
mFlexItemInEdit.setAlignSelf(AlignItems.CENTER)
tag != null && tag.isPhysical()
mMccStr == null
InsertFromValuesAnalysis analysis=(InsertFromValuesAnalysis)analyze("insert into deeply_nested (tags) " + "values ([" + "           {\"name\"='cool', \"metadata\"=[{\"id\"=0}, {\"id\"=1}]}, "+ "           {\"name\"='fancy', \"metadata\"=[{\"id\"='2'}, {\"id\"=3}]}"+ "         ])"); 
replacement instanceof PsiExpressionStatement && !(replacement.getLastChild() instanceof PsiJavaToken) && !(replacement.getLastChild() instanceof PsiComment)
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
parser.parseLight(GroovyElementTypes.CLOSURE,builder)
re != null && re.getResponse().getStatus() == 404
logger.debug("An exception occurred while formatting a date",e)
typeSettingsProperties.toString()
Slog.d(TAG,"Unable to bind FusedProxy.")
sceneCam.getUp(vars.vect6)
from("direct:start").multicast(new MyAggregationStrategy()).parallelProcessing().timeout(1000)
startActivity(intent)
structuralLock.isHeldByCurrentThread()
mGnssCallback != null
log.warn("Unexpected exception on closing transaction.  Cause: " + e)
entry.notification.cloneLight()
result == null || result.size() == 0
Arrays.asList("Die Katzen sind schön.","Frau Meier und Herr Müller sind alt.","Frau Julia Meier und Herr Karsten Müller sind alt.","Julia und Karsten sind alt.","Julia, Heike und Karsten sind alt.","Frau und Herr Müller sind alt.","Herr und Frau Schröder sind alt.","Herr Meier und Frau Schröder sind alt.","Die restlichen 86 Prozent sind in der Flasche.","Die restlichen sechsundachtzig Prozent sind in der Flasche.","Die restlichen 86 oder 87 Prozent sind in der Flasche.","Die restlichen 86 % sind in der Flasche.","Durch den schnellen Zerfall des Actiniums waren stets nur geringe Mengen verfügbar.","Soda und Anilin waren die ersten Produkte des Unternehmens.","Bob und Tom sind Brüder.","Letztes Jahr sind wir nach London gegangen.","Trotz des Regens sind die Kinder in die Schule gegangen.","Die Zielgruppe sind Männer.","Männer sind die Zielgruppe.","Die Zielgruppe sind meist junge Erwachsene.","Die USA sind ein repräsentativer demokratischer Staat.","Wesentliche Eigenschaften der Hülle sind oben beschrieben.","Wesentliche Eigenschaften der Hülle sind oben unter Quantenmechanische Atommodelle und Erklärung grundlegender Atomeigenschaften dargestellt.","Er und seine Schwester sind eingeladen.","Er und seine Schwester sind zur Party eingeladen.","Sowohl er als auch seine Schwester sind zur Party eingeladen.","Rekonstruktionen oder der Wiederaufbau sind wissenschaftlich sehr umstritten.","Form und Materie eines Einzeldings sind aber nicht zwei verschiedene Objekte.","Dieses Jahr sind die Birnen groß.","Es so umzugestalten, dass sie wie ein Spiel sind.","Die Zielgruppe sind meist junge Erwachsene.","Die Ursache eines Hauses sind so Ziegel und Holz.","Vertreter dieses Ansatzes sind unter anderem Roth und Meyer.","Sowohl sein Vater als auch seine Mutter sind tot.","Einige der Inhaltsstoffe sind schädlich.","Diese Woche sind wir schon einen großen Schritt weiter.","Diese Woche sind sie hier.","Vorsitzende des Vereins waren:","Weder Gerechtigkeit noch Freiheit sind möglich, wenn nur das Geld regiert.","Ein typisches Beispiel sind Birkenpollenallergene.","Eine weitere Variante sind die Miniatur-Wohnlandschaften.","Eine Menge englischer Wörter sind aus dem Lateinischen abgeleitet.","Völkerrechtlich umstrittenes Territorium sind die Falklandinseln.","Einige dieser älteren Synthesen sind wegen geringer Ausbeuten ...","Einzelne Atome sind klein.","Die Haare dieses Jungens sind schwarz.","Die wichtigsten Mechanismen des Aminosäurenabbaus sind:","Wasserlösliche Bariumverbindungen sind giftig.","Die Schweizer Trinkweise ist dabei die am wenigsten etablierte.","Die Anordnung der vier Achsen ist damit identisch.","Die Nauheimer Musiktage, die immer wieder ein kultureller Höhepunkt sind.","Räumliche und zeitliche Abstände sowie die Trägheit sind vom Bewegungszustand abhängig.","Solche Gewerbe sowie der Karosseriebau sind traditionell stark vertreten.","Hundert Dollar sind doch gar nichts!","Sowohl Tom als auch Maria waren überrascht.","Robben, die die hauptsächliche Beute der Eisbären sind.","Die Albatrosse sind eine Gruppe von Seevögeln","Die Albatrosse sind eine Gruppe von großen Seevögeln","Die Albatrosse sind eine Gruppe von großen bis sehr großen Seevögeln","Vier Elemente, welche der Urstoff aller Körper sind.","Die Beziehungen zwischen Kanada und dem Iran sind seitdem abgebrochen.","Die diplomatischen Beziehungen zwischen Kanada und dem Iran sind seitdem abgebrochen.","Die letzten zehn Jahre seines Lebens war er erblindet.","Die letzten zehn Jahre war er erblindet.","... so dass Knochenbrüche und Platzwunden die Regel sind.","Die Eigentumsverhältnisse an der Gesellschaft sind unverändert geblieben.","Gegenstand der Definition sind für ihn die Urbilder.","Mindestens zwanzig Häuser sind abgebrannt.","Sie hielten geheim, dass sie Geliebte waren.","Einige waren verspätet.","Kommentare, Korrekturen und Kritik sind verboten.","Kommentare, Korrekturen, Kritik sind verboten.","Letztere sind wichtig, um die Datensicherheit zu garantieren.","Jüngere sind oft davon überzeugt, im Recht zu sein.","Verwandte sind selten mehr als Bekannte.","Ursache waren die hohe Arbeitslosigkeit und die Wohnungsnot.","Ursache waren unter anderem die hohe Arbeitslosigkeit und die Wohnungsnot.")
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_TUNE_FUNCTION,false)
mockRegionInfo.isMetaTable()
ImmutableList.copyOf(listeners)
DEBUG=false
assertEmptyCommentRelatedSearchResults(searchResult)
pressedView.post(new Runnable(){   @Override public void run(){     if (pressedView != null) {       pressedView.setPressed(false);     }   } } ,100)
!mHasCallback || mCurrentViewId == null
i=2
tag.getName()
assertContains(actualTables,expectedTables)
ctx.sendUpstream(e)
PropertiesComponent.getInstance().setValue(getAutoUpdateEnabledProperty(),state,getAutoUpdateDefault())
@Override
Trans != NO_TRANSPOSE
tsdb.metaTable()
lastGoodQuery.getOriginalQuery()
dispatchedMessage.remove(msgId)
undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()
mgr.hasUserRestriction(UserManager.DISALLOW_CONFIG_VPN,new UserHandle(mUserHandle))
/**   * Service invocation retry times  * @see Constants#DEFAULT_RETRIES  */ int retries() default 2; 
selenium.isElementPresent("link=Control Panel")
log.debug(sm.getString("contextConfig.invalidSciHandlesTypes",className),t)
1
response.get(ROLLED_BACK)
conf.getRestBaseURL()
Exception ignored
manager.beginTransaction().remove(fragment).commitAllowingStateLoss()
logger.debug("Cannot play URI ({})",e.getMessage())
vec == null || DKV.get(vec._key) == null
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
verify(client).atomicIncrement((AtomicIncrementRequest)any())
selenium.isElementPresent("link=Control Panel")
? super T
LocalFileSystem.getInstance().refreshAndFindFileByIoFile(projectFile)
context.getOpPackageName()
file.getAbsolutePath()
new StringBuilder(740)
Thread.sleep(1000)
saveState
WebAppUtils.getResolvedRMWebAppURLWithScheme(new Configuration())
mTopFullscreenOpaqueWindowState == null && (win.getAttrs().privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FORCE_SHOW_NAV_BAR) != 0 || (win.isVisibleLw() && attrs.type == TYPE_INPUT_METHOD)
removeTopicTask(this.message.getMessageId())
mGnssCallback != null
offsets[i + 1] - offsets[i] == 1 || !Character.isWhitespace(unescapedText.charAt(i))
activeFrom == null
waitOnThreads(f10)
reader.nextDouble()
fileAccess.writeFile(new Runnable(){   public void run(){     cache.close();   } } )
logger.debug("[{}]: Websocket error: {}",connection.getHost(),e.getMessage())
mService.setAppPolicy(UID_A,POLICY_NONE)
new Requirement(Skill.MINING,30)
StringUtil.equalsIgnoreCase(packageName,filter)
maker.getTaggedData(RESERVED_FOR_LOGBUILDER_LATENCY_MILLIS)
new RuntimeException()
data.split("\\s*,\\s*",-1)
addView(root,0,new ViewGroup.LayoutParams(MATCH_PARENT,MATCH_PARENT))
ImmutableSet<ImplementationMethodDescriptor>
!mKey.equals(other.mKey)
ServiceLoader.load(ReportSenderFactory.class,getClass().getClassLoader())
selenium.isElementPresent("link=Control Panel")
executeWrappedCommandProtocol(namespace.getDatabaseName(),getCommand(),CommandResultDocumentCodec.create(decoder,"retval"),connection,binding.getReadPreference(),transformer(connectionSource,connection))
getTokenDisplayNames()
Throwable e
soLingerTime.toMilliseconds()
new Paint()
entry.getCreateStore()
selenium.isElementPresent("link=Control Panel")
addDaysAndCheckForCompletion(30,NextEvent.PHASE,NextEvent.INVOICE,NextEvent.PAYMENT_ERROR)
assertThat(dtos).extracting("id").containsOnly(100L,103L)
1
textDelimiterTrailing.getSelection()
mCaCerts != null && mCaCerts.length > 0
mCommand != null
anyInt()
!JedisClusterHashTagUtil.isClusterCompliantMatchPattern(matchPattern)
String value
Preconditions.checkNotNull(fileSystemMaster,"fileSystemMaster")
String.format(mappingFormat,typeName,packageName,mappedPackageName)
if (true) {   try {     int size=mOriginalWidth > mOriginalHeight ? mOriginalWidth : mOriginalHeight;     mBlackSurface=new Surface(session,0,"BlackSurface",-1,size,size,PixelFormat.OPAQUE,Surface.FX_SURFACE_DIM);     mBlackSurface.setAlpha(1.0f);     mBlackSurface.setLayer(0);   }  catch (  Surface.OutOfResourcesException e) {     Slog.w(TAG,"Unable to allocate black surface",e);   } } 
checkExpressionIsAssignableToType(expr,type,problemKey,allowChangeVariableTypeFix ? p : null,true)
exchange.getResolvedPath()
mUserPaddingEnd >= 0
parsedResult.getType()
mService.reassociate(mContext.getOpPackageName())
Throwable.class
backgroundTaskThreadLocalManagerImpl.setUserLocalService(userLocalService)
getHomeButton()
!allowPrivate.isNull()
writeRepeatedFixed64Impl(id,val)
WaitUtils.waitForPageToLoad()
initialCapacity > 1 << 30
createHandlerResult(yubiKeyCredential,this.principalFactory.createPrincipal(uid))
Object url
Ports.Binding(11022)
r != null && !r.finishing
settings.readLPw(null,0,false)
if (b) { } 
String.format("%s is not a parsable int (base10) for %s",optionValue,COMPACTION_WINDOW_SIZE_KEY)
uniqueField.getType().toExternal(doc.getField(uniqueField.getName()))
sessionInfo != null && sessionInfo.isTransactional()
new ApiEventBuilder().setSubscriptionId(subscription.getId()).setEventPlan(newPlan.getName()).setEventPlanPhase(currentTimedPhase.getPhase().getName()).setEventPriceList(newPriceList.getName()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setEffectiveDate(effectiveDate).setRequestedDate(requestedDate)
type.getDeclaredConstructor()
outputBatchSize=25
lastPos < mTargetPos
createTx(blockchain,sender,receiveAddress,data,0)
rm.add(new QueryPath(cfName,null,cosc.column.name),cosc.column.value,cosc.column.timestamp,cosc.column.ttl)
logger.info("No column family to repair for keyspace " + tableName)
resultEndpoint.assertIsSatisfied()
new SpannedString(first,true)
new Long(4)
selenium.isElementPresent("link=Control Panel")
/**   * Unit tests for  {@link InProcess}.   */ @RunWith(JUnit4.class) public class InProcessTest extends AbstractInteropTest {   private static String serverName="test";   /**   * Starts the in-process server.   */   @BeforeClass public static void startServer(){     startStaticServer(InProcessServerBuilder.forName(serverName));   }   @AfterClass public static void stopServer(){     stopStaticServer();   }   @Override protected ManagedChannel createChannel(){     return InProcessChannelBuilder.forName(serverName).build();   } } 
Boolean.parseBoolean(attrValue)
new Paint()
r - scrollX
addSkyNodes(renderGraph)
rsMeta.getColumnLabel(i + 1)
packet.getAttribute("from").split("/",2)
host.getHost()
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,true)
currLine < mPrevLine
type != SessionInfo.BUILD_TOOLS_PACKAGE
ApplicationManager.getApplication().invokeLater(new Runnable(){   @Override public void run(){     new Task.Backgroundable(myProject,"Updating OSGi indices",false){       @Override public void run(      @NotNull ProgressIndicator indicator){         if (!myProject.isOpen())         return;         indicator.setIndeterminate(true);         indicator.setText("Updating OSGi indices");         myBundleManager.reindexAll();       }     } .queue();   } } ,myProject.getDisposed())
integerSwitchNode.keySuccessor(i) == beginNode
i == MAX_ATTEMPTS
Math.abs(delta_loss)
m.size()
new LayerView(this,0x0f0000ff)
classes.size()
Type.getObjectType(classNode.name)
System.setProperty(COPROCESSOR_LOCAL_JAR,path)
new FtrlDelta(true,alpha)
user.isAuthorized("essentials.world." + user.getWorld().getName())
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
spec.getAllFields()
sceneToLocalTransformation.preConcat(parent.getSceneToLocalTransformation())
CommandLineUtils.createDatabaseObject(artifactClassLoader,url,username,dbPassword,driver,defaultSchemaName,databaseClass,null)
_structureFieldConverter.getFieldDataType(ddmFormField.getDataType(),ddmFormField.getType())
tfs.getFile(fileId)
(newContent == null) || content.equals(newContent)
mExpandedDialog != null && mExpandedParams != null
mContext.sendStickyBroadcastAsUser(mStorageFullIntent,UserHandle.ALL)
LOG.warn(rootPath + "is not a directory")
buildVersion=0
mRecomputeLauncherService.shutdown()
totTermCount.get() < 30
getObjectLayout().getArrayIndexScale(elementKind)
mHandler.obtainMessage(MSG_FINGERPRINT_AUTHENTICATED)
createRecord(value,now,expiryTime)
entry.type == ENTRY_TYPE_TERM && entry.leadershipTermId != leadershipTermId
e == null
callback.onPulseFinished()
runUTRunner(testDir.getPath(),new File(testDir,"dependentTests/my_class_test.py").getPath(),"true")
application != null && !application.isDisposed()
DBG=true
mPersistFileService.shutdown()
mFile.getStoragePath()
origin.absoluteValue().doubleValue() < complexNumber.absoluteValue().doubleValue()
classFilter.getRejectedIDs()
new GroupTest(false)
settings.getInteger(Keys.git.packedGitOpenFiles,cfg.getPackedGitOpenFiles())
logger.trace("observer: timeout notification from cluster service. timeout setting [{}], time since start [{}]",timeOutValue,new TimeValue(timeSinceStartMS))
id=10873
elementAtOffset == null || elementAtOffset.getNode() == null
UserHandle.myUserId()
solo.clickLongOnView(solo.getView(it.feio.android.omninotes.R.id.fab_expand_menu_button))
_certWilds.isEmpty()
ps.setString(1,structureId)
dynamicClassType.getDeclaredConstructor()
db.hashMapCreate("cache").expireAfterWrite(1,TimeUnit.HOURS)
mAdapter == null || !mIsAttached
"maxHeaderSize must be a positive integer: " + maxHeaderSize
return true; 
activityOptions != null && activityOptions.getAnimationType() == ActivityOptions.ANIM_SCENE_TRANSITION
SystemClock.uptimeMillis()
ConfigPropertyVetoException e1
this.getDrawnBoundingBoxE6().getLongitudeSpanE6()
mPhones.contains(phone)
variants.containsKey(variant)
check(permissionChecker,primaryKey,actionId)
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
new JsonUtf8Writer(sink)
selenium.isElementPresent("link=Control Panel")
LOG.warn(String.format("%d ms elapsed since build job marked as finished, but still missing build rule finished events.",elapseMillisSinceFirstFinishedStatus))
selenium.isElementPresent("link=Control Panel")
logger.error("IOException should not have been thrown.",exc)
databaseProductName.startsWith("ASE") || databaseProductName.startsWith("Adaptive") || databaseProductName.startsWith("sql server")
Element.F64_2(mRS)
WebSocketEventListener.class.cast(l).onClose(event)
mOpenStreetMapView.setExpectedCenter(expectedCenter)
FunctionTypesKt.isFunctionType(valueParameterOrReceiver.getOriginal().getType())
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
? super IN
new Paint()
HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
setValue(object,value.intValue())
info.getDeviceSvnUsingSubId(subId[0],mContext.getOpPackageName())
pw.print(ps.getInstantApp(user.id))
DirectMessage.createDirectMessageList(get(getBaseURL() + "direct_messages.json",null,paging.asPostParameterList(),true))
request.getDueBefore()
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
selenium.isElementPresent("link=Control Panel")
fragmentTransaction.add(R.id.fragment_container,personDetailFragment,KEY_PERSON_DETAIL_FRAGMENT)
mService.addOrUpdatePasspointConfiguration(config)
toDiscard > 0 && i >= rows.size()
mQsDensityContainer.getLayoutParams()
s4dir + ".dir"
value.longLongValue()
endpoint.keepAliveTimeSeconds()
!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()&& edge.isDirected()
DEBUG=false
mAppOpsService.checkOperation(AppOpsManager.OP_GET_USAGE_STATS,Binder.getCallingUid(),callingPackage)
logger.warn("{}",general)
((ResolvedJavaType)obj).toJavaName()
description != null && description.length() < 100
con.serverSentScoreboard.addTeam(t)
types != null && !types.isEmpty()
cluster.close()
mQueryTextView.length()
getHomeButton()
field.tokenStream(docMapper.mappers().indexAnalyzer())
maxWidth > 0 && fm.stringWidth(fullText) > maxWidth
TaskOutputPacker delegate
!newDefaultSubIdObj.equals(mDefaultSubId)
callVideoButton.setPressedIcon(ImageLoader.getImage(ImageLoader.CALL_VIDEO_BUTTON_SMALL_PRESSED))
"-" + COLLECTION + " and -"+ CONFNAME+ " are required for "+ LINKCONFIG
new EnterSelectionDialog(shell,conn,"Target database:","Select the target database:")
_layoutElements != null
new IndexWriter(directory,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
return copy; 
updateRotation(0)
battery.addPower(Math.min(target,battery.getCapacity() - battery.getStored()),false)
paginationType.equals("more") && (end > 0) && (docs.size() > end)
insets.left != 0
mColumn + (x - 0.5f) * 4 + 1.25f
logger.warn("{}",general)
args.toArray()
new RuntimeConfigurationError(PyBundle.message("runcfg.unittest.no_method_name"))
e.getPresentation().setEnabledAndVisible(false)
new Intent(Intent.ACTION_RESOLVE_EPHEMERAL_PACKAGE)
assertRemoveSubsystemResources(servicesB)
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_PLAY_FUNCTION,false)
selenium.isElementPresent("link=Control Panel")
propResource.get(BOOT_TIME).asBoolean(false)
id=10870
DumbServiceImpl.getInstance(project).queueCacheUpdateInDumbMode(Arrays.asList(updater))
telephony.getNetworkTypeForSubscriber(subId,getOpPackageName())
ImmutableList.of("content","datum","id","nested","nested.inner_nested","person","person.birthday","person.first_name","title","_id","_version","_score")
/**   * {@inheritDoc}  */ @Override public FloatProperty clone(){   FloatProperty prop=(FloatProperty)super.clone();   prop.value=value;   return prop; } 
sentBytesCnt.longValue()
errorHandler.onError(t)
getNonCompilablePath("InputPackageDeclarationDiffDirectory.java")
factory.getEmbeddedServletContainer()
configuration.family()
DumpUtils.checkDumpAndUsageStatsPermission(mActivityManagerService.mContext,"gfxinfo",pw)
runAllTasks()
System.currentTimeMillis()
Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
Collection<GridDrStateTransferDescriptor>
pane.getFirstComponent()
parent.setAxisIndex(0)
selenium.isElementPresent("link=Control Panel")
Long.parseLong(val)
discoverers.get(2)
telephony.isRadioOn(getOpPackageName())
new TBinaryProtocol.Factory(true,true,DatabaseDescriptor.getThriftMaxMessageLength())
status.augmentDescription(msg)
appBundle != null && appBundle.exists() == false
PendingIntent.getActivityAsUser(ams.mContext,0,runningIntent,PendingIntent.FLAG_UPDATE_CURRENT,null,UserHandle.of(userId))
mBoltPaint.setColor(fillColor)
cache.localPeek(1)
handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
queueView.get().getExcerpt(index.longValue())
TimeBase.class
selenium.isElementPresent("link=Control Panel")
checkArgument(!"/".equals(resourcePath),"%s is the classpath root",resourcePath)
NETHER_WARTS(115)
logger.info("failed indexing {}",e,i)
@Input(InputType.Association) AbstractBeginNode loopBegin; 
assertEquals(6358482l,received.get(0)[1])
/**   * Support the range subscript operator for String  */ public static CharSequence get(CharSequence text,Range range){   int from=normaliseIndex(InvokerHelper.asInt(range.getFrom()),text.length());   int to=normaliseIndex(InvokerHelper.asInt(range.getTo()),text.length());   int length=text.length();   if (from > to) {     int tmp=from;     from=to;     to=tmp;   }   return text.subSequence(from,to + 1); } 
remaining == 0
Arrays.asList(new CommaWhitespaceRule(messages),new DoublePunctuationRule(messages),new GenericUnpairedBracketsRule(messages),new HunspellNoSuggestionRule(messages,this),new LongSentenceRule(messages),new UppercaseSentenceStartRule(messages,this),new MultipleWhitespaceRule(messages,this),new SentenceWhitespaceRule(messages),new WordRepeatBeginningRule(messages,this),new PostReformPortugueseCompoundRule(messages),new PortugueseReplaceRule(messages),new PortugueseWordRepeatRule(messages,this))
sLat == null || "".equals(sLat)
final AuditEventFormatter formatter=new AuditEventDefaultFormatter(); 
combined[i]
HttpParameter.CACHE_ID.getParameterFrom(req) == null || HttpParameter.PART.getParameterFrom(req) == null
proc.setProcState < ActivityManager.PROCESS_STATE_HOME && proc.setProcState > ActivityManager.PROCESS_STATE_NONEXISTENT
Boolean.valueOf(viewContext.getProperties().get(PROPERTY_SLIDER_SECURITY_ENABLED))
mObsoleteAgents.valueAt(i)
result == null && ioe != null
requestJSONObject.optInt(Article.ARTICLE_EDITOR_TYPE)
Thread.sleep(500)
parser.hasNext(4)
buf.getUnsignedShort(buf.readerIndex() + 2)
@After public void clearMlState() throws Exception {   new MlRestTestStateCleaner(logger,adminClient(),this).clearMlMetadata(); } 
new DefaultFileMetadata(FileType.RegularFile,bfa.lastModifiedTime().toMillis(),bfa.size())
logger.debug("JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning")
dictionary.remove("type")
actionButton.setRolloverIcon(new ImageIcon(ca.getRolloverIcon()).getImage())
getPreferences().save(fos,"")
inStream.remaining()
!getLocationEnabled()
in_memory_compaction_limit_in_mb=64
viewerPanel.layout()
sm.getString("jsseUtil.noVerificationDepth",algorithm)
new AccountCapsule(ByteString.copyFromUtf8(ACCOUNT_NAME_FRIST),ByteString.copyFrom(ByteArray.fromHexString(OWNER_ADDRESS_FRIST)),AccountType.Normal,200_000_000L)
checkMatch(inv,x,y,false)
mMat[5]
new float[4]
mChildrenExpanded ? mDividerHeight : mChildPadding
id.required()
myApplication.invokeLater(new Runnable(){   public void run(){     if (myModule.isDisposed())     return;     ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();     if (indicator != null) {       indicator.setIndeterminate(true);       indicator.setText("Updating manifest indices.");     }     myBundleManager.reindex(myModule);   } } ,myModule.getDisposed())
super.doRemove(key)
@Nullable Exception cause
format("RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}",numFields)
Context.getProviderService().getAllProviderAttributeTypes(true)
metadata.getValue(TagMetadata.TAG_UUID) != 0
Integer.parseInt(sessionTTL)
selenium.isElementPresent("link=Control Panel")
isPushGroupConversation()
new Paint()
startTime=1509242466
new Paint(Paint.ANTI_ALIAS_FLAG)
logger.info("OAuth clients imported: " + clients)
detector != null && detector.detectCountry() != null
assertTrue(predicate.apply(pickleEvent))
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
new BuildSecondHashMatchIterator(this.inputs[0],this.inputs[1],keyPositions2,keyPositions1,keyClasses,memoryManager,ioManager,this,availableMemory)
queueIndex < 0 || queueIndex < sources.getSize()
DecorView.isNavBarToLeftEdge(bottomInset,leftInset)
metadata.getClassName()
LOGGER.warn("Could not execute unmarkEntries",ex)
cam.getDirection().mult(5)
writePermission.intern()
Metadata metadata=cluster.getMetadata(); 
selenium.isElementPresent("link=Control Panel")
Assert.assertEquals(getNotAllowedExceptionMessage("helloForRole"),e.getCause().getMessage())
private MediaDriverBroadcastReceiver receiver; 
selenium.isElementPresent("link=Control Panel")
new IllegalStateException("Invalid state: iterator has " + seqRRs.size() + " sequence readers but "+ maxSeqReaders+ " RDDs of sequences - List<List<Writable>> were provided")
myNameSuggestionsField.getFocusableComponent()
Localization.lang("New article")
spellParser.isParsing()
log.debug("Error sending end packet",iex)
new Tree(new ChangesBrowserNode("root")){   public Dimension getPreferredScrollableViewportSize(){     Dimension size=super.getPreferredScrollableViewportSize();     size=new Dimension(size.width + 10,size.height);     return size;   }   protected void processMouseEvent(  MouseEvent e){     if (e.getID() == MouseEvent.MOUSE_PRESSED) {       int row=myTree.getRowForLocation(e.getX(),e.getY());       if (row >= 0) {         final Rectangle baseRect=myTree.getRowBounds(row);         baseRect.setSize(checkboxWidth,baseRect.height);         if (baseRect.contains(e.getPoint())) {           myTree.setSelectionRow(row);           toggleSelection();         }       }     }     super.processMouseEvent(e);   }   public int getToggleClickCount(){     return -1;   } } 
s.getRawReader()
900 * 1000L
mFiles.indexOf(file)
klass.getDeclaredFieldsUnchecked(false,declaredFields)
backgroundTaskPersistence.findByG_N_T(groupId,name,taskExecutorClassName,start,end,orderByComparator)
CHECK_DB_AT_VERSION=20900150
service.getKioskList().getAvailableKiosks()
value.getMajorType()
action != KeyEvent.ACTION_UP
metadata.getFaces()
Long.class
new GitException(String.format(ERROR_BRANCH_LIST_UNSUPPORTED_LIST_MODE,listMode))
fileTypeName.equals(fileType.getName())
dataType.getFullyQualifiedName(DBPEvaluationContext.DDL)
showMessage(context.getString(R.string.error_calculating_route_occured),Toast.LENGTH_LONG)
log.debug("Double activation of navigator context")
args.length == 2
type.getDeclaredConstructor()
mAppToken.isVisible()
enabled=true
IllegalArgumentException.class
serRef == null
version.getUpdate().getAsInt() >= 151
id=26
number.longValue()
(totalItemCount - lastVisibleItemPosition) <= ITEM_LEFT_TO_LOAD_MORE
"Scheduling method " + method.getName() + " on "+ target+ " to be run every "+ delay+ " "+ timeUnit+ " after "+ initialDelay+ " "+ timeUnit
new DatabaseExplorerDialog(shell,SWT.NONE,inf,transMeta.getDatabases())
Integer.parseInt(taskIdStr)
loaded.getLoaded().getDeclaredConstructor()
maker.getTaggedData(RESERVED_FOR_LOGBUILDER_LATENCY_MILLIS)
!hasCollapsibleActionView()
t != globalType && t != Type.INT
cur.getPositionInParent()
selenium.click("//li[4]/span/a/span")
from > to
public static LocalizationBundle getMessages(){   return new LocalizationBundle(messages); } 
flexItem.getMarginRight()
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
msbFragmentEntry.getMsbFragmentEntryId()
gridDim > 768
return true; 
new FileOutputStream(tempFile)
StringUtils.containsIgnoreCase(userAgentStr,"Iframely") || StringUtils.containsIgnoreCase(userAgentStr,"Google") || StringUtils.containsIgnoreCase(userAgentStr,"B3log")|| StringUtils.containsIgnoreCase(userAgentStr,"BUbiNG")|| StringUtils.containsIgnoreCase(userAgentStr,"ltx71")
message != null && message.getEncryption() == Message.ENCRYPTION_OTR
realPointerIndex >= AndroidInput.NUM_TOUCHES
partitionContainer.getExistingRecordStore(name)
assertEquals(SIZE * COUNTDOWN,c1.counts + c2.counts)
TextStyle.decodeEffect(encoded) & TextStyle.CHARACTER_ATTRIBUTE_STRIKETHROUGH
maxAlongDimension.isVector()
croutonDurationEdit.setVisibility(View.VISIBLE)
curArticle.getResourcePrimKey()
assertEquals(3,result.getAuthorities().size())
LOG.debug("Creating netty output stream for block {} @ {} from client {}",blockId,address,NetworkAddressUtils.getClientHostName())
BackupManagerServiceInterface svc=mService; 
mListNavLayout != null
context.formatNewLine()
new IllegalStateException("Invalid state: iterator has " + rrs.size() + " readers but "+ maxReaders+ " RDDs of List<Writable> were provided")
new IndexShardRoutingTable.Builder(new ShardId(indexName,0))
routePointImage.setOnClickListener(saveAsRoutePointOnClickListener)
Slog.e(TAG,sb.toString())
warning("Failed to resolve default logging config file: " + DFLT_CONFIG_PATH)
Assert.assertEquals(catalogsJson.size(),1)
sendMsg(mAudioHandler,MSG_SET_ALL_VOLUMES,SENDMSG_QUEUE,0,0,VolumeStreamState.this,0)
BackupManagerServiceInterface svc=mService; 
file.getFile()
GridGgfsTestUtils.jsonToMap("{type:'tcp', port:11500}")
StringBuilder ret=new StringBuilder(100); 
replayEnd=DateTime.now()
assertTrue(qr.hasFullRank())
value == Byte.MAX_VALUE
serializer.serializeInsert(metadata,entity,columns,values,subQuery)
selenium.isElementPresent("link=Control Panel")
Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
ws.newRequest()
index > -1 && subtype.getSuperType() != null
win.isAnimatingLw() && appWindow && showWhenLocked&& mKeyguardHidden
mAztecImageLoader != null && isFinishing()
tw.close()
Context.getPermissionsManager().checkAttribute(getUserId(),entity.getAttributeId())
ImageView divider=new ImageView(mContext); 
this.keycloakSession.users().getServiceAccount(clientSession.getClient())
return AUTUMN; 
inputBuffer.available() > 0 || inputBuffer.nbRead() > 0
addr.isAnyLocalAddress() || addr.isLoopbackAddress()
metadata.comparator.compare(tombstone.start.bound,first.stop.bound) <= 0
localNodeAckEvent.addListener(new ActionListener<Void>(){   @Override public void onResponse(  Void ignore){     assert Thread.holdsLock(mutex) : "Coordinator mutex not held";     assert committed;     receivedJoins.forEach(CoordinatorPublication.this::handleAssociatedJoin);     assert receivedJoinsProcessed == false;     receivedJoinsProcessed=true;     clusterApplier.onNewClusterState(CoordinatorPublication.this.toString(),() -> applierState,new ClusterApplyListener(){       @Override public void onFailure(      String source,      Exception e){ synchronized (mutex) {           removePublicationAndPossiblyBecomeCandidate("clusterApplier#onNewClusterState");         }         ackListener.onNodeAck(getLocalNode(),e);         publishListener.onFailure(e);       }       @Override public void onSuccess(      String source){ synchronized (mutex) {           assert currentPublication.get() == CoordinatorPublication.this;           currentPublication=Optional.empty();           logger.debug("publication ended successfully: {}",CoordinatorPublication.this);           updateMaxTermSeen(getCurrentTerm());         }         ackListener.onNodeAck(getLocalNode(),null);         publishListener.onResponse(null);       }     } );   }   @Override public void onFailure(  Exception e){     assert Thread.holdsLock(mutex) : "Coordinator mutex not held";     removePublicationAndPossiblyBecomeCandidate("Publication.onCompletion(false)");     FailedToCommitClusterStateException exception=new FailedToCommitClusterStateException("publication failed",e);     ackListener.onNodeAck(getLocalNode(),exception);     publishListener.onFailure(exception);   } } ,EsExecutors.newDirectExecutorService(),transportService.getThreadPool().getThreadContext())
mScreenBrightnessDarkConfig > screenBrightnessSettingMinimum
toolItem.getParent()
mCachedDevice.onProfileStateChanged(mPanProfile,BluetoothProfile.STATE_DISCONNECTED)
Integer.parseInt(sessionTTL)
input.floatValue() != value.floatValue()
sessionConf != null && sessionConf.get("tez.queue.name") != null
rootView.getId()
builder.types("Liferay:UserAccount","Person")
mode.contains("survi") || mode.equalsIgnoreCase("0") || mode.equalsIgnoreCase("s")
epsi(otherArr)
new MethodHandler(methodKey,groupId,cal,type)
resources.getDimensionPixelSize(R.dimen.close_handle_height)
cellIndex < lastCell
((MasterSlaveDataSource)dataSource).getMasterDataSource()
Number rate
Long.parseLong(args[1])
status.getCode().getNumber()
rhs == null || !rhs.isValid()
myBooks.size()
9 * 60 * 1000
i == -1 || i == 65535
Trans != NO_TRANSPOSE
sendMessageAtFrontOfQueue(CMD_STOP_AP)
mMenu.getNonActionItems()
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.CONJUGATE_GRADIENT).iterations(100).weightInit(WeightInit.VI).stepFunction(new GradientStepFunction()).activationFunction("tanh").filterSize(5,1,2,2).nIn(4).nOut(3).batchSize(batchSize).visibleUnit(RBM.VisibleUnit.GAUSSIAN).hiddenUnit(RBM.HiddenUnit.RECTIFIED).layerFactory(layerFactory).list(2).backward(true).preProcessor(0,new ConvolutionPostProcessor()).hiddenLayerSizes(new int[]{9}).override(1,new ClassifierOverride(1))
DynamicAttributeRanking.refreshMinMax(this,graph)
StringBuilder sb=new StringBuilder(); 
Predicates.or(Predicates.containsPattern("storm-compatibility-examples.src.java"),Predicates.containsPattern("storm-compatibility.src.java"),Predicates.containsPattern("tools/test/LcovMerger"),Predicates.containsPattern("contrib"),Predicates.containsPattern("external"))
new Paint()
parser.parse("-u",username,"-p",password,"-U",url)
Thread.sleep(1000)
LOGGER.isDebugEnabled()
new BooleanPreference("use_english_names",false,false)
IndexReader.open(userindex)
@Override public final DivideByOnConditionStep and(String sql,Object... bindings){   return and(condition(sql,bindings)); } 
baseExpr instanceof VariableExpression
commitMessage.substring(0,subjectIndex)
Exception t
promise.trySuccess()
listAdapter.notifyDataSetChanged()
Preconditions.checkNotNull(secondOperand)
new IOException("ExifInterface only supports saving attributes on JPEG formats.")
new IllegalStateException("Legacy advertisement can't be connectable and non-scannable")
setImageDrawable(icon,false)
returnValue
logger.fine(String.format("writing packet %s",packet))
mService.reassociate()
rng.nextInt() % 100 + 200
Log.d(TAG,status)
@RunWith(MockitoJUnit4Runner.class) public class JUnit4ExampleTest extends ExampleTestCase { } 
resources.getClassLoaderResource(path)
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
descriptors[i].getPropertyType().isAssignableFrom(propertyType)
type.getDeclaredConstructor()
new InternalSearchResponse(hits,null,null,null,false,null)
Throwable e
"Virtual file is null for " + myFile
localBroker.oneway(sub.getLocalInfo())
subCursor.getString(COLUMN_ATTENDEE_ID_NAMESPACE)
(CheckBoxPreference)mPrefInstantVideoUpload
Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,paging.asPostParameterList(),true))
oldestUnflushedStoreSequenceIds.putIfAbsent(encodedRegionName,oldestUnflushedStoreSequenceIdsOfRegion)
public String getValue(){   return value; } 
!type.getOpenWithApplication().isEmpty()
Long.toString(bitstampOrder.getId())
String.format(Locale.ROOT,"t(dijk): %6.2f, t(period): %6.2f, t(lazy): %6.2f, t(neighbor): %6.2f",dijkstraTime,periodTime,lazyTime,neighborTime)
loaded.getLoaded().getDeclaredConstructor()
exchange.getResolvedPath()
new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
targetType.getDeclaredConstructor()
myBaseVersion=24
(LongIntVector)row
entityLabelProbVals.containsKey(label) && labelProbsForToken.get(label) < entityLabelProbVals.get(label)
userModel != null
i % 2
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
sceneRoot.setTagInternal(com.android.internal.R.id.scene_layoutid_cache,scenes)
new SpdySessionStatus(2,"INTERNAL_ERROR")
names[0]
logger.info("OAuth clients imported: " + clients)
javaType == null
position >= 0 && position < dayPickerView.getCount()
ReactiveHelper.schedule(runnable,"Multicast next step")
rule.getName() != null
LOGGER.trace("Cache expiration duration after reads is set to [{}]",currentDuration)
Math.max(leftLen,rightLen)
mg.maximumGap(input)
Integer id
new Paint()
renderManager.render(tpf,true)
mNetAttributes[type].mLastState == state && mNetAttributes[type].mRadio == ConnectivityManager.TYPE_WIFI
loaded.getLoaded().getDeclaredConstructor()
TypeUtils.isAnnotationMirrorOfType(mirror,Constants.ENTITY) || TypeUtils.isAnnotationMirrorOfType(mirror,Constants.MAPPED_SUPERCLASS)
http2.setInitialStreamRecvWindow(initialStreamSendWindow)
BuildCraftCore.DEVELOPER_MODE
BackupManagerServiceInterface svc=mService; 
holder.setGone(loadEndViewId,visible)
mAppToken.isVisible()
grantRuntimePermissionsLPw(deviceProvisionPackage,ACCOUNTS_PERMISSIONS,userId)
createTextAttributesKey(DART_DYNAMIC_PARAMETER_REFERENCE,PARAMETER_REFERENCE)
TimeUnit.SECONDS.toMillis(5)
this.thrown.expectMessage("File must exist")
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
Log.e(TAG,"Found activity " + r + " in proc activity list using "+ r.app+ " instead of expected "+ app)
ClientIdAndSecretCredentialsProvider.class
poList[2]
createShrinkFadeOutFromBottomAnimation(mContentContainer,150,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
prefSize(new Fixed(width),new Fixed(height))
SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY(SeverityLevel.INFORMATION,Status.Statement.SuboptimalIndexForWildcardQuery,"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see " + "documentation on index configuration.")
TelephonyManager.getDefault().getCurrentPhoneType()
JNIDecoder.matches(in,inputFormats)
logger.warn("license [{}] - invalid",license.uid())
getTableName(filter)
lp.width != panelWidth || lp.gravity != panelGravity
periodStr.equals("null") || periodUnit == 'n'
selenium.isElementPresent("link=Control Panel")
verifyPosition(decoder,binary("02080000251848470afa010262daa690013aa4046da83745f8812560df010001126a"))
URLUtils.currentUrlEquals(uriBuilder.build().toASCIIString())
BrowseCap.isCocoaDesktop()
grabFrame(false,true,false,false)
Thread.currentThread().hashCode()
event.getEffectiveTransitionTime()
statistics.addGetTimeNanos(System.nanoTime() - start)
stop("background",ServiceSinkhole.this,true)
this.vertices.containsKey(node) || this.chainedTasks.containsKey(node) || this.iterations.containsKey(node)
Number value=list.get(i); 
any()
initialCapacity <= 0
sa.getResourceId(com.android.internal.R.styleable.PreferenceHeader_id,(int)HEADER_ID_UNDEFINED)
path == null || !path.startsWith("/")
new IOException("ExifInterface only supports saving attributes on JPEG formats.")
new WebdavEntry(resp.getResponses()[i],getUri().getPath())
IndexReader.open(userindex)
i.getTouchIconUrl() == null
visible=false
deleteTaskView.animate().setDuration(300).scaleX(0.9f)
primitiveType != null || arrayComponentType != null
new StringBuilder(1024)
i <= size
event.getTime() != DURATION_INFINITE && event.getTime() <= currentPlayTime
synchronized (mLock) {   mScreenOnTime=readScreenOnTimeLocked(); } 
new DirIcon(IconLoader.getIcon("/icons/folders" + iconPath),IconLoader.getIcon("/icons/foldersOpen" + iconPath))
_resourceReferences.add(file)
adapter == IResultSetController.class || adapter == ResultSetViewer.class
tempPinnedTaskBounds != null && stack.isAnimatingBoundsToFullscreen()
executeMethodAndConvertExceptions(httpPatch)
IndexSettingsModule.newIndexSettings(shardId.index(),Settings.EMPTY)
type == TYPE_PUBLIC && !isVisible()
!nm.matches(sr.localeName) && !nm.matches(sr.otherNames)
out.writeOptionalUTF(type)
params.getPathAbsolutifier()
cf.getCompressionType() == null || cf.getCompressionType() == Compression.Algorithm.NONE
return 5030; 
new RuntimeException("Error during multilang processing",e)
MultiLayerNetwork.class
incrementAppWidgetServiceRefCount(appWidgetId,fc)
new IOSMobileDriverImpl(projectDirName,portalURL)
List<Item>
Long contentLength=ctx.getOriginContentLength(); 
previousTypeSettingsProperties.toSortedString()
1
display.getRealMetrics(dm)
super.onRequestSendAccessibilityEventInternal(child,event)
elapsedMillis < 300
DecorView.isNavBarToLeftEdge(bottomInset,leftInset)
value.length() <= 9
structuralLock.isHeldByCurrentThread()
StringBuilder output=new StringBuilder(); 
selenium.isElementPresent("link=Control Panel")
CommandLineTransformer.transform("-i","-np","-v","-J-Xmx1g","-J-Xms1m","-nojmx","\"c:\\path to\\русский каталог\"")
layout.setReleaseLabel(label)
CollectionUtils.isEmpty(factoryRealms)
sendMessageAtFrontOfQueue(CMD_STOP_AP)
assertEquals(4,ti.nrOfInvocations)
mParent == null
ApplicationManager.getApplication().invokeLater(new Runnable(){   @Override public void run(){     myLabelEditor.setText(myLabelEditor.getText());     myChildrenEditor.setText(myChildrenEditor.getText());     myChildrenExpandedEditor.setText(myChildrenExpandedEditor.getText());     myListChildrenEditor.setText(myListChildrenEditor.getText());   } } ,ModalityState.any(),myProject.getDisposed())
15 * MINUTES
SHUTDOWN_VIBRATE_MS > 0 && context != null
ContainerUtil.newHashSet("AddToFavoritesPopup","RemoveFromFavorites","DatabaseView.ImportDataSources","CompileDirty","Compile","AddNewFavoritesList","EditFavorites","RenameFavoritesList","RemoveFavoritesList")
!isResumed()
config.getInputShipStrategy(1)
Headers.FORWARDED.asString()
"Error resetting interface " + mTetherInterfaceName + ", :"+ e
new HTTPHC3Impl(this)
new HazelcastProperty("hazelcast.invalidation.min.reconciliation.interval.seconds",30,SECONDS)
mForgotPatternButton != null && mForgotPatternButton.getVisibility() == View.VISIBLE
new MainMenu(Gdx.app)
Exception e
a.lastIndexOf(':')
shadowSize <= 0
packageNames != null && packageNames.length == 1
isAvailable(oldStatus)
typeDefinition.getMethods()
PlatformDependent.getByte(array,index)
mDateView.setTypeface(Typeface.SANS_SERIF,Typeface.BOLD)
new StringBuilder(256)
selenium.isElementPresent("link=Control Panel")
builder.put(columnHandle,0.0)
log.debug("Can't check auto-commit state",e)
position >= 0
out.writeData(function)
side.getCapitalized()
id=32
Number value
CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
plan0.getPriceListName().equals(plan1.getPriceListName()) && plan0.getProductName().equals(plan1.getProductName()) && plan0.getBillingPeriod() == plan1.getBillingPeriod()
route.setDelay(6000)
invertedIndex.getMutable(i)
selenium.isElementPresent("link=Control Panel")
st.setNCharacterStream(name,characterStream.asReader(),characterStream.getLength())
DeprecationLogger.nagUserWith("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
Assert.assertEquals(4,results.size())
new FPSAnimator(window,60)
bottomIndex >= topIndex
new HashSet<RecordReplicationInfo>(recordStore.size())
Duration.ofMillis(300)
parentVirtualDescendantId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID
LambdaArgKt.foo(10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
dest.writeTypedArray(remoteInputs,flags)
margin=2
buf.writerIndex()
mDeviceOwner != null && mDeviceOwner.hasDeviceOwner()
new GroupTest(true)
mConnector.execute("volume","format",vol.id,"auto")
anchorView.getApplicationWindowToken()
mHandler.dispatchMessage(msg)
maxResults <= 0
service.getName()
Exception e
is(2)
availableVersions == null || availableVersions.isEmpty()
synchronized (this) {   if (listeners == null) {     listeners=new LinkedHashSet<HttpSessionListener>(GeoServerExtensions.extensions(HttpSessionListener.class));   } } 
timeout >= 0
curRowNum >= segmentSize && segmentSize > 0
generateRandomStringArray(20,20,false,false)
mf.getColumnNameInSql()
a.getDimension(attr,0)
Maps.newTreeMap()
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
BasicContext.class
logger.debug("Did not recognise element named {}",localName)
msg.obj != mSmHandlerObj
args[1]
Context.getPermissionsManager().checkAttribute(getUserId(),entity.getAttributeId())
fm2.getKnownNodes().size() == 0
equalTo(24)
private FrameLayout mCardFrame; 
loaded.getLoaded().getDeclaredConstructor()
mStorageManager.triggerMediaScan(file.getStoragePath())
targetInfo != null && targetInfo.metaData != null
callback.onPulseFinished()
myParametersInContext < that.myParametersInContext
mirror.getType()
log.debug("Not in OSGi: using plexus based maven parser")
assertFalse(model.getUniqueItems())
WorkflowDefinitionLinkLocalServiceUtil.addWorkflowDefinitionLink(defaultUser.getUserId(),company.getCompanyId(),companyGroup.getGroupId(),assetClassName,0,0,workflowDefinition.getName(),workflowDefinition.getVersion())
new CustomChangeException("Failed to insert one or more concept map types",be)
HeaderSpec.this
out.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
Flux.fromIterable(getSessionIdResolver().resolveSessionIds(exchange)).concatMap(this.sessionStore::retrieveSession).next().flatMap(session -> validateSession(exchange,session)).switchIfEmpty(createSession(exchange))
@Test public void testNoPendingAfterTrim() throws OutOfCapacityException, BrokenBarrierException, InterruptedException {   MultiLevelPriorityQueue queue=createQueue();   queue.put(createQueryRequest(groupOne,metrics));   queue.put(createQueryRequest(groupTwo,metrics));   TestSchedulerGroup testGroupOne=groupFactory.groupMap.get(groupOne);   TestSchedulerGroup testGroupTwo=groupFactory.groupMap.get(groupTwo);   testGroupOne.peekFirst().getQueryRequest().getTimerContext().setQueryArrivalTimeNs(1000);   testGroupTwo.peekFirst().getQueryRequest().getTimerContext().setQueryArrivalTimeNs(1000);   QueueReader reader=new QueueReader(queue);   reader.startAndWaitForQueueWakeup();   assertTrue(reader.readQueries.isEmpty());   assertTrue(testGroupOne.isEmpty());   assertTrue(testGroupTwo.isEmpty());   queue.put(createQueryRequest(groupOne,metrics));   sleepForQueueWakeup(queue); } 
ResponseEntity<Object>
n.getNodeData().getLabel().toLowerCase().equals(str)
CompletableFuture<Void>
removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
mAppliedTemporaryAutoBrightnessAdjustment=false
mInstalld.createProfileSnapshot(appId,packageName,codePath)
_buildTemplateWithGradle("npm-metaljs-portlet","metaljs-dependency-management","--dependency-management-enabled")
!config.isAutoRead()
BackupManagerServiceInterface svc=mService; 
i < 3
mObsoleteAgents.valueAt(i)
mAppOpsService.noteOperation(AppOpsManager.OP_GET_USAGE_STATS,Process.myUid(),null)
ThingFactoryHelper.class
mPm.getPackageUidAsUser(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
dockerClient.copyArchiveToContainerCmd(container.getId())
PublisherPeek<T>
INACCESSIBLEMEM_OR_ARGMEMONLY
showDialog(parent,message,title,options,defaultOptionIndex,defaultOptionIndex,icon)
fragmentEntryPersistence.countByG_FCI_S(groupId,fragmentCollectionId,status)
!MediaFile.isAudioFileType(fileType) && !MediaFile.isVideoFileType(fileType) && !MediaFile.isImageFileType(fileType)&& !MediaFile.isPlayListFileType(fileType)&& !MediaFile.isDrmFileType(fileType)
url == null
stall_till_cloudsize(5)
selenium.click("//li[4]/span/a/span")
StringUtil.isBlank(raw) || raw.equalsIgnoreCase("null")
selenium.isElementPresent("link=Control Panel")
Assert.assertArrayEquals(serviceContext.getAssetCategoryIds(),assetCategoryIds)
revokingStore.disable()
GenericItemActivity.class
!mQuietEnable
Log.d(TAG,"Got null argument for a signing keyset, ignoring!")
new Camera(settings.getWidth(),settings.getHeight())
d.handledType()
getSupportActionBar()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ctrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
_typeSettingsProperties.toString()
settings.readLPw(null,0,false)
mSelectResponse != null && mSelectResponse.length > 0
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=5
final ImageButton buttonNavigate=(ImageButton)view.findViewById(R.id.context_menu_route_button); 
mInstalld.createProfileSnapshot(appId,packageName,codePath)
ContainerUtil.createConcurrentWeakMap(ContainerUtil.identityStrategy())
9f / 10f
UserHandle.myUserId()
mAudioSink.buildConfig(mDesiredSamplingRate,mDesiredChannelMask,mDesiredFormat,null)
j < arguments.length
onDetachedFromWindows()
LOG.debug("Date could not be parsed. Was set to NOW because {} is true.",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)
logger.warn("couldn't execute commandLine '" + commandLine + "'",e)
mWidth - mMinWidth
new OutputStreamWriter(clientStream,"utf-8")
privObj.getObjectName().equals("masking_test_view") || privObj.getObjectName().startsWith("masking_test_view_n")
mDisplay.getRealMetrics(mDisplayMetrics)
new PojoMessageHandlerAsyncBinary(pojo,m,session,params,indexByteBuffer,false,indexBoolean,indexSession)
target.toString()
parsedResult.getType()
Long.parseLong(value)
enabled=true
rule.setQsdiscard(true)
checkNoPlanNodeMatches(exchange(),"Expected rules to be fired before 'AddExchanges' optimizer")
AbstractAppleNativeTargetBuildRule buildRule
selenium.click("//li[4]/span/a/span")
ErrorHandlerBuilder builder=(ErrorHandlerBuilder)routeContext.getRoute().getErrorHandlerBuilder(); 
!list.isEmpty()
pm.performDexOpt(pkg,null,true)
loaded.getLoaded().getDeclaredConstructor()
origin.realComponent().doubleValue() <= other
Long.parseLong(attrValue)
response.isFailed() || !response.getResponse().isExists()
this.registry.getValue().removeXAResourceRecovery(recovery)
near.getAndRemove(1)
DefaultFileMetadata.missing()
i < MAX_AUDIO_PORTS
Long.parseLong(val)
_valid.remove(_parms._offset_column)
Flux.from(this.messageService.publisherPreAuthorizeBeanFindById(1L)).subscriberContext(withUser)
myFixture.testCompletionVariants(getTestName(true) + ".go","for","const","var","return","if","switch","go","defer","select","fallthrough","goto","main","struct","map","type")
mGnssCallback != null
sequence.getCache() != null && sequence.getCache() > 0
hasCdmaDataConnectionChanged || hasNetworkTypeChanged
timeOut=240_000
objects.getClass().getGenericSuperclass().toString()
commitNode.getBranch()
selenium.isElementPresent("link=Control Panel")
size >= min && size <= max
value.toLowerCase().startsWith(constraintLowerCase)
JavaSourceGroovyPackagesNonSecuritySuite.suite()
calendar.add(Calendar.DATE,-1)
remaining + (long)pos
pId + BASE_FILE_NUMBER
audioManager.getRingerModeInternal()
CellNames.simpleDense(SuperColumns.scName(name))
current >= 0
renderManager.render(tpf,false)
this.encoder.encode(inputStream,message.bufferFactory(),elementType,contentType,hints).onErrorMap(this::mapError)
callTimeout=10000
machine.getConfig().getLimits().getRam() * 1024L * 1024L
this.finishedSeq
dockedBounds.left - dockDividerWidth
Object url
result.expectedMinimumMessageCount(1)
return true; 
new TextPaint()
final UUID accountId
headers.getContentLength() < 0 && !headers.containsKey(HttpHeaders.TRANSFER_ENCODING)
myIsNotNull || myNotNullParams.size() > 0
fragmentEntryPersistence.findByG_FCI(groupId,fragmentCollectionId,start,end)
WordPress.getCurrentBlog().getLocalTableBlogId()
selenium.isElementPresent("link=Control Panel")
new ArrayList<Alert>(1)
lastJetty.toString()
between(1,10)
assertTrue(cache.context().systemTx())
info == null && persistentCache != null
mLayoutAnimationEnabled && mLayoutAnimator.shouldAnimateLayout(viewToRemove) && arrayContains(tagsToDelete,viewToRemove.getId())
type.getDeclaredConstructor()
sizeModeClass.equals("ProportionalSizeMode")
ticks * ticksInGap
mf.getColumnNameInSql()
getPropertyAsString(PROXYSCHEME,HTTPHCAbstractImpl.PROXY_SCHEME)
type.getDeclaredConstructor()
WordPress.getCurrentBlog().getLocalTableBlogId()
name == null || !name.startsWith(prefix)
YMLSourceUtil.getDefinitions(definition,nestedDefinitionIndent)
endPos < bufEnd
request.getDueBefore()
~View.SYSTEM_UI_TRANSPARENT
data < 0 || data > Short.MAX_VALUE
bundleContext.getBundle().getResource(uri)
CollectionUtils.compareAsIterable(getParameters(),o.getParameters())
sampleFactory.getDeclaredConstructor()
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
off > buf.length
!okToShowLocked(r) || (mService.isSleepingOrShuttingDown() && r.voiceSession == null)
um.getEnabledProfileIds(mCurrentUserId)
sectionStartTagToken.word()
VERSION=14
logger.debug("Cannot remove group member ({})",e.getMessage())
!f.getName().equals(unzipped.getName()) || (targetDirectory != null && !targetDirectory.equals(directory))
getOriginUrl()
mConnectionById.containsKey(callId)
mono.switchIfEmpty(Mono.error(getRequiredBodyError(bodyParameter)))
new DatabaseExplorerDialog(shell,SWT.NONE,dbinfo,transMeta.getDatabases(),true)
ConfigPropertyVetoException ex
return this; 
telephony.isRinging(getOpPackageName())
ap.getSsidStr()
packageNames != null && packageNames.length == 1
Thread.sleep(1000)
walk.close()
getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json"))
currentCountry.getCountryShortName()
@ConditionalOnEnabledHealthIndicator("solr")
Multimap<JSType,JSError>
selenium.isElementPresent("link=Control Panel")
e.getMessage()
req.getSession().getMaxInactiveInterval() * 1000L
assertEquals(3,StringUtil.countMatches(drl,"import "))
Settings.Secure.getIntForUser(mContentResolver,Settings.Secure.ACCESSIBILITY_DISPLAY_MAGNIFICATION_NAVBAR_ENABLED,UserHandle.USER_CURRENT)
checkNotNullOrEmpty(resource,"Resource should not be null")
logger.debug("Cannot paly favorite ({})",e.getMessage())
log.info("Not found for {}: {}",uriInfo.getRequestUri(),error)
context.setDelayer(2000L)
conf.setInt("hbase.hregion.memstore.block.multiplier",100)
SCAN_STATUS_PARTIAL=1
10 * 1000000L
jitter=0.6
@RunWith(HazelcastSerialClassRunner.class) @Category(QuickTest.class) public class UserCodeDeploymentPermissionTest extends PermissionTestSupport {   @Override protected Permission createPermission(  String name,  String... actions){     return new CardinalityEstimatorPermission(name,actions);   }   @Test public void checkDeployPermission_whenAll(){     new CheckPermission().of("deploy").against("deploy").expect(true).run();   }   @Test public void checkDeployPermission(){     new CheckPermission().of("deploy").against("all").expect(true).run();   }   @Test public void checkAllPermission_whenDeploy(){     new CheckPermission().of("all").against("deploy").expect(false).run();   } } 
colon > 0
new LinearSectionConfig(SectionConfig.DEFAULT_GUTTER,SectionConfig.DEFAULT_GUTTER,SectionConfig.HEADER_INLINE,SectionConfig.FOOTER_STICKY)
substitutor.substituteAndCapture(parameters[i].getType())
aggMap.size()
r.nextFloat() < 0.01
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.LINKING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class,HalideLibraryDescription.class))).append(targetNode)
PicassoSampleActivity.class
ScanResult.is5GHz(frequency)
timeout >= 0
DirectMessage.createDirectMessageList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json"))
log.info("Hooking new default : onOperatorError")
writer.close()
viewFlow.getChildWidth()
public LengthFilter create(TokenStream input){   return new LengthFilter(input,min,max); } 
IllegalArgumentException e
index >= size || index < 0
Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient).mount(alluxioPath,ufsPath,mountOptions)
IntrospectionSupport.setProperties(config,componentProperties)
internalPath != null && internalPath.exists()
Math.max(aggregateData.getAvgColLen(),newData.getAvgColLen())
is(1)
message.getConversation()
processor.open(w,request,AtmosphereResponse.newInstance(framework.getAtmosphereConfig(),request,w))
mCursor.close()
mapEntry.getValue().equals(source)
selenium.isElementPresent("link=Control Panel")
Thread.sleep(51)
Slog.w(TAG,"Receiver with filter " + filter + " already registered for pid "+ rl.pid+ ", callerPackage is "+ callerPackage)
tagName.equals("uses-permission-sdk-m") || tagName.equals("uses-permission-sdk-23")
LOGGER.debug("Invalid number format for side pane component '" + componentName + "'.",e)
new CompositeException(e,ex)
range.getTo()
logger.debug("Could not fetch {} result for type: {} and filter: {}. Using default value '0': {}",requestedKey,entriesType,entriesFilter,ex.getMessage(),ex)
consumed | ((AndroidJoyInput14)joyInput).onKey(event)
getService().animateCollapseNotifications()
blockId == null || blockId >= Block.field_71973_m.length
{14,3.5f}
selenium.isElementPresent("link=Control Panel")
new LengthFieldBasedFrameDecoder(1024,3,2)
path.substring(7)
header[4]
super.dispatchTouchEvent(cancel)
dimensions != null && !dimensions.isEmpty()
canSupportPublicClient(client)
configurationManager.addContainerProvider(c)
um.getUsers(true)
mSplashScreen != null && mSplashScreen.getVisibility() == View.VISIBLE
ProjectRootManager.getInstance(project).getFileIndex().isInTestSourceContent(virtualFile)
mAccessibilityController.isAccessibilityEnabled()
new EnterSelectionDialog(shell,options,"Partioning method","Select the partitioning method")
RedisRunner.shutDownDefaultRedisServerInstance()
String message
scannedUnit.setExcludeUnlistedClasses(true)
mWm.addAppToken(0,null,0,0,0,false,false,0,0,false,false)
STATUS.isReleaseToLoadMore(mStatus)
doc=ALLOW_EMPTY_DOC
mContext.bindServiceAsUser(mIntent,mServiceConnection,flags,mHandler,new UserHandle(mUserId))
return true; 
group.getGroupId()
z + 1 >= size
1
Ordered.LOWEST_PRECEDENCE - 2
device == AudioSystem.DEVICE_OUT_HDMI || device == AudioSystem.DEVICE_OUT_HDMI_ARC
mLocalDirtyRect.set(0,0,width,height)
label.getPackageIdentifier()
decoder.readNullableString()
setDozeInFrontAlphaDelayed(mAodFrontScrimOpacity,100)
dest.writeInt(mSubId)
mCurrentBlockLeftByte >= tLen
task.abort()
t.equalsIgnoreCase(type)
new MediaSize("UNKNOWN_PORTRAIT","android",R.string.mediasize_unknown_portrait,1,Integer.MAX_VALUE)
mBondState.setBondState(address.toUpperCase(),state,reason)
selenium.isElementPresent("link=Control Panel")
case 5: 
SCAN_STATUS_COMPLETE=2
loaded.getLoaded().getDeclaredConstructor()
klass.getDeclaredFieldsUnchecked(false,declaredFields)
snap.getGravity() == Gravity.CENTER_HORIZONTAL || snap.getGravity() == Gravity.CENTER_VERTICAL
Thread.sleep(3000)
StringBuilder sb=new StringBuilder(100); 
idx >= 0
loaded.getLoaded().getDeclaredConstructor()
Integer.parseInt(getOptional("kylin.storage.hbase.small-family-block-size-bytes","65536"))
private static JDialog getNullDialog(){   return null; } 
{4,7,5,11,6,5,7,5,11,11}
getHomeButton()
client.services()
new Box(1,1,1)
engine.getCurrentHeatValue()
NewIndexDescriptor descriptor
appOpsManager.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new EnterSelectionDialog(shell,functionDesc,Messages.getString("SystemDataDialog.SelectInfoType.DialogTitle"),Messages.getString("SystemDataDialog.SelectInfoType.DialogMessage"))
old != null
new ApiHelper.RefreshBlogContentTask(dummyBlog,new GenericCallback(){   @Override public void onSuccess(){     assertTrue(true);     countDownLatch.countDown();   }   @Override public void onFailure(  ErrorType errorType,  String errorMessage,  Throwable throwable){     assertTrue(false);     countDownLatch.countDown();   } } )
Locale.getDefault().toLanguageTag()
Boolean.parseBoolean(indexOptions.get(INDEX_ANALYZED_OPTION))
user.getActualCompanyId()
!classType.hasTypeTree()
log.debug("Not in OSGi: using plexus based maven parser")
(options & ActionBar.DISPLAY_HOME_AS_UP) != 0 ? VISIBLE : GONE
selenium.isElementPresent("link=Control Panel")
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,newDeviceState,prevDeviceState)
Thread.sleep(1000)
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0))
new DataSize(40,Unit.MEGABYTE)
poList[2]
compressedSliceInput.getRetainedSize()
myChild2.getElementType() == ElementType.BLOCK_STATEMENT || myChild2.getElementType() == ElementType.CODE_BLOCK
Flux.from(publisher).handle((message,sink) -> sink.next(send(message))).onErrorContinue()
this == READY
GuiUtils.compareDatesOnly(date,System.currentTimeMillis())
httpResponseCode != 204
delta < 11000
remaining == 0
sequenceFileVersion != SEQUENCE_FILE_VERSION
onDetachedFromWindow()
WorkflowTaskManagerUtil.searchCount(_workflowTaskRequestHelper.getCompanyId(),_workflowTaskRequestHelper.getUserId(),searchTerms.getName(),searchTerms.getKeywords(),searchTerms.getType(),null,null,null,false,false,searchTerms.isAndOperator())
timelineObjectHolder.getObject().getChunk(0).getObject().getMetrics()
loaded.getLoaded().getDeclaredConstructor()
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
init || !accountInfoEdited()
quad ? (val & 0x3F) : 63
Map<String,Object>
new EnterSelectionDialog(shell,files,Messages.getString("ExcelInputDialog.FilesRead.DialogTitle"),Messages.getString("ExcelInputDialog.FilesRead.DialogMessage"))
report(n,MISPLACED_ANNOTATION,"@abstract","static methods cannot be abstract")
elementToDelete == null
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
mUiHandler.removeCallbacks(pae)
Key.class.getName()
String message
COOKIE_SYNC_MANAGER=false
clientInvocation.invokeUrgent().andThen(new ExecutionCallback<ClientMessage>(){   @Override public void onResponse(  ClientMessage response){     if (connection.isAlive()) {       connection.onHeartbeatReceived();     }   }   @Override public void onFailure(  Throwable t){     if (connection.isAlive()) {       logger.warning("Error receiving heartbeat for connection: " + connection,t);     }   } } ,executionService.getInternalExecutor())
CacheEntryProcessor<Integer,Long,Object>
retriever.getFrameAtTime(-1)
new IntPreference("max_level_download_tile",20)
sender.sendMessage(_("inventoryClearedAll"))
response.get(ROLLED_BACK)
assertRemoveSubsystemResources(servicesB)
DLFileShortcutLocalServiceUtil.getDLFileShortcut(primaryKey)
getParent() == null || startActionMode(callback) == null
PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE=0x00040000
_freemarkerEngineConfiguration.resourceModificationCheck()
getModel().getColumnCount()
Log_OC.e(TAG,"Trying to send a NULL OCFile")
name == null || name.isEmpty()
info.getType() & 0xf
database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
log.warn("Couldn't find style: " + styleId)
mFlexItemInEdit.setWrapBefore(isChecked)
MethodNotFoundException.class
id=21
winAnimator.setSurfaceBoundariesLocked(recoveringMemory)
Observable.interval(0,1,TimeUnit.SECONDS)
Boolean.parseBoolean(request.getParameter("notify"))
selenium.isElementPresent("link=Control Panel")
ImmutableList<Number>
parent.getRegionNameAsString()
Exception ex
ApplicationManager.getApplication().invokeLater(() -> {   final ExternalProjectsViewImpl projectsView=new ExternalProjectsViewImpl(project,(ToolWindowEx)toolWindow,myExternalSystemId);   ExternalProjectsManagerImpl.getInstance(project).registerView(projectsView);   ContentImpl tasksContent=new ContentImpl(projectsView,ExternalSystemBundle.message("tool.window.title.projects"),true);   contentManager.removeAllContents(true);   contentManager.addContent(tasksContent); } ,project.getDisposed())
right < startFromPixel + mWidthPerDay
log.warn("The TGT cannot be renewed beyond the next expiry date: {}." + "This process will not be able to authenticate new SASL connections after that " + "time (for example, it will not be able to authenticate a new connection with a Kafka "+ "Broker).  Ask your system administrator to either increase the "+ "'renew until' time by doing : 'modprinc -maxrenewlife {} ' within "+ "kadmin, or instead, to generate a keytab for {}. Because the TGT's "+ "expiry cannot be further extended by refreshing, exiting refresh thread now.",expiryDate,principal,principal)
List<Exception>
clearIndex()
selenium.isElementPresent("link=Control Panel")
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
topActivity != null && topActivity.getStack().getStackId() != PINNED_STACK_ID
columnType.equalsIgnoreCase("string") || columnType.toLowerCase().startsWith("char") || columnType.toLowerCase().startsWith("varchar")
context.getPackageManager().queryIntentActivitiesAsUser(intent,0,userId)
LensPositionSelectors.back()
stateHolder.reloadDatapoints()
first.getWeight()
mExpandedChild.getHeight() <= mContractedChild.getHeight()
ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(true)
origin.realComponent().doubleValue() > other
result.size() == 1
InputType.convolutional(conv.getHeight(),conv.getWidth(),from - to + 1)
mOpenTags.peek()
getProperties().put("hibernate.connection.handling_mode","DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT")
new IllegalArgumentException(e.getMessage(),e)
apnContext.getWaitingApns()
continueUpdateBounds(HOME_STACK_ID)
Integer.parseInt(bottomStr)
visitStatement(node,context)
StringBuilder numberedSrcTextBuffer=new StringBuilder(); 
mAttributes.getAllFlags()
it.setJavadocComment("Cool this annotation!")
assertEquals(counter.get(),0)
DOC(OrderRootType.DOCUMENTATION)
terminal.println("%s",doc.get(docMapper.mappers().smartName("file").mapper().names().indexName()))
mFrameSlots.remove(name)
socket.getSocket() == null || !connections.containsKey(socket)
ARCEUUS_HOME_TELEPORT=143
src.getMaxFileSize()
selenium.isElementPresent("link=Control Panel")
prefsWriter.apply()
LOGGER.error("Error with XML parser configuration",e1)
apnContext.getWaitingApns()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
new AlertDialog.Builder(mContext).setMessage(R.string.error_disable_esim_msg).setTitle(R.string.error_disable_esim_title).setCancelable(false).setPositiveButton(R.string.ok,null)
TURN_DISTANCE=60
Assert.assertEquals(resJsonObject.getJSONArray("SERVER_TENANTS").length(),4)
accountData.setIsNotifiedForInvoices(Objects.firstNonNull(isNotifiedForInvoices,delegate.isNotifiedForInvoices()))
sendTo("bar")
!isViewAncestorOf(focused,this) || distanceToView(focused) > 0
dynamicType.getLoaded().getDeclaredConstructor()
LOG.debug(ex.getLocalizedMessage(),ex)
selenium.isElementPresent("link=Control Panel")
return 1; 
T exception
new Paint()
functionFactory.lossNegativeLogLikelihood(getFunctionInput(iX),getFunctionInput(i_y),dimensions)
!consumers.isEmpty()
mInstalld.createProfileSnapshot(appId,packageName,codePath)
mUiHandler.removeCallbacks(pae)
TopEntity top2=new TopEntity(); 
apnContext.getWaitingApns()
new NullPointerException("Emitter got a null value. Null values are generally not allowed in 2.x operators and sources.")
Throwable e
mTempDate.get(Calendar.DAY_OF_YEAR) == mMaxDate.get(Calendar.DAY_OF_YEAR)
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
UIUtils.setBackground(mSliderLayout,mSliderBackgroundDrawableRes)
getLog().debug("Kotlin version " + KotlinCompilerVersion.VERSION + " (JRE "+ System.getProperty("java.runtime.version")+ ")")
engine.execute(query).dumpToString()
ctx.getMapView().refreshMap(true)
assertEquals(156,map.getLocalMapStats().getHeapCost())
mService.isDeviceOemUnlocked()
PROJECTS=100
StringBuffer b=new StringBuffer("ProcessInstance "); 
Beans.newDuration(casProperties.getAuthn().getOauth().getRefreshToken().getTimeToKillInSeconds()).getSeconds()
(opcode == TEXT.getOpCode()) || (opcode == BINARY.getOpCode())
Arrays.asList("android.hardware.audio@2.0::IDevicesFactory","android.hardware.bluetooth@1.0::IBluetoothHci","android.hardware.camera.provider@2.4::ICameraProvider","android.hardware.graphics.composer@2.1::IComposer","android.hardware.media.omx@1.0::IOmx","android.hardware.sensors@1.0::ISensors","android.hardware.vr@1.0::IVr")
dgtest <= 0
info.crashInfo.stackTrace.length() > 30000
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
addr.getHostAddress()
DEFAULT_VIRTUAL_DISPLAY_HEIGHT=1800
secHeader.insertSecurityHeader()
securityMode != SecurityMode.None || !mLockPatternUtils.isLockScreenDisabled(KeyguardUpdateMonitor.getCurrentUser())
new Location(user.getWorld(),x,y,z,user.getLocation().getYaw(),user.getLocation().getPitch())
ctx.isSwapOrOffheapEnabled()
retVal.setProperty(p.getKey(),p.getValue())
state > singleByteReads || dst.remaining() == 1
infos == null || infos.length == 0
nodeEngine.getSharedService(LockService.SERVICE_NAME)
displayAttachmentSavedMessage(file.toString())
scale=4
lock.isHeldByCurrentThread()
/**   * {@inheritDoc}  */ @Override public Broadcaster removeAtmosphereResource(AtmosphereResource r){   if (destroyed.get()) {     logger.debug(DESTROYED,getID(),"removeAtmosphereResource(AtmosphereResource r)");     return r;   }   if (!resources.contains(r)) {     return null;   }   boolean removed=resources.remove(r);   if (removed) {     if (resources.isEmpty()) {       notifyEmptyListener();       if (scope != SCOPE.REQUEST && lifeCyclePolicy.getLifeCyclePolicy() == EMPTY) {         releaseExternalResources();       }  else       if (scope == SCOPE.REQUEST || lifeCyclePolicy.getLifeCyclePolicy() == EMPTY_DESTROY) {         BroadcasterFactory.getDefault().remove(this,name);         destroy();       }     }   }   return r; } 
LOG.info("Working dir: " + workDir.getAbsolutePath())
new ArrayList<>(0)
name.startsWith("java.") || name.startsWith("javax.xml.") || name.startsWith("org.w3c.dom.")|| name.startsWith("org.xml.")
isLinux(expectedSql)
stores.containsKey(name)
FiltersTopComponent.findInstance().getUiModel().getSelectedRoot()
defaultCamelContext.removeRoute(id)
addValue(val,1L)
button.getActionId()
obj1.isLoose && obj2.isLoose
!status.isDir()
classResolver.resolveMandatoryClass(type)
Sets.newHashSet(PioneerAvrBindingConstants.IP_AVR_THING_TYPE,PioneerAvrBindingConstants.IP_AVR_UNSUPPORTED_THING_TYPE,PioneerAvrBindingConstants.SERIAL_AVR_THING_TYPE)
fragmentManager.beginTransaction().add(rxPermissionsFragment,TAG).commitAllowingStateLoss()
loaded.getLoaded().getDeclaredConstructor()
config.getMaxEntriesLocalHeap()
type.getDeclaredConstructor()
assertEquals(4,possibleOutcomes.size())
log.info("caught exception",e)
host.getHost()
lowerCaseLine.contains("authentication failed") || lowerCaseLine.contains("403 forbidden") || lowerCaseLine.contains("error: 400")
registerProblem(exceptClassRef,"Too broad exception clause")
Throwable e
assertCompletionVariants(myProjectPom,"RELEASE","LATEST")
type.getDeclaredConstructor()
mChildrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
mBindingServices.isEmpty()
moveToState(fragment,fragment.mStateAfterAnimating,0,0,false)
new BundleSavedState(source,getClass().getClassLoader())
mGnssCallback != null
avatar != null && avatar.getSmallImage() != null && avatar.getSmallImage().getFileReference() != null
InsertReturningStep<R>
TypeDescription declaringType=methodDescription.getDeclaringType().asErasure(); 
selenium.isElementPresent("link=Control Panel")
testWarning(LINE_JOINER.join("goog.require('a.c');","/** @suppress {extraRequire} */","goog.require('a.b')"),REQUIRES_NOT_SORTED)
log.error("PID contains identifier with no assigning authority")
type == Short.class
classFile.matcher(file.getName()).matches()
mp.getResolvedValue()
config.enterpriseConfig != null && config.enterpriseConfig.getEapMethod() != WifiEnterpriseConfig.Eap.NONE
analysis.getTypeWithCoercions(windowFunction)
call instanceof GoLiteral || call instanceof GoBinaryExpr || call instanceof GoParenthesesExpr|| (call instanceof GoUnaryExpr && ((GoUnaryExpr)call).getSendChannel() == null)|| call instanceof GoBuiltinCallExpr
private final QSDetailClipper mClipper; 
ONBOARDING_ENABLED=true
statistics.addRemoveTimeNanos(System.nanoTime() - start)
queueLength.asString()
ArrayList<ActiveMQDestination>
tsr.getReturnCode() != AbstractTaskResult.ReturnCode.SUCCESS && tsr.getReturnCode() != AbstractTaskResult.ReturnCode.TASK_NOT_FOUND
doTest(true)
userComponents.valueAt(j)
verify(mockHttpClient,timeout(1000).times(3))
isReturnGeneratedKeys() || isReturnGeneratedKeys() && generatedKey.isPresent()
setY((mWidth > 0) ? (mPosition * mWidth) : 0)
public LetterTokenizer create(Reader input){   return new LetterTokenizer(input); } 
assertThat(expiresDateFormat.parse(response.getHeader("Expires"))).isBeforeOrEqualsTo(new Date())
resultsJSONObject.put("results",jsonObject)
bufferSizeInMB * 1024L * 1024L
assertPlanEquals(expectedPlan,actualPlan)
event.getChangeColumns()
!sender.isPlayer() || !onlinePlayer.getName().equalsIgnoreCase(sender.getPlayer().getName())
this.controller.saveService(data)
version.onOrBefore(Version.V_1_0_0_Beta2) || version.onOrAfter(Version.V_2_0_0_beta1)
controller.createAction("component").setDescription("Get the pending tasks, in-progress tasks and the last executed task of a given component (usually a project).<br>" + "Requires one of the following permissions:" + "<ul>"+ "<li>'Administer System'</li>"+ "<li>'Administer' rights on the specified component</li>"+ "</ul>"+ "Either '%s' or '%s' must be provided, not both.<br>"+ "Since 6.1, field \"logs\" is deprecated and its value is always false.",PARAM_COMPONENT_ID,PARAM_COMPONENT_KEY)
RedisRunner.shutDownDefaultRedisServerInstance()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
new WorldPoint(1500,3703,0)
responseType != null && !Void.class.equals(responseType)
faceIndex*=3
that.getTable()
Log.e(TAG,"This will become an error",ex)
new LinkedList<>()
interpreterSetting.getGroup()
returnValue
interpreterSetting.getGroup()
KeyManagerFactory.getDefaultAlgorithm()
Long.parseLong(delay)
myExpectedArguments > 1 && myExpectedArguments == (expressions.length + additionalExpressions.size())
sb.append(modifiedURI)
new ClassPathResource(PROJECT_META_FILE,getClassLoader())
setValue(object,value.intValue())
createArtifactSpec("a","1.0")
new LeftTuple(f1,sink)
targetDatabase.setObjectQuotingStrategy(originalStrategy)
!mNavigationBarView.isQuickScrubEnabled()
this.httpHandler.handle(req,resp).onErrorResume(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
new EvaporateText()
ImmutableList<Map<String,Object>>
size() <= 0
-1346395749
mAccessibilityController.isAccessibilityEnabled()
BackupManagerServiceInterface svc=mService; 
SSLParametersImpl.getDefaultX509TrustManager()
getSupportFragmentManager().beginTransaction().add(android.R.id.content,commentFragment).commitAllowingStateLoss()
revokingStore.disable()
myFileChooser.requestFocus()
HttpServletResponse.class.cast(response).sendError(501,"Websocket protocol not supported")
selenium.isElementPresent("link=Control Panel")
out.println(e.getMessage())
msg.obj != mSmHandlerObj
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
textView.setTextSize(TypedValue.COMPLEX_UNIT_PX,out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
p.getDependencies()
@Override DiscardMessageOutput create(Stream stream,Configuration configuration); 
argNr > 0
frontendHandler.wait()
AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,targetNode,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))
!mConfiguration.isInMemoryDb() && (mConfiguration.openFlags & SQLiteDatabase.ENABLE_WRITE_AHEAD_LOGGING) != 0
new IndexWriter(indexStore,new SimpleAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
lvl != null && this.levels.get(overrideLevelId) != null
intent.setDataAndType(uri,DocumentsContract.Root.MIME_TYPE_ITEM)
System.arraycopy(cur,i + 1,ret,i,N - i - 1)
ack.getLastMessageId().getEntryLocator()
(cb.getBuffer().length - cb.getEnd()) == 0 && bb.getLength() != 0
StringBuffer sb=new StringBuffer("Connection "); 
String.format("Timeout waiting to lock %s. It is currently in use by another Gradle instance.%nOwner PID: %s%nOur PID: %s%nOwner Operation: %s%nOur operation: %s%nLock file: %s",displayName,ownerPid,metaDataProvider.getProcessIdentifier(),ownerOperation,operationDisplayName,lockFile)
@QueryParam("createdTimeInterval")
new BooleanPreference("use_map_markers",true)
viewerPanel.setRedraw(false)
dbManager.getDynamicPropertiesStore().saveAllowSameTokenName(1)
from("direct:a").delay(2000)
deck.addFact(editFact,cardModels,false)
holder == null || holder.provider == null
FastMath.min(origin,num.doubleValue())
testOffset=4875454L
n < colP.getInt(i)
new WorldPoint(2552,3556,0)
if (dockOnTopOrLeft) {   if (splitHorizontally) {     outBounds.right=displayRect.centerX() - adjustment;   }  else {     outBounds.bottom=displayRect.centerY() - adjustment;   } }  else {   if (splitHorizontally) {     outBounds.left=displayRect.centerX() + adjustment;   }  else {     outBounds.top=displayRect.centerY() + adjustment;   } } 
CreateFileOptions.defaults().setBlockSizeBytes(Constants.KB).setRecursive(true).setTtl(0)
new Color(0xff,0x30,0x00)
MockSpecModel.newBuilder().rawProps(ImmutableList.of(makePropModel("param0"),makePropModel("param1")))
mContext.sendBroadcastAsUser(intent,UserHandle.CURRENT)
log.debug(sm.getString("contextConfig.invalidSciHandlesTypes",className),e)
mImageManager.load(holder.mImgBlavatar,GravatarUtils.fixGravatarUrl(post.getBlogImageUrl(),mAvatarSzSmall),R.drawable.ic_placeholder_blavatar_grey_lighten_20_40dp)
dpToPx(64f)
getDefaultSystemHandlerActivityPackageLPr(deviceProvisionIntent,userId)
!selectedContacts.contains(recipient) && (existingContacts == null || !existingContacts.contains(recipient)) && recipient != null
new PrintWriter(cacheFile,"UTF-8")
new PsiEllipsisType(mappedComponent,type.getAnnotations())
endShape(CLOSE)
selenium.isElementPresent("link=Control Panel")
DeprecationLogger.nagUserWith("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0,UserHandle.USER_CURRENT)
objects.getClass().getGenericSuperclass().toString()
!success
serverId >= 0
new MethodDescription.Token(FOO,MODIFIERS,Collections.singletonList(mock(GenericTypeDescription.class)),first,Collections.<ParameterDescription.Token>emptyList(),Collections.singletonList(mock(GenericTypeDescription.class)),Collections.singletonList(mock(AnnotationDescription.class)),null)
nextArg()
isFocused()
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(implRef).descriptionAndTooltip(message)
Activate(app)
PApplet.splitTokens(pathDataBuffer,"|" + PConstants.WHITESPACE)
/**   * Visits the specified map result.  * @param mapResult the map result  * @return the result of the visit  */ T visitMapResult(MapResultData mapResult); 
setting("unsupported.cypher.plan_with_minimum_cardinality_estimates",BOOLEAN,FALSE)
subrange.getEnd()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,policy,IndexWriter.MaxFieldLength.LIMITED)
recyclerView.getChildAdapterPosition(view)
pId + BASE_FILE_NUMBER
logger.error("Failed to evaluate permissions",cause)
a6.getId() << 2
Localization.menuTitle("Check integrity")
callbackList.getBroadcastCookie(i)
close.assertNoSubscribers()
return false; 
((SimpleHttpConnectionManager)manager).closeIdleConnections(0)
epochs <= 0
databaseProductName.startsWith("ASE") || databaseProductName.startsWith("Adaptive")
IndexReader.open(benchmark.getRunData().getDirectory())
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
IndexReader.open(store)
UnderFileSystemUtils.deleteFileIfExists(mCheckpointPath)
manager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,alarmTime,pi)
Slog.w(TAG,"APK " + fileName + " has unaligned native code "+ entry.getName())
FBUtilities.getBroadcastAddress()
assertEquals(12,visitor.getConditions().size())
mContext.startActivityAsUser(intent,null,UserHandle.CURRENT)
assertEquals(invoicesAfterClose.size(),2)
Thread.sleep(1000)
getStepIOMeta().getInfoStreams()
BatchServerInventoryViewProvider.class
clazz == null
_cloneFormat(DATE_FORMAT_ISO8601_Z,formatStr,DEFAULT_TIMEZONE,_locale,_lenient)
HashMap<String,AstyanaxKeyColumnValueStore>
selenium.isElementPresent("link=Control Panel")
mCollapsingTextHelper.setCollapsedTextGravity(gravity)
(t instanceof MetaException) && t.getMessage().matches("(?s).*(JDO[a-zA-Z]*|TProtocol|TTransport)Exception.*") && !t.getMessage().contains("java.sql.SQLIntegrityConstraintViolationException")
r != null && !r.finishing
KeyManagerFactory.getDefaultAlgorithm()
StringBuilder buffer=new StringBuilder(); 
@GET @Path("/{petId}") @ApiOperation(value="Find pet by ID",notes="Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions",response=Pet.class) @ApiResponses(value={@ApiResponse(code=400,message="Invalid ID supplied"),@ApiResponse(code=404,message="Pet not found")}) public Pet getPetById(@ApiParam(value="ID of pet that needs to be fetched",allowableValues="range[1,5]",required=true) @PathParam("petId") String petId) throws NotFoundException {   Pet pet=petData.getPetbyId(ru.getLong(0,100000,0,petId));   if (null != pet) {     return Response.ok().entity(pet).build();   }  else {     throw new NotFoundException(404,"Pet not found");   } } 
sequence.getCache() != null && sequence.getCache() > 0
value.toBigInteger()
Response.ok(null,MediaType.TEXT_PLAIN)
FastMath.min(origin,num.floatValue())
pTMXTiledMap.getTileHeight()
growLock.unlock()
baseComparator.compare(first,second)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commit()
NotificationColorUtil.calculateContrast(foregroundColor,backgroundColor)
Debug.e("Texture asset not found, " + pAssetPath,e)
bean.getCollectionTime()
LAST_VERSION=547
notifyAll()
Throwable e
Arrays.asList("ErrorResponse","Response","Int","Int32","Int64","Int64","Float","Double","Bool","Void","String","Character","AnyObject","Any","Error","URL","class","Class","break","as","associativity","deinit","case","dynamicType","convenience","enum","continue","false","dynamic","extension","default","is","didSet","func","do","nil","final","import","else","self","get","init","fallthrough","Self","infix","internal","for","super","inout","let","if","true","lazy","operator","in","COLUMN","left","private","return","FILE","mutating","protocol","switch","FUNCTION","none","public","where","LINE","nonmutating","static","while","optional","struct","override","subscript","postfix","typealias","precedence","var","prefix","Protocol","required","right","set","Type","unowned","weak","Data")
res.setStopThread(true)
Integer.parseInt(attrValue)
request.getServletPath()
loaded.getLoaded().getDeclaredConstructor()
callback.disconnectCallback(name,jsa)
seq.length() < width || isMarked
nextTokenIs(b,IDENTIFIER)
OVERRIDE_PREFIX + overridesLocation.replace('/','_')
new RuntimeException(e)
new String[5]
prefs.getBoolean(PERSIST_SERVICE,true)
assertEquals("We get the wrong sayHello result","hello",result)
layoutManager.addView(view)
channel.getPipeline().sendUpstreamLater(new DefaultExceptionEvent(channel,cause))
new GroovyBugError("The lookup for " + name + " caused a failed compilaton. There should not have been any compilation from this call.",cfe)
entry.getKey().getServerName()
JSONFactoryUtil.looseDeserialize(cmd)
actionButton.setRolloverIcon(new ImageIcon(ca.getRolloverIcon()).getImage())
stack.peek()
adapter.callback != null && getAdapterPosition() != RecyclerView.NO_POSITION
stopwatch.elapsed(MILLISECONDS)
mNetworkInfo != null && networkInfo != null && mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
buildMode.getBuildMode()
public FieldType get(@NotNull ContainingClass owner){   return (V)unsafe.getObjectVolatile(owner,offset); } 
logger.error("{} is missing from the session and can not be retrieved.",OAuthConstants.OAUTH20_CALLBACKURL)
new ByteBuddy().subclass(Object.class).name("example.Type").make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
action.new ReroutePhase(null,request,listener)
filter.getTickSize()
range.getEndOffset()
tracesDir.mkdirs()
getSupportActionBar()
mSettingsButton != null && !mHasSettingsPanel
avatar == null || avatar.getFullImage() == null
(strLine=br.readLine()) != null && !strLine.isEmpty()
size >= _STORAGE_SIZE_DENOMINATOR
sqlType == Types.NUMERIC || sqlType == Types.DECIMAL
in.getDepth() >= outerDepth
telephony.isRinging(getOpPackageName())
new Settings(getContext().getFilesDir(),new Object())
loaded.getLoaded().getDeclaredConstructor()
context.getOpPackageName()
ConstantNode.forConstant(resolvedMethod.getEncoding(),tool.getMetaAccess())
requestURI.startsWith(excludedPath)
headers.getCommand()
new LinkedHashMap()
historicState(item,timestamp,serviceName)
getContext().enforceCallingPermission(android.Manifest.permission.DUMP,message)
meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
!fd.mkdir()
_sharingEntryLocalService.addSharingEntry(TestPropsValues.getUserId(),_groupUser.getUserId(),classNameId,_fileEntry.getFileEntryId(),_group.getGroupId(),true,Collections.singletonList(SharingEntryActionKey.VIEW),serviceContext)
parser.parseLight(GroovyElementTypes.CLOSURE,builder)
client.getLocalPlayer().getInteracting().getName().contains(FISHING_SPOT)
shortComment.lastIndexOf(']')
app.setOwnerName(ownerName)
Flux.from(inputStream).concatMap(value -> {   DataBuffer arraySeparator=bufferFactory.wrap(SEPARATOR_BUFFER);   return Flux.just(encodeValue(value,bufferFactory,elementType),arraySeparator); } )
Throwable e
new ClusterConfiguration(name,Collections.singleton(boundAt))
myChangeListManager.waitUntilRefreshed()
fileMeasures.get(5L)
Context.getGeofenceManager() != null && device.getGeofenceIds() != null
UpgradeStepRegistrator.class
FinalUtils.canBeFinal(field)
Thread.interrupted()
T
mAppToken.isVisible()
ExprEval.ofLong(null)
2 < statuses.size()
gc.createCompatibleImage(wide,high,Transparency.TRANSLUCENT)
composeText.getText()
address.getHostAddress()
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
VERSION=42
IllegalArgumentException e
selenium.isElementPresent("link=Control Panel")
selenium.isElementPresent("link=Control Panel")
dynamicType.getDeclaredConstructor()
selenium.isElementPresent("link=Control Panel")
mResolver.start()
selenium.isElementPresent("link=Control Panel")
new EmptyBorder(0,2,0,6)
new Font("SansSerif",Font.PLAIN,10)
assertNumUniqueNodeNameBuckets(2)
!site && (liveGroupId == 0) && !name.equals(GroupConstants.CONTROL_PANEL)
Throwable e
mNavigationBarView.getPaddingLeft()
-latitude
clipItem.coerceToText(mContext)
curComp.equals(service)
resourceGetRet.put("config",ret)
new IndexWriter(dir,true,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED)
!PixelFormat.formatHasAlpha(mRequestedFormat)
findCodecForFormat(true,format)
dateMask[i]
bookmarksFolderFinder.findF_E_ByG_F(groupId,folderId,queryDefinition)
masterAddress.split(":").length == 2
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Integer.parseInt(taskIdStr)
theirs=theirIterator.next()
Component invoker
mCallback.onInputUpdated(inputId)
selenium.isElementPresent("link=Control Panel")
mActiveStreamType == -1 || streamType != mActiveStreamType
HMSHANDLERATTEMPTS("hive.hmshandler.retry.attempts",10,"The number of times to retry a HMSHandler call if there were a connection error.")
public class XpathRegressionImportControlTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlOne.xml"));     final String[] expectedViolation={"3:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_DISALLOWED,"java.util.Scanner")};     final List<String> expectedXpathQueries=Collections.singletonList("/IMPORT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlTwo.xml"));     final String[] expectedViolation={"1:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_UNKNOWN_PKG)};     final List<String> expectedXpathQueries=Collections.singletonList("/PACKAGE_DEF");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testThree() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlThree.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     final String[] expectedViolation={"1:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_MISSING_FILE)};     final List<String> expectedXpathQueries=Collections.singletonList("/PACKAGE_DEF");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testFour() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlFour.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlFour.xml"));     final String[] expectedViolation={"4:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_DISALLOWED,"java.util.Scanner")};     final List<String> expectedXpathQueries=Collections.singletonList("/IMPORT[./DOT[@text='Scanner']]");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
writeString(writer,fieldName,String.valueOf(reader.getInt()))
DEBUG_FOCUS=true
ThresholdFailureDetector.class
wrapped.equals(binaryMessageHandler)
displayContent.getDockedStackVisibleForUserLocked()
item(GREEN_ROBE_TOP)
new TextPaint()
audioTrack.getPlaybackHeadPosition()
Log.d(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
invoicePayment.isSuccess() == null || !invoicePayment.isSuccess()
rhs.getScore()
remaining == 0
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(4,Duration.ofMillis(100),Duration.ofMillis(2000),0.1).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1,0,1,0,1,0,1).expectErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 4/4").hasCause(exception))
message.getConversation()
o.getClass() != getClass() && !(o instanceof ArrayNode)
e2.getPointerCount()
mAppOpsService.checkOperation(AppOpsManager.OP_GET_USAGE_STATS,Process.myUid(),null)
WrapAlloyTemplateMojoTest.class
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
volume.getMtpReserveSpace() * 1024L * 1024L
Results.forbidden()
return false; 
PRAYER_ENHANCE(ItemID.PRAYER_ENHANCE_4,GameTimerImageType.ITEM,"Prayer enhance",290,ChronoUnit.SECONDS)
clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS)
selenium.isElementPresent("link=Control Panel")
group != null && this == group.mInternalConnection
handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
!md.getToggleState()
platformVersion < M
assertMockEndpointsSatisfied()
Integer.parseInt(cmd.getOptionValue(SIZE_OPTION))
mTo == 0
mBackdrop.animate().alpha(0.002f)
log.debug("Received ping --> {}",payload)
mCallback.onInputUpdated(inputId)
mapper.setAttributePrefix("")
TelephonyManager.getDefault().getCurrentPhoneType()
i=0
mFrameSlots.remove(name)
setValue(object,value.intValue())
bigIconBg.getHeight() * 0.91f
pending_native(myFd)
selenium.isElementPresent("link=Control Panel")
LOG.info("Could not find default spell checking inspection")
-mapView.getMapOrientation()
mActionBarTop.getVisibility() != GONE
!TextUtils.isEmpty(library.getLibraryWebsite()) || !TextUtils.isEmpty(library.getRepositoryLink())
body[0][0][1]
telephony.getDataNetworkTypeForSubscriber(subId,getOpPackageName())
i < 2000
equals(file1,file2)
assertTrue(message.getPayload() instanceof Collection<?>)
maxEntityId >= maxSequenceId
new BindException(newConcept,"concept")
nodeEngine.getSharedService(LockService.SERVICE_NAME)
mRemote.transact(REVOKE_URI_PERMISSION_FROM_OWNER_TRANSACTION,data,reply,0)
client.getDefaultRequestOptions().setMaximumExecutionTimeInMs(timeout)
GL20.glUniform3fv(location,v)
CachedConstructor constructor=(CachedConstructor)chooseMethod("<init>",constructors,arguments,false); 
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
commit.getId().asString()
Spacing.createSpacing(0,0,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE)
preds2 != null && preds2.size() == 1
Throwable e
this.clientRpcServer.addProtocol(RpcKind.RPC_WRITABLE,HAServiceProtocol.class,this)
!View.isInitialised() || EventQueue.isDispatchThread()
relationship(19,c,"KNOWS",d)
obj instanceof HotSpotResolvedJavaMethodImpl
checkCall(receiver)
mHotspotBounds.set(left,top,right,bottom)
targetCondn == null || (nodeCondn.size() != targetCondn.size())
TelephonyManager.getDefault().getCurrentPhoneType()
ColorProperties.getColor("controlShadow")
binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
dz <= -1
dest.writeInt(mSubId)
relativePath.length() > 0 && relativePath.charAt(0) == '/'
appOpsManager.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
selenium.click("//li[4]/span/a/span")
min1 <= min2
String message
endPos < bufEnd
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
FileUtils.setPermissions(file.getBaseFile().getPath(),0640,SYSTEM_UID,PACKAGE_INFO_GID)
files.size() > 0
new PyStringLiteralLexer(PyElementTypes.STRING_LITERAL_EXPRESSION)
addView(mTitleLayout)
transportService.sendRequest(node,PublishClusterStateRequestHandler.ACTION,new PublishClusterStateRequest(clusterState),TransportRequestOptions.options().withHighType(),new VoidTransportResponseHandler(false){   @Override public void handleException(  TransportException exp){     logger.debug("failed to send cluster state to [{}], should be detected as failed soon...",exp,node);   } } )
return false; 
Values.stringOrNoValue(stringValue(offset))
sub.next(dataBuffer)
builder.setView(frame,false,true)
dynamicClassType.getDeclaredConstructor()
ch.unsafe().flush()
digester.parse(fis)
assertNull(savedPayment4Again.getLastSuccessStateName())
writePermission.intern()
((HotSpotResolvedObjectType)type).getFingerprint() == 0
logger.warn("Error creating pool to " + host,t)
mAuthorities.valueAt(i)
min1 <= min2
@Deprecated
mGnssCallback != null
path.toString()
preparedStatement.setNCharacterStream(paramIndex,tmpReader)
component.getSources()
fMethodDescriptions.putIfAbsent(method,description)
mCurrentVrCompositorService == null
new Bitmap(nativeInt,null,isMutable,null,density)
updateCloseButton()
from >= to
Context.newBuilder("java").option("java.AllowClassLoading","true")
isFieldKept(input,uniqueField)
ctx.sendUpstream(e)
row.contextRowSlots != null && cellIndex < row.contextRowSlots.length
DateUtils.parseDateStrictly(source,iso8601Patterns)
bigFirstTokenBalance.multiply(bigTokenQuant).divide(bigSecondTokenBalance).longValueExact()
private final StringBuilder sb=new StringBuilder(); 
platformVersion < M
serialVersionUID=1725346764
from > to
log.info("Reset to factory defaults : onOperator")
Exception e
new RuntimeException(e)
mService.setAppPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
ServerToClientMessage.instantiateMessage(makeChanges,DateUtilities.now())
TreeUtil.expand(getTree(),2)
cfg.setExternalExecution(false)
setTimeToIdleSeconds(Long.valueOf((String)cacheSettings.get("timeToIdleSeconds")).longValue())
ZONE3_SOURCE_INTERNETRADIO(154)
loaded.getLoaded().getDeclaredConstructor()
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),mNotificationChannel.getImportance(),mSbn,null,null,null,null,null)
mBluetoothHeadset.connectAudio()
Log.e(TAG,"This will become an error",ex)
doTest(true)
usage instanceof IfNode || usage instanceof FixedGuardNode || usage instanceof ShortCircuitOrNode|| usage instanceof GuardingPiNode|| usage instanceof ConditionAnchorNode
toPreProcess.getFeatures().divi(maxRange - minRange + Nd4j.EPS_THRESHOLD)
Thread.sleep(400)
defaultMavenProfile.setOutputRelativeToContentRoot(true)
type.getDeclaredConstructor()
PendingIntent.getBroadcastAsUser(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
String.format(Locale.ROOT,"Role name [%s] is not valid. Please use lowercase and numbers only",role)
model != null && model.getSelectedLayout() != null
hasRows(oldTableName)
group.getRoles()
!mapServiceContext.hasRegisteredListener(mapName)
stack == null && w.getAttrs().type != TYPE_PRIVATE_PRESENTATION
Arrays.asList("cmd","ls","pwd")
listType == null || !listType.getType().equals(type)
selenium.isElementPresent("link=Control Panel")
!value.isNull()
request.getServletPath()
DateUtils.getLocalTime()
pipe != null && GateKind.values()[coreState.gateKind] != GateKind.None
logger.info("Using folder " + checkPointFolderFile + " for storing checkpoints")
BasicChaosInstanceSelector.class
args.length < 1
@Nullable
LOG.error("DataNode is out of memory. Will retry in 30 seconds.",ie)
l.hasSensor(sensor) && l.removeSensor(sensor) == 0
Thread.sleep(1000)
getTelecomService().endCall(mContext.getPackageName())
MORE_DEBUG && okay && mAgent != null
windowStart=0
platformVersion < M
errorType != ApiHelper.ErrorType.NO_ERROR
requireContext()
this.getString(R.string.shared_string_release).toLowerCase()
Integer.parseInt(this.getOptional("kylin.server.auth-user-cache.expire-seconds","300"))
clearIndex()
outActivity != null && outActivity.length > 0
this.bus == null
LOGGER.error(message,e)
endsWith("/home/source")
logger.trace("Session destroyed")
!change.downgrades(current)
telephony.isIdle(getOpPackageName())
final StatefulSession workingMemory=ruleBase.newStatefulSession(); 
CharSequence channel
StringUtils.isNoneEmpty(runtime.getRuntimeError())
loaded.getLoaded().getDeclaredConstructor()
canvas.drawText(shortText,Rect2i.createFromMinAndSize(iconWidth,0,canvas.getRegion().width() - iconWidth,canvas.getRegion().height()))
viewToModel == null || viewToModel.length != tableModel.getRowCount()
checkCall(receiver)
setSunPosition(cal,latitude,longitude,sun)
terms.size() < 3000
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) == PackageManager.SIGNATURE_MATCH
selenium.isElementPresent("link=Control Panel")
ws.newRequest()
AssetTagFinderUtil.findByG_C_N(_scopeGroup.getGroupId(),classNameId,assetTagName,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null)
"DROP TABLE IF EXISTS " + TABLE_VISIBILITY
myPromptHooksExtensionFile == null || !myPromptHooksExtensionFile.exists()
mClocks.uptimeMillis()
((Scorecard)serializable).getUseReasonCodes()
JDBCUtils.safeGetString(dbResult,"PROCESS")
mContext.checkCallingOrSelfPermission(android.Manifest.permission.READ_PRIVILEGED_PHONE_STATE)
storeRepo.getAllNodeStores()
account.getId()
isBookmarksList()
mode != null && !mode.isEmpty()
getRedeliveryDelay()
15 * 60 * 1000
measured.setPara(source,bufEnd,bufEnd,textDir)
TIMEOUT=30000
mState == STATE_UNINITIALIZED
getXmlPackages()
vs == 0xFE0E || testCase.mVariationSelectors.contains(vs)
mDataAuthorities == null || data == null
loaded.getLoaded().getDeclaredConstructor()
DIARY_TEXT=3
i >= size
popupWindow.setContentWidth(menuWidth)
ran.nextInt(250)
d.setMinorVersion(1)
type.getDeclaredConstructor()
target.directory("zk" + id + "data",true)
listener != null && mHandler == null
handleIncomingUser(callingPid,callingUid,userId,false,ALLOW_NON_FULL,"checkContentProviderPermissionLocked " + cpi.authority,null)
/**   * Signal the maps/reduces to start.  */ static void signalTasks(MiniDFSCluster dfs,FileSystem fileSys,String mapSignalFile,String reduceSignalFile,int replication) throws Exception {   writeFile(dfs.getNameNode(),fileSys.getConf(),new Path(mapSignalFile),(short)replication);   writeFile(dfs.getNameNode(),fileSys.getConf(),new Path(reduceSignalFile),(short)replication); } 
logger.warn("{} invalid: {}",getEntityClass().getSimpleName(),msg)
getXml(map,defaultLanguageId,key)
me.getComponent() == myCurrentComponent || me.getComponent() == myQueuedComponent
lock.isHeldByCurrentThread()
boolean multiValueResponse() default false; 
mService.mDisplayContents.valueAt(i)
role instanceof String
frame.removeWindowFocusListener(myIdeFrameFocusListener)
selenium.click("//li[4]/span/a/span")
nodeConfig.setExecutorServiceWorkers(Collections.singletonMap("test",1))
animation.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
SavedSearch.createSavedSearchList(get(getBaseURL() + "saved_searches.json",true))
DEBUG=false
this.addComboField(tabIndex,fieldLabel,choices,value,false)
mapper.setAttributePrefix("ROLE_")
new Button("submit"){   private static final long serialVersionUID=1L;   @Override public void onSubmit(){     try {       GeoServerExtensions.bean(GeoFenceConfigurationController.class).storeConfiguration(config,cacheParams);       doReturn();     }  catch (    Exception e) {       LOGGER.log(Level.WARNING,"Save error",e);       error(e);     }   } } 
new int[572]
mAms.mWaitForNetworkTimeoutMs=2000
item == null || !item.isValid()
selenium.isElementPresent("link=Control Panel")
String.class
methodReturnType != null && methodReturnType != PsiType.VOID
sm.getString("managerBase.sessionAttributeValueClassNameFilter",name,value.getClass().getName(),sessionAttributeValueClassNamePattern)
previousTypeSettingsProperties.toString()
ts.getJobId() == jobId
!panelsEnabled() || !mKeyguardMonitor.isDeviceInteractive() || mKeyguardMonitor.isShowing()
synchronized (frontendHandler) {   try {     io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.this.wait();   }  catch (  final InterruptedException ignored) {   } } 
entry.notification.cloneLight()
new ConstructorInjectionComponentAdapter(implClass,implClass,null,true)
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
dateMask[i]
selenium.isElementPresent("link=Control Panel")
imageView.setImageDrawable(drawable)
selenium.isElementPresent("link=Control Panel")
Beans.newDuration(session.getLockTimeout()).getSeconds()
states.length >= 3
new IndexWriter(directory,autoCommit,ANALYZER,true,IndexWriter.MaxFieldLength.LIMITED)
proto.getRootRelativePath()
currentTime >= stage.getLastAttemptTime(hostName,role) + taskTimeout
return true; 
datastoreFactory.getDatastore(c.getPipelineOptions(),v1Options.getProjectId(),v1Options.getLocalhost())
partition.getParameters()
dest.writeTypedArray(remoteInputs,flags)
objectMapper.reader(DataSegment.class)
myEditor.getBackgroundColor()
Boolean.parseBoolean(resizeableStr)
LOG.info("recovered from " + StringUtils.stringifyException(e))
!key.equals(PropertyKey.ZOOKEEPER_ENABLED)
new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
-100
query.response().getContent().toString(Charset.forName("UTF-8")).substring(0,15)
selenium.isElementPresent("link=Control Panel")
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
Slog.w(TAG,"Invalid wallpaper data")
new TabbedPaneWrapper(this)
id=47
onCreateView(context,appWidgetId,appWidget)
results.size() == 3
getChildren().size() == 1 && !toggled
return true; 
IccUtils.cdmaBcdByteToInt((byte)0x8c)
lp.width != panelWidth || lp.gravity != panelGravity
new ScriptC_errorCalculator(mRS)
internalCacheDir == null
new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()
assertEquals(someName,actualPattern.pattern())
Integer.parseInt(taskIdStr)
getChatWritePanel().getEditorPane().requestFocusInWindow()
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,newDeviceState,prevDeviceState)
klass.getDeclaredMethodsUnchecked(false,declaredMethods)
returnElement != null
!Character.isLetter(c) && c == wordDelimiter[0]
resolver.acquireUnstableContentProviderClient(uri)
Number value=list.get(i); 
dexFile.readOptionalUint(out.getCursor())
mContext.startActivityAsUser(cantAddAccount,new UserHandle(userId))
NB_CACHED_PARAMS=10
assertOpenEventually(countDownLatch)
new Short(getShortValue(workingMemory,object))
new IncorrectOperationException(getClass().getName())
mJobs.valueAt(i)
ColorProperties.getColor("primaryControlColor")
CLOSE_TIMEOUT=100
builder.bold("#")
role.getChatUser().getAddress().toString()
(Short)args.get("damage")
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
KNOWN_TO_FAIL_STRICT.add("comments/generic_methods.unit:46  var")
mState.mPivotX != pivotX
selenium.uploadFile("//input[@id='_86_importFileName']",RuntimeVariables.replace("L:\\portal\\build\\portal-web\\test\\com\\liferay\\portalweb\\portlet\\mediagallery\\dependencies\\Media_Gallery-Selenium.portlet.lar"))
Flux.from(publisher).handle((message,sink) -> sink.next(send(message))).onErrorContinue()
targetDirectory.file("unwritable")
MediaSessionLegacyHelper.getHelper(mContext).sendVolumeKeyEvent(event,AudioManager.USE_DEFAULT_STREAM_TYPE,true)
settings.readLPw(null,0,false)
Localization.menuTitle("Search")
mapper.getTypeFactory().constructType(AuthConfig.class)
return true; 
par == null || par.isEmpty()
new PackratActionDialogContents("",actions)
text.getBoundingBox().height()
assertThat(decorator.generatesIssuesMetrics()).hasSize(14)
chain.resolveUrlPath(resourceUrlPath,locations).switchIfEmpty(Mono.defer(() -> {   String webJarResourcePath=findWebJarResourcePath(resourceUrlPath);   if (webJarResourcePath != null) {     return chain.resolveUrlPath(webJarResourcePath,locations);   }  else {     return Mono.empty();   } } ))
cursor.shouldRetry()
id.provider != null && id.provider.info != null
DumpUtils.checkDumpAndUsageStatsPermission(mContext,TAG,pw)
mDataAuthorities == null || data == null
mTextColorLink.getColorForState(ds.drawableState,0)
-16
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
id=45
post.getUrl()
log.error("Cannot evaluate type() for {} due to {}",requestClass,e,e)
ConcurrentHashMap<Object,AggregationStrategy>
mContext.getString(R.string.branded_monitoring_description_app_personal,primaryVpn)
tsdb.metrics.getIdAsync(sub_query.getMetric()).addCallbackDeferring(new MetricCB())
setValue(object,value.intValue())
history2.getHistoryEntryId()
didtimeout=true
myVMParameters.getComponent().setDialogCaption(myVMParameters.getRawText())
peers.stopAndWait()
GL.glCopyTexImage2D(target,level,internalformat,x,y,width,height,border)
type.getDeclaredConstructor()
file.getName()
TokenSet.create(JavaTokenType.LT,JavaTokenType.LTLT,JavaTokenType.LTLTEQ,JavaTokenType.GT,JavaTokenType.GTGT,JavaTokenType.GTGTEQ,JavaTokenType.GTGTGTEQ,JavaTokenType.AND,JavaTokenType.ANDAND,JavaTokenType.ANDEQ,JavaTokenType.STRING_LITERAL)
!trackMotionScroll(delta,delta)
ERROR_MARGIN=500
new EqualsWithEps(arrayX,arrayY,Nd4j.EPS_THRESHOLD)
TermAllGroupsCollector c3=new TermAllGroupsCollector(groupField); 
file.getAbsolutePath()
selenium.isElementPresent("link=Control Panel")
visitStatement(node,context)
target.getDestinationLinkAddress()
@NotNull ContainingClass owner
times(1)
new ServiceActivatorContextImpl(batchBuilder,serviceContainer)
log.error("Problem in JSR223 script ",e)
reindex.getDefaultCollection()
SERVLET_MINOR_VERSION=1
theClass.getConstructor()
Map<RealmObject,RealmObject>
LdapUtils.getFullDn(dn,ctx).toString()
maxIdxPerLine - 3
JsonWriteContext.createRootContext(null)
checkManageOrCreateUsersPermission("query user")
configList == null || configList.size() == 0
doReopen(true)
t.report(n,REFERENCE_TO_SHORT_IMPORT_BY_LONG_NAME,n.getQualifiedName())
attribute.getDefinition().getMarshaller()
mapper.writerFor(planType)
new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
getInt(THREAD_PER_HOST,2)
activityNdx <= topActivityNdx
userRecord != null && userRecord.mClientRecords != null
DEFAULT_TIMEOUT_MILLIS=1000
!regex.equals(lastRegex) || p == null
deltaY <= 0
mGnssCallback != null
configuration.getDatabaseId() == null && this.databaseIdProvider != null
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains("_auto_")
startingWindow != null && ttoken.startingView != null
log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
entry.getValue().getManagementInterfaceMicroVersion()
mAuthorities.valueAt(i)
this.beanFactory.containsBeanDefinition(beanName)
serverService.getOutgoingInterceptors()
new DefaultDataType<Byte>(SQLDialect.SQLSERVER,SQLDataType.TINYINT,"signed tinyint","tinyint")
enabled=true
new StatisticsUnit(unitNumber)
addView(root,0,new ViewGroup.LayoutParams(MATCH_PARENT,MATCH_PARENT))
type.getDeclaredConstructor()
ImmutableSet.of(UNDERWALL_TUNNEL_16529,UNDERWALL_TUNNEL_16530,STEPPING_STONE_16533,FENCE_16518,ROCKS_16549,ROCKS_16550,WALL_17049,WALL_17050,CRUMBLING_WALL_24222,UNDERWALL_TUNNEL,UNDERWALL_TUNNEL_16528,CREVICE_16543,UNDERWALL_TUNNEL_19032,UNDERWALL_TUNNEL_19036,BROKEN_RAFT,STEPPING_STONE_16513,ROCKS_3790,ROCKS_3791,ROCKS_3803,ROCKS_3804,ROCKS_16523,ROCKS_16524,ROCKS_3748,ROCKS_16545,ROCKS_16521,ROCKS_16522,ROCKS_16464,LOG_BALANCE_16540,LOG_BALANCE_16541,LOG_BALANCE_16542,BROKEN_FENCE,LOG_BALANCE_16546,LOG_BALANCE_16547,LOG_BALANCE_16548,CASTLE_WALL,HOLE_16520,WALL_17047,NULL_31852,ROCKS_16534,ROCKS_16535,STRONG_TREE_17074,STEPPING_STONE_16466,NULL_26884,NULL_26886,STEPPING_STONES,STEPPING_STONES_23646,STEPPING_STONES_23647,A_WOODEN_LOG,SPIKEY_CHAIN,SPIKEY_CHAIN_16538,STRANGE_FLOOR_16544,CREVICE_16539,STEPS_29993,STEPPING_STONE_14918,STEPPING_STONE_14917,ROCKY_HANDHOLDS_26404,ROCKY_HANDHOLDS_26405,ROCKY_HANDHOLDS_26406,ROCKY_HANDHOLDS_26400,ROCKY_HANDHOLDS_26401,ROCKY_HANDHOLDS_26402,LOG_BALANCE_23274,ROCKS_27984,ROCKS_27985,BOULDER_27990,ROCKS_27987,ROCKS_27988,GAP_29326,TUNNEL_30174,TUNNEL_30175,OBSTACLE_PIPE_16509,STRANGE_FLOOR,ROCKS,ROCKS_14106,LOOSE_RAILING_28849,CREVICE_9739,CREVICE_9740,HOLE_31481,HOLE_31482,LADDER_30938,LADDER_30939,LADDER_30940,LADDER_30941,ROPE_ANCHOR,ROPE_ANCHOR_30917,RUBBER_CAP_MUSHROOM,ROCKS_31757,ROCKS_31758,ROCKS_31759,PILLAR_31809,ROPESWING_23568,ROPESWING_23569,VINE_26880,VINE_26882,PIPE_21728,STEPPING_STONE_19040,PIPE_21727,LOG_BALANCE_20882,LOG_BALANCE_20884,STEPPING_STONE_21738,STEPPING_STONE_21739,TIGHTGAP,STILE_12982,MONKEYBARS_23566,OBSTACLE_PIPE_16511,STEPPING_STONE_11768,CREVICE_16465,ROCKS_19849,CROSSBOW_TREE_17062,ROCKS_17042,ROCKS_2231,STEPPING_STONE_29728,STEPPING_STONE_29729,STEPPING_STONE_29730,JUTTING_WALL_17002,ROCKS_16514,ROCKS_16515,LOG_BALANCE_3933,STEPPING_STONE_13504,DARK_TUNNEL_10047,WEATHERED_WALL,WEATHERED_WALL_16526,STEPPING_STONE_19042,ROCKS_16998,ROCKS_16999,ORNATE_RAILING,ORNATE_RAILING_17000,STEPPING_STONE_10663,BALANCING_LEDGE_23548,OBSTACLE_PIPE_23140,MONKEYBARS_23567,PILE_OF_RUBBLE_23563,PILE_OF_RUBBLE_23564,CREVICE_19043,PILLAR_31561,LOG_BALANCE_3931,LOG_BALANCE_3930,LOG_BALANCE_3929,LOG_BALANCE_3932,DENSE_FOREST_3938,DENSE_FOREST_3939,DENSE_FOREST_3998,DENSE_FOREST_3999,DENSE_FOREST,LEAVES,LEAVES_3924,LEAVES_3925,STICKS,TRIPWIRE,GAP,GAP_2831,STEPPING_STONE_5948,STEPPING_STONE_5949,ROCK_16115,CLIMBING_ROCKS_11948,CLIMBING_ROCKS_11949,BROKEN_FENCE_2618,NULL_25337,NULL_29868,NULL_29869,NULL_29870,ICE_CHUNKS_31822,NULL_31823,ICE_CHUNKS_31990,TUNNEL_30959,HOLE_30966,OBSTACLE,OBSTACLE_30767,OBSTACLE_30964,OBSTACLE_30962,LOOSE_RAILING_2186,LITTLE_BOULDER)
isOpened
value.startsWith("npm WARN ") || value.startsWith("warning ")
AndroidResourceUtil.findResourceFieldsForFileResource((PsiFile)element,true)
expandableView.getIntrinsicHeight()
Log.e(TAG,"This will become an error",ex)
pongPublication.offer(buffer,offset,length) > 0L
/**   * t1.g4 -> t2.g4 -> t3.g4 ->t1.g4   */ CIRCULAR_DEPENDENCY(200,"your grammars contain a circular dependency and cannot be sorted into a valid build order",ErrorSeverity.ERROR)
new DaemonProgressIndicator()
!val
10 * 1000
WorkflowTaskManagerUtil.searchCount(_workflowTaskRequestHelper.getCompanyId(),_workflowTaskRequestHelper.getUserId(),searchTerms.getKeywords(),searchTerms.getKeywords(),WorkflowHandlerUtil.getSearchableAssetTypes(),completedTasks,false)
Slog.e(TAG,"Starting rect for app requested, but none available",new Throwable())
mAttributes.getAllFlags()
checkFalsified(listsOf(doubles()),l -> isSorted(l.stream().sorted().collect(Collectors.toList())),28)
mDarkIntensity != DARK_INTENSITY_NOT_SET
artifact.getExecPath()
removeCallbacksAndMessages(null)
PendingIntent.getActivity(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
children == null
display.getRealMetrics(dm)
Math.toDegrees(Math.asin(burgerWidth / hypotenuse)) + 80
CommandUtils.convertMsToDate(files[1].getCreationTimeMs())
(sbn.getNotification().flags & Notification.FLAG_AUTOGROUP_SUMMARY) == 0
firstWakeup != null && mNextWakeup != firstWakeup.start
super.getView(position,contextualUndoView.getContentView(),contextualUndoView)
new CountDownLatch(7)
Mono.subscriberContext()
final ActivityStack pinnedStack=createStackForShouldBeVisibleTest(mDefaultDisplay,WINDOWING_MODE_PINNED,ACTIVITY_TYPE_STANDARD,true); 
testProviderConfig()
notation.map(new Transformer<ArtifactFile,Object>(){   @Override public ArtifactFile transform(  Object value){     ArtifactFile artifactFile;     if (value instanceof FileSystemLocation) {       FileSystemLocation location=(FileSystemLocation)value;       artifactFile=new ArtifactFile(location.getAsFile(),module.getVersion());     }  else     if (value instanceof File) {       artifactFile=new ArtifactFile((File)value,module.getVersion());     }  else {       throw new InvalidUserDataException(String.format("Cannot convert provided value (%s) to a file.",value));     }     return artifactFile;   } } )
blogVals.get(27)
imageView.setImageDrawable(null)
" firstActiveTime=" + firstActiveTime
uid >= 0
cs[0].set(r,(int)(rng.nextDouble() * _createFrame.response_factors))
mMenuDrawer.isMenuVisible()
type == QUADS || type == QUADS
networkInfo == null || networkInfo.getType() == ConnectivityManager.TYPE_WIFI && !networkInfo.isConnected()
connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS)
watching != null && watching.movie != null
logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
new EOFException("Attempted to move past end of data: (" + position + " + "+ length+ ") > "+ data.length)
layoutFriendlyURLLocalService.updateLayoutFriendlyURLs(user.getCompanyId(),groupId,plid,privateLayout,friendlyURLMap,serviceContext)
mock(ExampleService.class)
MAX_DIMEN_FOR_ROUNDING=1920
checkCall(receiver)
ObjectAnimator.ofFloat(mView,"alpha",1f,dimAlpha)
dynamicType.getLoaded().getDeclaredConstructor()
filterCollection.getBranchFilter() != null && !filterCollection.getBranchFilter().getBranchNames().isEmpty()
bbbGW.userDisconnectedFromGlobalAudio(emm.voiceConf,emm.userid,emm.name)
context.getBeanNamesForType(type,false,false)
invokeKind != InvokeKind.Special && this.optimisticOpts.useTypeCheckHints()
mBiometricUnlock.stop()
!StringUtils.equals(filter.getKey(),RuleNormalizer.RuleField.REPOSITORY.field())
new CharChunk(32)
mEditSessionQuestions.setText(String.valueOf(repLimit))
!wasMultiTouchinZoomMode
lexer.token() == (Token.SELECT) || lexer.token() == (Token.SEL)
Long.parseLong(value)
verifyPosition(decoder,text("(865733028143493,00I76,00,000,,,,,A,133755,210617,10.57354,077.24912,SW,000,00598,00000,K,0017368,1,12.7,,,0.000,,,0,0,0,0,1,1,0,,)074"))
mConnector.execute("resolver","clearifaceforuidrange",iface,uid_start,uid_end)
ams.mContext.createPackageContextAsUser(appInfo.packageName,0,new UserHandle(userId))
ATLAS_MAP_ENTRY_FIELD_COUNT=3
cc.getLazy()
!lan
dropdownItem.setHref(_renderResponse.createRenderURL(),"mvcPath","/edit_ddm_template.jsp","redirect",themeDisplay.getURLCurrent(),"groupId",String.valueOf(themeDisplay.getScopeGroupId()),"classNameId",String.valueOf(PortalUtil.getClassNameId(DDMStructure.class)),"classPK",String.valueOf(_getClassPK()),"resourceClassNameId",String.valueOf(PortalUtil.getClassNameId(JournalArticle.class)),"type",DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY)
spec.getReflection()
CacheData<RealmObject>
propertyIterator.hasNext()
commit.getId().asString()
new StringBuilder(638)
new IllegalStateException(e)
mImm.setInputMethodInternal(mToken,id)
LinkedHashSet<Test>
9 * 60 * 1000
request.getSharedAttributeNames()
isClosed.get()
@NonNull
f.toURI()
cfg.entrySet()
Long.parseLong(value)
counter > max
Map<String,Object>
Collection<FunctionDesc>
attributes.getFloat(R.styleable.ArcProgress_arc_angle,default_arc_angle)
UI_MODE_SERVICE.equals(name)
BUTTON_QUIESCENT_ALPHA=0.70f
path.findFileByRelativePath(className.replace('.','/') + ".class")
new IndexWriter(dirs[i],new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
exportStatusCounts(exporter)
userGroupMember.getUserGroupId()
owners.add(0,Receiver.<String>make(clazzGT.getType()))
dataBuffer.flip()
context.connectTimeout * 1000L
Loader.getResource(TEST_AUTOCONFIG_FILE,classLoader)
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallback mBluetoothGattCallback=new IBluetoothGattCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
mLinearLayout.setVisibility(View.GONE)
loaded.getLoaded().getDeclaredConstructor()
log.warn(sm.getString("contextConfig.role.link",link))
_typeSettingsProperties.toString()
trueNegatives.incrementCount(classLabel,1.0)
Trans != NO_TRANSPOSE
Flux.from(this.messageService.publisherPreAuthorizeHasRoleFindById(1L)).subscriberContext(withAdmin)
selenium.isElementPresent("link=Control Panel")
BUTTON_QUIESCENT_ALPHA=0.70f
invalidateDataSource(monitor,dataSource,false)
sTestCaseCounter == 0
logger.debug("Cannot handle command ({})",e.getMessage())
arguments.add(0,"--jmxlocal")
FileUtil.toContainerFile(searchPath)
type.getDeclaredConstructor()
limit >= 0
is(500)
config != null && config.servers() != null
setValue(object,value.intValue())
new IllegalArgumentException(sm.getString("pojoMethodMapping.duplicateMessageParam",m.getName(),m.getClass().getName()))
_fragmentEntryLocalService.addFragmentEntry(userId,fragmentEntry.getGroupId(),fragmentEntry.getFragmentCollectionId(),fragmentEntry.getName(),fragmentEntry.getCss(),fragmentEntry.getHtml(),fragmentEntry.getJs(),fragmentEntry.getPreviewFileEntryId(),fragmentEntry.getType(),fragmentEntry.getStatus(),serviceContext)
WordPress.getCurrentBlog().getLocalTableBlogId()
TelephonyManager.getDefault().getCurrentPhoneType()
Throwable e
getObjectLayout().getArrayIndexScale(elementKind)
state < 0
return false; 
r.curApp != null && r.curApp.curReceiver == r
sourceIterator.batch()
fulfillmentAmount.compareTo(new BigDecimal(0D)) == 0 || resultAmount.compareTo(fulfillmentAmount) <= 0
flyway.setLocations("db.migration","com.googlecode.flyway.sample.migration")
((PresenceStatus)status).getStatus() >= PresenceStatus.ONLINE_THRESHOLD
Assert.assertEquals(new InetSocketAddress(defaultHostname,10001),workerAddress)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
mAuthorities.valueAt(i)
assertTrue(oldChild.isSafelyReplaceableBy(newChild))
Throwable t
@Specialization protected LLVMBoxedPrimitive fromChar(char value,@SuppressWarnings("unused") LLVMInteropType.Structured type){   return new LLVMBoxedPrimitive(value); } 
mapillaryControl.setText(map.getString(R.string.mapillary),"")
ses.init()
DiagnosticType.error("AMBIGUOUS_FUNCTION_DECL","Ambiguous use of a named function: {0}.")
ObjectAnimator.ofFloat(mView,"alpha",1f,dimAlpha)
c.close()
opti >= args.length
storeProperty(propertyNode,pexp,current,visitor,receiver.getData())
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
closedChannelException == null
Preconditions.checkNotNull(timer,"timer")
sY != 0
lock.isHeldByCurrentThread()
new MockNode(Settings.builder().put(SETTINGS).put("node.data",false).build(),Version.CURRENT,Arrays.asList(WatcherBenchmarkPlugin.class,LicensePlugin.class))
globalFacetsForCategorySearch || category == null
sigmoidDerivative(ndArray,true)
_log.warn(ioe,ioe)
Arrays.sort(dbNames,new Comparator<String>(){   public int compare(  String o1,  String o2){     return o1.compareToIgnoreCase(o2);   } } )
Environment.getOemDirectory()
Math.max(leftLen,rightLen)
mImm.getEnabledInputMethodList()
new UnsupportedOperationException("Work in progress: DefaultDependencyMetadata is not really a DependencyMetadata")
ResponseEntity<String>
FieldAccess.forField(delegateField).read()
new DatabaseExplorerDialog(shell,SWT.NONE,inf,transMeta.getDatabases())
DbException.get(ErrorCode.INDEX_BELONGS_TO_CONSTRAINT_1,indexName,cons.getName())
Collections.singletonList(pi)
assertTrue(message.getPayload() instanceof Collection<?>)
holders.remove(holder)
mBondState.setBondState(address.toUpperCase(),state,reason)
gl.glDeleteRenderbuffer(depthStencilPackedBufferHandle)
newControl.setSpatial(clone)
fortData.getLureInfo().getLureExpiresTimestampMs() > api.currentTimeMillis()
maxValue >= low
platformVersion < M
ast != null && ast.getNextSibling() != null
getCurrCapacityUsed()
homeListView.smoothScrollToPosition(0)
myCopyDocument.addDocumentListener(new DocumentAdapter(){   @Override public void documentChanged(  DocumentEvent e){     if (isUpToDate()) {       myTranslation.addFirst(e);     }   } } ,this)
(call.getCallGroup() == null && otherCall.getCallGroup() == null) || (call.getCallGroup() != null || otherCall.getCallGroup() != null) && call.getCallGroup() != otherCall.getCallGroup()
parentDocId != -1 && (indexReader.getLiveDocs() == null || indexReader.getLiveDocs().get(parentDocId))
file.isFile()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),IndexWriter.MaxFieldLength.LIMITED)
HighlightInfo.newHighlightInfo(HighlightInfoType.WARNING).range(refElement).descriptionAndTooltip(message)
config.getProperty("peer.p2p.pingInterval",5L)
Setting.listSetting("searchguard.audit.config.http_endpoints",Lists.newArrayList("localhost:9200"),Function.identity(),Property.NodeScope)
supportProvider.getPushDownHandler()
RestartStrategies.fixedDelayRestart(1,0)
IllegalStateException.class
mStartActivity.task == null || mStartActivity.task == parent
new RelationshipLinkbackStage(topic,config,neoStore.getRelationshipStore(),nodeRelationshipCache,0,nextRelationshipId,false)
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
getOrCreateContainer().forceUnlock(dataKey)
response.getRawStatusCode()
selenium.isElementPresent("link=Control Panel")
assertEquals(0.0,(0.4 - est.getProb()) / 0.4,0.1)
in.readVInt()
BACKGROUND_DEXOPT_JOB=800
canvas.clipPath(mRenderPath)
newDecl.isNovel()
PrivacyManager.getRestrictions(true)
mapActions.openOptionsMenuAsDrawer()
new V(9,new EnumSetting(SORT_TYPE.class,Account.DEFAULT_SORT_TYPE))
type.getDeclaredConstructor()
selenium.isElementPresent("link=Control Panel")
NullPointerException e
!StringUtils.isBlank(outFileName)
subMesh.firstByte.intValue() / 6
verify(safeOutputStreamConsumer,times(7)).errOutput(anyString())
Thread.sleep(1000)
AndroidAptCompiler.getResourceDirForApkCompiler(depFacet.getModule(),depFacet)
final ColorUIResource color
this.registrations.remove(handler)
element.getLocalName()
ignoreOverriddenMethods && (AnnotationUtility.containsAnnotation(methodDef,"Override") || AnnotationUtility.containsAnnotation(methodDef,"java.lang.Override"))
Streams.fileIn(f)
-1L
InetAddress.getLocalHost()
selenium.isElementPresent("link=Control Panel")
0 | open
public class XpathRegressionRequireThisTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=RequireThisCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRequireThisOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RequireThisCheck.class);     moduleConfig.addAttribute("validateOnlyOverlapping","false");     final String[] expectedViolation={"7:9: " + getCheckMessage(RequireThisCheck.class,RequireThisCheck.MSG_VARIABLE,"age","")};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRequireThisOne']/OBJBLOCK" + "/METHOD_DEF[@text='changeAge']/SLIST/EXPR/ASSIGN[@text='age']/IDENT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=RequireThisCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRequireThisTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RequireThisCheck.class);     moduleConfig.addAttribute("validateOnlyOverlapping","false");     final String[] expectedViolation={"9:9: " + getCheckMessage(RequireThisCheck.class,RequireThisCheck.MSG_METHOD,"method1","")};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRequireThisTwo']/OBJBLOCK" + "/METHOD_DEF[@text='method2']/SLIST/EXPR/METHOD_CALL[@text='method1']/IDENT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
this.getFullyQualifiedName(DBPEvaluationContext.DDL)
this(0L,null); 
attribute.getDefinition().getMarshaller()
selenium.click("//li[4]/span/a/span")
selenium.isElementPresent("link=Control Panel")
endIndex > value.length()
result=true
booleanPreference(preference,value,R.string.p_field_missed_calls,R.string.MCA_missed_calls_pref_desc_disabled,R.string.MCA_missed_calls_pref_desc_enabled)
totalNbSuggestions == MAX_NUMBER_SUGGESTIONS
pagedStoragePageSizeProperty == null
BackupManagerServiceInterface svc=mService; 
indexOutURI.toString()
id=10874
ContextResolver.class
mGoogleApiConnectionTask.trySetResult(bundle)
NetworkCatalogItem libraryItem(); 
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
AbstractFilterRegistrationBean.class
new MetaTableLocator().waitMetaRegionLocation(watcher,10000)
future.get(120,TimeUnit.SECONDS)
selenium.isElementPresent("link=Control Panel")
selenium.isElementPresent("link=Control Panel")
SSLParametersImpl.getDefaultX509TrustManager()
selenium.isElementPresent("link=Control Panel")
decoder.decode(null,null,null,ChannelBuffers.wrappedBuffer(ByteOrder.LITTLE_ENDIAN,ChannelBufferTools.convertArray(buf1)))
LOGGER.debug("onStartCommand({}) called while currentCommandExecution = {}",execution,currentCommandExecution)
deltaY >= 0
c.getDomain() == null && getDomain() != null
SIDE_MARGIN_DIP=100
OUTPUT_SLOT_INVENTORY_INDEX=2
holder.createWarningAnnotation(element,composeTooltipString(descriptor,deprecated))
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
mRecyclerView.smoothScrollBy(hScroll,vScroll)
clazz == null
OverrideImplementUtil.getMethodSignaturesToOverride(aClass)
info.getMsisdnForSubscriber(subId,mContext.getOpPackageName())
new CacheException("Failed to unmarshall parameters.",e)
verifyPosition(decoder,text("359769031878322imei:359769031878322,tracker,1602160718,2,F,221811.000,A,1655.2193,S,14546.6722,E,0.00,,"))
new BulletTestCollection()
View newView; 
new KadaneResult(max,maxStart,maxEnd)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
_buildTemplateWithGradle("spring-mvc-portlet","spring-mvc-dependency-management","--dependency-management-enabled")
{4,5,5,11,6,5,7,7,11,11}
setIntegerPart(String.valueOf(integerPart))
setSDesEncryptionOnDescription(mediaType,description,null)
selenium.isElementPresent("link=Control Panel")
cookie.getComment()
appView.canGoBack()
Boolean.parseBoolean(getDefaultStr(key))
mRedrawClip.isEmpty() || view.getParent() == null
connectors.put(connectorId,connector)
new MediaController(mContext,token)
selenium.isElementPresent("link=Control Panel")
!isViewAncestorOf(focused,this) || distanceToView(focused) > 0
new AffineTransform(mTextScaleX,mTextSkewX,0,1,0,0)
usr.getUUID().equalsIgnoreCase(usr.getLastName())
Optional.ofNullable(BuckAddDependencyIntention.create(referenceElement,psiClass))
CasEvent::getEventId
new PlotFiltersIterationListener(null,variables,0)
log.error("Problem in JSR223 script ",e)
TextUtils.isEmpty(details) || DETAIL_SEPARATOR.equals(details) || task.isCompleted()
selenium.isElementPresent("link=Control Panel")
new String[5]
requestContext.getUri().getRawPath()
validatePossiblePropertyValues(propertyElement,possiblePropertyValues,filePath)
new File(resourceArr[i])
scopeGroup.isRegularSite() || scopeGroup.isLayoutSetPrototype()
mCurrentDate.get(Calendar.MONTH) != month
S extends T
Slog.w(TAG,"Invalid wallpaper data")
"Can not parse conflict reason: " + reasonName
onFailure(new JSONException("Unexpected type " + jsonResponse.getClass().getName()),(JSONObject)null)
obtainMessage(MSG_LAYOUT_DIRECTION,layoutDirection,0)
ev.mTimeSamples.length >= NT
lastPosition <= positionCount
console.readPassword(fmt,args)
userDNPattern.matcher(userDN)
stripFilter.skipWhiteSpace(charBuffer,stringWriter,true)
UDeclarationKt.getContainingDeclaration(parent)
!wrapRequest
ByteBuffer.allocate(mPreviewWidth * mPreviewHeight * 4)
selenium.isElementPresent("link=Control Panel")
mExitingAppTokens.get(i)
battery.addPowerChecking(64 * MjAPI.MJ,false)
mExpandedDialog != null && mExpandedParams != null
outLatch.startLatch.await(400,TimeUnit.MILLISECONDS)
ImmutableSet.of("testAutoIndexKeyDroppingWithPersistence","testReIndexingOfElements")
embeddable.getMetadataComplete()
replaces="directDispatch"
getName()
DEBUG=false
assertTrue(message.getPayload() instanceof Collection<?>)
DumpUtils.checkDumpAndUsageStatsPermission(mActivityManagerService.mContext,"dbinfo",pw)
FileType.of(".h",".hh",".hpp",".ipp",".hxx",".inc")
new byte[14]
value < maximumValue
new Fault("COULD_NOT_WRITE_XML_STREAM_CAUSED_BY",LOG,e,e.getClass().getCanonicalName(),e.getMessage())
String.format(SCOPED_AUTHORIZE_URL,config.getApiKey(),formURLEncode(config.getCallback()),formURLEncode(config.getScope()))
p != null && p.getPassMaterial() != null
LOGGER.debug("Register profile {} for organization {}",qualityProfile.getQProfileName(),organization.getKey())
charsSequence.charAt(offset)
_connectBlocking=connectBlocking
logger.trace("[{}] not acking store deletion (not a data node)",index)
written.get()
UserHandle.myUserId()
viewerPanel.layout()
contact.getAccount()
!paths.isEmpty()
selenium.isElementPresent("link=Control Panel")
GL20.glUniform2fv(location,v)
route.isBluetooth()
type.getDeclaredConstructor()
idx >= biomes.length
data != null && !RenderResources.REFERENCE_NULL.equals(data.getValue())
4 + _maxDDLCustomFieldCount * 4
Boolean shouldSendMagicLink
Build.VERSION.SDK_INT < 24
pm.setBlockUninstallForUser(packageName,uninstallBlocked,userId)
type.getDeclaredConstructor()
new NioEventLoopGroup(1)
!isValid(payloadJSONObject)
Arrays.asList("Motorola IHF1000","i.TechBlueBAND","X5 Stereo v1.3","BMW","Audi")
in.readOptionalUTF()
LOG.warn("Cannot access storage directory " + rootPath,ex)
public class ParseTest extends BaseParseTestCase {   public void test1() throws Throwable {     myFixture.testHighlighting("test1.regexp");   }   public void test2() throws Throwable {     myFixture.testHighlighting("test2.regexp");   }   public void test3() throws Throwable {     myFixture.testHighlighting("test3.regexp");   }   public void test4() throws Throwable {     myFixture.testHighlighting("test4.regexp");   } } 
a.getName()
THREADS_PER_CLIENT=4
(read=channel.read(byteBuffer)) >= 0
new TextPaint(Paint.ANTI_ALIAS_FLAG)
states.length >= 14
proratedOrderAdjustment.compareTo(BigDecimal.ZERO) != 0
mService.isDeviceOemUnlocked()
mNotificationManager.cancel(NOTIFICATION_TAG,SystemMessage.NOTE_TV_PIP)
sentenceCount >= maxDocs
Thread.sleep(1000)
selenium.isElementPresent("link=Control Panel")
ScopedProxyUnwrapper.unwrapIfNecessary(resourceRef)
constructorInvokationMarker.rollbackTo()
menu.findItem(R.id.menu_uncomplete_checklists).setVisible(false)
out.writeInt(length())
method.getDeclaringClass()
UI_TIMEOUT=5000
mSecondView.setVisibility(View.GONE)
SystemKeyspace.removeEndpoint(DatabaseDescriptor.getReplaceAddress())
selenium.isElementPresent("link=Control Panel")
count < 50
CollectionUtils.compareAsIterable(getParameters(),o.getParameters())
hits2.length()
desktopSharingButton.setPressedIcon(ImageLoader.getImage(ImageLoader.DESKTOP_BUTTON_SMALL_PRESSED))
alarmManager.setRepeating(AlarmManager.RTC_WAKEUP,calendar.getTimeInMillis(),AlarmManager.INTERVAL_DAY,reminderIntent)
checkCall(receiver)
showSnackbar(mainTextResource,shortLength,actionTextResource,listener,root,null)
config.swapChase()
DEFAULT_ALLOW_REPEAT_CALLERS=true
mgr.mergeSegments(cube,500,1500,false)
twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
mask.isColumnVectorOrScalar()
i > 0
in.readLong()
new Paint()
sep < 0 || sep > j
onDetachedFromWindows()
from >= to
Integer.parseInt(topStr)
mInstalld.createProfileSnapshot(appId,packageName,codePath)
new Paint()
callbacks.onHardwarePreDraw(canvas)
withModifiers(SynchronizationState.PLAIN)
holder.setGone(getLoadingViewId(),visible)
DiagnosticFactory3.create(ERROR,DECLARATION_NAME)
new ByteArrayOutputStream(SAMPLE_RATE * 2)
private RunningProcessList mRunningProcessList=new RunningProcessList(); 
new Paint(Paint.ANTI_ALIAS_FLAG)
LOG.warn("Memory Usage for the Broker (" + memLimit / (1024 * 1024) + " mb) is more than the maximum available for the JVM: " + jvmLimit / (1024 * 1024) + " mb - resetting to 70% of maximum available: " + (usage.getMemoryUsage().getLimit() / (1024 * 1024)) + " mb")
mImm.setInputMethodInternal(mToken,id)
GeoQueryContext.builder().setGeoPoint(geoPoints[0]).setBoost(11)
Float[]
ChannelInterceptor interceptor
appendedResourcesPath.put(key + ";" + frag.getSymbolicName(),Resource.newResource(fragUrl))
war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
Thread.sleep(1000)
LOG.debug("Creating netty output stream for block {} @ {} from client {}",blockId,address,NetworkAddressUtils.getClientHostName())
mBindingServices.isEmpty()
Throwable e
!file.exists() || !file.canRead()
id=3
mDisplayContent.mDividerControllerLocked.getWidth()
DbSegmentPublisher.class
Native.ffi_prep_cif(1,1,Structure.FFIType.get(double.class).peer,types)
nameDefinitionMultimap.keys()
softClassCache.putIfAbsent(beanClass,results)
new CrypticClue("Search the crates near a cart in Varrock.",CRATE_5107,new WorldPoint(3226,3452,0),"South east of Varrock Palace, south of the tree farming patch.")
counter > max
GuiUtils.compareDatesOnly(date,System.currentTimeMillis())
impl.getClass().getDeclaredMethod("join",InetAddress.class)
mExecutor.awaitTermination(1000,TimeUnit.MILLISECONDS)
this.sentinelMaster=master
Simple.forClass(Boolean.class)
getStep(project,stepId)
return mConversationPrefs; 
host1.getSocketAddress()
getIntent().getStringExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
selenium.click("//li[4]/span/a/span")
locale.getLocaleCode()
decoderLayerSizes == null
((getAdditionalInformation() != null) && ((database instanceof PostgresDatabase) || (database instanceof OracleDatabase))) || (database instanceof HsqlDatabase) || (database instanceof H2Database)
SamplingProfiler.newThreadGroupThreadSet(group)
pixel >>> 8
getLog().warn("register druid-driver mbean error",ex)
WIDTH=450
Thread.sleep(1000)
loaded.getLoaded().getDeclaredConstructor()
numberOfIntercept.incrementAndGet() == 2
PluginServices.getTaskService().fetchById(t,Task.NOTES,Task.ID,Task.UUID,Task.TITLE,Task.HISTORY_FETCH_DATE,Task.PUSHED_AT)
Arrays.asList("Motorola IHF1000","i.TechBlueBAND","X5 Stereo v1.3","BMW","Audi")
rolesP != null
FunctionTypesKt.isNonExtensionFunctionType(calleeType)
DEBUG=false
mStackScroller.getChildAtRawPosition(x,y)
System.out.println("JVM options:")
String message
mStackSupervisor.anyTaskForIdLocked(taskId)
VtexApis.REPLIES_URL + topicId
retVal=(x + y + constValue == x + y)
killBillClient.createExternalCharge(externalCharge,clock.getUTCToday(),true,true,createdBy,reason,comment)
public TrimFilter create(TokenStream input){   return new TrimFilter(input,updateOffsets); } 
Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
refTableName.split("\\.")[1]
ArrayNodeBaseTest<LazyHeadArrayNode>
constraintSystem.getTypeParameterDescriptors()
javaProject.getAllPackageFragmentRoots()
times + BASE_FILE_NUMBER
getPropertyAsString(IMPLEMENTATION,DEFAULT_IMPLEMENTATION)
suggestUniqueVariableName(name,place,true)
new GitCommandResult(false,exitCode,false,result.getErrorOutput(),result.getOutput()){   @Override public boolean cancelled(){     return true;   } } 
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticFields.kt")
new IOException("ExifInterface does not support saving attributes for the current input.")
methodAnnotations != null
mCallback.onInputUpdated(inputId)
addDaysAndCheckForCompletion(6,NextEvent.PAYMENT_ERROR)
opCodes[0x85]
type.getDeclaredConstructor()
threadContext.isStartNextThreadLoop()
!sourceEdgeTextData.getText().isEmpty()
removeUser != UserHandle.USER_ALL
createShrinkFadeOutFromBottomAnimation(mContentContainer,150,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
!UNKNOWN_PARAMETER_TYPE.equals(wrappedRHS) && !gt.isCompatibleWith(wrappedRHS) && !isNullConstant(rightExpression)
private SAPEntryService _sapEntryService; 
assertEquals(12,definitions.size())
WordPress.getCurrentBlog().getLocalTableBlogId()
addView(mTitleLayout)
AWAKE_INTERVAL_DEFAULT_MS=10000
Long.parseLong(args[2])
GL20.glUniform3fv(location,toFloatBuffer(v,offset,count * 3))
TEST_UTIL.waitUntilAllRegionsAssigned(tableName)
assertThat(dto.get("snapshotId")).isEqualTo(4L)
new TestItem("example name")
!isLoaded && item.isOptional() && item.getRecursiveLink() == null
isGreaterOrEqual(platformVersion,M)
element.getTextTrim()
append(FlowManager.getTableName(table))
headers.addValue("Vary")
telephony.isIdle(getOpPackageName())
transfer.getId()
SimpleHandler.getInstance().post(new Runnable(){   @Override public void run(){     guideDownloadThumb();   } } ,300)
mDisplayContent.mDividerControllerLocked.getWidth()
model == null
rteCl.readableBytes()
dest.writeInt(txPower)
mockResultSet.getInt(1)
targetType.getDeclaredConstructor()
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,false)
sharedOptsCount.containsKey(thread)
Slog.i(TAG,"Failed to build intent for " + packageName)
ClassHelper.makeWithoutCaching(type.getName())
CCMBridge.ipOfNode(1)
new GridKernalContextImpl(this,cfg,gw,ent)
deadline < now && deadline != 0
sm.getString("standardContext.startingContext",logName())
websocketComponent.setMaxThreads(20)
position + dockDividerWidth
temporaryFolder.newFolder()
createTestBlockCapsule(1533529947843L + 3000L * 6,number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
mPackageUsage.write(false)
workDir == null || workDir.length() == 0
mRilDataRadioTechnology=m.getInt("dataRadioTechnology")
logger.debug("{} {}",errorCode,message)
proxy == null
selenium.isElementPresent("link=Control Panel")
ThemeUtils.setColoredTitle(actionBar,getString(R.string.actionbar_contacts),getContext())
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
new IllegalArgumentException(JSON_BUILDER + "invalid element")
PatchedRouteInfo ipv4Default=new PatchedRouteInfo(Prefix("0.0.0.0/0"),null,"rmnet0"); 
Slog.e(TAG,message,th)
!hasNextChunk()
node.getEndLine()
-16
copy.isInternal()
LOG.debug("Creating short circuit input stream for block {} @ {}",blockId,address)
Number rate=(Number)map.get(MediaFormat.KEY_FRAME_RATE); 
new CheckPermission().of("all").against("deploy").expect(true)
new ArrayList<RowSorter.SortKey>(1)
asDoubleReg(input)
synchronized (mLock) {   mScreenOnTime=readScreenOnTimeLocked(); } 
this.configuration.getMappedStatement(id,false)
executor.execute(new EmailTask(messages))
msg.setJMSPriority(asInt(priority))
mirror.getType()
DEBUG_ALL_ACTIVITIES || true
assertEquals(2,verifier.getErrors().size())
LOG.warn(e)
Math.min(titleRight,subtitleRight)
internalViewSchema instanceof StructSchema
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
JavaSourceGroovyPackagesSecuritySuite.suite()
documented=false
UndertowLogger.REQUEST_LOGGER.tracef("Timing out channel %s due to inactivity",connection.getSourceChannel())
intervalFraction * (nextValue - prevValue)
hasVisibleChildren(group,myRealUpdateStrategy)
COMPONENT_RAM_MB=1024
Integer.parseInt(taskIdStr)
configurationPair.getValue()
messageId.getEntryLocator()
copy1DRangeFromUnchecked(0,mType.getCount(),i)
selenium.click("//li[4]/span/a/span")
USE_NOTIFICATION_LISTENER=true
new Analyzer(new FunctionRegistry(),IndexResolution.valid(test),TimeZone.getTimeZone("UTC"),null)
assertEquals(2,binder.getDisallowedFields().length)
dest.writeInt(mTxPower)
handleExportPackage()
index > widgets.length
PsiTreeUtil.getStubOrPsiParentOfType(uexpr,ScopeOwner.class)
new StringBuilder(638)
ufsPath.toString()
/**   */ private LongAdder8 cntr; 
"Error: Access with origin " + origin + " denied."
i < size
selenium.isElementPresent("link=Control Panel")
IndexReader.open(benchmark.getRunData().getDirectory())
name.equals("getSimCountryIso") || name.equals("gsm.sim.operator.iso-country")
mPipeManager.writeDocument(getContext(),mtpManager,new Identifier(0,0,1))
addView(mNotificationHeader,indexOfChild(mChildrenContainer) + 1)
requestJSONObject.optInt(Article.ARTICLE_EDITOR_TYPE)
sDefaults.putBoolean(KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOL,false)
timeout=10000
apnContext.getWaitingApns()
accountHandle.getComponentName().flattenToString()
map != null && object != null
InternalDecorator.this.isFocused()
String message
animation.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
scriptField.setInitialText("")
mService.queryDisplayStatus(getCallbackWrapper(callback))
Files.deleteIfExists(file.toPath())
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_TUNE_FUNCTION,false)
createReactive(config)
getLogger().warn("Unknown classloader [ITE]: " + e.getMessage())
findCodecForFormat(true,format)
mTestStream.getFlushedBytes()
contentType != null && charset == null
dockedBounds.bottom + dockDividerWidth
this.messageService.monoPreAuthorizeBeanFindById(1L).subscriberContext(withUser)
uiAclHandler.permit(reqContext,op,topoConf)
model.setSortByStatus(true)
!okToShowLocked(r) || (mService.isSleepingOrShuttingDown() && r.voiceSession == null)
context == null || context == EGL_NO_CONTEXT
INSTANCE.rand(shape,Nd4j.getRandom())
contentType.startsWith(PresContentClient.CONTENT_TYPE)
irrCubeMap.getImage()
Preconditions.checkNotNull(path,"path")
mScreenBrightnessDarkConfig > screenBrightnessSettingMinimum
i < size
ESClientYamlSuiteTestCase.createParameters()
new Note(null,noteText,comment,new Date(),NoteType.TEXT)
panel.setBorder(new EmptyBorder(3,0,2,0))
new NullPointerException("Emitter got a null throwable. Null values are generally not allowed in 2.x operators and sources.")
_logloss / _wsum
mUserManager.hasUserRestriction(UserManager.DISALLOW_PRINTING,UserHandle.of(userId))
getServiceForUserLocked(userId)
ConcurrentHashMap<String,Session>
private Adapter mListAdapter; 
Integer.parseInt(nextArgRequired())
GenericUDFEnforceConstraint.class
DiagnosticFactory0<KtElement>
loaded.getLoaded().getDeclaredConstructor()
@Override public T dependsOn(Module module){   backingModule.dependsOn(module);   return t(); } 
builder.breakOp(" ")
telephony.getDataNetworkTypeForSubscriber(subId,getOpPackageName())
sizeNeeded > items.length
err == 0
listIntent.toArray(new Intent[0])
Environment.getOemDirectory()
findAnnotationAttributes(element,annotationType.getName())
public KeyValueBinding getValueBinding(){   return attributeBinding; } 
logger.debug("Cannot play TuneIn station {} ({})",stationId,e.getMessage())
position.getServerTime()
DEFAULT_DATA_SIZE_PER_COLUMN=50
new EmbeddedDatabaseRule()
overrideDeploymentConfig || (loginConfig == null)
new MediaBrowser.MediaItem(bob.build(),MediaBrowser.MediaItem.FLAG_BROWSABLE)
selenium.isElementPresent("link=Control Panel")
LocalBroadcastManager.getInstance(getContext()).sendBroadcastSync(intent)
((BaseActivity)getActivity()).injectJava(UserAccountsController.class).isTeamAccount()
refreshableViewWrapper.addView(newEmptyView)
dpToPx(8f)
block.useSourceInfoIfMissingFromForTree(exprRoot)
getUserBadgedIcon(dr,new UserHandle(mContext.getUserId()))
ClientSession.getTLSPolicy() == Connection.TLSPolicy.required
containerLog.error(sm.getString("dataSourceRealm.getPassword.exception",username),e)
mContainerActivity.getStorageManager() != null && getFile() != null
log.info("Not found for {}: {}",uriInfo.getRequestUri(),error)
(excluded == null) && (line.length() > 80) && !line.startsWith("import ")&& !line.startsWith("package ")&& !line.matches("\\s*\\*.*")
authentication.has(USERS)
log.info("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
ctx.sendUpstream(e)
InputMethodManager.getInstance()
mService.queryDisplayStatus(getCallbackWrapper(callback))
println_native(logId,ERROR,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_SUBMODULE))
range.containsOffset(offset)
mSyncStatus.valueAt(i)
this.counterpart.split("/",2)
Throwable e
file.flushAndForce()
Math.max(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
metadata.getFaces()
List<JetType>
constraintCache.getAllObjects(monitor,schema)
getNonCompilablePath("InputPackageDeclarationDiffDirectory.java")
ColorProperties.getColor("sliderGradientLight")
text.setCompoundDrawablesRelativeWithIntrinsicBounds(item.icon,null,null,null)
Exception t
libsDir() != null && libsDir().exists()
View repost_flag; 
this.logger.isDebugEnabled()
strongClassCache.putIfAbsent(beanClass,results)
"Interrupted when attempting to close writer for end point: " + eldest
contact.getWorldManifold()
MockReset.after()
log.debug("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
telephony.getCdmaEriIconModeForSubscriber(subId,getOpPackageName())
endElement == null || !endElement.isValid()
getEffectiveHstsEnforced()
e.toString()
session == null
config.getName()
new ClassPathResource(location,ResourceUtils.class.getClassLoader())
-45
parameter.name()
intBuffer.clear()
result=90
null == user || UserExt.USER_STATUS_C_VALID != user.optInt(UserExt.USER_STATUS)
LOG.error(getName() + " caught: ",e)
mPhone.getContext().enforceCallingOrSelfPermission("android.permission.SEND_SMS","Sending SMS message")
computeGraph(treeToPrint,_effective_n_classes)
psiFileFactory.createFileFromText("dummy.html",HTMLLanguage.INSTANCE,templateString,false,true)
from >= to
Session.getInstance(mailServerProperties,null)
new Runtime(mContext)
postAgg.getName().equalsIgnoreCase(topNMetricName)
assertEquals(row.getField(0),2L)
ctx.getMapViewTrackingUtilities()
stmt.execute(sql)
rightResult.cardinality()
MAX_IMAGE_DIMEN=2048
mDark && mPulsing ? 0.8f : 1
userInfo == null || !userInfo.canHaveProfile()
Build.VERSION.SDK_INT >= 21
new GZIPOutputStream(outputStream)
manager.getUserDictionary().getEditableWords()
interceptor.doIntercept(invocation)
states.length >= 3
nativeSetFlags(mNativeObject,sc.mNativeObject,0,SURFACE_OPAQUE)
Throwable e
logger.trace("attempting to login")
resultSet.getInt(index)
Slog.w(TAG_WM,"Leaked dim user=" + user.toShortString() + " state="+ state)
this.stringMatcherCache.size() >= CACHE_TURNOFF_THRESHOLD
new ChunkedUploadRemoteFileOperation(mContext,mFile.getStoragePath(),mFile.getRemotePath(),mFile.getMimetype(),mFile.getEtagInConflict())
mVibratorService.vibrate(null,2000,new Binder())
settings.setTextSize(WebSettings.TextSize.LARGER)
edge.setDirection(type)
status <= started
memoryReservation.addAndGet(bytes)
getGenericParameterType(genericType,1)
Integer.parseInt(nid[0],16)
/**   * This is the primary connection pool class that provides the basic pooling behavior for HikariCP.  * @author Brett Wooldridge  */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener {   protected final Logger LOGGER=LoggerFactory.getLogger(getClass());   private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L);   protected static final int POOL_RUNNING=0;   protected static final int POOL_SUSPENDED=1;   protected static final int POOL_SHUTDOWN=2;   public final String catalog;   public final boolean isReadOnly;   public final boolean isAutoCommit;   public int transactionIsolation;   protected final PoolUtilities poolUtils;   protected final HikariConfig configuration;   protected final AtomicInteger totalConnections;   protected final ConcurrentBag<PoolBagEntry> connectionBag;   protected final ThreadPoolExecutor addConnectionExecutor;   protected final ThreadPoolExecutor closeConnectionExecutor;   protected final ScheduledThreadPoolExecutor houseKeepingExecutorService;   protected final boolean isUseJdbc4Validation;   protected final boolean isIsolateInternalQueries;   protected volatile int poolState;   protected volatile long connectionTimeout;   protected volatile long validationTimeout;   private final LeakTask leakTask;   private final DataSource dataSource;   private final GlobalPoolLock suspendResumeLock;   private final IConnectionCustomizer connectionCustomizer;   private final AtomicReference<Throwable> lastConnectionFailure;   private final String username;   private final String password;   private volatile MetricsTracker metricsTracker;   private volatile boolean isRecordMetrics;   /**   * Construct a HikariPool with the specified configuration.  * @param configuration a HikariConfig instance  */   public BaseHikariPool(  HikariConfig configuration){     this(configuration,configuration.getUsername(),configuration.getPassword());   }   /**   * Construct a HikariPool with the specified configuration.  We cache lots of configuration items in class-local final members for speed.  * @param configuration a HikariConfig instance  * @param username authentication username  * @param password authentication password  */   public BaseHikariPool(  HikariConfig configuration,  String username,  String password){     this.username=username;     this.password=password;     this.configuration=configuration;     this.poolUtils=new PoolUtilities(configuration);     this.connectionBag=createConcurrentBag(this);     this.totalConnections=new AtomicInteger();     this.connectionTimeout=configuration.getConnectionTimeout();     this.validationTimeout=configuration.getValidationTimeout();     this.lastConnectionFailure=new AtomicReference<Throwable>();     this.isReadOnly=configuration.isReadOnly();     this.isAutoCommit=configuration.isAutoCommit();     this.suspendResumeLock=configuration.isAllowPoolSuspension() ? new GlobalPoolLock(true) : GlobalPoolLock.FAUX_LOCK;     this.catalog=configuration.getCatalog();     this.connectionCustomizer=initializeCustomizer();     this.transactionIsolation=getTransactionIsolation(configuration.getTransactionIsolation());     this.isIsolateInternalQueries=configuration.isIsolateInternalQueries();     this.isUseJdbc4Validation=configuration.getConnectionTestQuery() == null;     setMetricRegistry(configuration.getMetricRegistry());     setHealthCheckRegistry(configuration.getHealthCheckRegistry());     this.dataSource=poolUtils.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getDriverClassName(),configuration.getJdbcUrl(),username,password);     this.addConnectionExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),"HikariCP connection filler (pool " + configuration.getPoolName() + ")",configuration.getThreadFactory(),new ThreadPoolExecutor.DiscardPolicy());     this.closeConnectionExecutor=createThreadPoolExecutor(4,"HikariCP connection closer (pool " + configuration.getPoolName() + ")",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());     long delayPeriod=Long.getLong("com.zaxxer.hikari.housekeeping.periodMs",TimeUnit.SECONDS.toMillis(30L));     ThreadFactory threadFactory=configuration.getThreadFactory() != null ? configuration.getThreadFactory() : new DefaultThreadFactory("Hikari Housekeeping Timer (pool " + configuration.getPoolName() + ")",true);     this.houseKeepingExecutorService=new ScheduledThreadPoolExecutor(1,threadFactory,new ThreadPoolExecutor.DiscardPolicy());     this.houseKeepingExecutorService.scheduleAtFixedRate(getHouseKeeper(),delayPeriod,delayPeriod,TimeUnit.MILLISECONDS);     this.houseKeepingExecutorService.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);     this.leakTask=(configuration.getLeakDetectionThreshold() == 0) ? LeakTask.NO_LEAK : new LeakTask(configuration.getLeakDetectionThreshold(),houseKeepingExecutorService);     setRemoveOnCancelPolicy(houseKeepingExecutorService);     poolUtils.setLoginTimeout(dataSource,connectionTimeout);     registerMBeans(configuration,this);     initializeConnections();   }   /**   * Get a connection from the pool, or timeout after connectionTimeout milliseconds.  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection() throws SQLException {     return getConnection(connectionTimeout);   }   /**   * Get a connection from the pool, or timeout after the specified number of milliseconds.  * @param hardTimeout the maximum time to wait for a connection from the pool  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection(  final long hardTimeout) throws SQLException {     suspendResumeLock.acquire();     long timeout=hardTimeout;     final long start=System.currentTimeMillis();     final MetricsContext metricsContext=(isRecordMetrics ? metricsTracker.recordConnectionRequest(start) : MetricsTracker.NO_CONTEXT);     try {       do {         final PoolBagEntry bagEntry=connectionBag.borrow(timeout,TimeUnit.MILLISECONDS);         if (bagEntry == null) {           break;         }         final long now=System.currentTimeMillis();         if (bagEntry.evicted || (now - bagEntry.lastAccess > ALIVE_BYPASS_WINDOW && !isConnectionAlive(bagEntry.connection))) {           closeConnection(bagEntry,"(connection evicted or dead)");           timeout=hardTimeout - elapsedTimeMs(start);         }  else {           metricsContext.setConnectionLastOpen(bagEntry,now);           metricsContext.stop();           return ProxyFactory.getProxyConnection((HikariPool)this,bagEntry,leakTask.start(bagEntry));         }       }  while (timeout > 0L);     }  catch (    InterruptedException e) {       throw new SQLException("Interrupted during connection acquisition",e);     }  finally {       suspendResumeLock.release();     }     logPoolState("Timeout failure ");     throw new SQLTimeoutException(String.format("Timeout after %dms of waiting for a connection.",elapsedTimeMs(start)),lastConnectionFailure.getAndSet(null));   }   /**   * Release a connection back to the pool, or permanently close it if it is broken.  * @param bagEntry the PoolBagEntry to release back to the pool  */   public final void releaseConnection(  final PoolBagEntry bagEntry){     metricsTracker.recordConnectionUsage(bagEntry);     if (bagEntry.evicted) {       LOGGER.debug("Connection returned to pool {} is broken or evicted.  Closing connection.",configuration.getPoolName());       closeConnection(bagEntry,"(connection broken or evicted)");     }  else {       connectionBag.requite(bagEntry);     }   }   /**   * Shutdown the pool, closing all idle connections and aborting or closing active connections.  * @throws InterruptedException thrown if the thread is interrupted during shutdown  */   public final void shutdown() throws InterruptedException {     if (poolState != POOL_SHUTDOWN) {       poolState=POOL_SHUTDOWN;       LOGGER.info("HikariCP pool {} is shutting down.",configuration.getPoolName());       logPoolState("Before shutdown ");       connectionBag.close();       softEvictConnections();       houseKeepingExecutorService.shutdown();       addConnectionExecutor.shutdownNow();       houseKeepingExecutorService.awaitTermination(5L,TimeUnit.SECONDS);       addConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       final ExecutorService assassinExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),"HikariCP connection assassin",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());       final long start=System.currentTimeMillis();       do {         softEvictConnections();         abortActiveConnections(assassinExecutor);       }  while (getTotalConnections() > 0 && elapsedTimeMs(start) < TimeUnit.SECONDS.toMillis(5));       assassinExecutor.shutdown();       assassinExecutor.awaitTermination(5L,TimeUnit.SECONDS);       closeConnectionExecutor.shutdown();       closeConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       logPoolState("After shutdown ");       unregisterMBeans(configuration,this);       metricsTracker.close();     }   }   /**   * Evict a connection from the pool.  * @param proxyConnection the connection to evict  */   public final void evictConnection(  IHikariConnectionProxy proxyConnection){     closeConnection(proxyConnection.getPoolBagEntry(),"(connection evicted by user)");   }   /**   * Get the wrapped DataSource.  * @return the wrapped DataSource  */   public final DataSource getDataSource(){     return dataSource;   }   /**   * Get the pool configuration object.  * @return the {@link HikariConfig} for this pool  */   public final HikariConfig getConfiguration(){     return configuration;   }   @Override public String toString(){     return configuration.getPoolName();   }   /**   * {@inheritDoc}   */   @Override public final int getActiveConnections(){     return connectionBag.getCount(STATE_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getIdleConnections(){     return connectionBag.getCount(STATE_NOT_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getTotalConnections(){     return connectionBag.size() - connectionBag.getCount(STATE_REMOVED);   }   /**   * {@inheritDoc}   */   @Override public final int getThreadsAwaitingConnection(){     return connectionBag.getPendingQueue();   }   /**   * {@inheritDoc}   */   @Override public final void suspendPool(){     if (suspendResumeLock == GlobalPoolLock.FAUX_LOCK) {       throw new IllegalStateException("Pool " + configuration.getPoolName() + " is not suspendable");     }  else     if (poolState != POOL_SUSPENDED) {       suspendResumeLock.suspend();       poolState=POOL_SUSPENDED;     }   }   /**   * {@inheritDoc}   */   @Override public final void resumePool(){     if (poolState == POOL_SUSPENDED) {       poolState=POOL_RUNNING;       addBagItem();       suspendResumeLock.resume();     }   }   public void setMetricRegistry(  Object metricRegistry){     this.isRecordMetrics=metricRegistry != null;     if (isRecordMetrics) {       this.metricsTracker=new CodaHaleMetricsTracker(this,(MetricRegistry)metricRegistry);     }  else {       this.metricsTracker=new MetricsTracker(this);     }   }   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       CodahaleHealthChecker.registerHealthChecks(this,(HealthCheckRegistry)healthCheckRegistry);     }   }   /**   * {@inheritDoc}   */   @Override public Future<Boolean> addBagItem(){     FutureTask<Boolean> future=new FutureTask<Boolean>(new Runnable(){       public void run(){         long sleepBackoff=200L;         final int minimumIdle=configuration.getMinimumIdle();         final int maxPoolSize=configuration.getMaximumPoolSize();         while (poolState == POOL_RUNNING && totalConnections.get() < maxPoolSize && getIdleConnections() <= minimumIdle && !addConnection()) {           quietlySleep(sleepBackoff);           sleepBackoff=Math.min(connectionTimeout / 2,(long)((double)sleepBackoff * 1.5));         }       }     } ,true);     addConnectionExecutor.execute(future);     return future;   }   /**   * Create and add a single connection to the pool.  */   protected final boolean addConnection(){     if (totalConnections.incrementAndGet() <= configuration.getMaximumPoolSize()) {       Connection connection=null;       try {         connection=(username == null && password == null) ? dataSource.getConnection() : dataSource.getConnection(username,password);         if (isUseJdbc4Validation && !poolUtils.isJdbc4ValidationSupported(connection)) {           throw new SQLException("JDBC4 Connection.isValid() method not supported, connection test query must be configured");         }         final int originalTimeout=poolUtils.getAndSetNetworkTimeout(connection,connectionTimeout);         transactionIsolation=(transactionIsolation < 0 ? connection.getTransactionIsolation() : transactionIsolation);         poolUtils.setupConnection(connection,isAutoCommit,isReadOnly,transactionIsolation,catalog);         connectionCustomizer.customize(connection);         poolUtils.executeSql(connection,configuration.getConnectionInitSql(),isAutoCommit);         poolUtils.setNetworkTimeout(connection,originalTimeout);         connectionBag.add(new PoolBagEntry(connection,this));         lastConnectionFailure.set(null);         return true;       }  catch (      Exception e) {         lastConnectionFailure.set(e);         if (poolState == POOL_RUNNING) {           LOGGER.debug("Connection attempt to database {} failed: {}",configuration.getPoolName(),e.getMessage(),e);         }         poolUtils.quietlyCloseConnection(connection,"(exception during connection creation)");       }     }     totalConnections.decrementAndGet();     return false;   }   /**   * Fill pool up from current idle connections (as they are perceived at the point of execution) to minimumIdle connections.  */   protected void fillPool(){     final int connectionsToAdd=configuration.getMinimumIdle() - getIdleConnections();     for (int i=0; i < connectionsToAdd; i++) {       addBagItem();     }     if (connectionsToAdd > 0 && LOGGER.isDebugEnabled()) {       addConnectionExecutor.execute(new Runnable(){         public void run(){           logPoolState("After fill ");         }       } );     }   }   /**   * Permanently close the real (underlying) connection (eat any exception).  * @param connectionProxy the connection to actually close  */   protected abstract void closeConnection(  final PoolBagEntry bagEntry,  final String closureReason);   /**   * Check whether the connection is alive or not.  * @param connection the connection to test  * @return true if the connection is alive, false if it is not alive or we timed out  */   protected abstract boolean isConnectionAlive(  final Connection connection);   /**   * Attempt to abort() active connections on Java7+, or close() them on Java6.  * @param assassinExecutor   * @throws InterruptedException   */   protected abstract void abortActiveConnections(  final ExecutorService assassinExecutor) throws InterruptedException ;   /**   * Create the JVM version-specific ConcurrentBag instance used by the pool.  * @param listener the IBagStateListener instance  * @return a ConcurrentBag instance  */   protected abstract ConcurrentBag<PoolBagEntry> createConcurrentBag(  IBagStateListener listener);   /**   * Create the JVM version-specific Housekeeping runnable instance used by the pool.  * @return the HouseKeeper instance  */   protected abstract Runnable getHouseKeeper();   /**   * Fill the pool up to the minimum size.  */   private void initializeConnections(){     if (configuration.isInitializationFailFast()) {       try {         try {           if (!addConnection()) {             shutdown();             throw new PoolInitializationException(lastConnectionFailure.getAndSet(null));           }           ConnectionProxy connection=(ConnectionProxy)getConnection();           connection.getPoolBagEntry().evicted=(configuration.getMinimumIdle() == 0);           connection.close();         }  catch (        SQLException e) {           shutdown();           throw new PoolInitializationException(e);         }       }  catch (      InterruptedException ie) {         throw new PoolInitializationException(ie);       }     }     fillPool();   }   /**   * Construct the user's connection customizer, if specified.  * @return an IConnectionCustomizer instance  */   @SuppressWarnings("deprecation") private IConnectionCustomizer initializeCustomizer(){     if (configuration.getConnectionCustomizerClassName() != null) {       return createInstance(configuration.getConnectionCustomizerClassName(),IConnectionCustomizer.class);     }     return configuration.getConnectionCustomizer();   }   public final void logPoolState(  String... prefix){     if (LOGGER.isDebugEnabled()) {       LOGGER.debug("{}pool stats {} (total={}, inUse={}, avail={}, waiting={})",(prefix.length > 0 ? prefix[0] : ""),configuration.getPoolName(),getTotalConnections(),getActiveConnections(),getIdleConnections(),getThreadsAwaitingConnection());     }   } } 
new JUnitDescriptionGenerator(spec)
total=2000
builder.and(inRestrictions.toArray(new Predicate[inRestrictions.size()]))
TEST_UTIL.getAdmin()
return true; 
intervalFraction * (nextValue - prevValue)
Flux.fromStream(viewResolverStream).concatMap(viewResolver -> viewResolver.resolveViewName(name(),locale)).next().switchIfEmpty(Mono.error(new IllegalArgumentException("Could not resolve view with name '" + name() + "'")))
VibrationEffect.get(VibrationEffect.EFFECT_TICK,false)
Optional.ofNullable(realmName)
new CifarDataSetIterator(batchSize,numSamples,new int[]{height,width,channels},preProcessCifar,true)
items[31]
mVibratorService.vibratePattern(null,new long[]{0},0,new Binder())
request.getPrincipal()
Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
targetDatabase.setObjectQuotingStrategy(ObjectQuotingStrategy.QUOTE_ALL_OBJECTS)
selenium.isElementPresent("link=Control Panel")
LOGGER.warn("Could not execute markEntries",ex)
groupType == null || device.isGatewayExtras()
getLsNoAclResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER)
classNameLocalService.getClassNameId(className)
cubeSeg.getConfig().getQueryCoprocessorTimeoutSeconds() * 1000L
event.getTime() > currentPlayTime || event.getTime() == DURATION_INFINITE
LOGGER.debug("text : {}",text)
read.location().getValueKind()
mSettingsButton != null && !mHasSettingsPanel
HashBasedTable<String,String,byte[]>
MAX_DIMEN_FOR_ROUNDING=1920
bigFirstTokenBalance.multiply(bigTokenQuant).divide(bigSecondTokenBalance).longValueExact()
expandableView.getIntrinsicHeight()
times(1)
selenium.click("//li[4]/span/a/span")
logger.trace("Mapped {} to {}",t,e.getValue())
xCapClient.disconnect()
AtmosphereResourceImpl.class.cast(resource)
new InputStreamReader(localStream,StandardCharsets.UTF_8)
new DashboardServiceImpl(mongoRule.getMongoConnection(),dashboardWidgetCreator)
"com.android.browser".equals(browserPackageName) || "com.android.chrome".equals(browserPackageName)
new IllegalStateException(msg.getMessage())
log.warn(sm.getString("contextConfig.role.auth",roles[j]))
pending.get()
selenium.isElementPresent("link=Control Panel")
myListeners.add(0,listener)
items.size() == 1 && (filterString == null || filterString.isEmpty())
readBuffer.position() == 0
assertEquals(48,(long)stats.getServerCache().getHostFor("dns:").getSubstats().get(CrawledBytesHistotable.WARC_NOVEL_CONTENT_BYTES))
activity == null || activity.isFinishing()
myFixture.checkHighlighting(true,false,true)
triggerProto.getAfterEndOfWindow()
super.getHibernateTemplate().execute(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Criteria crit=session.createCriteria(clazz);     crit.add(Expression.allEq(queryMap));     List results=crit.list();     if (results.size() > 0)     return results.get(0);     return null;   } } )
myWindow.getManager().openFileImpl3(myWindow,composite.getFile(),false,null)
new Handler().postDelayed(new Runnable(){   @Override public void run(){     showDonationDialog();   } } ,300)
gran.next(input)
ClassHelper.make(SoftReference.class,false)
popupWindow.setContentWidth(menuWidth)
selenium.click("//li[4]/span/a/span")
logger.fine("transport is open - connecting")
range.getTo()
setIntegerPart(String.valueOf(integerPart))
return true; 
"Cannot find hibernate configuration file in CLASSPATH: " + HIBERNATE_CFG
displayContent.getDockedStackVisibleForUserLocked()
actor.addListener(listener)
String.format("Unable to resolve drawable \"%1$s\" in attribute \"%2$s\"",stringValue,mNames[index])
uri.append(AMPERSAND)
public Builder setSSLEngineFactory(SSLEngineFactory sslEngineFactory){   configBuilder.setSSLEngineFactory(sslEngineFactory);   return this; } 
LOG.debug("Looking for service: " + service + ". Current token is "+ token)
@Override public Number aggregate(Number mergedResult,int docId,Block[] block){   if (mergedResult == null) {     return new MutableLongValue(1L);   }  else {     mergedResult.addToValue(1L);     return mergedResult;   } } 
_TestUtil.nextInt(random(),11,256)
result.getPlatformKind()
doTest(1)
createLightFile("Test.java","class Test extends Type {\n}")
new IndexWriter(d,new StandardAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
content.contains(expected)
logger.info("Starting Jetty Azkaban Executor...")
JDBCUtils.safeGetStringTrimmed(resultSet,"ROLENAME")
rhs.getScore()
synchronized (this) {   classCache.remove(name); } 
FullScreenOverdrawActivity.class
mAdapter == null || !mIsAttached
FastMath.min(origin,num.doubleValue())
new SpannedString(first,true)
testLogger.info("[v] Sync complete! The best block: " + bestBlock.getShortDescr())
parent != mHostView && parent.getParent() != null && parent.mAttachInfo != null
comp.getCollectorItems().isEmpty()
caretPos.line == 0
/**   * Returns carrier name of the current subscription. <p>Carrier name is a user-facing name of carrier id  {@link #getSubscriptionCarrierId()}, usually the brand name of the subsidiary (e.g. T-Mobile). Each carrier could configure multiple  {@link #getSimOperatorName() SPN} but should have a single carrier name.Carrier name is not a canonical identity, use  {@link #getSubscriptionCarrierId()} instead.<p>The returned carrier name is unlocalized.  * @return Carrier name of the current subscription. Return {@code null} if the subscription isunavailable or the carrier cannot be identified.  * @throws IllegalStateException if telephony service is unavailable.  */ public CharSequence getAndroidCarrierNameForSubscription(){   try {     ITelephony service=getITelephony();     return service.getSubscriptionCarrierName(getSubId());   }  catch (  RemoteException ex) {     ex.rethrowAsRuntimeException();   } catch (  NullPointerException ex) {     throw new IllegalStateException("Telephony service unavailable");   }   return null; } 
!afterSymbol && read == '/'
BUTTON_QUIESCENT_ALPHA=0.70f
new ImmutableInstruction3rc(opcode,instruction.getStartRegister(),instruction.getRegisterCount(),resolvedMethod)
/**   * Returns the private data provider registered to the specified XML element name and namespace. For example, if a provider was registered to the element name "prefs" and the namespace "http://www.xmppclient.com/prefs", then the following packet would trigger the provider: <pre> &lt;iq type='result' to='joe@example.com' from='mary@example.com' id='time_1'&gt; &lt;query xmlns='jabber:iq:private'&gt; &lt;prefs xmlns='http://www.xmppclient.com/prefs'&gt; &lt;value1&gt;ABC&lt;/value1&gt; &lt;value2&gt;XYZ&lt;/value2&gt; &lt;/prefs&gt; &lt;/query&gt; &lt;/iq&gt;</pre> <p>Note: this method is generally only called by the internal Smack classes.  * @param elementName the XML element name.  * @param namespace the XML namespace.  * @return the PrivateData provider.  */ public static PrivateDataProvider getPrivateDataProvider(String elementName,String namespace){   String key=getProviderKey(elementName,namespace);   return (PrivateData)privateDataProviders.get(key); } 
projectTemplatesArgs.getName()
mPowerRequest.policy == DisplayPowerRequest.POLICY_DIM && !mAllowAutoBrightnessWhileDozingConfig
ROOT_LOGGER.errorContextModuleNotFound(consoleSlot == null ? "main" : consoleSlot)
mTfs.mkdirs(path,true)
INDEX_VERSION=18
curArticle.getId()
SystemProperties.getBoolean("persist.quickstep.scrub.enabled",true)
workDir == null || workDir.length() == 0
new ByteBuddy().subclass(Object.class).method(named("toString")).intercept(FixedValue.value(42).withAssigner(new PrimitiveTypeAwareAssigner(ToStringAssigner.INSTANCE),Assigner.Typing.STATIC)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
EnumSet.of(BarcodeFormat.CODE_39,BarcodeFormat.CODE_93,BarcodeFormat.CODE_128,BarcodeFormat.ITF,BarcodeFormat.CODABAR)
private Long measureId; 
LOG.warn("Promotion of block " + blockId + " failed.")
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_SAVE_MID,true)
ids2.size()
new BuilderRemoteViews(mBuilder.mContext.getApplicationInfo(),R.layout.notification_material_media_action)
Response.ok(null,MediaType.TEXT_PLAIN)
ImmutableMap.of(storeName,mutations)
LeakHunter.checkLeak(usageView,PsiFileImpl.class,PsiFileImpl::isPhysical)
generateFluentSetters()
selenium.isElementPresent("link=Control Panel")
new OptionValue<>(20)
LOG.warn("Syslog message is missing date or date could not be parsed. (Possibly set {} to true) " + "Not further handling. Message was: {}",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))
MimeTypeUtil.isImage(mFile)
Throwable e
final SimulatedDpad mSimulatedDpad; 
target.getDestinationLinkAddress()
deleteAction.delete(destination)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_JUMP_TO,true)
new SegmentReader(infos.info(i),newReaders[i].core)
sMenuHeight=831
state.isAlive()
new AlertDialog.Builder(context,AlertDialog.THEME_TRADITIONAL)
assertEquals(3L,countDownLatch.getCount())
native_get_videoeditor_export_level(vidCodec)
ImmutableSet.of("~key","~value","~id","~nid","~label","~adjacent","~timestamp","~ttl","~visibility","key","vertex","edge","element","property","label","~T$VertexExists","~T$SchemaName","~T$SchemaDefinitionProperty","~T$SchemaCategory","~T$SchemaDefinitionDescription","~T$SchemaUpdateTimestamp","~T$SchemaRelated","~T$VertexLabel")
mGnssCallback != null
mRepeat > 0
info.getDeviceSvnUsingSubId(subId[0],mContext.getOpPackageName())
globalScheme.getAttributes(DiffColors.DIFF_DELETED).getErrorStripeColor()
DirectoryReader.open(iw)
mGnssCallback != null
selenium.isElementPresent("link=Control Panel")
telephony.getCdmaEriTextForSubscriber(subId,getOpPackageName())
file.getName().getBaseName()
Math.max(dgg / gg,0.0)
smallIcon != null && smallIcon.getType() == Icon.TYPE_RESOURCE
RuleChain.outerRule(suppressOutput)
hStack.getScrollWidth() + 10
members.size() > 2
GlobalSearchScope.allScope(project)
public LineItem mapLine(FieldSet fieldSet,int lineNum){   LineItem item=new LineItem();   item.setItemId(fieldSet.readLong(ITEM_ID_COLUMN));   item.setPrice(fieldSet.readBigDecimal(PRICE_COLUMN));   item.setDiscountPerc(fieldSet.readBigDecimal(DISCOUNT_PERC_COLUMN));   item.setDiscountAmount(fieldSet.readBigDecimal(DISCOUNT_AMOUNT_COLUMN));   item.setShippingPrice(fieldSet.readBigDecimal(SHIPPING_PRICE_COLUMN));   item.setHandlingPrice(fieldSet.readBigDecimal(HANDLING_PRICE_COLUMN));   item.setQuantity(fieldSet.readInt(QUANTITY_COLUMN));   item.setTotalPrice(fieldSet.readBigDecimal(TOTAL_PRICE_COLUMN));   return item; } 
new int[8573]
responseFilters != null
world.setBlockState(pos,state,3)
mOneShot=false
sep < 0 || sep > j
invoke(compile("testL2I"),12L)
0.25f * METERS_IN_ONE_MILE
infos[2]
DBFactoryUtil.setDB(DB.TYPE_HYPERSONIC,null)
syncOperation.delay <= 0
last.getContext()
input.length() >= 4
mAlarmManager.setExact(AlarmManager.RTC,timestampMs,mAnomalyAlarmIntent)
Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.SYSTEM_NAVIGATION_KEYS_ENABLED,1)
currentCondition.toString().trim().equals(condition.trim())
mInterpolator == null || mNativePtr == null
SDK_INT >= JELLY_BEAN_MR2
DiagnosticType.error("JSC_REDECLARED_VARIABLE","Redeclared variable: {0}")
MessageBodyReader<DummyObject>
PREVIEW_FRAME_TIMEOUT=1000
assertThat(System.currentTimeMillis() - start).isBetween(950L,1100L)
rawCache.withExpiryPolicy(new InteropExpiryPolicy(create,update,access))
Log_OC.d(TAG,"onResume() start")
required + "pt"
type.getDeclaredConstructor()
mUiHandler.postDelayed(pae,timeout)
mValues[8]
FileUtil.loadFileText(ioFile,"UTF-8")
deadline < now && deadline != 0
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
FitNesseRunner.initContext(new File(ContextConfigurator.DEFAULT_CONFIG_FILE),fitNesseRootPath,ContextConfigurator.DEFAULT_ROOT,port)
MAX_PERCENT_DIFFERENCE=0.3
hasColumn("MicroblogsEntry","receiverMicroblogsEntryId")
DataBufferUtils.read(is,this.bufferFactory,3)
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
e1 == null || e2 == null || Math.abs(e1.getY() - e2.getY()) > SWIPE_MAX_OFF_PATH
logger.debug("Action Invalid Value Format Exception {}",ex.getMessage())
alertDialogBuilder.setPositiveButton(resources.getString(R.string.title_allow),new DialogInterface.OnClickListener(){   @Override public void onClick(  DialogInterface dialog,  int which){     result.restricted=false;     if (!cbWhitelist.isChecked() && !cbWhitelistExtra.isChecked()) {       mSelectCategory=cbCategory.isChecked();       mSelectOnce=cbOnce.isChecked();     }     if (cbWhitelist.isChecked())     onDemandWhitelist(restriction,null,result,hook);  else     if (cbWhitelistExtra.isChecked())     onDemandWhitelist(restriction,getXExtra(restriction,hook),result,hook);  else     if (cbOnce.isChecked())     onDemandOnce(restriction,result);  else     onDemandChoice(restriction,cbCategory.isChecked(),false);     latch.countDown();   } } )
computeAntiJoin(inputStatistics,inputStatistics,unknown,u)
String.format(res.getString(R.string.error__upload__local_file_not_copied),((UploadFileOperation)operation).getFileName(),res.getString(R.string.app_name))
Settings.Global.getInt(getContext().getContentResolver(),Settings.Global.NETWORK_WATCHLIST_ENABLED,1)
mInjector.getUserManager().removeUserEvenWhenDisallowed(userId)
new BranchedDataException("Unable to perform a mandatory sanity check due to an IO error.",e)
countNewlines(headerFragment) + 1
scoreobjective1 != null
path.toString()
BackupManagerServiceInterface svc=mService; 
GenericConversionService conversionService=new GenericConversionService(); 
-33.86543615612047
new AffineTransform(mTextScaleX,mTextSkewX,0,1,0,0)
return mChangingAppearingDelay; 
@Nullable
subCursor.getString(COLUMN_ATTENDEE_ID_NAMESPACE)
above
input.size(0)
mObsoleteAgents.valueAt(i)
((PyFunction)def).getParameterList().acceptChildren(new PyElementVisitor(){   @Override public void visitPyParameter(  PyParameter par){     PyNamedParameter n_param=par.getAsNamed();     assert n_param != null;     if (!n_param.isKeywordContainer() && !n_param.isPositionalContainer()) {       LookupItem item=(LookupItem)factory.createLookupElement(n_param.getName() + "=");       item.setIcon(n_param.getIcon(0));       ret.add(item);     }   } } )
serialVersionUID=1425037792
telephony.isRadioOn(getOpPackageName())
minutes * 60 * 1000l
this.decoder.decode(message.getBody(),elementType,contentType,hints).onErrorMap(this::mapError)
service.getCharacteristic(charUuid.getUuid(),charInstId)
selenium.isElementPresent("link=Control Panel")
false || DEBUG_WALLPAPER
file == null || file instanceof PsiCompiledElement
List<UsageInfo>
values == null || values.length == 0
formatter.format("%s",toString(Verbosity.Long))
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",newNetwork.name(),nc,newNetwork.networkCapabilities)
showTooltip == null || showTooltip.targetActor == null
epsi(otherArr)
conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
deopt2.action()
getHttpUrl(name,httpPort)
mJobs.valueAt(i)
AvatarManager.getInstance().getUserAvatar(user + "/" + resource)
intent.resolveType(getContentResolver())
serialVersionUID=215521212534240L
impl._handler_method.getName()
Log.d(TAG,"Got null argument for a defined keyset, ignoring!")
distinctValues.put(slice,distinct)
log.error("Problem in JSR223 script ",e)
new IndexWriter(dir,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
tw.close()
protocolProvider.getAccountID().getUserID()
Fabric.with(this,crashlyticsKit)
i >= speedBumpIndex
res + _bias
descriptions != null && descriptions.size() > 0
partialUri.toLowerCase()
getExecutorService("hz.initialization")
LOG.info(e)
w1.getGradient(target,alpha,this.alpha)
constructors[TXN_REMOVE_ALL_BACKUP]
((Composite)item.getControl()).layout(false)
new SpacingBuilder(settings,JetLanguage.INSTANCE)
byteBuffer == null || !(byteBuffer instanceof DirectBuffer)
getType().isWildcard()
ContainerUtil.getFirstItem(expressions)
attributes.getAllFlags()
message == null || message.length <= MAC_LENGTH
checkManageOrCreateUsersPermission("getting profiles related to user " + userId)
Exception e
List<String>
mHeadsUpNotificationView.releaseAndClose()
event.getTime() != DURATION_INFINITE && event.getTime() <= currentPlayTime
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dtrsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0)
KeyValue<String,Integer>
HashMap<String,CstType>
!myPreprocessorActive
new ArrayList<>(0)
keySyncOperation.startsWith(targetKey)
Process.SYSTEM_UID != callingUid && nri.mUid != callingUid
Thread.currentThread().interrupted()
DropTreesOfSnapshots::handle
_connector.getResponse("GET /foo?data=1 HTTP/1.0\nhost: host:80\n\n")
PositiveDurationValidator.class
zip(srcFile,zipFile,false)
assertOpenEventually("responseLatch",responseLatch)
indexOfSlashNSlashR != -1
(sync != POSITION_SYNCHRONIZATION_NONE) && (sync != POSITION_SYNCHRONIZATION_CHECK)
sqlType == Types.NUMERIC || sqlType == Types.DECIMAL
telephony.getCdmaEriIconIndexForSubscriber(subId,getOpPackageName())
new ByteBuddy().subclass(Baz.class).method(named("foo")).intercept(MethodDelegation.to(new Qux())).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
logger.debug("Failed to obtain file icon from JFileChooser.",e1)
getSupportActionBar()
createFromResourceStream(res,value,is,srcName,null)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_MARK_AS_FINALIZED,true)
actionName.startsWith("android.net.netmon.lingerExpired") || actionName.startsWith("com.android.server.sip.SipWakeupTimer") || actionName.startsWith("com.android.internal.telephony.data-reconnect")|| actionName.startsWith("android.net.netmon.launchCaptivePortalApp")
getAdapter() == null || getAdapter().getCount() == 0
new JedisClusterCommand<Long>(connectionHandler,maxRedirections){   @Override public Long execute(  Jedis connection){     return connection.persist(key);   } } 
IllegalArgumentException.class
textSize.y + 6
myDiffContentFactory.create(myProject,content)
new StringBuilder(256)
DEBUG_RC=false
!PRESERVE_WINDOWS
sendAdminCommandLocked(deviceOwner,action,extras,null,true)
JMeterUtils.getPropDefault(USE_RHINO_ENGINE_PROPERTY,true)
out.writeInt(sampleCount)
index >= templateTypes.size()
display.getRealMetrics(dm)
polyglot.newInstanceUnsupported(receiver)
90
schemeSpecificParts != null && data != null
Long.parseLong(val)
Predicate<CharSequence>
mAlarmManager.setExactAndAllowWhileIdle(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
logger.trace("NODE {}: App version requested but Version class not supported",this.getNodeId())
e.getMessage().indexOf(":") + 1
g.paidAppName.equals("")
myTempDir.getPath()
assertThat(ex.code()).isEqualTo(404)
Log_OC.d(TAG,"Requesting sync for " + getAccount().name + " at "+ MainApp.getAuthority())
QuickStartMySitePrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
log.debug("Can't set transaction isolation level",e)
addViewInLayout(child,fromLeft != mIsRtl ? -1 : 0,lp,true)
assertEquals(9,tasks.size())
Slog.w(TAG,"Session failed to close due to remote exception",e)
return true; 
new ConnectionException(sm.getString("upgradeHandler.stream.even",key),Http2Error.PROTOCOL_ERROR)
Set<SkyKey>
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
StringBuilder output=new StringBuilder(inName.length()); 
T[]
!HighlightUtil.Feature.ENHANCED_SWITCH.isAvailable(block)
builder.bold("#")
PyTokenTypes.ADDITIVE_OPERATIONS.contains(op) || PyTokenTypes.MULTIPLICATIVE_OPERATIONS.contains(op) || PyTokenTypes.SHIFT_OPERATIONS.contains(op)|| PyTokenTypes.BITWISE_OPERATIONS.contains(op)|| op == PyTokenTypes.EXP
!myApplicationActive || !myEnabled || e.getArea() != EditorMouseEventArea.EDITING_AREA
xml.halfOpenElement(getElementName())
this.nextNode
selenium.click("//li[4]/span/a/span")
nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
w.closeException() != null
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
AtmosphereResourceEventListenerAdapter.class
"Error resetting interface " + mTetherInterfaceName + ", :"+ e
index > widgets.length
displayList != null && displayList.isValid()
v > 65535
logger.getLoggedInfo().contains("This stubbing was never used")
configurator.setExcludedEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses")
onDetachedFromWindow()
sampleFactory.getDeclaredConstructor()
instance.startAction_New(getDefaultTitle(),null,false)
resolver.acquireUnstableContentProviderClient(uri)
StringUtil.shortenTextWithEllipsis(modulesToRestoreText.toString(),50,0)
new StringBuilder(245)
mResourceData[i] != null && !RenderResources.REFERENCE_NULL.equals(mResourceData[i].getValue())
LOGGER.isDebugEnabled()
appWindowToken == null || !appWindowToken.isVisible()
createDouble(buffer.length(),init)
idAnnotation != null && !method.isBridge()
attrNameElement != null && attrNameElement.getInternedText() == charTableIndex
DirectMessage.createDirectMessageList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
LinkedHashMap<String,Operator<? extends Serializable>>
/**   * Returns a child element node at given index.  */ public Element getChildElement(int index){   initChildElementNodes();   if ((index < 0) || (index >= childElementNodes.length)) {     return null;   }   return childElementNodes[index]; } 
log.warn(msg,t)
from >= to
worldEdit.getBlockRegistry().parseFromListInput(component,context)
new Paint()
DpmTestUtils.newRestrictions(UserManager.DISALLOW_ADD_USER,UserManager.DISALLOW_ADD_MANAGED_PROFILE)
RandomStringUtils.randomAlphanumeric(255)
service != null && serviceSelectionStrategy.supports(service)
terminal.receivedSendToTerminal(postCreateText)
Boolean.parseBoolean(getOptional("kylin.htrace.show-gui-trace-toggle","false"))
new InvalidFragmentEntryFileException()
err == 0
mRilDataRadioTechnology=m.getInt("dataRadioTechnology")
this.createError != null
myRole2 == ChildRole.LOOP_BODY || myChild2.getElementType() == ElementType.CODE_BLOCK
mProfileCursor == null || mProfileCursor.getCount() == 0
String.format("Cannot complete a promise more than once! Present value: %s, attempted to set: %s",_value.get(),value)
Thread.sleep(100)
Throwable err
head.getNextCircular()
loaded.getLoaded().getDeclaredConstructor()
Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline.json",null,paging.asPostParameterList(),true))
SequenceBatchCSVRecord singleCsvRecord=Unirest.post(url + "/transformincremental").header("accept","application/json").header("Content-Type","application/json").header(SEQUENCE_OR_NOT_HEADER,"true").body(transform).asObject(BatchCSVRecord.class).getBody(); 
cachedIntentions.getEditor()
DEBUG=false
Stream.of("CYPHER 3.1","CYPHER 3.4")
outputFile.lastModified() <= grammarFile.lastModified()
selenium.isElementPresent("link=Control Panel")
selenium.isElementPresent("link=Control Panel")
into.get(j)
new Histogram(1,10,100,1000,10 * 1000,100 * 1000)
DJB_TYPE=0x05
value.setScale(1,RoundingMode.HALF_EVEN).doubleValue()
"Second position set to " + pos2 + "."
mDeviceInfo.isMili1A() || mDeviceInfo.isMilli1S()
DEBUG_ALL || true
declaringClass.isInterface() && directMethodCallCandidate.isStatic() && !(directMethodCallCandidate instanceof ExtensionMethodNode)
builder.bold("#")
TelephonyManager.getDefault().getCurrentPhoneType()
context.getOpPackageName()
appBundle != null && appBundle.exists() == false
View tv=getChildAt(LAST_OBJECT_IN_STACK); 
labelsMask != null
_ddmStructureLocalService.getStructure(GetterUtil.getLong(ddmStructureFieldNameParts[2]))
case 15: 
Model.getSingleton().getDb().getTableHistory().getHistoryIdsOfHistType(session.getSessionId(),HistoryReference.TYPE_PROXIED,HistoryReference.TYPE_ZAP_USER,HistoryReference.TYPE_SPIDER,HistoryReference.TYPE_SPIDER_AJAX)
nmRmConnectionWaitMs + delta
new DescribeInstances(awsConfig).execute()
application.getBaseContext()
message.getConversation()
latch.await(70,TimeUnit.MILLISECONDS)
dlFileShortcut.getFileShortcutId()
current.localDeletionTime >= gcBefore
dest.writeInt(txPower)
total()
new IOException("Unhandled exception: " + e.getMessage(),cause)
NestedSetBuilder.linkOrder()
LOG.info("Exception while creating remote block reader, datanode {}",source,e)
ColorProperties.getColor("sliderGradientDark")
value == null || exclude(keys[i])
selenium.isElementPresent("link=Control Panel")
T exception
PsiTreeUtil.getParentOfType(element,XmlComment.class) != null && element.getNode().getElementType() != XmlTokenType.XML_COMMENT_START
hasRows(oldTableName)
mBondState.setBondState(address.toUpperCase(),state,reason)
mInner.cancel()
type.getDeclaredConstructor()
NativeLibraryHelper.Handle.create(pkg)
Byte.parseByte(value.toString())
new Translog.DeleteByQuery(new byte[]{4},null)
loaded.getLoaded().getDeclaredConstructor()
Integer.parseInt(topStr)
createShrinkFadeOutFromBottomAnimation(mContentContainer,0,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();   } } )
wrapper.getServlet() == null
-1
log.debug("Error extracting callable results",e)
pkgs.get(j)
bookmarksFolderFinder.findF_E_ByG_F(groupId,folderId,queryDefinition)
ColorProperties.getColor("selectionBackground")
public static DateArray dateArray(LocalDate[] values){   return new DateArray(values); } 
Log.debug(this + " JVM BUG(s) - recreating selector " + _jvmFix1+ " times, cancelled keys "+ _jvmFix0+ " times")
dist >= maxDist
getEndpoint().getConfig().getIndexType()
selenium.isElementPresent("link=Control Panel")
Thread.sleep(1000)
remaining == 0
LOG.error("Error while deserializing payload",e)
exchange.getIn()
PRESSED_STATE_DURATION=64
mDeviceOwner != null && mDeviceOwner.hasDeviceOwner()
new ProtoFile("descriptor.proto",null,NO_STRINGS,NO_STRINGS,Arrays.<Type>asList(messageType),NO_SERVICES,map(),NO_EXTEND_DECLARATIONS)
getLoaderManager().restartLoader(LOADER,null,mLoaderCallbacks)
new ByteBuddy().subclass(Object.class).method(named("toString")).intercept(MethodDelegation.to(ToStringInterceptor.class).defineParameterBinder(StringValueBinder.INSTANCE)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
!ON_TOP
mService.setWifiApConfiguration(wifiConfig)
parent.decrementPrioritizableForTree0(amt)
Boolean.parseBoolean(attrValue)
MockWeakReference<Object>
configureCluster(2)
origin <= other
Collection<PsiMethod>
service.getDataStore().getEnsembleContainers()
new Paint()
SetUtil.class
Error|ClassNotFoundException
new ObjectMapper().readerFor(Map.class)
new Paint()
qux.getDeclaredConstructor()
mUserManager.isUserUnlocked(userHandle)
loaded.getLoaded().getDeclaredConstructor()
selenium.isElementPresent("link=Control Panel")
Throwable e
String.format("Data file row position %d differs from index file row position %d",dataStart,dataStartFromIndex)
mEntryValues[which]
params.appendExtraDeps(new Supplier<ImmutableSortedSet<BuildRule>>(){   @Override public ImmutableSortedSet<BuildRule> get(){     return ImmutableSortedSet.<BuildRule>naturalOrder().addAll(libDir.transform(com.facebook.buck.rules.args.Arg.getDepsFunction(pathResolver)).or(ImmutableList.<BuildRule>of())).build();   } } )
setInternal(mapService.getMapServiceContext().toData(entry.getKey(),partitionStrategy),mapService.getMapServiceContext().toData(entry.getValue()),-1,TimeUnit.MILLISECONDS)
assertLeftRightCategory(9,category2b)
mAttributes.getAllFlags()
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
statistics.addGetTimeNanos(System.nanoTime() - start)
out.setSkipOnFault(value)
tFAgentStatMapper.map(agentStatBo)
!newDefaultSubIdObj.equals(mDefaultSubId)
in.readStringNull(10)
Observable.interval(100,TimeUnit.MILLISECONDS)
args.length == 0 || (args.length == 1 && args[0].equals("-a"))
intsScratch.values[0]=ordinal
selenium.isElementPresent("link=Control Panel")
DBG=true
index > maxHeadersLength - headersLength
mHomeStackResizable && adjustedForIme && !mIsInMinimizeInteraction
info.getDeviceIdForPhone(slotId,mContext.getOpPackageName())
Throwable e
N > 1
ThemeUtils.getDefaultDisplayNameForRootFolder(getContext())
type.getDeclaredConstructor()
NameTable.getSpecificObjCType(var.getType())
java.lang.System.currentTimeMillis() + 250
getDefaultSystemHandlerActivityPackageLPr(deviceProvisionIntent,userId)
new RendezvousAffinityFunction(false,512)
mEnabledPrintServices.size() == 0
assertEquals(9775l,(long)sourceStats.get("warcNovelContentBytes"))
DBG=false
LOG.warn("Unable to delete {} because listInternal returns null",path)
new StringBundler(3)
revWalk.close()
getLogger().debug("Row {} not found in {}, transferring to not found",new Object[]{rowId,tableName})
mNetworkInfo != null && networkInfo != null && mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
OAuthConstants.HAWK_TOKEN_TYPE.equalsIgnoreCase(tokenType)
createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.BLOCK,NextEvent.INVOICE)
uid == Process.SHELL_UID && (pkgSetting.pkgFlags & ApplicationInfo.FLAG_TEST_ONLY) == 0
moveToState(fragment,fragment.mStateAfterAnimating,0,0,false)
Utils.isZkAuthenticationConfiguredTopology(topoConf)
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_dsyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
Boolean.parseBoolean(resizeableStr)
new TextPaint()
PersistentTask<P>
selenium.isElementPresent("link=Control Panel")
InheritableThreadLocal<Integer>
DEFAULT_TETHER_OFFLOAD_DISABLED=0
holder == null || holder.provider == null
Assertions.assertThrows(EmptyStackException.class,() -> stack.pop())
times + BASE_FILE_NUMBER
entry.notification.cloneLight()
zk.exists(znode,false) == null
parser.getBoolean(KEY_ADJUST_BRIGHTNESS_DISABLED,true)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commitAllowingStateLoss()
notifier.getConfiguration().setPort(25669)
assertThat(targetConnectionCount).isLessThanOrEqualTo(goodServerStats.getTotalRequestsCount())
new AssertionError("Unknown " + name + "/"+ test)
Double.valueOf(parser.group(index++)) / 600000
uid >= 0
log.debug(currentThread() + String.format("Trying to recover from dead Channel: %s ",channel))
pattern.toString()
InputType.recurrent(convNIn,length)
final StringBuilder sb=new StringBuilder("PluginInfo{"); 
JBUI.insets(1,2)
intent.putExtra(EXTRA_THEME,0)
manager.beginTransaction().remove(fragment).commitAllowingStateLoss()
"unable to parse " + optionStr
KotlinTestUtils.navigationMetadata("compiler/testData/diagnostics/tests/delegatedProperty/inference/manyIncompleteCandidates.kt")
Files.move(tmpCacheEntry,cacheEntry.toPath(),REPLACE_EXISTING)
FastMath.min(origin,num.doubleValue())
myPieces.floorEntry(startOffset)
popupWindow.setContentWidth(menuWidth)
new TypeConversionDescriptorFactory("$it$.toMap($f$)","$it$.collect(java.util.stream.Collectors.toMap(java.util.function.Function.identity(), $f$))",true)
DefaultCacheKeysFactory.staticGetCollectionId(cacheKey)
prefix.add(tmp.substring(0,tmp.length() - 1))
e2.addSuppressed(e1)
return true; 
myCache1.getCacheConfiguration().getMaxEntriesLocalHeap()
storedHash == null || TextUtils.isEmpty(credential)
d.setMinorVersion(1)
GitSimpleHandler h=new GitSimpleHandler(project,root,GitCommand.INIT); 
remaining == 0
Map<ShardId,ShardRestoreStatus>
activeFrom == null
info.crashInfo.stackTrace != null && info.crashInfo.stackTrace.length() > 10000
Long.valueOf(sizeInBytesProp)
logger.trace("rapidRefreshFuture scheduleing for {} millis",millis)
new ConcurrentHashMap<String,InjectionMetadata>(256)
new ByteBuddy().subclass(MemoryDatabase.class).method(named("load")).intercept(MethodDelegation.to(ChangingLoggerInterceptor.class)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
_log.error(ioe.getMessage(),ioe)
mMccStr == null
Throwable e
jGitConnection.executeRemoteCommand("ssh://host.xz/repo.git",transportCommand,null)
Slog.d(TAG,"showSaveLocked(): no mStructure")
CodeSignIdentityStoreFactory.class
previousDataInputs != null
new BufferedOutputStream(new FileOutputStream(outFile),8192)
DISMISS_MIN_DRAG_WIDTH_RATIO=.33f
assertEquals("ClassInfo's name should be non-null",ex.getCause().getMessage())
type.getDeclaredConstructor()
client.replicationControllers().inNamespace(session.getNamespace()).withName(replicationControllerName)
(r.info.flags & ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS) != 0 && (r.intent.getFlags() & Intent.FLAG_ACTIVITY_CLOSE_SYSTEM_DIALOGS) == 0
Schedulers.computation()
new DQLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters,url)
selenium.isElementPresent("link=Control Panel")
serviceDataUuid == null || mServiceData == null
is(2)
currentBlog.getLocalTableBlogId()
gradleProject.getProjectIdentifier()
scores.getAlgorithm()
Constant.messages.getString("start.gui.cmdline.newsession.already.exist",Constant.getZapHome())
new StringBuilder(560)
renderingAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR)
logger.info("--> checking that _current returns the currently running snapshot")
PlainJUnit4TestCaseWithSingleTestWhichFails.class.getSimpleName()
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
new XlsExporter(false)
(socketRef != 0) && Socket.sendbb(socketRef,0,outputBuffer.position()) < 0
T[]
!classType.hasTypeTree()
DataType.map(datatype,datatype)
new MD5Renderer(model,false,true)
ContainerUtil.newHashSet("AddToFavoritesPopup","DatabaseView.ImportDataSources","CompileDirty","Compile","AddNewFavoritesList","EditFavorites","RemoveFromFavorites","RenameFavoritesList","RemoveFavoritesList")
Math.min(titleRight,subtitleRight)
ConnectionFactory connectionFactory
Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline.json",true))
(mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0 && telephonyService.isOffhook() && interactive
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
16 * 60000
convertView == null || convertView.getTag() == null
LOGGER.warning("Unable to load image using DDS loader!")
(device=1 << i) != AudioSystem.DEVICE_OUT_DEFAULT
typeSettingsProperties.toString()
result == null ? 0L : result
topPanel.addView(mCustomTitleView,0,lp)
queueUpdate()
lp.resolveLayoutDirection(layoutDirection)
event.getTime() > currentPlayTime || event.getTime() == DURATION_INFINITE
new MidPartLongRange(mPos,endPos)
metadata.getFaceRectangles()
context.getMainLooper()
new IndexWriter(startDir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
selenium.isElementPresent("link=Control Panel")
mRedrawClip.isEmpty() || view.getParent() == null
selenium.isElementPresent("link=Control Panel")
decoder.readInbound()
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
volume.getType() == VolumeInfo.TYPE_PUBLIC && volume.getMountUserId() == userId
item == 257
this.followingKeychains
tableRow.getString("type").toLowerCase(Locale.ENGLISH)
CompletableFuture<Void>
mObsoleteAgents.remove(info)
mMatchMode=matchMode
elements != null && elements.size() > i
!inbound.isBypass() && inbound.isEmpty() && inbound.hasByteBuffer()
RandomStringUtils.randomAlphanumeric(20)
assertEquals(expected.length,actual.length)
InvokerHelper.getMetaClass(obj.getClass()) == mc || !(mc instanceof ExpandoMetaClass)
uuid.getMostSignificantBits() & 0xFFFFFFFF00000000L
new InverseSchedule(ScheduleType.ITERATION,1,scheduleDecay,1)
LOG.config(() -> createDiscoveredTestEnginesMessage(testEngines))
Objects.equals(mServiceDataUuid,other.mServiceDataUuid)
callTimeoutMs=10000
returnTypeElement == null || returnType == null
LOGGER.error("Error while downloading file",ioex)
space.getText().replace('\n',' ')
cam.near=1f
builder.length() == 0 && s != null
tokenEnd > buffer.length()
WORKER_BLOCK_HEARTBEAT_TIMEOUT_MS(Name.WORKER_BLOCK_HEARTBEAT_TIMEOUT_MS,60000)
index > maxHeadersLength - headersLength
val._resDev <= 388.5
LOGGER.isDebugEnabled()
taskRabbitTask != null && taskRabbitTask.getLocalTaskData() != null
new LightweightThread(null,null,test)
m.getConstructorOrMethod()
c.getMethod("load",Class.class)
Glide.with(activity).load(url).submit(size.getWidth(),size.getHeight())
LinkedHashMap<String,ArrayList<String>>
driverFile.getFile()
resources.getDimensionPixelSize(R.dimen.close_handle_height)
"-" + COLLECTION + " and -"+ CONFNAME+ " are required for "+ LINKCONFIG
new ScaledResolution(mc)
String message
indexLock.writeLock()
compressedSliceInput.getRetainedSize()
!mIsPipRecentsOverlayShown || !mIsRecentsShown || !mIsPipFocusedInRecent
httpServletRequest.getParameterValues(name)
new Paint()
new GotoFileAction().actionPerformed(e)
MimeTypeUtil.getFileTypeIconId(null,mFile.getName())
list(TYPES,newline(),CsmElement.newline(),CsmElement.none(),CsmElement.newline())
getCategoriesAndThreads(category.getGroupId(),categoryId,WorkflowConstants.STATUS_IN_TRASH)
subCursor.getString(COLUMN_ATTENDEE_IDENTITY)
SOURCE_INTERNETRADIO(26)
MockReset.after()
initialCapacity > 1 << 30
priorityWayEncoder.getBits()
this.myHashMap.containsValue(o)
mAudioHandler.hasMessages(MSG_SET_A2DP_SINK_CONNECTION_STATE,btDevice)
dimensionsSpec.getDimensionNames()
moveToState(fragment,fragment.mStateAfterAnimating,0,0,false)
setValue(object,value.intValue())
payload.intPayload[2]
SystemProperties.getInstance().getUserHome()
mForegroundTintResId=array.getResourceId(1,0)
!match && compareRecover
revWalk.close()
(byte)13
Exception e
getTestRootDisposable()
startOffset >= pages.size()
HIVE_TABLE_OFFLINE(2,USER_ERROR)
user.isAuthorized("essentials.world." + toPlayer.getWorld().getName())
new LeftTuple(new DefaultFactHandle(1,"cheese"),null)
assertFalse(blockDirectory.isBlockCacheWriteEnabled())
mService.mAppOps.noteOpNoThrow(w.mAppOp,w.getOwningUid(),w.getOwningPackage())
filteredItems.get(index)
className.equals(Classes.COROUTINE_NAME)
Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath())
Number returned=factory.newInstance(vars).execute(); 
value != null && !(dataType instanceof ConvertedDataType)
offsets[i + 1] - offsets[i] == 1 || !Character.isWhitespace(unescapedText.charAt(i))
new GeoLocation(array.getDouble(1),array.getDouble(0))
contact != null
formNavigatorEntryKeysProperties.getProperty(categoryKey)
bucket.isExists()
mState == STATE_STARTED || mState == STATE_STARTING
Iterable<? extends IJsonNode>
jabberStatusToPresenceStatus(o1,parentProvider)
mappers.mapper().searchQuoteAnalyzer()
selenium.isElementPresent("link=Control Panel")
!isDirectPickup(block,blockDamageModifierComponent) || !inventoryManager.giveItem(event.getInstigator(),item)
new IndexWriter(dir,false,new WhitespaceAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
selenium.isElementPresent("link=Control Panel")
return false; 
lookupLink(parseName(name))
Slog.w(LOG_TAG,"Trying to set ro.device_owner, but it has already been set?")
SimpleAttributeDefinitionBuilder.create("file",ModelType.OBJECT,false)
o == null || o.equals(JSONObject.NULL)
StringBuilder output=new StringBuilder(inName.length()); 
status().isSeeOther()
VDBG=false
(opCode & 0x08) != 0
assertEquals(13,singlePackageBeanCount)
Assert.assertEquals(1,clusterEventListeners.size())
Assert.assertEquals(4,results.size())
selenium.isElementPresent("link=Control Panel")
JsPeerInfo.create(JsPeer.create(src.getPeer()),src.getDialogTitle(),null,fileUrl,Placeholders.getPlaceholder(src.getPeer().getPeerId()))
assertMockEndpointsSatisfied()
ACRA.log.i(LOG_TAG,context.getPackageName() + " reports will be sent by Http.")
setStatus(SC_MOVED_PERMANENTLY)
LOG.debug("Terminating channel to the remote gRPC server")
dockerClient.waitContainerCmd(container.getId())
DatabaseAttachment attachment=getAttachment(attachmentId); 
new XValueChildrenList(myVariables.size())
h2o.completeExceptionally(ex)
annotationReader.ofTypeVariableBound(index)
subMesh.firstByte.intValue() / 6
ab.get1U()
fluids.containsKey(fluid.getName())
realm.checkIfValid()
new Paint()
res > mLen
"Cannot guess file extension for invalid MIME type: '" + mimeType + "'"
logger.debug("Cannot retrieve item {} for widget {}",itemName,w.eClass().getInstanceTypeName())
sourceSet.getRuntimeOnlyConfigurationName()
new Paint()
ignite.jcache(CACHE_NAME)
stack == null || stack.mStackId != DOCKED_STACK_ID
assertOpenEventually(countDownLatch,300)
countNewlines(headerFragment) + 2
process.getErrorStream()
new ResolveTakenPictureAsyncTask(data,promise,options,cacheDirectory,RNCameraView.this)
mGnssCallback != null
error == FingerprintManager.FINGERPRINT_ERROR_USER_CANCELED || error == FingerprintManager.FINGERPRINT_ERROR_CANCELED
-1
synchronized (mAuthorities) {   writeStatisticsLocked(); } 
bareNumber.length()
getClient().prepareSearch(resolveIndexName()).setTypes(IndexAuditTrail.DOC_TYPE).fields(fieldList())
time.put(current)
Timber.d(e,"Error getting path delimiter using LIST command")
Log_OC.d(TAG,"Initializing Fragments in onAccountChanged..")
code.addLoad(1,field.getType())
computeAntiJoin(inputStatistics,inputStatistics,x,unknown)
this.rightLabel
String.format("BUG: %s changed score during rematch: %d -> %d",newNetwork.name(),score,newNetwork.getCurrentScore())
data.getTestPassed()
required + "pt"
rootMBMessage.getMessageId()
sampleFactory.getDeclaredConstructor()
other instanceof BitDocSet
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.4")
return RES_OK; 
new ReactorManager(Collections.EMPTY_LIST,ReactorManager.FAIL_FAST)
this.cusolverDnSsyevd_bufferSize.invoke(null,solverDn,jobz,uplo,M,(FloatPointer)xAPointer.getDevicePointer(),M,(FloatPointer)xRPointer.getDevicePointer(),(IntPointer)worksizeBuffer.addressPointer())
zkWorker2.getWorker()
!isPartialUpdate || id.views == null
PyQualifiedName.fromDottedString(name)
a[right]
ams.mContext.createPackageContextAsUser(appInfo.packageName,0,new UserHandle(userId))
state.registerDeleted(myContext,descriptor.getTarget(),file)
DEBUG_ALL || true
backups.length > 2
allowBlacklisting
new GLMModel(args.dest,model._parms,new GLMOutput(model._output._names,model._output._domains,names,beta,.5f,model._output._binomial),model.dinfo(),Double.NaN,Double.NaN,-1)
INDEX_VERSION=16
accountHandle.getComponentName().flattenToString()
assertEquals(0,langTool.check("Certo, isto está bem. Este exemplo está correto. Certo que este também.").size())
length - 1
LOG.d(TAG,"We have a callback to send this result to")
POSITIVE_X(0)
serverSocket.setReuseAddress(true)
doTest(false)
"null".equals(value) || value == null
1
new PostgreSQLCommandExecutor(context,message,this)
assertEquals(11,beanCount)
LOGGER.info("Register profile {}",qualityProfile.getQProfileName())
selenium.isElementPresent("link=Control Panel")
@ManyToOne(optional=false) private TopEntity top; 
CLOSE_PANEL_WHEN_EMPTIED && !hasActiveNotifications() && !mNotificationPanel.isTracking()&& !mNotificationPanel.isQsExpanded()
checkCall(receiver)
selenium.isElementPresent("link=Control Panel")
public JComponent getFocusableComponent(){   if (myComponent instanceof JComboBox) {     return ((JComboBox)myComponent).getEditor().getEditorComponent();   }  else {     return myComponent;   } } 
return _trustStoreResource; 
new RuntimeException("Unable to format " + fileName,t)
operationJSONObjectBuilder.field(TYPE).stringValue(OPERATION)
pa.getStore().getJournal().getFileMap().size() == 2
logger.fine(String.format("connection attempt will timeout after %d",timeout))
trimmedText.equalsIgnoreCase(myModel.getElementName(e))
DeprecationLogger.nagUserWith("<someIdeTask>.withXml is deprecated! Moved to the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
cfg.getMarshaller() != null && !(cfg.getMarshaller() instanceof BinaryMarshaller)
assertEquals(3,StringUtil.countMatches(drl,"import "))
from > to
mAuthorities.valueAt(i)
pendingCommit.createBackupSegmentInfos(true)
!Comparing.equal(myContextModule,namedLibraryElement.myContextModule)
BackupManagerServiceInterface svc=mService; 
HighlightInfo.newHighlightInfo(HighlightInfoType.WRONG_REF).range(ref).descriptionAndTooltip(message)
selenium.isElementPresent("link=Control Panel")
ArrayList<>
r.destination != null && !r.destination.isEmpty()
is2D() && len != 2
Math.sin(Math.toRadians(degrees))
builder.humanReadableField(HttpRequest.Field.CONNECTION_TIMEOUT.getPreferredName(),HttpRequest.Field.CONNECTION_TIMEOUT_HUMAN.getPreferredName(),connectionTimeout)
mService.setAppPolicy(UID_A,POLICY_NONE)
System.out.println("JVM options:")
makeTypeWithArguments(node)
entry.getName().equals(BOOT_INF_CLASSES)
pubnub.unsubscribePresence(channel)
getTestName(false)
JavaLibraryPlugin.class
mUiHandler.removeCallbacks(pae)
mPipeManager.writeDocument(getContext(),mtpManager,new Identifier(0,0,1))
killBillClient.createExternalCharge(externalCharge,clock.getUTCToday(),false,true,createdBy,reason,comment)
host1.getSocketAddress()
pluginContainer.lookup(ComponentConfigurator.ROLE,configuratorId,pluginRealm)
new IllegalStateException("Property existence constraints can only be used on Neo4j enterprise")
res.getContentType().toLowerCase().indexOf("text/html") != -1 && res.getResponseData().length > 0
Exception e
nextPos < mBoundPos
builder != null
gatecoinOrder.getSide()
mPowerManager.isInteractive()
count >= 2
nativeSetFlags(mNativeObject,sc.mNativeObject,0,SURFACE_OPAQUE)
dynamicType.getLoaded().getDeclaredConstructor()
timedOut=false
net.getLayerWiseConfigurations()
FluidRenderer.renderFluid(FluidSpriteType.STILL,forRender,amount / flow.capacity,1,min,max,fluidBuffer,sides)
new CustomDataCollector(customParameters)
runnable.getResult() != null && !treeViewer.getTree().isDisposed()
FileUtil.loadFile(new File("injector-generator/copyright.txt"))
rw.close()
initialCapacity > 1 << 30
Environment.getOemDirectory()
zkDb.snapLog.getDataDir()
assertEquals(3,map.size())
DEBUG=false
JetBrainsAccountDialogKt.showJetBrainsAccountDialog(getRootPane())
endOffset - 1
database instanceof DB2Database || database instanceof DerbyDatabase || database instanceof HsqlDatabase|| database instanceof MySQLDatabase
variable.getModifiers()
log.debug("Error while closing command context",exception)
logger.debug("Could not find original user Authentication object!")
mContext.startActivityAsUser(intent,null,UserHandle.CURRENT)
insets.left != 0
Arrays.sort(slaveNames,new Comparator<String>(){   public int compare(  String o1,  String o2){     return o1.compareToIgnoreCase(o2);   } } )
myLayeredPane.getSize()
theClass.getConstructor()
merge4dCnnData(labelsToMerge)
logger.warn("{}",builder.toString())
workspace.runBuckBuild("//:provided_only")
BrowserApp.getContext()
Throwable ignored
weekRange.add(Calendar.DATE,6)
new MaterialDialog.Builder(getActivity()).title(R.string.reschedule_card_dialog_title).positiveText(getResources().getString(R.string.dialog_ok)).negativeText(R.string.cancel).inputType(InputType.TYPE_CLASS_NUMBER).inputRange(1,4)
!mQuietEnable
jsonObj.put(_CLIENT_HOST,_clientHost)
Assert.assertFalse(_clusterInvokeAcceptor.accept(context))
appearance.getFloat(attr,0)
rootView.getId()
new Builder().setDuration(3000).setColor(android.R.color.holo_green_light)
CodeStyleSettings.class.getField(value)
dest.writeInt(mSubId)
Context.packingClass(config)
BuildArtifactsBeforeRunTaskProvider.setBuildArtifactBeforeRunOption(myMainPanel,myProject,selectedArtifact,true)
tracesDir.mkdirs()
ScanResult.is5GHz(frequency)
Boolean.parseBoolean(optionsHelper.getOptionValue(OPTION_INCLUDE_CUBE))
FilteredBatchServerViewProvider.class
TIMEOUT=2000
expand("serializedforms/JobDataMapSerializationTest.testEmptyMap.{?}.ser","JDK16","JDK17","JDK18")
_addTestVariant("small.hd","uuid1",99,100)
OpenmrsProfileWithoutMissingModule.class
mActionBarTop.getVisibility() != GONE
/**   * Represents the default formatter for log message. Default log message format is: [SEVERITY LEVEL] filePath:lineNo:columnNo: message. [CheckName]  * @author Andrei Selkin  */ public class AuditEventDefaultFormatter implements AuditEventFormatter {   /**   * Length of all separators.   */   private static final int LENGTH_OF_ALL_SEPARATORS=10;   /**   * Suffix of module names like XXXXCheck.   */   private static final String SUFFIX="Check";   @Override public String format(  AuditEvent event){     final String fileName=event.getFileName();     final String message=event.getMessage();     final SeverityLevel severityLevel=event.getSeverityLevel();     final String severityLevelName;     if (severityLevel == SeverityLevel.WARNING) {       severityLevelName="WARN";     }  else {       severityLevelName=severityLevel.getName().toUpperCase(Locale.US);     }     final int bufLen=calculateBufferLength(event,severityLevelName.length());     final StringBuilder sb=new StringBuilder(bufLen);     sb.append('[').append(severityLevelName).append("] ").append(fileName).append(':').append(event.getLine());     if (event.getColumn() > 0) {       sb.append(':').append(event.getColumn());     }     sb.append(": ").append(message);     final String checkShortName=getCheckShortName(event);     sb.append(" [").append(checkShortName).append(']');     return sb.toString();   }   /**   * Returns the length of the buffer for StringBuilder. bufferLength = fileNameLength + messageLength + lengthOfAllSeparators + + severityNameLength + checkNameLength.  * @param event audit event.  * @param severityLevelNameLength length of severity level name.  * @return the length of the buffer for StringBuilder.  */   private static int calculateBufferLength(  AuditEvent event,  int severityLevelNameLength){     return LENGTH_OF_ALL_SEPARATORS + event.getFileName().length() + event.getMessage().length()+ severityLevelNameLength+ getCheckShortName(event).length();   }   /**   * Returns check name without 'Check' suffix.  * @param event audit ivent.  * @return check name without 'Check' suffix.  */   private static String getCheckShortName(  AuditEvent event){     final String checkFullName=event.getSourceName();     final String checkShortName;     final int lastDotIndex=checkFullName.lastIndexOf('.');     if (lastDotIndex == -1) {       if (checkFullName.endsWith(SUFFIX)) {         checkShortName=checkFullName.substring(0,checkFullName.lastIndexOf(SUFFIX));       }  else {         checkShortName=checkFullName.substring(0,checkFullName.length());       }     }  else {       if (checkFullName.endsWith(SUFFIX)) {         checkShortName=checkFullName.substring(lastDotIndex + 1,checkFullName.lastIndexOf(SUFFIX));       }  else {         checkShortName=checkFullName.substring(lastDotIndex + 1,checkFullName.length());       }     }     return checkShortName;   } } 
new IllegalStateException("Advertising can't be both connectable and anonymous")
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
V extends Identifier
Throwable e
assertFalse(killRes)
FinalUtils.canBeFinal(field)
new OptiqSemanticException(generateErrorMessage(tabref,"Schema of both sides of union should match: field " + field + ":"+ " appears on the left side of the UNION at column position: "+ getPositionFromInternalName(lInfo.getInternalName())+ ", and on the right side of the UNION at column position: "+ getPositionFromInternalName(rInfo.getInternalName())+ ". Column positions should match for a UNION"))
Locale.getDefault().getLanguage()
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
isAllowed()
delegate.requireChild(element)
new DhcpAckPacket(transactionId,(short)0,broadcast,serverIpAddr,relayIp,requestClientIp,yourIp,mac)
Integer.parseInt(taskIdStr)
new GitCompareBranchesDialog(myProject,info.getTo(),info.getFrom(),info.getInfo(),myGitRepository,true)
options.remove("wireFormat")
StatBuckets.prettyUptimeStr(secs)
handleSecurityPermissionActions(child,permConfig)
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0,UserHandle.ALL)
!config.isAutoRead()
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0)
Element.F64_2(mRS)
typeLength == 0 && tnf != NdefRecord.TNF_UNKNOWN
Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_by_me.json",null,paging.asPostParameterList(),true))
logger.trace("Return Object {} now at size {}",b,count.getAndDecrement())
new RelativeCoordinatesProvider(hRef,hDelta,vRef,vDelta)
/**   * [Sa * Da, Sc * Dc]   */ MULTIPLY(14)
compactionStrategyFor(deleted)
NumberUtils.decodeHighUnsignedNibble(encodedInstruction[5])
info.getMsisdnForSubscriber(subId,mContext.getOpPackageName())
exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,exchange,graph)
activityManager.getLargeMemoryClass()
random.nextInt(8)
result.getReceipt().getEnergyUsageTotal()
AnnotatedElementUtils.findAnnotationAttributes(type,annotationType)
status < 0
ScanResult.is5GHz(frequency)
LOGGER.error("Error during XML parsing",e2)
HttpComplianceSection#METHOD_CASE_SENSITIVE
stripFilter.skipWhiteSpace(charBuffer,stringWriter,true)
_barrier.waitFor(nextSequence,1000,TimeUnit.MILLISECONDS)
mMccStr == null
StepVerifier.create(Flux.just(1).thenEmpty(Flux.empty())).verifyComplete()
TypeEvalContext.fastStubOnly(file)
USE_COMPASS_IN_NAVIGATION.setModeDefaultValue(ApplicationMode.CAR,true)
@Override public final DivideByOnConditionStep orNotExists(Select<?> select){   return or(notExists(select)); } 
new Location(target.getWorld(),x,y,z,target.getLocation().getYaw(),target.getLocation().getPitch())
log.warn(e,"Graceful shutdown of task[%s] aborted with exception.",task.getId())
new WebApplicationException(e,serverError(e))
Exception e
layerInput.size(0)
adapter == IResultSetController.class || adapter == ResultSetViewer.class
300 * 1000L
offset + blockSize < bytes.length
!mIsOnInnerCircle && hour != 0
type.getDeclaredConstructor()
new Paint()
dataSourceContainer.getDriver().getFullName()
connectGatt(context,autoConnect,callback,transport,PHY_LE_1M_MASK)
formsFound=false
scanFlags & SCAN_REQUIRE_KNOWN
handleError("Failed to change current working directory ownership. Error code: " + Integer.toString(result),null)
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticMethodsNoDuplicatesFromBases.kt")
nsDescriptor.getAttribute(localName,namespace,visited)
lastPos > mBoundPos
comp.exitUtil()
con.getClass().getSimpleName()
assertEquals(expected.ig,actual.ig,0.0000001)
synchronized (mAm) {   pw.print(prefix);   pw.print("SERVICE ");   pw.print(r.shortName);   pw.print(" ");   pw.print(Integer.toHexString(System.identityHashCode(r)));   pw.print(" pid=");   if (r.app != null)   pw.println(r.app.pid);  else   pw.println("(not running)");   if (dumpAll) {     r.dump(pw,innerPrefix);   } } 
T result=(T)getJdbcTemplate().queryForObject("SELECT VALUE FROM BATCH_STAGING WHERE ID=?",new Object[]{id},new RowMapper(){   public Object mapRow(  ResultSet rs,  int rowNum) throws SQLException {     byte[] blob=lobHandler.getBlobAsBytes(rs,1);     return SerializationUtils.deserialize(blob);   } } ); 
ONE_MINUS_DST_ALPHA(7)
writeRepeatedSFixed64Impl(id,val)
new Insets(6,0,0,4)
compositeBuffer(Integer.MAX_VALUE)
status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS || status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_UNDEFINED
v.size()
new IntentPickerSheetView.ActivityInfo(customDrawable,"Custom mix-in",PickerActivity.this,MainActivity.class)
ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining("AutoFactory does not support generic types").in(file).onLine(21)
mUiHandler.removeCallbacks(pae)
frequencyKhz <= 30000
new ConcurrentHashMap<Class<?>,Constructor<?>[]>(256)
IOException ioe
Log_OC.e(TAG,"Trying to open a NULL OCFile")
JvmDeclarationOriginKt.OtherOriginFromPure(myClass)
atLeast(100)
atUserBeans == null || atUserBeans.size() == 0
readers[i].doDelete(n - starts[i])
output.writeStartElement(part.getConcreteName().getLocalPart())
new Settings(getContext().getFilesDir(),new Object())
Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform("softmax",preOut),1)
a.getDimension(attr,0)
ultimateRecyclerView.enableDefaultSwipeRefresh(false)
OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class); 
loaded.getLoaded().getDeclaredConstructor()
myEditor.visualLineToY(endLineNumber)
enabled=true
_log.warn(StringBundler.concat("Column ",columnName," in Table ",tableName," already is ",newTypeDefinition))
_desc(value)
mPowerManager.isInteractive()
state != null && state.mTint != null
@NotNull
selenium.isElementPresent("link=Control Panel")
Locale.getDefault().toLanguageTag()
assertNumUniqueNodeNameBuckets(4)
new JLabel(GroovyBundle.message("dynamic.toolwindow.search.elements"))
ZKMetadataProvider.getRealtimeTableConfig(_pinotHelixResourceManager.getPropertyStore(),realtimeTableName)
StructuredContentNestedCollectionResource.class
mAuthorities.valueAt(i)
getMockServerClient(mockServerPort).stop(ignoreFailure)
Long.parseLong(this.getOptional("kylin.server.sequence-sql.expire-time","86400000"))
Activate(app)
info.getXferAddr()
mCurrentFirstVisiblePosition >= 0
target.getDestinationLinkAddress()
VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
Thread.sleep(100)
buildPages.getTypesWithoutHash()
mContext.sendStickyBroadcastAsUser(intent,UserHandle.ALL)
super(position,message,cause); 
Timber.e(msg)
return mIdleTimeMillis; 
activity == null || activity.isFinishing()
targetEditor.getScrollingModel()
getConnectTimeout()
ctx.cache().dynamicStartCaches(cacheCfgs,true,true,false)
type.getDeclaredConstructor()
stopTimeNs - requestStartTimeNs
o2 instanceof String
TupleDomain.all()
model._output._iters > _parms._max_iters
MetadataInstrument2.class.getSimpleName()
RedissonMultimap.this.keySize()
super(8081,new File(".")); 
AssertionError e
new GitException(ERROR_ADD_REMOTE_NAME_MISSING)
fileShortcut.getUuid()
input.getSourceFileFieldName()
AsyncTask<Void,Object,Void>
formController != null && formController.getInstancePath() != null
uri.getEncodedQuery()
logger.getLogger().warning("Shut down master")
mAms.mWaitForNetworkTimeoutMs=2000
program.getUuid()
FairSharePolicy.class
field.getType().toJavaName()
delegate.writeEmptyElement(prefix,localName,namespaceURI)
result.getWarnings()
elementUtil.isWeakOuterType(element)
table.get(i,j)
inOrder.verify(mockAwareService).publish(any(),eq(clientId),eq(publishConfig),sessionProxyCallback.capture())
JsonUtf8Writer.string(buffer,strings[i])
prefix(dst)
j < count
cache.removeRecord(key)
channel.write(response,remoteAddress)
mock(IMethods.class)
LOGGER.warn("Groovy script [{}] returned no value for username attribute. Fallback to default [{}]",this.groovyScript,principal.getId())
new ParseField("rules","detector_rules")
Thread.sleep(1000)
Settings.Secure.getInt(mResolver,NETSTATS_ENABLED,0)
holder == null || holder.provider == null
context.getOpPackageName()
final ClientState clientState=(ClientState)msg.obj; 
inputProcessor.touchDragged(event.x,event.y,event.pointer)
mVibratorService.vibrate(null,2000,new Binder())
getDelegate().handle(exchange).onErrorResume(ex -> {   if (logger.isDebugEnabled()) {     logger.debug("Could not complete request",ex);   }   response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
AvatarManager.getInstance().getUserAvatar(user + "/" + resource)
final ImageView buttonNavigate=(ImageView)view.findViewById(R.id.context_menu_route_button); 
Drawable drawable
JCVideoPlayerManager.lastListener()
STATUS.isReleaseToLoadMore(mStatus)
config.getMaxEntriesLocalHeap()
/**   * Proxy class to catch calls to set blocks.  * @author sk89q  */ public class MinecraftSetBlockProxy extends em {   /**   * Edit session.  */   private EditSession editSession;   /**   * Constructor that should NOT be called.  * @param editSession  */   public MinecraftSetBlockProxy(  EditSession editSession){     super(null,"",(long)0,null);     throw new IllegalStateException("MinecraftSetBlockProxy constructor called (BAD)");   }   /**   * Called to set a block.  * @param x  * @param y  * @param z  * @param blockType  * @return  */   @Override public boolean a(  int x,  int y,  int z,  int blockType){     try {       return editSession.setBlock(new Vector(x,y,z),new BaseBlock(blockType));     }  catch (    MaxChangedBlocksException ex) {       return false;     }   }   /**   * Called to get a block.  * @param x  * @param y  * @param z  * @return  */   @Override public int a(  int x,  int y,  int z){     return editSession.getBlock(new Vector(x,y,z)).getID();   }   /**   * @return  */   public EditSession getEditSession(){     return editSession;   }   /**   * @param editSession  */   public void setEditSession(  EditSession editSession){     this.editSession=editSession;   } } 
checkCall(receiver)
mono.onErrorResume(ex -> Mono.error(getReadError(bodyParameter,ex)))
new IndexWriter(dir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
!ExternalSystemApiUtil.isOneToOneMapping(project,projectDataNode.getData())
AstyanaxKeyColumnValueStore store=new AstyanaxKeyColumnValueStore(name,keyspaceContext.getClient(),this,retryPolicy); 
Locale.getDefault().toLanguageTag()
{26,29}
globalDisplay_.showHtmlFile(result_.getOutputFile())
activityNdx <= topActivityNdx
Response.ok(null,MediaType.TEXT_PLAIN)
SystemPropertyUtil.getBoolean("io.netty.noJdkZlibDecoder",true)
mRemote.transact(REVOKE_URI_PERMISSION_FROM_OWNER_TRANSACTION,data,reply,0)
new DateTime(2007,1,1,0,0,0,0)
independentReserveOrderBook.getSellOrders()
threshold >= 0
oconf.getJSONObject("rev").getDouble("fuzz")
LOG.info("Unable to parse HTTP response content",e)
assertThat(provider.fetchCount,is(3))
volume.getMtpReserveSpace() * 1024L * 1024L
List<String[]>
callback.onPulseFinished()
mNextWakeFromIdle != null && a.whenElapsed > mNextWakeFromIdle.whenElapsed
parcel.writeString(mViewIdResourceName)
hours >= 2 || (hours > 0 && minutes == 0)
Integer.parseInt(matcher.group(1))
hz1.getLifecycleService().shutdown()
DumpUtils.checkDumpAndUsageStatsPermission(getContext(),TAG,pw)
LOGGER.isDebugEnabled()
constr.ipadx=5
xtw.writeCData(customProperty.getSimpleValue())
hasCdmaDataConnectionChanged || hasNetworkTypeChanged
_name + ".DEBUG"
LanguageLevel.JDK_1_5.compareTo(field.getManager().getEffectiveLanguageLevel()) <= 0
JavaSourceCodehausPackagesSuite.suite()
f1.getPanelDisplayName().compareToIgnoreCase(f2.getPanelDisplayName())
edge.setDirection(EdgeDirection.UNDIRECTED)
assertEquals(3,intentions.size())
TestSuiteEnvironment.getServerAddressNode1()
Status.createStatuseList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
Throwable ex
stackIterator.remove()
greaterThan(0L)
schemaName != null
new CvsRollbackProvider(myProject,selectedRevisions)
new ScriptC_errorCalculator(mRS)
_appendables == null || _appendables.length == 0
ImmutableList<ObjectType>
m.getAverageJobWaitTime()
@Autowired ApplicationEvents applicationEvents; 
queryBuilder.append(columnAliases[i].getAliasName())
(getSource().z() + getTarget().z()) / 3f
getBurnTime(ALCHEMICAL_COAL_STACK)
getRawFieldBlock(i).getRegionSizeInBytes(rowIndex,1)
logger.debug("Action Invalid Value Format Exception {}",ex.getMessage())
ImmutableSet<ImplementationMethodDescriptor>
DefaultCacheKeysFactory.staticGetCollectionId(cacheKey)
zController.enqueue(doRequestStop())
assertEquals(12,definitions.size())
mAlarmManager.setExact(AlarmManager.RTC,timestampMs,mAnomalyAlarmIntent)
compensationRange.contains(compensation)
ITERATIONS=3
buildChannelsUriForInput(inputId,false)
result.ocFile.getMimeType()
xtw.writeCData(customProperty.getSimpleValue())
args.putInt(ProgressScene.KEY_PAGE,result2.page)
new Paint()
new URI(parentUri.getScheme(),parentUri.getAuthority(),parentUri.getPath() + SEPARATOR,null,null)
containsString("Could not load compiled classes for script-display-name from cache.")
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) != 0
params.setJpegThumbnailQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
~PFLAG3_FITTING_SYSTEM_WINDOWS
isOffhook || AudioSystem.isStreamActive(AudioSystem.STREAM_VOICE_CALL)
drawable.getIntrinsicHeight()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,seq,0,p)
items[22]
type.getDeclaredConstructor()
log.debug("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
mp.getResolvedValue()
manager.beginTransaction().remove(fragment).commitAllowingStateLoss()
Column::getName
!result.startsWith(connectionFactory.getProtocol() + ":/")
resources.getDimensionPixelSize(R.dimen.close_handle_height)
LOG.warn("Root project path of the Gradle project not found for " + rootModel.getModule())
TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,2,a.getResources().getDisplayMetrics())
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_CHANGE_LANGUAGE,true)
osName.contains("sunos") || osName.contains("solaris")
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
sendMsg(mAudioHandler,MSG_SET_ALL_VOLUMES,SENDMSG_QUEUE,0,0,VolumeStreamState.this,0)
VcsBundle.message("message.text.cannot.show.differences",e1.getMessage())
tracesDir.mkdirs()
LocalFileSystem.getInstance().refreshAndFindFileByPath(libPath)
tempBlock.getPath()
selenium.isElementPresent("link=Control Panel")
!DLFolderPermission.contains(getPermissionChecker(),groupId,folderId,ActionKeys.VIEW)
from=PERSISTENT_ANIMATION_CACHE
getOptionalDate(singletonMap("date","2017-04-03"),list)
session.closeInternal(new CloseReason(CloseReason.CloseCodes.NO_STATUS_CODE,null))
checkCall(receiver)
trade.getLimit()
read != null
host.setHeaderView(mExpandIndicator)
assertEquals(403,te.getStatusCode())
r != null && passThruFields != null
Short.parseShort(value.toString())
counter < max
assertTrue("reuse-address",networkConfig.isReuseAddress())
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
(~activity.mActivityInfo.getRealConfigChanged() & diff) == 0 || !reportToActivity
Trans != NO_TRANSPOSE
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
sDefaults.putBoolean(KEY_PERSIST_LPP_MODE_BOOL,true)
parser.parseLight(GroovyElementTypes.CONSTRUCTOR_BLOCK,builder)
expected == boolean.class || expected == Boolean.class
Throwable ex
service.getDomain().id()
Thread.sleep(100)
into.get(j)
dataBuilder.addLinesBuilder().setLine(i).setScmRevision("REVISION_" + i).setScmAuthor("a_guy").setSource("this is not java code " + i).setUtLineHits(i).setUtConditions(i + 1).setUtCoveredConditions(i).setItLineHits(i).setItConditions(i + 1).setItCoveredConditions(i).setOverallLineHits(i).setOverallConditions(i + 1).setOverallCoveredConditions(i).setScmDate(150000000L).setHighlighting("2,9,k;9,18,k").addAllDuplication(Arrays.asList(19,33,141))
BungeeCord.instance.pluginManager.onLogin(event)
attrs.size() > 0 && attrs.size() <= 4096
loaded.getLoaded().getDeclaredConstructor()
Assert.assertEquals(transitions.size(),3)
new VisorGatewayArgument(VisorQueryTask.class).forNode(locNode).argument(VisorQueryArg.class,"person",URLEncoder.encode("select * from Person",CHARSET),false,false,1)
page != Page.ARCHIVE && page != Page.CONVERSATION_MENU_OVER_CONVERSATION_LIST
getSupportActionBar()
promise.trySuccess()
StringBuilder ret
mWindow == null || !mWindow.getSharedElementsUseOverlay()
host1.getSocketAddress()
selenium.isElementPresent("link=Control Panel")
mHorizontals == null || offset < mLineStartOffset || offset >= mLineStartOffset + mHorizontals.length
sections.get(section)
buf.getShort()
sStatsd.informDeviceShutdown()
g.cachesx()
cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
0x100000 - 0x50
getVoiceUsed()
serverConfig.getRenewalPercentThreshold() * expectedNumberOfRenewsPerMin
(str.length() * 3) >> 2
Long.parseLong(subSecs)
vis.fontAction(ascii)
parent instanceof AppWidgetHostView || parent == null
logger.debug("Cannot retrieve item {} for widget {}",itemName,w.eClass().getInstanceTypeName())
new IndexOutOfBoundsException()
delayMs <= 0
DefaultCacheKeysFactory.staticGetEntityId(cacheKey)
p + "." + M_GET_KEYS+ "."+ M_ITERATOR
Long.parseLong(args[2])
for (BooleanClause<Filter> booleanClause : booleanClauses) {   sb.append(booleanClause);   sb.append(StringPool.COMMA_AND_SPACE); } 
type.getDeclaredConstructor()
Log_OC.d(TAG,"Canceling all syncs for " + MainApp.getAuthority())
compensationRange.contains(compensation)
synchronized (mAm) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
assertEquals(ImageRequest.DEFAULT_IMAGE_BACKOFF_MULT,2f,0)
sourceSet.getOutput()
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_ztrmm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
newline(2)
layerType != LAYER_TYPE_SOFTWARE
oauth20AuthenticationRequestServiceSelectionStrategy()
r.nextFloat() < 0.01f
new ProtocolException(sm.getString("upgradeHandler.sendPrefaceFail"),ioe)
IllegalStateException e
mTempDate.get(Calendar.DAY_OF_YEAR) == mMinDate.get(Calendar.DAY_OF_YEAR)
synchronized (mAm) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
UserHandle.myUserId()
delegate.upsert(entity)
latch2.countDown()
LOG.debug("Defaulting JMX to HTTP protocol for  for clusterName = " + clusterName + ", componentName = "+ componentName+ componentName)
settings.getDateAfterFilter()
IllegalStateException expected
Key.class.getName()
isAllowed()
new ArrayList<>(0)
obj.getName() != null && obj.getName().length() > 0
Context.getVisitService().getAllVisitTypes(true)
selenium.isElementPresent("link=Control Panel")
interceptor.doIntercept(invocation)
mConnectionById.containsKey(callId)
REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this,nanos,nanos + duration)
@RequestMapping
otherEvent.getElement()
_portalResiliencyAction.execute(null,_mockHttpServletRequest,_response)
addInfo("URL [" + url + "] is not of type file")
signature != null && function.getParameterList().getParameters().length > 0
cacheCanvas.clipRect(0,0,width,tabHeight)
Slog.d(TAG,"showSaveLocked(): no mStructure")
mUiHandler.removeCallbacks(pae)
readWifiSleepPolicy()
mImm.getEnabledInputMethodList()
mQsDensityContainer.getX()
new IndexShardRoutingTable.Builder(new ShardId(WatchStore.INDEX,0))
nextPos < mBoundPos
row - 0.5f
depthError("modelY")
assertEquals("null",dataFileStream.getMetaString("avro.codec"))
SamlAdapterTestStrategy.uploadSP("http://localhost:8081/auth")
Long.parseLong(attrValue)
9 * 60 * 1000
this.decoder.decode(message.getBody(),elementType,contentType,hints).onErrorMap(this::mapError)
memoryReservation.addAndGet(bytes)
e.printStackTrace(err)
mImmersiveModeConfirmation.onPowerKeyDown(interactive,event.getDownTime(),isImmersiveMode(mLastSystemUiFlags))
trace.error(e,"removing server because of exception")
Mono.subscriberContext()
IoUtils.safeClose(connection,delegate)
addSourcesAndHeadersBuildPhases(target,targetGroup,buildable.getSrcs(),buildable.getPerFileFlags())
type.getDeclaredConstructor()
ColorProperties.getColor("buttonGradientLight")
ListDataSink.get(1)
url.addEncodedArgument(getAttributeValue(nodeAtts,"name"),tempNode.getFirstChild().getNodeValue())
sendMsg(mAudioHandler,MSG_SET_DEVICE_VOLUME,SENDMSG_QUEUE,device,0,streamState,0)
upgrade()
ATLAS_MAP_ENTRY_FIELD_COUNT=3
pos1.getBlockY()
getService().animateCollapseNotifications()
Float.toHexString(f)
calendar.getTimeZone().getRawOffset()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
XContentParserUtils.ensureExpectedToken(XContentParser.Token.START_OBJECT,parser.nextToken(),parser::getTokenLocation)
@API(help="NetworkTestResults",direction=API.Direction.OUTPUT) public TwoDimTableV1 table; 
private String buffer=null; 
role.getChatUser().getAddress().toString()
Item[]
ArraySet<UidRange>
args.length == 0 || (args.length == 1 && args[0].equals("-a"))
E extends Exception
new RuntimeException(e.getMessage(),e)
mAuthorities.valueAt(i)
BTreeRow.unsortedBuilder()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_csyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
knownActions.contains(handler)
selenium.isElementPresent("link=Control Panel")
new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER)
rolesP != null
AnnotationDescription.Loadable<S>
0 - originX
System.currentTimeMillis() + 30000
this(maxFrameLength,lengthFieldOffset,lengthFieldLength,lengthAdjustment,initialBytesToStrip,false); 
globalSecurityDomain != null && !globalSecurityDomain.isEmpty()
Character.isDigit(ch) || ch == '+'
new IndexWriter(runData.getDirectory(),config.get("autocommit",DEFAULT_AUTO_COMMIT),runData.getAnalyzer(),false,IndexWriter.MaxFieldLength.LIMITED)
new TimelineChunk(sourceId,sourceId,metricId,startTime,endTime,timeBytes,sampleBytes,timeBytes.length)
scanFeatures(getKarafFeatureUrl(),"jetty")
minBukkitBuildVersion=731
_portalResiliencyAction.execute(null,_mockHttpServletRequest,_response)
eventDispatcher.loadCanceled(loadable.dataSpec,loadable.type,elapsedRealtimeMs,loadDurationMs,loadable.bytesLoaded())
in.getVersion().onOrAfter(Version.V_5_3_0_UNRELEASED)
1
tgt.grantServiceTicket("ST3",service,new NeverExpiresExpirationPolicy(),true,false)
mView.setVisibility(mFinalVisibility)
ProcessBundleDescriptors.fromExecutableStage("my_stage",stage,dataServer.getApiServiceDescriptor())
executeWrappedCommandProtocolAsync(databaseName,getCommand(),new BsonDocumentCodec(),connection,binding.getReadPreference(),transformer(),wrappedCallback)
testAllocation("test2snippet",2,0,0)
changeInfo.getNewParametersSignatureWithoutParentheses((JetCallableDefinitionUsage<PsiElement>)this)
activityNdx <= topActivityNdx
nativeSetFlags(mNativeObject,sc.mNativeObject,0,SURFACE_OPAQUE)
Base.copyFile(sketchFile,properPdeFile)
return false; 
platformJars.contains(name)
declaration instanceof KtProperty || declaration instanceof KtNamedFunction || declaration instanceof KtTypeAlias
braceStyle == CodeStyleSettings.END_OF_LINE || braceStyle == CodeStyleSettings.NEXT_LINE_IF_WRAPPED
interpreterSetting.getGroup()
Exception e
SinglePartitionReadCommand.create(command.metadata(),command.nowInSec(),command.columnFilter(),command.rowFilter(),command.limits().forShortReadRetry(toQuery),partitionKey,filter)
SystemKeyspace.getLocalHostId()
POOL_LIMIT=100
props.getLong("session.time.to.live",SESSION_TIME_TO_LIVE)
log.debug("Committed all active tasks {} and standby tasks {} in {}ms",taskManager.activeTaskIds(),taskManager.standbyTaskIds(),timerStartedMs - now)
new SpannedString(new CustomSpanned(first),true)
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
@NonNull BluetoothDevice bluetoothDevice
appearance.getFloat(attr,0)
stoppedCaches.values()
intervalFraction * (nextValue - prevValue)
new BuilderRemoteViews(mContext.getApplicationInfo(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
mCaCerts != null && mCaCerts.length > 0
new SearchUICore.SearchResultMatcher(null,null,0,null,100)
selenium.isElementPresent("link=Control Panel")
FLING_DIST_THRESHOLD=120
assertFalse(mDisabled.hasFocus())
pk.getColumnNameInSql()
Log_OC.e(TAG,"Unhandled conflict decision " + decision)
final Callable function=PsiTreeUtil.getParentOfType(element,Callable.class,false); 
mNotificationsUtilsWrapper.mapJsonToFormattableContent(headerArray.getJSONObject(i))
startActivity(intent)
Preferences.navigationVibrationEnabled(context)
given().contentType(ContentType.BINARY).content(inputStream).when().put("/file")
V extends Identifier
assetUri.getAssetName().toLowerCase()
reloadAndWait()
DLStoreUtil.deleteFile(companyId,REPOSITORY_ID,path)
anyLong()
PolylineEncoder.decode(route_geometry,1)
ResourceBundle.getBundle(MESSAGES,defaultLocale,new FileResClassLoader(I18n.class.getClassLoader(),ess))
SwingUtilities.invokeLater(() -> this.markBaseChanged())
mDeviceOwner.getProfileOwnerPackageName(i)
geom.getMaterial().equals(mat)
mp.getResolvedValue()
LOG.warn("Failed to get files from " + baseDirectory.getAbsolutePath())
first > 0 && first < listApp.size()
log.error("Article " + title,es)
Integer.parseInt(value)
b.getMessage()
/**   * Represents the formatter for log message which is used in UTs. Message format is: filePath:lineNo:columnNo: message.  * @author Andrei Selkin  */ public class AuditEventUtFormatter implements AuditEventFormatter {   /**   * Length of all separators.   */   private static final int LENGTH_OF_ALL_SEPARATORS=4;   @Override public String format(  AuditEvent event){     final String fileName=event.getFileName();     final String message=event.getMessage();     final int bufLen=event.getFileName().length() + event.getMessage().length() + LENGTH_OF_ALL_SEPARATORS;     final StringBuilder sb=new StringBuilder(bufLen);     sb.append(fileName).append(':').append(event.getLine());     if (event.getColumn() > 0) {       sb.append(':').append(event.getColumn());     }     sb.append(": ").append(message);     return sb.toString();   } } 
position < 0
/**   * Returns a result of type  {@code T} if the operation succeeds; otherwisethrows an exception.  * @return a result of type {@code T} if the operation succeeds; anexception otherwise  */ public R get() throws Exception ; 
StringBuilder txt=new StringBuilder(); 
TelephonyManager.getDefault().getCurrentPhoneType()
Assert.assertEquals(ReportUtils.calculateFuel(startPosition,endPosition),0.0,0.01)
pos == -1 || pos >= end
servletRequestContext.getOriginalRequest()
old != null
new RuntimeException()
other instanceof ValueLobDb
refresh(true)
directory.mkdirs()
currentResponse != null && currentResponse.getAuthentication() != null
channel.getName().equalsIgnoreCase(actualChatRoom.getIdentifier())
logger.info("defineClass pluginClass:{} cl:{}",className,classLoader)
DarkIconDispatcher.getTint(mTintArea,mWifiActivity,mIconTint)
Thread.sleep(1100)
into.get(j)
FileUtils.setPermissions(mPackageListFilename,0640,SYSTEM_UID,PACKAGE_INFO_GID)
tr("Error while setting serial port parameters: {0} {1} {2} {3}")
