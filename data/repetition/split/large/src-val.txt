id=78
mHandler.removeCallbacks(pae)
new FeaturesConfig().setExperimentalSyntaxEnabled(true).setDistributedIndexJoinsEnabled(true).setDistributedJoinsEnabled(false).setRedistributeWrites(false).setOptimizeMetadataQueries(true).setOptimizeHashGeneration(false).setOptimizeSingleDistinct(false).setPushTableWriteThroughUnion(true)
stores.contains(name)
localNodeData.dcLocalAddress.toString()
message.getContact()
assertEquals(codecFactory.getCodec().toString(),(CodecFactory.fromString(codec).toString()))
logger.error("Exception mapping responses to requests.",e)
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) != PackageManager.SIGNATURE_MATCH
planRouteContext.getSnappedMode().getSmallIconDark()
appWindowToken == null
(System.currentTimeMillis() - lastAccessedTime.getTime()) > timeout
conf.getSearchBaseURL()
mRepeat > 1
file != null
hostConfig.getCpuPeriod()
DefaultCacheKeysFactory.createNaturalIdKey(naturalIdValues,persister,session)
context.getVariableResolver().resolve(bsz)
!hasDisplayList
PFLAG3_FITTING_SYSTEM_WINDOWS
appName != null
type.getConstructor()
reader.skipCheckInt(CHUNK_STRINGPOOL_TYPE)
nativePostCreate1(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
FileDownloadUtils.formatString("range[%d-%d)",startOffset,endOffset)
Integer.valueOf(taskIdStr)
Exception e
parent == null
new IndexShardRoutingTable.Builder(new ShardId(indexName,0),false)
pw.println(ps.getInstantApp(user.id))
allowPrivate.isNull()
ai.enabledSetting == PackageManager.COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED
Runtime.getRuntime().totalMemory()
i=0
LOG.info("Cannot access storage directory " + rootPath,ex)
new WorldPoint(2447,3418,0)
getParameterValues(request,param)
final LongAdder cnt=new LongAdder(); 
precision == null
logger.info("[v] Sync complete! The best block: " + bestBlock.getShortDescr())
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
GeneratedJavaParser::Type
selenium.isVisible("link=Control Panel")
configProps.get(THREAD_SAFE_CLIENT_PROP)
{1,0,0,0,0,0,1,0,0,0}
((NioEndpoint)getEndpoint()).getThreadPriority()
userActivity(SystemClock.uptimeMillis(),false)
LogUtils.initializeDefaultConsoleLogger()
accessible && member instanceof PsiClass
getWidth()
interfaces != null
Beans.newDuration(casProperties.getAuthn().getOauth().getRefreshToken().getTimeToKillInSeconds()).toMillis()
this.maxSessionIdleTimeout=maxSessionIdleTimeout
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
FileUtil.loadFile(new File(getTestDataPath() + "/" + getTreeFileName()))
this.categoryWithApiModel=categoryWithApiModel
shutdown(app)
convertAnnotation(pkgAnnotation)
random.nextInt(64)
List<IConfigurationListener>
LOG.info(getQueueName() + " user=" + userName+ " used="+ queueUsage.getUsed()+ " numContainers="+ numContainers+ " headroom = "+ application.getHeadroom()+ " user-resources="+ user.getUsed())
defaultDDLFilename()
mPulseCallback.onPulseFinished()
new NetworkRequestHandler.ResponseException(0,504)
indexNameExpressionResolver().concreteIndices(state,IndicesOptions.lenientExpandOpen(),HistoryStore.INDEX_PREFIX + "*")
logger_.debug("Skipping delivery of hint for deleted columnfamily",e)
new IndexWriter(this.__test_dir,new org.apache.lucene.analysis.standard.StandardAnalyzer(),false)
Exception ex
TestPackage.foo(10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
VERSION=2
sr.makeNextStartId()
Thread.sleep(5000)
flushStatements(false)
request.paramAsBoolean("v",false)
pathToFileInProject.indexOf("error-prone")
sizeNeeded >= items.length
CacheData<AllTypes>
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
dpToPx(32f)
a.getInt(R.styleable.BootstrapButton_android_layout_width,0)
/**   * The location of the child within the map view.  */ public GeoPoint geoPoint; 
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class QueueBasicLocalTest extends QueueBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } 
MESSAGE_TUNE_DURATION_THRESHOLD_MILLIS=1000
buffer.rewind()
RuntimeException e
DexFile.getDexOptNeeded(classPathElement,instructionSet,"speed",false)
new LinearLayoutManager(mContext)
typeSerializer.getClass()
selenium.isVisible("link=Control Panel")
String.format("EsRecordWriter instance [%s] assigned to [%s]",uri)
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
log.info("Not in OSGi: using plexus based maven parser")
new WorldPoint(3026,3629,0)
eKernel.length == 2
PortalSettingWebUpgrade.class
!tmpDataDirs.containsKey(id)
hongbaoContent == null
selenium.isVisible("link=Control Panel")
Float.valueOf(strings[i])
mActiveStreamType == -1
request.params()
return allChildPermissions; 
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
bucket.exists()
ObjectConverter.toBoolean(scriptValue)
specWidthMode == MeasureSpec.EXACTLY
log.warn("Hooking new default : onErrorDropped")
compressed.capacity()
mKey.equals(other.mKey)
busHandler.pushExpectedEvents(NextEvent.PHASE,NextEvent.PHASE,NextEvent.INVOICE,NextEvent.NULL_INVOICE,NextEvent.NULL_INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
closeCode < 1002
m.getCurrentJobWaitTime()
mJobs.get(i)
getPath("InputPackageDeclarationDiffDirectoryAtParent.java")
message.indexOf(templateEnd,start)
owner == null
getContext().enforceCallingOrSelfPermission(android.Manifest.permission.CHANGE_OVERLAY_PACKAGES,message)
native_get_videoeditor_export_profile(vidCodec)
myShowWindowAlarm.addRequest(new Runnable(){   public void run(){     if (isRunning()) {       showDialog();       final DialogWrapper popup=myDialog.myPopup;       if (popup != null) {         myFocusTrackback.onShown(popup.getPreferredFocusedComponent());       }     }   } } ,0,getModalityState())
leftTuple.setStagePrevious(leftTuple)
Context.getPersonService().getRelationships(Context.getPersonService().getPerson(personId))
return false; 
reactiveType == null
from >= to
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
dest.writeLong(mSubId)
sender().send(new StashIgnore(new SequenceActor.UpdateProcessed()),1500)
logger.warn("gave up waiting for query reply from device {}",m_address)
ir.mHandler != null
database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId())
dist < bestdist
return false; 
dialect.supportsQuotedMixedCase()
request.charset != null
upload1.getUploadEndTimestamp() == 0
DEBUG=true
dest.writeLong(mSubId)
npmAnalyzerPlugin.getBowerVersionFilter(version)
disableForUser(what,token,pkg,mCurrentUserId)
performDexOpt(pkg.packageName,null,false,causeFirstBoot ? REASON_FIRST_BOOT : REASON_BOOT,false)
mHandler == null
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) == 0
new PeepholeSubstituteAlternateSyntax(false)
ConverterRegistry.getInstance().convert(rowType,value)
@NotNull
super.createToolbarActions()
beforeCaret.getText().indexOf('\\') > 0
m_tagFactory.createTag(testClass,a,annotationClass,m_transformer)
Long.valueOf(value)
Double.toString(arr[doc])
sDefaults.putBoolean(KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL,true)
event.getX()
mOverviewOpenedCountSinceQuickScrubTipDismiss == QUICK_SCRUB_SHOW_ON_OVERVIEW_OPENED_COUNT
stateChangedLatch.await(1,TimeUnit.SECONDS)
Throwable t
structuralLock.isLocked()
mContext.startActivity(intent)
config.getServletContext()
mService.reassociate(mContext.getOpPackageName())
LOGGER.info("Invalid number format for side pane component '" + componentName + "'.",e)
configuration.getEntityStateListener().isEmpty()
mGpsListener != null
timeout=2000000
note == null
typeSettingsProperties.toSortedString()
Error e
getMockEndpoint("mock:start").expectedMinimumMessageCount(4)
newExecutionInput().requestString(parameters.getQuery())
log.tracef("%s finished request %d",ManagementChannel.this)
new RemoteViews(mContext.getPackageName(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
author.getIsChatOwner()
CharSequence message
buttonWidth.setPrefSize(200,30)
p.getDoubleValue()
SURFACE_SELECTOR=25
assertEquals(1,tree.getSelectionCount())
uri.substring(3,pathend)
equalTo(11)
(pkg.applicationInfo.flags & ApplicationInfo.FLAG_HAS_CODE) != 0
Throwable ignored
winAnimator.mSurfaceController == null
migrateXmlString(content,22)
new Timespan(10,Timespan.TimeUnit.SECOND)
new IndexWriter(dir,new WhitespaceAnalyzer())
lock.isLocked()
globalMappings.differentiate(delta,removedPaths,successfullyCompiled,allCompiledFiles,allAffectedFiles)
contains="doIntrinsicReceiverCachedLLVMTruffleObjectCached"
IllegalStateException e
log.error("Cannot retrieve roles for {} from {} due to {}",authenticatedUser,ab.getType(),e.toString())
/**   * {@inheritDoc}  */ public Comparable getFrom(){   return Integer.valueOf(from); } 
new UnsupportedOperationException("ExifInterface only supports saving attributes on JPEG formats.")
activityType == ACTIVITY_TYPE_RECENTS
Log.wtf(TAG,"This will become an error",ex)
method.getName().equals(writeMethodToUse.getName()) && !method.equals(writeMethodToUse) && !method.isBridge()
filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))
field.createField(fieldType.indexedToReadable((String)sortValue),0.0f)
selenium.isVisible("link=Control Panel")
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
Futures.transform(executionClients.getRemoteExecutionService().execute(actionDigest),result -> {   executingScope.close();   return result; } )
Assert.assertEquals(2,JournalFolderFinderUtil.countF_A_ByG_F(_group.getGroupId(),_folder1.getFolderId(),queryDefinition))
Math.min(clientCount,1)
position > lastPos
checkPojoMetaClass()
new RuntimeException("Unable to find className in " + namespaceClassName)
new Message("XML_STREAM_EXC",LOG)
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
mHandler.removeCallbacks(pae)
mClearPaint.setColor(0xff00ff00)
return true; 
quad.toUnpacked()
!FileUtil.pathsEqual(configuration.getFilePath(),file.getVirtualFile().getPath())
@Nullable
getService().animateCollapse()
new Message("START_UP_SERVER_FAILED_MSG",LOG,e.getMessage())
c.getDeclaredConstructors()
convert(BigDecimal.class,defaultValue,defaultValue)
accessor.value()
Long.valueOf(val)
WrapUtil.<Object>toList("src/main/java","src/main/resources")
CharSequence message
ctx.writeAndFlush(msg,promise)
selenium.isVisible("link=Control Panel")
return false; 
new IndexWriter(dir,new StandardAnalyzer(),true)
layer.setInput(input)
mContext.sendStickyBroadcast(mStorageFullIntent)
routes.InputsResource()
ft.replace(R.id.layout_fragment_container,commentFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commit()
d1.isOutside()
win.mRemoved || !win.mHasSurface
request.getLocalAddr()
text.contains("://")
deltaY > 0
generatorConfig.getDaoPackage()
param.setResult(xparam.getThrowable())
ig0.context().query().dynamicTableCreate(SCHEMA_NAME,getEntity(),TMPL_NAME,true)
Thread.sleep(5000)
mPackageManager.hasSystemFeature(PackageManager.FEATURE_APP_WIDGETS)
Set<Long>
log.error("{} is missing from the session and can not be retrieved.",OAuthConstants.OAUTH20_CALLBACKURL)
dlFileEntryService.getFileEntries(groupId,folderId)
!DNSUtil.isNameCoveredByPattern(dnsId,identity)
mRedrawClip.isEmpty()
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1).learningRate(2e-3)
deadline < now
typeUtil.getName(type)
endBounds.width()
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
object=this
lp.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER
filesizeMb * 1024 * 1024
http2c.setInitialStreamSendWindow(initialStreamSendWindow)
sPos > 0
lineArgs[3]
mLteSignalStrength > 63
StringBuffer sb=new StringBuffer(); 
LOG.info(rootPath + "is not a directory")
typeName.equalsIgnoreCase("Integer")
(T)this
new WriteConcern(getSecondaryCount(testHosts) + 1)
mTfs.createFile(new TachyonURI("/root/testFile1"))
getLocationEnabled()
winAnimator.setSurfaceBoundariesLocked(recoveringMemory)
DEFAULT_PORT=5432
configurable.reset()
buffer.nextValue(info.type,info.meta)
ctx.alloc().heapBuffer()
public static void main(String[] args) throws Throwable {   Bootstrap.main(args); } 
newValue.getReceivedNumber() == Integer.valueOf(SettingUtility.getMsgCount())
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
moduleComponentSelector.getName()
issuer.equals(accessTokenV.getTokenIssuer())
err != 0
Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage("helloForNone"))
? extends Exception
REVISION=10803
lhs.getScore()
new WorldPoint(2972,3489,0)
a.getNameSelected()
LOGGER.info("Application {} refreshed",newApp)
DbException.get(ErrorCode.OBJECT_CLOSED)
e.getMessage()
IllegalStateException e
!isRuleBasedFormat || stripped instanceof PsiThrowStatement
assertCompletionVariants(m,"1")
"" + docCount
e != null
DumpUtils.checkDumpPermission(getContext(),TAG,pw)
attributes.getFlags()
Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
((-t + 2) * t - 1) * t / 2f
mPolicy != null
assertEquals(3,resources.size())
mGoogleApiConnectionTask.setResult(bundle)
mOpenStreetMapView.onDraw(canvas)
myAfterFile.getName()
id=19907
getRequiresCode()
tracesFile.mkdirs()
Math.max(values().length - 1,value)
c == interfaceClass
assertCompletionVariants(myProjectPom)
StringUtils.equals(filter.getKey(),RuleNormalizer.RuleField.LANGUAGE.field())
lc + pb
type.getConstructor()
onDetachedFromWindow()
testError(js,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
FileUtils.getFilesDir(testContext,"test-screenshots")
file != null
glyph.setSizeRatio(16)
checkPojoMetaClass()
segments == null
LOG.isDebugEnabled()
op.z()
selenium.isVisible("link=Control Panel")
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
DumpUtils.checkDumpPermission(mContext,TAG,pw)
target.getClass().getDeclaredMethod(getterName,EMPTY_CLASS_ARRAY)
moveCursorToRow(pac.getRow())
HashSet<Item>
!BitUtil.check(status,10)
selenium.isVisible("link=Control Panel")
props.get(PropsKeys.TRANSACTIONAL_CACHE_NAMES)
cs[c].set0(r,rng.nextFloat() > _createFrame.binary_ones_fraction ? 0 : 1)
v.isString() && meta.isEnclosureForced()
message.indexOf(templateEnd,start)
Flux.fromIterable(this.handlerMappings).concatMap(mapping -> mapping.getHandler(exchange)).next().otherwiseIfEmpty(Mono.error(HANDLER_NOT_FOUND_EXCEPTION))
apnContext.getWaitngApns()
mPulseCallback.onPulseFinished()
@Override public Cell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   return new TagRewriteCell(clonedBaseCell,this.tags); } 
mSyncStatus.get(i)
PendingIntent.getActivity(ams.mContext,0,runningIntent,PendingIntent.FLAG_UPDATE_CURRENT)
testSame(js,js)
logger.info("Session created")
cc.isEnabled()
String tempDataPathString=tempNoCluster.toAbsolutePath().toString(); 
watch.stop()
telephony.getVoiceMessageCountForSubscriber(subId)
Q.row(j).add(delta_qj.scale(lRate))
session.save(model)
new IndexOutOfBoundsException()
_invokerFilterHelper.destroy()
public void setEnablePush(long enablePush) throws ConnectionError {   if (enablePush > 1) {     throw new ConnectionError(sm.getString("connectionSettings.enablePushInvalid",Long.toString(enablePush)),Http2Error.PROTOCOL_ERROR);   }   this.enablePush=(enablePush == 1); } 
timeUnit.toSeconds(timeToLive)
checkManageUsersPermission("getting profiles related to user " + userId)
LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file)
(pInfo.applicationInfo.flags & (ApplicationInfo.FLAG_SYSTEM | ApplicationInfo.FLAG_UPDATED_SYSTEM_APP)) == 0
enabled=false
doTestNotIndexed(type)
Long.valueOf(val)
entry.getKey()
log.debug("Error while closing command context",exception)
client.setIgnoreExternals(true)
Futures.successfulAsList(resultList)
insets.left == 0
b < 'F'
logger.info(String.format("performing disconnect (%s)",this.nsp))
sendMessage(CMD_STOP_AP)
producerFlowControl=true
CHECKIN_VERSION=28
a.getTranslation()
mMime.toLowerCase().startsWith("video/")
LOG.error("Could not correlate acknowledgment with dispatched message: " + ack)
entry.notification.clone()
myParameterNameField.getComponent()
categoryMap.get(category.getParentId())
mime == null
1 << quotientBits
GroupFinderUtil.findByLayouts(TestPropsValues.getCompanyId(),parentGroupId,true,-1,-1)
selenium.isVisible("link=Control Panel")
query.getInt(7)
"DependencyReport".equals(scriptName) || "Upgrade".equals(scriptName)
Exception exc
final WorkingMemory workingMemory=ruleBase.newStatefulSession(); 
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
@Override public final DivideBy andNot(Condition c){   return and(c.not()); } 
i + skip < length
loadRunnable instanceof LongTask
assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals("there should be only one registration",1,regs1.size());     assertEquals("there should be only one registration",1,regs2.size());   } } ,10)
unquotedValue.substring(idx + AS_CONNECTOR_WITH_SPACES.length(),unquotedValue.length())
result.getException() != null
loaded.getLoaded().getConstructor()
new EmbeddedKafkaCluster(1)
assertFalse(strayChild.isSafelyReplaceableBy(newChild))
GL.glPolygonOffsetEXT(factor,units)
mMessageList.getId()
ci.getConduit(info)
@NotNull
new StringLengthValidator(1,Integer.MAX_VALUE,true,true)
sharedElements.remove(localName)
mTargetNames != null
seconds * 1000
SuiteResult sr=(SuiteResult)suiteResults.get(propertyFileName); 
VERSION=5
configurator.setExcludedImportantEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses")
mAccount.hasSpamFolder()
dynamicType.getLoaded().getConstructor()
/**   * Obtain the property descriptor for a specific property of the wrapped object.  * @param propertyName the property to obtain the descriptor for(may be a nested path, but no indexed/mapped property)  * @return the property descriptor for the specified property  * @throws InvalidPropertyException if there is no such property  */ PropertyDescriptor getPropertyDescriptor(String propertyName) throws BeansException ; 
Integer.valueOf(attrValue)
JZVideoPlayerManager.getCurrentJzvd().currentState == JZVideoPlayer.CURRENT_STATE_PREPARING
log.error("Unknown {} : {}",OAuthConstants.CLIENT_ID,clientId)
sb.index() - 2
new Paint()
verify(decoder.decode(null,null,ChannelBuffers.wrappedBuffer(ChannelBufferTools.convertArray(new int[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x0c,0x01,0x06,0x00,0x00,0x00,0x25,0x23,0x46,0x4d,0x32,0x3d,0x32,0x36,0x32,0x30,0x33,0x32,0x37,0x36,0x31,0x37,0x32,0x31,0x33,0x39,0x36,0x2c,0x32,0x36,0x32,0x30,0x33,0x2c,0x30,0x37,0x2e,0x30,0x32,0x2e,0x30,0x35,0x0d,0x0a,0x01,0x00,0x00,0x9a,0x2e}))))
queue.notify()
String.format("BUG: %s changed score during rematch: %d -> %d",score,newNetwork.getCurrentScore())
Objects.equals(builtInVersion,configuredVersion)
validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element,validatedElements,valid)
batteryService.isBatteryLow()
mLineageStore.requestFilePersistence(fileId)
openSession.close()
getResource(exchange).otherwiseIfEmpty(Mono.defer(() -> {   logger.trace("No matching resource found - returning 404");   exchange.getResponse().setStatusCode(HttpStatus.NOT_FOUND);   return Mono.empty(); } ))
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallbackExt mBluetoothGattServerCallback=new IBluetoothGattServerCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
!isSameGroup(current)
XmppStringUtils.parseBareAddress(user)
new ServerSparseDoubleRow(rowId,startCol,endCol)
mAlpha.end()
ConditionalOnEnablednHealthIndicator.class
executeRunnableDismissingKeyguard(runnable,null,false,true)
fraction * (nextValue - prevValue)
adapter.item(R.string.layer_recordings).selected(SHOW_RECORDINGS.get() ? 1 : 0).icons(R.drawable.ic_action_audio_dark,R.drawable.ic_action_audio_light).listen(listener).position(7)
myFindDialog.setModal(false)
new WorldPoint(3033,3311,0)
Math.max(DataModule.DISK_CACHE_SIZE,Integer.MAX_VALUE)
ORIENTATION_SETTLE_TIME_MS=100
checkPojoMetaClass()
new AMRuntimeException.IOException(e)
new BorderLayout()
mMountTable.resolve(getPath(lastInode)).getPath()
params.getInt("numPages")
return false; 
Preferences.getBoolean(R.string.p_rmd_snooze_dialog,true)
result.bitmap != null
rightExpression == null
message.addHeader("Message-ID",cursor.getString(12))
public Void execute(Context context){   KieSession ksession=((KnowledgeCommandContext)context).getKieSession();   if (this.outIdentifier != null) {     ((StatefulKnowledgeSessionImpl)ksession).getExecutionResult().getResults().put(this.outIdentifier,object);   }   ksession.setGlobal(this.identifier,this.object);   return null; } 
LOGGER.info(msg.apply())
addEdge(i3,i0,false,true)
dest.writeLong(mSubId)
statusBar.setRedraw(false)
referenceStepMeta != null
distinctValues.put(distinct,distinct)
mAnimator.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
new DrmInitData(DATA_1,DATA_1)
row.length < 0
getWriter().println("FAILED")
getReplicaProps(collection,shardId,thisCoreNodeName)
outState.putIntegerArrayList(KEY_REQUESTED_PASSWORD,mOldSitesIDs)
return true; 
params.remove(key)
construct(ignoredList,mapType,staticValueType,vts,keySerializer,valueSerializer)
surroundWithTag=true
mWindowManager.getDefaultDisplay().getMetrics(metrics)
Integer.parseInt(compressionLevel)
ConnectorRecordSetProvider.class
annotation.names()
invoiceBalance.divide(BigDecimal.TEN)
hostsInPool.decrementAndGet()
classMapper.lookupName(wrap.testPlan.getClass())
return 1; 
List<Stats>
setUseSynchronousMode(true)
IndexerRegistryUtil.getIndexer(className)
MIN_CONNECTIVITY_COUNT=2
TestPackage.getFoo("")
assertEquals(6,beanCount)
res.setBytes(100)
service.asBinder().isBinderAlive()
id=15830
CaseInsensitiveStringHashingStrategy.INSTANCE.hashCode()
GregorianGregorianCalendar.getInstance()
gatherDisableActionsLocked(userId)
this.toString()
assertEquals(6,databindings.size())
entity.func_70056_a(packet.scaledX,packet.scaledY,packet.scaledZ,packet.scaledYaw,packet.scaledPitch,1)
CompletableFuture<Boolean>
dbIdsRepository.getComponentId(component)
request.getRequestURI()
27 * ClassSize.REFERENCE
selenium.isVisible("link=Control Panel")
pos1.getBlockX()
startBounds.width()
case QUIT: 
mTestStream.getBytesFlushed()
log.error(sm.getString("coyoteConnector.protocolHandlerInstantiationFailed",e))
mentionsState()
super.getHibernateTemplate().executeFind(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Example example=Example.create(arg).ignoreCase();     Criteria crit=session.createCriteria(clazz);     crit.add(example);     List results=crit.list();     if (results.size() > 0)     return results.get(0);     return null;   } } )
nodes.setInt(edgePointer + E_ADDITIONAL,value)
PASSWORD_SCRYPT_N=13
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
UISettings.getInstance().HIDE_TOOL_STRIPES && !PropertiesComponent.getInstance().isTrueValue(key)
mapCache1.addAndGet("4",1L)
" firstActiveTime=" + lastActiveTime
Throwable t
logger.debug("defineClass pluginClass:{} cl:{}",className,classLoader)
new LinkedList<>(0)
DefaultCacheKeysFactory.getNaturalIdValues(cacheKey)
f.getAttrs().getATime()
Arrays.<Object>asList(ipFinder)
@Nullable
client.get(getAbsoluteUrl(url),params,responseHandler)
FastMath.max(origin,num.floatValue())
value.isEmpty()
headers.setValue("Vary")
future1.get(1,TimeUnit.SECONDS)
new IncorrectOperationException()
WebAppResource.class
log.warn("No slayer task for {} in the Task database",taskName)
Exception e
wxService.tagAddUsers(tagId,userIds)
TCN_REQUIRED_MINOR * 100
return 10_000; 
Assert.assertEquals("Received string: " + baos.toShortString(),100000000,baos.size())
GroovyJavaSecurityTestsSuite.suite()
friendlyURL.startsWith(layout.getFriendlyURL(locale))
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
requestData.setText(element.getPropertyAsString(TCPSampler.REQUEST))
ScanResult.is24GHz(frequency)
AtmosphereResponse.create()
DEBUG=true
serializer.statementResult(mockExecutionResult(map("node",node[0],"rel",rel[0],"path",path,"map",map("n1",node[1],"r1",rel[1]))),ResultDataContent.rest)
configurator.setExcludedEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses","*Public*","*Secret*","*$*")
hour != 0
tw.release()
mAppToken.hasContentToDisplay()
ServletUtil.prepareParameters(new String[]{"",null,"   "},true,true,true,false)
mMncStr == null
pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA)
new CallbackStub()
StringBuffer buffer=new StringBuffer(); 
Long.valueOf(dateStr)
DEBUG_STARTING_WINDOW=false
@NonNull
stopwatch.elapsedMillis()
nextNextInfo.distanceTo < TURN_IN_DISTANCE
maximumNumber < numberOfContainers
this.clsName.equals(name)
contentLength < 0
currentType != globalType
IndexReader.open(benchmark.getRunData().getDirectory(),true)
consumers.isEmpty()
commitPackageSettings(pkg,pkgSetting,user,policyFlags,(policyFlags & PackageParser.PARSE_CHATTY) != 0)
BuildEventStreamProtos.BuildStarted.newBuilder().setUuid(request.getId().toString()).setStartTimeMilis(request.getStartTime())
ProcessBundleDescriptors.fromExecutableStage("my_stage",stage,components,dataServer.getApiServiceDescriptor())
TelephonyManager.getDefault().getPhoneType()
SystemClock.nanoTime()
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers.kt")
new TBinaryProtocol(transport,false,false)
tokens.toString()
set(object,value.intValue())
selenium.isVisible("link=Control Panel")
m.getClass()
new UnsupportedOperationException()
new Paint(Paint.ANTI_ALIAS_FLAG)
lock.isLocked()
new Vector2i(availableHeight,areaHint.x)
from > to
typeConverter.convertTo(XMLStreamReader.class,stream)
serializer.serializeForInsert(metadata,entity,columns,values,subQuery)
changeEntitlementAndCheckForCompletion(bpEntitlement,productName,BillingPeriod.ANNUAL,BillingActionPolicy.IMMEDIATE,NextEvent.CHANGE,NextEvent.INVOICE,NextEvent.INVOICE_ADJUSTMENT)
logger.info(String.format("calling ack %s with %s",packet.id,packet.data))
Exception e
getCurrentProjectViewPane()
floatVal(doc)
nai.networkCapabilities.satisfiedByNetworkCapabilities(networkCapabilities)
error.isNetworkError()
new Error(name)
synchronized (this) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
Math.max(titleRight,subtitleRight)
flexItem.getMarginStart()
order=30
postAgg.getName().equals(metricName)
mIpSecService.reserveSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
session == null
checkPojoMetaClass()
targetY - diffY
fieldMeta2.getString(field)
e.getKeyChar()
JvmDeclarationOriginKt.OtherOrigin(myClass,function)
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY())
indexOf(source,ch,fromIndex)
/**   * {@code "content-security-policy"}  */ public static final CharSequence CONTENT_SECURITY_POLICY=new AsciiString("content-security-policy"); 
m2.getName().equals("getAttributes") & !m1.getName().equals(m2.getName())
result.expectedMessageCount(3)
RoleLocalServiceUtil.getRole(companyId,name)
Validator.isNull(_uploadMessage)
tempPinnedTaskBounds != null
props.contains("log.adapter")
classNode.hasDeclaredMethod(mixinMethod.getName(),mixinMethod.getParameters())
bucket.exists()
Long count=itr.next(); 
getPath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
val != null
parameter.toString()
DpmTestUtils.newRestrictions(UserManager.DISALLOW_ADD_USER)
public TokenStream create(Reader input){   return new LowerCaseTokenizer(input); } 
logger.error("Couldn't calculate the target package! Using default: " + DEFAULT_PACKAGE)
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
LOG.error("Download " + fileURI + " in "+ toFile)
mContext.sendStickyBroadcast(mStorageFullIntent)
arg1 == 0
mBatteryStatus=BATTERY_STATUS_FULL
activity == null
input.slices()
mHandler.removeCallbacks(pae)
timeout < 0
idx > 0
settingsResources.get(urlKey)
client.getVertx().setTimer(1,id -> checkExpired())
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
Slog.wtf(TAG,"Unknown restriction: " + restriction)
activityNdx < topActivityNdx
activityNdx < topActivityNdx
mDisplayContent.getSplitScreenPrimaryStack()
new String(decryptedByteArray)
new NullPointerException("permission cannot be null or empty")
ClassFileVersion.forCurrentJavaVersion()
snapshotTypes != null || snapshotTypes.length > 0
URI != null
onRotationLockChanged()
StatBuckets.prettyUptime(secs)
new ShardRouting(index,shardId,currentNodeId,relocatingNodeId,null,primary,state,version,null,true)
this.repos
Integer.valueOf(nextArgRequired())
DumpUtils.checkDumpPermission(mActivityManagerService.mContext,"meminfo",pw)
logger.error("Field sorting failed, couldn't find table spec: " + model.getSimpleName())
super.onDetachedFromWindow()
selenium.isVisible("link=Control Panel")
NestedSetBuilder.stableOrder()
0 != mNetworkCapabilities
loaded.getLoaded().getConstructor()
mSmallBatteryDevice ? 3 : 30
mPostKeyguardExitAnimation.hasEnded()
user.getCompanyId()
WordPress.getCurrentBlog().getRemoteBlogId()
lastPos != mTargetPos
entry.getKey().equals(name)
selenium.isVisible("link=Control Panel")
r != null
mActiveAgents.valueAt(i)
d.split(" ",3)
mAttributes.getFlags()
TransactionException e
logger.error(cause)
IndexReader.open(benchmark.getRunData().getDirectory(),true)
Lifecycle.BEFORE_DESTROY_EVENT.endsWith(type)
assertEquals(5,beanCount)
synchronized (this) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
new SystemAudioActionFromTv(tv(),mAvrAddress,true)
entry.notification.clone()
webRequest.getNativeRequest(HttpServletResponse.class)
callSite != null
Math.log(docCount)
Double.isNaN(longitude)
type.getConstructor()
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers2.kt")
interactor.startConfirmation(packageName,callback,mCommand,mArgs)
mMediaMetadataRetriever.captureFrame()
System.nanoTime()
Period.years(lExpr.getIntervalYear())
tracesFile.mkdirs()
createStatement()
getConfig().getInt(ADVANCEDUI_OPTION,1)
message.getMessageId().getDataLocator()
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT).iterations(1).learningRate(2e-3)
Matchers.anyInt()
testPackage.getFormattedDuration()
mHandler.removeCallbacks(pae)
FORBIDDEN_INDEX_SETTING.contains(name)
action.new ReroutePhase(request,listener)
mAm.addSharedAccountsFromParentUser(userId,parentUserId)
loaded.getLoaded().getConstructor()
allowStateLoss
i.getName().getName()
cursor != null
resultCode == ResultCodes.OK
Component component
getLocalization(xml,languageId)
SystemProperties.getBoolean("debug.choreographer.animdraw",true)
id > holdingColor.length
selenium.isVisible("link=Control Panel")
bitmap == null
fluid != null
newSelection >= 0
com.android.internal.util.DumpUtils.checkDumpPermission(mAm.mContext,TAG,pw)
jdbcTemplate.queryForInt("SELECT COUNT(0) FROM " + tableName)
30 * 60 * 1000
StatBuckets.prettyUptime(secs)
new DebugFlag("debug.optimize_startinput")
new Paint(Paint.ANTI_ALIAS_FLAG)
getProperty().contains("spark.yarn.keytab")
floatBuffer.clear()
BCFactoryBlocks.pump != null
assertCompletionVariants(myProjectPom)
callContactItem.setName(detail.getContactAddress())
notifyItemRangeChanged(positionStart,itemCount)
ListeningPoint.TCP.equalsIgnoreCase(transport)
protocolProvider.getAccountID().getAccountAddress()
loadAnimator(fragment,transition,true,transitionStyle)
mTextUtil.nextRandomParagraph(WORD_LENGTH,NO_STYLE_TEXT)
Integer.valueOf(3)
trimmedLine.endsWith(delimiter)
Integer.valueOf(System.getProperty("cassandra.memtable_row_overhead_computation_step","100000"))
e.getMessage()
fis != null
assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions("-Xlint:-processing")
logger.info(String.format("emitting event %s",args))
Long.valueOf(id)
new Paint(Paint.ANTI_ALIAS_FLAG)
layout.getGroup()
nodeEngine.getService(LockService.SERVICE_NAME)
assertPhoneNumberEqual("123123","0123123",false)
MakeGLMModelHandler.HoTDAAWWG(fr,interactions,useAll,standardize,false,skipMissing)
Simple.of(SkylarkDict.class)
callCountDirectInlined++
editor.waitAllMarkersInvisibility(INFO)
logger.info(String.format("server disconnect (%s)",this.nsp))
selenium.isVisible("link=Site Name")
new SctpMessage(streamIdentifier,protocolIdentifier,unordered,msg.retain())
lock.isLocked()
object2StaticBuffer(value)
/**   * SSH port.  */ private String port="2000"; 
lp.onResolveLayoutDirection(layoutDirection)
mItems.set(toPosition - preItemCount,item)
listView.setSelection(checkedItem)
grantRuntimePermissionsLPw(contactsPackage,ACCOUNTS_PERMISSIONS,userId)
SAMPLE_RATE_HZ_MAX=48000
display.getMetrics(dm)
final DomAnchorImpl parent
verify(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
list.getFirst()
mLockMode == InodeTree.LockMode.READ
AppLog.v(T.NOTIFS,"GCM Error: " + errorId)
winAnimator.mSurfaceController == null
"Use " + ATT_LOGOUT_URL + " or "+ ATT_LOGOUT_HANDLER+ ", but not both"
sourceWidth > 0
new ArrayList<>()
LOG.error("Failed to freeSpace: No StorageDirView has enough capacity of {} bytes",availableBytes)
max.getBlockY()
mGpsListener != null
Exception ignored
CompanyLocalService.class
!justBootedUp
origin.realComponent().doubleValue() > other
stts.readUnsignedIntToInt()
this.sslHostnameValidationEnabled
return 7; 
RAMDirectory dir=new RAMDirectory(); 
synchronized (this) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
Objects.equals(value,defaultValue)
new DefaultImageRaster(image,0)
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
response.getStatusCode()
j == BinaryMapAddressReaderAdapter.POSTCODES_TYPE
logger.error(e)
locationServicesStatus.isLocationProviderEnabled()
mOuterRadius * 1.0f
LanguageTest.class
parentJob.isStopped()
telephony.getLteOnCdmaModeForSubscriber(subId)
config.isAnimateWater()
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,methodHandleLoaded))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
new CountDownLatch(3)
view.getContext().getPackageName()
metadata.getFaceRectangles()
currentResponse.getAuthentication() != null
result == Long.MAX_VALUE
getAllprojects()
UserNotificationEventLocalServiceUtil.getDeliveredUserNotificationEventsCount(themeDisplay.getUserId(),UserNotificationDeliveryConstants.TYPE_WEBSITE,actionable)
GraphCommit<CommitId>
public SELF setStandardError(OutputStream outputStream){   operationParamsBuilder.setStderr(outputStream);   return getThis(); } 
mGpsListener != null
mContext.checkCallingPermission(android.Manifest.permission.READ_PRIVILEGED_PHONE_STATE)
parent instanceof AppWidgetHostView
mPostKeyguardExitAnimation.hasEnded()
Thread.sleep(100)
Long.valueOf(args[ai])
desktopSharingButton.setPressedImage(ImageLoader.getImage(ImageLoader.DESKTOP_BUTTON_SMALL_PRESSED))
Boolean.valueOf(getOptional("kylin.query.enable-dict-enumerator","false"))
Instrument.create(null,new AdvancedInstrumentRootFactory(){   @Override public AdvancedInstrumentRoot createInstrumentRoot(  Probe probe,  Node node){     return new AdvancedInstrumentRoot(){       public String instrumentationInfo(){         return null;       }       @Override public Object executeRoot(      Node n,      VirtualFrame frame){         return null;       }     } ;   } } ,"test AdvancedInstrument")
FUNCTOR_PROCESS_DELAY=2
Math.min(leftLen,rightLen)
config.getMaxElementsInMemory()
object.getDatabase()
entry.get() == null
new MaterialDialog.Builder(getActivity()).title(R.string.about).positiveText(R.string.dismiss).content(R.string.about_body)
socialActivityFinder.countByRelation(userId)
telephony.isRadioOn()
offsetOrZero.add(numberOfRows)
spec.getFields()
op.getJavaName()
attributes.getDimension(R.styleable.ArcProgress_arc_angle,default_arc_angle)
statistics.addGetTimeNano(System.nanoTime() - start)
selenium.isVisible("link=Control Panel")
Key.create("_prefer_target_jdk_javac_")
tree.getClientArea()
return false; 
stateManager.register(store1,false,stateRestoreCallback)
assertEquals(expectedPlan,actualPlan)
toolWrapper.addProblemElement(refEntity,commonProblemDescriptors)
dockedBounds.right + adjustment
sublistsIndices.keySet().parallelStream()
this.doInitrospect(interfaces,matchedInterfaces)
startActivityAsUser(in,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
isReserved(c)
tableHasData(oldTableName)
Response.ok()
mController.setRingerMode(AudioManager.RINGER_MODE_VIBRATE,true)
sendMessage(CMD_STOP_AP)
Base64.encodeBytes(key)
lp.onResolveLayoutDirection(layoutDirection)
twitter1.checkUserListMembership(id1.screenName,id2.id,userList.getId())
getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DUMP,message)
String[]
AbstractBottomUpTraversal<TargetNode<?>,Void>
LOG.error("OpenTracing: Failed to capture tracing data",t)
id=13308
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers4.kt")
this.registrations.get(handler)
DEFAULT_DISMISS_TO_VIEW_RATIO_LIMIT=.4f
e.getMessage()
token != null
pm.performDexOpt(pkg,null,false)
/**   */ class SctpServerPipelineSink extends AbstractScptChannelSink {   static final InternalLogger logger=InternalLoggerFactory.getInstance(SctpServerPipelineSink.class);   private final SctpWorker[] workers;   private final AtomicInteger workerIndex=new AtomicInteger();   SctpServerPipelineSink(  Executor workerExecutor,  int workerCount){     workers=new SctpWorker[workerCount];     for (int i=0; i < workers.length; i++) {       workers[i]=new SctpWorker(workerExecutor);     }   }   @Override public void eventSunk(  ChannelPipeline pipeline,  ChannelEvent e) throws Exception {     Channel channel=e.getChannel();     if (channel instanceof SctpServerChannelImpl) {       handleServerSocket(e);     }  else     if (channel instanceof SctpChannelImpl) {       handleAcceptedSocket(e);     }   }   private void handleServerSocket(  ChannelEvent e){     if (!(e instanceof ChannelStateEvent)) {       return;     }     ChannelStateEvent event=(ChannelStateEvent)e;     SctpServerChannelImpl channel=(SctpServerChannelImpl)event.getChannel();     ChannelFuture future=event.getFuture();     ChannelState state=event.getState();     Object value=event.getValue(); switch (state) { case OPEN:       if (Boolean.FALSE.equals(value)) {         close(channel,future);       }     break; case BOUND:   if (value != null) {     bind(channel,future,(SocketAddress)value);   }  else {     close(channel,future);   } case INTEREST_OPS: if (event instanceof SctpBindAddressEvent) {   SctpBindAddressEvent bindAddressEvent=(SctpBindAddressEvent)event;   bindAddress(channel,bindAddressEvent.getFuture(),bindAddressEvent.getValue()); } if (event instanceof SctpUnbindAddressEvent) { SctpUnbindAddressEvent unbindAddressEvent=(SctpUnbindAddressEvent)event; unbindAddress(channel,unbindAddressEvent.getFuture(),unbindAddressEvent.getValue()); } break; } } private void handleAcceptedSocket(ChannelEvent e){ if (e instanceof ChannelStateEvent) { ChannelStateEvent event=(ChannelStateEvent)e; SctpChannelImpl channel=(SctpChannelImpl)event.getChannel(); ChannelFuture future=event.getFuture(); ChannelState state=event.getState(); Object value=event.getValue(); switch (state) { case OPEN: if (Boolean.FALSE.equals(value)) { channel.worker.close(channel,future); } break; case BOUND: case CONNECTED: if (value == null) { channel.worker.close(channel,future); } break; case INTEREST_OPS: channel.worker.setInterestOps(channel,future,(Integer)value); break; } }  else if (e instanceof MessageEvent) { MessageEvent event=(MessageEvent)e; SctpChannelImpl channel=(SctpChannelImpl)event.getChannel(); boolean offered=channel.writeBuffer.offer(event); assert offered; channel.worker.writeFromUserCode(channel); } } private void bind(SctpServerChannelImpl channel,ChannelFuture future,SocketAddress localAddress){ boolean bound=false; boolean bossStarted=false; try { channel.serverChannel.bind(localAddress,channel.getConfig().getBacklog()); bound=true; channel.setBound(); future.setSuccess(); fireChannelBound(channel,channel.getLocalAddress()); Executor bossExecutor=((SctpServerSocketChannelFactory)channel.getFactory()).bossExecutor; DeadLockProofWorker.start(bossExecutor,new Boss(channel)); bossStarted=true; }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); }  finally { if (!bossStarted && bound) { close(channel,future); } } } private void bindAddress(SctpServerChannelImpl channel,ChannelFuture future,InetAddress localAddress){ try { channel.serverChannel.bindAddress(localAddress); future.setSuccess(); }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } private void unbindAddress(SctpServerChannelImpl channel,ChannelFuture future,InetAddress localAddress){ try { channel.serverChannel.unbindAddress(localAddress); future.setSuccess(); }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } private void close(SctpServerChannelImpl channel,ChannelFuture future){ boolean bound=channel.isBound(); try { if (channel.serverChannel.isOpen()) { channel.serverChannel.close(); Selector selector=channel.selector; if (selector != null) { selector.wakeup(); } } channel.shutdownLock.lock(); try { if (channel.setClosed()) { future.setSuccess(); if (bound) { fireChannelUnbound(channel); } fireChannelClosed(channel); }  else { future.setSuccess(); } }   finally { channel.shutdownLock.unlock(); } }  catch (Throwable t) { future.setFailure(t); fireExceptionCaught(channel,t); } } SctpWorker nextWorker(){ return workers[Math.abs(workerIndex.getAndIncrement() % workers.length)]; } private final class Boss implements Runnable { private final Selector selector; private final SctpServerChannelImpl channel; Boss(SctpServerChannelImpl channel) throws IOException { this.channel=channel; selector=Selector.open(); boolean registered=false; try { channel.serverChannel.register(selector,SelectionKey.OP_ACCEPT); registered=true; }   finally { if (!registered) { closeSelector(); } } channel.selector=selector; } @Override public void run(){ final Thread currentThread=Thread.currentThread(); channel.shutdownLock.lock(); try { for (; ; ) { try { if (selector.select(500) > 0) { selector.selectedKeys().clear(); } SctpChannel acceptedSocket=channel.serverChannel.accept(); if (acceptedSocket != null) { registerAcceptedChannel(acceptedSocket,currentThread); } }  catch (SocketTimeoutException e) { } catch (CancelledKeyException e) { } catch (ClosedSelectorException e) { } catch (ClosedChannelException e) { break; } catch (Throwable e) { if (logger.isWarnEnabled()) { logger.warn("Failed to accept a connection.",e); } try { Thread.sleep(1000); }  catch (InterruptedException e1) { } } } }   finally { channel.shutdownLock.unlock(); closeSelector(); } } private void registerAcceptedChannel(SctpChannel acceptedSocket,Thread currentThread){ try { ChannelPipeline pipeline=channel.getConfig().getPipelineFactory().getPipeline(); SctpWorker worker=nextWorker(); worker.register(new SctpAcceptedChannel(channel.getFactory(),pipeline,channel,SctpServerPipelineSink.this,acceptedSocket,worker,currentThread),null); }  catch (Exception e) { if (logger.isWarnEnabled()) { logger.warn("Failed to initialize an accepted socket.",e); } try { acceptedSocket.close(); }  catch (IOException e2) { if (logger.isWarnEnabled()) { logger.warn("Failed to close a partially accepted socket.",e2); } } } } private void closeSelector(){ channel.selector=null; try { selector.close(); }  catch (Exception e) { if (logger.isWarnEnabled()) { logger.warn("Failed to close a selector.",e); } } } } } 
layoutPageTemplateCollectionService.getBasicLayoutPageTemplateCollections(getGroupId(),QueryUtil.ALL_POS,QueryUtil.ALL_POS,layoutPageTemplateCollectionNameComparator)
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,false)
subCursor.getInt(COLUMN_ATTENDEE_ID_NAMESPACE)
bucket.exists()
resolver.acquireContentProviderClient(uri)
mUfs.create(testFile)
nextPos != mBoundPos
channel.writeHeaders()
appearance.getString(attr)
!mIsSummaryWithChildren || !mChildrenExpanded
attribute.startsWith(keyPrefix) & attribute.length() > keyPrefix.length()
if (DBG) {   Log.d(LOG_TAG,"hasBgCall: " + hasBgCall + "sameChannel:"+ sameChannel); } 
!userInfo.canHaveProfile()
expiresOn == null
settings.readLPw(null)
dir.toString()
telephony.getNetworkTypeForSubscriber(subId)
a.getFloat(attr,0)
header.getX()
IndexReader.open(benchmark.getRunData().getDirectory(),true)
PsiUtil.hasDefaultConstructor(value,true)
popupWindow.setWidth(menuWidth)
selenium.isVisible("link=Control Panel")
DruidDataSourceUtils.isRemoveAbandoned(datasource)
this.httpHandler.handle(request,response).otherwise(ex -> {   logger.error("Could not complete request",ex);   nativeResponse.setStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
!list.append(ai)
Boolean.valueOf(BytesUtil.readUTFString(buffer))
participantAddresses.get(3)
LOG.info("Getting synchronous method stub from channel")
PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE=0x00020000
slop.getValue()
tw.release()
new OutOfCapacityError(String.format("SchedulerGroup %s is out of capacity. numPending: %d, maxPending: %d, reservedThreads: %d threadsHardLimit: %d",groupContext.name(),groupContext.numPending(),maxPendingPerGroup,groupContext.totalReservedThreads(),resourceManager.getTableThreadsHardLimit()))
stateChangedLatch.await(1,TimeUnit.SECONDS)
new IndexWriter(dir,new StandardAnalyzer())
getTypeName(method.getReturnType())
list.iterator()
DBG=false
STATUS.isStatusDefault(mStatus)
temp.reAddLeft()
routeList == null
StringBuffer paramTypesList=new StringBuffer("("); 
delayer != null
newDefaultSubIdObj.equals(mDefaultSubId)
new MapReduceIndex<K,V,FileContent>(indexId,extension.getIndexer(),storage,extension.hasSnapshotMapping() ? extension.getKeyDescriptor() : null)
plugin.authorizePayment(account.getId(),directPaymentId,account.getPaymentMethodId(),amount,currency,properties,callContext)
telephony.isOffhook()
performDexOpt(packageName,instructionSet,true)
this.controller.saveService(new MockHttpServletRequest(),new MockHttpServletResponse(),data,mock(BindingResult.class))
context.declareFields()
tempMat4.multLocal(worldMatrix)
"SELECT id, factId, combinedDue FROM cards WHERE type = 1 AND combinedDue > " + dueCutoff + " ORDER BY combinedDue LIMIT "+ mQueueLimit
Simple.of(Integer.class)
RegexFilter.createFilter(".*(\n.*)*",new String[0],true,null,null)
Thread.sleep(10000)
mUserPaddingEnd > 0
SLTestSlowPath01BuiltinFactory.getInstance()
mIconColor != null
dest.mkdir()
etp.setText(etp.getText())
new VelocityTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_velocityEngine,_templateContextHelper)
lineageInfo.getParents()
fs.move(file,new File(file.getParent(),newName))
serviceTester.systemReady()
HashCodeBuilder.class
!paused
isGreaterOrEqual(platformVersion,MNC)
new RMNodeStatusEvent(node.getNodeID(),status,new ArrayList<ContainerStatus>(),null,null,null)
invoiceItem.getAmount().divide(BigDecimal.TEN)
state.isGloballyTerminalState()
System.currentTimeMillis() + WAIT_SECONDS_BEFORE_JOIN + 1000
1l << 36 - 1
dpToPx(72f)
List<StagedModel>
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.WTF_IS_FATAL,0) != 0
Setting.listSetting("searchguard.audit.config.http_endpoints",Lists.newArrayList("localhost:9200"),Function.identity(),Property.NodeScope)
private final CuratorFramework client; 
fluentSetters()
new WordToSentenceProcessor<IN>()
selenium.isVisible("link=Control Panel")
c.findOne(new BasicDBObject("_id",17),null,ReadPreference.withTags(new BasicDBObject("dc","proximacentauri")))
timeUnit == null
mock.expectedMessageCount(10)
FastMath.max(origin,num.floatValue())
new Paint(Paint.ANTI_ALIAS_FLAG)
assertEquals(model.getProperties().get(NAME).getType(),"string")
op != CALLCODE
(T)this
eps(otherArr)
Arrays.asList("viel","nichts","wenig","zuviel")
setEditorText(expressions.get(myHistoryIndex))
revisionVersion=1
new MultiRootMessage(myProject,GitUtil.getRootsFromRepositories(roots),true)
List<Object>
Bytes.toBytesBinary(tableNameOrRegionName)
selenium.isVisible("link=Control Panel")
mAccount.setChipColor(color)
specHeightMode == MeasureSpec.EXACTLY
RESOURCES_UNAVAILABLE_OR_UNSPECIFIED=44
(call.getCallGroup() != null || otherCall.getCallGroup() != null) && call.getCallGroup() != otherCall.getCallGroup()
Character.isLetter(ch)
Long.valueOf(time)
Trans == TRANSPOSE
entry.doesSupportPartial()
new MMUnlockHandler(this)
result.assertJson(this.getClass(),"search_debt_rule.json")
subjectConfData.getNotOnOrAfter().isAfterNow()
FieldAccess.forField(delegateField).getter()
@Override public Cell deepClone(){   throw new UnsupportedOperationException(); } 
LOG.error(ex.getLocalizedMessage(),ex)
new Box(Vector3f.ZERO,1,1,1)
globalExecutionStats.getSplits()
selenium.isVisible("link=Control Panel")
mData.hashCode()
WAIT_FOR_NETWORK_TIMEOUT_DEFAULT_MS=2000
platformVersion < MNC
linkableToModuleMap.get(constituent)
View divider=new View(mContext); 
builder.length() == 0
shape.getMin().x
event.getX()
converter.convertTo(rightValue.getClass(),leftValue)
myFile.getParent()
format("max-age=%s",18_000)
mNwService.setInterfaceConfig(mInterfaceName,ifcg)
mReactInstanceManager.onResume(this)
i >= graphs.size()
JSError.make(SourceMapInput.SOURCEMAP_PARSE_FAILED,sourceMapPath)
annotationHelper.printError(element,"%s annotated element should not have a private constructor")
!Version.isBlackberry(this)
selenium.isVisible("link=Control Panel")
getTablename().getBytes()
MUCAdmin iq=new MUCAdmin(); 
new InstrumentedTimingCollector(Metrics.defaultRegistry(),Database.class)
allowPrivate.isNull()
liveDocs.get(i)
new FilteringClassLikeInfo(classLikeInfo,ONLY_ENUM_ENTIRES){   @Override public JetClassOrObject getCorrespondingClassOrObject(){     return null;   }   @NotNull @Override public ClassKind getClassKind(){     return ClassKind.OBJECT;   }   @NotNull @Override public List<? extends JetParameter> getPrimaryConstructorParameters(){     return Collections.emptyList();   }   @NotNull @Override public List<JetTypeParameter> getTypeParameters(){     return Collections.emptyList();   } } 
@NonNull
newBase.isEmpty()
selenium.isVisible("link=Control Panel")
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,policy)
createTestBlockCapsule(number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
recoveryDescs.put(id,recovery=new GridNioRecoveryDescriptor(queueLimit,node,log))
co.fadeInDuration=500
USE_STEP_BY_STEP_RENDERING.setModeDefaultValue(ApplicationMode.CAR,true)
getInitClosure()
ActivityManager.handleIncomingUser(callingPid,callingUid,userId,true,true,"enqueueNotification",pkg)
element.getNodeName()
parsedResult.getSqlType()
time.put(delta)
log.error("Error extracting parameters meta data",e)
new ObjectMapper().reader(Map.class)
TfsShell.convertMsToDate(files[0].getCreationTimeMs())
type.getConstructor()
Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
vCard.getTextTrim()
selenium.isVisible("link=Control Panel")
a.getBoolean(R.styleable.DragSortListView_use_default_controller,false)
assertEquals(11,beanCount)
private SettingsFactory _mockSettingsFactory; 
latch.startLatch.await(200,TimeUnit.MILLISECONDS)
"Footnote".equals(type)
bag.requite(reserved)
Collections.singletonList("")
elementName=options.get(ARRAY_NAME)
finalizationLock.wait()
return CTR; 
value.toLowerCase().contains(constraintLowerCase)
LOG.fatal("Could not append. Requesting close of wal",e)
a.getDimensionPixelSize(com.android.internal.R.styleable.Spinner_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT)
appearance.getString(attr)
header.getX()
mSelectResponse != null & mSelectResponse.length > 0
commit.getTime()
TestSuiteEnvironment.getServerAddress()
file.getName()
Beans.newDuration(tgc.getRememberMeMaxAge()).toMillis()
ret0 != null
@NonNull
isGreaterOrEqual(platformVersion,MNC)
table.averageDouble(columnIndex)
stagingTypeSettingsProperties.toSortedString()
log.warn("caught exception",e)
commandLineConverter != null
TextUtils.isEmpty(addresses)
region == null
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Boolean.parseBoolean(value)
position.setLongitude(buf.readShort())
agentInstances.findAgent(uuid)
Mono.currentContext()
getTypeName(decl.getMethodBinding().getReturnType())
MapActivity.getMapViewTrackingUtilities()
jp.getIntValue()
synchronized (mVolumes) {   mSystemUnlockedUsers=ArrayUtils.removeInt(mSystemUnlockedUsers,userId); } 
DEBUG_STARTING_WINDOW_VERBOSE || true
RuntimeException ex
Response<L>
selenium.isVisible("link=Control Panel")
IndexReader reader=IndexReader.open(dir); 
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
!detector.isInProgress()
ProcessorDefinition<ProcessorDefinition>
error.expectedMessageCount(1)
getConversionByClass(value.getClass())
SubtleUtil.validateNotExist(inFile)
appOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
capacity > 1 << 30
selenium.isVisible("link=Control Panel")
c == Long.class
getTitle()
Thread.sleep(5000)
new FairAffinityFunction()
Exception e
_("")
findAnnotationAttributes(element,annotationType.getName())
unlockForRegularUsage()
binary.getName()
doTestNewInference(BASE_PATH + "/" + getTestName(false)+ ".java",warnings,false)
mEnded && !pending.hasRemaining()
THashSet<JavaMethod>
handler.waitFor()
create().select(param("p",String.class).as("p")).getSQL()
_log.error(ioe,ioe)
query.length()
new NullPointerException()
messenger.requestSms(res)
signalParamHash(IS95_CONST_IR_SIGNAL_TONE,TAPIAMSSCDMA_SIGNAL_PITCH_UNKNOWN,IS95_CONST_IR_SIG_TONE_ABB_RE)
createCachedInstanceOn(event)
new PyStringLiteralLexer(PyTokenTypes.TRIPLE_QUOTED_STRING,myLanguageLevel.isPy3K())
grantRuntimePermissionsLPw(contactsPackage,ACCOUNTS_PERMISSIONS,userId)
textMessage.getMessageType()
builder.setPositiveButton(res.getString(R.string.import_message_replace),new DialogInterface.OnClickListener(){   @Override public void onClick(  DialogInterface dialog,  int which){     Resources res=getResources();     StyledDialog.Builder builder=new StyledDialog.Builder(DeckPicker.this);     builder.setTitle(res.getString(R.string.import_title));     builder.setMessage(res.getString(R.string.import_message_replace_confirm,mImportPath));     builder.setPositiveButton(res.getString(R.string.yes),new DialogInterface.OnClickListener(){       @Override public void onClick(      DialogInterface dialog,      int which){         DeckTask.launchDeckTask(DeckTask.TASK_TYPE_IMPORT_REPLACE,new DeckTask.TaskListener(){           @Override public void onPostExecute(          DeckTask.TaskData result){             if (mProgressDialog != null && mProgressDialog.isShowing()) {               mProgressDialog.dismiss();             }             if (result.getBoolean()) {               Resources res=getResources();               int count=result.getInt();               if (count < 0) {                 if (count == -2) {                   mDialogMessage=res.getString(R.string.import_log_no_apkg);                 }  else {                   mDialogMessage=res.getString(R.string.import_log_error);                 }                 showDialog(DIALOG_IMPORT_LOG);               }  else {                 Object[] info=result.getObjArray();                 updateDecksList((TreeSet<Object[]>)info[0],(Integer)info[1],(Integer)info[2]);               }             }  else {               handleDbError();             }           }           @Override public void onPreExecute(){             if (mProgressDialog == null || !mProgressDialog.isShowing()) {               mProgressDialog=StyledProgressDialog.show(DeckPicker.this,getResources().getString(R.string.import_title),getResources().getString(R.string.import_importing),true,false);             }           }           @Override public void onProgressUpdate(          DeckTask.TaskData... values){           }         } ,new TaskData(AnkiDroidApp.getCol(),mImportPath));         mImportPath=null;       }     } );     builder.setNegativeButton(res.getString(R.string.no),null);   } } )
/**   * TitanTransaction defines a transactional context for a  {@link TitanGraph}. Since TitanGraph is a transactional graph database, all interactions with the graph are mitigated by a TitanTransaction. <p/> All vertex and edge retrievals are channeled by a graph transaction which bundles all such retrievals, creations and deletions into one transaction. A graph transaction is analogous to a <a href="http://en.wikipedia.org/wiki/Database_transaction">database transaction</a>. The isolation level and <a href="http://en.wikipedia.org/wiki/ACID">ACID support</a> are configured through the storage backend, meaning whatever level of isolation is supported by the storage backend is mirrored by a graph transaction. <p/> A graph transaction supports: <ul> <li>Creating vertices, properties and edges</li> <li>Creating types</li> <li>Index-based retrieval of vertices</li> <li>Querying edges and vertices</li> <li>Aborting and committing transaction</li> </ul>  * @author Matthias Br&ouml;cheler (http://www.matthiasb.com)  */ public interface TitanTransaction extends TitanGraphTransaction {   /**   * Creates a new vertex in the graph with the given vertex id and the given vertex label. Note, that an exception is thrown if the vertex id is not a valid Titan vertex id or if a vertex with the given id already exists. <p/> Custom id setting must be enabled via the configuration option  {@link org.janusgraph.graphdb.configuration.GraphDatabaseConfiguration#ALLOW_SETTING_VERTEX_ID}. <p/> Use  {@link org.janusgraph.core.util.TitanId#toVertexId(long)} to construct a valid Titan vertex id from a user id.  * @param id vertex id of the vertex to be created  * @param vertexLabel vertex label for this vertex - can be null if no vertex label should be set.  * @return New vertex  */   public TitanVertex addVertex(  Long id,  VertexLabel vertexLabel);   /**   * Retrieves the vertex for the specified id. This method is intended for internal use only. Use  {@link org.apache.tinkerpop.gremlin.structure.Graph#vertices(Object)} instead.  * @param id id of the vertex to retrieve  * @return vertex with the given id if it exists, else null  */   public TitanVertex getVertex(  long id);   public Iterable<TitanVertex> getVertices(  long... ids);   public Iterable<TitanEdge> getEdges(  RelationIdentifier... ids);   /**   * Commits and closes the transaction. <p/> Will attempt to persist all modifications which may result in exceptions in case of persistence failures or lock contention. <br /> The call releases data structures if possible. All element references (e.g. vertex objects) retrieved through this transaction are stale after the transaction closes and should no longer be used.  * @throws org.janusgraph.diskstorage.BackendException if an error arises during persistence  */   public void commit();   /**   * Aborts and closes the transaction. Will discard all modifications. <p/> The call releases data structures if possible. All element references (e.g. vertex objects) retrieved through this transaction are stale after the transaction closes and should no longer be used.  * @throws org.janusgraph.diskstorage.BackendException if an error arises when releasing the transaction handle  */   public void rollback();   /**   * Checks whether the transaction is still open.  * @return true, when the transaction is open, else false  */   public boolean isOpen();   /**   * Checks whether the transaction has been closed.  * @return true, if the transaction has been closed, else false  */   public boolean isClosed();   /**   * Checks whether any changes to the graph database have been made in this transaction. <p/> A modification may be an edge or vertex update, addition, or deletion.  * @return true, if the transaction contains updates, else false.  */   public boolean hasModifications(); } 
size == 1
resources.getDimension(R.dimen.close_handle_height)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
endpoint.getConnectionFactory()
command.getId()
parent.getChild(iconfile)
mValues[7]
new IllegalArgumentException(ERROR_ADD_REMOTE_URL_MISSING)
Y
14 + 14
JetTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/SuperMethod.kt")
Exception unexpectedException
Internal.prefixKeyWithSalt(key)
@Overridee
QuotaCache.this.tableQuotaCache.contains(table)
FUNCTOR_PROCESS_DELAY=2
startActivityAsUser(in,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
firstPos != mTargetPos
SitesUtil.class
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
id=15850
parent instanceof PsiParameterList
params.getSimulatePlatformVersion()
assertLeftRightCategory(4,category2b)
event.getY()
Integer.valueOf(attrValue)
NestedPortletWebUpgrade.class
public class AbstractSerializationsTester extends SchemaLoader {   protected static final String CUR_VER=System.getProperty("cassandra.version","0.7");   protected static final Map<String,Integer> VERSION_MAP=new HashMap<String,Integer>(){ {       put("0.7",1);     }   } ;   protected static final boolean EXECUTE_WRITES=new Boolean(System.getProperty("cassandra.test-serialization-writes","False")).booleanValue();   protected final int getVersion(){     return VERSION_MAP.get(CUR_VER);   }   protected static DataInputStream getInput(  String name) throws IOException {     File f=new File("test/data/serialization/" + CUR_VER + "/"+ name);     assert f.exists() : f.getPath();     return new DataInputStream(new FileInputStream(f));   }   protected static DataOutputStream getOutput(  String name) throws IOException {     File f=new File("test/data/serialization/" + CUR_VER + "/"+ name);     f.getParentFile().mkdirs();     return new DataOutputStream(new FileOutputStream(f));   } } 
NestedSetBuilder.stableOrder()
new NativeAllocationRegistry(getNativeFinalizer(),NATIVE_ALLOCATION_SIZE)
newNode.events().localListen(lsnr,EventType.EVT_NODE_LEFT)
synchronized (mAccounts) {   writeStatisticsLocked(); } 
startTest(getMethodName(),false)
return false; 
service.getDomain().getName()
mService == null
removeQuote(timestring.trim())
cifar.test(10000)
Slog.e(TAG,"Invalid wallpaper data")
string.indexOf(oldname) != -1
sendMsg(mAudioHandler,MSG_SET_DEVICE_VOLUME,SENDMSG_NOOP,device,0,streamState,0)
mHorizontals == null
dynamicType.getConstructor()
Configuration.getInstance().setHostInjectionEnabled(host,Collections.singleton(languageId),false)
Context.getPermissionsManager().checkGeofence(getUserId(),entity.getAttributeId())
queue.removeLast()
Exception e
mock.expectedMessageCount(2)
public PoshiRunner(String classCommandName) throws PoshiRunnerException {   LoggerUtil.startLogger();   SeleniumUtil.startSelenium();   System.out.println("\nRunning " + classCommandName);   _testClassCommandName=classCommandName;   _testClassName=PoshiRunnerGetterUtil.getClassNameFromClassCommandName(_testClassCommandName); } 
lobMap.floorKey(lobId)
mHandler.postDelayed(pae,timeout)
bbbGW.userConnectedToGlobalAudio(emm.voiceConf,emm.userid,emm.name)
0.1 * VALUE_RANGE
resp.addHeader("Access-Control-Allow-Methods",methods)
mWidth <= 0
exchFut.discoveryEvent().node()
LogDelegate.createLog(name)
new DeadCodeEliminationPhase(OPTIONAL)
private TvShowFragment listener; 
random.nextInt(gap)
engine.execute(query).toString()
Exception e
holder.getListener().onCaptureSequenceCompleted(CameraDeviceImpl.this,requestId,lastFrameNumber)
tx.unsafeBitcoinSerialize()
new AssetPortletAddURL(portlet.getPortletId(),mesage,resourceBundle,locale,addPortletURL)
new UnsupportedOperationException()
list.elements()
log.warn("Problem in JSR223 script ",e)
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
set(object,value.intValue())
logger.info(String.format("performing disconnect (%s)",this.nsp))
Arrays.asList(STANFORD_TOKENIZE,STANFORD_SSPLIT)
mIsScrollableViewHandlingTouch
styles_.input()
new Button("submit",new StringResourceModel("submit",this,null)){   private static final long serialVersionUID=4149741045073254811L;   @Override public void onSubmit(){     GeoServer gs=(GeoServer)geoServerModel.getObject();     GeoServerInfo global=gs.getGlobal();     global.setCoverageAccess((CoverageAccessInfo)coverageModel.getObject());     gs.save(global);     doReturn();   } } 
rows.length != 0
new IllegalStateException()
@Override public final DivideBy andNotExists(Select<?> select){   return and(notExists(select)); } 
sanitaryName.equals(c.getPrettyName())
loaded.getLoaded().getConstructor()
buffer.buffer()
destroy.isPrivate()
super(message); 
that.getDomain() == null
strongClassCache.put(beanClass,results)
stores.next().getAssertMap()
return false; 
propByGetter == null
prev.getPrevProp()
mService.stopLocalOnlyHotspot(mContext.getOpPackageName())
format("max-age=%s",18_000)
mBluetoothGatt.startScan(mScannerId,mSettings,mFilters,mWorkSource,mResultStorages,ActivityThread.currentOpPackageName())
finish()
loaded.getLoaded().getConstructor()
ActivityManagerNative.getDefault().updateConfiguration(config)
centerButton(mButtonNeutral)
checkArgument(child.parent == null)
id=37
LOG.debug("Error while deserializing payload",e)
BaseMessages.getString("Spoon.Dialog.PromptToSave.Message",fileName)
z.next_in[z.next_in_index++] == 0
rows[1].getLock().writeLock().lock()
setProperty(POLICY,policy)
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
tree.getClientArea()
connections.get(address)
timeout=1000
c.write("[" + ctx.channel().remoteAddress() + "] "+ msg+ '\n')
sdk != 21 || sdk != 22
Long[]
mGpsListener != null
ServletUtil.prepareParameters(p,true,true,false,false)
new HandlerThread(THREAD_NAME)
ATLAS_MAP_ENTRY_FIELD_COUNT=4
buffer.getSize()
httpMethod.getResponseHeader(TRANSFER_ENCODING)
new ProcessInformations(sc,windows)
view.showScrollbar()
/**   * Changes the group of a file or directory specified by args.  */ public final class ChgrpCommand extends AbstractACLCommand {   public ChgrpCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return "chgrp";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String group=args[0];     TachyonURI path=new TachyonURI(args[1]);     chgrp(path,group,false);   }   @Override public String getUsage(){     return "chgrp <group> <path>";   } } 
dest.writeLong(mSubId)
!myComponentsRegistry.containsInterface(interfaceClass)
rv.length == 4
issue.getRuleKey().rule()
FilenameUtils.getPath(destination)
SyncAccountService.addSyncAccount(filePathName,"test@liferay.com","test","http://localhost:8080/api/jsonws")
configInstance.getIntProperty(namespace + "eurekaServer.readTimeout",8000)
Simple.of(String.class)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
allOf(withId(R.id.fab_expand_menu_button),withParent(withId(R.id.fab)),isDisplayed())
Log.wtf(TAG,"This will become an error",ex)
oconf.getJSONObject("lapse").getInt("mult")
vehicleControl.attachDebugShape(SceneApplication.getApplication().getAssetManager())
functionName == null
file.delete()
logger.debug("Updating the serviceUrls as they seem to have changed from {} to {} ",Arrays.toString(eurekaServiceUrls.get().toArray()),Arrays.toString(serviceUrlList.toArray()))
containerLog.error(sm.getString("dataSourceRealm.getRoles.exception",username))
getSrcPath("checks/javadoc/Input_03.java")
headers.getMessageType()
servletContext.getContextPath()
previousScroll == scrollY
UserHandle.getCallingUserId()
assertEquals(496,this.servletResponse.getContentLength())
theFeatures.divi(maxRange - minRange + Nd4j.EPS_THRESHOLD)
hasOnClickListeners()
LOG.isDebugEnabled() && instruction instanceof ControlTransferInstruction && after.length == 0
constraintSystem.getTypeVariables()
type.getConstructor()
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
mContext.sendBroadcast(intent)
resolveNamedStopWords(stopWords,version,ignore_case)
peekServiceForUserLocked(userId)
allocator.getFlowController().prepareAction(input,epsilon,nextEpsilon,gamma,dGammaView,dBetaView)
new AlertDialog.Builder(getActivity())
Algorithms.isEmpty(pd.getName()) && !nameStr.equals(PointDescription.getAddressNotFoundStr(mapActivity))
file.getAbsoluteFile()
((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(getProject())).cleanupAfterTest()
vehicleControl.attachDebugShape(SceneApplication.getApplication().getAssetManager())
mDataAuthorities == null
doUpgrade()
new ResourceDefinition(name,transMetaContent)
ar.cause()
GroovyBundle.message("groovy.configure.facet.question.text")
startIndex + startIndex
dateFormatter.format(value)
position.offset(mLeft,mRight)
T
(data + increment) % 3
new LFWDataSetIterator(batchSize,numSamples,new int[]{numRows,numColumns,nChannels},outputNum,useSubset,new Random(seed))
assertThat(cli.getErrorOutput().length(),equalTo(0))
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,true)
logger.error(evt.getReason())
Float.parseFloat(value)
getTestName(false)
o1 instanceof Comparable && o2 instanceof Comparable
final String sId=getCentralAuthenticationService().grantServiceTicket(tId,TestUtils.getService()); 
clo.apply(null,false)
_log.error(ioe,ioe)
assertEquals(496,this.servletResponse.getContentLength())
Map<String,Integer>
checkPojoMetaClass()
new VectorDrawableAnimatorRT(this)
deleteCondition.isPrivate()
assertNotNull(statementUnderTest)
DAO_RESCUE_BLOCK=1_787_300
IccUtils.gsmBcdByteToInt((byte)0x8c)
mArrowImage != null
mMenu.getVisibleItems()
attributes.getFlags()
binary.getName()
peekServiceForUserLocked(userId)
Math.min(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
selenium.isVisible("link=Control Panel")
mReactInstanceManager.onResume(this)
Thread.sleep(200)
upload1.getUploadEndTimestamp() == 0
protected BytecodeParserError asParserError(Throwable e){   if (e instanceof BytecodeParserError) {     return (BytecodeParserError)e;   }   BytecodeParser bp=this;   BytecodeParserError res=new BytecodeParserError(e);   while (bp != null) {     res.addContext("parsing " + bp.code.asStackTraceElement(bp.bci()));     bp=bp.parent;   }   return res; } 
resultSet.put("start",start)
BatchQuickFix<ProblemDescriptor>
mPostKeyguardExitAnimation.hasEnded()
vmHook.step(prg,op)
logger.debug("attempting to login")
new DeoptimizeNode(action,reason)
targetSdkVersion >= N_MR1
String log="The event isn't consumed, id:" + snapshot.getId() + " status:"+ snapshot.getStatus()+ " task-count:"+ taskList.size(); 
setTo(replyTos)
Long.valueOf(id)
t.getCause()
hour != 0
ColumnFilter sent
SWIPE_UP_SHOW_ON_APP_LAUNCH_AFTER_DISMISS_BACK_OFF=10
!TextSecurePreferences.isWebrtcCallingEnabled(this)
mQuietEnable
mService.isOemUnlockAllowed()
0 - originY
checkResultByText("dependencies {\n" + "    <dependency>\n" + "      <groupId>group</groupId>\n"+ "      <version>1.0</version>\n"+ "      <scope>runtime</scope>\n"+ "    </dependency>\n"+ "}")
StatBuckets.prettyUptime(secs)
Arrays.asList("properties",GormProperties.IDENTITY,GormProperties.VERSION,"domainClass","dirty",GormProperties.ERRORS,"dirtyPropertyNames")
c * b
ranges == null
new TimeoutException()
DEFAULT_WIDTH=0x008000000
synchronized (mVolumes) {   mSystemUnlockedUsers=ArrayUtils.removeInt(mSystemUnlockedUsers,userId); } 
request.getServletPath()
data != null
sb.append(NC)
new WorldPoint(2447,3418,0)
entry.rxBytes == 0 || entry.txBytes == 0
heartbeatTimeoutIntervalMs >= 0L
assertEquals(1,functionalTestHelper.removeAnyAutoIndex(map).size())
telephony.isRinging()
isCreated()
new IndexWriter(dir,false,new WhitespaceAnalyzer(),false)
mInterpolator == null
loaded.getLoaded().getConstructor()
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.WTF_IS_FATAL,0) != 0
jp.getFloatValue()
gen.get().document()
w / 2
log.warn("Hooking new default : onNextDropped")
String text
Slog.wtfStack(TAG,"ProcessState dead: name=" + mName + " pkg="+ mPackage+ " uid="+ mUid+ " common.name="+ mCommonProcess.mName)
host.setHeaderView(this)
a.getFloat(attr,0)
dbStat.setString(2,table.getName())
"Failed to create OutgoingJingleSession.\n" + fullCalleeURI + " does not support jingle"
filter == null
mResourceData[i] != null
tokenStart >= buffer.length()
tracesFile.mkdirs()
!browser.isLoad()
128 * 1024
Log.e(TAG,"Got null argument for a defined keyset, ignoring!")
super.onStop()
final WebPageDetail webd=(WebPageDetail)d; 
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticMethodsFromImports.kt")
!GetterUtil.getBoolean(serviceContext.getAttribute("updatePageCount"),true)
mSupportsSpeed ? 1 : 0
isDeviceInVrMode()
selenium.isVisible("link=Control Panel")
history2.getWorkflowInstanceId()
new HttpBlobStore(new URI("http://localhost:" + serverPort),5,credentials)
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicLocalTest extends IdGeneratorBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } 
mVibrator.vibrate(1000L)
dateFormatter.format(value)
mRepeat > 1
UserGroupRoleLocalServiceUtil.getUserGroupRole(userGroupRolePK)
v1 & 0xc0
AnnotatedElementUtils.getAnnotationAttributes(method,annotationType)
List<ActivityManager.RecentTaskInfo>
structuralLock.isLocked()
JMeterUtils.getPropDefault(USE_RHINO_ENGINE_PROPERTY,true)
return 1; 
getProperties().requestCachingEnabled()
psiTypeParameter.getText()
AbstractHadoopJob.loadKylinPropsAndMetadata(context.getConfiguration())
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range(refElement)).description(message)
mInstalld.snapshotProfile(appId,packageName,codePath)
LOGGER.debug("Could not execute markEntries",ex)
ScanResult.is24GHz(frequency)
RU_TASKS
textSize.y + 4
isRotationEnabled
Trans == TRANSPOSE
toggleBreakpoint(getScriptPath(),13)
_log.error(ioe,ioe)
new UnsupportedOperationException()
taskletElement.getAttribute(ID_ATTR)
doOpenIfChanged(false)
Thread.sleep(5000)
assertLeftRightCategory(12,category2c)
@Override public Cell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   if (clonedBaseCell instanceof ByteBufferCell) {     return new ValueAndTagRewriteByteBufferCell((ByteBufferCell)clonedBaseCell,this.value,this.tags);   }   return new ValueAndTagRewriteCell(clonedBaseCell,this.value,this.tags); } 
mMncStr == null
mp.getValue()
selenium.isVisible("link=Control Panel")
selenium.isVisible("link=Control Panel")
instructionStart + 3
assertTrue(result.indexOf("\u00f6\u00e4\u00fc\u00df") != -1)
" firstActiveTime=" + lastActiveTime
Values.WEBSOCKET.equalsIgnoreCase(upgrade)
registerUsageCallback(networkType,subscriberId,thresholdBytes,null)
old + 17
deployOneTaskProcess()
EventLog.writeEvent(EventLogTags.NOTIFICATION_CANCEL_ALL,pkg,mustHaveFlags)
Thread.sleep(200)
war.addAsWebInfResource(SimpleWebTestCase.class.getPackage(),"web.xml")
/**   * Returns the next pseudorandom  {@link ArrayValue} of date elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of date elements.  */ public ArrayValue nextDateArray(){   return Values.dateArray(nextDateArrayRaw(minArray(),maxArray())); } 
selenium.isVisible("link=Control Panel")
final PkgControl root=ImportControlLoader.load(new File(getPath("import-control_WithNewElement.xml")).toURI()); 
getIntent().getStringArrayExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
private void _runCommand() throws PoshiRunnerException {   _runClassCommandName(_testClassCommandName); } 
applyFilter()
LOG.error("OpenTracing: Failed to capture tracing data",t)
new GroupTest(true)
globalFacetsForCategorySearch
path.lastIndexOf("/") == 0
checkCallingPermission(android.Manifest.permission.MANAGE_ACTIVITY_STACKS)
lock.isLocked()
selenium.isVisible("link=Control Panel")
Float.valueOf(strings[i])
getWebElement(webDriver,locator)
(contentType == null) || (contentType.startsWith("text")) || (contentType.endsWith("xml"))
connections.get(address)
pur.getFile(dirId.getId())
Blocks.dirt.func_149739_a()
new LightweightThread(null,this,stackSize)
assertEquals(17,result.getBySeverity(AnalyticsMessageBase.Severity.WARNING).size())
update(bytes)
origin > other
selenium.isVisible("link=Control Panel")
RulesProfileWrapper qProfile
specBuilder.setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE,KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
route.getOutputs().isEmpty()
type.createDataFormat(routeContext)
accountHandle.getComponentName().toString()
Utils.writeFile(parentDir.getAbsolutePath(),FILE_NAME,xmlBuffer.toXML())
new UnsupportedOperationException("Attempting to send sliced reindex-style request to a node that doesn't support " + "it. Version is [" + out.getVersion() + "] but must be ["+ BulkByScrollTask.V_5_1_0_UNRELEASED+ "]")
Status.constructStatuses(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
mPostKeyguardExitAnimation.hasEnded()
types == null
HeaderBuilder.this
blocked.isDone()
getActionBar()
AbstractPullBufferStream.class
new SyncedFolderItem(UNPERSISTED_ID,mediaFolder.absolutePath,getString(R.string.instant_upload_path) + "/" + mediaFolder.folderName,true,false,false,AccountUtils.getCurrentOwnCloudAccount(this).name,1,false,mediaFolder.filePaths,mediaFolder.folderName,mediaFolder.numberOfFiles)
loginResult != null
TransactionUtil.validAssetName(assetIssueContract.getAbbr().toByteArray())
new ToggleAutoTestAction()
"jar".equals(url.getProtocol())
mPPS != null & mSPS != null
owners.add(Receiver.<String>make(clazzGT.getType()))
ImmutableSortedMap.builder()
controller.execute(ExecutionContextBuilder.Factory.create(update).build(),resultHandler)
odi.release()
_channel.abort()
mWasActivatedOnDown || !mNeedsDimming
typeSettingsProperties.toSortedString()
selenium.isVisible("link=Control Panel")
expectedCommentLength < maxCommentLength
type.getConstructor()
SingleModel<V>
mContext.startActivity(intent)
verifyViewMethodsNotDeclaredFinal(sessionBeanClass,remoteBusinessInterfaces)
(mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0 && telephonyService.isOffhook() && isScreenOn
mQsContainer.getX()
requestParameters == null
dockedBounds.top - adjustment
SSLContext.getDefault().createSSLEngine()
node.executorManager.executeLocaly(new Runnable(){   public void run(){     MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,cm,MembershipEvent.MEMBER_REMOVED);     for (    MembershipListener listener : listenerSet) {       listener.memberRemoved(membershipEvent);     }   } } )
specModel.getProps()
setValue(key,PSS_AVERAGE,(long)(((val * (double)count) + (avgUss * (double)inCount)) / (count + inCount)))
mccStr.isEmpty()
userInfo.getWebpage()
LOG.error(e)
listener == null
@Override public Value emitByteSwap(Value input){   Variable result=newVariable(LIRKind.derive(input));   append(new SPARCByteSwapOp(this,result,input));   return result; } 
ShutdownOperations.addOperation(new Runnable(){   public void run(){     deferredBindingActions.remove();   } } )
result.seAttributePrefix("")
defaultListenerAccess != null
WindowedValue.valueInEmptyWindows(2,PaneInfo.ON_TIME_AND_ONLY_FIRING)
response.getStatusCode()
this.getLimit()
writeFile.sync()
Duration.between((Temporal)left,(Temporal)right)
new KeyEvent(SystemClock.uptimeMillis(),eventTime,KeyEvent.ACTION_UP,keyEventCode,0,0,KeyCharacterMap.VIRTUAL_KEYBOARD,0,KeyEvent.FLAG_SOFT_KEYBOARD | KeyEvent.FLAG_KEEP_TOUCH_MODE)
serialVersionUID=1176395573
usersStats.getMin()
return false; 
new HttpHost(proxy.host,proxy.port,proxy.protocol)
ISOChronology.getInstance()
item.setTailText(notice)
typeName.contains("CHAR")
case INODE_REFRENCE: 
Integer.valueOf(taskIdStr)
GL20.glUniformMatrix4(location,transpose,value)
delta > radius
DexFile.getDexOptNeeded(path,isa,compilerFilter,newProfile)
failingOnThis.without(UpgradePolicy.canary).startedFailingOnVersionAfter(version)
currentlyProcessing.addCallback(callback)
checkPojoMetaClass()
assertNotNull(message.getPayload() instanceof Collection<?>)
builder.length() == 0
mAdapter != null
collectJSVariables(clazz,candidates,false,false,true,true)
data.dropNull()
Thread.sleep(100)
mAuthorities.get(i)
!mIsPipRecentsOverlayShown || !mIsRecentsShown || !mIsPipFocusedInRecent
Float.valueOf(param.getValue())
el.getProperty(HTTPSampler.METHOD)
ScopedProxyUnwrapper.unwrapIfNecessary(resource)
mSelectResponse != null & mSelectResponse.length > 0
id=15838
Expression.gt(this.propertyName,arguments[0])
renderUpdate(out,results)
Long.valueOf(val)
!list.append(pi)
getPresenter().getLogin()
selenium.isVisible("link=Control Panel")
LOG.warn("Failed to get mount information: {}",e.getMessage())
final Channel channel; 
dist > maxDist
clock.setDeltaFromReality(AT_LEAST_ONE_MONTH_MS)
checkStoreUsage(4,0,1,1)
now.plusDays(3).toDateMidnight()
logger.error("Table spec retrieval failed!")
new PriorityQueue<>(new HeapObjectComparator())
8 + 4
locator.getRegionLocation(regionName)
assertEquals(result,"that/has/two/bangs")
localImageSize != null
isTouched(0.75f,1)
LocaleUtil.getDefault()
UNINIALIZED
verify(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
instruction.getOffset()
e instanceof NoSuchUserException
new NullOutputOperatorFactory(operatorId,sourceType)
15 * 60 * 1000
getEffectiveCleartextTrafficPermitted()
HTTPConstants.GET.equals(getMethod()) || HTTPConstants.DELETE.equals(getMethod())
mDataSetObserver != null
MAX_URL_LENGTH=4000
asList(DERBY,FIREBIRD,ORACLE,SYBASE)
151 + (USE_OLD_HISTORY ? 1000 : 0)
this.timeoutNs * Time.NS_PER_MS
Object[]
new CSVFilter(columns)
new ModLoaderModContainer(bmClazz,canonicalPath)
new IllegalAccessError("read-only")
dataSource.setMaxConnLifetimeMillis(Long.parseLong(getConnectionAge()))
getPolicy().getMaxBinaryMessageBufferSize()
myRootHandler == null
_connector.getResponses("GET //bad/foo?data=1 HTTP/1.0\n\n")
order=1
logIndex <= lastToApply
/**   * @return  */ private StringBuffer getCurrentBuffer(){   if (!TransactionSynchronizationManager.hasResource(bufferKey)) {     TransactionSynchronizationManager.bindResource(bufferKey,new StringBuffer());     TransactionSynchronizationManager.registerSynchronization(new TransactionSynchronizationAdapter(){       @Override public void afterCompletion(      int status){         clear();       }       @Override public void beforeCommit(      boolean readOnly){         try {           if (!readOnly) {             complete();           }         }  catch (        IOException e) {           throw new FlushFailedException("Could not write to output buffer",e);         }       }       private void complete() throws IOException {         StringBuffer buffer=(StringBuffer)TransactionSynchronizationManager.getResource(bufferKey);         if (buffer != null) {           String string=buffer.toString();           byte[] bytes=string.getBytes(encoding);           int bufferLength=bytes.length;           ByteBuffer bb=ByteBuffer.wrap(bytes);           int bytesWritten=channel.write(bb);           if (bytesWritten != bufferLength) {             throw new IOException("All bytes to be written were not successfully written");           }           if (forceSync) {             channel.force(false);           }           if (TransactionSynchronizationManager.hasResource(closeKey)) {             closeCallback.run();           }         }       }       private void clear(){         if (TransactionSynchronizationManager.hasResource(bufferKey)) {           TransactionSynchronizationManager.unbindResource(bufferKey);         }         if (TransactionSynchronizationManager.hasResource(closeKey)) {           TransactionSynchronizationManager.unbindResource(closeKey);         }       }     } );   }   return (StringBuffer)TransactionSynchronizationManager.getResource(bufferKey); } 
new Paint()
NotificationManager.getInstance().onCurrentChatMessageNotification(messageItem)
Timber.e(e,error)
logger.error("Error while matching regex [" + matched + "] for string ["+ matcher+ "] "+ pse.getMessage())
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
InsertFinalStep<R>
String.format("%s: Xmx value has exceeded the allowed limit (max Xmx = %s)",getId(),maxXms)
ServiceLoader.load(ReportSenderFactory.class)
synchronized (mVolumes) {   for (int i=0; i < mVolumes.size(); i++) {     final VolumeInfo vol=mVolumes.valueAt(i);     if (vol.isVisibleForRead(userId) && vol.isMountedReadable()) {       final StorageVolume userVol=vol.buildStorageVolume(mContext,userId,false);       mHandler.obtainMessage(H_VOLUME_BROADCAST,userVol).sendToTarget();       final String envState=VolumeInfo.getEnvironmentForState(vol.getState());       mCallbacks.notifyStorageStateChanged(userVol.getPath(),envState,envState);     }   }   mSystemUnlockedUsers=ArrayUtils.appendInt(mSystemUnlockedUsers,userId); } 
LOG.error(String.format("%d ms elapsed since build job marked as finished, but still missing finished status from some workers.",elapseMillisSinceFirstFinishedStatus))
lp.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER
assertThat(set.contains("123")).isFalse()
users.get(i)
registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)
config.getMaxElementsInMemory()
r.curApp != null
shadowSize == 0
mTfs.delete(mTfs.open(new TachyonURI(filePath)))
that.getDomain() == null
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicDistributedTest extends ListBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(2).newInstances(config);   } } 
queuedChunk.provider.loadChunk(queuedChunk.x,queuedChunk.z)
!fileType_.canAutoIndent()
transform(matrix,source,width,height,false,recycle)
new IllegalStateException()
mAlpha == 0
mWriteOwners != null
del("*:*")
type.getFixedValue()
mValues[7]
JettyWebSocketServer.LISTEN_PORT.getName()
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
err.jspError("jsp.error.tld.mandatory.element.missing","tlib-version")
3 * width
/**   * Rest integration test. runs against external cluster in 'mvn verify'   */ public class RestIT extends ElasticsearchRestTestCase {   public RestIT(  RestTestCandidate testCandidate){     super(testCandidate);   }   @ParametersFactory public static Iterable<Object[]> parameters() throws IOException, RestTestParseException {     return createParameters(0,1);   } } 
Arrays.asList("android.hardware.audio@2.0::IDevicesFactory","android.hardware.bluetooth@1.0::IBluetoothHci","android.hardware.camera.provider@2.4::ICameraProvider","android.hardware.graphics.composer@2.1::IComposer","android.hardware.vr@1.0::IVr","android.hardware.media.omx@1.0::IOmx")
A args
line.contains(" throws ")
CONSTELLATION_TYPE_SHIFT_WIDTH=3
selenium.isVisible("link=Control Panel")
String.class
isCreated()
id=15809
KING_BLACK_DRAGON(NpcID.KING_BLACK_DRAGON,10,ChronoUnit.SECONDS,ItemID.PRINCE_BLACK_DRAGON)
Log.info(this + " JVM BUG(s) - injecting delay" + _jvmFix2+ " times")
selenium.isVisible("link=Control Panel")
name == null
mAuthorities.get(i)
a.getFloat(attr,0)
new LayerView(this,0xff0000ff)
assertThat(KeepOneFilter.isDeletable(createSnapshotWithDate(1L,"2011-05-01").setLast(true))).isTrue()
previousException.compareTo(currentException)
ChannelBuffers.copiedBuffer(sb.toString().getBytes(bodyCharset))
http2c.setInitialStreamSendWindow(initialStreamSendWindow)
java.util.concurrent.Executors.newSingleThreadExecutor()
registerProblem(pyElement,PyBundle.message("INSP.format.requires.no.mapping"))
@NotNull
imageResOnFail != 0
DEBUG_STARTING_WINDOW=false
checkManageUsersPermission("getting profiles related to user " + userId)
SystemTable.getLocalHostId()
type.getConstructor()
a.getDimensionPixelOffset(attr,0)
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,JavaConstant.MethodType.ofLoaded(loadedMethodType)))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
LayoutSetPrototypeWebUpgrade.class
__logger.error("Unable to set 'this.bundle.install' " + " for the bundle " + bundle.getSymbolicName(),t)
public TriggerStateMachine withLateFirings(OnceTriggerStateMachine lateTrigger){   return new AfterWatermarkEarlyAndLate(earlyTrigger,lateTrigger); } 
structuralLock.isLocked()
LLVMAMD64WriteAddressRegisterNodeGen.create(from,frame)
synchronized (this) {   pw.print(prefix);   pw.print("SERVICE ");   pw.print(r.shortName);   pw.print(" ");   pw.print(Integer.toHexString(System.identityHashCode(r)));   pw.print(" pid=");   if (r.app != null)   pw.println(r.app.pid);  else   pw.println("(not running)");   if (dumpAll) {     r.dump(pw,innerPrefix);   } } 
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.LOCKDOWN_IN_POWER_MENU,0)
asList(8L)
parsedResult.getSqlType()
myGutterComponent.convertX(e.getX()) <= myGutterComponent.getWhitespaceSeparatorOffset()
classNode.hasDeclaredMethod(mixinMethod.getName(),mixinMethod.getParameters())
REJECT_OUTSIZED_RESTORE=false
engine.execute(query).toString()
schemeSpecificParts != null
reporter.report("A class cannot have default members",n)
ClassNotFoundException.class
COOKIE_SYNC_MANAGER=true
new ArrayList<String>(64)
TelephonyManager.getDefault().getPhoneType()
result.routes[0].legs[0].steps[0]
mappers.mapper().searchAnalyzer()
applyCurrentState()
logger_.debug("Skipping delivery of hint for deleted columnfamily",e)
meta.getColumnDefinition(columnName.key)
Thread.sleep(5000)
ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
from("seda:foo").startupOrder(1).delay(1000)
Exception e1
this.toString()
assertTrueEventually(new AssertTask(){   @Override public void run() throws Exception {     Collection<EventRegistration> regs1=eventService1.getRegistrations(MapService.SERVICE_NAME,mapName);     Collection<EventRegistration> regs2=eventService2.getRegistrations(MapService.SERVICE_NAME,mapName);     assertEquals("there should be only one registration",1,regs1.size());     assertEquals("there should be only one registration",1,regs2.size());   } } ,10)
e1.getValue()
mService.removeNetwork(netId)
ACTIVATION_FAILED
new PaymentApiException(ErrorCode.PAYMENT_PLUGIN_EXCEPTION,e.getErrorMessage())
rename.isPrivate()
context.getPackageManager().queryIntentActivities(intent,0)
computeSemiJoin(inputStatistics,inputStatistics,x,unknown)
newDto(RecipeDto.class).withLocation(DEFAULT_DOCKER_IMAGE)
fix.android.opengl.GLES20.glVertexAttribPointer(maVelocityHandle,4,GLES20.GL_FLOAT,false,0,0)
!service.mRequestFilterKeyEvents
getFirstPeriodIndexInSource(sourceIndex)
selenium.isVisible("link=Control Panel")
TArrays()
equalTo("Could not load compiled classes for script-display-name from cache.")
this.messageService.fluxPostAuthorizeFindById(1L).contextStart(withUser)
telephony.getCdmaEriIconIndexForSubscriber(subId)
AndroidExcludedRefs.createAndroidDefaults()
vsbPolicy=HORIZONTAL_SCROLLBAR_ALWAYS
super.getHibernateTemplate().executeFind(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Criteria crit=session.createCriteria(clazz);     for (Iterator i=expressions.iterator(); i.hasNext(); ) {       GrailsMethodExpression current=(GrailsMethodExpression)i.next();       crit.add(current.getCriterion());     }     List results=crit.list();     if (results.size() > 0) {       return results.get(0);     }  else {       return null;     }   } } )
AttributeCache.instance().get(packageName,realTheme,styleable.Window)
it.remove()
activity == null
Optional.of(caCertificatesFile)
status.getCode().ordinal()
activityNdx < topActivityNdx
volume.getMtpReserveSpace() * 1024 * 1024
moveInputMethodWindowsIfNeededLocked(false)
retry.attemptRetry()
i.getTouchIconUrl() != null
new LayerVisitor(editSession,asFlatRegion(region),minimumBlockY(region),maximumBlockY(region),ground)
selenium.isVisible("link=Control Panel")
new SessionParams(layoutParser,RenderingMode.NORMAL,null,configGenerator.getHardwareConfig(),resourceResolver,layoutLibCallback,0,21,getLayoutLog())
EntityCacheUtil.putResult(DefinitionModelImpl.ENTITY_CACHE_ENABLED,DefinitionImpl.class,definition.getPrimaryKey(),definition,false)
mHandler.removeCallbacks(pae)
new DefaultAgentOption(agentArgs,instrumentation,profilerConfig,pluginJars,bootStrapJarPath,serviceTypeRegistryService,annotationKeyRegistryService)
basicDLTest_Regression("./smalldata/logreg/prostate.csv","prostateRegression50.hex",new PrepData(){   @Override int prep(  Frame fr){     fr.remove("ID").remove();     return fr.find("AGE");   } } ,50,37.930232892825686,DeepLearningParameters.Activation.Rectifier)
get(context,R.string.pref_auto_viewed,true)
data.split("\\s*,\\s*")
-25
telephony.isOffhook()
native_get_videoeditor_export_profile(vidCodec)
AbstractMethodError e
Set<UidRange>
location.belongTo(BlockStoreLocation.anyTier())
client.login(email,password,code).compose(Transformers.pipeApiErrorsTo(tfaError)).compose(Transformers.neverError()).doOnSubscribe(() -> formSubmitting.onNext(true)).finallyDo(() -> formSubmitting.onNext(false))
mAudioSource.buildConfig(mDesiredSamplingRate,mDesiredChannelMask,mDesiredFormat,null)
new IdentityHashMap<>(values.length)
group.setVariables(variables)
Math.max(desiredTileWidth,desiredTileHeight)
mIpSecService.reserveSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
distanceToView(focused) > 0
service.getFullName()
A args
rows[bottomIndex]
log.info(message)
index > 0
EJBException nsee
logger.warn("There is no alarm running on {}",getUDN())
layer.setLayerPaint(paint)
c.getParent() == originalParent
type.getName()
Math.max(buffer.length,offset + length)
LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE)
new IllegalArgumentException()
Representor<T,U>
CompilerDirectives.inCompiledCode()
realm.assertThread()
IndexReader.open(dir,true)
threadCount=100
type.getConstructor()
CLOSURE_DO_CALL_METHOD.equals(methodName)
file == null
configInstance.getIntProperty(namespace + "eurekaServer.readTimeout",8000)
new EmoteClue("Panic by the mausoleum in Morytania. Wave before you speak to me. Equip a mithril plate skirt, a maple longbow and no boots.",new WorldPoint(3504,3576,0),PANIC,WAVE,item(MITHRIL_PLATESKIRT),item(MAPLE_LONGBOW))
MAX_DIMEN_FOR_ROUNDING=1080
ArrayList<MessageListener<Object>>
return _requestBuffers; 
numConnections=5
T t
rcvdBytesCnt.intValue()
mHandler.removeCallbacks(pae)
DefaultKeyGenerator.setMaxTolerateTimeDifferenceMilliseconds(0)
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
fraction * (nextValue - prevValue)
configInstance.getIntProperty(namespace + "eurekaServer.connectTimeout",5000)
in.readUTF()
event.getX()
req.getRequestURI()
Math.toDegrees(Math.asin(burgerWidth / hypotenuse)) - 90
setImageDrawable(icon)
media.getMediaType() == MediaType.AUDIO
_masterVec == null
Log_OC.e(TAG,"onResume() start")
new ZipAggregationStrategy(true)
logger.error("{}",builder)
scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-" + feature)
config.getIdleConnectionTimeoutInMs() > 0
@IntMethodAnnotation(value=-45)
mConnector.execute("cryptfs","createnewuserdir",userHandle,path)
KeyStore.getInstance("PKCS11")
type <= 255
new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(null,null,null),JSONParseSpec.JSON)
mState.mPivotYRel == relative
handshakeStatus == HandshakeStatus.NOT_HANDSHAKING
resetTimeInSeconds * 1000
handle.parent().exists()
addBuildParameterStiStrategy(parametersBuilder,imageText)
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
out.getVersion().after(Version.V_5_4_0_UNRELEASED)
new IllegalArgumentException("Advertising can't be both connectable and scannable")
oldConfig.densityDpi != newConfig.densityDpi
mAttributes.getFlags()
mHotspotBounds.set(left,top,bottom,right)
lastSyncTimestamp=currentOffset
size=1f
System.nanoTime()
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(4,Duration.ofMillis(100),Duration.ofMillis(2000)).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1,0,1,0,1,0,1).verifyErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 4/4").hasCause(exception))
apnContext.getWaitngApns()
Locale.getDefault().toString()
randomIntBetween(0,pbr.length() - sliceOffset)
Validator.isNull(ppe.getCause().getMessage())
new GlobalStatusEnum(85,ONLINE_STATUS,loadIcon("service.gui.statusicons.USER_ONLINE_ICON"),"service.gui.ONLINE")
Mono<CsrfToken>
LOG.info(e)
mockRegionInfo.isMetaRegion()
commandExecutor.evalReadAsync(getName(),codec,EVAL_GET_TTL,"local value = redis.call('hget', KEYS[1], ARGV[2]); " + "if value == false then " + "return nil; "+ "end; "+ "local t, val = struct.unpack('dLc0', value); "+ "local expireDate = 92233720368547758; "+ "local expireDateScore = redis.call('zscore', KEYS[2], ARGV[2]); "+ "if expireDateScore ~= false then "+ "expireDate = tonumber(expireDateScore) "+ "end; "+ "if t ~= 0 then "+ "local expireIdle = redis.call('zscore', KEYS[3], ARGV[2]); "+ "if expireIdle ~= false then "+ "if tonumber(expireIdle) > tonumber(ARGV[1]) then "+ "local value = struct.pack('dLc0', t, string.len(val), val); "+ "redis.call('hset', KEYS[1], ARGV[2], value); "+ "redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), ARGV[2]); "+ "end; "+ "expireDate = math.min(expireDate, tonumber(expireIdle)) "+ "end; "+ "end; "+ "if expireDate <= tonumber(ARGV[1]) then "+ "return nil; "+ "end; "+ "return val; ",Arrays.<Object>asList(getName(),getTimeoutSetName(),getIdleSetName()),System.currentTimeMillis(),key)
LOG.error(e)
SystemTable.getLocalHostId()
createMessageConsumer(session,destinationName,null,false,null,true)
selenium.isVisible("link=Control Panel")
Slog.wtf(TAG,"Starting rect for app requested, but none available",new Throwable())
connections.contains(manager)
options.put(key,System.getProperty(key))
Log.setDebugEnabled(JiveGlobals.getBooleanProperty(Log.LOG_TRACE_ENABLED,false))
new ObjectMapper().reader(Map.class)
selenium.isVisible("link=Control Panel")
getSettings().SAVE_GLOBAL_TRACK_INTERVAL.set()
responseBodyRegex == null
this.methodResolver.getRequestMappingMethod(handlerMethod).invoke(exchange,bindingContext).doOnNext(result -> result.setExceptionHandler(exceptionHandler)).otherwise(exceptionHandler)
this.messageService.fluxPostAuthorizeBeanFindById(1L).contextStart(withUser)
iterations * BLOCK_SIZE
private class Tester extends AbstractTransportTest {   @Override protected ManagedChannel createChannel(){     if (!useOkHttp) {       InetAddress address;       try {         address=InetAddress.getByName(serverHost);         if (serverHostOverride != null) {           address=InetAddress.getByAddress(serverHostOverride,address.getAddress());         }       }  catch (      UnknownHostException ex) {         throw new RuntimeException(ex);       }       SslContext sslContext=null;       if (useTestCa) {         try {           sslContext=GrpcSslContexts.forClient().trustManager(TestUtils.loadCert("ca.pem")).build();         }  catch (        Exception ex) {           throw new RuntimeException(ex);         }       }       return NettyChannelBuilder.forAddress(new InetSocketAddress(address,serverPort)).flowControlWindow(65 * 1024).negotiationType(useTls ? NegotiationType.TLS : NegotiationType.PLAINTEXT).sslContext(sslContext).build();     }  else {       OkHttpChannelBuilder builder=OkHttpChannelBuilder.forAddress(serverHost,serverPort);       if (serverHostOverride != null) {         builder.overrideAuthority(GrpcUtil.authorityFromHostAndPort(serverHostOverride,serverPort));       }       if (useTls) {         try {           SSLSocketFactory factory=useTestCa ? TestUtils.newSslSocketFactoryForCa(TestUtils.loadCert("ca.pem")) : (SSLSocketFactory)SSLSocketFactory.getDefault();           builder.sslSocketFactory(factory);         }  catch (        Exception e) {           throw new RuntimeException(e);         }       }       return builder.build();     }   } } 
mActionView.getHeight()
columnDefinition.getLoadFromCursorMethod()
IP_FILTER_ENABLED_HTTP_SETTING.getDefault(s)
? extends Exception
logger.info("license [{}] - invalid",license.uid())
subCursor.getInt(COLUMN_ATTENDEE_IDENTITY)
selenium.isVisible("link=Control Panel")
new LayerView(this,0xff00ff00)
set(object,value.intValue())
previousPropertyName.compareTo(propertyName)
(MergedObject<T>)t
maxSize > (used / 1024 / 1024)
deltaY > 0
setSort(4)
databaseFile.getPath()
mOneShot=true
condition.signal()
telephony.isOffhook()
recurrence.length() > 0
hours >= 2
mappers.mapper().searchAnalyzer()
processor.open(w2,request)
String.format("NODE %d: Already in or beyond node stage, ignoring. current = %s, requested = %s",this.node.getNodeStage().getLabel(),targetStage.getLabel())
formatter.printHelp()
enforceSystemOrSystemUI("grant notification listener access")
redirectToErrorPage(authSession,message,null,parameters)
MonitoringPortletImpl.isMonitoringPortletRenderRequest()
getStartPeriod() - offset * getPeriodLength()
cassandraProperties.getUsername()
ImageResource img; 
chooser.showSaveDialog(null)
file == null
selenium.isVisible("link=Control Panel")
queueFileForUpload(mediaUri,getContentResolver().getType(mediaUri))
-132758928
i < getATN().maxTokenType
key.rewind()
jsonObject.put("displayStyle",displayStyle)
it.getJavaDoc()
longSize >= 530
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,value))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
program.stackPop().intValue()
deleteChildrenRecursively(dir)
myCache1.getCacheConfiguration().getMaxElementsInMemory()
(byte)0xff
!filePath.endsWith(".jpg") || !filePath.endsWith(".gif")
v1
mHidProfile.isProfileReady()
TestShardRouting.newShardRouting(WatchStore.INDEX,0,"_node_id",null,true,ShardRoutingState.STARTED,1)
mAppOpsManager.noteOp(opCode,callingUid,opPackageName)
action == KeyEvent.ACTION_UP
prevNerEndIndex != (start - 1) && nextNerStartIndex != end
format(msg,Arrays.toString(MULTICAST_KEYS),Arrays.toString(UNICAST_KEYS))
log.debug("Filtering key {} due to exception",k,e)
this.principalSuffix != null
!element.getValid()
Integer.min(m,s.size())
c.getInt(29)
handleIncomingUserLocked(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
new InetSocketAddress(0)
n < count(coll)
layout == null
tracesFile.mkdirs()
connectionWaitMs + delta
ServiceApiUtil.validateAndResolveApplication(application,sfs)
Stream.of("CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
order=2
GroupPermissionUtil.contains(themeDisplay.getPermissionChecker(),team.getGroupId(),ActionKeys.MANAGE_ANNOUNCEMENTS) || RolePermissionUtil.contains(themeDisplay.getPermissionChecker(),themeDisplay.getScopeGroupId(),role.getRoleId(),ActionKeys.MANAGE_ANNOUNCEMENTS)
Lists.newArrayListWithExpectedSize(resultMessages.size())
qux.getConstructor()
buildData.getBuildURL()
new InterruptedException()
new RedisCommand<String>("PING",new ListObjectDecoder<String>(0))
stream.close()
sep < 0
sendMessage(CMD_STOP_AP)
NUM_DAYS_AGO=5
result.getSqlType()
GrIntroduceHandlerBase.findAnchor(context.getOccurrences(),clazz)
createRecord(value,expiryTime)
!this.isStompConnected
assertEquals(expectedPlan,actualPlan)
valueMono.otherwiseIfEmpty(exchange.isNotModified() ? Mono.empty() : NO_VALUE_MONO)
Env.valueOf(env)
scopeProperty.eq(name)
RebalanceUtils.getCurrentPartitionMapping(cluster)
anomalyFailureCount == 0 || anomalyWarningCount == 0
loaded.getLoaded().getConstructor()
new LabelSet.ArrayBasedLabelSet(labelIds)
Map<Integer,Object>
selenium.isVisible("link=Control Panel")
specBuilder.setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE,KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
y < 32
BitmapUploadActivity.class
15 * 1000
new AutoBuffer().put(this).bufClose()
syncOperation.delay == 0
mLteSignalStrength > 63
storedOverlayInfos.get(i)
mData.remove(pos)
d.setHotspot(x,y)
log.error("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
getServiceGuarded().importMultimediaMessage(callingPkg,pdu,messageId,timestampSecs,seen,read)
selection.getAsFiles()
range.getFrom()
mPlayer.getCurrentPosition() * 1000
fill
daysBack=14
return mChangingDisappearingDuration; 
Arrays.asList("100b","100",(10000. / JvmInfo.jvmInfo().getMem().getHeapMax().bytes()) + "%")
Timber.v("Authentication exception for new token, permanent error assumed",negativeResponseFromNewToken)
c == Byte.class
isText(mimeType) || APPLICATION_CEA608.equals(mimeType) || APPLICATION_SUBRIP.equals(mimeType)|| APPLICATION_TTML.equals(mimeType)|| APPLICATION_TX3G.equals(mimeType)|| APPLICATION_MP4VTT.equals(mimeType)|| APPLICATION_RAWCC.equals(mimeType)|| APPLICATION_VOBSUB.equals(mimeType)|| APPLICATION_PGS.equals(mimeType)
/**   * Call WebModuleUtil.startModule on each started module  * @param servletContext  * @throws ModuleMustStartException if the context cannot restart due to a{@link MandatoryModuleException} or {@link OpenmrsCoreModuleException}  */ public static void performWebStartOfModules(ServletContext servletContext) throws ModuleMustStartException, Throwable {   Log log=LogFactory.getLog(Listener.class);   List<Module> startedModules=new ArrayList<Module>();   startedModules.addAll(ModuleFactory.getStartedModules());   boolean someModuleNeedsARefresh=false;   for (  Module mod : startedModules) {     try {       boolean thisModuleCausesRefresh=WebModuleUtil.startModule(mod,servletContext,true);       someModuleNeedsARefresh=someModuleNeedsARefresh || thisModuleCausesRefresh;     }  catch (    Exception e) {       mod.setStartupErrorMessage("Unable to start module",e);     }   }   if (someModuleNeedsARefresh) {     try {       WebModuleUtil.refreshWAC(servletContext,true,null);     }  catch (    ModuleMustStartException ex) {       throw ex;     } catch (    Exception e) {       Throwable rootCause=getActualRootCause(e,true);       if (rootCause != null) {         log.fatal("Unable to refresh the spring application context.  Root Cause was:",rootCause);       }  else {         log.fatal("Unable to refresh the spring application context. Unloading all modules,  Error was:",e);       }       try {         WebModuleUtil.shutdownModules(servletContext);         for (        Module mod : ModuleFactory.getLoadedModules()) {           if (!mod.isCoreModule() && !mod.isMandatory()) {             try {               ModuleFactory.stopModule(mod,true,true);             }  catch (            Throwable t3) {               log.trace("Unable to shutdown module:" + mod,t3);             }           }         }         WebModuleUtil.refreshWAC(servletContext,true,null);       }  catch (      MandatoryModuleException ex) {         throw new MandatoryModuleException(ex.getModuleId(),"Got an error while starting a mandatory module: " + e.getMessage() + ". Check the server logs for more information");       } catch (      Throwable t2) {         log.warn("caught another error: ",t2);         throw t2;       }     }   }   for (  Module mod : ModuleFactory.getStartedModules()) {     WebModuleUtil.loadServlets(mod,servletContext);     WebModuleUtil.loadFilters(mod,servletContext);   } } 
/**   * The root package controller.   */ private PkgControl root; 
DEBUG=true
t.getValue()
bndLanguageProperties.containsKey(languageKey)
dlFileEntryFinder.countByG_U_F_M(groupId,0,folderIds,mimeTypes,new QueryDefinition(WorkflowConstants.STATUS_ANY))
response.getContentAsString()
XmppStringUtils.parseBareAddress(userJID)
ArrayList<IdFetcher>
Subqueries.gt(0L,subquery)
LOG.debug("Skipping incompatibly changed class: " + className)
chargeUAh > 0
result.length() < 4
!mService.mLockTaskController.checkLockedTask(tr)
channel == null
verify(instrumentation,times(2)).isRetransformClassesSupported()
logger.error(evt.getReason())
mWindowManager.removeView(mPopupView)
capacity > 1 << 30
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
Optional<V>
_log.error(ioe,ioe)
setEnabledFunctions(mDefaultFunctions,false)
new PyClassType(project,typeName,true)
o instanceof TravelArticle
!isFullyCollapsed() && !mTracking
Integer.parseInt(sid[0])
DumpUtils.checkDumpPermission(mContext,TAG,pw)
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
new LFWLoader(imgDim,imageTransform,normalizeValue,useSubset).getRecordReader(numExamples,batchSize,imgDim,numLabels,labelGenerator,train,splitTrainTest,rng)
/**   * {@inheritDoc}   */ @Override public void start() throws IgniteCheckedException {   if (dataSrc == null)   throw new IgniteCheckedException("Failed to initialize cache store (data source is not provided).");   if (dialect == null)   dialect=resolveDialect(); } 
Localization.lang("BibTeX")
StringUtils.isNotBlank(cert)
doc == NO_MORE_DOCS
messenger.signUp(name,null,false)
WindowedValue.valueInEmptyWindows(2,PaneInfo.ON_TIME_AND_ONLY_FIRING)
input.read(b)
options.getLambdaRole()
Mono<CsrfToken>
{0,7}
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
Log.e(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
mHwSession.getConfigFlag(flag,(int result,boolean value) -> {   halResult.value=result;   flagState.value=value; } )
verify(client).bufferAtomicIncrement((AtomicIncrementRequest)any())
task.getInputs().files(futureValue)
publishWorkspaceStatusEvent(workspaceId,STOPPED,RUNNING,"Error occurs on workspace runtime stop. Error: " + event.getError())
update.metadata().table
Objects.hashCode(mLocationPolicy,mReadType)
incomingMessage.getMessagePayloadByte(0)
latch.await(10000,TimeUnit.MILLISECONDS)
counter + 2
apnContext.getWaitngApns()
mTextColor.getColorForState(ds.drawableState,0)
"Error resetting interface " + mInterfaceName + ", :"+ e
HashCode.fromInt(hashCode())
registryCache.putIfAbsent(channel.getName(),registry)
Optional.of(realmName)
contains="directCall"
Preconditions.checkNotNull(content,"Internal Error: Content can't be null")
!(orderParams instanceof CancelOrderByIdParams) && !(orderParams instanceof CancelOrderByCurrencyPair)
EntityCacheUtil.putResult(AssetModelImpl.ENTITY_CACHE_ENABLED,AssetImpl.class,asset.getPrimaryKey(),asset,false)
targetActor.addCaptureListener(listener)
from("jms:queue:order").to("bean:validateOrder").to("mock:validate").threads(20).unmarshal(mySecureDataFormat).delay(1000)
new LightweightThread(null,new MergeTest())
prefsWriter.commit()
@Override public ResponseImpl example(String type,Object example){   if (examples == null) {     examples=new HashMap<String,Object>();   }   examples.put(type,example);   return this; } 
!conf.get("spark.submit.deployMode").equals("cluster")
from >= to
logger.warn("NODE {}: BATTERY LOW!",this.getNode().getNodeId())
DEBUG=true
LOG.info("Creating short circuit input stream for block {} @ {}",blockId,address)
mHomeStack == null
conversation.getContactJid().split("/")
client.onChannelDisconnect()
new ApiEventBuilder().setSubscriptionId(subscription.getId()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setEffectiveDate(effectiveDate).setRequestedDate(now)
new JBList(){   int lastKnownHeight=JBUI.scale(30);   @Override public Dimension getPreferredSize(){     final Dimension size=super.getPreferredSize();     if (size.height == -1) {       size.height=lastKnownHeight;     }  else {       lastKnownHeight=size.height;     }     return new Dimension(Math.max(myBalloon.getSize().width,Math.min(size.width - 2,POPUP_MAX_WIDTH)),myList.isEmpty() ? JBUI.scale(30) : size.height);   }   @Override public void clearSelection(){   }   @Override public Object getSelectedValue(){     try {       return super.getSelectedValue();     }  catch (    Exception e) {       return null;     }   } } 
q.setFetchSize(timeoutParam.intValue())
Boolean.valueOf(attrValue)
LocalDateTimeUtils.getLocalDateClass()
counter <= max
isExcludedClass(theClass)
LOG.info(() -> String.format("Discovering tests during launcher %s phase in engine '%s'.",phase,testEngine.getId()))
getDataSource()
-1570806775
ON_TOP
this.importsDestFile
mValues[7]
LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layoutUuid,groupId,false)
(encoded >> 32) & 0xFFFF_FFFFl
expect(cluster.getClusterName()).andReturn("cluster").times(2)
onFocusChange(mRefreshButton,false)
new RuntimeException(String.format("File \"%1$s\" has incorrect indentation in comment." + "Line %2$d: comment:%3$d, actual:%4$d.",aFileName,lineNumber,indentInComment,actualIndent))
settings.readLPw(null)
dynamicType.getLoaded().getConstructor()
poolProperties.getRemoveAbandonedTimeout() * 1000
ActivityManagerNative.getDefault().updateConfiguration(config)
imageHolder.getStyleClass().setAll("page")
PipelineLabel.create(labelTemplate,buildCause.getVariables().insecureVariablesHash())
DataType.list(datatype)
IBackupManagerService svc=mService; 
new JComboBox()
private String modSource; 
super.notifyListenersAboutAddedElement(element)
listener.iterationDone(mln,iterationCount)
setColor(color)
thrown.equals(UserCodeException.class)
wasLoaded && !(myStreamProvider instanceof OldStreamProviderAdapter || myStreamProvider instanceof CurrentUserHolder)
!mResources.getConfiguration().isScreenRound()
ic.readInt("zFarOverride",0)
convert31XToMeters(xB,xA)
SSLParametersImpl.getDefaultTrustManager()
tableCache.getObject(monitor,this,name,DB2View.class)
context.world().setBlock(x2,y,z2,block,meta + 8,1)
mVibratorService.vibratePattern(new long[]{0},0,new Binder())
new StreamError(sm.getString("streamStateMachine.invalidFrame",stream.getConnectionId(),stream.getIdentifier(),state,frameType),state.errorCodeForInvalidFrame,stream.getIdentifier().intValue())
mConferenceById.containsKey(callId)
Collection<Fragment>
firstPos != mTargetPos
TimeValue.timeValueMillis(delay)
Log.wtf(mTag,"Adjusting remote volume without a controller!")
allGpxAdapter.getGroupCount() > 0
PULL_DECAY_TIME=10000
@NotNull
new Paint()
origin >= other
!mAwake
new ChannelHandlerAdapter(){   @Override public void channelWritabilityChanged(  ChannelHandlerContext ctx) throws Exception {     buf.append(ctx.channel().isWritable());     buf.append(' ');   } } 
!isPartialUpdate
selenium.isVisible("link=Control Panel")
Validate.notEmpty("Cookie name must not be empty")
ClassNotFoundException e
queryNotifyLatch.await(25,TimeUnit.MILLISECONDS)
mAdapter.getCount() == 0
ap.getSsid()
selenium.isVisible("link=Control Panel")
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
4 * (float)Math.sqrt(radius)
request.getServletPath()
selenium.isVisible("link=Control Panel")
xCapClient.dicsonnect()
CACHE_MANAGER.addCache(storageCache)
hasOnClickListeners()
matcher.matches()
mPanelClosedOnDown && !mHeadsUpManager.hasPinnedHeadsUp() && !mTracking&& !mStatusBar.isBouncerShowing()
selenium.isVisible("link=Control Panel")
logger.error("Couldn't calculate the target package! Using default: " + DEFAULT_PACKAGE)
Integer.parseInt(value)
!KotlinDetector.isKotlinType(ctor.getDeclaringClass())
isReturnGeneratedKeys() && generatedKey.isPresent()
mHandler.postDelayed(pae,timeout)
uuid != null
/**   * Gets the value of the miterlimit property.  * @return possible object is {@link BigDecimal }  */ public BigDecimal getMiterlimit(){   return miterlimit; } 
mappingsDir.exists()
ApplicationManager.getApplication().invokeLater(() -> {   project.getMessageBus().connect().subscribe(ToolWindowManagerListener.TOPIC,myPostponedEventsListener);   installContentListener(); } )
ev.mTimeSamples.length < NT
mClocks.elapsedRealtime()
methodRedefinitionResolver.resolve(methodDescription)
i != Integer.MAX_VALUE
input.setSourceFileNameFieldName(wSourceFileNameField.getText())
response.sendError(statusCode)
DebuggerUtilsEx.collectLambdas(original,false)
ultimateRecyclerView.enableSwipeRefresh(true)
new PseudoDescription().load()
new StatsLogEventWrapper(tagId,6)
return true; 
new JBHiDPIScaledImage(newUserWidth,newUserHeight,getType())
_constructor.newInstance(fileEntry.getFileEntryId(),fileEntry.getFileEntryId(),_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK)
" firstActiveTime=" + lastActiveTime
new Bottom()
Exception e
lock.isLocked()
ConfigPropertyVetoExceoption exception=null; 
new FreeMarkerTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,context,_configuration,_templateContextHelper)
logger.warn("Line-in of {} is not connected",remoteHandler.getUDN())
downstreamNodes.equals(executionPhase.nodeIds())
Collection.class
ufsPath.getPath()
@Priority(500)
RouteInfo r; 
c.getAddMessageStatement()
selenium.isVisible("link=Control Panel")
revisionVersion=0
loaded.getLoaded().getConstructor()
ret.setComplete(response)
myClassScopeTypeName != null
promise.setSuccess()
null != rootCause
new SAXException(e.getMessage())
stat == null
assertEquals(1,this.context.getBean(FilterChainProxy.class).getFilterChains().size())
16 << 10
context.getPackageName()
validateFriendlyURL(group.getGroupId(),group.getCompanyId(),group.getClassNameId(),group.getClassPK(),friendlyURL)
this.controller.saveService(new MockHttpServletRequest(),new MockHttpServletResponse(),data,mock(BindingResult.class))
startTemplate(editor,null,template,listener,null,false)
variable.getVariables()
fields != null
hidePrivateMembers=true
">>> Started two caches bound to '" + POLICY_20MB_EVICTION + "' memory region."
GenericObjectContainer parent
number.intValue()
setupFillPaint(paint,opacity)
element == null
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).switchOnError(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
element.isNamespace()
loaded.getLoaded().getConstructor()
/**   * @see Submit  */ public class SubmitTag extends AbstractUITag {   private static final long serialVersionUID=2179281109958301343L;   protected String action;   protected String method;   protected String align;   protected String type;   protected String src;   public Component getBean(  ValueStack stack,  HttpServletRequest req,  HttpServletResponse res){     return new Submit(stack,req,res);   }   protected void populateParams(){     super.populateParams();     Submit submit=((Submit)component);     submit.setAction(action);     submit.setMethod(method);     submit.setAlign(align);     submit.setType(type);     submit.setSrc(src);   }   public void setAction(  String action){     this.action=action;   }   public void setMethod(  String method){     this.method=method;   }   public void setAlign(  String align){     this.align=align;   }   public String getType(){     return type;   }   public void setType(  String type){     this.type=type;   }   public void setSrc(  String src){     this.src=src;   } } 
IndexReader.openIfChanged(oldReader)
applyCurrentState()
Thread.sleep(5000)
selenium.isVisible("link=Control Panel")
readStayAwakeConditions()
serialVersionUID=619363800
SSLHandshakeException e
new TitanException("Unable to close transaction",Iterables.getOnlyElement(txCloseExceptions.values()))
PyDebugRunner.createCommandLinePatchers(pyState,profile,serverLocalPort)
ImplemetationMethodDescriptor methodDescriptor
ConfigUtils.absoluteHealthCheckDir(stormConf)
LOG.error(result.getDescription())
LOGGER.debug("Resolved service [{}] from the authentication request")
Arrays.asList("spring-boot-starter-jetty-","jetty-continuation","jetty-util-","javax.servlet-","jetty-io-","jetty-http-","jetty-server-","jetty-security-","jetty-servlet-","jetty-servlets","jetty-webapp-","websocket-api","javax.annotation-api","jetty-plus","javax-websocket-server-impl-","asm-","javax.websocket-api-","asm-tree-","asm-commons-","websocket-common-","jetty-annotations-","javax-websocket-client-impl-","websocket-client-","websocket-server-","jetty-jndi-","jetty-xml-","websocket-servlet-")
w.applyTo(myNode,myNode.getAttributeList())
gasPrice.length > HASH_LENGTH
target.toFile().isDirectory()
_fileEntryDisplayContextHelper.isCheckedOutByMe()
new ParameterSpec("executedValue",types.toArray(new TypeMirror[types.size()]),getNode().getTypeSystem().getGenericType(),false,Cardinality.ONE)
checkPojoMetaClass()
repo.setRecoveryInterval(500,TimeUnit.MILLISECONDS)
new StatsLogEventWrapper(SystemClock.elapsedRealtimeNanos(),tagId,6)
new IndexWriter(directory,autoCommit,new WhitespaceAnalyzer(),false)
input.read(b)
latch.await(100,TimeUnit.MILLISECONDS)
pluginClasspathUrl.getFile()
checkPojoMetaClass()
new ActFmServiceException(object.getString("message"))
_ddmStructure.getDescription()
e.getCause()
next != 1
r.getUri().toString()
getName()
new LineNumberRange(1,0,move)
msgss == null
animator.setMaxFrame(-9000)
url.toServiceString()
is(3)
Const.isEmpty(stepTablename)
null == result
checkArgument(fnSpec.getSpec().getUrn().equals(CUSTOM_JAVA_DO_FN_URN))
new Message("XML_STREAM_EXC",LOG)
Blocks.dirt.func_149739_a()
logger.error("No file to compact for user defined compaction")
this == group.mInternalConnection
loadWallpaper(forDraw,true)
m.getSize()
contentType.equals(ContentTypes.PRESENTATIONML_MAIN)
SCAN_STATUS_COMPLETE=1
xml.attribute("name",name)
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0,UserHandle.USER_CURRENT)
Long.valueOf(val)
myTabs.isEditorTabs() && UISettings.getShadowInstance().getShowCloseButton()
size.longValue()
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
LAST_VERSION=169
getProperties().requestCachingEnabled()
new RuntimeException()
!calledSetTotal
group.isLayout() || group.isLayoutSetPrototype() || group.isSite()
mListener.setConnectionId(0)
logger.info("Computing Control Flow Graph")
isOffhook
DataStream<OUT>
!root.isDownloads()
PackageManager.SIGNATURE_MATCH != pm.checkSignatures(authUid,targetUid)
mResourceData[i] != null
new WorldPoint(1302,3762,0)
/**   * Helper method, has same effect as <pre>return enhance(cls, interfaces, ih, null, null);</pre>  * @see #enhance(Class,Class[],MethodInterceptor,ClassLoader,Method,MethodFilter)  */ public static Object enhance(Class cls,Class interfaces[],Callback callback){   return enhanceHelper(cls,interfaces,callback,null,null); } 
hasNextChunk()
processSelectedKeys()
CalendarBookingServiceUtil.addCalendarBooking(calendarId,CalendarBookingConstants.PARENT_CALENDAR_BOOKING_ID_DEFAULT,childCalendarIds,titleMap,descriptionMap,location,startDateJCalendar.getTime(),endDateJCalendar.getTime(),allDay,recurrence,0,0,serviceContext)
onDetachedFromWindows()
assertEquals(4,tool.getAllRules().size())
mPowerManager.isScreenOn()
factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
(Integer)criteria.uniqueResult()
mRouter.selectRoute(mRouteTypes,route)
getServiceGuarded().importMultimediaMessage(callingPkg,pdu,messageId,timestampSecs,seen,read)
discardChannel.receive(100)
animation.setDuration(300l)
task == null
result.signum() <= 0
log.debug(exception.getMessage())
centerButton(mButtonNeutral)
row - 0.25f
childrenExpanded ? mDividerHeight : mChildPadding
FridgeFreezerChannelSelector selector=(FridgeFreezerChannelSelector)getValueSelectorFromChannelID(channelID); 
c.deactivate()
new GridConcurrentHashSet<>(entries.size(),U.capacity(entries.size()),1)
mouseEvent.getModifiers()
offset * 12
config.getServerNumThreads()
mService.mDisplayContents.get(displayNdx)
BooleanUtils.isFalse(p.getMetadata().getExcluded())
capContacts.contains(defaultContact)
checkPojoMetaClass()
1
clearFromMember.start()
for (AnnotationInstance annotation : excludeDefaultAnnotations) {   final AnnotationTarget target=annotation.target();   if (target instanceof MethodInfo) {     final MethodInfo methodInfo=MethodInfo.class.cast(target);     final MethodIdentifier methodIdentifier=methodIdentifierFromMethodInfo(methodInfo);     componentConfiguration.excludeClassInterceptors(methodIdentifier);   }  else {     throw new DeploymentUnitProcessingException("ExcludeClassInterceptors not applied to method: " + target);   } } 
LOG.warn("Operation completely failed, aborting request id: {}",stage.getRequestId())
war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(),"web.xml")
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
value == null
UPDATES_BEFORE_CHECK_LOCATION=20
FileUtil.shortenFileName(foundFile,dirs)
drawable != mBackgroundDrawable
this.mrwork.getHadoopSupportsSplittable()
Exception e
setImageViewMatrix(getDrawMatrix())
d.getClass()
((VarcharType)type).getLength()
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,false)
mService.enableNetwork(netId,attemptConnect,mContext.getOpPackageName())
selenium.isVisible("link=Control Panel")
new StatsLogEventWrapper(SystemClock.elapsedRealtimeNanos(),tagId,6)
getPackageManager().addPreferredActivity(filter,bestMatch,set,intent.getComponent(),UserHandle.getUserId(mLaunchedFromUid))
FunctionTypesKt.isExactFunctionOrExtensionFunctionType(((ClassDescriptor)containingDeclaration).getDefaultType())
getApplicationInfo().targetSdkVersion >= O
fluentSetters()
staticLibrary == null
searcher.get().getIndexReader()
IntrospectionSupport.getProperties(configuration,params,null)
S.toString(GridTcpDiscoveryNode.class,this,"attrs",attributes())
Trans == TRANSPOSE
myCache1.get("myKey1").getValue()
/**   * Takes the blob of Kubernetes JSON (pod, replication controller, service, config, template etc) and applies it to the runtime environment so that any changes or new items take effect  */ String apply(String json) throws IOException ; 
anchorView.getWindowToken()
selenium.isVisible("link=Control Panel")
AllGlsJavaTestsSuite.suite()
scheduler.scheduleRecurring(indexPopulation,countInvocationsJob,1,MILLISECONDS)
Math.min(mGlowAlpha + (Math.abs(deltaDistance) * PULL_DISTANCE_ALPHA_GLOW_FACTOR),MAX_ALPHA)
manualClock.addTimeMs(1020)
JoglDisplay.class
authHeaders.size() != 1
return CTR; 
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(refElement).description(message)
TeraSort.class
prefix != null
loaded.getLoaded().getConstructor()
(status & 0x80000000) > 0
TABLE_SYSTEM.equals(this.table) || TABLE_SECURE.equals(this.table)
configElements[1]
selenium.isVisible("link=Control Panel")
getTestName(false)
relationshipCursor.label()
Log.wtf(TAG,e.getMessage(),e)
node.getLifecycleService().terminate()
order=2
channel.writeHeaders()
cSet.getConcept()
mService == null
order=4
mContext.getPackageManager().getUserBadgedDrawableForDensity(icon,new UserHandle(td.userId),null,0)
getChildFragmentManager().beginTransaction().add(R.id.stats_pager_container,fragment)
new Paint()
MINOR_ALPHA=.3f
Boolean.parseBoolean((String)disableMultipart)
new PagesListAddPageRecord(cacheId,pageId,nextId)
selenium.isVisible("link=Control Panel")
mUserPaddingStart >= 0
assertEquals(flowerVocab.getIndex(),1)
logger.error("cs-change-async-action-callback. current-step:" + currentStep.getKey())
doNotUseAnimations ? 0 : ZOOM_MOVE_ANIMATION_TIME
viewRootImpl.getAccessibilityInteractionController().findAccessibilityNodeInfosByViewTextClientThread(text,accessibilityNodeId,interactionId,callback,interrogatingPid,interrogatingTid)
h >>> 31
new IgfsListingEntry(oldId,true)
Flux.fromIterable(this.handlerMappings).concatMap(mapping -> mapping.getHandler(exchange)).next().otherwiseIfEmpty(Mono.error(HANDLER_NOT_FOUND_EXCEPTION))
getTimeout()
ap.getSsid()
executorCount--
selenium.isVisible("link=Control Panel")
DeprecationLogger.nagUser("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
new WorldPoint(2466,3461,0)
wrapper != null
SkuTranslationImpl.class
fieldDescriptor.getName()
mSharedElementNames.size()
Settings.Secure.getIntForUser(mContext.getContentResolver(),DOZE_SENSORS_WAKE_UP_FULLY,1,UserHandle.USER_CURRENT)
Math.max(titleRight,subtitleRight)
MLPMnistSingleLayerExample.class
jp.getIntValue()
isTextEditable() && isSuggestionsEnabled()
e.toString()
@Override public MavenModule dependsOnModules(String... dependencyArtifactIds){   backingModule.dependsOnModules(dependencyArtifactIds);   return t(); } 
consoles.waitUntilJdtLsStarted()
endLogicalColumn < marginColumns
UIPasteboard.getGeneral()
uri.getAssetName().toString()
new IOException()
new InetSocketAddress("localhost",8888)
ImmutableList.of(interceptors)
query.length()
mConfiguration.keyboard != Configuration.KEYBOARD_UNDEFINED
Messages.MESSAGES.templateParameterNull(param)
readBytes >= 0
getAll()
generator.emitMove(val,register.asValue(val.getKind()))
public TokenStream create(TokenStream input){   return new PhoneticFilter(input,encoder,name,inject); } 
assertCompletionVariants(myProjectPom,"3.8.1","3.8.2","4.0")
random().nextInt(9) + 1
new PackagesNotificationPanel(project)
getResource(exchange).otherwiseIfEmpty(Mono.defer(() -> {   logger.trace("No matching resource found - returning 404");   exchange.getResponse().setStatusCode(HttpStatus.NOT_FOUND);   return Mono.empty(); } ))
new PlaybackServiceStarter(context,media).startWhenPrepared(false)
myPluginDescriptor.getPluginClassLoader() != null
Convolution.im2col(input,kH,kW,sY,sX,pY,pX,false,out3p)
Trans == TRANSPOSE
verifyPosition(decoder,binary("0011000315A07F440B1D07534554494f20636f6e66696775726174696f6e2064617461206f6b341C"))
AssetTagFinderUtil.filterCountByG_C_N(_scopeGroup.getGroupId(),classNameId,assetTagName)
command.getId()
mSearchInput.setFocusable(focusable)
/**   * Support the range subscript operator for String  */ public static Object get(CharSequence text,Range range){   int from=normaliseIndex(InvokerHelper.asInt(range.getFrom()),text.length());   int to=normaliseIndex(InvokerHelper.asInt(range.getTo()),text.length());   int length=text.length();   if (from > to) {     int tmp=from;     from=to;     to=tmp;   }   return text.subSequence(from,to + 1); } 
progressIndicatorWhenSearchStarted == myResultsPreviewSearchProgress
Boolean.valueOf(attrValue)
return true; 
Iterables.find(getPlayers(),new Predicate<ProxiedPlayer>(){   @Override public boolean apply(  ProxiedPlayer input){     return (input == null) ? false : input.getName().toLowerCase().contains(partialName.toLowerCase());   } } )
InsertFinalStep<R>
LOG.error("Found spell checking wrapper is not local " + spellCheckingWrapper)
new LayerView(this,0xff00ff00)
/**   * Add a  {@link Publication} for publishing messages to subscribers.  * @param channel  for receiving the messages known to the media layer.  * @param streamId within the channel scope.  * @return the new Publication.  */ public Publication addPublication(final String channel,final int streamId){   clientLock.lock();   try {     return conductor.addPublication(channel,streamId);   }   finally {     clientLock.unlock();   } } 
@Converter
LOGGER.debug("Could not execute unmarkEntries",ex)
measureRun(0,0,target,mLen,true,fmi)
JSRefactoringUtil.createTypeElement(myTargetClass.getProject(),type)
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
String.format("The variables input contains a field name '%s' that is not defined for input object type '%s' ",GraphQLTypeUtil.getUnwrappedTypeName(graphQLType),fieldName)
!PortalUtil.isLayoutFirstPageable(type)
new LightweightThread(null,this)
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
mCard.getVisibility() != View.VISIBLE
bound.equals(psiClass2)
public GlobFileFilter getFileFilterFromFileTypes(String fileTypes){   String glob;   if (fileTypes.equals("*"))   glob=".*";  else   glob="^.*\\.(" + fileTypes.replace(",","|") + ")$";   return new GlobFileFilter(glob,true); } 
StatusBarIconController.getTint(tintArea,mMobileActivity,tint)
IOException e
selenium.isVisible("link=Control Panel")
RepositoryDirectoryUI.getTreeWithNames(newJob,rep,objectMap,dircolor,sortColumn,includeDeleted,ascending,false,true,directoryTree,null,null)
(mOomMinFreeHigh[5] * 7) / 8
TimeUnit.SECONDS.toMillis(2)
boolean store() default true; 
MAX_PARAGRAPH_TIMEOUT_SEC=60
type.getConstructor()
/**   * Something that can be called, passed parameters to, and return something back.  * @author dcheryasov  */ public interface Callable extends PyElement {   /**   * @return a list of parameters passed to this callable, possibly empty.  */   @NotNull PyParameterList getParameterList();   /**   * @return the type of returned value.  */   @Nullable PyType getReturnType(  @NotNull TypeEvalContext context,  @Nullable PyQualifiedExpression callSite);   /**   * @return a methods returns itself, non-method callables return null.  */   @Nullable PyFunction asMethod();   /**   * Returns the qualified name of the function.  * @return the qualified name of the function, or null for a lambda expression.  */   @Nullable String getQualifiedName(); } 
p3.isTerminated() == false
bicyclePriorityValues.put("steps",0.5d)
from > to
Status.constructStatuses(get(getApiBaseURL() + V1 + user+ "/lists/"+ id+ "/statuses.json",new PostParameter[0],paging.asPostParameterList(Paging.SMCP,Paging.PER_PAGE),true))
stream.close()
mListView.getChildAt(index)
widthRatio > 0.8
new WriteResult(translateCommandResult(new RemoveOperation(getNamespace(),remove,getDocumentCodec(),getBufferPool(),getSession(),false).execute()),writeConcern)
typeDefinition.getGroovyMethods()
ignoreUnknown=false
options.checkProvides.isOn()
FastMath.max(origin,num.floatValue())
logger.error("{} unsupported item type {} for item {}",LoggerConstants.TFMODELUPDATE,provider.getItem(itemName),itemName)
return sinkMaxBufferSize; 
@Override public String getSource(){   return modSource; } 
Status.constructStatuses(get(getBaseURL() + "statuses/retweets/" + statusId+ ".json",true))
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
!root.isDownloads()
a.getBoolean(R.styleable.View_fadeScrollbars,false)
myDefinition.getNestedClassName(definition.getTypeId()) == null
trimmedLine.startsWith(StringPool.CLOSE_CURLY_BRACE) && line.endsWith(StringPool.OPEN_CURLY_BRACE)
getOptional(HTABLE_DEFAULT_COMPRESSION_CODEC)
this.messageService.fluxPreAuthorizeBeanFindById(2L).contextStart(withAdmin)
from > to
policy_empty == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS
((JavaLibrary)exported).getTransitiveClasspaths()
73.99408
session.executeAsynchronousPost(syncAccount.getUrl() + "/api/jsonws" + urlPath,parameters,_handler,false)
SamplingProfiler.newThreadGroupTheadSet(group)
new WorldPoint(1500,3703,1)
defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
lock.isLocked()
logger.info("license [{}] - grace",license.uid())
newDirectory()
(startTime + 500) / 1000
ruleContext.ruleError("Xcode version must be specified to use an Apple CROSSTOOL")
sourceNodeData != null
mApplicationObject == null
NotifyUtil.show("Warning",formatter.formatMessage(record),MessageType.WARNING,listener,5000)
glyph.setSizeRatio(sizeSlider.getValue())
dataBuffer.rewind()
new LLVMInsertDoubleValueNode(resultAggregate,sourceAggregate,size,offset,(LLVMDoubleNode)valueToInsert)
failure.getCause()
h.addParameters("-v","--merge")
Boolean.valueOf(attrValue)
StringUtils.trimToNull(comparisonObjectSchema.getName())
capacity > 1 << 30
childLeftTuple.reAddRight()
log.warn("Error loading known hosts",e)
!transformations.isEmpty()
MacMessages.showYesNoDialog(message,title,YES_BUTTON,NO_BUTTON,WindowManager.getInstance().suggestParentWindow(project))
params.getSimulatePlatformVersion()
sqlRouteResult.getSqlParsedResult().getSqlType()
log.warn("Not found",e)
new ActionModeImpl(callback)
@UnsupportedAppUsage
selenium.isVisible("link=Control Panel")
conn.getResponseCode() != HttpURLConnection.HTTP_OK
logger.error("Could not locate PropertySource: " + (errorBody == null ? error == null ? "label not found" : error.getMessage() : errorBody))
SimpleAttributeDefinitionBuilder.create("max-inclusive",ModelType.BOOLEAN)
StartupManager.getInstance(module.getProject()).registerPostStartupActivity(new DumbAwareRunnable(){   public void run(){     ApplicationManager.getApplication().runWriteAction(new Runnable(){       public void run(){         onModuleInitialized(module);       }     } );   } } )
LanguageUtil.get(locale,getKey())
mSyncStatus.get(i)
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
mTfs.ls(Constants.PATH_SEPARATOR,true)
GL11.glTexParameter(target,pname,params)
assertArrayEquals(arr2,view.getBinaryByteArray(0,0))
new UnsupportedOperationException()
JDBCClassDetermine jdbcClassDetermine=new JDBCClassDetermine(); 
new TypeResolver(arrayListOfString)
assertThat(targetConnectionCount).isGreaterThanOrEqualTo(goodServerStats.getTotalRequestsCount())
logger.info("Attaching API Key: " + apiKey)
layer.setLayerPaint(paint)
myLookup.getTopLevelEditor().getInlayModel().addInlineElement(caretOffset,createGrayRenderer(suffix))
WordPress.getCurrentBlog().getRemoteBlogId()
Character.isLetter(ch)
ReportRequestMessageListener.class
ByteArray.fromLong(assetId)
targetInfo != null
new IllegalArgumentException("Legacy advertisement can't be connectable and non-scannable")
XmppStringUtils.parseBareAddress(user)
extractTimeValue(settings,null)
inOrder.verify(mockAwareService).publish(eq(clientId),eq(publishConfig),sessionProxyCallback.capture())
@NotNull DocumentWindow documentRange
Integer.valueOf(value)
new NullPointerException()
new CacheConfiguration()
deltaY < 0
isCreated()
subscriptionSender.setContextAttributes("[$CONTENT_URL$]",contentURL,false)
websocketComponent.setMaxThreads(11)
HashMap<String,ASTNode>
result.signum() <= 0
mService.setWifiApConfiguration(wifiConfig)
selenium.isVisible("link=Control Panel")
case NORMAL: 
directories.getDirectoryForNewSSTables(0)
targetBoard == null
new TypeMissMatchException("'" + toName(object.getClass()) + "."+ field.getName()+ "' can not refer to the value '"+ newValue+ "' (type "+ toName(newValue.getClass())+ "), because it is of the type "+ toName(field.getType()))
synchronized (this) {   mService.mStackSupervisor.startActivityFromRecents(callingPid,callingUid,mTaskId,null); } 
LOG.debug("Exception occurred during processing request: {}",e,e.getMessage())
loadAnimator(fragment,transition,true,transitionStyle)
mService.mAppOps.startOpNoThrow(mAppOp,uid,packageName)
mediaVideoItem.getHeight() * 2
mConferenceById.containsKey(callId)
info.getOldIndex() < 0
mHomeStack == null
checkPojoMetaClass()
T resource
public Exception getException(){   return exception; } 
public <A>S fullJoin(Expr<A> entity,Iterable<A> col){   query.alias(entity,col).fullJoin((Expr<?>)entity);   return self; } 
IndexReader.open(store,true)
Float.valueOf(encoding.substring(equalsPos + 1))
str.startsWith(exampleName) && !str.endsWith("-sources.jar") && !str.endsWith("-tests.jar")
Log.wtf(TAG,"Found activity " + r + " in proc activity list using "+ r.app+ " instead of expected "+ app)
log.debug(exception.getMessage())
executeRunnableDismissingKeyguard(runnable,null,false,true)
isConnectedToCluster()
new Paint(Paint.ANTI_ALIAS_FLAG)
logger.error("P2p handling failed",cause)
COMPONENTS_IN_LEVEL_1_AT_CONSTRUCTION + 22 + 47+ 1+ 58+ 1
Calendar.getInstance(JSON.defaultLocale)
mBarChart.addTiming(section,4,serializeResult.runDuration / 1000f)
mWM.isKeyguardSecure()
LensPositionSelectors.lensPosition(LensPosition.FRONT)
tracesFile.mkdirs()
new EditSessionBlockChangeDegate(editSession)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
mStackScroller.getChildAtPosition(x,y)
SAMPLE_RATE_HZ_MAX=48000
this.policy.setMaxTextMessageSize(anno.maxBinaryMessageSize())
mHidProfile.isProfileReady()
_buildTemplateWithGradle("portlet-provider","provider-dependency-management","--dependency-management-enabled","true")
LOG.error("Could not correlate acknowledgment with dispatched message: " + ack)
processor.open(w,request)
LOG.warn("Failed to write into TachyonStorage, the block " + getCurrentBlockId() + " will not be in TachyonStorage",ioe)
new LogicalRelationship(LogicalModel,fromTable,toTable,fromColumn,toColumn)
public static final class TutorialSupportFragmentImpl extends TutorialFragment {   private TutorialOptions mTutorialOptions;   public TutorialSupportFragmentImpl(){   }   @SuppressLint("ValidFragment") private TutorialSupportFragmentImpl(  @NonNull TutorialOptions tutorialOptions){     mTutorialOptions=tutorialOptions;   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     setRetainInstance(true);   }   @Override protected TutorialOptions provideTutorialOptions(){     return mTutorialOptions;   } } 
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class TransactionalSetBasicLocalTest extends TransactionalSetBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } 
latch.endLatch.await(400,TimeUnit.MILLISECONDS)
dateFormatter.format(value)
new WebdavEntry(resp.getResponses()[0])
new PNGDecoder(stream)
public AuthenticationType authenticationType() default AuthenticationType.CONTAINER; 
PsiTreeUtil.getParentOfType(context,PsiStatement.class)
selenium.isVisible("link=Control Panel")
initiator == HttpSender.CHECK_FOR_UPDATES_INITIATOR
securityMode != SecurityMode.None
type.toUpperCase(ENGLISH)
mValues[7]
new ByteBuddy().subclass(MemoryDatabase.class).method(named("load")).intercept(MethodDelegation.to(new ForwardingLoggerInterceptor(memoryDatabase)).appendParameterBinder(Pipe.Binder.install(Forwarder.class))).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
maxAlongDimension.isRowVector()
Objects.toStringHelper(this).add("granularity",type)
numNodes=1
child.resetResolvedLayoutDirection()
status().isMovedTemporarily()
HashMap<String,HashMap<String,ASTNode>>
to("direct:foo")
assertNull("Should find entry",getThreadCacheEntry(LOCAL_HOST))
linesInput > meta.getRowLimit()
rs.last()
conceptAnswer.getConcept()
setDefault.isPrivate()
isFormat(format,F60)
!isInsert
selenium.isVisible("link=Control Panel")
Set<UidRange>
serializer.serializeForInsert(metadata,entity,columns,values,subQuery)
selenium.isVisible("link=Control Panel")
shardSearchStats.onFailedQueryPhase(context)
targetPoint.x + shift
type.getConstructor()
_log.error(ioe,ioe)
className.indexOf(CONTROLLER_SUFFIX)
new Rect(20,0,20,0)
query.response().getContent().toString(Charset.forName("UTF-8")).substring(0,63)
mFailedAttempts > MAX_FAILED_ATTEMPTS
checkSimilar(last,r)
"Interceptors contributed by endpoint: " + i2
jsonModel.update(async)
startingWindow != null
!list.append(ai)
MessagingService.instance().sendRR(BatchlogManager.getBatchlogMutationFor(mutations,uuid,targetVersion).createMessage(),target,handler)
blog.getRemoteBlogId()
result == Long.MAX_VALUE
assertEquals(true,StringUtils.isAlphanumeric(""))
res.startsWith("android")
FBUtilities.getBroadcastAddress()
price.getAmount().equals(BigDecimal.ZERO)
List<String>
targetActor.addListener(listener)
inLatch.startLatch.await(200,TimeUnit.MILLISECONDS)
methodName.equals("getUseScope")
addDaysAndCheckForCompletion(7,NextEvent.PAYMENT_ERROR)
arguments.size() != 1
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
Lists.newArrayList("id","bool","BOOL","SEL","IMP","unichar","nil","Nil","YES","NO","TRUE","FALSE","auto","const","extern","inline","register","restrict","signed","goto","sizeof","struct","typedef","union","volatile","asm","const_cast","delete","dynamic_cast","friend","explicit","mutable","namespace","not","operator","reinterpret_cast","static_cast","template","typeid","typename","using","virtual","self","isa","ptrdiff_t","size_t","wchar_t","wint_t","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intptr_t","uintptr_t","intmax_t","uintmax_t","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","INT8_MIN","INT16_MIN","INT32_MIN","INT64_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","UINT64_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST64_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","INT_LEAST64_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST64_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","INT_FAST64_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST64_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","INTMAX_MIN","INTMAX_MAX","UINTMAX_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIZE_MAX","WCHAR_MAX","WCHAR_MIN","WINT_MIN","WINT_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","UINT8_C","UINT16_C","UINT32_C","UINT64_C","INTMAX_C","UINTMAX_C","va_list","fpos_t","FILE","off_t","ssize_t","BUFSIZ","EOF","FOPEN_MAX","FILENAME_MAX","TMP_MAX","SEEK_SET","SEEK_CUR","SEEK_END","stdin","stdout","stderr","ct_rune_t","rune_t","div_t","ldiv_t","lldiv_t","dev_t","mode_t","NULL","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","MB_CUR_MAX","MB_CUR_MAX_L","errno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EDEADLK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EAGAIN","EWOULDBLOCK","EINPROGRESS","EALREADY","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","ENOTSUP","ENOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","ELOOP","ENAMETOOLONG","EHOSTDOWN","EHOSTUNREACH","ENOTEMPTY","EPROCLIM","EUSERS","EDQUOT","ESTALE","EREMOTE","EBADRPC","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOLCK","ENOSYS","EFTYPE","EAUTH","ENEEDAUTH","EPWROFF","EDEVERR","EOVERFLOW","EBADEXEC","EBADARCH","ESHLIBVERS","EBADMACHO","ECANCELED","EIDRM","ENOMSG","ENOATTR","EBADMSG","EMULTIHOP","ENODATA","ENOLINK","ENOSR","ENOSTR","EPROTO","ETIME","ENOPOLICY","ENOTRECOVERABLE","EOWNERDEAD","EQFULL","EILSEQ","EOPNOTSUPP","ELAST","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_GETOWN","F_SETOWN","F_GETLK","F_SETLK","F_SETLKW","FD_CLOEXEC","F_RDLCK","F_UNLCK","F_WRLCK","SEEK_SET","SEEK_CUR","SEEK_END","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","O_NONBLOCK","O_APPEND","O_SYNC","O_CREAT","O_TRUNC","O_EXCL","O_NOCTTY","O_NOFOLLOW","DOMAIN","HUGE","INFINITY","NAN","OVERFLOW","SING","UNDERFLOW","CFMSYSTEMCALLS","CGLUESUPPORTED","FUNCTION_PASCAL","FUNCTION_DECLSPEC","FUNCTION_WIN32CC","GENERATING68881","GENERATING68K","GENERATINGCFM","GENERATINGPOWERPC","OLDROUTINELOCATIONS","PRAGMA_ALIGN_SUPPORTED","PRAGMA_ENUM_PACK","PRAGMA_ENUM_ALWAYSINT","PRAGMA_ENUM_OPTIONS","PRAGMA_IMPORT","PRAGMA_IMPORT_SUPPORTED","PRAGMA_ONCE","PRAGMA_STRUCT_ALIGN","PRAGMA_STRUCT_PACK","PRAGMA_STRUCT_PACKPUSH","TARGET_API_MAC_CARBON","TARGET_API_MAC_OS8","TARGET_API_MAC_OSX","TARGET_CARBON","TYPE_BOOL","TYPE_EXTENDED","TYPE_LONGDOUBLE_IS_DOUBLE","TYPE_LONGLONG","UNIVERSAL_INTERFACES_VERSION","BIG_ENDIAN","BYTE_ORDER","LITTLE_ENDIAN","PDP_ENDIAN","DEBUG","NDEBUG","scale")
data.limit()
compensationRange.inRange(compensation)
!cursor.moveToFirst()
stack.peekFirst()
protocolProvider.getProtocolName()
range.myStartLine < end
30 * 1000
mHandler == null
partialUri.toString()
QuotaCache.this.tableQuotaCache.contains(table)
mFlexItem.setAlignSelf(AlignItems.BASELINE)
type.getConstructor()
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_SELECT_AV_INPUT_FUNCTION)
a.getFloat(attr,0)
super.dispatchTouchEvent(ev)
duration - SystemClock.uptimeMillis() - bedtime
loaded.getLoaded().getConstructor()
invoke(agentInfo,payload,DEFUALT_FUTURE_TIMEOUT)
DiagnosticType.error("JSC_REDECLARED_VARIABLE","Redeclared variable: {0}")
DictionaryGenerator.buildDictionaryFromValueList(Collections2.transform(valueMap.get(tblColRef),new Function<String,byte[]>(){   @Nullable @Override public byte[] apply(  String input){     return input.getBytes();   } } ),tblColRef.getType())
resp.addHeader("Access-Control-Allow-Methods",methods)
fingerId == 0
existing.getProgramParameters()
Algorithms.isEmpty(pd.getName()) && !nameStr.equals(PointDescription.getAddressNotFoundStr(mapActivity))
MESSAGES.deploymentUnitNotFound(absolutePath,puName,current)
delta.assetsSeq != ASSETS_SEQ_UNDEFINED
media.getMediaType() == MediaType.AUDIO
guiResource.getImageSlaveMedium()
new Long(getIntValue(workingMemory,object))
receiver.getOuterClass()
r.destination != null
PRAYER_ENHANCE("prayerenhance","Prayer enhance",290,ChronoUnit.SECONDS)
b.getBroadcasterConfig().applyFilters(r,cachedMessages)
revWalk.release()
PsiElement superClass=((PsiAnonymousClass)typeDefinition).getBaseClassReference().resolve(); 
len - 1
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED)
System.currentTimeMillis()
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_UP,fromX,y,0)
container.getTimeFormat().equals(TimeFormat.DATE)
ACC_BRIDGE | ACC_STATIC
LOG.error("Couldn't run process with PTY",t)
Collections.addAll(result,"十二星座","成功学","不转不是中国人")
Lists.newArrayList(PROPERTY_PROJECT_BASEDIR,PROPERTY_MODULES,CoreProperties.PROJECT_DESCRIPTION_PROPERTY)
type.getConstructor()
assertEquals(15,services.size())
new HttpBlobStore(new URI("http://localhost:" + serverPort),5,credentials)
PART_COUNT=800
Integer.valueOf(cmd.getOptionValue(SIZE_OPTION))
synchronized (this) {   if (transformed != null) {     if (transformed instanceof List) {       @SuppressWarnings("unchecked") List<T> casted=(List<T>)transformed;       return casted;     }  else {       throw new InitializationTypeConflictException(transformed.getClass());     }   }  else {     return data;   } } 
OrderUtils.getOrder(((DecoratingProxy)obj).getDecoratedClass())
PORT_2=8080
new IllegalStateException()
getTimeout()
mHomeStack == null
Iterable<ObjectType>
cursor.getString(COLUMN_VALUE)
TaskExecutor.class
hintInfo.hintHitProbability >= hintHitProbabilityThresholdForDeoptimizingSnippet()
recordSetVersion2.getVersion()
lastPos != mTargetPos
Iterable<SkyKey>
mTrustListeners.get(i)
query.length()
new MalformedException("Unrecognized message placeholder referenced: " + phName,objLitNode)
(getSource().y() + getTarget().y()) / 2f
registry.createDataBindingSource(mimeType,bindingTarget,bindingSource)
CollectionUtils.newList(GrailsResourceUtils.appendPiecesForUri(SLASHED_VIEWS_DIR_PATH,uri),GrailsResourceUtils.appendPiecesForUri(PATH_TO_WEB_INF_VIEWS,uri),uri,GrailsResourceUtils.CLASSPATH_URL_PREFIX + uri)
ConfigPropertyVetoExceoption ex
selenium.isVisible("link=Control Panel")
new JGroupsFilter(bc,event.getAtmosphereConfig().getWebServerName())
UseItemCaptureMessage.newBuilder().setEncounterId(this.getEncounterId()).setSpawnPointGuid(this.getSpawnPointId())
biomeList[biome.biomeID].typeList.toArray()
Calendar.getInstance(JSON.defaultLocale)
selenium.isVisible("link=Control Panel")
!UNKNOWN_PARAMETER_TYPE.equals(wrappedRHS) && !gt.isCompatibleWith(wrappedRHS)
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
String.format("NODE %d: Already in or beyond node stage, ignoring. current = %s, requested = %s",this.node.getNodeStage().getLabel(),targetStage.getLabel())
Thread.sleep(5000)
selenium.isVisible("link=Control Panel")
substitutor.substitute(parameter.getType())
!RuntimeImpl.isNewVersion()
_log.error(ioe,ioe)
IndexSettingsModule.newIndexSettings(new Index("_index"),Settings.EMPTY,Collections.EMPTY_LIST)
getPredicate()::test
clocks.uptime+=1111
new Paint()
ServiceContextThreadLocal.popServiceContext()
UnsupportedTypeException.raise(arguments)
Log.info("Disable autoInstallOSGiBundles as the contexts folder '" + scandir.getAbsolutePath() + " does not exist.")
currentScreen == SCREEN_WINDOW_FULLSCREEN
in.read(message,0,length)
promise.setFailure(cause)
mRCStack.remove(rcse)
service.getType()
Flyway.configure(classLoader).configure(createFlywayConfig(envVars))
new NTCredentials(PROXY_USER,PROXY_PASS,localHost,PROXY_DOMAIN)
ignoreInjectedPsi
DEBUG && okay && mAgent != null
e.getMajorType()
LinkedList<>
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY())
entry.getName().startsWith(BOOT_INF_CLASSES)
ownedEntryCount >= nearCacheSize
task.cancel()
stack.peekFirst()
Math.min(1000L,connectionTimeout)
selenium.isVisible("link=Control Panel")
USER_OPERAND_TYPE(false,3)
s1.isNegative()
c.name()
this == group.mInternalConnection
query.toString()
"maxHeaderSize must be a positive integer: " + maxChunkSize
query.componentRoots().toArray(new String[0])
new Duration(2,SECONDS)
keyCache.get(keyExpression)
assertEquals(3,StringUtil.countMatches(drl,"import "))
StorageProxy.readProtocol(commands,select.getConsistencyLevel())
logger.info(String.format("encoded %s as %s",obj,str))
e.getMessage()
id=22
LocaleUtil.getDefault()
type.getConstructor()
new String[10]
mHorizontals == null
getServiceGuarded().importMultimediaMessage(callingPkg,pdu,messageId,timestampSecs,seen,read)
d1.isOutside()
ft.replace(R.id.layout_fragment_container,commentFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commitAllowingStateLoss()
totalHistogram.getValueAtPercentile(90)
new Intent()
new IndexWriter(dir,new WhitespaceAnalyzer())
match.getRule().getLocQualityIssueType().name()
columnType.equalsIgnoreCase("date")
i <= size
mDownloadXtraDataPending=true
blockUri.getIdentifier().toString()
note == null
new LwjglPreferences(name)
is(expectedSql)
winAnimator.mSurfaceController == null
trim.equalsIgnoreCase(ALL)
new NamespaceFilter(XmlUtil.FACELETS_TAGLIB_URI,XmlUtil.FACELETS_TAGLIB_URI2)
logger.error("couldn't execute commandLine '" + commandLine + "'",e)
myFileChooser.requestFocusInWindow()
_availMemory + amount
mAttributes.getFlags()
ServiceContextThreadLocal.popServiceContext()
hasProperty("key2").withValue(1234)
source.isInternal()
new IllegalArgumentException("Remote " + remoteName + " not found. ")
onEvaluateInputViewShown()
new LightweightThread(null,new SuspendableRunnable(){   @Override public final void run() throws SuspendExecution {     SomeInterface i=new C();     System.out.println("i = " + i);     i.doStuff();   } } )
FileSwapSpaceSpiMBean fileSwap=(FileSwapSpaceSpiMBean)swap; 
@Test public void testResolveMultiplePaths() throws IOException {   String expected=tmpFolder.getRoot().toPath().resolve("aa").resolve("bb").resolve("cc").toString();   assertEquals(expected,IOChannelUtils.resolve(tmpFolder.getRoot().getPath(),"aa","bb","cc")); } 
out.writeFloat(mProgress)
type.getConstructor()
new ProtocolException()
e.getMessage()
mView.setTransitionVisibility(mFinalVisibility)
LOG.error("Failed to shut down ActorSystem")
name.equals("Devices")
writeString(writer,String.valueOf(reader.getBoolean()),fieldName)
new SolrException(1,"Schema Parsing Failed",e,false)
protocolProvider.getAccountID().getAccountAddress()
groupIds[1]
edgeData.getAttributes() == null
Long.valueOf(param.getValue())
mStackSupervisor.mAppVisibilitiesChangedSinceLastPause
-1
new HandlingEvent(cargo,new Date(10L),new Date(20L),HandlingEvent.Type.RECEIVE,b5)
actionCache.remove(key)
/**   * Needed for statistics.   */ private final LongAdder startedJobsCnt=new LongAdder(); 
aClass.getInterfaces()
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
startActionMode(callback) == null
requestHeader.mConnectionID != null
((SipStackImpl)this.stack).getLocalAddressForDestination(dst,dstPort,localAddress,0)
StringBuffer sb=new StringBuffer(32); 
targetAPI
sampleFactory.getConstructor()
ImmutableMap.of(BuildInfo.BUILD_TIMESTAMP,Key.of(KeyType.INTEGER,"0","0"))
next != null
connection.zrangeByLex(key,max,min)
objectManager.markUnusedObject(this)
Thread.sleep(5000)
CodeStyleSettingsManager.getSettings(myProject).WRAP_WHEN_TYPING_REACHES_RIGHT_MAGIN
selenium.isVisible("link=Control Panel")
!record.isMms() || record.isMmsNotification()
propName.equals(Constants.FACTORY) || propName.equals("scope") || propName.equals("auth")
mAppToken.hasContentToDisplay()
public BaseExecSpec setIgnoreExitValue(boolean ignoreExitValue){   this.ignoreExitValue=ignoreExitValue;   return this; } 
curComp.equals(cur)
fraction * (nextValue - prevValue)
saveRunnable instanceof LongTask
interactor.startConfirmation(packageName,callback,mCommand,mArgs)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commit()
GL11.glGetFloat(pname,params)
ArrayList<TaggedWord>
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5Filename(weightsHdf5Filename)
assertEquals(9,fieldNames.size())
copyDocComment(resultMethod,sourceMethod)
mOneShot=true
mPowerManager.isScreenOn()
value == null
myAfterFile.getName()
UndertowLogger.CLIENT_LOGGER.jettyALPNNotFound()
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
mTrustListeners.get(i)
PortalPermissionUtil.contains(getPermissionChecker(),ActionKeys.ADD_COMMUNITY)
nsDescriptor.getAttribute(localName,namespace)
new Bitmap(nativeInt,isMutable,null,density)
connection == null
startMediaTimeUs == START_NOT_SET
assertEquals(11,definitions.size())
project.members()
yamlFactory.createJsonParser(input)
viewToClick != null
@NonNull
setNumber(String.valueOf(integerPart))
currentOffset >= documentText.length()
file.contains("http://")
Object[]
Throwable t
camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
assertThat(stack.selectAllIssues()).hasSize(0)
SyncAccountService.addSyncAccount(filePathName,10,"test@liferay.com","test","http://localhost:8080/api/jsonws",false)
masters.containsKey(nodeId)
ONE_MINUTE=180000
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(1,Duration.ofMillis(100),Duration.ofMillis(2000),0.9).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1).verifyErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 1/1").hasCause(exception))
gatherServerResponses(realtimeCompositeFuture,scatterGatherStats,true,realtimeTableName,processingExceptions)
geom.getMaterial().isEqual(mat)
mWm.freezeRotation()
lp.onResolveLayoutDirection(layoutDirection)
DumpUtils.checkDumpPermission(getContext(),TAG,pw)
uri.getAssetName().toString()
passThruFields != null
UPPER_BOUND_VIOLATED.on(argumentTypeReference,substitutedBound)
out.write(CLASS_CONSTANT_VALUE_TAG)
new MapProducerCapabilities(false,false,true,true)
assertFalse(dr.isFailure())
logger.warn("Callback onResult call produced an error",e)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
targetCondn == null
ss.getAuthorizerV2().checkPrivileges(type,Arrays.asList(commandObj),null)
StepVerifier.create(source.flux().bufferWhen(open,o -> close)).then(() -> {   source.assertSubscribers();   open.assertSubscribers();   close.assertSubscribers();   open.next(1); } ).then(() -> {   open.assertSubscribers();   close.assertSubscribers();   source.complete(); } ).expectNextMatches(List::isEmpty).expectComplete()
type == Object.class
stateChangedLatch.await(1,TimeUnit.SECONDS)
pos + toFind.length() < limit
getLocationEnabled()
_typeSettingsProperties.toString()
ONE_MINUS_DST_ALPA(7)
Modules messenger
new ProgressDialog(lvApp.getContext(),mThemeId)
new PaymentType("CUSTOMER_PAYMENT","Customer Payment",false)
WordPress.getCurrentBlog().getRemoteBlogId()
dic.buildRouterChain(invokers)
mHandler.postDelayed(pae,timeout)
in.getVersion().onOrAfter(Version.V_7_0_0_alpha1)
artifact.getRootRelativePath()
a.getFloat(attr,0)
checkOrderItemOfferAppliedCount(order) == 1
logger.error("Exception mapping responses to requests.",e)
(bytes[bytes.length - 1] & outputValueMask) == STATUS_SWITCHING_ON
loaded.getLoaded().getConstructor()
Arrays.asList("spring-boot-starter-jetty-","jetty-continuation","jetty-util-","javax.servlet-","jetty-io-","jetty-http-","jetty-server-","jetty-security-","jetty-servlet-","jetty-servlets","jetty-webapp-","websocket-api","javax.annotation-api","jetty-plus","javax-websocket-server-impl-","asm-","javax.websocket-api-","asm-tree-","asm-commons-","websocket-common-","jetty-annotations-","javax-websocket-client-impl-","websocket-client-","websocket-server-","jetty-xml-","websocket-servlet-")
selenium.isVisible("link=Control Panel")
new CallbackStub()
win.isDrawnLw()
getProperties().remove("hibernate.connection.handling_mode","DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT")
new CartesianPolyFilterBuilder("")
fluentSetters()
new SSALinarScanResolveDataFlowPhase(this)
generator.generateX509Certificate(signedByKeyPair.getPrivate())
System.currentTimeMillis()
selenium.isVisible("link=Control Panel")
StepVerifier.create(Flux.just(1).filterWhen(v -> {   throw new IllegalStateException(); } )).expectError(IllegalStateException.class)
this.reader.comparator.compare(reader.blockIndex.blockKeys[b],key)
new CacheConfiguration()
TOWN(5000)
mConnector.execute("cryptfs","createnewuserdir",userHandle,path)
assertEquals(5,scannedBeanCount)
scrollBy(mAutoScrollX,mAutoScrollY)
usersStats.getMax()
this.urlPathHelper.getRequestUri(request)
Status.constructStatuses(get(getBaseURL() + "favorites.json","page",String.valueOf(page),true))
docker.waitContainerCmd(container.getId())
sharedPreferences.edit().remove(PREF_KEY_HIDDEN_DEFAULT_ENGINES).commit()
settings.readLPw(null)
sendCommand(CLIENT_GETNAME)
h.addParameters("--pretty=format:%H","HEAD")
appOps.noteOpNoThrow(AppOpsManager.OP_GET_USAGE_STATS,uid,pkg)
context.getLocation(node)
IgniteCheckedException e
selenium.isVisible("link=Control Panel")
assertEquals(9,this.context.getBean(FilterChainProxy.class).getFilterChains().size())
addThem=true
mn.getTypeDescriptor().equals(candidate.getTypeDescriptor()) && !mn.isAbstract()
id=23
TfsShell.convertMsToDate(files[3].getCreationTimeMs())
string.length() >= 0
populateWatchlistUi()
UIPasteboard.getGeneral()
DBG=true
mWidth - edgeWidth
Thread.sleep(2200)
win.isDrawnLw()
!assetAutoTaggerEntries.isEmpty()
delayMs < 0
origin.realComponent().doubleValue() <= other
list.add(v)
mHomeStack == null
mock.expectedMessageCount(10)
InsertFinalStep<R>
USE_DISPLAY_LIST_PROPERTIES=true
ppcY / 2.54f
StringBundler.concat("select companyId, preferences from PortletPreferences ","where portletId = '",_PORTLET_ID,"' AND ownerType = ",PortletKeys.PREFS_OWNER_TYPE_COMPANY,";")
response == null
requestUrlregex == null
mDisplay.getMetrics(mDisplayMetrics)
selenium.isVisible("link=Control Panel")
type.equals("")
new SystemVibrator()
greaterThanOrEqualTo(0L)
!mUserVisibleHint && isVisibleToUser && mState < STARTED
String.format("Starting audit...%n" + expectedPath + ":3:14: "+ "Name 'InputMain' must match pattern '^[a-z0-9]*$'.%n"+ expectedPath+ ":5:7: "+ "Name 'InputMainInner' must match pattern '^[a-z0-9]*$'.%n"+ "Audit done.%n"+ "Checkstyle ends with 2 errors.%n")
sum=0f
mBackdrop.animate().alpha(0f)
log.warn("Error loading known hosts",e)
minSize < curSize
new KeywordMap(true)
scheduleRemoveStartingWindow(wtoken)
enabled.getProtocols()
log.error("Checking bounds [{}, {}) (expect {} keys)",new Object[]{startCol,endCol,expected.size()})
DumpUtils.checkDumpPermission(mContext,TAG,pw)
Throwable t
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED)
in.readStringNull(8)
mWasActivatedOnDown || !mNeedsDimming
tests.add(objectExpressionType.getGenericsTypes()[0].getType())
Pattern.compile("(--?[a-zA-Z_]+)=(.*)")
mHandler.postDelayed(pae,timeout)
c == Short.class
mListView.getChildAt(index)
public static final class TutorialSupportFragmentImpl extends TutorialFragment {   private TutorialOptions mTutorialOptions;   public TutorialSupportFragmentImpl(){   }   @SuppressLint("ValidFragment") private TutorialSupportFragmentImpl(  @NonNull TutorialOptions tutorialOptions){     mTutorialOptions=tutorialOptions;   }   @Override public void onCreate(  Bundle savedInstanceState){     super.onCreate(savedInstanceState);     setRetainInstance(true);   }   @Override protected TutorialOptions provideTutorialOptions(){     return mTutorialOptions;   } } 
" firstActiveTime=" + lastActiveTime
new SystemException()
melody.length() - 2
96.0 / 160
LOG.warn(ex.getLocalizedMessage(),ex)
enabled=true
socket == null
parsedResult.getSqlType()
packet.getFrom().split("/")
prepareServer(new HttpServlet(){   @Override protected void doGet(  HttpServletRequest req,  HttpServletResponse resp) throws ServletException, IOException {     if (req.getHeader("Via") != null)     resp.addHeader(PROXIED_HEADER,"true");     if (target.equals(req.getRequestURI())) {       if (query.equals(req.getQueryString())) {         resp.setStatus(200);         return;       }     }     resp.setStatus(404);   } } )
BatchCSVRecord.class
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
mBondState.setBondState(address.toUpperCase(),state)
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class CountDownLatchBasicLocalTest extends CountDownLatchBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } 
selenium.isVisible("link=Control Panel")
TelephonyManager.getDefault().getPhoneType()
UpdateFrequancy=updateFrequency
sp.vim_regsub_multi(regmatch,lnum,sub,1,true)
Thread.sleep(5000)
input.length() >= 2
DefaultCacheKeysFactory.createEntityKey(id,persister,factory,tenantIdentifier)
columnRestrictions[name.position]
mock.expectedMessageCount(3)
getNext().invoke(this,method,args)
getAdapter() == null
onDetachedFromWindows()
assertFalse(dr.isFailure())
JMeterUtils.getPropDefault("proxy.cert.validity",90)
name.indexOf(endQuote)
permissions+=1
new Paint(Paint.ANTI_ALIAS_FLAG)
new Paint(Paint.ANTI_ALIAS_FLAG)
GridTestUtils.waitForCondition(new GridAbsPredicate(){   @Override public boolean apply(){     return backupQueue(ignite(0)).isEmpty();   } } ,2000)
initial(rand)
telephony.getCdmaEriIconIndexForSubscriber(subId)
assertThat(ds.getValidationInterval()).isEqualTo(30000L)
View customCroutonControls=findViewById(R.id.container_custom); 
Messages.getString("TransMeta.Exception.ErrorOpeningOrValidatingTheXMLFile")
lock.isLocked()
activityNdx < topActivityNdx
transparencies != null
new StringBundler(content.length())
LongAdder cntr
params[2]
new Duration(2,SECONDS)
DEBUG=true
new ByteBuddy(ClassFileVersion.JAVA_V8).subclass(Object.class).implement(Class.forName(DEFAULT_METHOD_INTERFACE)).implement(Class.forName(CONFLICTING_DEFAULT_METHOD_INTERFACE)).method(named("foo")).intercept(DefaultMethodCall.prioritize(Class.forName(DEFAULT_METHOD_INTERFACE))).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
currenType != Type.INT
inUtc
assertNumMessagesInQueue("Should be rolled back",connection,dlq,1,1000)
buffer.rewind()
logger.info(String.format("emitting packet with ack id %d",ids))
mDisplay.getMetrics(mDisplayMetrics)
LOGICAL_TYPE_TIMESTAMP_MILLIS.equals(logicalName)
return false; 
!ModLoaderHelper.sidedHelper.clientConnectionClosed(manager,mod)
j < size
TCN_REQUIRED_PATCH=24
telephony.getCdmaEriIconModeForSubscriber(subId)
IllegalArgumentException e
!token.hasVisible && !mClosingApps.contains(token)
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
composite.isDisposed()
m.getClass()
RIGHT_ID=3534
server0.getStoreRepository().getLocalStore(storeName)
consumerPort=8830
IconLoader.isGoodSize(myIcon)
deployment.addServletContainerInitalizer(new ServletContainerInitializerInfo(Initializer.class,new ImmediateInstanceFactory<ServletContainerInitializer>(initializer),NO_CLASSES))
new IndexWriter(directory,autoCommit,ANALYZER,false)
verify(runSvn("status"),"","--- Changelist 'newOne':","A + c.txt","D a.txt")
logger.info("Execution of UDF '{}' failed",name,e)
new Node.JspAttribute(tai,qName,uri,localName,value,true,el,dynamic)
intermediatePoints != null
new WorldPoint(3458,3364,0)
DEBUG_CAMERA_LIFT=true
RunnerApi.Trigger.newBuilder().setAfterEndOfWidow(RunnerApi.Trigger.AfterEndOfWindow.newBuilder().setEarlyFirings(subtrigger1))
op.getJavaName()
service.asBinder().isBinderAlive()
protected JavaExec createTaskGenerate(File wsdlFile,File tmpDir){   String taskName=GradleUtil.getTaskName(LiferayJavaPlugin.BUILD_WSDL_TASK_NAME + "Generate",wsdlFile);   JavaExec javaExec=GradleUtil.addTask(_project,taskName,JavaExec.class);   File tmpSrcDir=new File(tmpDir,"src");   javaExec.args("--output=" + FileUtil.getAbsolutePath(tmpSrcDir));   javaExec.args(FileUtil.getAbsolutePath(wsdlFile));   javaExec.setClasspath(getConfiguration());   javaExec.setMain("org.apache.axis.wsdl.WSDL2Java");   TaskInputs taskInputs=javaExec.getInputs();   taskInputs.file(wsdlFile);   TaskOutputs taskOutputs=javaExec.getOutputs();   taskOutputs.dir(tmpSrcDir);   return javaExec; } 
poList[1]
store.forceFlush()
super.onDetachedFromWindow()
entry.doesSupportPartial()
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,JavaConstant.MethodHandle.ofLoaded(methodHandleLoaded)))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
raw.getParameters()
mConnector.executeForList("volume","list")
theiaProjectTree.waitOpenWorkspaceButton()
outLatch.startLatch.await(200,TimeUnit.MILLISECONDS)
call.getRpcTimeout()
syncDLFileVersionDiffPersistence.fetchByS_S_D(fileEntryId,sourceFileVersionId,destinationFileVersionId)
filter.getMinPrice()
pluginPanel.init()
assertEquals(0.31070661329904065,mse,1e-8)
GitWorkingDirectoryFactory.newGitWorkingDirectory(portalGitWorkingDirectory.getUpstreamBranchName(),JenkinsResultsParserUtil.getProperty(portalReleaseProperties,"lp.plugins.dir"),"liferay-plugins-ee")
BeginNode node
new GetExecutionVariableInstancesCmd(executionId,variableNames,false,locale,withLocalizationFallback)
this.isDefaultAutoCommit()
String.format("BUG: %s changed score during rematch: %d -> %d",score,newNetwork.getCurrentScore())
myEditor.getDocument()
new ModelRenderer(model,0,0)
new IllegalStateException()
!dataSet.isVisible() || !dataSet.isDrawCirclesEnabled()
pvtKeyStore == null
new ProtoFile("nestedmaps.proto",null,NO_STRINGS,NO_STRINGS,Arrays.asList(expected),NO_SERVICES,map(),NO_EXTEND_DECLARATIONs)
Long.valueOf(strings[i])
Params params
_state._iter == 0
selenium.isVisible("link=Control Panel")
buffers[offset]
new JsonXContentParser(smileFactory.createParser(reader))
selenium.isVisible("link=Control Panel")
return false; 
StepVerifier.create(Flux.just(1).then()).expectComplete()
mph >= 10
c.networkId == netId
new MethodDescription.Token(FOO,MODIFIERS,Collections.singletonList(mock(GenericTypeDescription.class)),second,Collections.singletonList(secondParameter),Collections.singletonList(mock(GenericTypeDescription.class)),Collections.singletonList(mock(AnnotationDescription.class)),null)
MoreObjects.toStringHelper(this).add("user",getUser()).add("timeZoneKey",timeZoneKey).add("locale",locale).add("startTime",startTime).add("properties",properties)
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
field.getRawType()
realm.assertThread()
println_native(logId,ASSERT,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
EntityCacheUtil.putResult(CheckoutModelImpl.ENTITY_CACHE_ENABLED,CheckoutImpl.class,checkout.getPrimaryKey(),checkout,false)
new IllegalArgumentException("negative offset:" + offset)
mSelectResponse != null & mSelectResponse.length > 0
public DerivedBuilder setProxyPassword(String password){   this.proxyPassword=password;   return this; } 
Slog.wtf(TAG,"APK " + fileName + " has compressed dex code "+ entry.getName())
TelephonyManager.getDefault().getPhoneType()
mWasActivatedOnDown || !mNeedsDimming
mAlpha.end()
mService.disconnect(mContext.getOpPackageName())
request.getContentType().equals("application/x-www-form-urlencoded")
mDrawerItems.size() > mCurrentSelection
init(app)
mQsContainer.getLayoutParams()
durableSubscriptions.get(key)
MAX_DISMISSAL_ON_SWIPE_UP_SHOW=4
parameterTokens.add(index,new ParameterDescription.Token(token.getParameterTokens().get(index).getType(),CompoundList.of(token.getParameterTokens().get(index).getAnnotations(),new ArrayList<AnnotationDescription>(annotations)),token.getParameterTokens().get(index).getName(),token.getParameterTokens().get(index).getModifiers()))
blog.getRemoteBlogId()
Integer.toBinaryString(gramSize)
ClassFileVersion.JAVA_V5.getJavaVersion()
Exceptions.argumentIsNullException()
Hooks.resetOnEachOperator()
getValue(activity.getExtraData(),"title",kbArticle.getTitle())
Nd4j.pullRows(weights,1,indexes)
Thread.sleep(50)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
is.read(data)
refresh(false)
logger.error("Field sorting failed!")
synchronized (this) {   mService.mStackSupervisor.startActivityFromRecents(callingPid,callingUid,mTaskId,null); } 
nextOption()
(GridDrPause)in.readObject()
!mSingleFolderMode
s.toString().toUpperCase()
FileSystem.getLocal(conf).delete(localScratchDir)
mAppTokens.get(i)
lock.isLocked()
days >= 2
orig.getGenericsTypes()
UserHandle.getCallingUserId()
HashMap<String,FilterBuilder>
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0)
TimeUnit.SECONDS.toMillis(4)
matcher.matches()
log.logError(BaseMessages.getString(PKG,"JobUnZip.Error.Label"),BaseMessages.getString(PKG,"JobUnZip.TargetFolderNotFolder.Label",realTargetdirectory))
new Paint(Paint.ANTI_ALIAS_FLAG)
ti > 0
CommitId
PendingIntent.getBroadcast(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
sDefaults.putBoolean(KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL,false)
ActivityManagerNative.getDefault().updateConfiguration(config)
i--
oldConfig.densityDpi != newConfig.densityDpi
doTest()
new Fault(new org.apache.cxf.common.i18n.Message("START_UP_SERVER_FAILED_MSG",LOG,e.getMessage()),e)
getExecutorServiceManager().shutdown(errorHandlerExecutorService)
context.add("exceptionalMethod",123f)
TestReadStripedFileWithMissingBlocks.class
this.httpHandler.handle(request,response).switchOnError(ex -> {   logger.error("Could not complete request",ex);   nativeResponse.setStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
syncContext.setPreferences(getPortletPreferencesMap())
JvmDeclarationOriginKt.OtherOrigin(myClass,valueOfFunction)
WEB_SYNC_MANAGER=true
BlockWorkerUtils.getWorkerAddress(mTachyonConf).getAddress().getCanonicalHostName()
message.isDiscussion()
checkCallingPermission(android.Manifest.permission.MANAGE_ACTIVITY_STACKS)
new WrappedEpoxyModelClickListener(this,clickListener_OnClickListener)
httpRequest.getSession().setAttribute(ACEGI_SECURITY_TARGET_URL_KEY,null)
getActiveFgCall().getPhone().sendDtmf(c)
if (DEBUG_VOL) {   Log.d(TAG,"onSetA2dpSinkConnectionState btDevice=" + btDevice + "state="+ state); } 
performDexOpt(packageName,instructionSet,true)
wait <= 0
d.setHotspot(x,y)
public static ArrayValue localTimeArray(LocalTime[] values){   return new LocalTimeArray(values); } 
retriever.captureFrame()
new UncheckedIOException(e)
new ObjectMapper().reader(defaultInstance().constructCollectionType(List.class,DiskBalancerWorkEntry.class))
GridHadoopTestUtils.jsonToMap(primaryIpcEndpointConfiguration(gridName))
merge4dCnnData(featuresToMerge)
mHandler.postDelayed(pae,timeout)
generateRandomStringArray(2,4,false)
setSort(3)
telephony.getCdmaEriIconModeForSubscriber(subId)
new byte[10]
symbolUsageValidator.validateCall(functionDescriptor,context.trace,loopRangeExpression)
si.deliveryCount > 0
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5Filename(weightsHdf5Filename)
scope != null
logger.error("",ex)
Thread.sleep(5000)
!mConfig.bindPermission.equals(info.permission)
mPowerManager.isScreenOn()
dest.writeLong(this.milestone)
nodeManager.getAllNodes()
resources.getDimension(R.dimen.close_handle_height)
ctClass.toClass()
new IllegalArgumentException("Remote url " + url + " is invalid. ")
type.getConstructor()
BookmarksEntry.class
logoutPost != null
mService.mDisplayContents.get(displayNdx)
o == BlockingSubscriber.TERMINATED
gatt.periodicAdvertisingEnable(this.advertiserId,enable)
new File(llsApkDir)
DBException e
expanded.toString().replace("\\$\\$","\\$")
selenium.isVisible("link=Control Panel")
_viewFinder.setFlashMode(this._torchMode)
monochrome=false
notebook.importNote(exportedNoteJson,"Title")
!userInfo.canHaveProfile()
final SimulatedTrackball mSimulatedTrackball; 
TypedQuery<Long>
new LinkedFileViewModel(linkedFile,entry,databaseContext,taskExecutor,dialogService)
batteryService.isBatteryLow()
Boolean.valueOf(getOptional("kylin.htrace.show-gui-trace-toggle","false"))
loopButton.isEnabled()
@Nullable
platformData.containsKey(variant)
FixedNode node
compressedSliceInput.length()
new Paint(Paint.ANTI_ALIAS_FLAG)
console.printToHistory(string,attributes)
mConferenceById.containsKey(callId)
DeprecationLogger.nagUser("<someIdeTask>.whenConfigured is deprecated! Replaced by whenMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
LOGGER.lifecycle(msg.apply())
new Paint()
state.isKeyguardShowingAndNotOccluded()
RunnerApi.Trigger.newBuilder().setAfterEndOfWidow(RunnerApi.Trigger.AfterEndOfWindow.newBuilder().setEarlyFirings(subtrigger1).setLateFirings(subtrigger2))
v.getContext().startActivity(intent)
new ColumnInfo(Messages.getString("SetVariableDialog.Fields.Column.VariableType"),ColumnInfo.COLUMN_TYPE_CCOMBO,SetVariableMeta.getVariableTypeDescriptions(),true)
lp.onResolveLayoutDirection(layoutDirection)
!Strings.isNotBlank(newAlgorithm)
isDirect=true
!finished
avb.getData().clear()
enabled.set(true)
amp*=0.5
SCAN_STATUS_COMPLETE=1
devicePort.type() == AudioManager.DEVICE_OUT_HDMI
selenium.isVisible("link=Control Panel")
new IgniteCheckedException("Failed to send message to node (has node left grid?): " + nodeId)
scheme.equalsIgnoreCase("tel") || scheme.equalsIgnoreCase("sip") || scheme.equalsIgnoreCase("sms")|| scheme.equalsIgnoreCase("smsto")|| scheme.equalsIgnoreCase("mailto")
UnderFileSystemUtils.deleteIfExists(mUfs,mTempCheckpointPath)
meta.getDatabaseMeta().getSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTableName()))
Log_OC.e(TAG,"Requesting sync for " + getAccount().name + " at "+ MainApp.getAuthority()+ " with new API")
scaleX == 0
new BigInteger(difficulty)
waitForDown(CCMBridge.IP_PREFIX + '2',c.cluster)
Integer[]
e.getMessage()
verify(mWifiService).stopLocalOnlyHotspot()
userSession.addProjectUuidPermissions(UserRole.ADMIN,"PROJECT_1")
protocolStatusCombos.size() - hiddenProviders == 1
layer.setInput(input)
/**   * Public size counter.   */ private final LongAdder mapPubSize=new LongAdder(); 
new SuccessDialogFragment()
new AutoCompleteListener(searchCompleter)
GenericSendAndRecieveGateway gateway
mDuration >= 0
type.getCanonicalText()
LOG.warn("failed to send {} messages to {}: {}",numMessages,dstAddressPrefixedName,future.getCause())
Trans == TRANSPOSE
selenium.isVisible("link=Control Panel")
current.getSuperClass()
LOGGER.error("no property for " + type + ", "+ format)
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
info.crashInfo.stackTrace.length() > 10000
mContext.startActivity(intent)
previousTypeSettingsProperties.toSortedString()
proxyHTTPServer.getText()
BigDecimal.valueOf(100L)
mDatabaseHandler == null
new Button("submit",new StringResourceModel("submit",this,null)){   @Override public void onSubmit(){     GeoServer gs=getGeoServer();     gs.save((GeoServerInfo)globalInfoModel.getObject());     gs.save((LoggingInfo)loggingInfoModel.getObject());     doReturn();   } } 
kernelWidth >= (inWidth + 2 * padWidth)
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",nc,newNetwork.networkCapabilities)
myTypeChecker.checkExpressionIsAssignableToType(rOperand,numberType,"javascript.expression.type.implicitly.coerced.to.unrelated.type",null)
endFunction("get_column_statistics_by_partition: ",statsObj != null)
builder.length() == 0
new String(_byteStore.get(dictionaryId))
appWindowToken == null
type.getConstructor()
tester.nodeRepository().getNodes(Node.State.ready)
primaryServer.getClass()
three.setCoordinateIndex(LEAF)
minBukkitBuildVersion=699
JwsUtils.verify(jws,stateString).getUnsignedEncodedSequence()
List<PsiMethod>
startExpression != null
log.warn("Problem in JSR223 script ",e)
submitToExecutor()
new DatabaseExplorerDialog(shell,props,SWT.NONE,dbinfo,jobMeta.databases,true)
m.getClass()
parent.getOverriddenJoinTable(propertyName)
serviceContext.getModifiedDate()
del("*:*")
HDR_TYPE_ERR=0x03
position - dockDividerWidth
mCurrentReactContext.runOnNativeModulesQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
/**   * Callback that is invoked after each test method has been invoked.  * @param context the current test extension context  */ void afterEach(TestExtensionContext context) throws Throwable ; 
new OutputStreamWriter(output)
a.getDimensionPixelOffset(attr,0)
IndexReader open=null; 
final GrMethod constructor
getUserBadgedDrawableForDensity(dr,new UserHandle(mContext.getUserId()),null,0)
mRouter.selectRoute(mRouteTypes,route)
Mockito.times(5)
this.jumpSpeed=fallSpeed
id=1
mAppToken.hasContentToDisplay()
client.getLocalPlayer().getInteracting().getName().equals(FISHING_SPOT)
editor == null
@Autowired ApplicationEvents applicationEvents; 
delegate.writeStartElement(prefix,namespaceURI,localName)
gtasksService.getAllGtasksFromListId(DEFAULT_LIST,false)
error.toString()
aClass.getContainingClass()
PsiTreeUtil.instanceOf(instruction.getElement(),PyReturnStatement.class,PyBreakStatement.class,PyContinueStatement.class,PyAssignmentStatement.class,PyRaiseStatement.class,PyStatementList.class,PyTryExceptStatement.class,PyTryPart.class,PyExceptPart.class,PyFinallyPart.class)
MAX_CACHE_PREPARED=50
new StringRepresentation(ret.toString())
firstIteration
connection.subscribe(jedisPubSub,patterns)
plotNode(g2,loc,c,size)
FileType.of(".h",".hh",".hpp",".hxx",".inc")
annotationHelper.printError(element,"%s annotated element should have only one constructor")
from >= to
constraints.weightx=0f
queuedChunk.provider.loadChunk(queuedChunk.x,queuedChunk.z)
mResourceData[i] != null
klass.getDeclaredMethods(false,declaredMethods)
new OsMoControlDevice(app,service)
loadAnimator(fragment,transition,true,transitionStyle)
checkDirectory(config.getString("tsd.http.cachedir"),CREATE_IF_NEEDED,MUST_BE_WRITEABLE)
new double[test_N][n_in]
builder().experimentalBuildSettingApi(false).experimentalCcSkylarkApiEnabledPackages(ImmutableList.of()).experimentalEnableAndroidMigrationApis(false).experimentalEnableRepoMapping(false).experimentalRemapMainRepo(false).experimentalPlatformsApi(false).experimentalStarlarkConfigTransitions(false).incompatibleBzlDisallowLoadAfterStatement(false).incompatibleDepsetIsNotIterable(false).incompatibleDepsetUnion(false).incompatibleDisableDeprecatedAttrParams(false).incompatibleDisableObjcProviderResources(false).incompatibleDisallowConflictingProviders(true).incompatibleDisallowDataTransition(false).incompatibleDisallowDictPlus(false).incompatibleDisallowFileType(false).incompatibleDisallowLegacyJavaInfo(false).incompatibleDisallowLoadLabelsToCrossPackageBoundaries(false).incompatibleDisallowOldStyleArgsAdd(false).incompatibleDisallowSlashOperator(true).incompatibleExpandDirectories(false).incompatibleGenerateJavaCommonSourceJar(false).incompatibleNewActionsApi(false).incompatibleNoAttrLicense(false).incompatibleNoOutputAttrDefault(false).incompatibleNoSupportToolsInActionInputs(false).incompatibleNoTargetOutputGroup(false).incompatibleNoTransitiveLoads(false).incompatiblePackageNameIsAFunction(true)
logger.error("Exception mapping responses to requests.",e)
declarationDescriptors != null
RECONNECT_DELAY_MIN=8
Assert.assertEquals(peer.getSyncBlockRequested().isEmpty(),false)
"none".equals(max_items)
mPhone.getContext().enforceCallingOrSelfPermission("android.permission.SEND_SMS","Sending SMS message")
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",nc,newNetwork.networkCapabilities)
mMccMncs != null
logger.info("JSR-330 'javax.inject.Named' annotation found and supported for component scanning")
out.getVersion().after(Version.V_5_3_0_UNRELEASED)
Double rate
new DDMFormAssetRenderer(formInstanceRecord,formInstanceRecordVersion,_ddlRecordLocalService,_ddmFormRenderer,_ddmFormValuesFactory,_ddmFormValuesMerger)
Boolean.valueOf(attrValue)
id=13306
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).switchOnError(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
this.mPlatformBitmapFactory=mPlatformBitmapFactory
HashMap<String,Account[]>
new Chat(name,uid,mMessageEdit.getText().toString())
super.onDetachedFromWindow()
pushExecutor.submit(new NamedRunnable("OkHttp %s Push Headers[%s]",hostName,streamId){   @Override public void execute(){     boolean cancel=pushObserver.onHeaders(streamId,requestHeaders,inFinished);     try {       if (cancel)       frameWriter.rstStream(streamId,ErrorCode.CANCEL);       if (cancel || inFinished) { synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )
blog.getRemoteBlogId()
module == null
m.getClass()
new Duration(endsMills,System.currentTimeMillis())
this.cusolverDnDsyevd_bufferSize.invoke(solverDn,jobz,uplo,M,(DoublePointer)xAPointer.getDevicePointer(),M,(DoublePointer)xRPointer.getDevicePointer(),(IntPointer)worksizeBuffer.addressPointer())
mValues[7]
mWidth - edgeWidth
System.err.print(s)
final LongAdder locAdder=new LongAdder(); 
selenium.isVisible("link=Control Panel")
sTestCaseCounter == 1
IndexSettingsModule.newIndexSettings(new Index("_index"),Settings.EMPTY,Collections.EMPTY_LIST)
PortletFileRepositoryUtil.getPortletRepository(groupId,PortletKeys.DOCUMENT_LIBRARY,serviceContext)
input.getPlatformKind()
getPreferences().getBoolean(SIGNAL_PREF,true)
new SQLException("Table exists","I6000",288,null)
selenium.isVisible("link=Control Panel")
isGreaterOrEqual(platformVersion,MNC)
broadcasterClassName.equalsIgnoreCase(DefaultBroadcaster.class.getName())
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true)
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallbackExt mBluetoothGattServerCallback=new IBluetoothGattServerCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
ap.getSsid()
outLatch.startLatch.await(200,TimeUnit.MILLISECONDS)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_SAVE_AS,false)
memoryReservation.getAndAdd(bytes)
getConfig().getBoolean(SPIDER_PARSE_ROBOTS_TXT,false)
tableItem.setText(5,Const.NVL(meta.getPassword(),""))
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
f.getAttrs().getATime()
type.getConstructor()
HandleConstructor.createConstructor(AccessLevel.PACKAGE,builderType,Collections.<EclipseNode>emptyList(),false,annotationNode,Collections.<Annotation>emptyList())
mFrameSlots.remove(slot)
g.cluster().node()
new Paint(Paint.ANTI_ALIAS_FLAG)
result=60
new SelectWidget("Show server home page:",new String[]{"Automatic","Always","Never"},new String[]{"sessions","always","never"},false,true)
buffer.length() == 0
mContext.enforceCallingPermission(android.Manifest.permission.BACKUP,"isBackupServiceActive")
display.getMetrics(dm)
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
WordPress.getCurrentBlog().getRemoteBlogId()
RecentProjectsManager.getInstance().getRecentProjectsActions()
setServiceForegroundInnerLocked(r,userId,notification,flags)
Collection<TblColRef>
shard.applyIndexOperationOnReplica(0,1,1,VersionType.EXTERNAL,IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP,false,SourceToParse.source(shard.shardId().getIndexName(),"test","id",new BytesArray("{}"),XContentType.JSON),mappingConsumer)
engine.execute(query).toString()
parameterType.getSort()
descriptorDecoder.strippedChannel()
(FileDisplayActivity)getActivity()
mListUrlBuilder.setMode(ListUrlBuilder.MODE_NORMAL)
Calendar.getInstance(JSON.defaultLocale)
!displayContent.isReady() || !mPolicy.isScreenOn()
winAnimator.prepareSurfaceLocked(recoveringMemory)
ordinals.size()
tour.getStageInformation().isEmpty()
nodeEngine.getPartitionService()
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallbackExt mBluetoothGattServerCallback=new IBluetoothGattServerCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
connection.hdel(key)
new SummariserRunningSample("DELTA",0)
toArrayHelper(1)
mPulseCallback.onPulseFinished()
editor.apply()
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
selenium.isVisible("link=Control Panel")
Convolution.im2col(input,kH,kW,sY,sX,pY,pX,false,out2p)
tokenLength >= 2
config.setBeanCache(model.get(EJB3SubsystemModel.CLIENT_MAPPINGS_CACHE).asString())
(String)config.get("location")
getProperty(HTTPSampler.METHOD)
stream.close()
members == null
securityMode != SecurityMode.None
r != null
newDto(RecipeDto.class).withLocation(DEFAULT_DOCKER_IMAGE)
attributeModel != null
getMockEndpoint("mock:" + i).expectedMessageCount(1000)
winAnimator.mSurfaceController == null
PathUtils.concatPath(filePath,YML_FILE_DIR)
program.getProgramId()
return false; 
child2.setBytes(200)
b == Bound.END
ObjectStreamClass.lookupAny(clazz)
mKeyguardController.isKeyguardLocked()
type.equals(number.getClass())
Format.createAudioSampleFormat(null,MimeTypes.AUDIO_RAW,Format.NO_VALUE,streamInfo.bitRate(),streamInfo.channels,streamInfo.sampleRate,null,null)
dynamicType.getLoaded().getConstructor()
tableHasData(newTableName)
recipient.getExpireMessages() * 1000
t.sleep(5000)
n <= colPI
Integer.valueOf(rightStr)
m_data.rewind().forward((int)key_offset).getFixString((int)key_length)
public abstract ReferenceType deriveTypeParameters(ResolvedTypeParametersMap typeParametersMap); 
InsertionSort.sort(reverse.clone())
Slog.e(TAG,"Hardware Activity-Recognition not supported.")
new ClearDatabaseChangeLogTableStatement()
Collections.emptyEnumeration()
newDto(RecipeDto.class).withLocation(DEFAULT_DOCKER_IMAGE)
Thread.sleep(5000)
count=0
myMatcher.getElementsByPattern(pattern,name,myCheckboxState,new Computable<Boolean>(){   public Boolean compute(){     return myCancelled;   } } )
countNewlines(headerFragment + lhsFragment + thenFragment) + 1
proc != null
mock.expectedHeaderReceived(CaffeineConstants.ACTION_HAS_RESULT,false)
size.longValue()
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
typeSettingsProperties.toSortedString()
queueAccess.get(0) != selectedItem.getId()
user.hasPrivilege(OpenmrsConstants.PRIV_EDIT_USERS)
new Duration(2,SECONDS)
polyLats.length - 1
LOG.error("Could not parse syslog message. Not further handling.",e)
DEBUG=true
segmentsInCluster.get(segment.getIdentifier(),server.getTier())
DumpUtils.checkDumpPermission(mContext,TAG,fout)
id=15842
/**   * Tests that compression is turned on.  */ @RunWith(JUnit4.class) public class TransportCompressionTest extends AbstractTransportTest {   private static int serverPort=TestUtils.pickUnusedPort();   private static final DecompressorRegistry decompressors=DecompressorRegistry.newEmptyInstance();   private static final CompressorRegistry compressors=CompressorRegistry.newEmptyInstance();   @Before public void beforeTests(){     Fzip.INSTANCE.anyRead=false;     Fzip.INSTANCE.anyWritten=false;   }   /**   * Start server.   */   @BeforeClass public static void startServer(){     decompressors.register(Fzip.INSTANCE,true);     compressors.register(Fzip.INSTANCE);     startStaticServer(ServerBuilder.forPort(serverPort).compressorRegistry(compressors).decompressorRegistry(decompressors),new ServerInterceptor(){       @Override public <ReqT,RespT>Listener<ReqT> interceptCall(      MethodDescriptor<ReqT,RespT> method,      ServerCall<RespT> call,      Metadata headers,      ServerCallHandler<ReqT,RespT> next){         Listener<ReqT> listener=next.startCall(method,call,headers);         call.setMessageCompression(true);         return listener;       }     } );   }   /**   * Stop server.   */   @AfterClass public static void stopServer(){     stopStaticServer();   }   @Test public void compresses(){     final SimpleRequest request=SimpleRequest.newBuilder().setResponseSize(314159).setResponseType(PayloadType.COMPRESSABLE).setPayload(Payload.newBuilder().setBody(ByteString.copyFrom(new byte[271828]))).build();     final SimpleResponse goldenResponse=SimpleResponse.newBuilder().setPayload(Payload.newBuilder().setType(PayloadType.COMPRESSABLE).setBody(ByteString.copyFrom(new byte[314159]))).build();     assertEquals(goldenResponse,blockingStub.unaryCall(request));     assertTrue(Fzip.INSTANCE.anyRead);     assertTrue(Fzip.INSTANCE.anyWritten);   }   @Override protected ManagedChannel createChannel(){     return ManagedChannelBuilder.forAddress("localhost",serverPort).decompressorRegistry(decompressors).compressorRegistry(compressors).intercept(new ClientInterceptor(){       @Override public <ReqT,RespT>ClientCall<ReqT,RespT> interceptCall(      MethodDescriptor<ReqT,RespT> method,      CallOptions callOptions,      Channel next){         final ClientCall<ReqT,RespT> call=next.newCall(method,callOptions);         return new ForwardingClientCall<ReqT,RespT>(){           @Override protected ClientCall<ReqT,RespT> delegate(){             return call;           }           @Override public void start(          final ClientCall.Listener<RespT> responseListener,          Metadata headers){             ClientCall.Listener<RespT> listener=new ForwardingClientCallListener<RespT>(){               @Override protected io.grpc.ClientCall.Listener<RespT> delegate(){                 return responseListener;               }               @Override public void onHeaders(              Metadata headers){                 super.onHeaders(headers);                 String encoding=headers.get(GrpcUtil.MESSAGE_ENCODING_KEY);                 assertEquals(encoding,Fzip.INSTANCE.getMessageEncoding());               }             } ;             super.start(listener,headers);             setMessageCompression(true);           }         } ;       }     } ).usePlaintext(true).build();   } static final class Fzip implements Codec {     static final Fzip INSTANCE=new Fzip();     volatile boolean anyRead;     volatile boolean anyWritten;     @Override public String getMessageEncoding(){       return "fzip";     }     @Override public OutputStream compress(    OutputStream os) throws IOException {       return new FilterOutputStream(os){         @Override public void write(        int b) throws IOException {           super.write(b);           anyWritten=true;         }       } ;     }     @Override public InputStream decompress(    InputStream is) throws IOException {       return new FilterInputStream(is){         @Override public int read() throws IOException {           int val=super.read();           anyRead=true;           return val;         }         @Override public int read(        byte[] b,        int off,        int len) throws IOException {           int total=super.read(b,off,len);           anyRead=true;           return total;         }       } ;     }   } } 
mKey.equals(other.mKey)
log.warn("Problem in JSR223 script ",e)
? super View
Matchers.equalTo(1)
!ObjectUtils.isEmpty(getLocations()) && !ObjectUtils.isEmpty(getClasses())
new IllegalArgumentException("Advertising can't be both connectable and anonymous")
y == 0
this(icon,title,intent,new Bundle(),null,false); 
res.time >= 210
mock.expectedMessageCount(2)
telephony.getDataNetworkTypeForSubscriber(subId)
dcEndpoints.get(dc).get() != responses.get(dc).get()
new Notification(StatusBarTest.this,R.drawable.ic_statusbar_missedcall,"tick tick tick",System.currentTimeMillis() - (1000 * 60 * 60* 24),"(453) 123-2328","",null)
ArrayMap<TurnPathHelper.TurnResource,Bitmap>
rule.setQsappend(true)
SmsHeader.toByteArray(header).length + 1
defaultSchedulers(executor)
element.getNodeName()
new TextPaint(Paint.ANTI_ALIAS_FLAG)
resources.getDimension(R.dimen.close_handle_height)
testClass.getName()
EnumSet.of(PROPERTY,CLASSMETHOD,STATICMETHOD)
guiResource.getImageBol()
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
artifactResolver.resolveTransitively(artifacts,originatingArtifact,remoteRepositories,localRepository,artifactMetadataSource)
typeSettingsProperties.toString()
actionButton.setPressedImage(new ImageIcon(ca.getPressedIcon()).getImage())
mToolbar.setTitle(title)
routes.IndicesResource().single(index)
new ModelNode().set(10)
mDataAuthorities == null
currentPath.isEmpty()
expression.substring(1,pathSeparator)
mCol.getDb().queryScalar("SELECT nid FROM cards WHERE id = " + id)
-120
y == 0
Maps.newHashMap()
buffer == null
deadline < now
Boolean.parseBoolean(ldapConfig.get("startEmbeddedLdapServer"))
mFrameSlots.remove(slot)
myCardModel.getAnswerAlign()
"weighting " + weighting + " not supported"
in2 >= 0x7e
Internal.getSaltBytes(salt_bucket)
onEvaluateInputViewShown()
evaluate("value = read_config('foo', 'bar', 'baz')").lookup("value")
new ElasticsearchIllegalArgumentException("Unsupported search type [" + searchType + "]")
configTimeCacheProviderHolder.remove()
diffFromAffinityVer.compareTo(affVer) <= 0
uuid.equals(NULL)
out.read(compressed,0,chunkSize)
vizConfig.isShowArrows() && dataBridge.isDirected()
mSyncStatus.get(i)
SystraceMessage.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
s.length() == 0
mAnswer.setBackgroundDrawable(mTextBackground)
selenium.isVisible("link=Control Panel")
mirror.getTypeId()
!binding.getName().equals("compareTo")
telephonyService.getDeviceId()
helper.setMinTextSize(minTextSize)
getUseEquals()
new IllegalStateException()
EqualityComparer<T>
telephony.getLteOnCdmaModeForSubscriber(subId)
"none".equals(max_items)
isSingleTableOnly || shardingRule.tryFindTableRule(tableName).isPresent() || shardingRule.findBindingTableRule(tableName).isPresent()
command.getNewName()
Integer.valueOf(nextArgRequired())
resolver.acquireContentProviderClient(uri)
assertEquals("Size of " + r,1,r.size())
matchAxisFilter != 0
JournalTemplateLocalServiceUtil.getTemplate(webDavRequest.getGroupId(),journalTypeId,true)
System.out.ptintln("--")
new Coordinator("local",Settings.EMPTY,clusterSettings,transportService,ESAllocationTestCase.createAllocationService(Settings.EMPTY),new MasterService("local",Settings.EMPTY,threadPool),() -> new InMemoryPersistedState(0,ClusterState.builder(new ClusterName("cluster")).build()),r -> emptyList(),new NoOpClusterApplier(),new Random(random().nextLong()))
out.append(e.getMessage())
PyUtil.addListNode(this,param,beforeWhat,true,params.length == 0)
inOrder.verify(mockAwareService).subscribe(eq(clientId),eq(subscribeConfig),sessionProxyCallback.capture())
Float value=list.get(i); 
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED)
simpleRecyclerViewAdapter.removeAt(1)
getSSLContext().getSocketFactory().createSocket()
Integer.valueOf(leftStr)
UnderFileSystem.get(tmpFolder)
getJSDocTypeWithBraces(cp)
new IndexWriter(directory,analyzer,false)
assetUri.getAssetName().toString()
DBG=true
AnalyticsDataFactory.getAnalyticsData()
new TelnetServerPipelineFactory()
assertEquals(8,lm.getFields().size())
monitoredRegion.getProximityUuid()
queryAddPosition=new NamedParameterStatement(globalConnection,query)
DEFAULT_STREAM_TYPE_OVERRIDE_DELAY_MS=5000
referenceDatabase.setObjectQuotingStrategy(originalStrategy)
assertThat(container.size()).isEqualTo(39)
component.setSelectedItem(selected)
name.indexOf('+') >= 0
Parameter.forConstructor(errorHandler,fastConstructor)
http2c.setInitialStreamSendWindow(initialStreamSendWindow)
Thread.sleep(5000)
connections.contains(manager)
hitTest(child,localPoint.x,localPoint.y,viewSelector)
pathParts[2] != null
super(ctx,aList,pMarkerFocusedBase,pMarkerHotspot,aOnItemTapListener,pResourceProxy); 
mIpSecService.reserveSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
executeRunnableDismissingKeyguard(runnable,null,false,true)
id=15857
Log.wtf(TAG,e.getMessage(),e)
position < firstPos
Simple.of(SkylarkDict.class)
Locale.getDefault().toString()
LogDelegate.createLog(name)
Stream.of("CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
"http".equals(protocol)
selenium.isVisible("link=Control Panel")
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/ImportsFromObjectNoDuplicates.kt")
RuntimeException e
new PrintWriter(deprecationPrinter)
grammar.getTokenNames()
private final MessageHeaderAccesssor headerAccessor; 
getBitmapFromMemCache(key) == null
appearance.getFont(attr)
type == null
CANCEL_TIMEOUT_LIMIT=300
origin.absoluteValue().doubleValue() > complexNumber.absoluteValue().doubleValue()
selenium.isVisible("link=Control Panel")
callNode.call(frame,evaluateArgs(frame))
new Avg()
Log_OC.e(TAG,"onSaveInstanceState() start")
SOURCE.deref()
myTools != null
odi.release()
Settings.Secure.getIntForUser(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0,UserHandle.USER_CURRENT)
SystemProperties.getBoolean("persist.vr.use_standby_to_exit_vr_mode",false)
type.getConstructor()
logger.error("Action Invalid Value Format Exception {}",ex.getMessage())
new StringBuffer()
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) != PackageManager.SIGNATURE_MATCH
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) != PackageManager.SIGNATURE_MATCH
args[0]
column.getValueClobFile() != null
waitForMappingUpdateOnAll("dynamic_table","my_object.a")
startActivityAsUser(in,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
mHelper.onActivtyCreate()
new IllegalArgumentException("Cannot force ephemeral users on systems without split system user.")
Settings.Secure.getInt(getContext().getContentResolver(),ROUNDED_DIVIDER,1)
DownloadIndexActivity.class
mavenProject.getName()
mHeader.performClick()
view.getCompoundDrawables()
Exception e
query.contains("about:")
Boolean.valueOf(attrValue)
Log_OC.wtf(TAG,"Trying to share a NULL OCFile")
GL20.glUniform1(location,toFloatBuffer(v,offset,count))
@Override public Appendable append(CharSequence csq,int start,int end){   if (csq == null) {     return append(NULL_STRING);   }   grow(ref.length + end - start);   for (int i=start; i < end; ++i) {     setCharAt(ref.length++,csq.charAt(i));   }   return this; } 
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0)
new VideoMediaDeviceSession(this,session)
result == node.isNegated()
telephony.getCdmaEriTextForSubscriber(subId)
allowPrivate.isNull()
mRenderNode.isPivotExplicitlySet()
entry.getValue().getTimeWindowSet().size() < 2
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Allocation.createFromBitmap(mRS,b,Allocation.MipmapControl.MIPMAP_NONE,Allocation.USAGE_SCRIPT)
checkMatch(inv,x,y,false)
Settings.Global.getInt(cr,Settings.Global.DOCK_AUDIO_MEDIA_ENABLED,1)
connectedHeaders.setAcceptVersion("1.2")
assertEquals(2,resultList.size())
mContext.startActivity(intent)
public TokenStream create(TokenStream input){   return new WordDelimiterFilter(input,generateWordParts,generateNumberParts,catenateWords,catenateNumbers,catenateAll,splitOnCaseChange); } 
logger.error("{}",builder.toString())
Thread.sleep(5000)
LauncherActivity.isLaunchUri(uri)
this.exchanges.get(requestId)
logger.error("Error creating pool to " + host,t)
lastPos != mBoundPos
new CallbackStub()
new IllegalArgumentException("Cannot force ephemeral users on systems without split system user.")
mn.getTypeDescriptor().equals(candidate.getTypeDescriptor()) && !mn.isAbstract()
processor.process(request)
Math.min(mGlowAlpha + (Math.abs(deltaDistance) * PULL_DISTANCE_ALPHA_GLOW_FACTOR),MAX_ALPHA)
initialCapacity < capacity
nativeLibraryDir.getParent()
sr.makeNextStartId()
me.showWebPage(errorUrl,true,true,null)
sizeNeeded >= items.length
writeln(serverInfo + columnEnd)
new ExpressionEvaluatingMessageProcessor<String>(remoteDirectoryExpression)
versionObject.getVersion()
(T)this
new CatchResult()
AbstractConfiguredTarget current
nativePostCreate1(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
file.getCanonicalPath()
Arrays.asList(STANFORD_TOKENIZE,STANFORD_SSPLIT)
url.addArgument(getAttributeValue(nodeAtts,"name"),getAttributeValue(nodeAtts,"value"))
buildWSDLTask.dependsOn(jarTask)
DataStream<OUT>
primaryIndexes.size() > indexes.size()
Ignition.start()
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
new TextField<String>(BrokerConfiguration.BROKER_URL_KEY)
loaded.getLoaded().getConstructor()
origin >= other
telephony.getCdmaEriIconIndexForSubscriber(subId)
ClusterGroupEmptyException ignore
mCurrentVrService == null
source.getCode()
ServerEndpointConfig.class
DISABLE_TIMEOUT=5000
selectedPos < lastPos
ts.getJobId() == jobid
@Autowired GraphTraversalService graphTraversalService; 
public S where(Expr.EBoolean... o){   query.where(o);   return self; } 
source=Html.fromHtml(this.source).toString()
c.deactivate()
realm.assertThread()
VertexAttribute.Color()
XmlUtils.readIntAttribute(parser,ATTR_SDK_VERSION)
UIUtil.invokeAndWaitIfNeeded(new Runnable(){   @Override public void run(){     if (myRunContext != null) {       runnable.run();       return;     }     final boolean needsRestart=isIdleQueueEmpty();     myIdleRequests.add(runnable);     if (isFocusTransferReady()) {       flushIdleRequests();     }  else {       if (needsRestart) {         restartIdleAlarm();       }     }   } } )
log.severe("Change Set " + toString(false) + " failed.  Error: "+ e.getMessage(),e)
Timber.v(e,"Authentication exception for new token, permanent error assumed",e)
new ToolTip(500,new ToolTipLine(StringUtils.localize("tip.tool.add")))
sep < 0
selenium.isVisible("link=Control Panel")
AUTH_BYTE=0x8
moduleComponentSelector.getName()
currentWorldTransform=renderable.modelTransform
new StreamingModeExecutionState(NameContextsForTests.nameContextForTest(),"testState",null,NoopProfileScope.NOOP)
mResourceData[i] != null
return false; 
System.currentTimeMillis()
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
testTLS(Cert.CLIENT_PEM_ROOT_CA,Trust.SERVER_JKS,Cert.SERVER_JKS,Trust.CLIENT_PEM_ROOT_CA).requiresClientAuth().clientUsesCrl()
Thread.sleep(50)
new Paint(Paint.ANTI_ALIAS_FLAG)
PendingIntent.getBroadcast(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
Integer.valueOf(st.nextToken())
setServiceForegroundInnerLocked(r,callingUid,notification,0)
match(rule,goodSentence.getSource(),goodSentence.getTarget(),languageTool,srcTool)
depthErrorXYZ("modelZ")
entry.getValue().getIdentifiesControllerService() != null
new TextField<String>(JMSConfiguration.GROUP_KEY)
mState != STATE_FINISHED
childrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
Thread.sleep(5000)
EntityRegistry.registerEntityID(entityClass,entityName,id,background,foreground)
TelephonyManager.getDefault().getPhoneType()
ImmutableSet.<String>builder().add(BUFFERS_READ,FIELDNAMES_READ,INDEXERCLUSTER_READ,INPUTS_READ,JOURNAL_READ,JVMSTATS_READ,MESSAGECOUNT_READ,MESSAGES_READ,METRICS_READ,SYSTEM_READ,THROUGHPUT_READ,SAVEDSEARCHES_CREATE,SAVEDSEARCHES_EDIT,SAVEDSEARCHES_READ)
FilterBuilders.missingFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY)
new OptionValue<>(30.0D)
BodyExtractor<Mono<MultiValueMap<String,String>>,ReactiveHttpInputMessage>
expert != null
FileTemplateManager.getInstance()
V
invocation.pendingResponse == null
child.getMeasuredHeight()
person.getPersonType() == Person.PersonType.USER
attribute.getDefinition().getAttributeMarshaller()
lib.returnStringVarArgs("","Test")
lastPos != mBoundPos
TimeoutUtil.sleep(1100)
new IndexWriter(dir,anlzr,true)
new SortField(fieldName,nullStringLastComparatorSource)
++length > maxFieldLength
mAttachInfo == null
"https".equals(protocol)
listAdapter.notifyDataSetInvalidated()
-1
mAccessibilityController.isTouchExplorationEnabled()
new IllegalArgumentException(msg)
patternLen == 0
highlighter.getTargetArea() != HighlighterTargetArea.LINES_IN_RANGE
request.getRequestURI()
testClosureFunction("goog.isArray",ALL_TYPE,ALL_TYPE,ALL_TYPE)
RecentsVerticalScrollView.super.removeViewInLayout(view)
logger.error("Couldn't write to file: " + filename)
moduleProfile.setOutputRelativeToContentRoot(true)
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_DOWN,fromX,y,0)
editedGroup.getClass() == ExplicitGroup.class
appOpsManager.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
mainSize < size
csUseGlobalSearch.getSelection()
MimeUtility.DEFAULT_ATTACHMENT_MIME_TYPE.equals(contentType)
Exception e
new MaterializingOperator(operatorContext,sourceType)
VolumeInfo vol
stream1.getId()
lp.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER
items[18]
!clusterVersion.onOrAfter(MINIMUM_ES_VERSION) && !clusterVersion.onOrBefore(MAXIMUM_ES_VERSION)
myNameField.getComponent()
addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
dir.exists()
newDefaultSubIdObj.equals(mDefaultSubId)
nlDataOutNodes != null & nlDataOutNodes.getLength() > 0
"Skipped invalid content exclude pattern: " + includeExp
possibleCenters.get(i)
Short.valueOf(param.getValue())
new String(actualKeyBytes)
new RuntimeException(e.getMessage())
getIntent().getAction() == null
crashInfo.durationMillis != -1
ir.mHandler != null
mMncStr == null
views.html.search.noresults.render(currentUser(),q,searchResult)
Localization.lang("File")
assertEquals(1,historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size())
type.getConstructor()
imageView.setImageBitmap(null)
mPathBitmap == null
isBigDecCategory(typeRe)
currentFileContext.get(BindingContext.FILE_TO_NAMESPACE,containingFile)
lock.lock()
SCAN_STATUS_PARTIAL=0
offlineTableConfig == null
notNullValue()
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0))
{BOOLEAN,BOOLEAN_ARRAY,DATE,DATE_ARRAY,DOUBLE,DOUBLE_ARRAY,FLOAT,FLOAT_ARRAY,INTEGER,INTEGER_ARRAY,LONG,LONG_ARRAY,NUMBER,NUMBER_ARRAY,SHORT,SHORT_ARRAY,STRING,STRING_ARRAY,STRING_ARRAY_LOCALIZED,STRING_ARRAY_LOCALIZED}
@Nonnull
r.curApp != null
band.getResultAmount().compareTo(fulfillmentAmount) <= 0
indexNameExpressionResolver().concreteIndices(state,IndicesOptions.lenientExpandOpen(),HistoryStore.INDEX_PREFIX + "*")
if (myLocalResolve) {   final PsiElement topParent=JSResolveUtil.getTopReferenceParent(myParent);   localProcessor=new SinkResolveProcessor<ResolveResultSink>(myReferencedName,myRef,new ResolveResultSink(myRef,myReferencedName)){     @Override public boolean needPackages(){       if (myParent instanceof JSReferenceExpression && topParent instanceof JSImportStatement) {         return true;       }       return super.needPackages();     }   } ;   localProcessor.setToProcessHierarchy(true);   JSReferenceExpressionImpl.doProcessLocalDeclarations(myRef,myQualifier,localProcessor,true,false,null);   PsiElement jsElement=localProcessor.getResult();   if (myQualifier instanceof JSThisExpression && localProcessor.processingEncounteredAnyTypeAccess() && jsElement != null) {     localProcessor.getResults().clear();     jsElement=null;   }   if (myQualifier == null) {     final JSReferenceExpression namespaceReference=JSReferenceExpressionImpl.getNamespaceReference(myRef);     ResolveResult[] resolveResultsAsConditionalCompilationVariable=null;     if (namespaceReference != null && (namespaceReference == myRef || namespaceReference.resolve() == namespaceReference)) {       if (jsElement == null && ModuleUtilCore.findModuleForPsiElement(myRef) == null) {         return new ResolveResult[]{new JSResolveResult(myRef)};       }       resolveResultsAsConditionalCompilationVariable=resolveConditionalCompilationVariable(myRef);     }     if (resolveResultsAsConditionalCompilationVariable != null && resolveResultsAsConditionalCompilationVariable.length > 0 && (jsElement == null || resolveResultsAsConditionalCompilationVariable[0].isValidResult())) {       return resolveResultsAsConditionalCompilationVariable;     }   }   if (jsElement != null || localProcessor.isEncounteredDynamicClasses() && myQualifier == null || !localProcessor.processingEncounteredAnyTypeAccess() && !localProcessor.isEncounteredDynamicClasses()) {     return localProcessor.getResultsAsResolveResults();   } }  else {   final QualifiedItemProcessor<ResolveResultSink> processor=new QualifiedItemProcessor<>(new ResolveResultSink(myRef,myReferencedName),myContainingFile);   processor.setTypeContext(JSResolveUtil.isExprInTypeContext(myRef));   JSTypeEvaluator.evaluateTypes(myQualifier,myContainingFile,processor);   if (processor.resolved == QualifiedItemProcessor.TypeResolveState.PrefixUnknown) {     return dummyResult(myRef);   }   if (processor.resolved == QualifiedItemProcessor.TypeResolveState.Resolved || processor.resolved == QualifiedItemProcessor.TypeResolveState.Undefined || processor.getResult() != null) {     return processor.getResultsAsResolveResults();   }  else {     localProcessor=processor;   } } 
type.getConstructor()
serviceTester.systemReady()
httpResponseCode == 204
i <= size
log.logError(BaseMessages.getString(PKG,"JobUnZip.Error.Label"),BaseMessages.getString(PKG,"JobUnZip.MoveToDirectoryEmpty.Label"))
Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath,ufsPath)
rc.tiles.size() > 35
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
tiled != null
@NotNull CommitId getOneOfHeads(); 
mFinishing && mSupportHardware
libDirectory="."
SolrServer lastClient=null; 
!trans.isFinished() && !parentJob.isStopped()
rep.saveStepAttribute(id_job,getID(),"success_condition",getSuccessConditionCode(successCondition))
state == AsyncState.DISPATCHING
log.warn("Exception while processing message: " + e,e)
Localization.lang("BibTeX")
ortho(-width / 2,+width / 2,-height / 2,+height / 2,cameraNear,cameraFar)
importData ? 4 : 4
scheduleRemoveStartingWindow(wtoken)
ContainerUtil.newHashSet(actions)
schemaField.createField(readableValue,0.0f)
mCaCerts != null || mCaCerts.length > 0
canonicalURI.normalize().getPath()
FastMath.max(origin,num.floatValue())
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
debugRootView.addView(button,debugRootView.getChildCount() - 1)
(outputFolder + File.separator + modelFolder).replaceAll("/",File.separator)
assertEquals(r.getProperties().size(),2)
configureAtmosphereInterceptor(sc)
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_SEGMENTS))
out.writeLong(sampleCount)
mSyncStatus.get(i)
ToolUtils.sleepIgnoreInterrupt(60000)
bar.getValue() > 0
resultsE.appendChild(reportE)
@Nullable @Override public KtElement getContentElement(){   return findChildByClass(KtTypeReference.class); } 
mForgotPatternButton.getVisibility() == View.VISIBLE
logger.error("{}",builder)
public String getThumb(){   return thumb; } 
LaterInvocator.invokeLater(new Runnable(){   public void run(){     if (checkForRejectOrByPass(command,forced,result))     return;     if (myRequestFocusCmd == command) {       myRequestFocusCmd=null;       command.run().doWhenDone(new Runnable(){         public void run(){           LaterInvocator.invokeLater(new Runnable(){             public void run(){               result.setDone();             }           } );         }       } ).doWhenRejected(new Runnable(){         public void run(){           result.setRejected();         }       } );       restartIdleAlarm();       if (forced) {         myForcedFocusRequestsAlarm.addRequest(new Runnable(){           public void run(){             setLastEffectiveForcedRequest(null);           }         } ,250);       }     }  else {       rejectCommand(command,result);     }   } } )
ObjectAnimator.ofFloat(target,ALPHA,VISIBLE)
getDefaultSystemHandlerActvityPackageLPr(deviceProvisionIntent,userId)
List<ActivityManager.RecentTaskInfo>
nodeVersion.after(Version.V_5_3_0_UNRELEASED)
new ArrayList<>()
applyCurrentState()
ExceptionUtils.getFullStackTrace(th)
result.getReceipt().getEnergyUsageTotal()
getSupportFragmentManager().beginTransaction().add(R.id.fragmentContainer,new FirstUsageWelcomeFragment(),FirstUsageWelcomeFragment.TAG).commit()
Log.w(TAG,"Session failed to close due to remote exception",e)
Math.min(leftLen,rightLen)
future.isCancelled()
myEditor.getBackroundColor()
in.getVersion().after(Version.V_5_4_0_UNRELEASED)
!fieldTree.isStandalone()
LOG.error("Ignoring duplicate class " + className)
CACHE.findOrInsert(classLoader,new TypeCache.SimpleKey(type,additionalInterfaces),new Callable<Class<?>>(){   @Override public Class<?> call() throws Exception {     return new ByteBuddy().with(new NamingStrategy.SuffixingRandom("SpockMock")).ignore(none()).subclass(type).implement(additionalInterfaces).implement(ISpockMockObject.class).method(any()).intercept(MethodDelegation.withDefaultConfiguration().withBinders(Morph.Binder.install(ByteBuddyInvoker.class)).to(ByteBuddyInterceptorAdapter.class)).transform(Transformer.ForMethod.withModifiers(SynchronizationState.PLAIN,Visibility.PUBLIC)).implement(ByteBuddyInterceptorAdapter.InterceptorAccess.class).intercept(FieldAccessor.ofField("$spock_interceptor")).defineField("$spock_interceptor",IProxyBasedMockInterceptor.class,Visibility.PRIVATE).make().load(classLoader).getLoaded();   } } ,type)
A args
Log.e("RemoteViews","Cannot setOnClickPendingIntent for collection item " + "(id: " + viewId + ")")
c.getLiquid().amount == 0
fullCalleeURI + ": jingle supported "
y == 0
"Got ACTION_DEVICE_CHANGED from unexpected device: " + mGBDevice
a.getFloat(attr,0)
new SimpleSourceInclusionScanner(testExcludes,testExcludes)
ELECTRON_BEAM_OFF_ANIMATION_DURATION_MILLIS=450
DefaultFileSystemMaster.class
constraintSystem.getTypeVariables()
labels.slices()
solrDocument1.getFieldNames()
computeHorizontalScrollRange()
activity.createTimeListPreference(settings.SAVE_TRACK_INTERVAL,SECONDS,MINUTES,1,R.string.save_track_interval,R.string.save_track_interval_descr)
selenium.isVisible("link=Control Panel")
currentWorldTransform=renderable.modelTransform
mService.disconnect(device)
(((float)bytes.get()) * 8) / 1024
Long.valueOf(strings[i])
stack.get(stack.size() - 3).longValue()
Slog.wtf(TAG,message,th)
Exceptions.argumentIsNullException()
focusedTopActivity != null
mSyncStatus.get(i)
a.getDimensionPixelOffset(attr,0)
NoSuchThingException.class
bufferedBytes >= maxBufferedBytes
assertEquals(11,beanCount)
Thread.sleep(5000)
stack.peekFirst()
serializedMapping != null
Logger.getLogger(loggerName).getLevel()
serialVersionUID=1199895056
Generics.newHashMap()
selenium.isVisible("link=Site Name")
assertBusy(() -> {   final Snapshot snapshot=new Snapshot("test-repo",snapshotId);   List<IndexShardSnapshotStatus.Stage> stages=snapshotShardsService.currentSnapshotShards(snapshot).values().stream().map(status -> status.asCopy().getStage()).collect(Collectors.toList());   assertThat(stages,hasSize(shards));   assertThat(stages,everyItem(equalTo(IndexShardSnapshotStatus.Stage.DONE))); } )
getBinaryTupledSet()
buildData.getJenkinsGitHubURL()
TestLoggerSink.class
interceptor.intercept(invocation)
setInputMethodEnabled(info.getId(),true)
callback.onDownloadFailure()
widthRatio > 0.8
Exception e
log.errorf("started ResourceAdapterService %s",context.getController().getName())
mDataAuthorities == null
new InetSocketAddress(0)
new WeightedRandomChestContent(item,max,max,weight)
!mAwake
latch.endLatch.await(400,TimeUnit.MILLISECONDS)
selenium.isVisible("link=Control Panel")
user.id()
Arrays.asList(1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,16,17,18,19,20)
params.getBuildTarget()
DefaultCacheKeysFactory.createNaturalIdKey(naturalIdValues,persister,session)
new Paint(Paint.ANTI_ALIAS_FLAG)
clazz.isPrimitive() || clazz.isArray()
assertEquals(service.state(),Service.State.FAILED)
gatecoinOrder.getType()
mDateView.setTypeface(Typeface.SANS_SERIF)
warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))
new Packet(data,operation.getPartitionId(),serializationService.getPortableContext())
imageView.setBackgroundDrawable(drawable)
assertThat(map).contains(p)
parent.getRegionName()
Exception e
resourceTableStream.read(tableBytes,0,(int)alignedSize)
mDisplay.getMetrics(mDisplayMetrics)
new TreeScanner<Void,Void>(){   @Override public Void visitMethod(  MethodTree tree,  Void unused){     if (tree.getModifiers().getFlags().contains(Modifier.NATIVE)) {       hasAnyNativeMethods.set(true);     }     return null;   } } .scan(path,null)
List<Expression>
args.length > 1
activity.findViewById(android.R.id.list)
NotificationColorUtil.calculateContrast(backgroundColor,foregroundColor)
logger.info("--> checking snapshot status after it is done with empty repository",blockedNode)
video_st.metadata() != null
executeKeywords.length > 0
256 * 1024
routes.BufferResource()
type.getConstructor()
twitter1.getRetweets(18594701629l)
Mono.currentContext()
equalAny(DefaultKeyword.LIKE)
CommitId
assertEquals(9,definitions.size())
provider == null
DumpUtils.checkDumpPermission(mContext,TAG,pw)
@UnrelatedOne
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
AnnotatedElementUtils.getAnnotationAttributes(type,annotationType)
!locations.isDefined()
loaded.getLoaded().getConstructor()
config.getBroadcasterFactory().lookup(m.broadcaster(),true)
mAuthorities.get(i)
ChaosInstanceSelector.class
groupsFile.getPath()
DBG=false
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
mapRouteInfoMenu.isVisible()
previousResultRsmSet.getLast()
CharSequence message
configure(COMPONENT)
getRequestMethod == null
fraction * (nextValue - prevValue)
BATCH_SIZE=500
doTest()
!obj.has("error")
String.format("BUG: %s changed score during rematch: %d -> %d",score,newNetwork.getCurrentScore())
plus > 2
JDBCUtils.safeGetString(resultSet,"ROLENAME")
cSubmitLimit=3
MonitoringPortletImpl.isMonitoringPortletResourceRequest()
Exception e
notifyViewAccessibilityStateChangedIfNeeded(AccessibilityEvent.CONTENT_CHANGE_TYPE_PANE_TITLE)
n.extras.getString(Notification.EXTRA_TITLE)
this.doInitrospect(extendedInterfaces,matchedInterfaces)
sep < 0
formsFound=false
protected FontMetrics fontMetrics; 
realm.assertThread()
holder.getListener().onCaptureSequenceCompleted(CameraDeviceImpl.this,requestId,lastFrameNumber)
!isPartialUpdate
synchronized (mVolumes) {   for (int i=0; i < mVolumes.size(); i++) {     final VolumeInfo vol=mVolumes.valueAt(i);     if (vol.isVisibleForRead(userId) && vol.isMountedReadable()) {       final StorageVolume userVol=vol.buildStorageVolume(mContext,userId,false);       mHandler.obtainMessage(H_VOLUME_BROADCAST,userVol).sendToTarget();       final String envState=VolumeInfo.getEnvironmentForState(vol.getState());       mCallbacks.notifyStorageStateChanged(userVol.getPath(),envState,envState);     }   }   mSystemUnlockedUsers=ArrayUtils.appendInt(mSystemUnlockedUsers,userId); } 
122 + (USE_OLD_HISTORY ? 1000 : 0)
attachmentNotSaved()
sourceWidth > 0
!mIsRecentsShown || mIsPipFocusedInRecent
entry.getHeader().getEventLength() * 3
(NotificationAction)null
ReferencesSearch.search(referenceTo,scope,false)
obj.setContentEncoding(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
Exception exception
nativeLibraryDir.getParent()
Integer.toHexString(quality)
jobLogTab.getText()
DEBUG=true
dos.write(valueBytes.length)
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true)
response.getStatusCode()
@NonNull
mCameraUser.submitRequest(request,true)
javaBeanSerializer.getFieldValues(json)
Thread.sleep(5000)
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),null,null,null,null)
selenium.isVisible("link=Control Panel")
mInterpolator == null
mDataAuthorities == null
updaterOrigina.getStateViewArray().dup()
Rule.DEFAULT_WEIGHT * 1.4
bindServiceAsUser(serviceIntent,conn,BIND_AUTO_CREATE | BIND_NOT_FOREGROUND,UserHandle.CURRENT)
dataSourceContainer.getDriver().getName()
lineArgs[3]
type.equals("")
selenium.isVisible("link=Control Panel")
flyway.setLocations("com.googlecode.flyway.sample.migration")
el.className()
toHeapData(key)
first > 0
server.addBean(new ErrorHandler(){   @Override protected void handleErrorPage(  HttpServletRequest request,  Writer writer,  int code,  String message) throws IOException {     writer.write("<!DOCTYPE<html><head><title>Error</title></head><html><body>" + code + " - "+ HttpStatus.getMessage(code)+ "</body></html>");   } } )
e.printStackTrace()
findKeyFromPubKey(sender)
new String(byteArrayOutputStream.toByteArray())
_hint != null
JSplitPane pane=(JSplitPane)getComponent(0); 
Long assetName
registerForAllMatchingVersions(level -> UnsupportedFeaturesUtil.raiseHasNoArgsUnderFinally(node,level)," not support this syntax. Raise with no arguments can only be used in an except block",node,null,false)
getPort()
this.args.nodeId()
success=true
target.getName()
resources.getDimension(R.dimen.close_handle_height)
mImage.getFrameCount() >= 1
config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString())
TypeResolver.resolve(channelTypeUID)
localCache.put(name,NULL_ENTRY)
builder().experimentalAnalysisTestingImprovements(false).experimentalCcSkylarkApiEnabledPackages(ImmutableList.of()).experimentalEnableAndroidMigrationApis(false).experimentalEnableRepoMapping(false).experimentalRemapMainRepo(false).experimentalPlatformsApi(false).experimentalStarlarkConfigTransitions(false).incompatibleBzlDisallowLoadAfterStatement(false).incompatibleDepsetIsNotIterable(false).incompatibleDepsetUnion(false).incompatibleDisableDeprecatedAttrParams(false).incompatibleDisableObjcProviderResources(false).incompatibleDisallowConflictingProviders(false)
maker.getTaggedData(NOTIFICATION_SINCE_CREATE_MILLIS)
DumpUtils.checkDumpPermission(mContext,TAG,pw)
writeString(writer,String.valueOf(reader.getFloat()),fieldName)
connection == null
_buildTemplateWithGradle("npm-jquery-portlet","jquery-dependency-management","--dependency-management-enabled","true")
new DSXOrder(pair,type,new BigDecimal("0.1"),new BigDecimal("900"),new Date().getTime(),0,DSXOrder.OrderType.limit)
buffer.put(indices)
config.setPort(25667)
id=32
commitBatchSize=1000
context.setItemsToShow(variants)
Arrays.asList("jar","ejb-client")
BeanParamUtil.getInteger(user,actionRequest,"prefixId")
config.getStartTime()
mc.theWorld.getScoreboard().func_96509_i(player.name)
reportNotAnnotatedInterfaces=false
Numeric.encodeQuantity(filterId)
spawnSettings.contains(id)
LOGGER.debug("Error with XML parser configuration",e1)
response.getBitmap() != null
contentType != null
assertClusterSize(2,nodes[0])
allowPrivate.isNull()
child.getProperties().isNodePartitionedOn(partitioningRequirement)
mAttributes.getFlags()
new ArrayList<Data>()
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED)
logger.warn("The GENA Subscription for serviceID {} ended for device {}",subscription.getService().getServiceId(),subscription.getService().getDevice())
activityNdx < topActivityNdx
mHandler.removeCallbacks(pae)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_strmm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
createFromResourceStream(null,null,is,srcName)
mFile.getPath()
mappingData.wrapperPath.recycle()
telephony.isOffhook()
DBG=true
trip ? (val & 0x3F) : 64
mResourceData[i] != null
LOG.isDebugEnabled()
privObj.getObjectName().equals("masking_acid_no_masking")
Set<UUID>
javaProject.getPackageFragmentRoots()
mSyncStatus.get(i)
fb.capacity()
new IOException(e)
operation == RESTORE_OPERATION
outLatch.startLatch.await(200,TimeUnit.MILLISECONDS)
mPressedView.getBackground() != null
if (mIsOverride) {   sb.append("\" !important;"); }  else {   sb.append("\";"); } 
t.run()
BLOCKED_ADDR_QUEUE.removeLast()
new ConcurrentHashMap<String,RootBeanDefinition>(64)
connection.setConnectTimeout(1)
ObjectAnimator.ofFloat(mView,"alpha",dimAlpha)
Double.toString(arr[doc])
node.has(Constants.ALIAS)
getObject()
getTimeout()
LOGGER.debug("Could not execute delete",ex)
layout.createFolder(BOTTOM_BOTTOM_LEFT,IPageLayout.BOTTOM,0.2f,FOLDER_NAVIGATION)
@Mock private HidProfile mHidProfile; 
Exception e
e instanceof IOException
new Server(port)
FileUtil.join(portalConfiguration,sourceSet.getRuntimeClasspath(),portalTestConfiguration)
getOriginalAmount().min(remainingAmount)
super((JFrame)null,JMeterUtils.getResString("search_tree_title"),true); 
logger.error(log)
log.error("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
new TestCaseGeneratorImpl(true)
selenium.isVisible("link=Control Panel")
renderer.filledRect(x + rect.x + settings.paddingX,y + rect.y + settings.paddingY,rect.width - settings.paddingX,rect.height - settings.paddingY)
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0))
log.error("Couldn't get resource: " + filename)
statistics.addPutTimeNano(System.nanoTime() - start)
DEBUG=true
type.set(other.getType())
type.getConstructor()
d instanceof WebPageDetail
dateFormatter.format(value)
twoNewMessages.await(60,TimeUnit.SECONDS)
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,prevDeviceState,newDeviceState)
InetAddress.getLocalHost()
new ConnectionError(sm.getString("http2Parser.processFrameHeaders.decodingFailed"),Http2Error.COMPRESSION_ERROR)
((AstridActivity)activity).getFragmentLayout() != AstridActivity.LAYOUT_SINGLE
mMediaRouter.addCallback(MediaRouter.ROUTE_TYPE_REMOTE_DISPLAY,mMediaRouterCallback)
mImm.hideStatusIcon(mToken)
fields != null
tracesFile.mkdirs()
DiagnosticType.error("JSC_TOO_MANY_TEMPLATE_PARAMS","{0}")
addDaysAndCheckForCompletion(1,NextEvent.PAYMENT_ERROR)
id.provider.info != null
mNavigationBarView.getPaddingStart()
((GroovyObject)receiver).getMetaClass() != metaClass
mappers.mapper().searchAnalyzer()
wlZipFilename.getText()
mDataAuthorities == null
WaypointDialogHelper.showWaypointsDialog(getMyApplication(),mapActivity)
mPtr != 0l
d.setHotspot(x,y)
myEditor.getBackroundColor()
selection.getAsFiles()
HashMap<String,String>
ActionsEnum.valueOf(action)
telephony.isRinging()
new StringBuilder(674)
query.getDimensionSpec().preservesOrdering()
verifyPosition(decoder,binary("232302004200000880316890202968001e02582d00000000000000050000320000018901920000001dc1e2001601081154255d0202005a0053875a00a57e5a00af80"))
JsonProcessingException ex
TelephonyManager.getDefault().getPhoneType()
resolve(type,false,false,true)
popupWindow.setWidth(menuWidth)
System.lineSeparator()
sliceInput.length()
BuildData buildData=getBuildData(); 
LISTEN_RADIO_POWER_STATE_CHANGED=0x00400000
dynamicDefines.hashCode()
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,0,1,1,1,1,1,1,3,3,3,3,3,3,3,5,5,3,2,3,1,1,3,3,1,1,0,4,3,3,5,5}
entry.rxBytes == 0 || entry.txBytes == 0
receiver.getOuterClass()
gatherDisableActionsLocked(userId)
TimeUtils.nanoTime()
HtmlUtil.escapeURL(_href)
_validatePropertyElement(propertyElement,filePath)
loaded.getLoaded().getConstructor()
mPrivateInput == null
onRotationLockChanged()
Event.PREFIX_TEMP + n
mEnterTransformation.printShortString(pw)
new KettleException("Couldn't find hop '" + from + "' to read from")
/**   * Returns the next pseudorandom  {@link ArrayValue} of local-time elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of local-time elements.  */ public ArrayValue nextLocalTimeArray(){   LocalTime[] array=nextLocalTimeArrayRaw(minArray(),maxArray());   return Values.localTimeArray(array); } 
LOG.isDebugEnabled()
ObjectAnimator.ofFloat(mView,"alpha",dimAlpha)
30 * 60 * 1000
JSONValue.parse(isr)
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
name == null
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
DataBufferUtils.read(channel,this.bufferFactory,4)
functionFactory.exp(iX)
boundary.startsWith("\"")
case 6: 
name.length() > 0
log.warn("Can't check auto-commit state",e)
id=14
hasFocus() && showClearButton && !TextUtils.isEmpty(getText())
CommonBundle.getErrorTitle()
log.warn("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
"".equals(callRingtone.canPlayType("audio/ogg;"))
tagService.getTagsAsString(task.getId())
mPulseCallback.onPulseFinished()
jdk.getHomeDirectory() == null
SC_FILE_SIZE_EXCEPTION=1003
selenium.isVisible("link=Control Panel")
assertEquals(12,beanCount)
CharSequence message
enabled=true
condition.isEmpty()
messageReference.equals(account.getUuid(),folder,uid)
mValues[7]
Log_OC.e(TAG,"onSaveInstanceState()")
si.deliveryCount > 0
String imageUrl
firstWakeup != null
@Nullable T value
into.get(i)
activityOptions.getAnimationType() == ActivityOptions.ANIM_SCENE_TRANSITION
new AtomicBoolean(false)
Utils.field(value,type)
person.getVoidReason()
field != null
rejectedPromise()
simpleRecyclerViewAdapter.insertLast("rand added item")
jobFinishHandler.onComplete(results)
mState != STATE_INITIALIZED
Trans == TRANSPOSE
log.info("In OSGi: using programmatically wired maven parser")
wordDetector.getEndOffset()
enter && hasWindowFocus() && isFocused()
parameters == null
endpoint.expectedMessageCount(1)
internedParseStringCharacters(text)
tnCount=100
/**   * {@inheritDoc}   */ @Override public void stop() throws IgniteCheckedException { } 
logger.warn("TuneIn service not found")
from > to
telephony.getNetworkTypeForSubscriber(subId)
busHandler.pushExpectedEvents(NextEvent.CHANGE,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
StringBuffer resultPath=new StringBuffer(DefaultGroovyMethods.join(config.getClasspath(),File.pathSeparator)); 
linkMode.getBuildMode()
mSite.getSpaceAvailable()
mPathParameterMap != null
mEditText.setText(mValue)
Math.max(DataModule.DISK_CACHE_SIZE,Integer.MAX_VALUE)
Boolean.valueOf(context.getInitParameter(VALIDATE))
(1L << n)
registerError(expression)
mouse().clickAt(0,0)
methodName.equals("scan")
mGpsListener != null
new AlertDialog.Builder(mContext).setMessage(R.string.error_disable_esim_msg).setTitle(R.string.error_disable_esim_title).setCancelable(false).setNeutralButton(R.string.ok,null)
DEBUG=true
batteryVp >= high
createHalf(buffer.length(),init,workspace)
analysis.getType(aggregate)
cacheFb.setMaxElementsInMemory(5)
getTimeout()
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0)
context.getPackageName()
mAttributes.getFlags()
OrderedMap.class
assertThat(messages).isNotNull().isNotEmpty().hasSize(51)
processExistingType(resolveType,processor,state)
setTimeToLiveSeconds(Long.valueOf((String)cacheSettings.get("timeToIdleSeconds")).longValue())
counter >= max
e.getMessage()
!isSeekable()
a.getInteracting().equals(a)
size * 1.75f
DensityUtil.convertPixelsToDp(100,this)
volume.getType() == VolumeInfo.TYPE_PUBLIC
Object audioData
FastMath.max(origin,num.floatValue())
this.saveTotalNetWeight(0L)
stores.contains(name)
new LinkedList<ReleaseStep>()
Trans == TRANSPOSE
realm.assertThread()
PaginationTestUtil.of(10,1)
assertTrue(true)
"Error Log is full, consider increasing " + ERROR_BUFFER_LENGTH
mWidth <= 0
PendingIntent.getBroadcast(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
new StringBuilder(246)
sysPs != null
UURIFactory.getInstance(attrValue)
docDisplay_.getFileType().isRmd()
r.thread != null
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
/**   * Returns a wrapper around  {@code ciphertextDestination}, such that any read-operation via the wrapper results in AEAD-decryption of the underlying ciphertext, using  {@code additionalData}as additional authenticated data. <p>The returned InputStream may support  {@code mark()}/ {@code reset()}, but does not have to do it --  {@code markSupported()} provides the corresponding info.<p>The returned InputStream supports  {@code skip()}, yet possibly in an inefficient way, i.e. by reading a sequence of blocks until the desired position. If a more efficient  {@code skip()}-functionality is needed, the Channel-based API can be used.  */ OutputStream newEncryptingStream(OutputStream ciphertextDestination,byte[] associatedData) throws GeneralSecurityException, IOException ; 
parent.setCoordinateIndex(0)
trade.getType().equals("buy")
myTempDir.getCanonicalPath()
i=0
mService.disableNetwork(netId)
UIMODE_SERVICE.equals(name)
m.isCacheValue()
isGreaterOrEqual(platformVersion,MNC)
mContext.startActivity(intent)
mResourceData[i] != null
id=15866
support.isFlexUnit1SuiteSubclass(aClass)
Error err
DBG=true
(status & 0x00010000) > 0
public class XpathRegressionMultipleVariableDeclarationsTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=MultipleVariableDeclarationsCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionMultipleVariableDeclarationOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(MultipleVariableDeclarationsCheck.class);     final String[] expectedViolation={"4:5: " + getCheckMessage(MultipleVariableDeclarationsCheck.class,MultipleVariableDeclarationsCheck.MSG_MULTIPLE_COMMA)};     final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='i']/TYPE/LITERAL_INT","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationOne']/OBJBLOCK" + "/VARIABLE_DEF[@text='j']/TYPE/LITERAL_INT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=MultipleVariableDeclarationsCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionMultipleVariableDeclarationTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(MultipleVariableDeclarationsCheck.class);     final String[] expectedViolation={"4:5: " + getCheckMessage(MultipleVariableDeclarationsCheck.class,MultipleVariableDeclarationsCheck.MSG_MULTIPLE)};     final List<String> expectedXpathQueries=Arrays.asList("/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/MODIFIERS","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/TYPE","/CLASS_DEF[@text='SuppressionXpathRegressionMultipleVariableDeclarationTwo']/OBJBLOCK" + "/VARIABLE_DEF[@text='i1']/TYPE/LITERAL_INT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
config.memory
request.getServletPath()
assertThat(pod).hasId(expectedId)
new ConstantTopologyChangeWorker()
Modifier.isStatic(field.getModifiers())
onlyEnabled
ItemStack.func_77970_a(stack,result)
getConnectionAddOperation(name,outboundSocketBindingRef,address)
new ModelNode().set(1)
new CircularClipper(mDetail)
Date tillId
dest.writeLong(mSubId)
mSyncStatus.get(i)
Debug.log(msg,args)
createMigrationProfile(managerEx,null)
asList(CUBRID,DERBY,FIREBIRD,ORACLE,SQLSERVER,SYBASE)
Thread.sleep(5000)
Long.valueOf(id)
Thread.sleep(1200)
logger.error("Error while matching regex [" + matcher + "] for string ["+ matched+ "] "+ pse.getMessage())
selenium.isVisible("link=Control Panel")
protected abstract SELF getThis(); 
structuralLock.isLocked()
buildFullCategoryHierarchy(document,cache,categoryId)
mCurrentReactContext.runOnUiBackgroundQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(),new File("idea/idea-completion/testData/handlers/basic/staticMembers"),Pattern.compile("^(.+)\\.kt$"),true)
g.events().stopLocalListen(lsnr,EventType.EVT_NODE_LEFT)
JournalArticleLocalServiceUtil.addArticle(TestPropsValues.getUserId(),groupId,JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID,JournalArticleConstants.CLASSNAME_ID_DEFAULT,0,StringPool.BLANK,true,JournalArticleConstants.VERSION_DEFAULT,titleMap,descriptionMap,content,"general",ddmStructure.getStructureKey(),ddmTemplate.getTemplateKey(),null,displayDateCalendar.get(Calendar.MONTH),displayDateCalendar.get(Calendar.DAY_OF_MONTH),displayDateCalendar.get(Calendar.YEAR),displayDateCalendar.get(Calendar.HOUR_OF_DAY),displayDateCalendar.get(Calendar.MINUTE),0,0,0,0,0,true,0,0,0,0,0,true,true,false,null,null,null,null,serviceContext)
allowedIdentifiersCheckDigits[i]
selenium.isVisible("link=Control Panel")
pk.getColumnName()
ONE_MINUS_DST_ALPA(7)
Optional.of(resourceManagementScheduler)
new ScheduledJob(job,jobName,period)
RegexCompiler.class
ast.atnState != null
builder.addAddress(vpn6,64)
new LayerView(this,0xff0000ff)
IBackupManagerService svc=mService; 
telephonyService.getDeviceId()
BLANK_LINES_AROUND_METHOD_IN_INTERFACE=0
new HashSet<>()
NotificationColorUtil.calculateContrast(backgroundColor,foregroundColor)
m.getSize()
BufferUtil.zeroBuffer(8)
Component component
enabled=false
type.getConstructor()
conf.getSearchBaseURL()
entry.rxPackets == 0 || entry.txPackets == 0
new SpannedString(new CustomSpannable(first),false)
EntityCacheUtil.putResult(TypeModelImpl.ENTITY_CACHE_ENABLED,TypeImpl.class,type.getPrimaryKey(),type,false)
dim.containsKey(filterKey)
xam.getStudentNumber()
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_CONF))
pdf.getName()
assertFalse(runtimeOptions.isMonochrome())
mValues[7]
type.getConstructor()
Exception e
DEBUG=true
findDelegate(name)
AssetTagFinderUtil.filterCountByG_N(_scopeGroup.getGroupId(),assetTagName)
json.length() - 2
project == null
Double.valueOf(param.getValue())
stateAfter() == null
mJobs.get(i)
android.provider.Downloads.Impl.isStatusCompleted(statusCode)
_typeSettingsProperties.toSortedString()
new ConcurrentHashMap<String,InjectionMetadata>(64)
appOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
Cli.buildCli("presto",Runnable.class).withDefaultCommand(Server.class).withCommand(Server.class).withCommand(Execute.class).withCommand(Console.class).withCommands(Help.class)
(options & ActionBar.DISPLAY_HOME_AS_UP) != 0 ? VISIBLE : INVISIBLE
Assert.assertFalse(rule.appliesTo(builder.interval(new Interval("0500-01-01/2100-12-31")).build(),now))
isHandshaking(clientResult) && isHandshaking(serverResult)
this == NtiOnly
size=500
constraint.hasFilter()
n.intValue()
new UnsupportedOperationException()
4 * width * height
rt != null
logger.error("moveToStep[" + policy + "] ["+ index.getName()+ "]"+ currentStepKey+ " -> "+ nextStepKey)
new ConcurrentHashMap<Class<?>,Boolean>(64)
logMinimal(message)
result.expectedMessageCount(1)
getResultHandler(result).handleResult(exchange,result).switchOnError(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult -> getResultHandler(exceptionResult).handleResult(exchange,exceptionResult)))
annotation.authenticationType()
LOG.info("Creating short circuit input stream for block {} @ {}",blockId,address)
gatherDisableActionsLocked(userId)
Thread.sleep(5000)
"com.google.android.talk".equals(callingPackage) || "com.google.android.quicksearchbox".equals(callingPackage)
whitelist.addTags("span","hr","kbd","samp","tt","del","s","strike","u")
nodeColumn.getIndex()
mResourceData[i] != null
parentFile.exists()
new CircularImportProblem(configClass,this.importStack)
Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage("helloForNone"))
new IllegalStateException()
index > 0
requestHeaderRegex == null
assertEquals("Range for response status value " + result.getResponse().getStatus(),getHttpStatusSeries(result),HttpStatus.Series.REDIRECTION)
new PushNotificationReceiveJob()
Long.toOctalString(localExpire)
lastUpdate.after(updated)
getPreferences().getBoolean(DEBUG_PREF,true)
internalCallContextFactory.createInternalCallContext(context)
lastCompletedOffset != lastCompletedOffset
mBluetoothLock.readLock().lock()
getTestName(false)
selenium.isVisible("link=Control Panel")
AbstractMethodError e
TRANSPORT_TRACE=true
testStatus.equals("PASSED") || testStatus.equals("SKIPPED")
@OutputDirectory
transaction.commit()
writeRepeatedFixed64(id,val)
(Long)123l
Configuration.getLong(PropertyKey.USER_FILE_WAITCOMPLETED_POLL_MS)
si.deliveryCount > 0
new IllegalArgumentException("Return type " + returnType + " does not match result "+ result.getClass())
AeadFactory.class
basicDLTest_Regression("./smalldata/gbm_test/alphabet_cattest.csv","alphabetRegression.hex",new PrepData(){   @Override int prep(  Frame fr){     return fr.find("y");   } } ,10,9.298463401470183E-6,DeepLearningParameters.Activation.Rectifier)
eq(PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS)
enabled=false
mCurrentVrService == null
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
return false; 
config.getOrcMaxBufferSize()
now.plusDays(3).toDateMidnight()
get(entry.getKey())
getActiveFgCall().getPhone().sendDtmf(c)
id.provider.info != null
routerFunction.route(request).defaultIfEmpty(notFound()).flatMap(handlerFunction -> wrapException(() -> handlerFunction.handle(request))).flatMap(response -> wrapException(() -> response.writeTo(exchange,strategies))).otherwise(ResponseStatusException.class,ex -> {   exchange.getResponse().setStatusCode(ex.getStatus());   if (ex.getMessage() != null) {     logger.error(ex.getMessage());   }   return Mono.empty(); } )
block.localsLiveIn.xor(block.localsLiveKill)
mPulseCallback.onPulseFinished()
log.info(sm.getString("contextConfig.role.link",link))
lc + pb
create.fetch(meta().getSchemas())
mJobs.get(i)
SKELETONS_VERSION=3
textRange.getEndOffset() < ref.length()
model.getConfig()
service.getId().equals(PublicizeConstants.GOOGLE_PLUS_ID) || mShouldHideGPlus
i > 0
Math.sin(Math.PI / 8)
GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
new ColorUIResource(0xFFCB6B)
ExportImportConfigurationParameterMapFactoryUtil.buildParameterMap()
c.getWidth()
specBuilder.setDigests(KeyProperties.DIGEST_NONE,KeyProperties.DIGEST_MD5,KeyProperties.DIGEST_SHA1,KeyProperties.DIGEST_SHA224,KeyProperties.DIGEST_SHA256,KeyProperties.DIGEST_SHA384,KeyProperties.DIGEST_SHA512)
score > 1
resources.getDimension(R.dimen.close_handle_height)
return 3337733202L; 
v2.getString()
meta.getEncoding()
tags != null
/**   * Theater of Blood reward chest inventory (Raids 2)  */ THEATRE_OF_BLOOD_CHEST(10)
data != null
T
!debugProcess.isDetached()
Math.abs(f) > 65520
reviewer.putExtra("deckFilename",deckFilename)
getNumberOfJournalFiles() <= 3
selenium.isVisible("link=Control Panel")
V2=false
distanceToView(focused) > 0
@Override public final DivideBy or(Condition c){   condition.addConditions(Operator.OR,c);   return this; } 
client.getWebSocket()
createRenderScript(false)
new SessionParams(layoutParser,RenderingMode.NORMAL,null,configGenerator.getHardwareConfig(),resourceResolver,layoutLibCallback,0,21,getLayoutLog())
getColors(which,TYPE_NORMAL)
DefaultCacheKeysFactory.getNaturalIdValues(cacheKey)
mAttributes.getFlags()
baseKey.plus(addedBucketsLeft * interval)
getTypeDescription(exceptionType)
LOG.error("Cannot resolve the host name for " + regionAddress + " because of "+ e)
_train.remove(_parms._offset_column)
state.mTint != null
sendMessage(CMD_STOP_AP)
(PyReferenceExpression)expression
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
DateFormat.getDateFormat(context)
telephony.isOffhook()
new Path(tblDesc.getLocation())
request.getTaskDefinitionKey()
Throwable e
mWM.removeView(mView)
event.getTime() > currentPlayTime
Assert.assertEquals(20,Context.getAdministrationService().getAllGlobalProperties().size())
super.addPage(userId,nodeId,redirectTitle,content,summary,minorEdit,serviceContext)
mMenuDrawer.isShown()
mContext.sendStickyBroadcast(mStorageFullIntent)
br != null
mActiveStreamType == -1
TargetMinSubTotal=3000
checkPojoMetaClass()
standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))
4 * width * height
Key<Integer>
from >= to
typeSettingsProperties.toString()
getName()
oldOverride.removeParameter("enabled")
nlDataOutNodes != null & nlDataOutNodes.getLength() > 0
Configuration.getLong(PropertyKey.USER_FILE_LOAD_TTL)
mBiometricUnlock.stopAndShowBackup()
V
assetDisplayPageEntry.getLayoutId()
setBuffer(Type.Index,3,new short[]{0,1})
activeFrom.getTime()
blackHoleGenerator.getConstructor()
selenium.isVisible("link=Control Panel")
XContentType.JSON.restContentType()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false,policy)
@SmallTest
invoiceDao.create(invoice,1,context)
Network.connectToServer(TestChatServer.NAME,TestChatServer.VERSION,host,TestChatServer.PORT,TestChatServer.PORT + 1)
callTimeoutMillis=1000
id == null
whitelist.addAttributes("img","alt","height","src","title","width")
connection.setFollowRedirects(httpRequest.getFollowRedirects())
partStore.finishLoad()
Trans == TRANSPOSE
timeout < 0
Utils.writeFile(parentDir.getAbsolutePath(),FILE_NAME,xmlBuffer.toXML())
JDBCUtils.safeGetBoolean(dbResult,"COLUMN_IS_NULLABLE")
BorrowablePath.borrowablePath(output.getUnchecked())
selenium.isVisible("link=Control Panel")
constructor.newInstance(conf,keyPrefix,options,writer,fs)
mapper.getTypeFactory().uncheckedSimpleType(InspectContainerResponse.class)
GetterUtil.getString(serviceReference.getProperty("javax.portlet.description"),portletModel.getPortletId())
Math.abs(oldDist - dist) > 10
quoineTicker.getLastPrice24h()
request.getServletPath()
i++
MethodConstant.of(instrumentedMethod.asDefined())
Build.VERSION.SDK_INT > Build.VERSION_CODES.M
loaded.getLoaded().getConstructor()
origin.absoluteValue().doubleValue() > complexNumber.absoluteValue().doubleValue()
mAdapter == null
state == null
POSITVE_X(0)
display.getMetrics(dm)
DBG=true
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,policy)
!vm.canGetInstanceInfo()
display.getMetrics(mDisplayMetrics)
mService.stopLocalOnlyHotspot()
declaringClass.getName()
processInstanceArray.size() == 0
loaded.getLoaded().getConstructor()
ArrayUtil.contains(childCalendarIds,childCalendarBooking.getCalendarId())
camelContext.getComponent(component)
new DataRow(key,val,ver,p,expireTime)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
new IndexWriter(indexStore,new SimpleAnalyzer(),true)
Validator.isNull(portletResource)
field.getFieldName().equals(s)
getType()
accountHandle.getComponentName().toString()
@Priority(500)
FRAME_STATS_COUNT=14
new Paint()
createRecord(value,expiryTime)
getStepIOMeta().getTargetStreams()
serializer.serializeForInsert(metadata,entity,columns,values,subQuery)
assertThat(targetConnectionCount).isGreaterThanOrEqualTo(goodServerStats.getTotalRequestsCount())
MBTestUtil.addMessage(serviceContext.getScopeGroupId(),getSearchKeywords(),approved,serviceContext)
Assert.assertEquals(permissionEntity.getOptionalFields().size(),2)
out.writeLong(sampleCount)
@Override public ResponseImpl example(String type,Object example){   throw new RuntimeException("Not implemented"); } 
public TokenStream create(TokenStream input){   return new ArabicNormalizationFilter(input); } 
targetInfo != null
c == Integer.class
reader.getString(reader.readSmallUint(protoIdItemOffset + RETURN_TYPE_OFFSET))
StateManagementUtils.createClearForkedExecutionMojoBinding()
ofSeconds(1)
this.nameMapping
!mIsRecentsShown || mIsPipFocusedInRecent
String.format("%-15s: -",user)
id=19905
isBigDecCategory(typeRe)
artifactFilter == null
RuntimeException e
searchUICore.getSearchSettings().setEmptyQueryAllowed(true).setAddressSearch(true).setSortByName(true)
completion.otherwise(ex -> handler.handle(exchange,ex))
buf.getByte(buf.readerIndex() + 2)
/**   * Sender node ID.   */ private final UUID sndNodeId; 
bb.get() == EQUALS_BYTE
timeToLive >= 0
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
cursor != null
StatsLog.write(StatsLog.ANR_OCCURRED,app.uid,app.processName,activity == null ? "unknown" : activity.shortComponentName,annotation)
addTexture(diffuse,"NormalMap",keyName)
new IllegalArgumentException()
StringUtil.toString(extensionArray)
fieldType instanceof PsiPrimitiveType
Math.round(ratio * 1000) / 1000
final PkgControl root=ImportControlLoader.load(new File(getPath("import-control_complete.xml")).toURI()); 
mPointRealContainerLl.getChildAt(i).setEnabled(i == newCurrentPoint)
m.getCurrentJobWaitTime()
m.getClass()
new GridBag().setDefaultInsets(new Insets(0,0,DEFAULT_VGAP,DEFAULT_HGAP)).setDefaultWeightX(1).setDefaultWeightY(0.1)
odi.release()
IOUtils.closeQuitely(is)
selenium.isVisible("link=Control Panel")
found=true
serialVersionUID=273958484
Log.e(TAG,"readStaticField(SYSTEM_SERVICE_MAP) from %s fail",e,baseContext.getClass())
is("/home/source")
row.size() == 0
Node beginNode=block.getBeginNode(); 
proxyRequest.getEnvironment()
mMessageList.getId()
mGpsListener != null
bottomLeft.addView(DatabaseBrowserView.VIEW_ID)
changeAffiliationByOwner(jids,"owner")
assertEquals(12,beanCount)
Slog.wtf(TAG,"APK " + fileName + " has compressed dex code "+ entry.getName())
LOG.isDebugEnabled()
xam.getStudentNumber()
popupWindow.setWidth(menuWidth)
columnSums.mean(1)
getChatWritePanel().getEditorPane().requestFocus()
logger.error("Cannot parse " + str + " using 0 minutes")
mAuthorities.get(i)
new AlphaNode(context.getNextId(),(AlphaNodeFieldConstraint)constraint,context.getObjectSource())
preparedStatement.setCharacterStream(paramIndex,tmpReader)
mController.setRingerMode(AudioManager.RINGER_MODE_VIBRATE,true)
formatter.printHelp()
HttpClient.create().compress()
selenium.isVisible("link=Control Panel")
new Integer(31)
new StringBundler(6)
vehicleControl.attachDebugShape(SceneApplication.getApplication().getAssetManager())
"Unknown id: " + mCurMethodId
Math.min(leftLen,rightLen)
tw.release()
telephony.getLteOnCdmaModeForSubscriber(subId)
assertEquals(70011,exchange.getIn().getBody().toString().length())
setNumber(String.valueOf(integerPart))
new InputStreamReader(f)
nestedIA.setContext(context)
new ContextName(name)
DLFileEntryTypeFinderUtil.countByKeywords(_group.getCompanyId(),new long[]{_group.getGroupId()},StringPool.BLANK,true)
assertEquals(12,beanCount)
ex.getMessage()
limitRows <= 0
requestCode == LegacyEditorFragment.ACTIVITY_REQUEST_CODE_CREATE_LINK
Boolean.valueOf(attrValue)
Simple.of(value.getClass())
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
groupType == null
assertEquals("Two samples should have been collected",2,samples.size())
InputMethodManager.getInstance(mTargetActivity)
@ConditionalOnEnablednHealthIndicator("mail")
new GetExecutionVariableInstancesCmd(executionId,variableNames,false,locale,withLocalizationFallback)
target != null
ps.createRelationship(rel)
headers.setValue("Vary")
selenium.isVisible("link=Control Panel")
Thread.sleep(5000)
ServiceAuthorizationManager.refresh(conf,new HBasePolicyProvider())
iconSize * DisplayMetrics.DENSITY_HIGH > availableHeight
toPreProcess.getFeatures().muli(maxRange - minRange + Nd4j.EPS_THRESHOLD)
(Publication)resourceByRegIdMap.get(registrationId)
@Override public ModelMetricsBinomialV3 fillFromImpl(ModelMetricsBinomial modelMetrics){   super.fillFromImpl(modelMetrics);   r2=modelMetrics.r2();   logloss=modelMetrics._logloss;   AUC2 auc=modelMetrics._auc;   if (null != auc) {     AUC=auc._auc;     Gini=auc._gini;     String[] thresholds=new String[auc._nBins];     for (int i=0; i < auc._nBins; i++)     thresholds[i]=Double.toString(auc._ths[i]);     AUC2.ThresholdCriterion crits[]=AUC2.ThresholdCriterion.VALUES;     String[] colHeaders=new String[crits.length + 2];     String[] colHeadersMax=new String[7];     String[] types=new String[crits.length + 2];     String[] formats=new String[crits.length + 2];     colHeaders[0]="Threshold";     types[0]="double";     formats[0]="%f";     int i;     for (i=0; i < crits.length; i++) {       if (colHeadersMax.length > i)       colHeadersMax[i]="max " + crits[i].toString();       colHeaders[i + 1]=crits[i].toString();       types[i + 1]=crits[i]._isInt ? "long" : "double";       formats[i + 1]=crits[i]._isInt ? "%d" : "%f";     }     colHeaders[i + 1]="idx";     types[i + 1]="int";     formats[i + 1]="%d";     TwoDimTable thresholdsByMetrics=new TwoDimTable("Metrics for Thresholds","Binomial metrics as a function of classification thresholds",new String[auc._nBins],colHeaders,types,formats,null);     for (i=0; i < auc._nBins; i++) {       int j=0;       thresholdsByMetrics.set(i,j,thresholds[i]);       for (j=0; j < crits.length; j++) {         double d=crits[j].exec(auc,i);         thresholdsByMetrics.set(i,1 + j,crits[j]._isInt ? (Object)((long)d) : d);       }       thresholdsByMetrics.set(i,1 + j,i);     }     this.thresholds_and_metric_scores=new TwoDimTableV3().fillFromImpl(thresholdsByMetrics);     TwoDimTable maxMetrics=new TwoDimTable("Maximum Metrics","Maximum metrics at their respective thresholds",colHeadersMax,new String[]{"Threshold","Value","idx"},new String[]{"double","double","long"},new String[]{"%f","%f","%d"},"Metric");     for (i=0; i < colHeadersMax.length; i++) {       int idx=crits[i].max_criterion_idx(auc);       maxMetrics.set(i,0,idx == -1 ? Double.NaN : auc._ths[idx]);       maxMetrics.set(i,1,idx == -1 ? Double.NaN : crits[i].exec(auc,idx));       maxMetrics.set(i,2,idx);     }     max_criteria_and_metric_scores=new TwoDimTableV3().fillFromImpl(maxMetrics);   }   return this; } 
mTmpRect.height() > 0
new RuntimeException(e.getMessage())
parent.currentContext()
statement.execute(sql,Statement.RETURN_GENERATED_KEYS)
cbWhitelistExtra1.isChecked()
chargeUAh > 0
Status.constructStatuses(get(getBaseURL() + "statuses/friends_timeline.json",true))
new RuntimeException()
mPhone.getContext().enforceCallingPermission("android.permission.SEND_SMS","Sending SMS message")
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
new StringBuilder(239)
((Number)s.first()).intValue()
ColorResources.getColor("primaryControlShadow")
revWalk.release()
new ChangesBrowser(project,null,Collections.<Change>emptyList(),null,false,true,null,ChangesBrowser.MyUseCase.LOCAL_CHANGES,null)
tag_names.getIdAsync("dc")
customerResourceLocator(url)
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
singleBccRecipientFromAccount
new NotSupportedException()
mHidProfile.isProfileReady()
friendlyURL.startsWith(layout.getFriendlyURL(locale))
return self; 
!mDreamsEnabledByDefaultConfig
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
ufsPath.getPath()
new DefaultMemoryManager(totalMemory,numSlots,pageSize)
legacyModel.isDefined()
usage.getInit()
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range(refElement)).description(message)
PsiTreeUtil.getParentOfType(element,PyRaiseStatement.class) != null
toArrayHelper(1)
type instanceof PsiClassReferenceType
mMccMncs != null
_ddmStructureLocalService.getStructure(structureId)
TestPackage.getFoo("")
Preconditions.checkNotNull(blockWorker)
result == JOptionPane.CANCEL_OPTION
fluidStack != null
gauge == null
SkuTranslationImpl.class
Ticket.class
"GET".equals(httpMethod)
expandableView.getActualHeight()
Character.isJavaIdentifierPart(c)
MapActivity.launchMapActivityMoveToTop(act)
selenium.isVisible("link=Control Panel")
@XmlAttribute(name="miterlimit") protected BigDecimal miterlimit; 
page.getSizeInBytes()
mService.oneTouchPlay(getCallbackWrapper(callback))
Log.wtf(TAG,"This will become an error",ex)
m.getClass()
Timber.e("Cannot remove EXPUNGEd messages",e)
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) == 0
Simple.of(type)
mContext.startActivity(intent)
!isFullyCollapsed() && !mTracking
mapper.seAttributePrefix("")
b & 0xFF
selenium.isVisible("link=Control Panel")
isMoving
Integer.valueOf(stackIdStr)
collectionsTypeName == null
/**   * {@inheritDoc}  */ public Comparable getFrom(){   return Integer.valueOf(from); } 
FUNC_CODE_DEBUG_LOC
Log.e(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level+ " isActiveNetwork "+ isActiveNetwork)
super(0); 
m.get(InputStream.class)
cluster.getRexBuilder().makeCall(calciteOp,childRexNodeLst)
agg.setBatchTimeout(1000L)
ObjectLoadException e
rw.release()
assertThat(stack.selectChangelog("ISSUE-1")).isNull()
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
c > 0
script.getBytes()
n.intValue()
mHwSession.getConfigFlag(flag,(int result,boolean value) -> {   halResult.value=result;   flagState.value=value; } )
LOG.error("Error in response for blockId: " + recvMsg.getBlockId() + " message: "+ recvMsg.getStatus().getMessage())
selenium.isVisible("link=Control Panel")
mWM.isKeyguardSecure()
new StaticStringValuesReferenceProvider(false,"input","button","image")
mStartActivity.task == null
value + value + MINIMUM_BACKLIGHT
dbManager.getDynamicPropertiesStore().saveAllowSameTokenName(0)
this.mTitle.compareTo(another.mTitle)
Math.min(clientCount,1)
assertEquals(dataFileStream.getMetaString("avro.codec"),"deflate")
!mTextServicesManager.isSpellCheckerEnabled()
loaded.getLoaded().getConstructor()
assertMockEndpointsSatisifed()
column.getLocalDeletionTime() > gcBefore
builder120.build()
adminPreferences.getBoolean(AdminPreferencesActivity.KEY_SELECT_SPLASH_SCREEN,false)
userImpFactor.add(userFactors.row(userIdx,false))
Thread.sleep(5000)
isBetween(11000,12000,alt.getDistance())
synchronized (classCache) {   return (Class)classCache.get(name); } 
project.getSourceDirs()
closing.get()
headers.getMessageType()
new Configuration(true,true,Predicates.<NamespaceDescriptor>alwaysTrue())
new GroovyScriptDescriptor(this,scriptClass)
url.lastIndexOf(';')
startingWindow != null
new OverflowPanelViewHelper(mContext)
results.put("results",jsonObject)
new SortedList<>(entriesViewModel)
conceptToValidate.getConceptId()
vals.length != _len
lp.type == WindowManager.LayoutParams.TYPE_STATUS_BAR_PANEL
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY())
private static final SimpleDateFormat DATE_FORMAT=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX"); 
new FocusResultState(lockSuceeded,needsExposureMeasurement)
response.setHeader(WWW_AUTHENTICATE,value)
onDetachedFromWindows()
Class.forName(className)
i=4
childrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
windowToken != null
ColorResources.getColor("textColor")
columnType.equalsIgnoreCase("long")
fs.move(file,new File(file.getParent(),newName))
!dockOntopOrLeft
String url
GL20.glUniform1(location,v)
inOrder.verify(mockAwareService).subscribe(eq(clientId),eq(subscribeConfig),any())
Nd4j.zeros(1,size,1)
lock.isLocked()
refreshInterval=10 * 1000
j != parameters.size()
serviceInfo.getRequiredServices() == null
StringBuffer buffer=new StringBuffer(strings[i]); 
matrix.apply(transform)
new ArrayList<>(4)
mNavigationBarView.getPaddingStart()
new RuntimeConfigurationError("No attest runner found in selected interpreter")
getScheduledThreadPoolExecutor().scheduleAtFixedRate(new Runnable(){   public void run(){     cleanup();   } } ,cleanupPeriod,cleanupPeriod,TimeUnit.MILLISECONDS)
return CTR; 
row.setBackground(getResources().getDrawable(R.drawable.comment_pending_bg_selector))
assertEquals(8,config.getMapConfigs().size())
this.evaluator.prepareLeftObject(handle)
t.equals(type)
mCameraUser.submitRequest(request,true)
BufferUtils.freeMemory(bytebuffer)
findAndRemove(query,null,collectionName)
UserHandle.getUserHandleForUid(mDeviceProvisionedController.getCurrentUser())
new IllegalAccessError("read-only")
chatPanel.getChatStatusIcon()
System.out.println("")
width / 2
attributes.getFlags()
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
config.getMaxQueryMemoryPerNode().toBytes() < maxMemory.toBytes()
MeasureSpec.makeMeasureSpec(MeasureSpec.EXACTLY,myHeight)
synchronized (classCache) {   return (Class)classCache.get(name); } 
IBackupManagerService svc=mService; 
LOGGER.debug("Could not execute delete",ex)
exception.toString()
vCard.getTextTrim()
mAutoScroller.autoScroll(-mHeaderOffset,mSwipingToRefreshToDefaultScrollingDuration)
Object[]
fragUtils.getClass()
spellParser.isFinished()
this.getDependencies()
height / 2
new IllegalArgumentException("Legacy advertising can't include TX power level in header")
log.logError(BaseMessages.getString(PKG,"JobUnZip.Error.Label"),BaseMessages.getString(PKG,"JobUnZip.TargetFolderNotFound.Label"))
graphModel.getGraph().getEdgeCount()
StringBuffer sb=new StringBuffer(); 
mEncoder.swithToSoftEncoder()
i < 10
counter >= max
loaded.getLoaded().getConstructor()
layout.setVisibility(View.VISIBLE)
getKey(companyId,repositoryId)
new Notification(StatusBarTest.this,R.drawable.stat_sys_phone,"Incoming call from: Imperious Leader",System.currentTimeMillis() - (1000 * 60 * 60* 24),"Imperious Leader","(888) 555-5038",null)
queryMixin.leftJoin(target)
attr.lookupNamespaceURI(nodeName)
ref.getAssociatedEntity()
Settings.Secure.putStringForUser(cr,ownerInfo,"",userId)
amount.precision()
server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)
binary.getName()
plugin.getWorldEdit().handleArmSwing(localPlayer)
delta < 5000
next.getLabels().columns()
mService.mHandler.obtainMessage(MSG_SYSTEM_UNLOCK_USER,userHandle)
_validation_metrics.auc().maxF1()
sceneRoot.setTag(com.android.internal.R.id.scene_layoutid_cache,scenes)
coreThreads.asString()
new PaymentApiException(ErrorCode.PAYMENT_PLUGIN_EXCEPTION,e.getErrorMessage())
getLocationEnabled()
new IllegalArgumentException()
client != null & client.autofillClientIsFillUiShowing()
serverSocket.setReuseAddress(false)
new FlywayException("Unable to instantiate class: " + clazz)
new Paint(Paint.ANTI_ALIAS_FLAG)
mImageSize == MediaSettingsImageSize.FULL
/**   * [Sa * Da, Sc * Dc]   */ MULTIPLY(14)
context.formatSeparator()
origin > other
return 0l; 
assertEmpty(errors)
type.getConstructor()
runelite.getEventBus().unregister(logger)
new IndexWriter(dir3,anlzr,false)
Nd4j.dataType()
new MissingPropertyException(name,Binding.class)
myStoredLength > 2048
Exception e
si.intent == null
call != null
i=0
Math.abs(path.getDistance() - tmpDist) > 3
getServiceGuarded().importMultimediaMessage(callingPkg,pdu,messageId,timestampSecs,seen,read)
StringUtils.isEmpty(runtime.getRuntimeError())
counter >= max
selenium.isVisible("link=Control Panel")
destroyPools()
samlServletDeployment(SalesPostAutodetectServlet.DEPLOYMENT_NAME,SendUsernameServlet.class)
LOGGER.warning(e.toString())
synchronized (point) {   points.add(point);   int size=points.size();   if (size > MAX_RESULT_POINTS) {     points.subList(0,size - MAX_RESULT_POINTS / 2).clear();   } } 
_sharingEntryService.addSharingEntry(user.getUserId(),classNameId,classPK,themeDisplay.getScopeGroupId(),shareable,sharingEntryPermissionDisplayActionKey.getSharingEntryActionKeys(),expirationDate,serviceContext)
holder.setVisible(getLoadFailViewId(),visible)
mThumbPosition <= getThumbScrollRange() / 2
out.writeObject(duration)
getter.getRawReturnType()
(LinearLayout)findViewById(R.id.flashcard)
logger.info("The GENA Subscription for serviceID {} is established for device {}",sub.getService().getServiceId(),sub.getService().getDevice())
name="org.jboss.as.test.integration.ee.datasourcedefinition.DataSourceBean/dataSource3"
from >= to
BeforeAfterTester t=new BeforeAfterTester(new DisconnectionBehavior(h2,h1),new MultiCallBuilder(h2)); 
mapper.writeValueAsString(segment)
nai.networkCapabilities.satisfiedByNetworkCapabilities(networkCapabilities)
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=5
selenium.isVisible("link=Control Panel")
DEFAULT_TETHER_OFFLOAD_DISABLED=0
config.enterpriseConfig != null
ZException e
logger.debug("Updating the serviceUrls as they seem to have changed from {} to {} ",Arrays.toString(eurekaServiceUrls.get().toArray()),Arrays.toString(serviceUrlList.toArray()))
mResourceData[i] != null
printSelect(unionSelect.left(),sb)
Assert.assertEquals(7,clients.size())
whiteSpaceAfterEnd >> 1
timeDifferenceMilliseconds > maxTolerateTimeDifferenceMilliseconds
new PrestoException(INVALID_CAST_ARGUMENT,e)
getTestName(false)
new StreamTaskException(exceptionMessage)
selenium.isVisible("link=Control Panel")
synchronized (this) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
f1.getPanelDisplayName().compareTo(f2.getPanelDisplayName())
new ReactorHttpServer()
work > 0
command.next(answerForm)
Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN_MR1
new Random()
upload1.getUploadEndTimestamp() == 0
globalExecutionStats.getSplits()
data != null
Log_OC.e(TAG,"onSaveInstanceState() start")
new EqualsWithEps(arrayX,arrayY)
verify(mWifiService).stopLocalOnlyHotspot(TEST_PACKAGE_NAME)
args == null
indexOutURI.getPath()
!process.willAutoInsert(AutoCompletionPolicy.SETTINGS_DEPENDENT,result.getPrefixMatcher())
tablelist == null
this.getStyleClass().setAll("document-viewer")
file.getInputStream()
VerificationResult.withCount(2)
getSupportFragmentManager().beginTransaction().add(R.id.fragmentContainer,new FirstUsageWelcomeFragment(),FirstUsageWelcomeFragment.TAG).commit()
FinderCacheImpl.class
verify(connection,exception,error)
Exception ex
popup.showInFocusCenter()
LocalFileSystem.getInstance().refreshAndFindFileByIoFile(lib)
_jsonWebServiceServiceAction.getJSON(null,null,mockHttpServletRequest,mockHttpServletResponse)
KtPsiUtilKt.getCalleeHighlightingRange(expression)
tsdb.uidTable()
methodNameMaps.containsKey(parentThing)
mGpsListener != null
sp.getBoolean(PREF_AUTODELETE_MEDIA_ID,false)
slice.getAddress()
in.read(serCondition)
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY())
kl.getAvailableKisoks()
logger.warn("Playlist '{}' not found",playlist)
elementType == null
f
maxPendingPersists > 0
/**   * Returns last child <b>element</b> with given name or <code>null</code> if no such child node exist.  */ public Node getLastChildElement(String elementName){   if (childNodes == null) {     return null;   }   int from=childNodes.size() - 1;   for (int i=from; i >= 0; i--) {     Node child=childNodes.get(i);     if (elementName.equals(child.getNodeName())) {       child.initSiblingNames();       return child;     }   }   return null; } 
new StackManager(new File(stackRoot),null,osFamily,true,metaInfoDao,actionMetadata,stackDao)
targetClassLoader == null
toPreProcess.getFeatures().muli(maxRange - minRange + Nd4j.EPS_THRESHOLD)
HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString()
getPort()
new RuntimeException("Mocked failed close!")
target.getDestination()
appearance.getString(attr)
mBiometricUnlock.stopAndShowBackup()
private Object method; 
NSNameResourceCodec.encode(ci)
locale == null
assertProtonResourceLimits(0.8,0.77,new ContentClusterBuilder().protonMemoryLimit(0.77).getXml())
part.size()
a(1,2,15)
Localization.lang("Check integrity")
Assert.assertFalse("reload-required".equals(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString()))
iterations=10
AssertionFailedError e
unfinishedVerificationHere()
protected ReferenceType create(ResolvedReferenceTypeDeclaration typeDeclaration,ResolvedTypeParametersMap typeParametersMap){   return create(typeDeclaration,typeDeclaration.getTypeParameters().stream().map(typeParametersMap::getValue).collect(Collectors.toList())); } 
promise.setSuccess()
Preconditions.checkNotNull(uri)
IllegalArgumentException.class
selenium.isVisible("link=Control Panel")
getTestVector().getNumNondefaultElements()
MonitoringPortletImpl.isMonitoringPortletActionRequest()
dest.writeLong(txPower)
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true)
LinkedHashMap<String,Object>
new NeuralNetConfiguration.Builder().momentum(9e-1f).weightInit(WeightInit.DISTRIBUTION).dist(Nd4j.getDistributions().createNormal(1e-1,1)).lossFunction(LossFunctions.LossFunction.RECONSTRUCTION_CROSSENTROPY).iterations(10).learningRate(1e-1f).nIn(4).nOut(3).layerFactory(layerFactory).list(2).hiddenLayerSizes(new int[]{3}).override(new ConfOverride(){   @Override public void overrideLayer(  int i,  NeuralNetConfiguration.Builder builder){     if (i == 1) {       builder.weightInit(WeightInit.ZERO);       builder.activationFunction("softmax");       builder.lossFunction(LossFunctions.LossFunction.MCXENT);     }   } } )
telephony.getCdmaEriIconModeForSubscriber(subId)
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME,timestampMs,mPeriodicAlarmIntent)
new ConcurrentHashMap<String,Boolean>(64)
host.setHeaderView(this)
findAnnotationAttributes(element,annotationType.getName())
String.format("(%s) violated quota. Actual: (%f), Threshold: (%f)",metric.metricName(),quota.bound(),value)
Lists.newLinkedList()
checkPojoMetaClass()
a.getFloat(attr,0)
config != Config.ARGB_8888
new Paint(Paint.ANTI_ALIAS_FLAG)
{filePath}
pk.getColumnName()
lastModified > (headerValue + 1000)
fr.isExists()
put(v)
out.writeLong(sampleCount)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
StreamError se
selenium.isVisible("link=Control Panel")
KNOWN_TO_FAIL.add("comments/generic_methods.unit:46  var")
Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
mAudioHandler.hasMessages(MSG_SET_A2DP_SINK_CONNECTION_STATE)
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
level >= 100
targetInfo != null
historicState(item,timestamp)
selenium.isVisible("link=Control Panel")
new ExecutionEnvironment(new MockProfile(),myProject,null)
new JAXWSHttpSpiTransportFactory(bus,context)
getNonCompilablePath("InputGenericWhitespaceEndsTheLine.java")
new TextPaint(Paint.ANTI_ALIAS_FLAG)
{4,5,5,11,6,5,7,5,11,11}
position.getLatitude()
from >= to
i < 100
vf != null
uri.getPort() == -1
return false; 
Thread.sleep(200)
mValues[7]
is(3)
IOException ex
Exception e
((RoutableChannelHandler)nameRoutes).getAddress().equals(node)
checkPojoMetaClass()
intermediateArtifacts.strippedSingleArchitectureBinary()
tgt.grantServiceTicket("ST2",service,new NeverExpiresExpirationPolicy(),true)
Optional.of(BuckAddDependencyIntention.create(referenceElement,psiClass))
new RemoteViews(mContext.getPackageName(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
modelName + "." + signatureEntry.getKey()+ "."+ outputEntry.getKey()
isOffhook
args[0]
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/SuperMembers2.kt")
manager.beginTransaction().remove(fragment).commit()
getWidth()
packed[j]
Settings.Secure.putStringForUser(cr,ownerInfo,"",userId)
public TestDummy readFrom(Class<TestDummy> type,Type genericType,Annotation[] annotations,MediaType mediaType,MultivaluedMap<String,String> httpHeaders,InputStream entityStream) throws IOException, WebApplicationException {   throw new WebApplicationException(999); } 
Assert.assertEquals(transaction.getEffectiveDate().toLocalDate().compareTo(expected.getPaymentDate()),0)
Lists.newArrayList("id","bool","BOOL","SEL","IMP","unichar","nil","Nil","YES","NO","TRUE","FALSE","auto","const","extern","inline","register","restrict","signed","goto","sizeof","struct","typedef","union","volatile","asm","const_cast","delete","dynamic_cast","friend","explicit","mutable","namespace","not","operator","reinterpret_cast","static_cast","template","typeid","typename","using","virtual","self","isa","ptrdiff_t","size_t","wchar_t","wint_t","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intptr_t","uintptr_t","intmax_t","uintmax_t","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","INT8_MIN","INT16_MIN","INT32_MIN","INT64_MIN","UINT8_MAX","UINT16_MAX","UINT32_MAX","UINT64_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST64_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","INT_LEAST64_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST64_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","INT_FAST64_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST64_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","INTMAX_MIN","INTMAX_MAX","UINTMAX_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIZE_MAX","WCHAR_MAX","WCHAR_MIN","WINT_MIN","WINT_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","INT8_MAX","INT16_MAX","INT32_MAX","INT64_MAX","UINT8_C","UINT16_C","UINT32_C","UINT64_C","INTMAX_C","UINTMAX_C","va_list","fpos_t","FILE","off_t","ssize_t","BUFSIZ","EOF","FOPEN_MAX","FILENAME_MAX","TMP_MAX","SEEK_SET","SEEK_CUR","SEEK_END","stdin","stdout","stderr","ct_rune_t","rune_t","div_t","ldiv_t","lldiv_t","dev_t","mode_t","NULL","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","MB_CUR_MAX","MB_CUR_MAX_L","errno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EDEADLK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EAGAIN","EWOULDBLOCK","EINPROGRESS","EALREADY","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","ENOTSUP","ENOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","ELOOP","ENAMETOOLONG","EHOSTDOWN","EHOSTUNREACH","ENOTEMPTY","EPROCLIM","EUSERS","EDQUOT","ESTALE","EREMOTE","EBADRPC","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOLCK","ENOSYS","EFTYPE","EAUTH","ENEEDAUTH","EPWROFF","EDEVERR","EOVERFLOW","EBADEXEC","EBADARCH","ESHLIBVERS","EBADMACHO","ECANCELED","EIDRM","ENOMSG","ENOATTR","EBADMSG","EMULTIHOP","ENODATA","ENOLINK","ENOSR","ENOSTR","EPROTO","ETIME","ENOPOLICY","ENOTRECOVERABLE","EOWNERDEAD","EQFULL","EILSEQ","EOPNOTSUPP","ELAST","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_GETOWN","F_SETOWN","F_GETLK","F_SETLK","F_SETLKW","FD_CLOEXEC","F_RDLCK","F_UNLCK","F_WRLCK","SEEK_SET","SEEK_CUR","SEEK_END","O_RDONLY","O_WRONLY","O_RDWR","O_ACCMODE","O_NONBLOCK","O_APPEND","O_SYNC","O_CREAT","O_TRUNC","O_EXCL","O_NOCTTY","O_NOFOLLOW","DOMAIN","HUGE","INFINITY","NAN","OVERFLOW","SING","UNDERFLOW","CFMSYSTEMCALLS","CGLUESUPPORTED","FUNCTION_PASCAL","FUNCTION_DECLSPEC","FUNCTION_WIN32CC","GENERATING68881","GENERATING68K","GENERATINGCFM","GENERATINGPOWERPC","OLDROUTINELOCATIONS","PRAGMA_ALIGN_SUPPORTED","PRAGMA_ENUM_PACK","PRAGMA_ENUM_ALWAYSINT","PRAGMA_ENUM_OPTIONS","PRAGMA_IMPORT","PRAGMA_IMPORT_SUPPORTED","PRAGMA_ONCE","PRAGMA_STRUCT_ALIGN","PRAGMA_STRUCT_PACK","PRAGMA_STRUCT_PACKPUSH","TARGET_API_MAC_CARBON","TARGET_API_MAC_OS8","TARGET_API_MAC_OSX","TARGET_CARBON","TYPE_BOOL","TYPE_EXTENDED","TYPE_LONGDOUBLE_IS_DOUBLE","TYPE_LONGLONG","UNIVERSAL_INTERFACES_VERSION","BIG_ENDIAN","BYTE_ORDER","LITTLE_ENDIAN","PDP_ENDIAN","DEBUG","NDEBUG","scale")
labels != null
chatButton.setPressedImage(ImageLoader.getImage(ImageLoader.CHAT_BUTTON_SMALL_PRESSED))
localFileSystem.findFileByPath(keyMapsPath)
unsetDefault.isPrivate()
new ROC()
log.warn("getModelLastUpdateTimes(): Session ID is unknown: {}",currentSessionID)
mValues[7]
conf.set("tez.queue.name",null)
TelephonyManager.getDefault().getPhoneType()
updater.myComponent.isShowing()
dbStat.setLong(1,sessionType.getPid())
ProblemDescriptor[]
Boolean.valueOf(resizeableStr)
BlockLiquid.getStaticBlock(material)
_layoutRevisionLocalService.getLayoutRevisions(WorkflowConstants.STATUS_PENDING)
new WalkUpResolveProcessor(name,BaseJSSymbolProcessor.EMPTY_CONTEXT,psiFile,getElement(),BaseJSSymbolProcessor.MatchMode.Any)
mShouldTranslateContents
mHandler.removeCallbacks(pae)
stack.peekFirst()
Long.valueOf(param.getValue())
hour != 0
connectedHeaders.setAcceptVersion("1.2")
getViewAtRelativeIndex(0)
new Paint(Paint.ANTI_ALIAS_FLAG)
msg.offset()
GAV gav=KieServices.Factory.get().newGav(namespace,"memory","1.0-SNAPSHOT"); 
context.getLocation(node)
dest.writeLong(mSubId)
platformVersion < MNC
engine.execute(query).toString()
lock.isLocked()
dest.writeLong(mTxPower)
sendMessage(CMD_STOP_AP)
DBG=true
getDefaultLanguage()
SiteMembershipsWebUpgrade.class
InsertionSort.sort(sorted.clone())
Pattern.compile(foundAuthor)
Connector.class
notifyChildSamplerListenersOfFilteredSamples=false
onDetachedFromWindows()
UrlUtils.isSpecialUrl(currentTab.getUrl())
loaded.getLoaded().getConstructor()
authenticator.executeCommandAndAuthenticateIfNecessary(project,repo,source,"pull",arguments)
return START_STICKY; 
DirectoryReader.open(writer,true)
LAST_VERSION=708
public VectorClock getVersion(){   return version; } 
@ConditionalOnEnablednHealthIndicator("db")
application.getApplicationContext()
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
owner == null
add(feedbackPanel)
tableHasColumn("KBTemplate","cacheable")
Response.created(localUriInfo.getAbsolutePathBuilder().path("state").build())
conv.convert(bc,cc)
Timeout.seconds(60)
Native.getStringEncoding(classes[i])
(OrderAttribute)obj
writeStartElement(null,namespaceURI,localName)
StringBuffer padding=new StringBuffer("\t"); 
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
tea.save(false)
/**   * Callback that is invoked <em>after</em> all test methods have been invoked.  * @param context the current container extension context  */ void afterAll(ContainerExtensionContext context) throws Throwable ; 
mRecyclerView.scrollBy(hScroll,vScroll)
new IndexWriter(store,new SimpleAnalyzer(),true)
selenium.isVisible("link=Control Panel")
Double.doubleToLongBits(v)
"Deleting existing file: " + tempTarget
ev.getY() < mQsContainer.getBottom()
assertion.getXmlObject()
dpToPx(32f)
panel.getAuthor()
ro.isStopApplicable(ro.bearingVsRouteDirection(loc),i)
assertPhoneNumberEqual("123123","0123123",false)
mMapView.postInvalidate(frameLeft - 2,frameTop - 2,frameRight + 2,frameBottom + 2)
bungee.getTranslation("outdated_client")
columnType.equalsIgnoreCase("double")
Exception exception
Thread.sleep(5000)
new GeoLocation(array.getDouble(0),array.getDouble(1))
accountHandle.getComponentName().toString()
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
selenium.isVisible("link=Control Panel")
getIntent().getStringArrayExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
COMPLETE
!useLayoutWithDefault() && (!hasValidSelection || mLastSelected != checkedPos)
connection.setSchema(name)
mService.getProfiles(UserHandle.myUserId(),true)
AssetTagFinderUtil.filterCountByG_N(_scopeGroup.getGroupId(),assetTagName)
LOG.info("Finding components in url: {}",url)
new TypeList.Explicit(entryTypes)
println_native(logId,ASSERT,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
new ArgPreparedStatementSetter(args)
assertResultExchange(result.getExchanges().get(0),false)
new CountDownLatch(3)
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
log.logError(BaseMessages.getString(PKG,"JobUnZip.Error.Label"),BaseMessages.getString(PKG,"JobUnZip.MoveToDirectoryEmpty.Label"))
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
constraints.weightx=1
blog.getRemoteBlogId()
entry.notification.clone()
-1
mMatchMode=numOfMatchesPerFilter
handlers[0] == null
wordTypesType == null
mMethod == Methods.getByIndex && mMethod == Methods.getByInetAddress
Minecraft.getMinecraft().renderEngine.getMissingIcon(1)
this.constraints.updateFromFactHandle(handle)
mappedSuperclass.isMetadataComplete()
volumes.toString()
asList()
exchange.getProtocol().equals("https")
Integer.valueOf(attrValue)
lhs.getScore()
Build.VERSION.SDK_INT < 21
mAnswer.setBackgroundDrawable(mTextBackground)
singletonComponent == null
contract.getNewContrect()
xml(obj.toString())
Integer.valueOf(taskIdStr)
callback.disconnectCallback(name,jsa)
sep < 0
app.getSettings().AVOID_FERRIES.get()
major < 3
docker.startContainerCmd(container.getId())
PsiTreeUtil.getParentOfType(position,PsiClass.class,false,PsiCodeBlock.class,PsiMethod.class)
peekServiceForUserLocked(userId)
Integer.valueOf(stackIdStr)
dict.put(words[0],words[2])
Log.e(TAG,"Got null argument for a signing keyset, ignoring!")
file.getName().getURI()
getCurrCapacity()
mPowerManager.isScreenOn()
indexOutURI.getPath()
Drawable.scaleFromDensity(sourcePadding.bottom,sourceDensity,targetDensity,false)
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
Log_OC.wtf(TAG,"\t account is NULL")
Preconditions.checkNotNull(containerIdGenerator)
file.getAbsolutePath()
selenium.isVisible("link=Control Panel")
requestedProvider.get().verify(service)
Integer.valueOf(attrValue)
ValueGeometry.get(bytes)
Enumeration<String>
client.getDefaultRequestOptions().setTimeoutIntervalInMs(timeout)
userState.mIsAccessibilityEnabled
COUNTER_UPDATER.addAndGet(this,-vs.size) == 0
filter.setRadius(mAngle)
app.getAudio().newAudioRecoder(22050,true)
a.getInteger(attr,DEFAULT_MIN_WIDTH)
selenium.isVisible("link=Control Panel")
from("direct:tap").delay(100)
getDelegate().handle(exchange).switchOnError(ex -> {   if (logger.isDebugEnabled()) {     logger.debug("Could not complete request",ex);   }   response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
DataBufferUtils.read(channel,this.bufferFactory,3)
@Overide
assertEquals(0,auth.getFailures().size())
getSwaggerType(swaggerModel.getAdditionalProperties())
c == '\\'
collector.getRangeCountersToBeDisplayed(range)
Map<String,String>
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,true)
new InvokedMethod(tr.getTestClass(),tr.getMethod(),new Object[0],true,false,tr.getStartMillis())
hasPermission(permission)
new JedisClusterCommand<Set<String>>(connectionHandler,timeout,maxRedirections){   @Override public Set<String> execute(  Jedis connection){     return connection.spop(key,count);   } } 
U.sleep(15000)
iconsByFileExtension_.put(filespec.toLowerCase(),icon)
new IntRangeValidator(1,true,true)
PortletFileRepositoryUtil.addPortletFileEntry(serviceContext.getScopeGroupId(),userId,KBArticle.class.getName(),kbArticle.getClassPK(),PortletKeys.KNOWLEDGE_BASE_ARTICLE,kbArticle.getAttachmentsFolderId(),inputStream,shortFileName,mimeType)
sendMsg(mAudioHandler,MSG_PERSIST_VOLUME,SENDMSG_REPLACE,PERSIST_LAST_AUDIBLE,device,s,PERSIST_DELAY)
T
@Mock private HidProfile mHidProfile; 
new ExportDBTask(testContext,filename -> {   assertThat(filename,is(not(nullValue())));   File f=new File(filename);   assertTrue(f.exists());   assertTrue(f.canRead()); } )
selenium.isVisible("link=Control Panel")
WordPress.getCurrentBlog().getRemoteBlogId()
getName()
!remoteTableHandle.isPresent()
RECONNECT_DELAY_MAX=15
toolWindow.setDefaultContentUiType(ToolWindowContentUiType.COMBO)
add(food(10),TUNA,COOKED_SWEETCORN,CRAB_MEAT,CHOPPED_TUNA,COOKED_CHOMPY)
valueOfDateTimeOriginal != null
ZipUtil.unzip(null,courseDir,file,null,null,true)
TransactionUtil.validTokenAbbrName(assetIssueContract.getAbbr().toByteArray())
testAllocation("test3snippet",3,0,0)
new PrestoException(INVALID_CAST_ARGUMENT,e)
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))).append(targetNodes)
hazelcastFactory.newHazelcastClient()
LOG.warn("DataNode is out of memory. Will retry in 30 seconds.",ie)
dockedBounds.top - adjustment
this.mMesh.preDraw(this.mShaderProgram)
assertEquals("Invalid content-length",13,outputMessage.getHeaders().getContentLength())
log.warn("Null primary key column for '" + object.getName() + "'")
type.getConstructor()
lockFileAccess.length() < INFORMATION_REGION_POS
ENTER_PORTAL_FRAME(120)
this.mChildScene == null && !this.mChildSceneModalUpdate
duration - SystemClock.uptimeMillis() - bedtime
pGLState.resetModelViewGLMatrixStack()
getNameWithoutPackage().equals(type)
sampleOffset * 1000
mApplicationObject == null
i < lastLine
addIndies != null
getRoot()
GL20.glGetProgram(program,pname,params)
IndexReader.open(userindex,true)
normalizedUrl.toLowerCase(Locale.ROOT).startsWith(HTTP_PROTOCOL)
sceneToLocalTransformation.postConcat(parent.getSceneToLocalTransformation())
weekRange.roll(Calendar.DATE,6)
getUserStateLocked(callingUid)
((TileGenericPipe)source.getTile()).isPipeConnected(direction)
builder.timeValueField(ThrottlerField.THROTTLE_PERIOD.getPreferredName(),ThrottlerField.THROTTLE_PERIOD_HUMAN.getPreferredName(),throttlePeriod)
child.getAttributeValue(ATTRIBUTE_REFORMAT)
loaded.getLoaded().getConstructor()
!hasAnnotation(annotatable,annotationMirror)
@Console
given().contentType(ContentType.BINARY).content(file).when().post("/file")
mRilVoiceRadioTechnology=m.getInt("dataRadioTechnology")
selenium.isVisible("link=Control Panel")
new GroovyBugError("The lookup for " + name + " caused a failed compilaton. There should not have been any compilation from this call.")
myApplicabilityError.set(null)
duration - SystemClock.uptimeMillis() - bedtime
new DeadCodeEliminationPhase(REQUIRED)
Integer.valueOf(taskIdStr)
mContext.checkCallingPermission(android.Manifest.permission.CAPTURE_VIDEO_OUTPUT) != PackageManager.PERMISSION_GRANTED
this.getSocket()
type == TRIANGLES
return true; 
progressHandler.onProgress(downloaded,total)
Long.valueOf(attrValue)
pd == activePresentationDescriptor
new XmlPathConfig()
parameters.getPositions().get(0)
new AnalyzedToken(word,lowerTaggerTokens[i + 1],lowerTaggerTokens[i])
AllCodehausJavaTestsSuite.suite()
data[1] > 260
new DMLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters)
Thread.sleep(5000)
BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.DoesNotExists.Message")
lock.isLocked()
platformVersion < MNC
proxyClassName.equalsIgnoreCase(otherClassName)
HEADER.getBytes()
FluxPeekHelper<T>
regularColumns.values()
field.createField(fieldType.indexedToReadable((String)sortValue),0.0f)
setNumber(String.valueOf(integerPart))
LOG.error("I/O error when running rpc",e)
limitOrder.getType() == OrderType.BID
/**   * Controls tesselation transform (e.g similar to the vertex shader, but required to mix inputs manual)  */ TesselationEvaluation
config.getProperty("peer.p2p.pingInterval",5L)
mContext.sendBroadcast(intent)
level <= RF_STATUS_HIGH_SIGNAL
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
op.getIDLName()
addDaysAndCheckForCompletion(1,NextEvent.PAYMENT_ERROR)
handleDnsConfigurationChange(networkType)
mStackSupervisor.anyTaskForIdLocked(taskId,true)
location.belongTo(BlockStoreLocation.anyTier())
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
status().isMovedTemporarily()
mService.setUidPolicy(UID_A,POLICY_NONE)
targetHeight <= 0
/**   * The upper value in the range.  * @return the upper value in the range  */ Comparable getTo(); 
String.format("null label in rule %s, %s",getLabel().toString(),where)
assertUpgraded(client(),null)
assertFalse(oldChild.isSafelyReplaceableBy(newChild))
delay=2
mp.getValue()
del("*:*")
failureDesc.contains("14807") || failureDesc.contains("14883") || failureDesc.contains("13456")
!hasPullToRefresh
service.getDomain().getName()
val == null
exchange.getOut()
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
setNumber(String.valueOf(integerPart))
!justBootedUp
selenium.isVisible("link=Control Panel")
new ArrayList<>()
bounds.width()
QuartzEndpoint.class
getParameterValues(request,param)
capacity > 1 << 30
canCacheErrors
matchIfMissing=true
call.getProject()
StateManagementUtils.createClearForkedExecutionMojoBinding()
inLatch.endLatch.await(400,TimeUnit.MILLISECONDS)
connect(monitor,null,null,false,false)
prevNerEndIndex != (start - 1) && nextNerStartIndex != end
pendingElements.size() > 0
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
prev.hasMultipleInstances()
post.hasChangedFromLocalDraftToPublished()
/**   * {@inheritDoc}  */ public Comparable getTo(){   return Integer.valueOf(to); } 
dest.writeLong(mSubId)
logger.info(String.format("server disconnect (%s)",this.nsp))
assertEquals(12,tokens.size())
TimeUtils.nanoTime()
new ClusterConfiguration("whatever",StringLogger.DEV_NULL,"cluster://1","cluster://2")
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
return true; 
FieldsWriter<V,?>
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),null,null,null,null)
expected=536870912
if (DEBUG) Slog.d(TAG,"Need to launch agent for " + pkg); 
"Flow " + flowName + " cannot be found in project "+ project
fdoProvider.getFdoMode() != FdoMode.OFF
SmartEnterProcessors.INSTANCE.forKey(fixture.getFile().getLanguage())
MeasureTypeFactory.init()
c == Float.class
new StringBuilder(239)
assertMockEndpointsSatisifed()
mConnector.execute("volume","format",vol.id)
c == Integer.class
mConferenceById.containsKey(callId)
account.getName()
VERSION=5
In.valueOf(apiKeyAuthConfig.in().toValue())
assertEquals(2,artifacts.size())
c == Short.class
DefaultBroadcaster.class.cast(resource.getBroadcaster()).broadcasterCache.retrieveFromCache(resource)
userContext.getContentResolver()
Type.getType(stubInternalName)
con.getClass().getName()
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
file(path).isDirectory()
new Intent(ACTION_FAST_TRACK)
LOG.info("Creating short circuit output stream for block {} @ {}",blockId,address)
layerFilter != null
tile.getUrn().getResourceName()
a.getFloat(attr,0)
new DMLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters)
getResultHandler(result).handleResult(exchange,result).otherwise(ex -> result.applyExceptionHandler(ex).flatMap(exceptionResult -> getResultHandler(exceptionResult).handleResult(exchange,exceptionResult)))
viewFlow.getWidth()
"Surface(native-token=" + mSurface + ")"
homeListView.smoothScrollToPosition(0)
outputType == ProcessOutputTypes.STDERR
outputDir.mkdir()
Trans == TRANSPOSE
executeMethodAndCovertExceptions(httpPost)
FilenameIndex.processFilesByName(PubspecYamlUtil.PUBSPEC_YAML,false,falseProcessor,module.getModuleContentScope(),project,null)
this.messageService.fluxPreAuthorizeHasRoleFindById(1L).contextStart(withUser)
new Intent()
proc != null
new ChromeWebDriverImpl(projectDir,portalURL)
oldBuffer.size() > 0
CellNames.compositeDense(SuperColumns.scName(name))
MathUtils.random(height)
new CommandFormatException("Communication error",e)
UDecoder.URLDecode(candidate)
new Paint(Paint.ANTI_ALIAS_FLAG)
producer.send(expiredMessage,Message.DEFAULT_DELIVERY_MODE,Message.DEFAULT_PRIORITY,50)
filteredMessage.add(perRequestFilter(r,new Entry(o,r,f,o),false))
new StringBuilder()
getDelegate().getSupportedCipherSuites()
IccUtils.gsmBcdByteToInt((byte)0x8c)
formatTime(fullWifiLockOnTime / 1000)
@Override protected BlockBuilder getBlock(){   return blockBuilder; } 
name.length() > 0
verify(mWifiService).stopLocalOnlyHotspot()
proxyHTTPPort.setText(Integer.toString(Preferences.getInteger("proxy.https.port",8443)))
Status.constructStatuses(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
verifyPosition(decoder,binary("79790020940A035985708053908307060104900402788950301217070401538F0003E8210D0A"))
name.equals("getNetworkOperatorName")
new Paint(Paint.ANTI_ALIAS_FLAG)
threadSafe=false
newId > max
assertNotNull(message.getPayload() instanceof Collection<?>)
mFile.getPath()
loaded.getLoaded().getConstructor()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),false)
new CallbackStub()
Util.killAsync(ffmpegLoadLibraryAsyncTask) && Util.killAsync(ffmpegExecuteAsyncTask)
NIO_GROUP.shutdownGracefully()
@IntMethodAnnotation(-44)
new Paint(Paint.ANTI_ALIAS_FLAG)
this.exchanges.get(requestId)
logger.debug("myq securityToken: {}",securityToken)
((WithNode)node).getContext()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
before != after
TIMESTAMP_READ_METHOD.invoke(object,connection)
ENABLE_KERNEL_UPDATES=false
recycle(false)
fingerId == 0
new SimpleCanalConnector(address,username,password,destination,null)
activity == null
((NioEndpoint)getEndpoint()).getThreadPriority()
parsedResult.getSqlType()
EnumValidator.create(Target.class,false,false)
capacity > 1 << 30
Slog.wtf(TAG,"Starting rect for task: " + taskId + " requested, but not available",new Throwable())
Integer.valueOf(p.getProperty(screenName + ".id"))
new RAMDirectory()
metadata.getPropertyIterator()
new DateTime()
logger.info("Aliasing common strings")
message.getContact()
selenium.isVisible("link=Control Panel")
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
process.waitFor()
loaded.getLoaded().getConstructor()
VMDebug.attachAgent(library + "=" + options)
expected == boolean.class
bos.toString()
new Thread()
dest.writeLong(mSubId)
new ImageIcon()
lp.onResolveLayoutDirection(layoutDirection)
selectedRingColor=0x0033b5e5
getLlvmParamTypes()
ignoreUnknown=false
index - 1 > 0
VertexAttribute.Color()
id=13307
-y
Integer chatId
rnaPath.endsWith("rotation")
LocalFileSystem.getInstance().refreshAndFindFileByIoFile(parentIoFile)
Mono.currentContext()
new FormAttachment(wReplace,-margin)
mWindowManager.getDefaultDisplay().getMetrics(metrics)
knownType != null
consistency_level.filterForQuery(table,liveEndpoints)
new Paint(Paint.ANTI_ALIAS_FLAG)
not(isStatic())
StringBuffer charNum=new StringBuffer(); 
Locale.getDefault().toString()
mErrorPopup.showAsDropDown(mTextView,getErrorX(),getErrorY())
factory.getEmbdeddedServletContainer()
m.getModifiers()
LOGGER.debug("Cache expiration duration after reads is set to [{}]",currentDuration)
debugRunner.createCommandLinePatchers(state,configuration,PORT)
new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true)
WPUrlUtils.isWordPressCom(xmlrpcUri)
evaluate(123.5,DataTypes.FLOAT)
sysPs != null
CONCURRENT_THREAD_COUNT=300
Boolean.valueOf(attrValue)
workerCount=4
new InputStreamReader(resourceInputStream,fileEncoding)
popup.requestFocus()
Status.constructStatuses(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
selenium.isVisible("link=Control Panel")
args0.length > 0
(inWidth - kW + 2 * padW) / sH
origin.realComponent().doubleValue() > other
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
adapter != null
data != null
pathURL.toURI().getPath()
Error err
Integer.valueOf(stackIdStr)
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
user.getBytes(StringUtils.UTF8)
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
getTestName(false)
log.error("Error invalidating SSH tunnel",e)
t != null
klass.getDeclaredMethods(false,declaredMethods)
getImportGroupId()
saHooks != null
conf.getSearchBaseURL()
getMeasuredHeight()
stateMap.get("CurrentURIMetaData") != null
Localization.menuTitle("New article")
getPackageManager().addPreferredActivity(filter,bestMatch,set,intent.getComponent(),UserHandle.getUserId(mLaunchedFromUid))
INACCESSIBLEMEMONLY_OR_ARGMEMONLY
row("p_comment",null,1.0,0.0,null,null,null)
url.appendPath(branchRelativeUrl,true)
identifier(node)
data.cx.initStandardObjects(null,true)
getEmptyCell()
e.toString()
new Handler(){   @Override public void handleMessage(  Message msg){ switch (msg.what) { case MSG_CLEAR_WALLPAPER: synchronized (this) {         mWallpaper=null;       }     break; } } } 
mCol.getDb().getDatabase().setTransactionSuccessful()
nativePostCreate1(native_instance,shaderA.native_shader,shaderB.native_shader,pdMode != null ? pdMode.nativeInt : 0)
/**   * Opened connections.   */ @GridToStringExclude private final LongAdder opened=new LongAdder(); 
getActionBar()
(filterMap.getDispatcherMapping() & FilterMap.ERROR) > 0
WordPress.getCurrentBlog().getRemoteBlogId()
valueFactory.normal(token)
mGpsListener != null
realm.assertThread()
NFC_UID=1025
thread.sleep(10)
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallbackExt mBluetoothGattCallback=new IBluetoothGattCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
return START_FLAG_REDELIVERY; 
MeasureSpec.makeMeasureSpec(MeasureSpec.EXACTLY,myHeight)
state.mTint != null
Integer.compare(o2.order(),o1.order())
appOpsManager.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
repository.loadForRequest(urlEh2,null)
bindingGroup.has(PORT_OFFSET)
endPos < paraEnd
args != null
isSavedPostsList()
/**   * <p>Formats the receiver using the given format.</p> <p>This uses  {@link Formattable} to perform the formatting. Two variable maybe used to embed the left and right elements. Use  {@code %1$} for the leftelement (key) and  {@code %2$} for the right element (value).The default format used by  {@code toString()} is {@code (%1$s,%2$s)}.</p>  * @param format  the format string, optionally containing {@code %1$} and {@code %2$}, not null  * @return the formatted string, not null  */ public Object toString(String format){   return String.format(format,getLeft(),getRight()); } 
assertEquals(expectedPlan,actualPlan)
"application/xson".equals(contentType)
executionJobVertex.getParallelism()
Thread.sleep(600)
new RepositoryException(container,e.getMessage())
Constants.JVM_NAME.contains("HotSpot")
grammar.getTokenNames()
Duration.between((Temporal)left,(Temporal)right)
CanalParseException e
new IfNode(currentGraph.unique(new IsNullNode(receiver)),trueSucc,falseSucc,1,graphId)
MediaSessionLegacyHelper.getHelper(mContext).sendVolumeKeyEvent(event,AudioManager.USE_DEFAULT_STREAM_TYPE,false)
logger_.error("Repair session " + future.session.getName() + " failed.",e)
List<PersistentLocalScope>
temp.requestFocus()
mContext.sendBroadcast(intent)
writer.close()
hasAuthenticationTimeoutExpired()
JSError.make(ref.source.getName(),ref.node,NAME_DEFINED_LATE_WARNING,parent.fullName())
ensureGreen()
AbstractMethodError e
LOG.isDebugEnabled()
appOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
klass.getDeclaredMethods(false,declaredMethods)
/**   * Called to resolve a input from a variable. Null if not possible.  * @param input is never null  * @return null if not possible/invalid  */ T parseValue(Object input); 
savedAlarm.getId()
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
!jarEntry.isDirectory()
rasterFilter != null
new RotationPersist2Fragment()
selenium.isVisible("link=Control Panel")
mPostKeyguardExitAnimation.hasEnded()
JetTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/staticMembers/classObjectMethod.kt")
Observable<T>
dynamicClassType.getConstructor()
this.setConnectAttemptTimeout(connectTimeout)
jp.getIntValue()
new String[4]
JSRootConfiguration.getInstance(getProject()).unsetLanguageLevel()
(offset >= start && offset <= start + len) || (end >= start && end <= start + len)
logExitAPICall(log,transactionType,account,payment != null ? payment.getPaymentMethodId() : null,payment != null ? payment.getId() : null,paymentTransaction != null ? paymentTransaction.getId() : null,paymentTransaction != null ? paymentTransaction.getProcessedAmount() : null,paymentTransaction != null ? paymentTransaction.getProcessedCurrency() : null,payment != null ? payment.getExternalKey() : null,paymentTransaction != null ? paymentTransaction.getExternalKey() : null,paymentTransaction != null ? paymentTransaction.getTransactionStatus() : null,paymentControlPluginNames)
name.indexOf(endQuote)
LOGGER.error(msg.apply())
DefaultCacheKeysFactory.getNaturalIdValues(cacheKey)
doTest()
dest.writeLong(mSubId)
String text
this.httpHandler.handle(req,resp).otherwise(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
mFile.getPath()
!showOnKeyguard
new RuntimeException("error initializing deserializer: " + deserializer.getClass().getName())
StringUtil.isNotEmpty(functionName) && o.getContainingFile().getImportMap().containsKey(functionName)
ignoreUnknownFields=false
getPreferences().setProperty(key,value)
logger.info("Remove try/catch/finally")
pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA)
homeListView.setSelection(0)
loaded.getLoaded().getConstructor()
is(expectedSql)
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
windowState.isOnScreen() && !windowState.mWinAnimator.mEnterAnimationPending
LanguageUtil.isAvailableLanguageCode(languageId)
IOException expected
mNavigationBarView.inScreenPinning()
builder.setPlaceholderImage(getResources().getDrawable(ActorSDK.sharedActor().style.getAvatarBackgroundResourse()))
stat.st_mtim.tv_nsec.get()
SelectTimeZonePacificStandardTimeTest.class
new EditSessionBlockChangeDegate(editSession)
buildName(rightNode)
type.getConstructor()
new Duration(2,SECONDS)
Exception e
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_STOP_FUNCTION)
new DDMFormViewFormInstanceRecordDisplayContext(request,response,_ddlRecordLocalService,_ddmFormRenderer,_ddmFormValuesFactory,_ddmFormValuesMerger)
discardChannel.receive(10000)
dest.writeLong(mSubId)
WaitUtils.waitForPageToLoad(driver)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
uuid.getMostSignificantBits() & 0x0000FFFF00000000L
scrollWebElementIntoView(webDriver,webElement)
mResourceData[i] != null
intent.setData(uri)
new Color(0x696969ff)
JetTestUtils.navigationMetadata("idea/idea-completion/testData/handlers/basic/staticMembers/ImportFromCompanionObject.kt")
mComment.getLocalSiteId()
parent instanceof AppWidgetHostView
conf.getTimeDuration(ScmConfigKeys.OZONE_SCM_HEARTBEAT_INTERVAL,hbInterval.get(),TimeUnit.MILLISECONDS)
tokensToUpdateInSystemKeyspace.add(token)
blog.getRemoteBlogId()
selenium.isVisible("link=Control Panel")
MimeUtil.ENC_7BIT.equalsIgnoreCase(encoding) || MimeUtil.ENC_8BIT.equalsIgnoreCase(encoding)
ActivityOptions.makeScaleUpAnimation(view,0,0,view.getMeasuredWidth(),view.getMeasuredHeight())
{4,5,5,11,6,5,7,5,11,11}
sUseRenderThread=true
syncOperation.delay == 0
set(object,value.intValue())
start.expectedMessageCount(6)
m.getSize()
mRenderNode.isPivotExplicitlySet()
jRestriction.put("used",mUsed)
new Label(shell,SWT.RIGHT)
minorVersion=3
selenium.isVisible("link=Control Panel")
type.getConstructor()
delegate.update(entity)
!blog.getCapabilities().equals(capabilities)
mHorizontals == null
new WorldPoint(2636,3454,0)
connection.isClosed()
unlock(orig)
selenium.isVisible("link=Control Panel")
printSelect(unionSelect.right(),sb)
index <= _paramAnnotations.length
getTimeout()
OutputScrapingExecutionFailure.hasFailure(error)
IllegalArgumentException.class
8 + count
IOException e
offset > i
ENABLE_SQLITE_LOG=true
lineCount == 4
attachmentNotSaved()
selenium.isVisible("link=Control Panel")
GAV gav=KieServices.Factory.get().newGav(namespace,"memory","1.0-SNAPSHOT"); 
mHandler.obtainMessage(MSG_FINGERPRINT_AUTHENTICATED,result.getFingerprint().getFingerId(),result.getFingerprint().getGroupId())
obtainMessage(MSG_ZEN_MODE_CHANGED,zen ? 1 : 0)
fb.capacity()
Assert.assertEquals(_memoryClusteredJobs.toString(),1,_memoryClusteredJobs.size())
Beans.newDuration(rtProps.getTimeToKillInSeconds()).toMillis()
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
Arrays.asList("Java","CSharp","Python2","Python3","Node")
i <= 'Z'
ConfigurePortletRootLayoutTest.class
websocketComponent.setMaxThreads(11)
PsiLiteralUtil.parseFloat(text)
found.getElementType() == ElementType.XML_COMMENT_START
id=15851
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/QualifiedSuperMembers.kt")
_validatePossiblePropertyValues(propertyElement,possiblePropertyValues,filePath)
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
getPlayerPosition().z
w.getAddress()
display.getMetrics(dm)
nextTokenIsFast(b,IDENTIFIER)
log.warn("Existing HeaderManager '" + mgr.getName() + "' merged with '"+ value.getName()+ "'")
Map<String,SortedMap<String,Object>>
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
super.onRequestSendAccessibilityEvent(child,event)
expand("serializedforms/JobDataMapSerializationTest.testEmptyMap.{?}.ser","JDK16","JDK17")
MotionEvent.obtain(downTime,eventTime,MotionEvent.ACTION_UP,fromX,y,0)
config.getBroadcasterFactory().lookup(m.broadcaster(),true)
localFileSystem.findFileByIoFile(vimKeyMapFile)
service.getDomain().getName()
((IPowerReceptor)pipe).powerRequest()
Object strongReference
triggerEl.element("simple-trigger-value")
new Paint(Paint.ANTI_ALIAS_FLAG)
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
scope == null
((AstridActivity)getActivity()).setupTasklistFragmentWithFilter(newFilter)
mResources.getDrawable(id)
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
new IllegalArgumentException(JSON_BUILDER + "invalid element",e)
/**   * The invoker component.  */ private final JComponent invoker; 
getPaymentMethodById(account.getPaymentMethodId(),false,context)
_pds._job.isStopped()
Object[]
new NoteDrawerTagAdapterViewHolder()
sceneRoot.setTag(com.android.internal.R.id.scene_layoutid_cache,scenes)
reduceConfigWidthSize(sw,Surface.ROTATION_270,density,unrotDw,unrotDh)
cSet.setConcept(this)
getIndexes().hasIndex() & OBJECT.equals(mapConfig.getInMemoryFormat())
getBareJID(0)
result.ocFile.getMimetype()
next.handle(request).map(responseProcessor)
DBUtils.getQuotedIdentifier(this)
join(actual,",","(",")")
TimeLwjgl.class
mService.reconnect(mContext.getOpPackageName())
indexFile.exists()
Optional.of(resourceManagement.getStats())
LOG.trace("Failed to delete temp folder",e)
targetPointsHelper.getIntermediatePoints()
isRowVector()
addAOEntitlementAndCheckForCompletion(bpSubscription.getBundleId(),"Telescopic-Scope",ProductCategory.ADD_ON,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT)
selenium.isVisible("link=Control Panel")
@Controller
mAppToken.hasContentToDisplay()
String.format("Error while checking frozen types on field %s of %s %s: %s",field.getName(),classDescription,field.getDeclaringClass().getName())
((JetPostfixExpression)element).getOperationSign()
origin.absoluteValue().doubleValue() > complexNumber.absoluteValue().doubleValue()
synchronized (this) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
imageView.setImageBitmap(null)
Collection<IterationListener>
entry.get() == null
new Notification(StatusBarTest.this,R.drawable.ic_statusbar_missedcall,"tick tick tick",System.currentTimeMillis() - (1000 * 60 * 60* 24),"(453) 123-2328","",null)
numDocs <= docCount
/**   */ private final LongAdder mapPubSize=new LongAdder(); 
ColorResources.getColor("scrollBarDarkShadow")
targetSdkVersion >= N_MR1
Values.WEBSOCKET.equalsIgnoreCase(upgrade)
!tickEnd
Integer.valueOf(attrValue)
mState.isAlive()
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
LAST_VERSION=259
ACRA.log.e(LOG_TAG,"ACRA is disabled for " + context.getPackageName() + " - forwarding uncaught Exception on to default ExceptionHandler")
RENDERER_COUNT=5
mContext.getString(R.string.branded_monitoring_description_app_personal)
GregorianGregorianCalendar.getInstance()
telephony.isRadioOn()
ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC)
log.debug("Unexpected exception on closing transaction.  Cause: " + e)
new LeftTuple(f0)
new File(themeCss)
Map.Entry<String,Object>
!mAwake
logger.warn("Cannot update channel for group member ({})",e.getMessage())
!isTopLeftVisible
new RelativeCoordinatesProvider(hRef,vRef,hDelta,vDelta)
32 * density
origin.realComponent().doubleValue() <= other
mNextNonWakeupDeliveryTime > nowELAPSED
mConferenceById.containsKey(callId)
ViewConfiguration.getLongPressTimeout() * 1.5f
assertEquals("Size of " + r,10,r.size())
new Paint(Paint.ANTI_ALIAS_FLAG)
GoExecutor.in(module).withParameters(task.getCommand())
executor.awaitTermination(1000,TimeUnit.MILLISECONDS)
child.getMeasuredHeight()
new AlreadyExistsException(cfm.cfName,cfm.ksName)
selenium.isVisible("link=Control Panel")
comparator.compare(value,answer) > 0
checkPojoMetaClass()
log.info("Performing lookup: %s --> %s",ips,retVal)
IServiceManager.getService("manager")
new RuntimeException("Could not create TypeInformation for type " + type.getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)")
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
REJECT_OUTSIZED_RESTORE=false
RedisRunner.startDefaultRedisServerInstance()
Map<List<Object>,Object>
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
assertEquals(actual().toString(),typeString)
new InvalidPluginRequest("A version must be specified for the tomcat plugin")
d.slices()
mPowerManager.wakeUp(SystemClock.uptimeMillis())
role.equals(NULL_ROLE)
tab[index]=arr
decoder.strippedChannel()
Collection<DataSet>
externalCacheDir.getPath()
getExecutionContext(event,true)
a.getFloat(attr,0)
annotationProcessors.isEmpty() && plugins.isEmpty()
modIcon.getOriginalWidth()
jobLogTab.getText()
TransactionUtil.validTokenAbbrName(assetIssueContract.getAbbr().toByteArray())
!isAllSized()
mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED || mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS) != PackageManager.PERMISSION_GRANTED
displayContent.getDockedStackLocked()
log.error("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
Thread.sleep(5000)
m.getClass()
myWidth - myDelegate.getIconHeight()
BeanPropertiesUtil.getObject(model,_rowIdProperty)
assertEquals(defsPath + " children",2,children.size())
assertEquals(6,beanCount)
new IllegalArgumentException()
upgradeDDLRecordSetClassName(classNameDependencies)
mContent != null
new MediaController(token)
targetRegistry.registerAlias("transactionManager",transactionManagerRef)
new CargoWithHistoryDTO(cargo.trackingId().idString(),cargo.origin().unLocode().idString(),cargo.finalDestination().unLocode().idString(),StatusCode.claimed,"AAAAA","BALO")
fileSizeKb * 1024
selenium.isVisible("link=Control Panel")
@Nullable private final Params params; 
appWindowToken == null
part.size()
prefs.getBoolean(PERSIST_SERVICE,false)
new LLVMSymbolReadResolver(runtime,frame,getStackSpaceFactoy)
assetUri.getAssetName().toString()
list(ObservableProperty.ANNOTATIONS)
-1.0
outLatch.endLatch.await(400,TimeUnit.MILLISECONDS)
query.contains("about:")
win.isAnimatingLw() && appWindow && showWhenLocked
myVirtualFile != null
strategy.getJavaIdentifier(parameter)
dlg.setPositiveButton(fButtons[0],new AlertDialog.OnClickListener(){   public void onClick(  DialogInterface dialog,  int which){     dialog.dismiss();     notification.success(new PluginResult(PluginResult.Status.OK,1),callbackId);   } } )
DualViewColumnInfo<TreeNodeOnVcsRevision,Object>
Throwable t
laf.getName()
createShrinkFadeOutFromBottomAnimation(mContentContainer,150,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();   } } )
NETWORK_ACCESS_TIMEOUT_DEFAULT_MS=0
fireBridgeFailed(new Throwable("remoteBrokerInfo is null"))
stall_till_cloudsize(1)
rule.hasBuildSteps()
from("direct:start").aggregator().header("id").batchTimeout(2000L)
View.SYSTEM_UI_TRANSPARENT
strongClassCache.put(beanClass,results)
throwable.getCause()
parentOrActualGroup.isUser()
case Deposit: 
serializer.serializeForInsert(metadata,entity,batch.getColumns(),batch.getValues(),batch.getSubQuery())
super.getLikeProvider(path)
typeSettingsProperties.toSortedString()
_log.error(ioe,ioe)
intent.resolveTypeIfNeeded(getContentResolver())
dest.writeLong(mTxPower)
getNetworkPolicies()
dis.read(serializedData,0,length)
ERROR(true,false,false,false,false)
response.getContentCount()
final LongAdder puts=new LongAdder(); 
!mUserVisibleHint && isVisibleToUser && mState < STARTED
PrivacyManager.getSettingBool(0,PrivacyManager.cSettingOnDemand,false,false)
i < address.getMaxAddressLineIndex()
-1
position - dockDividerWidth
myInflatorId != -1
mFileLength < mBlockSize
MAX_DIMEN_FOR_ROUNDING=1080
this == group.mInternalConnection
qtype instanceof PyNoneType
fingerId == 0
variableName.substring((scopeName + ".").length(),variableName.length())
header.equals(sameHeader)
schedulerEventListenerWrapper.setGroupName(groupName)
JetTestUtils.navigationMetadata("idea/testData/quickfix/autoImports/indexCallExtensionImportSetOnNoOperatorWarning.test")
Sets.union(new HashSet<>(a.getPropertyKeys()),new HashSet<>(b.getPropertyKeys()))
IccUtils.gsmBcdByteToInt((byte)0x8c)
VERSION=27
lang.length() > 2
position.offset(mLeft,mRight)
getClass().getResource("porterTestData.zip").getFile()
protected FBTree getCurrentTree(){   return myCurrentTree; } 
message.isEphemeral()
WikiTestUtil.addPage(TestPropsValues.getUserId(),node.getNodeId(),ServiceTestUtil.randomString(),ServiceTestUtil.randomString(),true,serviceContext)
Messages.showYesNoDialog(project,msg,ReportMessages.ERROR_REPORT,Messages.getErrorIcon())
Exception exception
getOccurrence() < count
mDuration >= 0
config.getOrcMaxBufferSize()
info.getDeviceIdForPhone(slotId)
data.getAvatar() != null
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
Collections.emptyList()
!includeGlobalTemplates
config.getReadOnlyBackups()
origin < other
pathname.getAbsolutePath()
namespaceReverseRouter=false
ActivityManager.getService().handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"isAppInactive",null)
target.setField(0,val2)
mySynchronousRefreshCount == 0
new Paint(Paint.ANTI_ALIAS_FLAG)
mDarkIntensity == DARK_INTENSITY_NOT_SET
checkEmpty(className,EMPTY_STRING_MSG)
resultSetView.getControl()
op.get("address").set("host",host)
currentTx.preConcatenate(matrixTx)
_buildTemplateWithGradle("service-wrapper","wrapper-dependency-management","--service","com.liferay.portal.kernel.service.UserLocalServiceWrapper","--dependency-management-enabled","true")
@Child private OptimizedDirectCallNode child=(OptimizedDirectCallNode)runtime.createDirectCallNode(innerTarget); 
receiver.receive(this,activeCorrelationId)
sTestCaseCounter == 1
fluidOil.getBlockID()
position < firstPos
BitmapUtils.isVideo(mFile)
!getDatabaseTypeEnvironment().isEnabled() && !isExecuted()
new MediaController(token)
lvl != null
publisher.publishWanReplicationUpdate(name,view)
odi.release()
LocalMetricRegistry localRegistry
mNotificationsUtilsWrapper.mapJsonToFormattablbeContent(bodyArray.getJSONObject(i))
psiClass != null
mInfo != null
Long.valueOf(strings[i])
counter >= max
return mAppearingDuration; 
mWindowingMode == WINDOWING_MODE_PINNED
new ArrayList<>()
this.constraints.updateFromFactHandle(handle)
imageView.setBackgroundDrawable(drawable)
Registry.is("ide.hide.excluded.files")
params.getSimulatePlatformVersion()
new FtrlDelta(false,alpha)
MAX_PERCENT_DIFFERENCE=0.1
_width=version
assertEquals(ImageRequest.DEFAULT_IMAGE_BACKOFF_MULT,2f)
esVersion.after(Version.V_5_3_0_UNRELEASED)
EvaluationResult<ActionLookupValue>
getConnectionAddOperation(name,outboundSocketBindingRef,address)
out.getVersion().after(Version.V_5_3_0_UNRELEASED)
new MessageHeaderAccesssor(originalMessage)
REGISTER_BG_SETTINGS=true
ConstantNode.forLong(config.logOfHRGrainBytes)
