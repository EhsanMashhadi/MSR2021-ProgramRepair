strategiesBuilder::messageReader
mNwService.getInterfaceConfig(mInterfaceName)
UNPINNED=0x7FFFFFFF
layout.isPublicLayout() || SitesUtil.isUserGroupLayoutSetViewable(permissionChecker,layout.getGroup())
new LocalTachyonClusterResource(Constants.GB,Constants.KB,BLOCK_SIZE)
new KBArticleTitleException()
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",nc,newNetwork.networkCapabilities)
len % (1024 * 1024) / 10
mState.action == ACTION_OPEN_TREE
selenium.isVisible("link=Control Panel")
BodyExtractor<Mono<MultiValueMap<String,String>>,ServerHttpRequest>
applyCurrentState()
/**   * This is  {@link CasWebflowClientSessionContextConfigurationTests}.  * @author Misagh Moayyed  * @since 5.0.0  */ public class CasWebflowClientSessionContextConfigurationTests extends BaseCasWebflowSessionContextConfigurationTests {   @Autowired @Qualifier("loginFlowExecutor") private FlowExecutor flowExecutorViaClientFlowExecution;   @Override public FlowExecutor getFlowExecutor(){     return this.flowExecutorViaClientFlowExecution;   } } 
child.getProperties().isNodePartitionedOn(partitioningRequirement)
timeout=10_000L
jdbcTemplate.queryForInt("SELECT COUNT(0) FROM " + tableName)
createUrl(Url.append(myRepositoryRoot,originUrl))
value.length() > MAX_LENGTH
MonitoringPortletImpl.isMonitoringPortletRenderRequest()
@Overide
params[2]
logger.warn("Cannot update channel for group member ({})",e.getMessage())
Long.valueOf(delay)
completion.switchOnError(ex -> handler.handle(exchange,ex))
HttpEntity.class.equals(parameterType)
logger.warn("Niko Home Control: error sending message, trying to restart communication",Thread.currentThread().getId())
assertClusterSize(2,nodes[0])
logger.error("{}",general)
IdentityHashMap<JsName,JsFunction>
type.getConstructor()
Slog.wtfStack(TAG,"Service done with onDestroy, but executeNesting=" + r.executeNesting + ": "+ r)
ams.mContext.createPackageContext(appInfo.packageName,0)
CacheService.instance.keyCache.get(key)
IntentFactory.create(mContext,type,text)
new GroupDialog(frame,panel,oldGroup)
m.getPredsSize()
1000L * FILES_BYTES
new StatusText(){   @Override protected boolean isStatusVisible(){     return UIUtil.uiChildren(JBPanelWithEmptyText.this).filter(Component::isVisible).isEmpty();   } } 
contextBuilder.allowNativeAccess(allow_create_thread)
this == RUNNING
method.getClass()
AnalyticsDataFactory.getAnalyticsData()
left.getFieldName().equals(right.getFieldName())
new IndexingStats.Stats(3L,71L,0L,0L,0L,0L,0L,true,302L)
AccountResource.class
RESULT_TIMEOUT=1500
input.getPosition()
cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length())
assertFalse(jmsTemplate.isPubSubDomain())
beans.add(0,bean)
new IllegalArgumentException("Legacy advertisement can't be connectable and non-scannable")
id=48
Float.parseFloat(position.getChildByName("Y").getText())
ap.getSsid()
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
assertEquals(fc,fc2)
synchronized (mAccounts) {   writeStatisticsLocked(); } 
random.randomValues().nextTextArray()
mHorizontals == null
layer.type() == Layer.Type.CONVOLUTIONAL
parent instanceof AppWidgetHostView
IllegalStateException e
Pair<Class,Accessor>
id=15804
Collection<Fragment>
arguments[2]
newDefaultSubIdObj.equals(mDefaultSubId)
Thread.sleep(500)
artifact.getName().getExtension()
assertTrue(storer().shouldProcess(curi1))
pushExecutor.submit(new NamedRunnable("OkHttp %s Push Request[%s]",hostName,streamId){   @Override public void execute(){     boolean cancel=pushObserver.onRequest(streamId,requestHeaders);     try {       if (cancel) {         frameWriter.rstStream(streamId,ErrorCode.CANCEL); synchronized (SpdyConnection.this) {           currentPushRequests.remove(streamId);         }       }     }  catch (    IOException ignored) {     }   } } )
@Override public ClassExpression visitBuiltInTypePrmrAlt(BuiltInTypePrmrAltContext ctx){   return configureAST(this.visitBuiltInType(ctx.builtInType()),ctx); } 
info == null
type.getKind()
/**   * Creates an empty struct with the given location.   */ public Info createEmpty(Location loc){   return SkylarkInfo.createSchemaless(this,ImmutableMap.of(),loc); } 
ConcurrentHashMap<String,Object>
ic.readInt("zFarOverride",0)
new DeadCodeEliminationPhase(OPTIONAL)
ShrinkWrap.create(WebArchive.class).addClass(MyBatchlet.class).addAsWebInfResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")).addAsManifestResource("META-INF/batch-jobs/myJob.xml","batch-jobs/myJob.xml")
final GeoPoint geoPoint
myConfiguration.setInt(Generator.GENERATOR_MAX_COUNT,1)
current > 0
StringBuffer sb=new StringBuffer(); 
inUseByte != Record.IN_USE.byteValue()
myFixture.testCompletionVariants(getTestName(true) + ".go","bar","break","const","continue","defer","for","go","if","return","fallthrough","goto","select","switch","var","struct","map")
mService.saveConfiguration(mContext.getOpPackageName())
new CheckboxTreeViewer(columnsGroup,style)
return false; 
autoCommit != conn.getAutoCommit()
serviceDataUuid == null
new PriorityTieredBrokerSelectorStrategy(1,1)
context.getSystemService(Context.WINDOW_SERVICE)
WebUtils.toHttp(response).setStatus(HttpServletResponse.SC_UNAUTHORIZED)
"Error resetting interface " + mInterfaceName + ", :"+ e
@Override public ModelBuilderJobV3 fillFromImpl(ModelBuilder builder){   super.fillFromImpl((Job)builder);   this.messages=new ValidationMessageBase[builder._messages.length];   int i=0;   for (  ModelBuilder.ValidationMessage vm : builder._messages) {     this.messages[i++]=new ValidationMessageV3().fillFromImpl(vm);   }   ValidationMessageBase.mapValidationMessageFieldNames(this.messages,new String[]{"_train","_valid"},new String[]{"training_frame","validation_frame"});   this.error_count=builder.error_count();   ModelBuilderSchema s=(ModelBuilderSchema)Schema.schema(this.getSchemaVersion(),builder).fillFromImpl(builder);   parameters=s.parameters;   return this; } 
args.length == 2
GL11.glTexParameter(target,pname,params)
selenium.isVisible("link=Control Panel")
case NORMAL: 
log.info("Performing lookup: %s --> %s",nodeIds,retVal)
selenium.isVisible("link=Control Panel")
addButton.setActionCommand(ADD_INCLUDE)
warningCompilationClause.withWarningContaining("@org.neo4j.procedure.Context usage warning: found unsupported restricted type " + "<org.neo4j.server.security.enterprise.log.SecurityLog> on EnterpriseProcedure#securityLog.\n" + "  The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\n"+ "  You can ignore this warning by passing the option -AIgnoreContextWarnings to the Java compiler").in(sproc).onLine(39)
mController.setRingerMode(AudioManager.RINGER_MODE_NORMAL,true)
event.getY()
this.route(request).map(RouterFunctions::cast).otherwiseIfEmpty(Mono.defer(() -> other.route(request).map(RouterFunctions::cast)))
newDefaultSubIdObj.equals(mDefaultSubId)
delimiterText != null
mMessageList.getId()
new IndexingStats.Stats(0L,0L,0L,0L,0L,0L,0L,true,randomLong())
selenium.isVisible("link=Control Panel")
assertEquals(3,map2.keySet().size())
private void speedOtherPlayers(final Server server,final CommandSender sender,final boolean isFly,final boolean isBypass,final float speed,final String name) throws NotEnoughArgumentsException {   boolean skipHidden=sender instanceof Player && !ess.getUser(sender).isAuthorized("essentials.vanish.interact");   boolean foundUser=false;   final List<Player> matchedPlayers=server.matchPlayer(name);   for (  Player matchPlayer : matchedPlayers) {     final User player=ess.getUser(matchPlayer);     if (skipHidden && player.isHidden()) {       continue;     }     foundUser=true;     if (isFly) {       matchPlayer.setFlySpeed(getRealMoveSpeed(speed,isFly,isBypass));       sender.sendMessage(_("moveSpeed",_("flying"),speed,matchPlayer.getDisplayName()));     }  else {       matchPlayer.setWalkSpeed(getRealMoveSpeed(speed,isFly,isBypass));       sender.sendMessage(_("moveSpeed",_("walking"),speed,matchPlayer.getDisplayName()));     }   }   if (!foundUser) {     throw new NotEnoughArgumentsException(_("playerNotFound"));   } } 
temporaryFolder.getRoot()
mAttachInfo == null
Long.valueOf(str)
entry != null
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=5
selenium.isVisible("link=Control Panel")
max=20
resolveExecutableType(child,targetType)
DumpUtils.checkDumpPermission(mContext,TAG,pw)
i != 0 || j != 0
loaded.getLoaded().getConstructor()
null != m_isJUnit
warningBytes > limitBytes
response.sendError(statusCode)
checkPojoMetaClass()
row.getTable().remove(row.getIndex())
JBIterable.of(getSelectedValuesList())
mInterpolator == null
return 54; 
(short)suggestions.size() > max_results
params.getSimulatePlatformVersion()
are("resource1-reflections.xml","resource2-reflections.xml","testModel-reflections.xml")
selenium.isVisible("link=Control Panel")
frameCount < 1
Timber.e("Creating SAVING_DIALOG")
assertMockEndpointsSatisifed()
portletDataContext.addReferenceElement(entityStagedModel,entityElement,layout,PortletDataContext.REFERENCE_TYPE_DEPENDENCY,true)
TestPackage.foo("",10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
MAX_PERCENT_DIFFERENCE=0.1
counter >= max
runner.run(1,true)
synchronized (mAccounts) {   writeStatisticsLocked(); } 
metadata.addWhere(new BooleanBuilder())
mAppToken.hasContentToDisplay()
selenium.isVisible("link=Control Panel")
setNumber(String.valueOf(integerPart))
nextOption()
/**   * Tests for  {@link Es6SortedDependencies}  */ public class Es6SortedDependenciesTest extends SortedDependenciesTest {   @Override public SortedDependencies<SimpleDependencyInfo> createSortedDependencies(  List<SimpleDependencyInfo> shuffled) throws CircularDependencyException {     return new Es6SortedDependencies<>(shuffled);   }   @Override public boolean handlesCycles(){     return true;   } } 
IT0000Person person=new IT0000Person(); 
Manager.this.readyState == ReadyState.OPEN
getDialog()
activity.getMyApplication().getSettings().MAP_EMPTY_STATE_ENABLED
group.setVariables(variables)
StyleableProperty<Paint>
eps(otherArr)
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
id=15858
previousResultRsmSet.getLast()
sr0.getValue().f1
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
deadline < now
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
endTrack("main")
(Long)resultList
this.contactTabsTable.put(contact.getMetaUID(),currentChatPanel)
myCache1.get("myKey1").getValue()
dest.writeLong(mSubId)
USE_DISPLAY_LIST_PROPERTIES=true
Object edge
name.isEmpty()
result.addEnchantment(enchantment,(Integer)entry.getValue())
activity == null
new File(fileName)
Boolean.valueOf(notification.getFieldValue("isNewAlert"))
DISMISS_TO_VIEW_RATIO_LIMIT=.8
new DefaultCompatibilityCheckResult<Object>(candidate,requested)
SamplingProfiler.newThreadGroupTheadSet(group)
cursor.getString(COLUMN_NAME)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
selenium.isVisible("link=Control Panel")
pane.getLeftComponent()
host.setHeaderView(this)
out.getVersion().after(Version.V_5_3_0_UNRELEASED)
LOGGER.lifecycle(msg.apply())
new LightweightThread(null,new Merge2Test())
Arrays.asList(MimeTypes.VIDEO_MP4,MimeTypes.VIDEO_WEBM,MimeTypes.VIDEO_H263,MimeTypes.VIDEO_MPEG,MimeTypes.AUDIO_MP4,MimeTypes.AUDIO_MPEG)
dockedBounds.left - adjustment
DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
vmHook.step(prg,op)
Exception e
startUnicastCluster(3,new int[]{0},-1)
meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM)
final WebPageDetail wd=detailIterator.next(); 
PROPS.load(is)
fromRegistries(codecRegistry,fromProviders(provider))
mScrollView.setVisibility(View.VISIBLE)
insets.left == 0
assertEquals(4,body.size())
Exception e
Setting.intSetting("indices.queries.cache.count",10000,1,Property.NodeScope)
stripFilter.skipWhiteSpace(charBuffer,stringWriter)
POSITVE_Y(2)
!"POST".equals(connection.getRequestMethod()) || !"PUT".equals(connection.getRequestMethod())
new Duration(2,SECONDS)
ATLAS_MAP_ENTRY_FIELD_COUNT=4
selenium.isVisible("link=Control Panel")
LOGGER.debug("Error with XML parser configuration",e1)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(statement).description(message)
dest.writeLong(mSubId)
lp.onResolveLayoutDirection(layoutDirection)
uncollectedPointCreater.createUnCollectedPoint(timestamp)
new Rect(left,top,bottom,right)
options.setTaskOverlay(true,false)
emptyView.getImportantForAccessibility() == IMPORTANT_FOR_ACCESSIBILITY_AUTO
r.thread != null
getNonCompilablePath("InputDefaultConfig.java")
prop.getParamName()
new BasicAWSSessionCredentials(accessKey,secretKey,sessionToken)
Thread.sleep(100)
Call<L>
cs[c].set0(r,(long)((_createFrame.integer_range + 1) * (1 - 2 * rng.nextDouble())))
@NonNull
remainingAmount != null
ENERGY_COUNTER=4
log.warn("Error loading known hosts",e)
buff.remaining()
!someAsk
mHorizontals == null
SamplingProfiler.newThreadGroupTheadSet(group)
in.readStringNull(8)
expression.getParent()
responseString(p)
moveInputMethodWindowsIfNeededLocked(false)
httpResponseCode == 204
mPm.queryIntentActivities(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0))
T
checkPojoMetaClass()
formController.getEventLogger().logEvent(EventLogger.EventTypes.BACKGROUND_LOCATION_ENABLED,0,null,true)
maxThreads / 2
Log_OC.wtf(TAG,"Trying to share a NULL OCFile")
mNotificationsUtilsWrapper.mapJsonToFormattablbeContent(bodyArray.getJSONObject(i))
qs[0]
Slog.e(TAG,"couldn't inflate view for notification " + ident)
new MockNode(settings.build(),false,Version.CURRENT,Arrays.asList(MarvelPlugin.class,LicensePlugin.class))
Instant.ofEpochSecond(millis)
Preconditions.checkNotNull(options)
Thread.sleep(5000)
-1175322192
engine.execute(query).toString()
new ReflectionsException("could not create class object from file " + file.getRelativePath())
Util.SDK_INT >= 24
stat.st_ctim.tv_nsec.get()
startActivityAsUser(in,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
Log.wtf(TAG,"This will become an error",ex)
getTestName(true)
floatBuffer.clear()
Boolean.valueOf(System.getProperty("cassandra.consistent.rangemovement","true"))
LocationManager.GPS_PROVIDER.equals(name) || LocationManager.NETWORK_PROVIDER.equals(name)
mGpsListener != null
CamcorderProfile.hasProfile(CamcorderProfile.QUALITY_LOW)
type.getConstructor()
session == null
builder.getNotification()
Assert.assertEquals(configs.size(),1)
metastore.getHostText()
assertEquals("Range for response status value " + result.getResponse().getStatus(),getHttpStatusSeries(result),HttpStatus.Series.CLIENT_ERROR)
new IllegalArgumentException("Remote push url " + url + " is invalid. ")
dbStat.setString(2,table.getName())
new ServerPartition(partitionKeyNew,RowType.T_DOUBLE_DENSE)
IllegalArgumentException e=expectThrows(IllegalArgumentException.class,() -> {   try (XContentBuilder builder=XContentBuilder.builder(randomFrom(XContentType.values()).xContent())){     builder.startObject();     builder.field("status",randomFrom(RestStatus.values()));     builder.endObject();     try (XContentParser parser=createParser(builder.contentType().xContent(),builder.bytes())){       BytesRestResponse.errorFromXContent(parser);     }    }  } ); 
failed(x)
+distDir.getAbsolutePath()
Collection<PostgreTableReal>
Thread.sleep(5000)
Stream.of(null)
tag.setLabelPosition("top")
mStartActivity.task == null
activityNdx < topActivityNdx
InsertionSort.sort(sorted.clone())
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
destinationMap.removeAll(destination)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
return false; 
Integer value=iterator.next(); 
users.get(i)
overrideAllAssetCategoryIds != null
parser.getText()
selenium.isVisible("link=Control Panel")
mRvc == null
libraryOrderEntry.isValid()
SSLParametersImpl.getDefaultTrustManager()
from >= to
trackMotionScroll(delta,delta)
Assert.assertEquals(122L,ownerCapsuleNew.getNetUsage())
UnsupportedOperationException.class
toPatterns("gradle-core","slf4j-api","logback-classic","logback-core","jul-to-slf4j")
head.equals("ntpath") | head.equals("posixpath")
warn(Log.IGNORED,ignored)
XContentType.JSON.restContentType()
mDrawable != null
pm.performDexOpt(pkg,null,false)
Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS))
return true; 
TypeSpec.parse(builder,true)
Math.min(1000L,connectionTimeout)
regUser * userWeight * trusteeFactorValue* trusteeFactorValue
StagingServiceHttp.prepareStagingRequest(httpPrincipal,remoteGroupId,checksum)
rematchAllNetworksAndRequests(networkAgent,oldScore,NascentState.NOT_JUST_VALIDATED)
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
TestSuiteEnvironment.getServerAddress()
new IllegalArgumentException("Legacy advertising can't include TX power level in header")
new TextPaint()
actionBuilder.setStdout(BuildEventStreamProtos.File.newBuilder().setName("stderr").setUri(pathConverter.apply(stderr)).build())
sku.getName()
curr.end <= intervals[i].start
CacheFactory.setMaxSizeProperty(getName(),maxLifetime)
Sets.union(new HashSet<>(a.getPropertyKeys()),new HashSet<>(b.getPropertyKeys()))
lock.isLocked()
new AlertDialog.Builder(this,mThemeId)
new AndroidDownloader().downloadAsString(fileListURL)
selenium.isVisible("link=Control Panel")
new KillableColoredProcessHandler(commandLine)
r.curApp != null
inCoolableTicks=20
os.unsafeByteArray()
fileEncoding == null
getIntent().getStringArrayExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
mBatteryStatus=BATTERY_STATUS_FULL
countNewlines(headerFragment + lhsFragment + thenFragment) + 1
timeout(1000)
checkPlanDoNotMatch(exchange(),"Expected rules to be fired before 'AddExchanges' optimizer")
scheme.equalsIgnoreCase("tel") || scheme.equalsIgnoreCase("sip") || scheme.equalsIgnoreCase("sms")|| scheme.equalsIgnoreCase("smsto")|| scheme.equalsIgnoreCase("mailto")
mLastAnnouncementWasQuickSettings && !mTracking
entity instanceof ProcessDefinition
parser.parse("-u",username,"-p",password,"-U",url,"--path.conf",conf.toString())
DBG=false
dht.context()
String.format("User [%s] doesn't exist",username)
m1.getName().equals("getAttributes") & !m1.getName().equals(m2.getName())
callbacks.onImageLoadingFailed()
calculateRoute(lastFixedLocation,finalLocation,currentGPXRoute)
configurations.create(Dependency.DEFAULT_CONFIGURATION)
selenium.isVisible("link=Control Panel")
device == AudioSystem.DEVICE_OUT_HDMI
isCreated()
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
am.getRecentTasksForUser(MAX_TASKS,ActivityManager.RECENT_IGNORE_UNAVAILABLE,UserHandle.USER_CURRENT)
!exifIFD0Directory.containsTag(ExifIFD0Directory.TAG_ORIENTATION)
MAX_PERCENT_DIFFERENCE=0.1
vel < mFlingGestureMinDistPx
new QuickAdapter(PullToRefreshUseActivity.this,PAGE_SIZE)
DeprecationLogger.nagUser("<someIdeTask>.withXml is deprecated! Moved to the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
clusterType == UNKNOWN
Double rate=(Double)map.get(MediaFormat.KEY_FRAME_RATE); 
model.getCurrentResult() != null
new TrustException("DERIVED_KEY_ERROR",LOG,e)
GL20.glUniform3(location,toIntBuffer(v,offset,count * 3))
@Override public final DivideBy or(String sql){   return or(condition(sql)); } 
Map<Integer,Object>
XmlPullParserFactory.newInstance()
builder.timeValueField(Field.TIMEOUT.getPreferredName(),Field.TIMEOUT_HUMAN.getPreferredName(),timeout)
classFile.matcher(file.getName()).find()
propertyValue.toString().matches(regex)
"Stream " + importer
mContext.startActivity(intent)
HttpConnectionParams.setConnectionTimeout(httpParams,socketTimout)
Native.getStringEncoding(classes[i])
duration.getMinutes()
selenium.isVisible("link=Control Panel")
replicaEngine.refresh("test",true)
Long.valueOf(val)
super.getSecondString()
HashSet<>
selenium.isVisible("link=Control Panel")
binding.getEntityAttribute() != null && binding.getEntityAttribute().getName().equals(binding.getMetaAttribute().getName())
selenium.isVisible("link=Control Panel")
getApprovalParameters()
myCache1.get("myKey1").getValue()
CharSequence message
terminal.receivedInput(event.getInputText())
httpClient.getSocketMiddleware()
varX("listener")
result != null
fullJid.split("/")
/**   * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception.  */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException {   throw new RuntimeException(new InputMismatchException(recognizer)); } 
telephony.getDataNetworkTypeForSubscriber(subId)
InitialTutorialPrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
DATABASE_VERSION=64
Screen.dp(34)
4 * data.length
new StringBuilder(730)
layerInput.slices()
labels != null
StringUtils.isBlank(content)
context.getCompileScope()
appOps.noteOpNoThrow(AppOpsManager.OP_GET_USAGE_STATS,uid,pkg)
satellite.isCurrentWindowSatellite()
grantRuntimePermissionsLPw(pkg,permissions,false,permissionGrant.fixed,userId)
mValues[7]
JsonProcessingException ex
info.getOldIndex() != -1
mNumOps.getOpsAdded() >= opsAllowed
Object[]
resources.getDimension(R.dimen.close_handle_height)
SAMPLE_RATE_HZ_MAX=48000
cCurrentVersion=408
transportError.withDescription("\n" + headers.toString())
1
DefaultCompactionWriter.class
crashInfo.durationMillis != -1
PsiUtil.resultOfExpressionUsed(grAssignmentExpression)
onDetachedFromWindows()
mAllowGeneratedReplies=false
setServiceForegroundInnerLocked(r,callingUid,notification,0)
result.getReceipt().getEnergyUsageTotal()
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
mHandler.removeCallbacks(pae)
query.getInt(7)
activity == null
parent != null
-1
Utils.class
oldCacheEntry != null
mFlexItem.setAlignSelf(AlignSelf.AUTO)
mMenu.getVisibleItems()
takenProbability=0.5
!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant")
Log_OC.wtf(TAG,"Incorrect action sent " + intent.getAction())
port <= 0
framework.getBroadcasterFactory().lookup(a.broadcaster(),true)
out.getVersion().after(Version.V_5_3_0_UNRELEASED)
new UpdateDeParser(expressionDeParser,buffer)
MutableLongValue reduceResult
method.getName()
buildData.getBuildURL()
nextRenderId=36
ThemeUtils.primaryColor()
getRoot()
stats.getLastUpdateTime() > lastUpdateTime
finish()
node.getName().getName()
SAVE_TRACK_TO_GPX.setModeDefaultValue(ApplicationMode.DEFAULT,false)
Double.doubleToLongBits(v)
tableHasColumn(oldTableName,"articleId")
PageFlagsWebUpgrade.class
t.getValue()
logger.debug("NODE {}: Device discovery resolved to thingType {}",foundProduct.getThingTypeUID())
String text=status.getMessage(); 
logger.warn(x.getClass() + ": " + x.getMessage())
editor.getColorsScheme().getAttributes(diffAttributeKey).getBackgroundColor()
CharacterHelper.charType(chars.charAt(pos),skipPunc) != CharacterHelper.charType(chars.charAt(pos + 1),skipPunc)
ThingFactory.class
/**   * Returns the next pseudorandom  {@link ArrayValue} of time elements.<p> The length of arrays will be governed by  {@link Configuration#arrayMinLength()} and{@link Configuration#arrayMaxLength()}  * @return the next pseudorandom {@link ArrayValue} of time elements.  */ public ArrayValue nextTimeArray(){   OffsetTime[] array=nextTimeArrayRaw(minArray(),maxArray());   return Values.timeArray(array); } 
getName().equalsIgnoreCase("LONG") || getName().equalsIgnoreCase("NCLOB")
verify(mWifiService).stopLocalOnlyHotspot()
TEST_TIMEOUT_MS=200
doCast(returnType)
new LeftTuple(new DefaultFactHandle(1,"cheese"))
Thread.sleep(2000)
selenium.isVisible("link=Control Panel")
new UnsupportedOperationException()
new Paint(Paint.ANTI_ALIAS_FLAG)
H2O.unimpl()
doc=NON_EMPTY_DOC
max() >= 32
new File(fileDialog.getFile())
VertexAttribute.Color()
usersResource == null
RuntimeException ex
settings.FAST_ROUTE_MODE.getModeValue(params.mode)
wlZipFilename.setText(dir)
mSyncStatus.get(i)
setPreference(prefs,editor,r,R.string.p_show_menu_sort,false,ifUnset)
new Error("type=" + type)
SPConstants.WSS_X509_PKI_PATH_V1_TOKEN10.equals(requiredType)
logger.error("Error getting value for expression " + expressionField.getExpression() + " "+ e.getMessage())
mSyncStatus.get(i)
synchronized (this) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
new SystemVibrator()
_wValue instanceof Integer && ((Integer)_wValue > 0)
TaskLog.captureOutAndError(command,stdout,stderr,logLength)
!dockOntopOrLeft
atCount == 1
SystemTable.setLocalHostId(hostId)
assertEquals(7.2,((Object[])result[0][0])[1])
new FormAttachment(20,0)
!DocumentUtil.isInsideSurrogatePair(myEditor.getDocument(),startOffset)
httpClient.getSocketMiddleware()
a.getFloat(attr,0)
logger.getParent()
increment != 1
mEnterTransformation.printShortString(pw)
info.getName()
agentInstances.findAgent(uuid)
manyToOne.setLazy(false)
Long.valueOf(val)
GceInstancesServiceMock.class
Thread.sleep(5000)
Thread.sleep(5000)
messageType.set(message2,"message","Hello World")
Assert.assertFalse(content.contains(GroupConstants.CONTROL_PANEL_FRIENDLY_URL))
expirationTime * 1000
Trans == TRANSPOSE
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
channelIdle(ctx,IdleState.ALL_IDLE,lastReadTime)
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
Log.wtf(TAG,"This will become an error",ex)
viewFlow.getWidth()
Math.min(mXAxis.mAxisMinimum,pos.y)
Messages.MESSAGES.pathParameterNotProvided(param)
winAnimator.prepareSurfaceLocked(recoveringMemory)
Assert.assertEquals(modelAdditionCounters.toString(),4,modelAdditionCounters.size())
assertEquals(1690,res.getWeight(1,2),10)
dockedBounds.bottom + adjustment
new byte[13]
ISOChronology.getInstance()
c == 10
!useSuper && !isStatic && GroovyCategorySupport.hasCategoryInCurrentThread()
loaded.getLoaded().getConstructor()
param.slices()
selenium.waitForText("//li[@title='Asset Publisher']/p/a","Add")
licensee.collectionEnabled()
mCurrIconRow != null & mCurrIconRow.isVisible()
BLOCK_LIGHT_SUN_POW=0.8f
if (DEBUG_VOL) {   Log.d(TAG,"onSetA2dpSinkConnectionState btDevice=" + btDevice + "state="+ state); } 
Trans == TRANSPOSE
!cached && node.isFiltered()
IndexerRegistryUtil.getIndexer(className)
IOException e
resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,DOUBLE,VARCHAR)
ignoreUnknown=false
file.getFileName()
selenium.isVisible("link=Control Panel")
tw.release()
contentHolder.getChildren().add(content)
loader.stopInternal()
idAnnotation != null
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
LOG.error("Detected JMX protocol is null for clusterName = " + clusterName + ", componentName = "+ componentName)
Throwable e
MonitoringPortletImpl.setMonitoringPortletEventRequest(monitoringPortletEventRequest)
POOL_LIMIT=12
mSpinner != null
Exception e
(byte)0xff
selenium.isVisible("link=Control Panel")
testerAnnotation.getClass()
currentCall == callId
ScanResult.is24GHz(frequency)
@Override public Appendable append(CharSequence csq){   if (csq == null) {     return append(NULL_STRING);   }   return append(csq,0,csq.length()); } 
endTrack("main")
new SQLException(e.getMessage())
AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))
PaginationTestUtil.of(10,1)
Math.round((double)(powerQuery[out] * totalPowerContained) / totalPowerQuery)
javaVersion < 9
in.getLocalName()
blog.getRemoteBlogId()
list != null
new Instant(15L)
note.get_id() == 0
mAttachInfo == null
value.length() > MAX_LENGTH
computator.getContentRectMinusAxesMargins()
SYNC_OK=0x0
new Dependency("org.grails","grails-project-api",grailsVersion,true)
logError(lcurly,"lcurly",lcurlyPos)
RunTests.class
mNwService.getInterfaceConfig(mInterfaceName)
mask.size()
OverrideResolver.generateOverridesInFunctionGroup(methodName,null,functionsFromSupertypes,functionsFromCurrent,classDescriptor,null,new OverrideResolver.DescriptorSink(){   @Override public void addToScope(  @NotNull CallableMemberDescriptor fakeOverride){     functions.add((FunctionDescriptor)fakeOverride);   }   @Override public void conflict(  @NotNull CallableMemberDescriptor fromSuper,  @NotNull CallableMemberDescriptor fromCurrent){   } } )
MavenBuild.create(new File("projects/struts-1.3.9-diet/pom.xml")).setCleanPackageSonarGoals()
repositoryEntry != null
IDHandler.getBounds(RelationCategory.PROPERTY)
TokenSet.create(JavaTokenType.C_STYLE_COMMENT,JavaTokenType.END_OF_LINE_COMMENT,TokenType.WHITE_SPACE)
((SQLDataSource)dataSource).getSQLDialect().storesQuotedCase()
left.getQualifierLength()
Float.class
deltaY > 0
metadata.getFaceRectangles()
relatedProduct.getProduct()
getResource(TEST_AUTOCONFIG_FILE,myClassLoader,updateStatus)
loaded.getLoaded().getConstructor()
selenium.isVisible("link=Control Panel")
new TextField<String>(TopicConfiguration.TOPIC_NAME_KEY)
doSubstitute(TypeSubstitutor.EMPTY,newOwner,modality,visibility,isOperator(),isInfix(),isExternal(),isInline(),isTailrec(),null,copyOverrides,kind)
BinaryFunction<T>
ParamUtil.getString(uploadPortletRequest,"layoutTemplateId")
type == UNKNOWN_PARAMETER_TYPE
getSessionPool().returnObject(this)
new ShardPath(false,path,path,null,shardId)
doTest()
CHECKIN_VERSION=29
getServiceGuarded().sendMessage(subId,callingPkg,pdu,locationUrl,configOverrides,sentIntent)
bindings.get()
instruction.getHatLiteral()
TLS_RSA_WITH_3DES_EDE_CBC_SHA("DES-CBC3-SHA",KeyExchange.RSA,Authentication.RSA,Encryption.TRIPLE_DES,MessageDigest.SHA1,Protocol.SSLv3,false,EncryptionLevel.HIGH,true,168,168,"SSL_RSA_WITH_3DES_EDE_CBC_SHA")
logger.warn("Cannot play queue ({})",e.getMessage())
sender.waitForClose(500)
ctx.grid().forCache(name())
rootDependency.toBundleUrl()
ModuleIdentifier.create(moduleName)
channel.getName().equals(actualChatRoom.getIdentifier())
conceptAnswer.getConcept()
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
List<Bottom>
statusBar.setRedraw(false)
snapshotTypes != null || snapshotTypes.length > 0
new MailMessage(from,to,subject,body,true)
components.beforeEach(new Action<PlayApplicationSpec>(){   @Override public void execute(  PlayApplicationSpec playComponent){     playComponent.getSources().create("coffeeScript",CoffeeScriptSourceSet.class,new Action<CoffeeScriptSourceSet>(){       @Override public void execute(      CoffeeScriptSourceSet coffeeScriptSourceSet){         coffeeScriptSourceSet.getSource().srcDir("app/assets");         coffeeScriptSourceSet.getSource().include("**/*.coffee");       }     } );   } } )
allocator.getFlowController().prepareAction(input,activations)
javacWarning(message,null)
id=15851
String[]
field.holder().isResolved()
legacyModel.isDefined()
StringBuffer message=new StringBuffer(); 
mValues[7]
Nd4j.getDistributions().createNormal(1,0)
myDebugger.disconnect()
LIRInstructionClass<SPARCHotSpotDeoptimizeCallerOp>
config.getMaxQueryMemoryPerNode().toBytes() < maxMemory.toBytes()
listener.iterationDone(valueNet,valueIterationCount)
listeners != null
result=35
entity instanceof EntityPlayer
temp.reAddRight()
AbstractMethodError e
animation.setDuration(300l)
mRilVoiceRadioTechnology=m.getInt("dataRadioTechnology")
holder.textView.setBackground(null)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
view != null
new EnterSelectionDialog(shell,props,tablenames,Messages.getString("AccessOutputDialog.Dialog.SelectATable.Title"),Messages.getString("AccessOutputDialog.Dialog.SelectATable.Message"))
telephony.getNetworkTypeForSubscriber(subId)
BACKOFF_DISMISSAL_COUNT_ON_SWIPE_UP_SHOW=2
getDelegate().getSupportedCipherSuites()
MBCategory.class
toShortUnsafe(bytes,0)
viewGroup == null
focusable.canTakeAccessibilityFocusFromHover()
!method.getModifiers().contains(Modifier.STATIC) && method.getModifiers().contains(Modifier.ABSTRACT) && method.getParameters().isEmpty()&& method.getReturnType().getKind() != TypeKind.VOID
cctx.gridEvents().isRecordable(EVT_CACHE_OBJECT_READ)
Mono.currentContext()
terminal.receivedInput(postCreateText)
selenium.isVisible("link=Control Panel")
Integer.valueOf(taskIdStr)
this.WebView
password.startsWith("{SHA}")
mHandler.removeCallbacks(pae)
new ByteBuddy().subclass(Source.class).method(named("hello")).intercept(MethodDelegation.to(Target2.class)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
return sinkMaxBufferSize; 
win.isAnimatingLw() && appWindow && showWhenLocked
!mDownloadXtraDataPending
verify(mWifiService).stopLocalOnlyHotspot(TEST_PACKAGE_NAME)
FastMath.max(origin,num.doubleValue())
fields[i] >= 0
super.onOptionsItemSelected(item)
"Using bind address: " + publicAddress
String[] names(); 
context.getSystemService(Context.WINDOW_SERVICE)
level.equals("ERROR")
selenium.isVisible("link=Control Panel")
getFluid().getFluid().getLocalizedName()
binary.size()
mService.getWifiServiceMessenger()
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_ONLY_JOB_OUTPUT))
causeString.contains("NoSuchGroupException")
opSetIm.removeMessageListener(messageSourceService)
WordPress.getCurrentBlog().getRemoteBlogId()
mCursor.deactivate()
KBFolderServiceUtil.getFolder(getParentResourcePrimKey())
is("/home/source")
WidgetRemoteViewsServiceBinding(appWidgetId,fc)
oldOverride.removeParameter("enabled")
checkPojoMetaClass()
response.set(ROLLED_BACK)
public String getRequestCacheKey(){   return requestCacheKey; } 
assertEquals(0,dbBoys.size())
expected == double.class
new IndexWriter(indexDir,new WhitespaceAnalyzer(),true)
CharSequence message
info.getIccSerialNumberForSubscriber(subId)
bukkit.getNote()
parseJavaCodeReference(builder,true,true,false,false)
path.startsWith(FileSystemItem.HOME_PREFIX) || path.startsWith("/")
selenium.isVisible("link=Control Panel")
String value
routes.InputsResource()
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
manager.beginTransaction().remove(fragment).commit()
log.error(sm.getString("webappClassLoader.stackTrace",threadName,getStackTrace(thread)))
_start > 0
RandomDocumentPicks.randomIngestDocument(random())
mScreenBrightnessDarkConfig > mScreenBrightnessDimConfig
implement(Foo.class,MethodDelegation.to(Foo.class)).getLoaded().getConstructor()
-29
mSeekBar.setProgress(0)
public Object mapLine(FieldSet fieldSet,int lineNum){   ShippingInfo info=new ShippingInfo();   info.setShipperId(fieldSet.readString(SHIPPER_ID_COLUMN));   info.setShippingTypeId(fieldSet.readString(SHIPPING_TYPE_ID_COLUMN));   info.setShippingInfo(fieldSet.readString(ADDITIONAL_SHIPPING_INFO_COLUMN));   return info; } 
".md".equals(extension)
CodeStyleManager.getInstance(myProject).reformatTextWithContext(file,ranges)
new LeftTuple(f1)
handleActiveAutofillServiceRemoved(getChangingUserId())
dest.writeLong(mSubId)
i < rlist.size() - 1
assertCorrectionsByOrder(rule,"Rytmus","Rhythmus")
LaterInvocator.invokeLater(new Runnable(){   public void run(){     if (checkForRejectOrByPass(command,forced,result))     return;     if (myRequestFocusCmd == command) {       myRequestFocusCmd=null;       command.run().doWhenDone(new Runnable(){         public void run(){           LaterInvocator.invokeLater(new Runnable(){             public void run(){               result.setDone();             }           } );         }       } ).doWhenRejected(new Runnable(){         public void run(){           result.setRejected();         }       } );       restartIdleAlarm();       if (forced) {         myForcedFocusRequestsAlarm.addRequest(new Runnable(){           public void run(){             setLastEffectiveForcedRequest(null);           }         } ,250);       }     }  else {       rejectCommand(command,result);     }   } } )
new OptionValue<>(1000)
viewToClick != null
journalArticle.getCreateDate()
new EditorLanguage("mode/rdoc",false)
parent.getChildAdapterPosition(v)
logger.debug("Using override port of %d on client %s",clientName)
telephony.isOffhook()
c == Byte.class
element.getText()
marshallerCache().context().preloader().syncFuture().listenAsync(new CI1<IgniteInternalFuture<?>>(){   @Override public void apply(  IgniteInternalFuture<?> f){     ctx.marshallerContext().onMarshallerCacheReady(ctx);   } } )
((GrParameter)parameter).getTypeGroovy()
selenium.isVisible("link=Control Panel")
conceptToValidate.getConceptId()
interactor.startConfirmation(packageName,callback,mCommand,mArgs)
nonce.timeStamp < now
childrenExpanded ? mDividerHeight : mChildPadding
new Paint()
partialUri.toString()
!getUnwrapDescription(file).showOptionsDialog()
intent.setData(uri)
mUserManager.getUsers()
taskService.createTaskQuery().or().taskInvolvedUser("involvedUser").taskInvolvedGroups(groups)
continueUpdateBounds(RECENTS_STACK_ID)
ctTypeStr.equals(ContentType.MULTIPART_MIXED) || ctTypeStr.equals(ContentType.MULTIPART_RELATED)
context.getPackageName()
ServiceProxyFactory.newServiceTrackedInstance(PortalCapabilityLocator.class,LegacyExternalRepositoryDefiner.class,"_portalCapabilityLocator",false)
Math.min(desired,height)
JSError.make(boundFunNode,GOOG_BIND_EXPECTS_FUNCTION)
new Paint(Paint.ANTI_ALIAS_FLAG)
getTestName(false)
!mIsAttached
host1.getAddress()
mRepeat > 1
primitiveType != null
waitUntilElement(feedbackText,"Feedback message should be present").is().present()
JSError.make(declNode,TypeCheck.CONFLICTING_SHAPE_TYPE,className,"dict","dict")
getLog().error("register druid-driver mbean error",ex)
new SimplexNoise()
IndexReader.open(dir,true)
new ProtoFile("descriptor.proto",null,NO_STRINGS,Arrays.asList("src/test/resources/unittest_import.proto"),NO_TYPES,NO_SERVICES,map(),NO_EXTEND_DECLARATIONs)
mService.disconnect()
parent == null
new IllegalArgumentException("Advertising can't be both connectable and scannable")
handles[i]
Uri[]
clampScreenBrightness(mLastUserSetScreenBrightness)
super(maxHits); 
HashMap<Type,CstType>
checkPojoMetaClass()
assertEquals(2,historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size())
user == null
HighlightInfo.newHighlightInfo(HighlightInfoType.WARNING).range(range(element)).description(message)
dest.writeLong(mSubId)
JMeterUtils.getPropDefault("httpclient4.validate_after_inactivity",2000)
Log.e(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
ActivityManager.handleIncomingUser(Binder.getCallingPid(),Binder.getCallingUid(),userId,true,true,"cancelNotificationWithTag",pkg)
proxyHTTPServer.setText(Preferences.get("proxy.https.server"))
mMat[9]
mSeekBar.setProgress(mLastProgress > -1 ? mLastProgress : mOriginalStreamVolume)
for (VirtualFile root : roots) {   Color color;   if (i >= ROOT_COLORS.length) {     color=getDefaultRootColor();   }  else {     color=ROOT_COLORS[i];     i++;   }   myRoots2Colors.put(root,color); } 
Looper.prepare()
awsClient.deleteLaunchConfiguration(resource.getId())
contact.GetWorldManifold()
activityNdx < topActivityNdx
old + 8
new IllegalArgumentException("Advertising can't be both connectable and anonymous")
mapExprStmt(node)
requestURI.contains(excludedPath)
diagnostic.getCode().equals("compiler.err.cant.access")
SCAN_STATUS_COMPLETE=1
latch.await(1000,TimeUnit.MILLISECONDS)
Validator.isNull(modified)
mCameraUser.submitRequest(request,false)
assertEquals(800,animator.getFrame())
logger.info(name)
mRotation != RotationUtils.getExactRotation(mContext)
new RuntimeException(e.getMessage())
String prefix
mWorkerId + BASE_FILE_NUMBER
scheduleRemoveStartingWindow(wtoken)
new ArrayList<>()
logger.warn("Cannot clear queue ({})",e.getMessage())
moduleFileIndex.isInTestSourceContent(fileOrDir)
row(null,null,null,null,null,null,null,null,null,null,null,null,null,null)
texCoords.put(updateNormalArray,offset,size)
logger.getLoggedInfo().startsWith("This stubbing was never used")
GridCacheAdapter<K,V>
selenium.isVisible("link=Control Panel")
textDelimiterLeading.getSelection()
chargeUAh > 0
responseHelper.invokeResponse(callback)
GL20.glUniform3(location,toIntBuffer(v,offset,count * 3))
bitmap == null
mappers.mapper().searchAnalyzer()
tracesFile.mkdirs()
deploymentInfo.setDefaultEncoding(mergedMetaData.getDefaultEncoding())
new UnsupportedOperationException()
clipItem.getText()
currentFuel == null
Util.isSmsTopupSupported(activity,link)
result.getSqlType()
TelephonyManager.getDefault().getPhoneType()
Pattern.compile(regexp)
HashSet<String>
requestLine.split("\\s")
x2 - x2
mRotation != RotationUtils.getExactRotation(mContext)
Integer.valueOf(options.getMaxKeys())
users.get(i)
libsDir() != null
random.nextBoolean()
res.getString(R.string.data_usage_warning_body,Formatter.formatFileSize(mContext,policy.warningBytes))
r.curApp != null
selenium.isVisible("link=Control Panel")
Integer.parseInt(compressionLevel)
mTempDate.get(Calendar.DAY_OF_YEAR) != mMaxDate.get(Calendar.DAY_OF_YEAR)
SCAN_STATUS_COMPLETE=1
HashMap<ShardId,ShardRestoreStatus>
new GZIPOutputStream(outputStream,true)
synchronized (this) {   if (proc.executingServices.size() == 0 || proc.thread == null) {     return;   }   long maxTime=SystemClock.uptimeMillis() - (proc.execServicesFg ? SERVICE_TIMEOUT : SERVICE_BACKGROUND_TIMEOUT);   ServiceRecord timeout=null;   long nextTime=0;   for (int i=proc.executingServices.size() - 1; i >= 0; i--) {     ServiceRecord sr=proc.executingServices.valueAt(i);     if (sr.executingStart < maxTime) {       timeout=sr;       break;     }     if (sr.executingStart > nextTime) {       nextTime=sr.executingStart;     }   }   if (timeout != null && mAm.mLruProcesses.contains(proc)) {     Slog.w(TAG,"Timeout executing service: " + timeout);     anrMessage="Executing service " + timeout.shortName;   }  else {     Message msg=mAm.mHandler.obtainMessage(ActivityManagerService.SERVICE_TIMEOUT_MSG);     msg.obj=proc;     mAm.mHandler.sendMessageAtTime(msg,proc.execServicesFg ? (nextTime + SERVICE_TIMEOUT) : (nextTime + SERVICE_BACKGROUND_TIMEOUT));   } } 
instance.managementService.unregister()
intent.setData(uri)
HashMap<Byte,ResTypeSpec>
Exception exc
new CompletionThread(w,TestConcurrencyObserverEvent.onCompleted,f1,f2,f3,f4)
info.getDeviceIdForPhone(slotId)
br != null
stts.readUnsignedIntToInt()
HttpConnectionUtil.getSoTimeoutClient(timeout)
assertThat(connector.getSoLingerTime()).isEqualTo(30)
loaded.getLoaded().getConstructor()
sep == null
settings.readLPw(null)
!window.hasFeature(Window.FEATURE_ACTION_BAR) || mActionBar != null
proxyFactory.createClass().getConstructor()
System.nanoTime()
"Unknown id: " + mCurMethodId
position < mData.size()
telephony.getDataNetworkTypeForSubscriber(subId)
bs.max() < 32
new Paint(Paint.ANTI_ALIAS_FLAG)
showNotifications.isNull()
Outdoor(4)
state == STATE_IDLE
!displayContent.isReady() || !mPolicy.isScreenOn()
String.format("null label in rule %s, %s",getLabel().toString(),where)
logger.info("reconnect attempt error")
HttpStatus.FORBIDDEN.toString()
return true; 
specModel.getProps()
new Entry(p.hash,p.key,p.value,head,queue)
Long.valueOf(deadline)
startActionMode(callback) == null
ccfg1.setWriteBehindFlushFrequency(5000)
Foundation.NSLog("[info] " + tag + ": "+ message)
PropertyEvaluator evaluator=new PropertyEvaluator(new HashMap<String,String>()); 
myFixture.assertPreferredCompletionItems(0,"AXX.one","AXX.two","main","const","false","new","null","true","AbstractClassInstantiationError","ArgumentError","AssertionError","AXB","AXB.four","AXB.three","AXX","BidirectionalIterator")
StorageEngineFactory.getStorageEngine(cube,true)
!m.containsNonNullValue(TagMetadata.TAG_UUID) && m.getValue(TagMetadata.TAG_UUID) == 0
rPos > 0
BooleanUtils.isFalse(p.getMetadata().getExcluded())
block.getChildren()[2]
getInstance(project).ensureFilesWritable(files).hasReadonlyFiles()
typedAction.getHandler()
updateSubtree(node)
IClientConfigKey<Boolean>
_log.error(pe)
new IllegalArgumentException()
mCharging ? Tile.STATE_UNAVAILABLE : mPowerSave ? Tile.STATE_ACTIVE : Tile.STATE_INACTIVE
sep < 0
mApplicationObject == null
Integer cfId=Schema.instance.getId(ksName,cfName); 
new IllegalArgumentException("pos must be >= -1")
trackMotionScroll(delta,delta)
Exception e
link.bone.getInitialPos()
type == TRIANGLES
_constructor.newInstance(0,0,StringPool.BLANK,_IMAGE_URL,StringPool.BLANK)
Arrays.asList(RFXComValueSelector.RAW_DATA,RFXComValueSelector.SIGNAL_LEVEL,RFXComValueSelector.COMMAND)
mode != null
out.writeLong(sampleCount)
mContext.getPackageManager().getApplicationInfo(sbn.getPackageName(),0)
selenium.isVisible("link=Control Panel")
type.getConstructor()
new MongoClientException(format("Connection String contains invalid hosts: %s",connectionString.getHosts()))
tracesFile.mkdirs()
winAnimator.mSurfaceController == null
selenium.isVisible("link=Control Panel")
values == null
mCurrentReactContext.runOnJSQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
new WorkflowException("Unable to lock workflow task " + workflowTaskInstanceId,e)
instrumentation.isRetransformClassesSupported()
TEST_UTIL.waitTableEnabled(TEST_TABLE.getTableName())
selenium.isVisible("link=Control Panel")
Long.valueOf(attrValue)
loaded.getLoaded().getConstructor()
SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)
computator.getContentRectMinusAxesMargins()
checkManageUsersPermission("setupRestrictedProfile")
kbase.newStatefulSession(conf)
seconds * 1000
Boolean.getBoolean(value)
mPowerManager.isScreenOn()
new Paint(Paint.ANTI_ALIAS_FLAG)
selenium.isVisible("link=Control Panel")
typeSerializer.getClass()
lhs.getScore()
public Schema cancel(int version,JobsV3 c){   Job j=DKV.getGet(c.job_id.key());   if (j == null) {     throw new IllegalArgumentException("No job with key " + c.job_id.key());   }   j.cancel();   return c; } 
ProgressDialog.show(context,null,context.getText(R.string.signing_out))
selenium.isVisible("link=Control Panel")
infos.length == 0
scheduleTask(alarm,taskLatch,this)
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
Double.parseDouble(value)
Slog.e(TAG,"Invalid wallpaper data")
File.listRoots()[0].getParent()
dest.writeParcelableArray(remoteInputs,flags)
(ZWaveConfigurationCommandClass)node.getCommandClass(CommandClass.WAKE_UP)
a.getFloat(attr,0)
networkInfo.getType() == ConnectivityManager.TYPE_WIFI && !networkInfo.isConnected()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
new KerasModel().modelBuilder().modelJsonFilename(modelJsonFilename).weightsHdf5Filename(weightsHdf5Filename)
n.intValue()
Validator.isNull(ppe.getCause().getMessage())
mService.enableNetwork(netId,attemptConnect)
assertEquals(4,result.getBySeverity(Severity.NOTE).size())
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
assertEquals("total runtime",120.215,model.getRunningTime(),0.000001)
NettyAsyncHttpProvider.class
new File(extraLibDirNames,extraLibDirName)
appendQuoted(FlowManager.getTableName(table))
jniGetLocalAnchorA(addr,tmp)
mState.action == ACTION_OPEN_TREE
dynamicType.getLoaded().getConstructor()
runUTRunner(testDir.getPath(),testFile.getPath() + "::GoodTest::test_passes")
backupIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY)
Simple.of(MutableList.class)
telephony.getNeighboringCellInfo(mContext.getOpPackageName(),mContext.getApplicationInfo().targetSdkVersion)
out.write(ANNOTATION_CONSTANT_TAG)
receiver != null
this.authenticationDecisionStatementProviders
dateFormatter.format(value)
new IndexWriter(startDir,autoCommit,new WhitespaceAnalyzer(),true)
response.set(ROLLED_BACK)
getRequiredString(singletonMap("string",42),list)
valueFormatter != null
mLteSignalStrength > 63
LOGGER.warn(msg.apply())
dest.writeLong(mSubId)
Exception e
SortedMap<String,SortedMap<String,Object>>
assertThat(dto.get("snapshotId")).isNotNull()
dateFormatter.format(value)
isGreaterOrEqual(platformVersion,MNC)
ScriptingUtils.getMatcherForInlineGroovyScript(mappedAttributeName)
Throwable e
FieldAccess.forField(delegateField).getter()
LOG.debug(message,e)
startActionMode(callback) == null
DiagnosticFactory0.create(ERROR)
assertThat(request.getBody().readUtf8()).isEqualTo("<my-object><message>hello world</message><count>10</count></my-object>")
AnnotatedElementUtils.getAnnotationAttributes(method,annotType)
this.route(request).otherwiseIfEmpty(Mono.defer(() -> other.route(request)))
HashMap<String,Operator<? extends Serializable>>
test("var foo = function () {if (true) var module = {};" + "module.exports = {};};" + "module.exports = foo;","goog.provide('module$test');" + "var foo$$module$test=function(){if(true)var module={};" + "module.exports={}};"+ "var module$test=foo$$module$test")
compile.minus(provided)
logger.info("license [{}] - invalid",license.uid())
AnnotatedElementUtils.getAnnotationAttributes(method,annotType)
REDEFINE_MODULE.invoke(module,Collections.singleton(target),Collections.emptyMap(),Collections.emptyMap(),Collections.emptySet(),Collections.emptyMap())
marketDataService.getBittrexOrderBook(pairString)
refresh(false)
oldVersion == 3
context.getContextPath()
122L * dbManager.getDynamicPropertiesStore().getTransactionFee()
Double.class
new FetchResponse(new LinkedHashMap<>(partitions),throttleTime)
mappers.mapper().searchAnalyzer()
@Nullable FullPrunedBlockStore vUTXOProvider
-(int)(editor.getLineHeight() * 0.1)
mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS_FULL) != PackageManager.PERMISSION_GRANTED || mContext.checkCallingPermission(Manifest.permission.INTERACT_ACROSS_USERS) != PackageManager.PERMISSION_GRANTED
ENABLE_SQLITE_LOG=true
commandContext.isDirty()
X.hasCause(e,InterruptedException.class)
new RequestCounter(resetDurationMs,mockTime)
this.getContactJid().split("/")
throwable.printStackTrace()
_imageTrain.loadModel(networkParms)
devicesById.remove(cachedGroupId)
new BulletTestCollection()
Preconditions.checkState(previous == null || previous.equals(value))
new CircularClipper(mDetail)
Integer.valueOf(System.getProperty("cassandra.memtable_row_overhead_computation_step","100000"))
command.next(answerForm)
new IllegalStateException()
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallbackExt mBluetoothGattCallback=new IBluetoothGattCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
resources.lookup(path)
e.getPresentation().setVisible(false)
selenium.isVisible("link=Control Panel")
HashSet<PyType>
new ByteArrayInputStream(decrypedPayload)
selenium.isVisible("link=Control Panel")
Builder<T,B>
field.tokenStreamValue()
i > 0
Integer.valueOf(taskIdStr)
null == iobj.getType()
Slog.wtf(TAG,"Unknown restriction: " + restriction)
stmt.executeQuery(sqlQuery)
suiteMethod.invoke(null,(Object[])new Class[0])
new IndexWriter(dir,new WhitespaceAnalyzer(),false)
request.getServletContext()
-1
CodeStyle.getSettings(project)
c == Long.class
info.getName()
this.url=uri
@ConditionalOnEnablednHealthIndicator("rabbit")
listeners.preExecute(context)
SingleFunction other=(SingleFunction)o; 
"Unable to get queryfields for SQL: " + Const.CR + sql
mRepeat > 1
String.format("(\\d{0,%d})(\\.\\d{1,%d})?",integer,fraction)
@NotNull
new FreeMarkerTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_configuration,_templateContextHelper)
Integer.valueOf(topStr)
2 << 16
SingleServerInventoryProvider.class
new ObjectMapper().reader(List.class)
mEnterTransformation.printShortString(pw)
factory.getEmbdeddedServletContainer()
mRenderNode.isPivotExplicitlySet()
m.isTablePerHierarchy()
this.getClass().getSimpleName()
modelName + "." + signatureEntry.getKey()
getBoolean(SPIDER_PROCESS_FORM,false)
Object[]
return false; 
log_lines[9].substring(0,780)
session.getMachineIdentifier().equals(config.getMachineIdentifier())
ourXWindowIDEA94683FocusBug && isFocused() && !myRequestFocus&& prevOwner != null
assertEquals(200,animator.getFrame())
System.out.prinln("The stack is full, can't insert value")
metricsByDimensions.remove(dimension)
VMDebug.attachAgent(library + "=" + options)
T
HDR_TYPE_SM=0x02
new PoolBagEntry(null,pool)
getActiveFgCall().getPhone().sendDtmf(c)
viewWidth <= 0
DumpUtils.checkDumpPermission(mContext,TAG,pw)
byteBuffer == null
doReturn(new Hashtable<String,String>()).when(bundle).getHeaders()
getPlayerPosition().z
mQsContainer.getLayoutParams()
saleAdjustmentPrice.lessThan(retailAdjustmentPrice)
EventLog.writeEvent(EventLogTags.NOTIFICATION_CANCEL,pkg,id,mustHaveFlags)
this.privateKey
sTestCaseCounter == 1
session.sessions().createUserSession(adminRealm,admin,"admin",null,"form",false)
dl.info("_offset_column","Offset is only supported for regression.")
AbstractMethodError e
mpi < 135
holder.textView.setBackground(mSelectedBackground)
onDetachedFromWindow()
mIpSecService.reserveSecurityParameterIndex(IpSecTransform.DIRECTION_OUT,mRemoteAddr,TEST_SPI_OUT,new Binder())
out.writeObject(entry.getValue())
new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy)
log.error("Error creating class:'" + className + "' in JavaSampler "+ getName()+ ", check for a missing jar in your jmeter 'search_paths' and 'plugin_dependency_paths' properties")
path.toString()
tok.getAttachedReference()
event.getY()
INTERRUPTION_THRESHOLD=11
loaded.getLoaded().getConstructor()
mListener.onInputUpdated(inputId)
new ResultSetIterator(generatedKeys,getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())
/**   * This version of getRow() only takes data from certain rowsets We select these rowsets that have name = step Otherwise it's the same as the other one.  */ public synchronized RowMetaAndData getRowFrom(String from) throws KettleException {   output_rowset_nr=findInputRowSetNumber(from,0,stepname,0);   if (output_rowset_nr < 0) {     throw new KettleException("Couldn't find hop '" + from + "' to read from");   }   return getRowFrom(output_rowset_nr); } 
e instanceof InterruptedException
mLastEvent.getStartTime()
c.isEncoded()
response.set(ROLLED_BACK)
Long.valueOf(job.findExtraInfoBackward(BatchConstants.LOOKUP_EXT_SNAPSHOT_SRC_RECORD_CNT_PFX + tableName,"-1"))
protocolProvider.getProtocolName()
/**   * The component supports both opt-in and opt-out warnings on a per-user basis using a simple algorithm of three variables: <ol> <li> {@link #setWarningAttributeName(String) warningAttributeName}</li> <li> {@link #setWarningAttributeValue(String)} warningAttributeValue}</li><li> {@link #setDisplayWarningOnMatch(boolean) displayWarningOnMatch}</li> </ol> The first two parameters define an attribute on the user entry to match on, and the third parameter determines whether password expiration warnings should be displayed on match. <p> Deployers MUST configure LDAP components to provide <code>warningAttributeName</code> in the set of attributes returned from the LDAP query for user details.  * @author Marvin S. Addison  */ public class OptionalWarningAccountStateHandler extends DefaultAccountStateHander {   /**   * Name of user attribute that describes whether or not to display expiration warnings.   */   @NotNull private String warningAttributeName;   /**   * Attribute value to match.   */   @NotNull private String warningAttributeValue;   /**   * True to opt into password expiration warnings on match, false to opt out on match.   */   private boolean displayWarningOnMatch=true;   /**   * Sets the user attribute used to determine whether to display password expiration warnings.  * @param warningAttributeName Attribute on authenticated user entry.  */   public void setWarningAttributeName(  final String warningAttributeName){     this.warningAttributeName=warningAttributeName;   }   /**   * Sets the value of  {@link #warningAttributeName} used as basis of comparison.  * @param warningAttributeValue Value to match against.  */   public void setWarningAttributeValue(  final String warningAttributeValue){     this.warningAttributeValue=warningAttributeValue;   }   /**   * Determines whether password expiration warnings are opt-in or opt-out.  * @param displayWarningOnMatch True to opt into password expiration warnings on match, false to opt out on match.Default is true.  */   public void setDisplayWarningOnMatch(  final boolean displayWarningOnMatch){     this.displayWarningOnMatch=displayWarningOnMatch;   }   @Override protected void handleWarning(  final AccountState.Warning warning,  final AuthenticationResponse response,  final LdapPasswordPolicyConfiguration configuration,  final List<Message> messages){     final LdapAttribute attribute=response.getLdapEntry().getAttribute(this.warningAttributeName);     boolean matches=false;     if (attribute != null) {       matches=this.warningAttributeValue.equals(attribute.getStringValue());     }     if (displayWarningOnMatch == matches) {       super.handleWarning(warning,response,configuration,messages);     }   } } 
EmailableReporter.class
flowParameters.get(flowParam)
m.getClass()
true_parts.addAll(Hive.get().getPartitions(tab))
nextNext.getElementType() == JetTokens.IDE_TEMPLATE_END
result != null
methodsToImplement(methods)
ControllerRequestURLBuilder.baseUrl(CONTROLLER_BASE_API_URL).forBrokerTenantCreate(brokerTag)
u.isUnknownType()
mKey.equals(other.mKey)
mAlpha == 0
selenium.isVisible("link=Control Panel")
mScreenBrightnessDarkConfig > mScreenBrightnessDimConfig
mPlayer.getCurrentPosition() * 1000
policyFlags & SCAN_REQUIRE_KNOWN
segmentsInCluster.get(segment.getIdentifier(),server.getTier())
mContext.startActivity(intent)
!src.isEnabled()
sDefaults.putBoolean(KEY_CARRIER_VOLTE_TTY_SUPPORTED_BOOL,false)
tw.release()
delta + contextEnd
new IndexWriter(store,new SimpleAnalyzer(),true)
mLastAnnouncementWasQuickSettings && !mTracking
data.indexOfFilterField > 0
mAuthorities.get(i)
LOGGER.debug("Could not parse entry",ex)
g.cachesx(null)
public DerivedBuilder setMaximumNumberOfRedirects(int maxDefaultRedirects){   configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);   return this; } 
new SendReq(message.getPduHeaders(),body)
sendMsg(mAudioHandler,MSG_PERSIST_VOLUME,SENDMSG_REPLACE,PERSIST_CURRENT | PERSIST_LAST_AUDIBLE,device,streamState,PERSIST_DELAY)
!sameActivity
Looper.getMainLooper()
_lapseConf(card)
ssl.has(CommonAttributes.CIPHER_SUITE)
BufferUtil.zeroBuffer(9)
message.processMessage()
JavaConversions.asMap(logManager.logsByTopicPartition())
strangeVocab.getWordFrequency()
position - dockDividerWidth
promise.setFailure(cause)
VERSION=7
new WrappedEpoxyModelClickListener(this,clickListener_OnClickListener)
types == null
activityInfos.get(position).label
ArrayList<PdfComment>
mAuthActivity.unbindService(TokenRefreshServiceConnection.this)
findTypeFromRef(expression)
myStartupManager.registerPostStartupActivity(new Runnable(){   public void run(){     runnable.run();   } } )
h.addParameters("--name-status",parser.getPretty(),"--encoding=UTF-8")
new IllegalStateException()
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallbackExt mBluetoothGattServerCallback=new IBluetoothGattServerCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ; 
display.getMetrics(mDisplayMetrics)
overlookOuterLimit
executorService.schedule(pingServerRunnable,pingInterval,TimeUnit.SECONDS)
realm.assertThread()
new StringBuilder(247)
getProperty(parent + "." + propName)
loaded.getLoaded().getConstructor()
typeDeclaration.isNovel()
Long.valueOf(delay)
mPackageUsage.write()
(mOomMinFreeHigh[5] * 7) / 8
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(refElement).description(message)
VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP_MR1
"WPA".equals(networkTypeString)
TYPE_ATSC_M_H=0x00030200
logger.warn("Could not send module un-availability notification of module " + deploymentModuleIdentifier + " to channel "+ this.channel,e)
datum.getScore()
DvcsUtil.guessRepositoryForFile(project,GitUtil.getRepositoryManager(project),GitVcs.getInstance(project),file,GitVcsSettings.getInstance(project).getRecentRootPath())
endpoint.toString()
fraction * (nextValue - prevValue)
returnCode != 0
d.setHotspot(x,y)
mWasActivatedOnDown || !mNeedsDimming
ATLAS_MAP_ENTRY_FIELD_COUNT=4
Foundation.NSLog("[error] " + tag + ": "+ message)
excludesPattern == null
createShrinkFadeOutFromBottomAnimation(mContentContainer,0,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
value < 0
myTempDir.getCanonicalPath()
isReserved(c)
registerMethodCallError(expression,expression)
off >= buf.length
i <= 'Z'
migrateXmlString(content,22)
client.loginWithFacebook(fbAccessToken,code).compose(Transformers.pipeApiErrorsTo(tfaError)).compose(Transformers.neverError()).doOnSubscribe(() -> formSubmitting.onNext(true)).finallyDo(() -> formSubmitting.onNext(false))
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_SEGMENT_DETAILS))
nai.networkCapabilities.satisfiedByNetworkCapabilities(networkCapabilities)
removeCallbacks(null)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_CONNECTED)
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_CUBE))
mSyncStatus.get(i)
logger.warn("Writing large partition {}/{}:{} ({}) to sstable {}",metadata.ksName,metadata.cfName,keyString,rowSize,FBUtilities.prettyPrintMemory(rowSize),getFilename())
protected FBTree getCurrentTree(){   return myCurrentTree; } 
deletionRetentionStrategy == null
public DerivedBuilder setConnectionTimeoutInMs(int connectionTimeuot){   configBuilder.setConnectionTimeoutInMs(connectionTimeuot);   return this; } 
/**   * @param currentItem     the current item we check  * @param nextItem        the item comming after the current item  * @param currentPosition the current position of the currentItem  * @return the HeaderItem we want to add after the currentItem  */ Item group(Item currentItem,Item nextItem,int currentPosition); 
DEF_MAXIMUM_NETWORK_LOGGING_NOTIFICATIONS_SHOWN=4
!mConnected
Exception e
setNumber(String.valueOf(integerPart))
StorageProxy.readProtocol(commands,select.getConsistencyLevel())
writer.close(true)
CodecUtil.checkHeader(in,CODEC_NAME,VERSION_START,VERSION_START)
new DBException(ex,dataSource)
proto.getExecPath()
subtypeProps.isEmpty()
intermediateArtifacts.strippedSingleArchitectureBinary()
assertEquals(10,definitions.size())
getWidth()
groupPersistence.countByChildrenSites(group.getCompanyId(),group.getGroupId())
queryArtist != null
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
className.indexOf(CONTROLLER_SUFFIX)
System.out.printf("graph.edge(%d, %d, %f, %s);\n",from,to,edge.getDistance(),fwd && bwd ? "true" : "false")
mMat[9]
builder120.build()
headerName.startsWith("proxy") || headerName.equals("keep-alive")
List<WebPageDetail>
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
COUNT_DATABASE.put(key,val)
selenium.isVisible("link=Control Panel")
insets.left == 0
i <= MAX_AUDIO_PORTS
InsertionSort.sort(reverse.clone())
pm.performDexOpt(pkg,null,false)
c.getLocalDeletionTime() <= gcBefore
responseType != null
CompilerDirectives.inCompiledCode()
new Paint(Paint.ANTI_ALIAS_FLAG)
picker.end(pageContext.getOut(),null)
mWm.addAppToken(0,null,0,0,0,false,false,0,0,false)
target.getUri()
idleTimeout < 30000
is(1)
backupIntent.addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY)
new RandomIndexWriter(random,directory)
fluentSetters()
FilterBuilders.missingFilter(RuleDocument.FIELD_CHARACTERISTIC_KEY)
postfix.equals("id")
new UserServiceBeanDefinitionParser()
mode != null
info.getDepth()
Object edge
log.error("Unable to initialize auth domain {} due to {}",ad,e.toString())
jmsManager.destroyQueue(queueName)
@JsonProperty(STICKER_FIELD)
LOG.error(ex.getLocalizedMessage(),ex)
checkPojoMetaClass()
mAttributes.getFlags()
mNetAttributes[type].mLastState == state
execution.getJobs().remove(this)
WidgetRemoteViewsServiceBinding(appWidgetId,fc)
synchronized (mAccounts) {   writeStatisticsLocked(); } 
preDestroys != null
mHasPendingMoveOrDelete
sep < 0
lexer.token == Token.HINT
!value.isStatic() && value.isPublic() && classNode.equals(value.getDeclaringClass())
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
filterPipeline.add(new Canvas(width,height,croppingPosition))
mValues[7]
new RowMutation(KSNAME,ByteBufferUtil.bytes(key))
mTextUtil.nextRandomParagraph(WORD_LENGTH,NO_STYLE_TEXT)
setIcon(view,iconView,tree)
mSeekBar.setProgress(0)
message.containsKey(Message.REQUESTOR_ROLE)
TOUCHEVENT_POOL.recylePoolItem(this)
Integer.valueOf(quantifier)
columnTypes[column] == INT
Integer.valueOf(taskIdStr)
getContent(files,".obf",".zip")
is(false)
private MtpManagerMock mMtpManager; 
sequence.first <= first
stack.peekFirst()
type.getConstructor()
win.isAnimatingLw() && appWindow && showWhenLocked
new CompositeException(ex,e)
WikiWebUpgrade.class
setColor(color)
length % dictionarySize
dest.writeLong(mSubId)
mTimes[i]
AbstractPollingScheduler.class
ch == '|'
selenium.isVisible("link=Control Panel")
converterLookup.addCustomConverter(item,IntegerDecimalConverter.class)
broker == null
new SpannedString(new CustomSpannable(first),false)
BufferUtil.zeroBuffer(8)
AbstractMethodError e
bucket.exists()
stores.next().getAssertMap()
UntrackedFilesNotifier.notifyUntrackedFilesOverwrittenBy(myProject,ServiceManager.getService(myProject,PlatformFacade.class),untrackedFilesWouldBeOverwrittenByMergeDetector.getFiles(),"merge")
NUM_PAGES=3
loaded.getLoaded().getConstructor()
new RuntimeException()
arg.indexOf('.') >= 0
mask.size()
this.route(request).map(RouterFunctions::cast).otherwiseIfEmpty(Mono.defer(() -> other.route(request).map(RouterFunctions::cast)))
new LocalAlluxioClusterResource(1000,Constants.GB,Constants.SECURITY_AUTHENTICATION_TYPE,AuthType.SIMPLE.getAuthName())
LauncherActivity.isLaunchUri(uri)
-1
OrderByComparator<T>
tw.release()
StringBuffer msg=new StringBuffer(methodName); 
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.CONJUGATE_GRADIENT).iterations(100).weightInit(WeightInit.VI).stepFunction(new GradientStepFunction()).activationFunction("tanh").nIn(4).nOut(3).visibleUnit(RBM.VisibleUnit.GAUSSIAN).hiddenUnit(RBM.HiddenUnit.RECTIFIED).layerFactory(layerFactory).list(3).backward(true).hiddenLayerSizes(new int[]{3,2}).override(new ClassifierOverride(2))
range.contains(offset)
updateCondition.isPrivate()
getDelegate().getSupportedCipherSuites()
mHorizontals == null
new UnsupportedOperationException()
loaded.getLoaded().getConstructor()
createCustomStudySession(new JSONArray(),new Object[]{sb.toString(),Consts.DYN_MAX_SIZE,Consts.DYN_RANDOM},false)
backups.length == 0
commitPackageSettings(pkg,pkgSetting,user,policyFlags,(policyFlags & PackageParser.PARSE_CHATTY) != 0)
mTestStream.getBytesFlushed()
DirectMessage.constructDirectMessages(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json"))
(outputFolder + File.separator + modelFolder).replaceAll("/",File.separator)
mTrustListeners.get(i)
new CircularClipper(mDetail)
xml(obj.toString())
countDownLatch.await(5,java.util.concurrent.TimeUnit.SECONDS)
Assert.assertEquals(4,count)
hash == 0
logger.debug("NODE {}: App version requested but version is unknown",this.getNodeId())
file.name().contains(".etc1")
getPhoneType(getJsonString(email,"type"))
DiagnosticType.disabled("JSC_TOO_MANY_TEMPLATE_PARAMS","{0}")
newInstance(classResourcesKey,resDir,displayId,config,scale,token,isThemeable)
this.messageService.fluxPreAuthorizeBeanFindById(1L).contextStart(withUser)
mConnector.execute("volume","format",vol.id)
new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE)
Mono.currentContext()
ConfiguredTargetValue.key(label,defaultTargetConfiguration)
DEFAULT_PLAYER_EYE_HEIGHT=1.6f
new Documentation(__ -> Optional.of(() -> "A"),__ -> Optional.of(() -> "B"),null,null,null)
uri.getQuery()
createHalf(buffer.length(),init)
return true; 
mCurrentDate.get(Calendar.MONTH) != dayOfMonth
Integer.valueOf(displayIdStr)
updateRefreshToken(currentRefreshToken,at)
ReferenceType::methods
return mDisappearingDuration; 
onHold | ON_HOLD_REMOTELY
targetDescription.getClassName()
value == null
ams.mContext.createPackageContext(appInfo.packageName,0)
info.crashInfo.stackTrace.length() > 10000
getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DUMP,message)
new LinkedHashSet<String>(64)
data != null
PrivacyManager.getRestrictions(false)
data != null
Flux.from(inputStream).flatMap(value -> {   DataBuffer arraySeparator=bufferFactory.wrap(SEPARATOR_BUFFER);   return Flux.just(encodeValue(value,bufferFactory,elementType),arraySeparator); } )
query.length()
filteredMsgCount++ % 10000 == 1
structuralLock.isLocked()
selenium.isVisible("link=Control Panel")
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
FastMath.max(origin,num.doubleValue())
new SdkListCellRenderer()
Nd4j.createUnitialized(forwardPassShapes[i])
!isConsole && (senderGroup != null ? permissionHandler.inGroup(auxUser.getName(),senderGroup.getName()) : false)
log.warn("Can't set transaction isolation level",e)
mPowerManager.isScreenOn()
new GetExecutionVariableInstancesCmd(executionId,variableNames,false)
InputMethodManager.getInstance(mTargetActivity)
mIconBase.clone().icon((String)mIcons.get(i))
_response.reset()
this.httpHandler.handle(req,resp).otherwise(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
List<File>
from > to
handshake.getProcolVersion()
_assetCategories.isEmpty()
callbacks.onHardwarePostDraw(canvas)
IBluetoothMap.class
AllGlsJavaTestsSuite.suite()
resolve(type,false,false,true)
FileUtil.loadFileText(new File(patchPath))
LocalFileSystem.getInstance().findFileByPath(libPath)
activity == null
JSRootConfiguration.getInstance(getProject()).storeLanguageLevel(JSLanguageLevel.JS_1_7)
LOGGER.debug("Error while downloading file",ioex)
mDrawerItems.size() > mCurrentSelection
targetColumn.getTable() != null
{0,7}
/**   * Line number filter.   */ private CSVFilter lineFilter; 
task.getInputs().files(futureValue)
logger.error("Failed to enumerate network interfaces",e)
OracleTableForeignKey.class
IBackupManagerService svc=mService; 
getWebElement(webDriver,locator,timeout)
contract.getNewContrect()
TypeEvalContext.fast(file)
endOffset >= textLength
stall_till_cloudsize(5)
schema.getDynamicPattern(sfield.getName()) != null
handleIncomingUserLocked(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
mTextColor.getColorForState(ds.drawableState,0)
partialUri.toString()
(device=1 << i) <= AudioSystem.DEVICE_OUT_DEFAULT
Assert.assertEquals(122L,ownerCapsuleNew.getNetUsage())
385L * FileUtils.ONE_MB
PaginationTestUtil.of(10,1)
Validate.notEmpty("Cookie name must not be empty")
_assertAttibutes(sourcesJSONArray.getJSONObject(1),102,50)
entry.doesSupportPartial()
type != EventType.QUERY
event.getTime() <= currentPlayTime
mGpsListener != null
FUNCTOR_PROCESS_DELAY=2
stall_till_cloudsize(1)
selenium.isVisible("link=Control Panel")
personalJournalList != null
AtlasBuildContext.atlasMainDexHelper.getMainResFiles()
requestFilters != null
mState == STATE_UNINITIALIZED
trade.getType().equals("buy")
StringBuilder content=new StringBuilder(""); 
testClass.getName()
Simple.of(Runtime.NoneType.class)
encoding=options.get(ELEMENT_NAME)
listeners.preExecute(context)
marketDataService.getOrderBook(CurrencyPair.BTC_USD,3)
processAssignment(substitutor.substitute(targetType),initializer,parameter.getNameIdentifierGroovy(),method)
loaded.getLoaded().getConstructor()
mappingsDir.exists()
public class XpathRegressionRightCurlyTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     final String[] expectedViolation={"8:9: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_SAME,"}",9)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyOne']/OBJBLOCK" + "/METHOD_DEF[@text='test']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.ALONE.toString());     final String[] expectedViolation={"9:15: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_NEW,"}",15)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyTwo']/OBJBLOCK" + "/METHOD_DEF[@text='fooMethod']/SLIST/LITERAL_TRY/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testThree() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyThree.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.ALONE.toString());     final String[] expectedViolation={"5:72: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_ALONE,"}",72)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyThree']/OBJBLOCK" + "/METHOD_DEF[@text='sample']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testFour() throws Exception {     final String checkName=RightCurlyCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRightCurlyFour.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RightCurlyCheck.class);     moduleConfig.addAttribute("option",RightCurlyOption.SAME.toString());     final String[] expectedViolation={"7:27: " + getCheckMessage(RightCurlyCheck.class,RightCurlyCheck.MSG_KEY_LINE_BREAK_BEFORE,"}",27)};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRightCurlyFour']/OBJBLOCK" + "/METHOD_DEF[@text='sample']/SLIST/LITERAL_IF/SLIST/RCURLY");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
!root.isDownloads()
Collect.getInstance().getString(R.string.file_fetch_failed,response.getStatusLine().getReasonPhrase(),statusCode)
createBaseEntitlementAndCheckForCompletion(account.getId(),"externalKey",productName,ProductCategory.BASE,term,NextEvent.CREATE,NextEvent.INVOICE)
type.getConstructor()
System.currentTimeMillis() - syncDelta
case 5: 
postJob.getClass()
createHalf(buffer.length(),init)
getUserFromDashboard(ownerDashboard,responsibleId)
organization.toEscapedModel()
constraint.hasFilter()
editor.commit()
propMember.getType(beanDesc.bindingsForBeanType())
input.read(b)
Arrays.sort(timestamps,unused + 1,10)
MessagingService.instance().sendRR(message,target,handler)
new ObjectMapper().reader(Map.class)
RemoteException e
new PrestoException(HIVE_FILESYSTEM_ERROR,e)
new SpannedString(first,false)
TestSuiteEnvironment.getServerAddress()
new ShieldVersion(V_1_0_0_ID,false,Version.V_1_4_0)
fragmentEntryPersistence.filterFindByG_FCI_S(groupId,fragmentCollectionId,status,start,end,orderByComparator)
pm.queryIntentServices(new Intent(TvInputService.SERVICE_INTERFACE),PackageManager.GET_SERVICES | PackageManager.GET_META_DATA)
for (MediaType mediaType : compatibleMediaTypes) {   if (mediaType.isConcrete()) {     return mediaType;   }  else   if (mediaType.equals(MediaType.ALL) || mediaType.equals(MEDIA_TYPE_APPLICATION_ALL)) {     return MediaType.APPLICATION_OCTET_STREAM;   } } 
Timber.e("Creating PROGRESS_DIALOG")
getSongProgressMillis() > 2000
selenium.isVisible("link=Control Panel")
error(log,e.getMessage())
latch.await(10,TimeUnit.SECONDS)
mListener.onInputUpdated(inputId)
type.getConstructor()
r != null
mDataAuthorities == null
mService.oneTouchPlay(getCallbackWrapper(callback))
mPulseCallback.onPulseFinished()
Locale.getDefault().toString()
logger.debug("MyQ binding received command '{}' for item '{}'",command,itemName)
RuntimeGlue optionalGlue
new VelocityTemplate(new MockTemplateResource(_TEMPLATE_FILE_NAME),null,null,_velocityEngine,_templateContextHelper)
latch.startLatch.await(200,TimeUnit.MILLISECONDS)
event.getX()
selenium.isVisible("link=Control Panel")
mSyncStatus.get(i)
RIGHT_ID_F=3535
SSLParametersImpl.getDefaultTrustManager()
logger.error(evt.getReason())
log.warn("Error sending end packet",iex)
texture=new Texture(this,pixelWidth,pixelHeight,texture.getParameters())
checkPojoMetaClass()
blog.getRemoteBlogId()
Status.constructStatuses(get(getBaseURL() + "statuses/friends_timeline.json",null,paging.asPostParameterList(),true))
lineArgs[3]
is(false)
dimension.height+=hGap
change.isIsReplaced()
sketchWidth0 < sketchWidth0
config.getMaxElementsInMemory()
(r.info.flags & ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS) != 0
size=3
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
baseKey.plus(addedBucketsLeft * interval)
logger.warn(x.getClass() + ": " + x.getMessage())
is(expectedSql)
pm.performDexOpt(pkg,null,false)
firstSlash == 0
headerFilterStrategy.applyFilterToCamelHeaders(entry.getKey(),entry.getValue(),camelExchange)
Deque<Object>
-flexibleSpace < translationY
tableHasColumn(oldTableName,"articleId")
revWalk.release()
minSlot > 1
if (DBG) loge("Exception trying to remove a route: " + e); 
logger.warning("Unable to load image using TGA loader!")
mWidth - edgeWidth
mRouter.selectRoute(mRouteTypes,route)
TestUtils.randomByte() + 127
file.getLocalFile()
Throwable e
values == null
log.info(message)
selenium.isVisible("link=Control Panel")
m.getSize()
table != null
uri.equals(patterns[k])
this(texName,true); 
KaleoTaskInstanceTokenLocalServiceUtil.searchCount(RandomTestUtil.randomString(),RandomTestUtil.randomStrings(10),false,true,serviceContext)
pv.setBackground(getResources().getDrawable(R.drawable.list_highlight_bg))
timeout=600000
journalArticle.getCreateDate()
Math.min(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
assertEquals(handlers.size(),2)
IOException e
config.getId()
(NotificationAction)null
documents.get(docNum).getCheckResults(paraText,locale,paRes,footnotePositions,isParallelThread)
new Exception("File " + file.getPath() + " should not exist")
new IndexWriter(indexStore,new SimpleAnalyzer(),true)
mAuthorities.get(i)
WebAppResource.class
delaySoFar > mReEnableDelayMillis
mService == null
expected == byte.class
poList[1]
mResourceData[i] != null
Arrays.asList("amzn.to","bit.ly","bitly.com","fb.me","goo.gl","is.gd","j.mp","lnkd.in","ow.ly","SCN.BY","su.pr","t.co","tinyurl.com","tr.im")
((Number)s.first()).intValue()
MAX_PERCENT_DIFFERENCE=0.1
getStringList(true,true,true)
mQsContainer.getX()
mEvdoEcio > 0
assertEquals(258L,response.rowCount())
index.sync()
logger.debug(String.format("Submitting %s metric for metric emission pool",metric.getName()))
!task.isFreeformTask()
new Paint(Paint.ANTI_ALIAS_FLAG)
!mAwake
this(host,port,threadName,queueSize,timeout,SEND_BUFFER_SIZE,DEFAULT_BUFFER_SIZE); 
tv.setTextSize(mTextView.getTextSize())
ATLAS_MAP_ENTRY_FIELD_COUNT=4
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
isDoubleA && isIntA
Exception e
state.facadeMatrix.getFacadeBlockId(direction) != 0
(visibility & VISIBILITY_MASK) == VISIBLE
return false; 
mFacetCategoryMap.get(packageName)
logger.info("Moving functions + variable into deeper modules")
newNode.getNodeId()
@GUIMenuSortOrder(2)
new IllegalArgumentException("Legacy advertisement can't be connectable and non-scannable")
new MultiParentClassLoader()
connectionManager.markOwnerAddressAsClosed()
dynamicType.getConstructor()
Internal.prefixKeyWithSalt(key_a)
entry.notification.clone()
Context.getVisitService().getAllVisitTypes(true)
{4,5,5,11,6,5,7,5,11,11}
!stopItem.isEnabled() ^ !running
m.getClass()
liquibaseDataType.toString()
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
isCreated()
mNetAttributes[type].mLastState == state
topActivity != null
log.warn("\"FocusKiller\" library not found or there were problems loading it.",t)
mFixedExecutionService.shutdown()
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
_typeSettingsProperties.toString()
GroovyPropertyUtils.isPropertyName(getName())
theFeatures.divi(maxRange - minRange + Nd4j.EPS_THRESHOLD)
jobDataMap.get(JobDetailAwareTrigger.JOB_DETAIL_KEY)
renderRequest.getAttribute(WebKeys.SOFTWARE_CATALOG_PRODUCT_ENTRY)
jmsDestination == null
Long.valueOf(value)
telephony.isRinging()
setFlag(FLAG_ONLY_ALERT_ONCE,autoCancel)
MAX_PERCENT_DIFFERENCE=0.1
selenium.isVisible("link=Control Panel")
T value2
addProperty(firstNode,"band","The Clash")
getAllDeviceItems(deviceId).contains(commandId)
terms.size() > maxExpansions
id=52
_buildTemplateWithMaven("activator","bar-activator","-DclassName=BarActivator")
ModelReference.of(ServiceRegistry.class)
query.from(employee).distinct(employee.datefield,employee.timefield)
HSTRETCH_DURATION=0.4f
response.rows()[8]
listView.setSelection(checkedItem)
isStatic
mScreenBrightnessDarkConfig > mScreenBrightnessDimConfig
i.getTouchIconUrl() != null
BookmarksWebUpgrade.class
longSize >= 530
maxSize > (used / total)
public TokenStream create(TokenStream input){   return new HyphenatedWordsFilter(input); } 
drawable != mBackgroundDrawable
!isObservable
javaWriter.emitSingleLineCOmment("foo")
method.getAnnotation(TruffleBoundary.class) != null
this.errorDetection=true
eq(PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS)
selenium.isVisible("link=Control Panel")
new ClosedByInterruptException("Interrupted while reading.")
Arrays.asList(2,3)
sr.makeNextStartId()
isCreated()
SystemProperties.getBoolean("persist.demo.hdmirotationlock",true)
new ModelRenderer(model,0,0)
out.writeLong(length())
loaded.getLoaded().getConstructor()
new MqttFixedHeader(SUBACK,false,AT_LEAST_ONCE,false,0)
platformVersion < MNC
COUNTER_UPDATER.addAndGet(this,-vs.size) == 0
ret == null
count <= 0
beanFactory.getBeanNamesForType(CacheAspectSupport.class)
public Long getAutoCommitInterval(){   return this.autoCommitInterval; } 
realm.assertThread()
CharSequence message
Files.delete(dir.toPath())
CACHE_MANAGER.addCache(storageCache)
Iterable<Arg>
new StringBundler(10)
onDetachedFromWindows()
parent != null ? parent.startNumber : 0
project.getId()
from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)
dexBuf.readSmallUint(interfacesOffset + 4 + (2 * index))
stop < start
assertEquals(9,fieldNames.size())
{MAGIC_HIGH,MAGIC_LOW,0x20,20,0,0,0,0,0,0,0,0,0,0,0,0}
am.getRecentTasksForUser(MAX_TASKS,ActivityManager.RECENT_IGNORE_UNAVAILABLE,UserHandle.USER_CURRENT)
Generics.newHashMap()
getCode().split("\n")
a.getInt(R.styleable.CollapsingToolbarLayout_scrimVisibleHeightTrigger,-1)
varDeclaration instanceof GoRecvStatement
Log_OC.wtf(TAG,"Access to unexisting list of files fragment!!")
statistics.addGetTimeNano(System.nanoTime() - start)
SCROLL_BAR_SIZE=10
response.getStatus().getCode() / 200
DEBUG_ALL || false
ONBOARDING_ENABLED=false
mConferenceById.containsKey(callId)
typeSettingsProperties.toString()
a.getFloat(attr,0)
i <= conCount
mView.post(mAnimationStarter)
mScrollView.restoreDefaultFocus()
doTestHighlighting()
mState != STATE_FINISHED
blockRoot.getToken().getType() == Token.LEFT_CURLY_BRACE
expand("serializedforms/DailyTimeIntervalTriggerImplSerializationTest.testFired.{?}.ser","JDK16","JDK17_1","JDK17_2")
any()
assertEquals(1,tempDir.listFiles().length)
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.LINKING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))).append(targetNodes)
isAssignableFrom(supertypeName,cn.superName,cl)
matchAxisFilter != 0
lock != null
hasCollapsibleActionView()
Integer.valueOf(attrValue)
file == null
AstUtils.hasLeastOneAnnotation(classNode,"Controller","EnableWebMvc")
assertCompletionVariants(myProjectPom,"2.0.2")
DumpUtils.checkDumpPermission(mContext,TAG,pw)
(File)sendApiMethod(sendLocation)
(line=reader.readLine()) != null
http2Stream.inboundFlow()
BorderFactory.createEmptyBorder(5,0,5,0)
canonicalURI.normalize().getPath()
selenium.isVisible("link=Control Panel")
position.setEmpty()
separator.setBorder(new EmptyBorder(3,0,2,0))
log.info("Error registering JSP monitoring with jmx " + instance)
buffer == null
winAnimator.mSurfaceController == null
LOG.isDebugEnabled()
badgeText.length() == 1
mHeartbeat != null
mBoundServices.isEmpty()
Object node
activityNdx < topActivityNdx
payload.intPayload[2]
_configurationPair.getValue()
pk.getColumnName()
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_CONF))
logger.warn("failed to close node {} on failed start",otherNode,t)
writeSource.setReadCount()
parser.getText()
name == null
calendar.roll(Calendar.DATE,2)
selenium.isVisible("link=Control Panel")
new IndexShardRoutingTable.Builder(new ShardId(WatchStore.INDEX,0),false)
this.specificIcon && historyReference.getHistoryType() == HistoryReference.TYPE_MANUAL
id=15835
extractor.setScopeAll()
Object node
c.getStartOffset() != getStartOffset()
selenium.isVisible("link=Control Panel")
Integer.toString(bitstampOrder.getId())
_constructor.newInstance(fileEntry.getFileEntryId(),fileEntry.getFileEntryId() + 1,_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK)
InitialTutorialPrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
callbackList.getRegisteredCallbackCookie(i)
new HttpBlobStore(new URI("http://localhost:" + serverPort),5,credentials)
FIRST_CUSTOM=8092
new SafeTextModel(Mode.relaxed)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
id=4
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
new DirectDruidClient(warehose,smileMapper,httpClient,server.getHost())
allocator.getFlowController().prepareAction(input,epsilon,activations,nextEpsilon)
new Location(target.getWorld(),x,y,z)
FastMath.max(origin,num.floatValue())
tag.setLabelPosition("left")
new Or(src,tmp,dst)
new TextPaint()
FileUtil.loadFile(new File(getTestDataPath() + getTestName(true) + ".txt"))
getTokenNames()
syncOperation.delay == 0
TelephonyManager.getDefault().getPhoneType()
new StringBuffer()
new PoolBagEntry(null,pool)
loaded.getLoaded().getConstructor()
isPut(request)
csUseGlobalSearch.setSelection(store.getBoolean(SQLPreferenceConstants.FOLDING_ENABLED))
dest.writeLong(mSubId)
createTestBlockCapsule(number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
basicDLTest_Regression("./smalldata/logreg/prostate.csv","prostateRegression5.hex",new PrepData(){   @Override int prep(  Frame fr){     fr.remove("ID").remove();     return fr.find("AGE");   } } ,5,41.849938471234594,DeepLearningParameters.Activation.Rectifier)
textMessage.getMessageType()
is(false)
_path.toString()
Env.valueOf(env)
setBlock(min,pattern.next(minV))
firstCacheCfg.setMemoryPolicyName(POLICY_20MB_EVICTION)
doTestCompletionVariants("av10.xml","fill_parent","wrap_content","@android:")
reduceConfigWidthSize(sw,Surface.ROTATION_270,density,unrotDw,unrotDh)
selenium.isVisible("link=Control Panel")
new IndexWriter(dir,new WhitespaceAnalyzer(),false)
accountHandle.getComponentName().toString()
@Nullable
Iterable<Arg>
sDefaults.putBoolean(KEY_SHOW_4G_FOR_LTE_DATA_ICON_BOOL,true)
CamelCloudServiceCallConfiguration.class
appOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new SpriteBatch(10000)
content.length() > 0
docErrors.get(i)
Thread.sleep(20)
DescriptorUtils.getContainingModule(what)
mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
Integer index
beans.add(0,bean)
data.hasTestPassed()
progress.dismiss()
Slog.e(TAG,"Adding signing keyset " + Long.toString(id) + " to "+ name)
method.getClass()
queryIdsSnapshot.remove(deadQuery)
1
new ProtoFile("descriptor.proto",null,Arrays.asList("src/test/resources/unittest_import.proto"),NO_STRINGS,NO_TYPES,NO_SERVICES,map(),NO_EXTEND_DECLARATIONs)
mAppToken.hasContentToDisplay()
CommonBundle.getErrorTitle()
target.getDestination()
MAX_DISMISSAL_ON_SWIPE_UP_SHOW=4
configTimeCacheProviderHolder.remove()
mNextNonWakeupDeliveryTime > nowELAPSED
mMenuView.setBackgroundDrawable(null)
(Long)array[this.index]
field_92016_l.getItem()
newUiPrefs.enableBackgroundDiagnostics()
V
assertEquals(0,view.getEnqueueCount())
state == ApplicationState.STATUS | state == ApplicationState.STATUS_WITH_PORT
DEBUG=true
finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
eval instanceof Float
Object target
LOG.error("Plugin " + plugin.getName() + " has an artefact "+ shortName+ " without a package name "+ "This could lead to artefacts being excluded from the application")
zkDb.snapLog.getDataDir()
attributes != null
JMeterUtils.getPropDefault("proxy.number.requests",false)
AccessException ex
is(true)
UISettings.getInstance().HIDE_TOOL_STRIPES && !PropertiesComponent.getInstance().isTrueValue(key)
coverageDataManager.addCoverageSuite(name,new DefaultCoverageFileProvider(coverageFileName),getPatterns(),lastCoverageTime,getSuiteToMergeWith(),getCoverageRunner(),isTrackPerTestCoverage() && !isSampling())
sRecentsBlacklist.contains(t.realActivity.getClassName())
proxy == null
verbosity.shouldPrintCommand()
-1L
sp.edit().putBoolean(PREF_USER_REFUSED_SIGN_IN,refused).commit()
log.logError(BaseMessages.getString(PKG,"JobUnZip.Error.Label"),BaseMessages.getString(PKG,"JobUnZip.ErrorUnzip.Label",realFilenameSource,e.getMessage()))
scheduleRemoveStartingWindow(wtoken)
MoreObjects.toStringHelper(this).add("user",getUser()).add("timeZoneKey",timeZoneKey).add("locale",locale).add("startTime",startTime).add("properties",properties)
taskDao.findByUserId(1L,new Sort(Direction.ASC,"id"))
doTest()
ResponseImpl schema(Property property); 
{4,5,5,11,6,5,7,5,11,11}
format != null
event.getFile().getLength() < 0
private final Integer id; 
new GetExecutionVariableInstancesCmd(executionId,variableNames,false)
channel.writeHeaders()
Messages.MESSAGES.templateParameterNull(param)
telephony.getCdmaEriTextForSubscriber(subId)
!isPassword
referenceDatabase.getObjectQuotingStrategy()
LOG.error("Unable to read HTTP response content",e)
fieldDescription.isAccessibleTo(instrumentedType)
selenium.isVisible("link=Control Panel")
NoSuchThingException.class
Assert.assertEquals(3,results.size())
Long.valueOf(name)
isEDT
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
typeSettingsProperties.toSortedString()
DBG=false
readPermission.intern()
javaWriter.emitSingleLineCOmment("foo")
cxt != null
mock.expectedBodiesReceived("B+END","A+END")
new SQLExecuteTemplate(executeEngine)
mNwService.setInterfaceConfig(mInterfaceName,ifcg)
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,false)
new StringBuilder()
DEBUG=true
callerPrincipalCallback.getSubject()
new FilterConfiguration(filterParams,filterClass)
operation.getType() != Operation.Type.COLUMN
new ByteBuddy().subclass(Foo.class).method(isDeclaredBy(Foo.class)).intercept(FixedValue.value("Hello World!")).method(named("foo")).intercept(FixedValue.value("Hello Foo!")).method(named("foo").and(takesArguments(1))).intercept(FixedValue.value("...")).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
HdmiCec.getTypeFromAddress(i)
return false; 
!project.isDisposed()
selenium.isVisible("link=Control Panel")
MIN_SENTENCE_TOKEN_COUNT=3
put(TYPES,new MapTypeCaster(),Map.class,Double.class)
position.getFixTime().compareTo(lastPosition.getFixTime()) > 0
responseString(p)
public LongRunningOperation withCancellationToken(CancellationToken cancellationToken){   operationParamsBuilder.setCancellationToken(Preconditions.checkNotNull(cancellationToken));   return getThis(); } 
createFile("Test.java","class Test extends Type<A, B, C, D> {\n}")
protected static String lock=""; 
ess.getUser(matchPlayer).isAuthorized("essentials.kill.exempt") && !ess.getUser(sender).isAuthorized("essentials.kill.force")
Assert.notNull(this.key,"A Key is required so CasAuthenticationProvider can identify tokens it previously authenticated")
context.getComment()
request.getRequestURI()
LOG.warn("Operation completely failed, aborting request id: {}",stage.getRequestId())
paths.get(1)
mHandler.postDelayed(pae,timeout)
assertSpnegoWorkflow(uri,mechTypes,kerberosToken,kerberosToken,true,true)
refresh()
regUser * userWeight * trusteeFactorValue* trusteeFactorValue
selenium.isVisible("link=Control Panel")
cacheDirectory.exists()
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) == 0
contains(connection.getRedisClient().getAddr())
statistics.addGetTimeNano(System.nanoTime() - start)
new ByteArrayResource(groovyPages.get(location).getBytes("UTF-8"))
append(myRepositoryRoot,myLastPath,true)
CHECK_PKGNAME=false
-30.0f
IllegalArgumentException.class
StringBuffer detailBuffer=new StringBuffer(); 
Assert.assertSame(_ehcache,_ehcachePortalCache.ehcache)
new StringInputRowParser(dataSpec == null ? null : dataSpec.toParseSpec(timestampSpec,dimensionExclusions),null,null,null)
StringBuffer buffer=new StringBuffer("("); 
mCurrentDate.get(Calendar.MONTH) != dayOfMonth
Log.e(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level+ " isActiveNetwork "+ isActiveNetwork)
readBuffer.remaining() > 0
selenium.isVisible("link=Control Panel")
loaded.getLoaded().getConstructor()
tw.release()
mProgress != null
itemCache.addKey(item.id,item)
new ModelNode().set(1L)
metaInjectMeta.isNoExecution()
getHttpConnectionManager()
LOGGER.debug("Could not execute copy",ex)
primitiveType != null
new MediaController(token)
DEBUG_RC=true
logger.severe("Failed to process response: " + responsePacket + " on response thread:"+ getName())
tester.getServletRequest()
assertTrue(mDisabled.hasFocus())
SystraceMessage.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
getAnonID() != null
Collections.unmodifiableCollection(customNonFilteredExtensions)
logException(id,exception)
IronEngineCoolant.addCoolant(new LiquidStack(Block.waterStill,LiquidContainerRegistry.BUCKET_VOLUME),0.0025F)
host.getAddress()
buffer.put(indices)
mHotspotBounds.set(left,top,bottom,right)
Log_OC.wtf(TAG,"Trying to share a NULL OCFile")
appInfo.targetSdkVersion >= O
PyNames.STATICMETHOD.equals(decoratorName) || PyNames.CLASSMETHOD.equals(decoratorName)
PackagingElement<?>
m.getSize()
Thread.sleep(5000)
Log_OC.wtf(TAG,"Access to unexisting list of files fragment!!")
new InternalSearchResponse(new InternalSearchHits(new InternalSearchHit[]{hit},1l,1f),null,null,false,false)
log.warn("Error extracting callable results",e)
SQLiteDoneException e
parts.length > 0
IBackupManagerService svc=mService; 
Sets.newHashSet()
return true; 
mPolicy != null
matrixMode == MODELVIEW
id=15844
Build.VERSION.SDK_INT < 23
newDto(RecipeDto.class).withLocation(DEFAULT_DOCKER_IMAGE)
mFlexItem.setAlignSelf(AlignItems.CENTER)
tag != null
mMncStr == null
InsertAnalysis analysis=(InsertAnalysis)analyze("insert into deeply_nested (tags) " + "values ([" + "           {\"name\"='cool', \"metadata\"=[{\"id\"=0}, {\"id\"=1}]}, "+ "           {\"name\"='fancy', \"metadata\"=[{\"id\"='2'}, {\"id\"=3}]}"+ "         ])"); 
replacement instanceof PsiExpressionStatement && !(replacement.getLastChild() instanceof PsiJavaToken)
mHorizontals == null
parser.parse(GroovyElementTypes.CLOSURE,builder)
re.getResponse().getStatus() == 404
logger.error("An exception occurred while formatting a date",e)
typeSettingsProperties.toSortedString()
Slog.e(TAG,"Unable to bind FusedProxy.")
sceneCam.getUp()
from("direct:start").multicast(new MyAggregationStrategy()).parallelProcessing().timeout(2000)
startActivityAsUser(intent,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
structuralLock.isLocked()
mGpsListener != null
log.debug("Unexpected exception on closing transaction.  Cause: " + e)
entry.notification.clone()
result == null
Arrays.asList("Die Katzen sind schön.","Frau Meier und Herr Müller sind alt.","Frau Julia Meier und Herr Karsten Müller sind alt.","Julia und Karsten sind alt.","Julia, Heike und Karsten sind alt.","Frau und Herr Müller sind alt.","Herr und Frau Schröder sind alt.","Herr Meier und Frau Schröder sind alt.","Die restlichen 86 Prozent sind in der Flasche.","Die restlichen sechsundachtzig Prozent sind in der Flasche.","Die restlichen 86 oder 87 Prozent sind in der Flasche.","Die restlichen 86 % sind in der Flasche.","Durch den schnellen Zerfall des Actiniums waren stets nur geringe Mengen verfügbar.","Soda und Anilin waren die ersten Produkte des Unternehmens.","Bob und Tom sind Brüder.","Letztes Jahr sind wir nach London gegangen.","Trotz des Regens sind die Kinder in die Schule gegangen.","Die Zielgruppe sind Männer.","Männer sind die Zielgruppe.","Die Zielgruppe sind meist junge Erwachsene.","Die USA sind ein repräsentativer demokratischer Staat.","Wesentliche Eigenschaften der Hülle sind oben beschrieben.","Wesentliche Eigenschaften der Hülle sind oben unter Quantenmechanische Atommodelle und Erklärung grundlegender Atomeigenschaften dargestellt.","Er und seine Schwester sind eingeladen.","Er und seine Schwester sind zur Party eingeladen.","Sowohl er als auch seine Schwester sind zur Party eingeladen.","Rekonstruktionen oder der Wiederaufbau sind wissenschaftlich sehr umstritten.","Form und Materie eines Einzeldings sind aber nicht zwei verschiedene Objekte.","Dieses Jahr sind die Birnen groß.","Es so umzugestalten, dass sie wie ein Spiel sind.","Die Zielgruppe sind meist junge Erwachsene.","Die Ursache eines Hauses sind so Ziegel und Holz.","Vertreter dieses Ansatzes sind unter anderem Roth und Meyer.","Sowohl sein Vater als auch seine Mutter sind tot.","Einige der Inhaltsstoffe sind schädlich.","Diese Woche sind wir schon einen großen Schritt weiter.","Diese Woche sind sie hier.","Vorsitzende des Vereins waren:","Weder Gerechtigkeit noch Freiheit sind möglich, wenn nur das Geld regiert.","Ein typisches Beispiel sind Birkenpollenallergene.","Eine weitere Variante sind die Miniatur-Wohnlandschaften.","Eine Menge englischer Wörter sind aus dem Lateinischen abgeleitet.","Völkerrechtlich umstrittenes Territorium sind die Falklandinseln.","Einige dieser älteren Synthesen sind wegen geringer Ausbeuten ...","Einzelne Atome sind klein.","Die Haare dieses Jungens sind schwarz.","Die wichtigsten Mechanismen des Aminosäurenabbaus sind:","Wasserlösliche Bariumverbindungen sind giftig.","Die Schweizer Trinkweise ist dabei die am wenigsten etablierte.","Die Anordnung der vier Achsen ist damit identisch.","Die Nauheimer Musiktage, die immer wieder ein kultureller Höhepunkt sind.","Räumliche und zeitliche Abstände sowie die Trägheit sind vom Bewegungszustand abhängig.","Solche Gewerbe sowie der Karosseriebau sind traditionell stark vertreten.","Hundert Dollar sind doch gar nichts!","Sowohl Tom als auch Maria waren überrascht.","Robben, die die hauptsächliche Beute der Eisbären sind.","Die Albatrosse sind eine Gruppe von Seevögeln","Die Albatrosse sind eine Gruppe von großen Seevögeln","Die Albatrosse sind eine Gruppe von großen bis sehr großen Seevögeln","Vier Elemente, welche der Urstoff aller Körper sind.","Die Beziehungen zwischen Kanada und dem Iran sind seitdem abgebrochen.","Die diplomatischen Beziehungen zwischen Kanada und dem Iran sind seitdem abgebrochen.","Die letzten zehn Jahre seines Lebens war er erblindet.","Die letzten zehn Jahre war er erblindet.","... so dass Knochenbrüche und Platzwunden die Regel sind.","Die Eigentumsverhältnisse an der Gesellschaft sind unverändert geblieben.","Gegenstand der Definition sind für ihn die Urbilder.","Mindestens zwanzig Häuser sind abgebrannt.","Sie hielten geheim, dass sie Geliebte waren.","Einige waren verspätet.","Kommentare, Korrekturen und Kritik sind verboten.","Kommentare, Korrekturen, Kritik sind verboten.","Letztere sind wichtig, um die Datensicherheit zu garantieren.","Jüngere sind oft davon überzeugt, im Recht zu sein.","Verwandte sind selten mehr als Bekannte.")
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_TUNE_FUNCTION)
mockRegionInfo.isMetaRegion()
ImmutableList.of(listeners)
DEBUG=true
assertEmptyCommentRelatedResults(searchResult)
pressedView.postDelayed(new Runnable(){   @Override public void run(){     if (pressedView != null) {       pressedView.setPressed(false);     }   } } ,100)
!mHasCallback
i=5
tag.getLocalName()
assertEquals(actualTables,expectedTables)
ctx.sendDownstream(e)
PropertiesComponent.getInstance().setValue(getAutoUpdateEnabledProperty(),state)
@Overide
Trans == TRANSPOSE
tsdb.uidTable()
lastGoodQuery.getQuery()
dispatchedMessage.remove(messageId)
undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()
mgr.hasUserRestriction(UserManager.DISALLOW_CONFIG_VPN)
/**   * Service invocation retry times  * @see Constants#DEFAULT_RETRIES  */ int retries() default 0; 
selenium.isVisible("link=Control Panel")
log.warn(sm.getString("contextConfig.invalidSciHandlesTypes",className),t)
-1
response.set(ROLLED_BACK)
conf.getSearchBaseURL()
RemoteException e
manager.beginTransaction().remove(fragment).commit()
logger.warn("Cannot play URI ({})",e.getMessage())
DKV.get(vec._key) == null
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,TEST_UID,TEST_PKG)
verify(client).bufferAtomicIncrement((AtomicIncrementRequest)any())
selenium.isVisible("link=Control Panel")
? super K
LocalFileSystem.getInstance().findFileByIoFile(projectFile)
context.getPackageName()
file.getAbsoluteFile()
new StringBuilder(741)
Thread.sleep(5000)
!saveState
WebAppUtils.getResolvedRMWebAppURLWithoutScheme(new Configuration())
mTopFullscreenOpaqueWindowState == null && (win.getAttrs().privateFlags & WindowManager.LayoutParams.PRIVATE_FLAG_FORCE_SHOW_NAV_BAR) != 0
removeQueueTask(this.message.getMessageId())
mGpsListener != null
offsets[i + 1] - offsets[i] == 1
expiresOn == null
waitOnThreads(f1,f2,f3,f4,f5,f6,f7,f8,f10)
reader.nextInt()
fileAccess.updateFile(new Runnable(){   public void run(){     cache.close();   } } )
logger.error("[{}]: Websocket error: {}",connection.getHost(),e.getMessage())
mService.setUidPolicy(UID_A,POLICY_NONE)
new Requirement(Skill.MINING,53)
StringUtil.equals(packageName,filter)
maker.getTaggedData(NOTIFICATION_SINCE_CREATE_MILLIS)
new Exception()
data.split("\\s*,\\s*")
addView(root,new ViewGroup.LayoutParams(MATCH_PARENT,MATCH_PARENT))
ImmutableSet<ImplemetationMethodDescriptor>
mKey.equals(other.mKey)
ServiceLoader.load(ReportSenderFactory.class)
selenium.isVisible("link=Control Panel")
executeWrappedCommandProtocol(namespace.getDatabaseName(),getCommand(),CommandResultDocumentCodec.create(decoder,"retval"),connection,transformer(connectionSource,connection))
getTokenNames()
Exception e
soLingerTime.toSeconds()
new Paint(Paint.ANTI_ALIAS_FLAG)
entry.getCompleteStore()
selenium.isVisible("link=Control Panel")
addDaysAndCheckForCompletion(30,NextEvent.PHASE,NextEvent.INVOICE,NextEvent.PAYMENT_ERROR,NextEvent.PAYMENT_ERROR)
assertThat(dtos).extracting("id").containsExactly(100L,103L)
-1
textDelimiterLeading.getSelection()
mCaCerts != null || mCaCerts.length > 0
command != null
eq(PackageManager.GET_DISABLED_UNTIL_USED_COMPONENTS)
JedisClusterHashTagUtil.isClusterCompliantMatchPattern(matchPattern)
Object value
Preconditions.checkNotNull(fileSystemMaster)
String.format(mappingFormat,mappedPackageName,packageName,mappedPackageName)
if (false) {   try {     int size=mOriginalWidth > mOriginalHeight ? mOriginalWidth : mOriginalHeight;     mBlackSurface=new Surface(session,0,"BlackSurface",-1,size,size,PixelFormat.OPAQUE,Surface.FX_SURFACE_DIM);     mBlackSurface.setAlpha(1.0f);     mBlackSurface.setLayer(0);   }  catch (  Surface.OutOfResourcesException e) {     Slog.w(TAG,"Unable to allocate black surface",e);   } } 
checkExpressionIsAssignableToType(expr,type,problemKey,allowChangeVariableTypeFix ? p : null)
exchange.getRequestPath()
mUserPaddingEnd > 0
parsedResult.getSqlType()
mService.reassociate()
RuntimeException.class
_backgroundTaskThreadLocalManagerImpl.setUserLocalService(userLocalService)
getRecentsButton()
allowPrivate.isNull()
writeRepeatedFixed64(id,val)
WaitUtils.waitForPageToLoad(driver)
capacity > 1 << 30
createHandlerResult(yubiKeyCredential,this.principalFactory.createPrincipal(uid),null)
String url
Ports.Binding("0.0.0.0",11022)
r != null
settings.readLPw(null)
if (CONST) { } 
String.format("%s is not a parsable int (base10) for %s",optionValue,DEFAULT_COMPACTION_WINDOW_SIZE)
uniqueField.getType().toObject(doc.getField(uniqueField.getName()))
sessionInfo != null
new ApiEventBuilder().setSubscriptionId(subscription.getId()).setEventPlan(newPlan.getName()).setEventPlanPhase(currentTimedPhase.getPhase().getName()).setEventPriceList(newPriceList.getName()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setEffectiveDate(effectiveDate).setRequestedDate(now)
type.getConstructor()
outputBatchSize=5000
lastPos != mTargetPos
createTx(blockchain,sender,receiveAddress,data,1)
rm.add(new QueryPath(cfName,null,cosc.column.name),cosc.column.value,cosc.column.timestamp)
logger_.info("No column family to repair for keyspace " + tableName)
resultEndpoint.assertIsNotSatisfied()
new SpannedString(first,false)
new Long(3)
selenium.isVisible("link=Control Panel")
/**   * Unit tests for  {@link InProcess}.   */ @RunWith(JUnit4.class) public class InProcessTest extends AbstractTransportTest {   private static String serverName="test";   /**   * Starts the in-process server.   */   @BeforeClass public static void startServer(){     startStaticServer(InProcessServerBuilder.forName(serverName));   }   @AfterClass public static void stopServer(){     stopStaticServer();   }   @Override protected ManagedChannel createChannel(){     return InProcessChannelBuilder.forName(serverName).build();   } } 
Boolean.valueOf(attrValue)
new Paint(Paint.ANTI_ALIAS_FLAG)
r - scrollY
addSkyNodes()
rsMeta.getColumnName(i + 1)
packet.getAttribute("from").split("/")
host.getHostText()
new KeyguardStatusViewManager(this,updateMonitor,lockpatternutils,callback,false)
currLine > mPrevLine
type == SessionInfo.BUILD_TOOLS_PACKAGE
ApplicationManager.getApplication().invokeLater(new Runnable(){   @Override public void run(){     new Task.Backgroundable(myProject,"Updating OSGi indices",false){       @Override public void run(      @NotNull ProgressIndicator indicator){         if (!myProject.isOpen())         return;         indicator.setIndeterminate(true);         indicator.setText("Updating OSGi indices");         myBundleManager.reindexAll();       }     } .queue();   } } )
integerSwitchNode.keySuccessor(i) == predecessor
i >= MAX_ATTEMPTS
Math.abs(loss)
m.getSize()
new LayerView(this,0xff0000ff)
packages.size()
Type.getType(classNode.name)
kylinConfig.setProperty(COPROCESSOR_LOCAL_JAR,path)
new FtrlDelta(false,alpha)
player.isAuthorized("essentials.world." + user.getWorld().getName())
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
spec.getFields()
sceneToLocalTransformation.postConcat(parent.getSceneToLocalTransformation())
CommandLineUtils.createDatabaseObject(artifactClassLoader,url,username,dbPassword,driver,defaultSchemaName,databaseClass)
_structureFieldConverter.getFieldDataType(ddmFormField.getDataType())
mTfs.getFile(fileId)
content.equals(newContent)
mExpandedDialog != null
mContext.sendStickyBroadcast(mStorageFullIntent)
LOG.info(rootPath + "is not a directory")
buildVersion=9999
mFixedExecutionService.shutdown()
totTermCount.get() < 10
getObjectLayout().getArrayBaseOffset(elementKind)
mHandler.obtainMessage(MSG_FINGERPRINT_AUTHENTICATED,result.getFingerprint().getFingerId(),result.getFingerprint().getGroupId())
createRecord(value,expiryTime)
entry.leadershipTermId != leadershipTermId
e != null
mPulseCallback.onPulseFinished()
runUTRunner(testDir.getPath(),new File(testDir,"dependentTests/my_class_test.py").getPath())
application != null
DBG=false
mFixedExecutionService.shutdown()
mFile.getPath()
origin.absoluteValue().doubleValue() > complexNumber.absoluteValue().doubleValue()
classFilter.getAcceptedIDs()
new GroupTest(true)
settings.getFilesize(Keys.git.packedGitOpenFiles,cfg.getPackedGitOpenFiles())
logger.debug("observer: timeout notification from cluster service. timeout setting [{}], time since start [{}]",timeOutValue,new TimeValue(timeSinceStartMS))
id=15873
elementAtOffset == null
UserHandle.getCallingUserId()
solo.clickOnView(solo.getView(it.feio.android.omninotes.R.id.fab_expand_menu_button))
_certHosts.isEmpty()
ps.setLong(1,structureId)
dynamicClassType.getConstructor()
db.hashMapCreate("cache").expireAfterAccess(1,TimeUnit.HOURS)
mAdapter == null
"maxHeaderSize must be a positive integer: " + maxChunkSize
return false; 
activityOptions.getAnimationType() == ActivityOptions.ANIM_SCENE_TRANSITION
SystemClock.nanoTime()
ConfigPropertyVetoExceoption e1
this.getDrawnBoundingBoxE6().getLatitudeSpanE6()
!mPhones.contains(phone)
platformData.containsKey(variant)
contains(permissionChecker,primaryKey,actionId)
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
new JsonUt8Writer(sink)
selenium.isVisible("link=Control Panel")
LOG.error(String.format("%d ms elapsed since build job marked as finished, but still missing build rule finished events.",elapseMillisSinceFirstFinishedStatus))
selenium.isVisible("link=Control Panel")
logger.warn("IOException should not have been thrown.",exc)
databaseProductName.startsWith("ASE") || databaseProductName.startsWith("Adaptive")
Element.F64(mRS)
WebSocketEventListener.class.cast(l).onMessage(event)
mOpenStreetMapView.setCenter(expectedCenter)
FunctionTypesKt.isExactFunctionOrExtensionFunctionType(valueParameterOrReceiver.getOriginal().getType())
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
? super Void
new Paint(Paint.ANTI_ALIAS_FLAG)
connection.setFollowRedirects(httpRequest.getFollowRedirects())
set(object,value.intValue())
info.getDeviceSvnUsingSubId(subId[0])
pw.println(ps.getInstantApp(user.id))
DirectMessage.constructDirectMessages(get(getBaseURL() + "direct_messages.json",null,paging.asPostParameterList(),true))
request.getTaskDefinitionKey()
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
selenium.isVisible("link=Control Panel")
fragmentTransaction.replace(R.id.fragment_container,personDetailFragment,KEY_PERSON_DETAIL_FRAGMENT)
mService.addOrUpdatePasspointConfiguration(config,mContext.getOpPackageName())
i >= rows.size()
mQsContainer.getLayoutParams()
s3dir + ".dir"
value.longValue()
endpoint.keepAliveTimeoutSeconds()
!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()
DEBUG=true
mAppOpsService.noteOperation(AppOpsManager.OP_GET_USAGE_STATS,Binder.getCallingUid(),callingPackage)
logger.error("{}",general)
((ResolvedJavaType)obj).getName()
description != null
con.serverSentScoreboard.addTeam(team)
types != null & !types.isEmpty()
cluster.shutdown()
query.length()
getRecentsButton()
field.tokenStreamValue()
fm.stringWidth(fullText) > maxWidth
TarTaskOutputPacker delegate
newDefaultSubIdObj.equals(mDefaultSubId)
callVideoButton.setPressedImage(ImageLoader.getImage(ImageLoader.CALL_VIDEO_BUTTON_SMALL_PRESSED))
"-" + CONFDIR + " and -"+ CONFNAME+ " are required for "+ LINKCONFIG
new EnterSelectionDialog(shell,props,conn,"Target database:","Select the target database:")
_layoutsElement != null
new IndexWriter(directory,new WhitespaceAnalyzer(),true)
return original; 
updateRotation(1)
battery.addPower(Math.min(target,battery.getCapacity() - battery.getStored()))
paginationType.equals("more") && (docs.size() > end)
insets.left == 0
mColumn + (x - 0.5f) * 4 + 1
logger.error("{}",general)
c.toArray()
new RuntimeConfigurationException(PyBundle.message("runcfg.unittest.no_method_name"))
e.getPresentation().setVisible(false)
new Intent()
assertRemoveSubsystemResources(servicesA)
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_PLAY_FUNCTION)
selenium.isVisible("link=Control Panel")
propResource.get(BOOT_TIME).asBoolean()
id=15870
DumbServiceImpl.getInstance(project).queueCacheUpdate(Arrays.asList(updater))
telephony.getNetworkTypeForSubscriber(subId)
ImmutableList.of("content","datum","id","nested","nested.inner_nested","person","person.birthday","person.first_name","title")
/**   * {@inheritDoc}  */ @Override public Object clone(){   FloatProperty prop=(FloatProperty)super.clone();   prop.value=value;   return prop; } 
sentBytesCnt.intValue()
errorHandler.onError(ex)
getPath("InputPackageDeclarationDiffDirectory.java")
factory.getEmbdeddedServletContainer()
configuration.dialect()
DumpUtils.checkDumpPermission(mActivityManagerService.mContext,"gfxinfo",pw)
processSelectedKeys()
System.nanoTime()
Build.VERSION.SDK_INT > Build.VERSION_CODES.M
Collection<GridDrStateTransfer>
pane.getLeftComponent()
parent.setCoordinateIndex(0)
selenium.isVisible("link=Control Panel")
Long.valueOf(val)
discoverers.get(1)
telephony.isRadioOn()
new TBinaryProtocol.Factory(false,true,DatabaseDescriptor.getThriftMaxMessageLength())
status.withDescription(msg)
appBundle.exists() == false
PendingIntent.getActivity(ams.mContext,0,runningIntent,PendingIntent.FLAG_UPDATE_CURRENT)
mBoltPaint.setColor(backgroundColor)
cache.localPeek(1,CachePeekMode.ONHEAP)
handleIncomingUserLocked(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
queueView.get().get(index.longValue())
TimeLwjgl.class
selenium.isVisible("link=Control Panel")
checkArgument(!"/".equals(resourcePath),"%s is the classpath root")
NETHER_WATER(115)
logger.info("failed indexing {}",i,e)
@Input(InputType.Association) LoopBeginNode loopBegin; 
assertEquals(6358482,received.get(0)[1])
/**   * Support the range subscript operator for String  */ public static Object get(CharSequence text,Range range){   int from=normaliseIndex(InvokerHelper.asInt(range.getFrom()),text.length());   int to=normaliseIndex(InvokerHelper.asInt(range.getTo()),text.length());   int length=text.length();   if (from > to) {     int tmp=from;     from=to;     to=tmp;   }   return text.subSequence(from,to + 1); } 
fingerId == 0
Arrays.asList(new CommaWhitespaceRule(messages),new DoublePunctuationRule(messages),new GenericUnpairedBracketsRule(messages),new HunspellNoSuggestionRule(messages,this),new LongSentenceRule(messages),new UppercaseSentenceStartRule(messages,this),new MultipleWhitespaceRule(messages,this),new SentenceWhitespaceRule(messages),new WordRepeatBeginningRule(messages,this),new PostReformPortugueseCompoundRule(messages),new PortugueseReplaceRule(messages),new PortugueseWordRepeatRule(messages,this),new PortugueseWrongWordInContextRule(messages))
sLat == null
final AuditEvemtFormatter formatter=new AuditEventDefaultFormatter(); 
items[i]
HttpParameter.CACHE_ID.getParameterFrom(req) == null
proc.setProcState < ActivityManager.PROCESS_STATE_HOME
Boolean.getBoolean(viewContext.getProperties().get(PROPERTY_SLIDER_SECURITY_ENABLED))
mActiveAgents.valueAt(i)
result == null
requestJSONObject.optString(Article.ARTICLE_EDITOR_TYPE)
Thread.sleep(200)
parser.hasNext(3)
buf.getShort(buf.readerIndex() + 2)
@After public void clearMlState() throws IOException {   new MlRestTestStateCleaner(logger,adminClient(),this).clearMlMetadata(); } 
new FileMetadataSnapshot(FileType.RegularFile,bfa.lastModifiedTime().toMillis(),bfa.size())
logger.info("JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning")
dictionary.get("type")
actionButton.setRolloverImage(new ImageIcon(ca.getRolloverIcon()).getImage())
getPreferences().store(fos,"")
mBlockStream.remaining()
getLocationEnabled()
in_memory_compaction_limit_in_mb=256
statusBar.layout()
sm.getString("jsseUtil.noVerificationDepth")
new AccountCapsule(ByteString.copyFromUtf8(ACCOUNT_NAME_FRIST),ByteString.copyFrom(ByteArray.fromHexString(OWNER_ADDRESS_FRIST)),AccountType.Normal,200L)
checkMatch(inv,x,y,true)
mMat[6]
new float[2]
childrenExpanded ? mDividerHeight : mChildPadding
id.errorIfMissing()
myApplication.invokeLater(new Runnable(){   public void run(){     if (myModule.isDisposed())     return;     ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();     if (indicator != null) {       indicator.setIndeterminate(true);       indicator.setText("Updating manifest indices.");     }     myBundleManager.reindex(myModule);   } } )
super.remove(key)
@Nullable Throwable cause
format("RowBlock{SingleRowBlockWriter=%d, fieldBlockBuilderReturned=true}")
Context.getProviderService().getAllProviderAttributeTypes(false)
metadata.getValue(TagMetadata.TAG_UUID) > 0
Integer.valueOf(sessionTTL)
selenium.isVisible("link=Control Panel")
isGroupConversation()
new Paint(Paint.ANTI_ALIAS_FLAG)
startTime=5
new Paint()
logger.infof("OAuth clients imported: " + clients)
detector != null
assertFalse(predicate.apply(pickleEvent))
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
new BuildSecondHashMatchIterator(this.inputs[0],this.inputs[1],keyPositions1,keyPositions2,keyClasses,memoryManager,ioManager,this,availableMemory)
queueIndex < 0
DecorView.isNavBarToLeftEdge(bottomInset,rightInset)
metadata.getClass()
LOGGER.debug("Could not execute unmarkEntries",ex)
cam.getDirection().mult(2)
readPermission.intern()
ClusterMetadata metadata=cluster.getMetadata(); 
selenium.isVisible("link=Control Panel")
Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage("helloForRole"))
private MediaDriverReceiver receiver; 
selenium.isVisible("link=Control Panel")
new IllegalStateException()
myNameSuggestionsField.getComponent()
Localization.menuTitle("New article")
spellParser.isFinished()
log.warn("Error sending end packet",iex)
new Tree(){   public Dimension getPreferredScrollableViewportSize(){     Dimension size=super.getPreferredScrollableViewportSize();     size=new Dimension(size.width + 10,size.height);     return size;   }   protected void processMouseEvent(  MouseEvent e){     if (e.getID() == MouseEvent.MOUSE_PRESSED) {       int row=myTree.getRowForLocation(e.getX(),e.getY());       if (row >= 0) {         final Rectangle baseRect=myTree.getRowBounds(row);         baseRect.setSize(checkboxWidth,baseRect.height);         if (baseRect.contains(e.getPoint())) {           myTree.setSelectionRow(row);           toggleSelection();         }       }     }     super.processMouseEvent(e);   }   public int getToggleClickCount(){     return -1;   } } 
s.getIndexReader()
300 * 1000L
mFilesAll.indexOf(file)
klass.getDeclaredFields(false,declaredFields)
backgroundTaskPersistence.findByG_N_T(groupId,name,taskExecutorClassName)
CHECK_DB_AT_VERSION=40
service.getKioskList().getAvailableKisoks()
e.getMajorType()
action == KeyEvent.ACTION_UP
metadata.getFaceRectangles()
Integer.class
new IllegalArgumentException(String.format(ERROR_BRANCH_LIST_UNSUPPORTED_LIST_MODE,listMode))
fileType.equals(fileType.getName())
dataType.getTypeName()
showMessage(context.getString(R.string.error_calculating_route_occured))
log.warn("Double activation of navigator context")
args.length == 3
type.getConstructor()
mAppToken.hasContentToDisplay()
enabled=false
UnsupportedOperationException.class
serRef != null
version.getUpdate().getAsInt() >= 92
id=28
number.intValue()
(totalItemCount - lastVisibleItemPosition) == ITEM_LEFT_TO_LOAD_MORE
"Scheduling method " + method.getName() + " on "+ target+ " to be run every "+ delay+ " "+ timeUnit+ " after "+ delay+ " "+ timeUnit
new DatabaseExplorerDialog(shell,props,SWT.NONE,inf,transMeta.getDatabases())
Integer.valueOf(taskIdStr)
loaded.getLoaded().getConstructor()
maker.getTaggedData(NOTIFICATION_SINCE_CREATE_MILLIS)
hasCollapsibleActionView()
t != globalType
this.getPositionInParent()
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
from >= to
public static ResourceBundle getMessages(){   return new LocalizationBundle(messages); } 
flexItem.getMarginEnd()
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
msbFragmentEntry.getFragmentEntryId()
gridDim > 512
return false; 
new FileOutputStream(tempFile,false)
StringUtils.containsIgnoreCase(userAgentStr,"Iframely") || StringUtils.containsIgnoreCase(userAgentStr,"Google") || StringUtils.containsIgnoreCase(userAgentStr,"B3log")|| StringUtils.containsIgnoreCase(userAgentStr,"BUbiNG")
message.getEncryption() == Message.ENCRYPTION_OTR
realPointerIndex > AndroidInput.NUM_TOUCHES
partitionContainer.getRecordStore(name)
assertEquals(c1.counts + c2.counts,SIZE * COUNTDOWN)
TextStyle.decodeEffect(encoded) | TextStyle.CHARACTER_ATTRIBUTE_STRIKETHROUGH
maxAlongDimension.isRowVector()
customCroutonControls.setVisibility(View.VISIBLE)
curArticle.getArticleId()
assertEquals(2,result.getAuthorities().size())
LOG.info("Creating netty output stream for block {} @ {} from client {}",blockId,address,NetworkAddressUtils.getClientHostName())
IBackupManagerService svc=mService; 
mSpinner != null
context.formatSeparator()
new IllegalStateException()
new IndexShardRoutingTable.Builder(new ShardId(indexName,0),false)
routePointImage.setOnClickListener(saveAsLineOnClickListener)
Slog.wtf(TAG,sb.toString())
error("Failed to resolve default logging config file: " + DFLT_CONFIG_PATH)
Assert.fail()
sendMsg(mAudioHandler,MSG_SET_ALL_VOLUMES,SENDMSG_NOOP,0,0,VolumeStreamState.this,0)
IBackupManagerService svc=mService; 
file.getLocalFile()
GridHadoopTestUtils.jsonToMap("{type:'tcp', port:11500}")
StringBuffer ret=new StringBuffer(100); 
replayStart=DateTime.now()
assertFalse(qr.hasFullRank())
result == Byte.MAX_VALUE
serializer.serializeForInsert(metadata,entity,columns,values,subQuery)
selenium.isVisible("link=Control Panel")
Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose())
underTest.newRequest()
index > -1
win.isAnimatingLw() && appWindow && showWhenLocked
mAztecImageLoader != null
tw.release()
Context.getPermissionsManager().checkGeofence(getUserId(),entity.getAttributeId())
View divider=new View(mContext); 
this.keycloakSession.users().getUserByServiceAccountClient(clientSession.getClient())
return ANTUMN; 
inputBuffer.nbRead() > 0
addr.isAnyLocalAddress()
metadata.comparator.compare(tombstone.start.bound,first.stop.bound) > 0
localNodeAckEvent.addListener(new ActionListener<Void>(){   @Override public void onResponse(  Void ignore){     assert Thread.holdsLock(mutex) : "Coordinator mutex not held";     assert committed;     receivedJoins.forEach(CoordinatorPublication.this::handleAssociatedJoin);     assert receivedJoinsProcessed == false;     receivedJoinsProcessed=true;     clusterApplier.onNewClusterState(CoordinatorPublication.this.toString(),() -> applierState,new ClusterApplyListener(){       @Override public void onFailure(      String source,      Exception e){ synchronized (mutex) {           removePublicationAndPossiblyBecomeCandidate("clusterApplier#onNewClusterState");         }         ackListener.onNodeAck(getLocalNode(),e);         publishListener.onFailure(e);       }       @Override public void onSuccess(      String source){ synchronized (mutex) {           assert currentPublication.get() == CoordinatorPublication.this;           currentPublication=Optional.empty();           logger.debug("publication ended successfully: {}",CoordinatorPublication.this);           updateMaxTermSeen(getCurrentTerm());         }         ackListener.onNodeAck(getLocalNode(),null);         publishListener.onResponse(null);       }     } );   }   @Override public void onFailure(  Exception e){     assert Thread.holdsLock(mutex) : "Coordinator mutex not held";     removePublicationAndPossiblyBecomeCandidate("Publication.onCompletion(false)");     FailedToCommitClusterStateException exception=new FailedToCommitClusterStateException("publication failed",e);     ackListener.onNodeAck(getLocalNode(),exception);     publishListener.onFailure(exception);   } } ,EsExecutors.newDirectExecutorService())
mScreenBrightnessDarkConfig > mScreenBrightnessDimConfig
toolItem.getControl()
mCachedDevice.onProfileStateChanged(mHidProfile,BluetoothProfile.STATE_DISCONNECTED)
Integer.valueOf(sessionTTL)
input.floatValue() == value.floatValue()
sessionConf.get("tez.queue.name") != null
mMessageList.getId()
builder.types("Person")
mode.contains("survi") || mode.equalsIgnoreCase("0")
eps(otherArr)
new MethodHandler(methodKey,groupId,cal,types)
resources.getDimension(R.dimen.close_handle_height)
cellIndex <= lastCell
((MasterSlaveDataSource)dataSource).getAllDataSources()
Double rate
Long.valueOf(args[1])
status.getCode().ordinal()
rhs == null
letterSet.size()
15 * 60 * 1000
i == -1
Trans == TRANSPOSE
sendMessage(CMD_STOP_AP)
mMenu.getVisibleItems()
new NeuralNetConfiguration.Builder().optimizationAlgo(OptimizationAlgorithm.CONJUGATE_GRADIENT).iterations(100).weightInit(WeightInit.VI).stepFunction(new GradientStepFunction()).activationFunction("tanh").filterSize(5,1,2,2).nIn(4).nOut(3).batchSize(batchSize).visibleUnit(RBM.VisibleUnit.GAUSSIAN).hiddenUnit(RBM.HiddenUnit.RECTIFIED).layerFactory(layerFactory).list(2).backward(true).preProcessor(0,new ConvolutionPostProcessor()).hiddenLayerSizes(new int[]{9}).override(new ClassifierOverride(1))
AbstractRanking.refreshMinMax(this,graph)
StringBuffer sb=new StringBuffer(); 
Predicates.or(Predicates.containsPattern("storm-compatibility-examples.src.java"),Predicates.containsPattern("storm-compatibility.src.java"),Predicates.containsPattern("tools/test/LcovMerger"),Predicates.containsPattern("contrib"))
new Paint(Paint.ANTI_ALIAS_FLAG)
parser.parse("-u",username,"-p",password,"-U",url,"--path.conf",conf)
Thread.sleep(5000)
LOG.isDebugEnabled()
new BooleanPreference("use_english_names",false,true)
IndexReader.open(userindex,true)
@Override public final DivideBy and(String sql,Object... bindings){   return and(condition(sql,bindings)); } 
baseExpr instanceof ClassExpression
commitMessage.substring(subjectIndex)
Throwable t
promise.setSuccess()
listAdapter.notifyDataSetInvalidated()
Preconditions.checkNotNull(secondOperand,"Argument secondOperand can't be null")
new UnsupportedOperationException("ExifInterface only supports saving attributes on JPEG formats.")
new IllegalArgumentException("Legacy advertisement can't be connectable and non-scannable")
setImageDrawable(icon)
!returnValue
logger.info(String.format("writing packet %s",packet))
mService.reassociate(mContext.getOpPackageName())
rng.nextInt() % 100 + 100
Log.e(TAG,status)
@RunWith(MockitoJUnit4Runner.class) public class JUnit4ExampleTest extends ExampleTest { } 
resources.getResource(path)
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
descriptors[i].getPropertyType().equals(propertyType)
type.getConstructor()
new InternalSearchResponse(hits,null,null,false,null)
Exception e
"Virtual file is null for " + file
localBroker.request(sub.getLocalInfo())
subCursor.getInt(COLUMN_ATTENDEE_ID_NAMESPACE)
(CheckBoxPreference)mPrefInstantUpload
Status.constructStatuses(get(getBaseURL() + "statuses/mentions.json",null,paging.asPostParameterList(),true))
oldestUnflushedStoreSequenceIds.put(encodedRegionName,oldestUnflushedStoreSequenceIdsOfRegion)
public Object getValue(){   return value; } 
type.getOpenWithApplication().isEmpty()
Integer.toString(bitstampOrder.getId())
String.format("t(dijk): %6.2f, t(period): %6.2f, t(lazy): %6.2f, t(neighbor): %6.2f",dijkstraTime,periodTime,lazyTime,neighborTime)
loaded.getLoaded().getConstructor()
exchange.getRequestPath()
new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions),JSONParseSpec.JSON)
targetType.getConstructor()
myBaseVersion=23
(LongFloatVector)row
labelProbsForToken.get(label) < entityLabelProbVals.get(label)
userModelFile != null
i % 1
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
sceneRoot.setTag(com.android.internal.R.id.scene_layoutid_cache,scenes)
new SpdySessionStatus(11,"INTERNAL_ERROR")
names[2]
logger.infof("OAuth clients imported: " + clients)
t == null
position >= 0 || position < dayPickerView.getCount()
ReactiveHelper.scheduleLast(runnable,"Multicast next step")
rule.getName() == null
LOGGER.debug("Cache expiration duration after reads is set to [{}]",currentDuration)
Math.min(leftLen,rightLen)
mg.maxGap(input)
String id
new Paint(Paint.ANTI_ALIAS_FLAG)
renderManager.render(tpf,false)
mNetAttributes[type].mLastState == state
loaded.getLoaded().getConstructor()
TypeUtils.isAnnotationMirrorOfType(mirror,Constants.ENTITY)
http2.setInitialStreamSendWindow(initialStreamSendWindow)
!BuildCraftCore.DEVELOPER_MODE
IBackupManagerService svc=mService; 
holder.setVisible(loadEndViewId,visible)
mAppToken.hasContentToDisplay()
grantRuntimePermissionsLPw(contactsPackage,ACCOUNTS_PERMISSIONS,userId)
createTextAttributesKey(DART_DYNAMIC_LOCAL_VARIABLE_REFERENCE,PARAMETER_REFERENCE)
TimeUnit.SECONDS.toMillis(2)
this.thrown.equals("File must exist")
data != null
Log.wtf(TAG,"Found activity " + r + " in proc activity list using "+ r.app+ " instead of expected "+ app)
ClientCredentialsProviderUtils.class
poList[1]
createShrinkFadeOutFromBottomAnimation(mContentContainer,0,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
prefSize(new Fixed(width))
SUBOPTIMAL_INDEX_FOR_CONSTAINS_QUERY(SeverityLevel.INFORMATION,Status.Statement.SuboptimalIndexForWildcardQuery,"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see " + "documentation on index configuration.")
TelephonyManager.getDefault().getPhoneType()
NativeDecoder.matches(in,inputFormats)
logger.info("license [{}] - invalid",license.uid())
getTableName(simpleFilter)
lp.width != panelWidth
periodUnit == 'n'
selenium.isVisible("link=Control Panel")
verifyNothing(decoder,binary("02080000251848470afa010262daa690013aa4046da83745f8812560df010001126a"))
URLUtils.currentUrlEqual(uriBuilder.build().toASCIIString())
BrowseCap.isMacintoshDesktop()
grabFrame(true,true,false,false)
Thread.currentThread().getId()
event.getRequestedTransitionTime()
statistics.addGetTimeNano(System.nanoTime() - start)
stop("background",ServiceSinkhole.this,false)
this.vertices.containsKey(node) || this.chainedTasks.containsKey(node)
Integer value=list.get(i); 
eq(ethernetIface)
initialCapacity < 0
sa.getInt(com.android.internal.R.styleable.PreferenceHeader_id,(int)HEADER_ID_UNDEFINED)
path == null
new UnsupportedOperationException("ExifInterface only supports saving attributes on JPEG formats.")
new WebdavEntry(resp.getResponses()[i])
IndexReader.open(userindex,true)
i.getTouchIconUrl() != null
visible=true
deleteTaskView.animate().setDuration(300).scaleX(0)
primitiveType != null
new StringBuilder()
i < size
event.getTime() <= currentPlayTime
synchronized (this) {   mScreenOnTime=readScreenOnTimeLocked(); } 
new DirIcon(IconLoader.getIcon("/icons/foldersOpen" + iconPath),IconLoader.getIcon("/icons/folders" + iconPath))
_classPathReferences.add(file)
adapter == ResultSetViewer.class
tempPinnedTaskBounds != null
executeMethodAndCovertExceptions(httpPatch)
IndexSettingsModule.newIndexSettings(shardId.index(),Settings.EMPTY,Collections.EMPTY_LIST)
type == TYPE_PUBLIC
!nm.matches(sr.localeName) || !nm.matches(sr.otherNames)
out.writeUTF(type)
params.getPathRelativizer()
cf.getCompressionType() == null
return 5010; 
new RuntimeException(e)
ComputationGraph.class
WidgetRemoteViewsServiceBinding(appWidgetId,fc)
new IOSMobileDriverImpl(projectDir,portalURL)
List<IItem>
Integer contentLength=ctx.getOriginContentLength(); 
previousTypeSettingsProperties.toString()
-1
display.getMetrics(dm)
super.onRequestSendAccessibilityEvent(child,event)
elapsedMillis < 170
DecorView.isNavBarToLeftEdge(bottomInset,rightInset)
value.length() <= 3
structuralLock.isLocked()
StringBuffer output=new StringBuffer(); 
selenium.isVisible("link=Control Panel")
CommandLineTransformer.transform("-i","-np","-v","-J-Xmx1g","-J-Xms1m","\"c:\\path to\\русский каталог\"")
layout.setRefreshingLabel(label)
CollectionUtils.isEmpty(realms)
sendMessage(CMD_STOP_AP)
assertEquals(2,ti.nrOfInvocations)
mAttachInfo == null
ApplicationManager.getApplication().invokeLater(new Runnable(){   @Override public void run(){     myLabelEditor.setText(myLabelEditor.getText());     myChildrenEditor.setText(myChildrenEditor.getText());     myChildrenExpandedEditor.setText(myChildrenExpandedEditor.getText());     myListChildrenEditor.setText(myListChildrenEditor.getText());   } } ,ModalityState.any())
10 * MINUTES
SHUTDOWN_VIBRATE_MS > 0
ContainerUtil.newHashSet("AddToFavoritesPopup","RemoveFromFavorites","DatabaseView.ImportDataSources","CompileDirty","Compile","AddNewFavoritesList","EditFavorites","RemoveFromFavorites","RenameFavoritesList","RemoveFavoritesList")
isResumed()
config.getInputShipStrategy(0)
Headers.FORWARDED.toString()
"Error resetting interface " + mInterfaceName + ", :"+ e
new HTTPJavaImpl(this)
new HazelcastProperty("hazelcast.invalidation.min.reconciliation.interval.seconds",1,SECONDS)
mForgotPatternButton.getVisibility() == View.VISIBLE
new GameOver(Gdx.app)
NullPointerException e
a.indexOf(':')
shadowSize == 0
packageNames.length == 1
isAvailable(status)
typeDefinition.getGroovyMethods()
PlatformDependent.getByte(index)
mDateView.setTypeface(Typeface.SANS_SERIF)
new StringBuilder()
selenium.isVisible("link=Control Panel")
builder.put(columnHandle,0L)
log.warn("Can't check auto-commit state",e)
position < 0
out.writeObject(function)
side.toString()
id=34
MutableLongValue value
CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())
Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class)
plan0.getPriceListName().equals(plan1.getPriceListName()) && plan0.getProductName().equals(plan1.getProductName())
route.setDelay(5000)
invertedIndex.getImmutable(i)
selenium.isVisible("link=Control Panel")
st.setCharacterStream(name,characterStream.asReader(),characterStream.getLength())
DeprecationLogger.nagUser("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
Assert.assertEquals(3,results.size())
new FPSAnimator(window,60,true)
bottomIndex > topIndex
new HashSet<RecordReplicationInfo>()
Duration.ofMillis(260)
parentAccessibilityViewId != AccessibilityNodeInfo.UNDEFINED_ITEM_ID
TestPackage.foo(10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
dest.writeParcelableArray(remoteInputs,flags)
margin=5
buf.capacity()
mDeviceOwner != null
new GroupTest(false)
mConnector.execute("volume","format",vol.id)
anchorView.getWindowToken()
mHandler.handleMessage(msg)
maxResults < 0
service.getFullName()
IOException e
is(3)
availableVersions == null
synchronized (listeners) {   if (listeners == null) {     listeners=new LinkedHashSet<HttpSessionListener>(GeoServerExtensions.extensions(HttpSessionListener.class));   } } 
timeout < 0
curRowNum >= segmentSize
generateRandomStringArray(20,20,false)
mf.getColumnName()
a.getDimensionPixelOffset(attr,0)
Maps.newHashMap()
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
BasicMonkeyServer.class
logger.warn("Did not recognise element named {}",localName)
msg.obj == mSmHandlerObj
args[0]
Context.getPermissionsManager().checkGeofence(getUserId(),entity.getAttributeId())
fm2.getKnownNodes().size() > 0
equalTo(22)
private LinearLayout mCardFrame; 
loaded.getLoaded().getConstructor()
FileDataStorageManager.triggerMediaScan(file.getStoragePath())
targetInfo != null
mPulseCallback.onPulseFinished()
myParametersInContext <= that.myParametersInContext
mirror.getTypeId()
log.info("Not in OSGi: using plexus based maven parser")
assertTrue(model.getUniqueItems())
WorkflowDefinitionLinkLocalServiceUtil.addWorkflowDefinitionLink(defaultUser.getUserId(),company.getCompanyId(),companyGroup.getGroupId(),assetClassName,0,workflowDefinition.getName(),workflowDefinition.getVersion())
new CustomChangeException("Failed to insert one or more concept map types")
HeaderBuilder.this
out.getVersion().after(Version.V_5_3_0_UNRELEASED)
Flux.fromIterable(getSessionIdResolver().resolveSessionIds(exchange)).concatMap(this.sessionStore::retrieveSession).next().flatMap(session -> validateSession(exchange,session)).otherwiseIfEmpty(createSession(exchange))
@Test public void testNoPendingAfterTrim() throws OutOfCapacityError, BrokenBarrierException, InterruptedException {   MultiLevelPriorityQueue queue=createQueue();   queue.put(createQueryRequest(groupOne,metrics));   queue.put(createQueryRequest(groupTwo,metrics));   TestSchedulerGroup testGroupOne=groupFactory.groupMap.get(groupOne);   TestSchedulerGroup testGroupTwo=groupFactory.groupMap.get(groupTwo);   testGroupOne.peekFirst().getQueryRequest().getTimerContext().setQueryArrivalTimeNs(1000);   testGroupTwo.peekFirst().getQueryRequest().getTimerContext().setQueryArrivalTimeNs(1000);   QueueReader reader=new QueueReader(queue);   reader.startAndWaitForQueueWakeup();   assertTrue(reader.readQueries.isEmpty());   assertTrue(testGroupOne.isEmpty());   assertTrue(testGroupTwo.isEmpty());   queue.put(createQueryRequest(groupOne,metrics));   sleepForQueueWakeup(queue); } 
ResponseEntity<Void>
n.getNodeData().getLabel().toLowerCase().contains(str)
CompletableFuture<Boolean>
removeBlockInternal(sessionId,blockId,BlockStoreLocation.anyTier())
mAppliedTemporaryAutoBrightnessAdjustment=true
mInstalld.snapshotProfile(appId,packageName,codePath)
_buildTemplateWithGradle("npm-metaljs-portlet","metaljs-dependency-management","--dependency-management-enabled","true")
config.isAutoRead()
IBackupManagerService svc=mService; 
i < 10
mActiveAgents.valueAt(i)
mAppOpsService.checkOperation(AppOpsManager.OP_GET_USAGE_STATS,Process.myUid(),null)
ThingFactory.class
mPm.getPackageUid(callingPackage,PackageManager.MATCH_ENCRYPTION_AWARE_AND_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES)
docker.copyArchiveToContainerCmd(container.getId())
FluxPeekHelper<T>
INACCESSIBLEMEMONLY_OR_ARGMEMONLY
showDialog(parent,message,title,options,defaultOptionIndex,icon)
fragmentEntryPersistence.filterCountByG_FCI_S(groupId,fragmentCollectionId,status)
!MediaFile.isAudioFileType(fileType) && !MediaFile.isVideoFileType(fileType) && !MediaFile.isImageFileType(fileType)&& !MediaFile.isPlayListFileType(fileType)
name == null
stall_till_cloudsize(2)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
StringUtil.isBlank(raw)
selenium.isVisible("link=Control Panel")
Assert.assertEquals(serviceContext.getAssetCategoryIds(),assetCategoryIds)
revokingStore.enable()
TypedItemActivity.class
mQuietEnable
Log.e(TAG,"Got null argument for a signing keyset, ignoring!")
new Camera()
d.getClass()
getActionBar()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
_typeSettingsProperties.toSortedString()
settings.readLPw(null)
mSelectResponse != null & mSelectResponse.length > 0
FAILED_BIOMETRIC_UNLOCK_ATTEMPTS_BEFORE_BACKUP=15
final ImageView buttonNavigate=(ImageView)view.findViewById(R.id.context_menu_route_button); 
mInstalld.snapshotProfile(appId,packageName,codePath)
ContainerUtil.createConcurrentWeakMap()
2f / 3f
UserHandle.getCallingUserId()
mAudioSource.buildConfig(mDesiredSamplingRate,mDesiredChannelMask,mDesiredFormat,null)
i < arguments.length
onDetachedFromWindow()
LOG.info("Date could not be parsed. Was set to NOW because {} is true.",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE)
logger.error("couldn't execute commandLine '" + commandLine + "'",e)
mWidth - glowWidth
new OutputStreamWriter(clientStream)
privObj.getObjectName().equals("masking_test_view")
mDisplay.getMetrics(mDisplayMetrics)
new PojoMessageHandlerAsyncBinary(pojo,m,session,params,indexByteBuffer,false,indexSession,indexBoolean)
target.getUri()
parsedResult.getSqlType()
Long.valueOf(value)
enabled=false
rule.setQsappend(true)
checkPlanDoNotMatch(exchange(),"Expected rules to be fired before 'AddExchanges' optimizer")
BuildRule buildRule
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
ErrorHandlerFactory builder=routeContext.getRoute().getErrorHandlerBuilder(); 
list.isEmpty()
pm.performDexOpt(pkg,null,false)
loaded.getLoaded().getConstructor()
origin.realComponent().doubleValue() < other
Long.valueOf(attrValue)
response.isFailed()
this.registry.getValue().addXAResourceRecovery(recovery)
near.remove(1)
FileMetadataSnapshot.missing()
i <= MAX_AUDIO_PORTS
Long.valueOf(val)
_train.remove(_parms._offset_column)
Flux.from(this.messageService.publisherPreAuthorizeBeanFindById(1L)).contextStart(withUser)
myFixture.testCompletionVariants(getTestName(true) + ".go","for","const","var","return","if","switch","go","defer","select","fallthrough","goto","main","struct","map")
mGpsListener != null
sequence.getCache() != null
hasCdmaDataConnectionChanged
timeOut=30_000
objects.getClass().getGenericSuperclass().getTypeName()
node.getBranch()
selenium.isVisible("link=Control Panel")
size >= min || size <= max
value.toLowerCase().contains(constraintLowerCase)
GroovyJavaNonSecurityTestsSuite.suite()
calendar.roll(Calendar.DATE,-1)
remaining - (long)pos
mWorkerId + BASE_FILE_NUMBER
audioManager.getRingerMode()
CellNames.compositeDense(SuperColumns.scName(name))
current > 0
renderManager.render(tpf)
this.encoder.encode(inputStream,message.bufferFactory(),elementType,contentType,hints).mapError(this::mapError)
callTimeout=5000
machine.getConfig().getLimits().getRam() * 1024 * 1024
this.seq
dockedBounds.left - adjustment
String url
result.expectedMessageCount(1)
return false; 
new TextPaint(Paint.ANTI_ALIAS_FLAG)
final String accountExternalKey
headers.getContentLength() < 0
myNotNullParams.size() > 0
fragmentEntryPersistence.filterFindByG_FCI(groupId,fragmentCollectionId,start,end)
WordPress.getCurrentBlog().getRemoteBlogId()
selenium.isVisible("link=Control Panel")
new ArrayList<Alert>()
lastClient.toString()
between(0,10)
assertFalse(cache.context().systemTx())
info == null
mLayoutAnimator.shouldAnimateLayout(viewToRemove) && arrayContains(tagsToDelete,viewToRemove.getId())
type.getConstructor()
colorModeClass.equals("ProportionalSizeMode")
ticks / ticksInGap
mf.getColumnName()
getPropertyAsString(PROXYSCHEME)
type.getConstructor()
WordPress.getCurrentBlog().getRemoteBlogId()
!name.startsWith(prefix)
YMLSourceUtil.getDefinitions(content,nestedDefinitionIndent)
endPos < paraEnd
request.getTaskDefinitionKey()
View.SYSTEM_UI_TRANSPARENT
data < 0 && data > Short.MAX_VALUE
bundleContext.getBundle().getEntry(uri)
CollectionUtils.compareAsList(getParameters(),o.getParameters())
sampleFactory.getConstructor()
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
off >= buf.length
!okToShowLocked(r)
um.getEnabledProfileIds(userId)
sectionStartToken.word()
VERSION=13
logger.warn("Cannot remove group member ({})",e.getMessage())
!f.getName().equals(unzipped.getName())
getUrl()
mConferenceById.containsKey(callId)
mono.otherwiseIfEmpty(Mono.error(getRequiredBodyError(bodyParameter)))
new DatabaseExplorerDialog(shell,props,SWT.NONE,dbinfo,transMeta.getDatabases(),true)
ConfigPropertyVetoExceoption ex
return r; 
telephony.isRinging()
ap.getSsid()
packageNames.length == 1
Thread.sleep(5000)
walk.release()
getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
User.createCursorSupportUserList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/followers/T4J_hudson.json"))
currentCountry.getCountryFullName()
@ConditionalOnEnablednHealthIndicator("solr")
Multimap<Object,JSError>
selenium.isVisible("link=Control Panel")
badLine.getMessage()
req.getSession().getMaxInactiveInterval() * 1000
assertEquals(2,StringUtil.countMatches(drl,"import "))
Settings.Secure.getInt(mContentResolver,Settings.Secure.ACCESSIBILITY_DISPLAY_MAGNIFICATION_NAVBAR_ENABLED)
checkNotNull(resource,"Resource should not be null")
logger.warn("Cannot paly favorite ({})",e.getMessage())
log.warn("Not found for {}: {}",uriInfo.getRequestUri(),error)
context.setDelayer(2000)
conf.setInt("hbase.hregion.memstore.block.multiplier",10)
SCAN_STATUS_PARTIAL=0
500 * 1000000L
jitter=0.4
@RunWith(HazelcastSerialClassRunner.class) @Category(QuickTest.class) public class UserCodeDeploymentPermissionTest extends AbstractGenericPermissionTest {   @Override protected Permission createPermission(  String name,  String... actions){     return new CardinalityEstimatorPermission(name,actions);   }   @Test public void checkDeployPermission_whenAll(){     new CheckPermission().of("deploy").against("deploy").expect(true).run();   }   @Test public void checkDeployPermission(){     new CheckPermission().of("deploy").against("all").expect(true).run();   }   @Test public void checkAllPermission_whenDeploy(){     new CheckPermission().of("all").against("deploy").expect(false).run();   } } 
c > 0
new LinearSectionConfig(SectionConfig.DEFAULT_GUTTER,SectionConfig.DEFAULT_GUTTER,SectionConfig.HEADER_INLINE,SectionConfig.FOOTER_STICKY,0,0,0,0)
substitutor.substitute(parameters[i].getType())
outList.size()
r.nextFloat() < 0.1f
FluentIterable.from(targetNodes).transformAndConcat(node -> AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.LINKING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class,HalideLibraryDescription.class))).append(targetNodes)
AUILSampleActivity.class
ScanResult.is24GHz(frequency)
timeout < 0
DirectMessage.constructDirectMessages(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/direct_messages.json"))
log.warn("Hooking new default : onOperatorError")
writer.shutdown(false)
viewFlow.getWidth()
public TokenStream create(TokenStream input){   return new LengthFilter(input,min,max); } 
Throwable t
index >= size && index < 0
Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient).mount(alluxioPath,ufsPath)
IntrospectionSupport.setProperties(config,componentProperties,null)
internalPath != null
Math.min(aggregateData.getAvgColLen(),newData.getAvgColLen())
is(5)
message.getContact()
processor.open(w,request)
mCursor.deactivate()
mapEntry.getValue().isSame(source)
selenium.isVisible("link=Control Panel")
Thread.sleep(50)
Slog.wtf(TAG,"Receiver with filter " + filter + " already registered for pid "+ rl.pid+ ", callerPackage is "+ callerPackage)
tagName.equals("uses-permission-sdk-m")
LOGGER.info("Invalid number format for side pane component '" + componentName + "'.",e)
new CompositeException(ex,e)
range.getFrom()
logger.warn("Could not fetch {} result for type: {} and filter: {}. Using default value '0': {}",requestedKey,entriesType,entriesFilter,ex.getMessage(),ex)
consumed || ((AndroidJoyInput14)joyInput).onKey(event)
getService().animateCollapse()
blockId >= Block.field_71973_m.length
{14,3.0f}
selenium.isVisible("link=Control Panel")
new LengthFieldBasedFrameDecoder(1024,3,2,1,0)
path.substring(6)
header[3]
super.dispatchTouchEvent(ev)
dimensions != null || !dimensions.isEmpty()
!canSupportPublicClient(client)
configurationManager.addConfigurationProvider(c)
um.getUsers()
mSplashScreen.getVisibility() == View.VISIBLE
ProjectRootManager.getInstance(project).getFileIndex().isInSourceContent(virtualFile)
mAccessibilityController.isTouchExplorationEnabled()
new EnterSelectionDialog(shell,props,options,"Partioning method","Select the partitioning method")
RedisRunner.startDefaultRedisServerInstance()
CharSequence message
scannedUnit.excludeUnlistedClasses()
mWm.addAppToken(0,null,0,0,0,false,false,0,0,false)
STATUS.isStatusDefault(mStatus)
doc=NON_EMPTY_DOC
mContext.bindServiceAsUser(mIntent,mServiceConnection,flags,new UserHandle(mUserId))
return false; 
TestPropsValues.getGroupId()
z + 1 > size
-1
Ordered.LOWEST_PRECEDENCE - 1
device == AudioSystem.DEVICE_OUT_HDMI
mLocalDirtyRect.setEmpty()
label.getPackageFragment()
decoder.readString()
setDozeInFrontAlphaDelayed(mAodFrontScrimOpacity,30)
dest.writeLong(mSubId)
mCurrentBlockLeftByte > tLen
task.cancel()
t.equals(type)
new MediaSize("UNKNOWN_PORTRAIT","android",R.string.mediasize_unknown_portrait,Integer.MAX_VALUE,1)
mBondState.setBondState(address.toUpperCase(),state)
selenium.isVisible("link=Control Panel")
case 3: 
SCAN_STATUS_COMPLETE=1
loaded.getLoaded().getConstructor()
klass.getDeclaredFields(false,declaredFields)
snap.getGravity() == Gravity.CENTER_HORIZONTAL
Thread.sleep(2000)
StringBuffer sb=new StringBuffer(100); 
idx > 0
loaded.getLoaded().getConstructor()
Integer.valueOf(getOptional("kylin.storage.hbase.small-family-block-size-bytes","65536"))
private static JFrame getNullFrame(){   return null; } 
{4,5,5,11,6,5,7,5,11,11}
getRecentsButton()
client.pods()
new Box(Vector3f.ZERO,1,1,1)
engine.getHeat()
LabelSchemaDescriptor descriptor
appOpsManager.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
new EnterSelectionDialog(shell,props,functionDesc,Messages.getString("SystemDataDialog.SelectInfoType.DialogTitle"),Messages.getString("SystemDataDialog.SelectInfoType.DialogMessage"))
transport != null
new ApiHelper.RefreshBlogContentTask(mTargetContext,dummyBlog,new GenericCallback(){   @Override public void onSuccess(){     assertTrue(true);     countDownLatch.countDown();   }   @Override public void onFailure(  ErrorType errorType,  String errorMessage,  Throwable throwable){     assertTrue(false);     countDownLatch.countDown();   } } )
Locale.getDefault().toString()
Boolean.valueOf(indexOptions.get(INDEX_ANALYZED_OPTION))
user.getCompanyId()
classType.hasTypeTree()
log.info("Not in OSGi: using plexus based maven parser")
(options & ActionBar.DISPLAY_HOME_AS_UP) != 0 ? VISIBLE : INVISIBLE
selenium.isVisible("link=Control Panel")
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,prevDeviceState,newDeviceState)
Thread.sleep(5000)
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
new DataSize(42,Unit.MEGABYTE)
poList[1]
compressedSliceInput.length()
myChild2.getElementType() == ElementType.BLOCK_STATEMENT
Flux.from(publisher).handle((message,sink) -> sink.next(send(message))).errorStrategyContinue()
this == RUNNING
GuiUtils.compareDates(date,System.currentTimeMillis())
httpResponseCode == 204
delta < 9000
fingerId == 0
sequenceFileVersion == SEQUENCE_FILE_VERSION
onDetachedFromWindows()
WorkflowTaskManagerUtil.searchCount(_workflowTaskRequestHelper.getCompanyId(),_workflowTaskRequestHelper.getUserId(),searchTerms.getName(),searchTerms.getType(),null,null,null,false,false,searchTerms.isAndOperator())
timelineObjectHolder.getObject().getChunk(0).getObject().getDimensions()
loaded.getLoaded().getConstructor()
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
init
quad ? (val & 0x3F) : 64
LinkedHashMap<String,Object>
new EnterSelectionDialog(shell,props,files,Messages.getString("ExcelInputDialog.FilesRead.DialogTitle"),Messages.getString("ExcelInputDialog.FilesRead.DialogMessage"))
report(n,MISPLACED_ANNOTATION)
elementsToDelete == null
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
mHandler.removeCallbacks(pae)
Key.class.getCanonicalName()
CharSequence message
COOKIE_SYNC_MANAGER=true
clientInvocation.invokeUrgent().andThen(new ExecutionCallback<ClientMessage>(){   @Override public void onResponse(  ClientMessage response){     if (connection.isAlive()) {       connection.onHeartbeatReceived();     }   }   @Override public void onFailure(  Throwable t){     if (connection.isAlive()) {       logger.warning("Error receiving heartbeat for connection: " + connection,t);     }   } } )
EntryProcessor<Integer,Long,Object>
retriever.captureFrame()
new IntPreference("max_level_download_tile",18)
user.sendMessage(_("inventoryClearedAll"))
response.set(ROLLED_BACK)
assertRemoveSubsystemResources(servicesA)
DLFileShortcutLocalServiceUtil.fetchDLFileShortcut(primaryKey)
startActionMode(callback) == null
PRIVATE_FLAG_SUSTAINED_PERFORMANCE_MODE=0x00020000
_freemarkerEngineConfiguration.getResourceModificationCheck()
getModel().getRowCount()
Log_OC.wtf(TAG,"Trying to send a NULL OCFile")
name == null
info.getType() & 0x7
database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId())
log.error("Couldn't find style: " + styleId)
mFlexItem.setWrapBefore(isChecked)
IllegalArgumentException.class
id=19
winAnimator.prepareSurfaceLocked(recoveringMemory)
Observable.timer(0,1,TimeUnit.SECONDS)
Boolean.valueOf(request.getParameter("notify"))
selenium.isVisible("link=Control Panel")
ImmutableList<String>
parent.getRegionName()
AccessException ex
ApplicationManager.getApplication().invokeLater(() -> {   final ExternalProjectsViewImpl projectsView=new ExternalProjectsViewImpl(project,(ToolWindowEx)toolWindow,myExternalSystemId);   ExternalProjectsManagerImpl.getInstance(project).registerView(projectsView);   ContentImpl tasksContent=new ContentImpl(projectsView,ExternalSystemBundle.message("tool.window.title.projects"),true);   contentManager.removeAllContents(true);   contentManager.addContent(tasksContent); } )
right != startFromPixel + mWidthPerDay
log.error("The TGT cannot be renewed beyond the next expiry date: {}." + "This process will not be able to authenticate new SASL connections after that " + "time (for example, it will not be able to authenticate a new connection with a Kafka "+ "Broker).  Ask your system administrator to either increase the "+ "'renew until' time by doing : 'modprinc -maxrenewlife {} ' within "+ "kadmin, or instead, to generate a keytab for {}. Because the TGT's "+ "expiry cannot be further extended by refreshing, exiting refresh thread now.",expiryDate,principal,principal)
List<DBCException>
del("*:*")
selenium.isVisible("link=Control Panel")
mAppOps.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
topActivity != null
columnType.equalsIgnoreCase("string")
context.getPackageManager().queryIntentActivities(intent,0)
LensPositionSelectors.lensPosition(LensPosition.BACK)
stateHolder.reloadVariables()
second.getWeight()
mExpandedChild.getHeight() == mContractedChild.getHeight()
ConfigAssertions.recordDefaults(FeaturesConfig.class).setExperimentalSyntaxEnabled(false).setDistributedIndexJoinsEnabled(false).setDistributedJoinsEnabled(true).setRedistributeWrites(true).setOptimizeMetadataQueries(false).setOptimizeHashGeneration(true).setOptimizeSingleDistinct(true).setPushTableWriteThroughUnion(false)
origin.realComponent().doubleValue() >= other
result.size() == 2
InputType.convolutional(from - to + 1,conv.getWidth(),conv.getHeight())
mOpenTags.peekFirst()
getProperties().remove("hibernate.connection.handling_mode","DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT")
new IllegalArgumentException(e.getMessage())
apnContext.getWaitngApns()
continueUpdateBounds(RECENTS_STACK_ID)
Integer.valueOf(bottomStr)
visitNode(node,context)
StringBuffer numberedSrcTextBuffer=new StringBuffer(); 
mAttributes.getFlags()
it.setJavaDocComment("Cool this annotation!")
assertEquals(0,counter.get())
JAVADOC(OrderRootType.DOCUMENTATION)
terminal.println(doc.get(docMapper.mappers().smartName("file").mapper().names().indexName()))
mFrameSlots.remove(slot)
socket.getSocket() == null
ARCEUUS_HOME_TELEPORT=145
src.getLocation()
selenium.isVisible("link=Control Panel")
prefsWriter.commit()
LOGGER.debug("Error with XML parser configuration",e1)
apnContext.getWaitngApns()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
new AlertDialog.Builder(mContext).setMessage(R.string.error_disable_esim_msg).setTitle(R.string.error_disable_esim_title).setCancelable(false).setNeutralButton(R.string.ok,null)
TURN_DISTANCE=75
Assert.assertEquals(resJsonObject.getJSONArray("SERVER_TENANTS").length(),8)
accountData.setIsMigrated(Objects.firstNonNull(isNotifiedForInvoices,delegate.isNotifiedForInvoices()))
to("bar")
distanceToView(focused) > 0
dynamicType.getLoaded().getConstructor()
LOG.error(ex.getLocalizedMessage(),ex)
selenium.isVisible("link=Control Panel")
return 0; 
Exception exception
new Paint(Paint.ANTI_ALIAS_FLAG)
functionFactory.lossMSLE(getFunctionInput(iX),getFunctionInput(i_y),dimensions)
consumers.isEmpty()
mInstalld.snapshotProfile(appId,packageName,codePath)
mHandler.removeCallbacks(pae)
Top top2=new Top(); 
apnContext.getWaitngApns()
new NullPointerException()
Exception e
mTempDate.get(Calendar.DAY_OF_YEAR) != mMaxDate.get(Calendar.DAY_OF_YEAR)
data != null
UIUtils.setBackground(mSliderLayout,mSliderBackgroundColorRes)
getLog().info("Kotlin version " + KotlinCompilerVersion.VERSION + " (JRE "+ System.getProperty("java.runtime.version")+ ")")
engine.execute(query).toString()
ctx.getMapView().refreshMap()
assertEquals(148,map.getLocalMapStats().getHeapCost())
mService.isOemUnlockAllowed()
PROJECTS=1
StringBuilder b=new StringBuilder("ProcessInstance "); 
Beans.newDuration(casProperties.getAuthn().getOauth().getRefreshToken().getTimeToKillInSeconds()).toMillis()
(opcode == TEXT.getOpCode()) | (opcode == BINARY.getOpCode())
Arrays.asList("android.hardware.audio@2.0::IDevicesFactory","android.hardware.bluetooth@1.0::IBluetoothHci","android.hardware.camera.provider@2.4::ICameraProvider","android.hardware.graphics.composer@2.1::IComposer","android.hardware.vr@1.0::IVr","android.hardware.media.omx@1.0::IOmx")
dgtest < 0
info.crashInfo.stackTrace.length() > 10000
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
addr.toString()
DEFAULT_VIRTUAL_DISPLAY_HEIGHT=1400
secHeader.insertSecurityHeader(saaj.getSOAPPart())
securityMode != SecurityMode.None
new Location(user.getWorld(),x,y,z)
ctx.isSwapEnabled()
retVal.put(p.getKey(),p.getValue())
state > singleByteReads
infos.length == 0
nodeEngine.getService(LockService.SERVICE_NAME)
attachmentSaved(file.toString())
scale=1
lock.isLocked()
/**   * {@inheritDoc}  */ @Override public AtmosphereResource removeAtmosphereResource(AtmosphereResource r){   if (destroyed.get()) {     logger.debug(DESTROYED,getID(),"removeAtmosphereResource(AtmosphereResource r)");     return r;   }   if (!resources.contains(r)) {     return null;   }   boolean removed=resources.remove(r);   if (removed) {     if (resources.isEmpty()) {       notifyEmptyListener();       if (scope != SCOPE.REQUEST && lifeCyclePolicy.getLifeCyclePolicy() == EMPTY) {         releaseExternalResources();       }  else       if (scope == SCOPE.REQUEST || lifeCyclePolicy.getLifeCyclePolicy() == EMPTY_DESTROY) {         BroadcasterFactory.getDefault().remove(this,name);         destroy();       }     }   }   return r; } 
LOG.warn("Working dir: " + workDir.getAbsolutePath())
new ArrayList<>()
name.startsWith("java.") || name.startsWith("javax.xml.") || name.startsWith("org.w3c.dom.")
is(expectedSql)
stores.contains(name)
FiltersTopComponent.findInstance().getUiModel().getSelectedQuery()
defaultCamelContext.removeRouteDefinition(id)
addValue(val,1)
button.actionId()
obj1.isLoose || obj2.isLoose
status.isDir()
classResolver.resolveClass(type)
Sets.newHashSet(PioneerAvrBindingConstants.IP_AVR_THING_TYPE,PioneerAvrBindingConstants.SERIAL_AVR_THING_TYPE)
fragmentManager.beginTransaction().add(rxPermissionsFragment,TAG).commit()
loaded.getLoaded().getConstructor()
config.getMaxElementsInMemory()
type.getConstructor()
assertEquals(2,possibleOutcomes.size())
log.warn("caught exception",e)
host.getHostText()
lowerCaseLine.contains("authentication failed") || lowerCaseLine.contains("403 forbidden")
registerProblem(node,"Too broad exception clause")
Exception e
assertCompletionVariants(myProjectPom)
type.getConstructor()
childrenExpanded ? mNotificatonTopPadding + mDividerHeight : 0
mBoundServices.isEmpty()
moveToState(fragment,fragment.mStateAfterAnimating,0,0,true)
new BundleSavedState(source)
mGpsListener != null
avatar != null
InsertFinalStep<R>
TypeDefinition declaringType=methodDescription.getDeclaringType(); 
selenium.isVisible("link=Control Panel")
testWarning(LINE_JOINER.join("goog.require('a.c');","/** @suppress {extraRequire} */","goog.require('a.b')"),REQUIRES_NOT_SORTED,LINE_JOINER.join("goog.require() statements are not sorted. The correct order is:","","/**"," @suppress {extraRequire}"," */","goog.require('a.b');","goog.require('a.c');","",""))
log.debug("PID contains identifier with no assigning authority")
value == Short.class
classFile.matcher(file.getName()).find()
mp.getValue()
config.enterpriseConfig != null
analysis.getType(windowFunction)
call instanceof GoLiteral || call instanceof GoBinaryExpr || call instanceof GoParenthesesExpr|| (call instanceof GoUnaryExpr && ((GoUnaryExpr)call).getSendChannel() == null)
private final CircularClipper mClipper; 
ONBOARDING_ENABLED=false
statistics.addRemoveTimeNano(System.nanoTime() - start)
coreThreads.asString()
ArrayList<Destination>
tsr.getReturnCode() != AbstractTaskResult.ReturnCode.SUCCESS || tsr.getReturnCode() != AbstractTaskResult.ReturnCode.TASK_NOT_FOUND
doTest(false)
userComponents.valueAt(i)
verify(applicationsSource,timeout(1000).times(3))
isReturnGeneratedKeys() && generatedKey.isPresent()
setX((mWidth > 0) ? (mPosition * mWidth) : 0)
public TokenStream create(Reader input){   return new LetterTokenizer(input); } 
assertThat(expiresDateFormat.parse(response.getHeader("Expires"))).isBefore(new Date())
results.put("results",jsonObject)
bufferSizeInMB * 1024 * 1024
assertEquals(expectedPlan,actualPlan)
event.getColumns()
!sender.isPlayer() && !onlinePlayer.getName().equalsIgnoreCase(sender.getPlayer().getName())
this.controller.saveService(new MockHttpServletRequest(),new MockHttpServletResponse(),data,mock(BindingResult.class))
version.onOrBefore(Version.V_1_0_0_Beta2)
controller.createAction("component").setDescription("Get the pending tasks, in-progress tasks and the last executed task of a given component (usually a project).<br>" + "Requires one of the following permissions:" + "<ul>"+ "<li>'Administer System'</li>"+ "<li>'Administer' rights on the specified component</li>"+ "</ul>"+ "Either '%s' or '%s' must be provided, not both.<br>"+ "Since 6.1, field \"logs\" is deprecated and its value is always false.")
RedisRunner.startDefaultRedisServerInstance()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
new WorldPoint(1500,3703,1)
responseType != null
faceIndex*=4
this.getTable()
Log.wtf(TAG,"This will become an error",ex)
new LinkedList<>(0)
interpreterSetting.getName()
!returnValue
interpreterSetting.getName()
TrustManagerFactory.getDefaultAlgorithm()
Long.valueOf(delay)
myExpectedArguments == (expressions.length + additionalExpressions.size())
sb.append(uri)
new ClassPathResource(PROJECT_META_FILE)
set(object,value.intValue())
createArtifact("a","1.0")
new LeftTuple(f1)
referenceDatabase.setObjectQuotingStrategy(originalStrategy)
mNavigationBarView.isQuickScrubEnabled()
this.httpHandler.handle(req,resp).switchOnError(ex -> {   logger.error("Could not complete request",ex);   response.status(HttpResponseStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
new EvaporateTlext()
List<Map<String,Object>>
size() == 0
-1935015940
mAccessibilityController.isTouchExplorationEnabled()
IBackupManagerService svc=mService; 
SSLParametersImpl.getDefaultTrustManager()
getSupportFragmentManager().beginTransaction().add(android.R.id.content,commentFragment).commit()
revokingStore.enable()
myFileChooser.requestFocusInWindow()
HttpServletResponse.class.cast(response).sendError(202,"Websocket protocol not supported")
selenium.isVisible("link=Control Panel")
out.append(e.getMessage())
msg.obj == mSmHandlerObj
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
textView.setTextSize(out.getDimension(bridgeContext.getResources().getDisplayMetrics()))
RngElementDescriptor.this.getDependencies()
@Override GelfOutput create(Stream stream,Configuration configuration); 
argNr >= 0
io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.this.wait()
AppleBuildRules.getRecursiveTargetNodeDependenciesOfTypes(targetGraph,Optional.of(dependenciesCache),AppleBuildRules.RecursiveDependenciesMode.BUILDING,node,ImmutableSet.of(AppleLibraryDescription.class,CxxLibraryDescription.class))
(mConfiguration.openFlags & SQLiteDatabase.ENABLE_WRITE_AHEAD_LOGGING) != 0
new IndexWriter(indexStore,new SimpleAnalyzer(),true)
lvl != null
intent.setData(uri)
System.arraycopy(cur,i,ret,i + 1,N - i - 1)
ack.getLastMessageId().getDataLocator()
(cb.getBuffer().length - cb.getEnd()) == 0
StringBuilder sb=new StringBuilder("Connection "); 
String.format("Timeout waiting to lock %s. It is currently in use by another Gradle instance.%nOwner PID: %s%nOur PID: %s%nOwner Operation: %s%nOur operation: %s%nLock file: %s",displayName,metaDataProvider.getProcessIdentifier(),ownerPid,ownerOperation,operationDisplayName,lockFile)
@PathParam("createdTimeInterval")
new BooleanPreference("use_map_markers",false)
statusBar.setRedraw(false)
dbManager.getDynamicPropertiesStore().saveAllowSameTokenName(0)
from("direct:a").delay(3000)
deck.addFact(editFact,cardModels)
holder == null
FastMath.max(origin,num.doubleValue())
testOffset=4875454l
n <= colP.getInt(i)
new WorldPoint(2552,3557,0)
if (dockOntopOrLeft) {   if (splitHorizontally) {     outBounds.right=displayRect.centerX() - adjustment;   }  else {     outBounds.bottom=displayRect.centerY() - adjustment;   } }  else {   if (splitHorizontally) {     outBounds.left=displayRect.centerX() + adjustment;   }  else {     outBounds.top=displayRect.centerY() + adjustment;   } } 
CreateFileOptions.defaults().setBlockSizeBytes(Constants.KB).setRecursive(true).setTtl(1)
new Color(0xff,0xcc,0x00)
MockSpecModel.newBuilder().props(ImmutableList.of(makePropModel("param0"),makePropModel("param1")))
mContext.sendBroadcast(intent)
log.warn(sm.getString("contextConfig.invalidSciHandlesTypes",className),e)
mImageManager.load(holder.mImgBlavatar,GravatarUtils.fixGravatarUrl(post.getBlogImageUrl(),mAvatarSzSmall),R.drawable.ic_placeholder_blavatar_grey_lighten_20_40dp,ScaleType.CENTER)
dpToPx(68f)
getDefaultSystemHandlerActvityPackageLPr(deviceProvisionIntent,userId)
!selectedContacts.contains(recipient) && (existingContacts == null || !existingContacts.contains(recipient))
new PrintWriter(cacheFile)
new PsiEllipsisType(mappedComponent)
endShape()
selenium.isVisible("link=Control Panel")
DeprecationLogger.nagUser("<someIdeTask>.beforeConfigured is deprecated! Replaced by beforeMerged() method placed on the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,0)
objects.getClass().getGenericSuperclass().getTypeName()
success
serverId > 0
new MethodDescription.Token(FOO,MODIFIERS,Collections.singletonList(mock(GenericTypeDescription.class)),second,Collections.<ParameterDescription.Token>emptyList(),Collections.singletonList(mock(GenericTypeDescription.class)),Collections.singletonList(mock(AnnotationDescription.class)),null)
nextOption()
computeActive()
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(implRef).description(message)
init(app)
PApplet.split(pathDataBuffer,"|" + PConstants.WHITESPACE)
/**   * Visits the specified map result.  * @param mapResult the map result  * @return the result of the visit  */ TVisit visitMapResult(MapResultData mapResult); 
setting("unsupported.cypher.plan_with_minimum_cardinality_estimates",BOOLEAN,TRUE)
subrange.getStart()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true,policy)
recyclerView.indexOfChild(view)
mWorkerId + BASE_FILE_NUMBER
logger.error(cause)
a6.getId() << 1
Localization.lang("Check integrity")
callbackList.getRegisteredCallbackCookie(i)
close.assertSubscribers()
return true; 
((SimpleHttpConnectionManager)manager).shutdown()
units <= 0
databaseProductName.startsWith("ASE")
IndexReader.open(benchmark.getRunData().getDirectory(),true)
mHorizontals == null
IndexReader.open(store,true)
UnderFileSystemUtils.deleteFileIfExists(mUfs,mCheckpointPath)
manager.setExact(AlarmManager.RTC_WAKEUP,alarmTime,pi)
Slog.wtf(TAG,"APK " + fileName + " has unaligned native code "+ entry.getName())
FBUtilities.getLocalAddress()
assertEquals(11,visitor.getConditions().size())
mContext.startActivity(intent)
assertEquals(invoicesAfterClose.size(),1)
Thread.sleep(5000)
getStepIOMeta().getTargetStreams()
SingleServerInventoryProvider.class
reactiveType == null
_cloneFormat(DATE_FORMAT_ISO8601_Z,formatStr,_timezone,_locale,_lenient)
HashMap<String,AstyanaxOrderedKeyColumnValueStore>
selenium.isVisible("link=Control Panel")
mCollapsingTextHelper.setExpandedTextGravity(gravity)
(t instanceof MetaException) && t.getMessage().matches("(?s).*(JDO[a-zA-Z]*|TProtocol|TTransport)Exception.*")
r != null
TrustManagerFactory.getDefaultAlgorithm()
StringBuffer buffer=new StringBuffer(); 
@GET @Path("/{petId}") @ApiOperation(value="Find pet by ID",notes="Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions",response=Pet.class) @ApiResponses(value={@ApiResponse(code=400,message="Invalid ID supplied"),@ApiResponse(code=404,message="Pet not found")}) public Response getPetById(@ApiParam(value="ID of pet that needs to be fetched",allowableValues="range[1,5]",required=true) @PathParam("petId") String petId) throws NotFoundException {   Pet pet=petData.getPetbyId(ru.getLong(0,100000,0,petId));   if (null != pet) {     return Response.ok().entity(pet).build();   }  else {     throw new NotFoundException(404,"Pet not found");   } } 
sequence.getCache() != null
value.doubleValue()
Response.ok()
FastMath.max(origin,num.floatValue())
pTMXTiledMap.getTileWidth()
growLock.lock()
displayNameComparator.compare(first,second)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commitAllowingStateLoss()
NotificationColorUtil.calculateContrast(backgroundColor,foregroundColor)
Debug.w("Texture asset not found, " + pAssetPath,e)
bean.getCollectionCount()
LAST_VERSION=548
notify()
Exception e
Arrays.asList("ErrorResponse","Response","Int","Int32","Int64","Int64","Float","Double","Bool","Void","String","Character","AnyObject","Any","Error","URL","class","Class","break","as","associativity","deinit","case","dynamicType","convenience","enum","continue","false","dynamic","extension","default","is","didSet","func","do","nil","final","import","else","self","get","init","fallthrough","Self","infix","internal","for","super","inout","let","if","true","lazy","operator","in","COLUMN","left","private","return","FILE","mutating","protocol","switch","FUNCTION","none","public","where","LINE","nonmutating","static","while","optional","struct","override","subscript","postfix","typealias","precedence","var","prefix","Protocol","required","right","set","Type","unowned","weak")
response.setStopThread(true)
Integer.valueOf(attrValue)
request.getRequestURI()
loaded.getLoaded().getConstructor()
callback.reconnectCallback(name,jsa)
seq.length() < width
nextTokenIsFast(b,IDENTIFIER)
FAB_PREFIX + overridesLocation.replace('/','_')
new RuntimeException()
new String[4]
prefs.getBoolean(PERSIST_SERVICE,false)
assertEquals("We get the wrong sayHello result",result,"hello")
layoutManager.addView(view,0)
channel.getPipeline().sendUpstream(new DefaultExceptionEvent(channel,cause))
new GroovyBugError("The lookup for " + name + " caused a failed compilaton. There should not have been any compilation from this call.")
entry.getKey().getHostName()
JSONFactoryUtil.looseDeserializeSafe(cmd)
actionButton.setRolloverImage(new ImageIcon(ca.getRolloverIcon()).getImage())
stack.peekFirst()
adapter.callback != null
stopwatch.elapsedMillis()
mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
linkMode.getBuildMode()
public V get(@NotNull T owner){   return (V)unsafe.getObjectVolatile(owner,offset); } 
log.error("{} is missing from the session and can not be retrieved.",OAuthConstants.OAUTH20_CALLBACKURL)
new ByteBuddy().subclass(Object.class).name("example.Type").make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
action.new ReroutePhase(request,listener)
filter.getMinPrice()
range.getStartOffset()
tracesFile.mkdirs()
getActionBar()
mSettingsButton != null
avatar == null
(strLine=br.readLine()) != null
size > _STORAGE_SIZE_DENOMINATOR
sqlType == Types.NUMERIC
in.getDepth() < outerDepth
telephony.isRinging()
new Settings(getContext(),getContext().getFilesDir(),new Object())
loaded.getLoaded().getConstructor()
context.getPackageName()
ConstantNode.forConstant(resolvedMethod.getEncoding(),tool.getMetaAccess(),graph())
requestURI.contains(excludedPath)
headers.getMessageType()
new TreeMap()
historicState(item,timestamp)
getContext().enforceCallingOrSelfPermission(android.Manifest.permission.DUMP,message)
meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM)
fd.mkdir()
_sharingEntryLocalService.addSharingEntry(TestPropsValues.getUserId(),_groupUser.getUserId(),classNameId,_fileEntry.getFileEntryId(),_group.getGroupId(),Collections.singletonList(SharingEntryActionKey.VIEW),serviceContext)
parser.parse(GroovyElementTypes.CLOSURE,builder)
client.getLocalPlayer().getInteracting().getName().equals(FISHING_SPOT)
comment.lastIndexOf(']')
app.setOrgName(ownerName)
Flux.from(inputStream).flatMap(value -> {   DataBuffer arraySeparator=bufferFactory.wrap(SEPARATOR_BUFFER);   return Flux.just(encodeValue(value,bufferFactory,elementType),arraySeparator); } )
Exception e
new ClusterConfiguration(name,logging.getMessagesLog(ClusterConfiguration.class),Collections.singleton(boundAt))
myChangeListManager.ensureUpToDate()
fileMeasures.get(0)
Context.getGeofenceManager() != null
LayoutPrototypeWebUpgrade.class
FinalUtils.canFieldBeFinal(field)
this.interrupted()
TVisit
mAppToken.hasContentToDisplay()
ExprEval.of(null)
20 < statuses.size()
gc.createCompatibleImage(wide,high)
composeText.getTextTrimmed()
address.getHostName()
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
VERSION=41
Throwable t
selenium.isVisible("link=Control Panel")
selenium.isVisible("link=Control Panel")
dynamicType.getConstructor()
selenium.isVisible("link=Control Panel")
resolver.start()
selenium.isVisible("link=Control Panel")
new EmptyBorder(0,2,0,4)
new Font("SansSerif",Font.PLAIN,11)
assertNumUniqueNodeNameBuckets(0)
!site && (liveGroupId == 0)
IOException e
mNavigationBarView.getPaddingStart()
-latDegrees
clipItem.getText()
curComp.equals(cur)
resourceGetRet.put("config",resourceName)
new IndexWriter(dir,true,new WhitespaceAnalyzer())
PixelFormat.formatHasAlpha(mRequestedFormat)
findCodecForFormat(false,format)
dateMask[pos]
bookmarksFolderFinder.findBF_BE_ByG_F(groupId,folderId,queryDefinition)
masterAddress.split(":").length != 2
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
Integer.valueOf(taskIdStr)
ours=theirIterator.next()
JComponent invoker
mListener.onInputUpdated(inputId)
selenium.isVisible("link=Control Panel")
mActiveStreamType == -1
HMSHANDLERATTEMPTS("hive.hmshandler.retry.attempts",1,"The number of times to retry a HMSHandler call if there were a connection error.")
public class XpathRegressionImportControlTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlOne.xml"));     final String[] expectedViolation={"3:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_DISALLOWED,"java.util.Scanner")};     final List<String> expectedXpathQueries=Collections.singletonList("/IMPORT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlTwo.xml"));     final String[] expectedViolation={"1:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_UNKNOWN_PKG)};     final List<String> expectedXpathQueries=Collections.singletonList("/PACKAGE_DEF");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testThree() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlThree.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     final String[] expectedViolation={"1:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_MISSING_FILE)};     final List<String> expectedXpathQueries=Collections.singletonList("/PACKAGE_DEF");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testFour() throws Exception {     final String checkName=ImportControlCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionImportControlFour.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(ImportControlCheck.class);     moduleConfig.addAttribute("file",getPath(checkName,"SuppressionXpathRegressionImportControlFour.xml"));     final String[] expectedViolation={"4:1: " + getCheckMessage(ImportControlCheck.class,ImportControlCheck.MSG_DISALLOWED,"java.util.Scanner")};     final List<String> expectedXpathQueries=Collections.singletonList("/IMPORT[./DOT[@text='Scanner']]");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
writeString(writer,String.valueOf(reader.getInt()),fieldName)
DEBUG_FOCUS=false
BannagePeriodFailureDetector.class
listener.equals(binaryMessageHandler)
displayContent.getDockedStackLocked()
item(ADAMANT_2H_SWORD)
new TextPaint(Paint.ANTI_ALIAS_FLAG)
audioTrackUtil.getPlaybackHeadPosition()
Log.e(TAG,"getNetworkScore found scored network " + network.networkKey + " score "+ Integer.toString(score)+ " RSSI "+ result.level)
!invoicePayment.isSuccess()
lhs.getScore()
fingerId == 0
StepVerifier.withVirtualTime(() -> Flux.concat(Flux.range(0,2),Flux.error(exception)).retryBackoff(4,Duration.ofMillis(100),Duration.ofMillis(2000),0.1).elapsed().doOnNext(elapsed -> {   if (elapsed.getT2() == 0)   elapsedList.add(elapsed.getT1()); } ).map(Tuple2::getT2)).thenAwait(Duration.ofSeconds(2)).expectNext(0,1).expectNext(0,1,0,1,0,1,0,1).verifyErrorSatisfies(e -> assertThat(e).isInstanceOf(IllegalStateException.class).hasMessage("Retries exhausted: 4/4").hasCause(exception))
message.getContact()
o.getClass() != getClass()
e1.getPointerCount()
mAppOpsService.noteOperation(AppOpsManager.OP_GET_USAGE_STATS,Process.myUid(),null)
ReplaceTranslationMojoTest.class
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
volume.getMtpReserveSpace() * 1024 * 1024
Results.unauthorized()
return true; 
PRAYER_ENHANCE(ItemID.PRAYER_ENHANCE_4,GameTimerImageType.ITEM,"Prayer enhance",275,ChronoUnit.SECONDS)
clock.setDeltaFromReality(AT_LEAST_ONE_MONTH_MS)
selenium.isVisible("link=Control Panel")
this == group.mInternalConnection
handleIncomingUserLocked(Binder.getCallingPid(),Binder.getCallingUid(),userId,false,true,"startActivity",null)
md.getToggleState()
platformVersion < MNC
assertMockEndpointsSatisifed()
Integer.valueOf(cmd.getOptionValue(SIZE_OPTION))
mAlpha == 0
mBackdrop.animate().alpha(0f)
LOG.debug("Received ping --> {}",payload)
mListener.onInputUpdated(inputId)
mapper.seAttributePrefix("")
TelephonyManager.getDefault().getPhoneType()
i=1
mFrameSlots.remove(slot)
set(object,value.intValue())
bigIconBg.getHeight() * 0.9f
pending_native(fd)
selenium.isVisible("link=Control Panel")
LOG.error("Could not find default spell checking inspection")
mapView.getMapOrientation()
mActionBarTop.getVisibility() == VISIBLE
!TextUtils.isEmpty(library.getLibraryWebsite()) && !TextUtils.isEmpty(library.getRepositoryLink())
body[0][0][0]
telephony.getDataNetworkTypeForSubscriber(subId)
i < 5000
equals(file1,file1)
assertNotNull(message.getPayload() instanceof Collection<?>)
maxEntityId > maxSequenceId
new BindException(concept,"concept")
nodeEngine.getService(LockService.SERVICE_NAME)
mRemote.transact(REVOKE_URI_PERMISSION_TRANSACTION,data,reply,0)
client.getDefaultRequestOptions().setTimeoutIntervalInMs(timeout)
GL20.glUniform3(location,v)
Constructor constructor=(Constructor)chooseMethod("<init>",constructors,arguments,false); 
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
commit.getId().toShortString()
Spacing.createSpacing(0,1,0,mySettings.KEEP_LINE_BREAKS,mySettings.KEEP_BLANK_LINES_IN_CODE)
preds2.size() == 1
Exception e
this.clientRpcServer.addProtocol(HAServiceProtocol.class,this)
EventQueue.isDispatchThread()
relationship(18,c,"KNOWS",d)
obj instanceof HotSpotResolvedJavaMethod
checkPojoMetaClass()
mHotspotBounds.set(left,top,bottom,right)
targetCondn == null
TelephonyManager.getDefault().getPhoneType()
ColorResources.getColor("controlShadow")
binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8081)
dz < -1
dest.writeLong(mSubId)
relativePath.charAt(0) == '/'
appOpsManager.checkOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
min1 < min2
CharSequence message
endPos < paraEnd
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
FileUtils.setPermissions(file.getBaseFile().getPath(),0660,SYSTEM_UID,PACKAGE_INFO_GID)
files.size() > 1
new PyStringLiteralLexer(PyElementTypes.STRING_LITERAL_EXPRESSION,false)
addView(mTitleLayout,new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.MATCH_PARENT))
transportService.sendRequest(node,PublishClusterStateRequestHandler.ACTION,new PublishClusterStateRequest(clusterState),new VoidTransportResponseHandler(false){   @Override public void handleException(  TransportException exp){     logger.debug("failed to send cluster state to [{}], should be detected as failed soon...",exp,node);   } } )
return true; 
Values.stringValue(stringValue(offset))
sub.emit(dataBuffer)
builder.setView(frame,true)
dynamicClassType.getConstructor()
ch.unsafe().flushNow()
digester.parse(contextXml)
assertEquals(savedPayment4Again.getLastSuccessStateName(),"AUTH_SUCCESS")
readPermission.intern()
((HotSpotResolvedObjectType)type).getFingerprint() != 0
logger.error("Error creating pool to " + host,t)
mAuthorities.get(i)
min1 < min2
@Converter
mGpsListener != null
_path.toString()
preparedStatement.setCharacterStream(paramIndex,tmpReader)
component.getSource()
fMethodDescriptions.put(method,description)
mCurrentVrService == null
new Bitmap(nativeInt,isMutable,null,density)
updateViewsVisibility(mIconifiedByDefault)
from > to
Context.newBuilder("java").setOption("java.AllowClassLoading","true")
isFieldKept(uniqueField,input)
ctx.sendDownstream(e)
cellIndex < row.contextRowSlots.length
DateUtils.parseDate(source,iso8601Patterns)
bigFirstTokenBalance.multiply(bigTokenQuant).divide(bigSecondTokenBalance).longValue()
private final StringBuffer sb=new StringBuffer(); 
platformVersion < MNC
serialVersionUID=1576899745
from >= to
log.warn("Reset to factory defaults : onOperator")
Throwable e
new RuntimeException()
mService.setUidPolicy(UID_A,POLICY_REJECT_METERED_BACKGROUND)
ServerToClientMessage.instantiateMessage(makeChanges)
TreeUtil.expand(getTree(),3)
cfg.setExternalExecution(true)
setTimeToLiveSeconds(Long.valueOf((String)cacheSettings.get("timeToIdleSeconds")).longValue())
ZONE3_SOURCE_INTERETRADIO(154)
loaded.getLoaded().getConstructor()
mNotificationInfo.bindNotification(mMockPackageManager,mMockINotificationManager,TEST_PACKAGE_NAME,Arrays.asList(mNotificationChannel),null,null,null,null)
mBluetoothHeadset.startScoUsingVirtualVoiceCall(mBluetoothHeadsetDevice)
Log.wtf(TAG,"This will become an error",ex)
doTestDefaultParser(true)
usage instanceof IfNode || usage instanceof FixedGuardNode || usage instanceof ShortCircuitOrNode|| usage instanceof GuardingPiNode
toPreProcess.getFeatures().muli(maxRange - minRange + Nd4j.EPS_THRESHOLD)
Thread.sleep(200)
moduleProfile.setOutputRelativeToContentRoot(true)
type.getConstructor()
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
String.format("Role name [%s] is not valid. Please use lowercase and numbers only",role)
model.getSelectedLayout() != null
tableHasData(oldTableName)
user.getRoles()
mapServiceContext.hasRegisteredListener(mapName)
stack == null
Arrays.asList("ls","pwd")
!listType.getType().equals(type)
selenium.isVisible("link=Control Panel")
value.isNull()
request.getRequestURI()
DateUtils.getStartOfToday()
pipe != null
logger.warn("Using folder " + checkPointFolderFile + " for storing checkpoints")
ChaosInstanceSelector.class
args.length < 2
@NonNull
LOG.warn("DataNode is out of memory. Will retry in 30 seconds.",ie)
l.removeSensor(sensor) == 0
Thread.sleep(500)
getTelecomService().endCall()
DEBUG && okay && mAgent != null
windowStart=1
platformVersion < MNC
errorType == ApiHelper.ErrorType.NO_ERROR
getContext()
this.getString(R.string.shared_string_release).toLowercase()
Integer.valueOf(this.getOptional("kylin.server.auth-user-cache.expire-seconds","300"))
del("*:*")
outActivity.length > 0
this.bus != null
LOGGER.debug(message,e)
is("/home/source")
logger.info("Session destroyed")
change.downgrades(current)
telephony.isIdle()
final WorkingMemory workingMemory=ruleBase.newStatefulSession(); 
String channel
StringUtils.isEmpty(runtime.getRuntimeError())
loaded.getLoaded().getConstructor()
canvas.drawText(shortText)
viewToModel == null
checkPojoMetaClass()
setSunPosition(calendar,latitude,longitude,sun)
terms.size() < 10000
compareSignatures(bp.packageSetting.signatures.mSignatures,pkg.mSignatures) != PackageManager.SIGNATURE_MATCH
selenium.isVisible("link=Control Panel")
underTest.newRequest()
AssetTagFinderUtil.filterFindByG_C_N(_scopeGroup.getGroupId(),classNameId,assetTagName,QueryUtil.ALL_POS,QueryUtil.ALL_POS,null)
"DROP TABLE IF EXISTS " + TABLE_ACCOUNTS
myPromptHooksExtensionFile == null
mClocks.elapsedRealtime()
((Scorecard)serializable).isUseReasonCodes()
JDBCUtils.safeGetLong(dbResult,"PROCESS")
mContext.checkCallingPermission(android.Manifest.permission.READ_PRIVILEGED_PHONE_STATE)
storeRepo.getAllLocalStores()
account.getExternalKey()
isSavedPostsList()
mode != null
getRedeliverDelay()
30 * 60 * 1000
measured.setPara(source,bufStart,bufEnd,textDir)
TIMEOUT=15000
mState != STATE_INITIALIZED
getPackages()
testCase.mVariationSelectors.contains(vs)
mDataAuthorities == null
loaded.getLoaded().getConstructor()
DIARY_TEXT=1
i > size
popupWindow.setWidth(menuWidth)
ran.nextInt(500)
d.setMajorVersion(1)
type.getConstructor()
target.directory("zk" + id + "data")
mHandler == null
handleIncomingUser(callingPid,callingUid,userId,false,ALLOW_NON_FULL_IN_PROFILE,"checkContentProviderPermissionLocked " + cpi.authority,null)
/**   * Signal the maps/reduces to start.  */ static void signalTasks(MiniDFSCluster dfs,FileSystem fileSys,String mapSignalFile,String reduceSignalFile,int replication) throws IOException {   writeFile(dfs.getNameNode(),fileSys.getConf(),new Path(mapSignalFile),(short)replication);   writeFile(dfs.getNameNode(),fileSys.getConf(),new Path(reduceSignalFile),(short)replication); } 
logger.error("{} invalid: {}",getEntityClass().getSimpleName(),msg)
getXml(map,key,defaultLanguageId)
me.getComponent() == myCurrentComponent
lock.isLocked()
boolean mutiValueResponse() default false; 
mService.mDisplayContents.get(i)
role instanceof UIRepositoryRole
frame.addWindowFocusListener(myIdeFrameFocusListener)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
nodeConfig.setExecutors(Collections.singletonMap("test",1))
mAnimator.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
SavedSearch.constructSavedSearches(get(getBaseURL() + "saved_searches.json",true))
DEBUG=true
this.addComboField(fieldLabel,choices,value,false)
mapper.seAttributePrefix("ROLE_")
new Button("submit",new StringResourceModel("submit",this,null)){   private static final long serialVersionUID=1L;   @Override public void onSubmit(){     try {       GeoServerExtensions.bean(GeoFenceConfigurationController.class).storeConfiguration(config,cacheParams);       doReturn();     }  catch (    Exception e) {       LOGGER.log(Level.WARNING,"Save error",e);       error(e);     }   } } 
new int[504]
mAms.mWaitForNetworkTimeoutMs=100
item == null
selenium.isVisible("link=Control Panel")
Integer.class
methodReturnType != null
sm.getString("managerBase.sessionAttributeValueClassNameFilter",name,value.getClass().getName(),sessionAttributeNamePattern)
previousTypeSettingsProperties.toSortedString()
ts.getJobId() == jobid
!panelsEnabled() || !mKeyguardMonitor.isDeviceInteractive()
synchronized (io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.this) {   try {     io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.this.wait();   }  catch (  final InterruptedException ignored) {   } } 
entry.notification.clone()
new ConstructorInjectionComponentAdapter(implClass,implClass)
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
dateMask[pos]
selenium.isVisible("link=Control Panel")
imageView.setBackgroundDrawable(drawable)
selenium.isVisible("link=Control Panel")
Beans.newDuration(session.getLockTimeout()).toMillis()
states.length == 3
new IndexWriter(directory,autoCommit,ANALYZER,true)
proto.getExecPath()
currentTime > stage.getLastAttemptTime(hostName,role) + taskTimeout
return false; 
datastoreFactory.getDatastore(c.getPipelineOptions(),v1Options.getProjectId())
table.getParameters()
dest.writeParcelableArray(remoteInputs,flags)
objectMapper.readerFor(DataSegment.class)
myEditor.getBackroundColor()
Boolean.valueOf(resizeableStr)
LOG.debug("recovered from " + StringUtils.stringifyException(e))
key.equals(PropertyKey.ZOOKEEPER_ENABLED)
new S3DataSegmentMover(mockS3Client)
100
query.response().getContent().toString(Charset.forName("UTF-8")).substring(0,63)
selenium.isVisible("link=Control Panel")
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
Slog.e(TAG,"Invalid wallpaper data")
new TabbedPaneWrapper()
id=49
onCreateView(mContext,appWidgetId,appWidget)
results.size() == 5
getChildren().size() == 1
return false; 
IccUtils.gsmBcdByteToInt((byte)0x8c)
lp.width != panelWidth
new ScriptC_errorCalculator(mRS,resources,R.raw.errorcalculator)
externalCacheDir == null
new FileWrapper(token).exists()
assertEquals(actualPattern.pattern(),someName)
Integer.valueOf(taskIdStr)
getChatWritePanel().getEditorPane().requestFocus()
mBluetoothService.sendConnectionStateChange(device,BluetoothProfile.HEALTH,prevDeviceState,newDeviceState)
klass.getDeclaredMethods(false,declaredMethods)
javadocMethod != null
c == wordDelimiter[0]
resolver.acquireContentProviderClient(uri)
Double value=list.get(i); 
dexFile.readSmallUint(out.getCursor())
mContext.startActivity(cantAddAccount)
NB_CACHED_PARAMS=20
assertOpenEventually(countDownLatch,30)
new Long(getShortValue(workingMemory,object))
new IncorrectOperationException()
mJobs.get(i)
ColorResources.getColor("primaryControlColor")
CLOSE_TIMEOUT=1000
builder.append("#")
role.getChatUser().getAddress().toBareJID()
(Integer)args.get("damage")
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
KNOWN_TO_FAIL.add("comments/generic_methods.unit:46  var")
mState.mPivotX == pivotX
selenium.sendKeys("//input[@id='_86_importFileName']",RuntimeVariables.replace("L:\\portal\\build\\portal-web\\test\\com\\liferay\\portalweb\\portlet\\mediagallery\\dependencies\\Media_Gallery-Selenium.portlet.lar"))
Flux.from(publisher).handle((message,sink) -> sink.next(send(message))).errorStrategyContinue()
targetDirectory.directory("unwritable")
MediaSessionLegacyHelper.getHelper(mContext).sendVolumeKeyEvent(event,AudioManager.USE_DEFAULT_STREAM_TYPE,false)
settings.readLPw(null)
Localization.lang("Search")
mapper.getTypeFactory().uncheckedSimpleType(AuthConfig.class)
return false; 
par == null
new PackratActionDialogContents(actions)
text.getBoundingBox().width()
assertThat(decorator.generatesIssuesMetrics()).hasSize(16)
chain.resolveUrlPath(resourceUrlPath,locations).otherwiseIfEmpty(Mono.defer(() -> {   String webJarResourcePath=findWebJarResourcePath(resourceUrlPath);   if (webJarResourcePath != null) {     return chain.resolveUrlPath(webJarResourcePath,locations);   }  else {     return Mono.empty();   } } ))
cursor.retry()
id.provider.info != null
DumpUtils.checkDumpPermission(mContext,TAG,pw)
mDataAuthorities == null
mTextColor.getColorForState(ds.drawableState,0)
-3
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,when,sender)
id=47
post.getTitle()
log.error("Cannot evaluate type() for {} due to {}",requestClass,e)
HashMap<Object,AggregationStrategy>
mContext.getString(R.string.branded_monitoring_description_app_personal)
tsdb.metrics.getIdAsync(sub_query.getMetric()).addCallback(new MetricCB())
set(object,value.intValue())
history2.getWorkflowInstanceId()
didtimeout=false
myVMParameters.getComponent().setDialodCaption(myVMParameters.getRawText())
peers.stop()
GL.glCopyTexImage2DEXT(target,level,internalformat,x,y,width,height,border)
type.getConstructor()
file.toString()
TokenSet.create(JavaTokenType.LT,JavaTokenType.LTLT,JavaTokenType.LTLTEQ,JavaTokenType.GT,JavaTokenType.GTGT,JavaTokenType.GTGTEQ,JavaTokenType.GTGTGTEQ,JavaTokenType.AND,JavaTokenType.ANDAND,JavaTokenType.ANDEQ)
trackMotionScroll(delta,delta)
ERROR_MARGIN=100
new EqualsWithEps(arrayX,arrayY)
AllGroupsCollector c3=new AllGroupsCollector(groupField); 
file.getName()
selenium.isVisible("link=Control Panel")
visitNode(node,context)
target.getDestination()
@NotNull T owner
times(2)
new ServiceActivatorContextImpl(batchBuilder)
log.warn("Problem in JSR223 script ",e)
primary.getDefaultCollection()
SERVLET_MINOR_VERSION=0
theClass.getConstructor(new Class[0])
Map<Object,RealmObject>
LdapUtils.getFullDn(dn,ctx).toUrl()
maxIdxPerLine - 2
JsonWriteContext.createRootContext()
checkManageUsersPermission("query user")
configList.size() == 0
doOpenIfChanged(true)
t.report(n,REFERENCE_TO_SHORT_IMPORT_BY_LONG_NAME)
attribute.getDefinition().getAttributeMarshaller()
mapper.writerWithType(planType)
new S3DataSegmentMover(mockS3Client)
getInt(THREAD_PER_HOST,1)
activityNdx < topActivityNdx
userRecord.mClientRecords != null
DEFAULT_TIMEOUT_MILLIS=100
!regex.equals(lastRegex)
deltaY < 0
mGpsListener != null
this.databaseIdProvider != null
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)
startingWindow != null
log.error("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
entry.getValue().getManagementInterfaceMinorVersion()
mAuthorities.get(i)
this.beanFactory.containsBean(beanName)
serverService.getIncomingInterceptors()
new DefaultDataType<Byte>(SQLDialect.SQLSERVER,SQLDataType.TINYINT,"tinyint")
enabled=false
new StatisticsUnit(unitNumber,myKeys)
addView(root,new ViewGroup.LayoutParams(MATCH_PARENT,MATCH_PARENT))
type.getConstructor()
ImmutableSet.of(UNDERWALL_TUNNEL_16529,UNDERWALL_TUNNEL_16530,STEPPING_STONE_16533,FENCE_16518,ROCKS_16549,ROCKS_16550,WALL_17049,WALL_17050,CRUMBLING_WALL_24222,UNDERWALL_TUNNEL,UNDERWALL_TUNNEL_16528,CREVICE_16543,UNDERWALL_TUNNEL_19032,UNDERWALL_TUNNEL_19036,BROKEN_RAFT,STEPPING_STONE_16513,ROCKS_3790,ROCKS_3791,ROCKS_3803,ROCKS_3804,ROCKS_16523,ROCKS_16524,ROCKS_3748,ROCKS_16545,ROCKS_16521,ROCKS_16522,ROCKS_16464,LOG_BALANCE_16540,LOG_BALANCE_16541,LOG_BALANCE_16542,BROKEN_FENCE,LOG_BALANCE_16546,LOG_BALANCE_16547,LOG_BALANCE_16548,CASTLE_WALL,HOLE_16520,WALL_17047,NULL_31852,ROCKS_16534,ROCKS_16535,STRONG_TREE_17074,STEPPING_STONE_16466,NULL_26884,NULL_26886,STEPPING_STONES,STEPPING_STONES_23646,STEPPING_STONES_23647,A_WOODEN_LOG,SPIKEY_CHAIN,SPIKEY_CHAIN_16538,STRANGE_FLOOR_16544,CREVICE_16539,STEPS_29993,STEPPING_STONE_14918,STEPPING_STONE_14917,ROCKY_HANDHOLDS_26404,ROCKY_HANDHOLDS_26405,ROCKY_HANDHOLDS_26406,ROCKY_HANDHOLDS_26400,ROCKY_HANDHOLDS_26401,ROCKY_HANDHOLDS_26402,LOG_BALANCE_23274,ROCKS_27984,ROCKS_27985,BOULDER_27990,ROCKS_27987,ROCKS_27988,GAP_29326,TUNNEL_30174,TUNNEL_30175,OBSTACLE_PIPE_16509,STRANGE_FLOOR,ROCKS,ROCKS_14106,LOOSE_RAILING_28849,CREVICE_9739,CREVICE_9740,HOLE_31481,HOLE_31482,LADDER_30938,LADDER_30939,LADDER_30940,LADDER_30941,ROPE_ANCHOR,ROPE_ANCHOR_30917,RUBBER_CAP_MUSHROOM,ROCKS_31757,ROCKS_31758,ROCKS_31759,PILLAR_31809,ROPESWING_23568,ROPESWING_23569,VINE_26880,VINE_26882,PIPE_21728,STEPPING_STONE_19040,PIPE_21727,LOG_BALANCE_20882,LOG_BALANCE_20884,STEPPING_STONE_21738,STEPPING_STONE_21739,TIGHTGAP,STILE_12982,MONKEYBARS_23566,OBSTACLE_PIPE_16511,STEPPING_STONE_11768,CREVICE_16465,ROCKS_19849,CROSSBOW_TREE_17062,ROCKS_17042,ROCKS_2231,STEPPING_STONE_29728,STEPPING_STONE_29729,STEPPING_STONE_29730,JUTTING_WALL_17002,ROCKS_16514,ROCKS_16515,LOG_BALANCE_3933,STEPPING_STONE_13504,DARK_TUNNEL_10047,WEATHERED_WALL,WEATHERED_WALL_16526,STEPPING_STONE_19042,ROCKS_16998,ROCKS_16999,ORNATE_RAILING,ORNATE_RAILING_17000,STEPPING_STONE_10663,BALANCING_LEDGE_23548,OBSTACLE_PIPE_23140,MONKEYBARS_23567,PILE_OF_RUBBLE_23563,PILE_OF_RUBBLE_23564,CREVICE_19043,PILLAR_31561,LOG_BALANCE_3931,LOG_BALANCE_3930,LOG_BALANCE_3929,LOG_BALANCE_3932,DENSE_FOREST_3938,DENSE_FOREST_3939,DENSE_FOREST_3998,DENSE_FOREST_3999,DENSE_FOREST,LEAVES,LEAVES_3924,LEAVES_3925,STICKS,TRIPWIRE,GAP,GAP_2831,STEPPING_STONE_5948,STEPPING_STONE_5949,ROCK_16115,CLIMBING_ROCKS_11948,CLIMBING_ROCKS_11949,BROKEN_FENCE_2618,NULL_25337,NULL_29868,NULL_29869,NULL_29870,ICE_CHUNKS_31822,NULL_31823,ICE_CHUNKS_31990,TUNNEL_30959,HOLE_30966,OBSTACLE,OBSTACLE_30767,OBSTACLE_30964,OBSTACLE_30962,LOOSE_RAILING_2186)
!isOpened
value.startsWith("npm WARN ")
AndroidResourceUtil.findResourceFieldsForFileResource((PsiFile)element,false)
expandableView.getActualHeight()
Log.wtf(TAG,"This will become an error",ex)
pongPublication.offer(buffer,offset,length) < 0L
/**   * t1.g4 -> t2.g4 -> t3.g4 ->t1.g4   */ CIRCULAR_DEPENDENCY(130,"your grammars contain a circular dependency and cannot be sorted into a valid build order",ErrorSeverity.ERROR)
new EmptyProgressIndicator()
val
5 * 1000
WorkflowTaskManagerUtil.searchCount(_workflowTaskRequestHelper.getCompanyId(),_workflowTaskRequestHelper.getUserId(),searchTerms.getKeywords(),WorkflowHandlerUtil.getSearchableAssetTypes(),completedTasks,false)
Slog.wtf(TAG,"Starting rect for app requested, but none available",new Throwable())
mAttributes.getFlags()
checkFalsified(listsOf(doubles()),l -> isSorted(l.stream().sorted().collect(Collectors.toList())),58)
mDarkIntensity == DARK_INTENSITY_NOT_SET
artifact.getRootRelativePath()
removeCallbacks(null)
PendingIntent.getBroadcast(mContext,0,ACTION_NULL,PendingIntent.FLAG_UPDATE_CURRENT)
attributes == null
display.getMetrics(dm)
Math.toDegrees(Math.asin(burgerWidth / hypotenuse)) + 90
TfsShell.convertMsToDate(files[1].getCreationTimeMs())
(sbn.getNotification().flags & Notification.FLAG_AUTOGROUP_SUMMARY) != 0
firstWakeup != null
super.getView(position,contextualUndoView.getContentView(),parent)
new CountDownLatch(5)
Mono.currentContext()
final TestActivityStack pinnedStack=createStackForShouldBeVisibleTest(mDefaultDisplay,WINDOWING_MODE_PINNED,ACTIVITY_TYPE_STANDARD,true); 
testConsumerConfig()
notation.<ArtifactFile>flatMap(new Transformer<ArtifactFile,Object>(){   @Override public ArtifactFile transform(  Object value){     ArtifactFile artifactFile;     if (value instanceof FileSystemLocation) {       FileSystemLocation location=(FileSystemLocation)value;       artifactFile=new ArtifactFile(location.getAsFile(),module.getVersion());     }  else     if (value instanceof File) {       artifactFile=new ArtifactFile((File)value,module.getVersion());     }  else {       throw new InvalidUserDataException(String.format("Cannot convert provided value (%s) to a file.",value));     }     return artifactFile;   } } )
blogVals.get(26)
imageView.setImageBitmap(null)
" firstActiveTime=" + lastActiveTime
uid > 0
cs[0].set0(r,(int)(rng.nextDouble() * _createFrame.response_factors))
mMenuDrawer.isShown()
type == QUADS
networkInfo.getType() == ConnectivityManager.TYPE_WIFI && !networkInfo.isConnected()
connection.prepareStatement(sql)
watching.movie != null
logger.info("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
new IOException("Attempted to move past end of data: (" + position + " + "+ length+ ") > "+ data.length)
layoutFriendlyURLLocalService.addLayoutFriendlyURLs(user.getCompanyId(),groupId,plid,privateLayout,friendlyURLMap,serviceContext)
mock(ExampleService.class,MockReset.before())
MAX_DIMEN_FOR_ROUNDING=1080
checkPojoMetaClass()
ObjectAnimator.ofFloat(mView,"alpha",dimAlpha)
dynamicType.getLoaded().getConstructor()
filterCollection.getBranchFilter() != null
bbbGW.userConnectedToGlobalAudio(emm.voiceConf,emm.userid,emm.name)
context.getBeanNamesForType(type,false,true)
invokeKind != InvokeKind.Special
mBiometricUnlock.stopAndShowBackup()
StringUtils.equals(filter.getKey(),RuleNormalizer.RuleField.REPOSITORY.field())
new CharChunk()
mEditSessionTime.setText(String.valueOf(repLimit))
!wasMultiTouchZoomMode
lexer.token() == (Token.SELECT)
Long.valueOf(value)
verifyNull(decoder,text("(865733028143493,00I76,00,000,,,,,A,133755,210617,10.57354,077.24912,SW,000,00598,00000,K,0017368,1,12.7,,,0.000,,,0,0,0,0,1,1,0,,)074"))
mConnector.execute("resolver","clearifaceforuidrange",uid_start,uid_end)
ams.mContext.createPackageContext(appInfo.packageName,0)
ATLAS_MAP_ENTRY_FIELD_COUNT=4
cc.isLazy()
lan
dropdownItem.setHref(_renderResponse.createRenderURL(),"mvcPath","/edit_ddm_template.jsp","groupId",String.valueOf(themeDisplay.getScopeGroupId()),"classNameId",String.valueOf(PortalUtil.getClassNameId(DDMStructure.class)),"classPK",String.valueOf(_getClassPK()),"resourceClassNameId",String.valueOf(PortalUtil.getClassNameId(JournalArticle.class)),"type",DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY)
spec.getClass()
CacheData<NullTypes>
it.hasNext()
commit.getId().toShortString()
new StringBuilder(639)
new RuntimeException(e)
mImm.setInputMethod(mToken,id)
HashSet<Test>
15 * 60 * 1000
request.getClientAttributeNames()
!isClosed.get()
@Nullable
f.toURL()
props.entrySet()
Long.valueOf(value)
counter >= max
LinkedHashMap<String,Object>
Collection<TblColRef>
attributes.getDimension(R.styleable.ArcProgress_arc_angle,default_arc_angle)
UIMODE_SERVICE.equals(name)
BUTTON_QUIESCENT_ALPHA=0.6f
path.findChild(className.replace('.','/') + ".class")
new IndexWriter(dirs[i],new WhitespaceAnalyzer(),true)
exportReturnCodes(exporter)
userGroupMember.getMemberId()
owners.add(Receiver.<String>make(clazzGT.getType()))
dataBuffer.rewind()
context.connectTimeout * 1000
Loader.getResource(AUTOCONFIG_FILE,classLoader)
/**   * Bluetooth GATT callbacks. Overrides the default BluetoothGattCallback implementation.  */ private final IBluetoothGattCallbackExt mBluetoothGattCallback=new IBluetoothGattCallbackExt.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onClientRegistered(  int status,  int clientIf){     if (DBG)     Log.d(TAG,"onClientRegistered() - status=" + status + " clientIf="+ clientIf);     if (VDBG) { synchronized (mStateLock) {         if (mConnState != CONN_STATE_CONNECTING) {           Log.e(TAG,"Bad connection state: " + mConnState);         }       }     }     mClientIf=clientIf;     if (status != GATT_SUCCESS) {       mCallback.onConnectionStateChange(BluetoothGatt.this,GATT_FAILURE,BluetoothProfile.STATE_DISCONNECTED); synchronized (mStateLock) {         mConnState=CONN_STATE_IDLE;       }       return;     }     try {       mService.clientConnect(mClientIf,mDevice.getAddress(),!mAutoConnect,mTransport,mPhy);     }  catch (    RemoteException e) {       Log.e(TAG,"",e);     }   }   /**   * Phy update callback  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyUpdate(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Phy read callback  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyRead() - status=" + status + " address="+ address+ " txPhy="+ txPhy+ " rxPhy="+ rxPhy);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onPhyRead(BluetoothGatt.this,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Client connection state changed  * @hide  */   @Override public void onClientConnectionState(  int status,  int clientIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onClientConnectionState() - status=" + status + " clientIf="+ clientIf+ " device="+ address);     if (!address.equals(mDevice.getAddress())) {       return;     }     int profileState=connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED;     try {       mCallback.onConnectionStateChange(BluetoothGatt.this,status,profileState);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     } synchronized (mStateLock) {       if (connected) {         mConnState=CONN_STATE_CONNECTED;       }  else {         mConnState=CONN_STATE_IDLE;       }     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }   }   /**   * Remote search has been completed. The internal object structure should now reflect the state of the remote device database. Let the application know that we are done at this point.  * @hide  */   @Override public void onSearchComplete(  String address,  List<BluetoothGattService> services,  int status){     if (DBG)     Log.d(TAG,"onSearchComplete() = Device=" + address + " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     for (    BluetoothGattService s : services) {       s.setDevice(mDevice);     }     mServices.addAll(services);     for (    BluetoothGattService fixedService : mServices) {       ArrayList<BluetoothGattService> includedServices=new ArrayList(fixedService.getIncludedServices());       fixedService.getIncludedServices().clear();       for (      BluetoothGattService brokenRef : includedServices) {         BluetoothGattService includedService=getService(mDevice,brokenRef.getUuid(),brokenRef.getInstanceId(),brokenRef.getType());         if (includedService != null) {           fixedService.addIncludedService(includedService);         }  else {           Log.e(TAG,"Broken GATT database: can't find included service.");         }       }     }     try {       mCallback.onServicesDiscovered(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been read. Updates the internal value.  * @hide  */   @Override public void onCharacteristicRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicRead() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readCharacteristic(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicRead() failed to find characteristic!");       return;     }     if (status == 0)     characteristic.setValue(value);     try {       mCallback.onCharacteristicRead(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Characteristic has been written to the remote device. Let the app know how we did...  * @hide  */   @Override public void onCharacteristicWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicWrite() - Device=" + address + " handle="+ handle+ " Status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeCharacteristic(mClientIf,address,handle,characteristic.getWriteType(),authReq,characteristic.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onCharacteristicWrite(BluetoothGatt.this,characteristic,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote characteristic has been updated. Updates the internal value.  * @hide  */   @Override public void onNotify(  String address,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onNotify() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     }     BluetoothGattCharacteristic characteristic=getCharacteristicById(mDevice,handle);     if (characteristic == null)     return;     characteristic.setValue(value);     try {       mCallback.onCharacteristicChanged(BluetoothGatt.this,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor has been read.  * @hide  */   @Override public void onDescriptorRead(  String address,  int status,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorRead() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if (status == 0)     descriptor.setValue(value);     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.readDescriptor(mClientIf,address,handle,authReq);         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorRead(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Descriptor write operation complete.  * @hide  */   @Override public void onDescriptorWrite(  String address,  int status,  int handle){     if (VDBG)     Log.d(TAG,"onDescriptorWrite() - Device=" + address + " handle="+ handle);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     BluetoothGattDescriptor descriptor=getDescriptorById(mDevice,handle);     if (descriptor == null)     return;     if ((status == GATT_INSUFFICIENT_AUTHENTICATION || status == GATT_INSUFFICIENT_ENCRYPTION) && (mAuthRetryState != AUTH_RETRY_STATE_MITM)) {       try {         final int authReq=(mAuthRetryState == AUTH_RETRY_STATE_IDLE) ? AUTHENTICATION_NO_MITM : AUTHENTICATION_MITM;         mService.writeDescriptor(mClientIf,address,handle,authReq,descriptor.getValue());         mAuthRetryState++;         return;       }  catch (      RemoteException e) {         Log.e(TAG,"",e);       }     }     mAuthRetryState=AUTH_RETRY_STATE_IDLE;     try {       mCallback.onDescriptorWrite(BluetoothGatt.this,descriptor,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Prepared write transaction completed (or aborted)  * @hide  */   @Override public void onExecuteWrite(  String address,  int status){     if (VDBG)     Log.d(TAG,"onExecuteWrite() - Device=" + address + " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     } synchronized (mDeviceBusy) {       mDeviceBusy=false;     }     try {       mCallback.onReliableWriteCompleted(BluetoothGatt.this,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote device RSSI has been read  * @hide  */   @Override public void onReadRemoteRssi(  String address,  int rssi,  int status){     if (VDBG)     Log.d(TAG,"onReadRemoteRssi() - Device=" + address + " rssi="+ rssi+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onReadRemoteRssi(BluetoothGatt.this,rssi,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the MTU for a given connection changes  * @hide  */   @Override public void onConfigureMTU(  String address,  int mtu,  int status){     if (DBG)     Log.d(TAG,"onConfigureMTU() - Device=" + address + " mtu="+ mtu+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onMtuChanged(BluetoothGatt.this,mtu,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     if (!address.equals(mDevice.getAddress())) {       return;     }     try {       mCallback.onConnectionUpdated(BluetoothGatt.this,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   } } ; 
mScrollView.setVisibility(View.GONE)
loaded.getLoaded().getConstructor()
log.info(sm.getString("contextConfig.role.link",link))
_typeSettingsProperties.toSortedString()
truePositives.incrementCount(classLabel,1.0)
Trans == TRANSPOSE
Flux.from(this.messageService.publisherPreAuthorizeHasRoleFindById(1L)).contextStart(withAdmin)
selenium.isVisible("link=Control Panel")
BUTTON_QUIESCENT_ALPHA=0.6f
invalidateDataSource(monitor,dataSource,true)
sTestCaseCounter == 1
logger.warn("Cannot handle command ({})",e.getMessage())
arguments.add("--jmxlocal")
FileUtil.toFile(searchPath)
type.getConstructor()
limit > 0
is(400)
config != null
set(object,value.intValue())
new IllegalArgumentException()
_fragmentEntryLocalService.addFragmentEntry(userId,fragmentEntry.getGroupId(),fragmentEntry.getFragmentCollectionId(),fragmentEntry.getName(),fragmentEntry.getCss(),fragmentEntry.getHtml(),fragmentEntry.getJs(),fragmentEntry.getPreviewFileEntryId(),fragmentEntry.getStatus(),serviceContext)
WordPress.getCurrentBlog().getRemoteBlogId()
TelephonyManager.getDefault().getPhoneType()
RuntimeException e
getObjectLayout().getArrayBaseOffset(elementKind)
state <= 0
return true; 
r.curApp != null
sourceIterator.numExamples()
resultAmount.compareTo(fulfillmentAmount) <= 0
flyway.setLocations("com.googlecode.flyway.sample.migration")
((PresenceStatus)status).getStatus() > PresenceStatus.ONLINE_THRESHOLD
Assert.assertEquals(workerAddress,new InetSocketAddress(defaultHostname,10001))
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
mAuthorities.get(i)
assertFalse(oldChild.isSafelyReplaceableBy(newChild))
Exception e
@Specialization protected Object fromChar(char value,@SuppressWarnings("unused") LLVMInteropType.Structured type){   return new LLVMBoxedPrimitive(value); } 
mapillaryControl.setText("",map.getString(R.string.mapillary))
sess.init()
DiagnosticType.disabled("AMBIGUOUS_FUNCTION_DECL","Ambiguous use of a named function: {0}.")
ObjectAnimator.ofFloat(mView,"alpha",dimAlpha)
c.deactivate()
opti <= args.length
storeProperty(propertyNode,pexp,objectExpressionType,visitor,receiver.getData())
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
closedChannelException != null
Preconditions.checkNotNull(timer)
sX != 0
lock.isLocked()
new MockNode(Settings.builder().put(SETTINGS).put("node.data",false).build(),false,Version.CURRENT,Arrays.asList(WatcherBenchmarkPlugin.class,LicensePlugin.class))
globalFacetsForCategorySearch
sigmoid(ndArray,true)
_log.error(ioe,ioe)
Arrays.sort(dbNames,0,dbNames.length - 1,new Comparator<String>(){   public int compare(  String o1,  String o2){     return o1.compareToIgnoreCase(o2);   } } )
Environment.getRootDirectory()
Math.min(leftLen,rightLen)
mImm.getInputMethodList()
new UnsupportedOperationException()
ResponseEntity<Void>
FieldAccess.forField(delegateField).getter()
new DatabaseExplorerDialog(shell,props,SWT.NONE,inf,transMeta.getDatabases())
DbException.get(ErrorCode.INDEX_BELONGS_TO_CONSTRAINT_1,indexName)
Collections.emptyList()
assertNotNull(message.getPayload() instanceof Collection<?>)
it.remove()
mBondState.setBondState(address.toUpperCase(),state)
gl.glDeleteBuffer(depthStencilPackedBufferHandle)
newControl.setSpatial(this)
fortData.getLureInfo().getLureExpiresTimestampMs() < api.currentTimeMillis()
minValue >= low
platformVersion < MNC
ast.getNextSibling() != null
getCurrCapacity()
homeListView.setSelection(0)
myCopyDocument.addDocumentListener(new DocumentAdapter(){   @Override public void documentChanged(  DocumentEvent e){     if (isUpToDate()) {       myTranslation.addFirst(e);     }   } } )
(call.getCallGroup() != null || otherCall.getCallGroup() != null) && call.getCallGroup() != otherCall.getCallGroup()
parentDocId != -1
file.exists()
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer())
HighlightInfo.newHighlightInfo(HighlightInfoType.WARNING).range(refElement).description(message)
config.getProperty("peer.p2p.pingInterval",5)
Setting.listSetting("searchguard.audit.config.http_endpoints",Lists.newArrayList("localhost:9200"),Function.identity(),Property.NodeScope,Property.Filtered)
supportProvider.getPullUpHandler()
RestartStrategies.fixedDelayRestart(3,0)
IllegalAccessError.class
mStartActivity.task == null
new RelationshipLinkbackStage(topic,config,neoStore.getRelationshipStore(),nodeRelationshipCache,0,false)
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
getOrCreateContainer().unlock(dataKey,caller,threadId)
response.getStatusCode()
selenium.isVisible("link=Control Panel")
assertEquals(0.0,(0.4 - est.getProb()) / 0.4,0.05)
in.seek(in.getFilePointer() + 4)
BACKGROUND_DEXOPT_JOB=808
canvas.clipPath(mRenderPath,Region.Op.REPLACE)
typeDeclaration.isNovel()
PrivacyManager.getRestrictions(false)
mapActions.openOptionsMenuAsList()
new V(1,new EnumSetting(SORT_TYPE.class,Account.DEFAULT_SORT_TYPE))
type.getConstructor()
selenium.isVisible("link=Control Panel")
InvokerException e
StringUtils.isBlank(outFileName)
subMesh.firstByte.intValue() / 3
verify(safeOutputStreamConsumer,times(7)).stdOutput(anyString())
Thread.sleep(5000)
AndroidAptCompiler.getResourceDirForApkCompiler(depFacet.getModule(),facet)
final Color color
this.registrations.get(handler)
element.getNodeName()
ignoreOverridenMethods && (AnnotationUtility.containsAnnotation(methodDef,"Override") || AnnotationUtility.containsAnnotation(methodDef,"java.lang.Override"))
Streams.fileInr(f)
-1
InetAddress.getLoopbackAddress()
selenium.isVisible("link=Control Panel")
9 | open
public class XpathRegressionRequireThisTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=RequireThisCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRequireThisOne.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RequireThisCheck.class);     moduleConfig.addAttribute("validateOnlyOverlapping","false");     final String[] expectedViolation={"7:9: " + getCheckMessage(RequireThisCheck.class,RequireThisCheck.MSG_VARIABLE,"age","")};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRequireThisOne']/OBJBLOCK" + "/METHOD_DEF[@text='changeAge']/SLIST/EXPR/ASSIGN[@text='age']/IDENT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=RequireThisCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,"SuppressionXpathRegressionRequireThisTwo.java"));     final DefaultConfiguration moduleConfig=createModuleConfig(RequireThisCheck.class);     moduleConfig.addAttribute("validateOnlyOverlapping","false");     final String[] expectedViolation={"9:9: " + getCheckMessage(RequireThisCheck.class,RequireThisCheck.MSG_METHOD,"method1","")};     final List<String> expectedXpathQueries=Collections.singletonList("/CLASS_DEF[@text='SuppressionXpathRegressionRequireThisTwo']/OBJBLOCK" + "/METHOD_DEF[@text='method2']/SLIST/EXPR/METHOD_CALL[@text='method1']/IDENT");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } 
DBUtils.getQuotedIdentifier(this)
this(0,null); 
attribute.getDefinition().getAttributeMarshaller()
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
selenium.isVisible("link=Control Panel")
endIndex == value.length()
result=false
booleanPreference(preference,value,R.string.p_field_missed_calls,R.string.MCA_missed_calls_pref_desc_enabled,R.string.MCA_missed_calls_pref_desc_disabled)
totalNbSuggestions > MAX_NUMBER_SUGGESTIONS
maxPagedStorageCacheProperty == null
IBackupManagerService svc=mService; 
indexOutURI.getPath()
id=15874
ExceptionMapper.class
mGoogleApiConnectionTask.setResult(bundle)
NetworkLibraryItem libraryItem(); 
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
FilterRegistrationBean.class
new MetaTableLocator().waitMetaRegionLocation(watcher,100)
future.get(30,TimeUnit.SECONDS)
selenium.isVisible("link=Control Panel")
selenium.isVisible("link=Control Panel")
SSLParametersImpl.getDefaultTrustManager()
selenium.isVisible("link=Control Panel")
decoder.decode(null,null,ChannelBuffers.wrappedBuffer(ByteOrder.LITTLE_ENDIAN,ChannelBufferTools.convertArray(buf1)))
LOGGER.warn("onStartCommand({}) called while currentCommandExecution = {}",execution,currentCommandExecution)
deltaY > 0
c.getDomain() == null
SIDE_MARGIN_DIP=5
OUTPUT_SLOT_INVENTORY_INDEX=1
holder.createInfoAnnotation(element,composeTooltipString(descriptor,deprecated))
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
mRecyclerView.scrollBy(hScroll,vScroll)
reactiveType == null
OverrideImplementUtil.getMethodSignaturesToImplement(aClass)
info.getMsisdnForSubscriber(subId)
new CacheException(e)
verifyNothing(decoder,text("359769031878322imei:359769031878322,tracker,1602160718,2,F,221811.000,A,1655.2193,S,14546.6722,E,0.00,,"))
new MultitouchTest()
ViewGroup newView; 
new KadaneResult(maxSoFar,maxStart,maxEnd)
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
_buildTemplateWithGradle("spring-mvc-portlet","spring-mvc-dependency-management","--dependency-management-enabled","true")
{4,5,5,11,6,5,7,5,11,11}
setNumber(String.valueOf(integerPart))
setSDesEncryptionToDescription(mediaType,description,null)
selenium.isVisible("link=Control Panel")
cookie.getMaxAge()
appView.backHistory()
Boolean.getBoolean(getDefaultStr(key))
mRedrawClip.isEmpty()
connectors.put(connectorName,connector)
new MediaController(token)
selenium.isVisible("link=Control Panel")
distanceToView(focused) > 0
new AffineTransform(mTextScaleX,mTextSkewX,0,0,1,0)
!usr.getUUID().equalsIgnoreCase(usr.getLastName())
Optional.of(BuckAddDependencyIntention.create(referenceElement,psiClass))
CasEvent::getId
new PlotFiltersIterationListener(variables)
log.warn("Problem in JSR223 script ",e)
TextUtils.isEmpty(details) || DETAIL_SEPARATOR.equals(details)
selenium.isVisible("link=Control Panel")
new String[4]
requestContext.getUri().getPath()
_validatePossiblePropertyValues(propertyElement,possiblePropertyValues,filePath)
new File(ctx.getCurrentDir(),resourceArr[i])
scopeGroup.isRegularSite()
mCurrentDate.get(Calendar.MONTH) != dayOfMonth
S extends Tree
Slog.e(TAG,"Invalid wallpaper data")
"Can not parse conflict reason: " + reason
onFailure(new JSONException("Unexpected type " + jsonResponse.getClass().getName()))
obtainMessage(MSG_LAYOUT_DIRECTION,layoutDirection)
ev.mTimeSamples.length < NT
lastPosition < positionCount
console.readPassword()
userDNPattern.matcher(username)
stripFilter.skipWhiteSpace(charBuffer,stringWriter)
UDeclarationKt.getContainingDeclaration(uClass)
wrapRequest
ByteBuffer.allocateDirect(mPreviewWidth * mPreviewHeight * 4)
selenium.isVisible("link=Control Panel")
mAppTokens.get(i)
battery.addPowerChecking(64 * MjAPI.MJ)
mExpandedDialog != null
outLatch.startLatch.await(200,TimeUnit.MILLISECONDS)
ImmutableSet.of("testAutoIndexKeyDroppingWithPersistence","testReIndexingOfElements","testGettingVerticesAndEdgesWithKeyValue")
embeddable.isMetadataComplete()
contains="directDispatch"
toString()
DEBUG=true
assertNotNull(message.getPayload() instanceof Collection<?>)
DumpUtils.checkDumpPermission(mActivityManagerService.mContext,"dbinfo",pw)
FileType.of(".h",".hh",".hpp",".hxx",".inc")
new byte[13]
value < minimumValue
new Fault("COULD_NOT_WRITE_XML_STREAM_CAUSED_BY",LOG,e,e.getMessage())
String.format(SCOPED_AUTHORIZE_URL,formURLEncode(config.getCallback()),formURLEncode(config.getScope()))
p.getPassMaterial() != null
LOGGER.info("Register profile {} for organization {}",qualityProfile.getQProfileName(),organization.getKey())
charsSequence.charAt(startOffset)
_connectBlocking=blockingConnects
logger.trace("[{}] not acking store deletion (not a data node)")
written.incrementAndGet()
UserHandle.getCallingUserId()
statusBar.layout()
contact.getUser()
paths.isEmpty()
selenium.isVisible("link=Control Panel")
GL20.glUniform2(location,v)
route.isDeviceTypeBluetooth()
type.getConstructor()
idx > biomes.length
data != null
3 + _maxDDLCustomFieldCount * 4
Uri uri
Build.VERSION.SDK_INT < 23
pm.setBlockUninstallForUser(packageName,blockUninstall,userId)
type.getConstructor()
new NioEventLoopGroup()
isValid(payloadJSONObject)
Arrays.asList("Motorola IHF1000","i.TechBlueBAND","X5 Stereo v1.3")
in.readUTF()
LOG.info("Cannot access storage directory " + rootPath,ex)
public class ParseTest extends BaseParseTestCase2 {   public void test1() throws Throwable {     myFixture.testHighlighting("test1.regexp");   }   public void test2() throws Throwable {     myFixture.testHighlighting("test2.regexp");   }   public void test3() throws Throwable {     myFixture.testHighlighting("test3.regexp");   }   public void test4() throws Throwable {     myFixture.testHighlighting("test4.regexp");   } } 
a.getCanonicalName()
THREADS_PER_CLIENT=8
(read=channel.read(byteBuffer)) > 0
new TextPaint()
states.length == 14
proratedOrderAdjustment.compareTo(BigDecimal.ZERO) == 0
mService.isOemUnlockAllowed()
mNotificationManager.cancel(SystemMessage.NOTE_TV_PIP)
sentenceCount > maxDocs
Thread.sleep(5000)
selenium.isVisible("link=Control Panel")
ScopedProxyUnwrapper.unwrapIfNecessary(resource)
constructorInvokationMarker.drop()
menu.findItem(R.id.menu_uncomplete_checklists).setVisible(true)
out.writeLong(length())
method.getClass()
UI_TIMEOUT=2500
mSecondSpaceView.setVisibility(View.GONE)
SystemTable.removeEndpoint(DatabaseDescriptor.getReplaceAddress())
selenium.isVisible("link=Control Panel")
count < 51
CollectionUtils.compareAsList(getParameters(),o.getParameters())
hits.length()
desktopSharingButton.setPressedImage(ImageLoader.getImage(ImageLoader.DESKTOP_BUTTON_SMALL_PRESSED))
alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP,calendar.getTimeInMillis(),AlarmManager.INTERVAL_DAY,reminderIntent)
checkPojoMetaClass()
showSnackbar(mainTextResource,shortLength,actionTextResource,listener,root)
config.swapBones()
DEFAULT_ALLOW_REPEAT_CALLERS=false
mgr.mergeSegments(cube,500,1500)
twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
mask.isColumnVector()
i > 1
in.readParcelable(MilestoneModel.class.getClassLoader())
new Paint(Paint.ANTI_ALIAS_FLAG)
sep < 0
onDetachedFromWindow()
from > to
Integer.valueOf(topStr)
mInstalld.snapshotProfile(appId,packageName,codePath)
new Paint(Paint.ANTI_ALIAS_FLAG)
callbacks.onHardwarePostDraw(canvas)
withModifiers(SynchronizationState.PLAIN,Visibility.PUBLIC)
holder.setVisible(getLoadingViewId(),visible)
DiagnosticFactory3.create(ERROR,DECLARATION_SIGNATURE)
new ByteArrayOutputStream()
private RunningProcesList mRunningProcessList=new RunningProcesList(); 
new Paint()
LOG.error("Memory Usage for the Broker (" + memLimit / (1024 * 1024) + " mb) is more than the maximum available for the JVM: " + jvmLimit / (1024 * 1024) + " mb - resetting to 70% of maximum available: " + (usage.getMemoryUsage().getLimit() / (1024 * 1024)) + " mb")
mImm.setInputMethod(mToken,id)
GeoQueryContext.builder().setGeoPoint(geoPoints[0]).setBoost(2)
Integer[]
Object interceptor
patchResourcesPath.put(key + ";" + frag.getSymbolicName(),Resource.newResource(fragUrl))
war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(),"web.xml")
Thread.sleep(5000)
LOG.info("Creating netty output stream for block {} @ {} from client {}",blockId,address,NetworkAddressUtils.getClientHostName())
mBoundServices.isEmpty()
Exception e
!file.exists()
id=2
mDisplayContent.mDividerControllerLocked.getWidthAdjustment()
NoopSegmentPublisher.class
Native.ffi_prep_cif(0,1,Structure.FFIType.get(double.class).peer,types)
nameDefinitionMultimap.keySet()
softClassCache.put(beanClass,results)
new CrypticClue("Search the crates near a cart in Varrock.",MILL_2571,new WorldPoint(3226,3452,0),"South east of Varrock Palace, south of the tree farming patch.")
counter >= max
GuiUtils.compareDates(date,System.currentTimeMillis())
impl.getClass().getMethod("join",InetAddress.class)
executor.awaitTermination(1000,TimeUnit.MILLISECONDS)
this.sentinelMaster=sentinelMaster
Simple.of(Boolean.class)
getStep(stepId)
return mPrefs; 
host1.getAddress()
getIntent().getStringArrayExtra(EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
page.getLocaleCode()
encoderLayerSizes == null
((getAdditionalInformation() != null) && ((database instanceof PostgresDatabase) || (database instanceof OracleDatabase))) || (database instanceof HsqlDatabase)
SamplingProfiler.newThreadGroupTheadSet(group)
pixel >> 8
getLog().error("register druid-driver mbean error",ex)
WIDTH=510
Thread.sleep(5000)
loaded.getLoaded().getConstructor()
numberOfIntercept.incrementAndGet() == 1
PluginServices.getTaskService().fetchById(t,Task.NOTES,Task.ID,Task.UUID,Task.TITLE,Task.HISTORY_FETCH_DATE)
Arrays.asList("Motorola IHF1000","i.TechBlueBAND","X5 Stereo v1.3")
roles != null
FunctionTypesKt.isFunctionType(calleeType)
DEBUG=true
mStackScroller.getChildAtPosition(x,y)
System.out.print("JVM options:")
CharSequence message
mStackSupervisor.anyTaskForIdLocked(taskId,true)
VtexApis.REPLIES_URL + id
retval=(x + y + constValue == x + y)
killBillClient.createExternalCharge(externalCharge,clock.getUTCToday(),true,true,null,null,createdBy,reason,comment)
public TokenStream create(TokenStream input){   return new TrimFilter(input,updateOffsets); } 
Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
refTableName.split("\\.")[0]
ArrayNodeBaseTest<LazyTailArrayNode>
constraintSystem.getTypeVariables()
javaProject.getPackageFragmentRoots()
mWorkerId + BASE_FILE_NUMBER
getPropertyAsString(IMPLEMENTATION)
suggestUniqueVariableName(name,place,false)
new GitCommandResult(false,exitCode,result.getErrorOutput(),result.getOutput()){   @Override public boolean cancelled(){     return true;   } } 
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticFields.kt")
new UnsupportedOperationException("ExifInterface does not support saving attributes for the current input.")
methodAnnotationListField != null
mListener.onInputUpdated(inputId)
addDaysAndCheckForCompletion(7,NextEvent.PAYMENT_ERROR)
opCodes[0x84]
type.getConstructor()
threadContext.isRestartNextLoop()
sourceEdgeTextData.getText().isEmpty()
userId != UserHandle.USER_ALL
createShrinkFadeOutFromBottomAnimation(mContentContainer,0,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();     mContentContainer.removeAllViews();   } } )
!UNKNOWN_PARAMETER_TYPE.equals(wrappedRHS) && !gt.isCompatibleWith(wrappedRHS)
private SACPEntryService _sacpEntryService; 
assertEquals(11,definitions.size())
WordPress.getCurrentBlog().getRemoteBlogId()
addView(mTitleLayout,new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.MATCH_PARENT))
AWAKE_INTERVAL_DEFAULT_MS=5000
Long.valueOf(args[2])
GL20.glUniform3(location,toFloatBuffer(v,offset,count * 3))
TEST_UTIL.waitTableEnabled(tableName)
assertThat(dto.get("snapshotId")).isNotNull()
new TestItem()
!isLoaded && item.isOptional()
isGreaterOrEqual(platformVersion,MNC)
vCard.getTextTrim()
appendQuoted(FlowManager.getTableName(table))
headers.setValue("Vary")
telephony.isIdle()
transfer.getTransactionId()
SimpleHandler.getInstance().post(new Runnable(){   @Override public void run(){     guideDownloadThumb();   } } )
mDisplayContent.mDividerControllerLocked.getWidthAdjustment()
tableModel == null
rteCl.writableBytes()
dest.writeLong(txPower)
mockResultSet.getDouble(1)
targetType.getConstructor()
sa.getBoolean(com.android.internal.R.styleable.AndroidManifestApplication_testOnly,true)
sharedOptsCount.contains(thread)
Slog.e(TAG,"Failed to build intent for " + packageName)
ClassHelper.make(type.getName())
CCMBridge.ipOfNode(0)
new GridKernalContextImpl(this,cfg,gw,ENT)
deadline < now
sm.getString("standardContext.startingContext")
websocketComponent.setMaxThreads(11)
position - dockDividerWidth
temporaryFolder.getRoot()
createTestBlockCapsule(number,dbManager.getDynamicPropertiesStore().getLatestBlockHeaderHash().getByteString(),addressToProvateKeys)
mPackageUsage.write()
workDir == null
mRilVoiceRadioTechnology=m.getInt("dataRadioTechnology")
logger.warn("{} {}",errorCode,message)
provider == null
selenium.isVisible("link=Control Panel")
ThemeUtils.setColoredTitle(actionBar,getString(R.string.actionbar_contacts))
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
new IllegalArgumentException(JSON_BUILDER + "invalid element",e)
RouteInfo ipv4Default=new PatchedRouteInfo(Prefix("0.0.0.0/0"),null,"rmnet0"); 
Slog.wtf(TAG,message,th)
hasNextChunk()
node.getEndColumn()
-3
copy.isPrivate()
LOG.info("Creating short circuit input stream for block {} @ {}",blockId,address)
Double rate=(Double)map.get(MediaFormat.KEY_FRAME_RATE); 
new CheckPermission().of("all").against("deploy").expect(false)
new ArrayList<RowSorter.SortKey>()
asFloatReg(input)
synchronized (this) {   mScreenOnTime=readScreenOnTimeLocked(); } 
this.configuration.getMappedStatement(id)
executor.submit(new EmailTask(messages))
msg.setJMSExpiration(asInt(priority))
mirror.getTypeId()
DEBUG_ALL_ACTIVITIES || false
assertEquals(4,verifier.getErrors().size())
LOG.error(e)
Math.max(titleRight,subtitleRight)
internalViewSchema instanceof ManagedImplStructSchema
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
GroovyJavaSecurityTestsSuite.suite()
documented=true
UndertowLogger.REQUEST_LOGGER.tracef("Timing out channel %s due to inactivity")
fraction * (nextValue - prevValue)
hasVisibleChildren(group,myCheapStrategy)
COMPONENT_RAM_MB=512
Integer.valueOf(taskIdStr)
_configurationPair.getValue()
messageId.getDataLocator()
copy1DRangeFrom(0,mType.getCount(),i)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
USE_NOTIFICATION_LISTENER=false
new Analyzer(new FunctionRegistry(),IndexResolution.valid(test),TimeZone.getTimeZone("UTC"))
assertEquals(0,binder.getDisallowedFields().length)
dest.writeLong(mTxPower)
handleExportApplication()
index >= widgets.length
PsiTreeUtil.getParentOfType(uexpr,ScopeOwner.class)
new StringBuilder(639)
ufsPath.getPath()
/**   */ private LongAdder cntr; 
"Error: Access with origin " + referrer + " denied."
i < maxListFill
selenium.isVisible("link=Control Panel")
IndexReader.open(benchmark.getRunData().getDirectory(),true)
name.equals("getSimCountryIso")
pipeManager.writeDocument(getContext(),mtpManager,new Identifier(0,0,1))
addView(mNotificationHeader)
requestJSONObject.optString(Article.ARTICLE_EDITOR_TYPE)
sDefaults.putBoolean(KEY_CARRIER_WFC_SUPPORTS_WIFI_ONLY_BOOL,true)
timeout=5000
apnContext.getWaitngApns()
accountHandle.getComponentName().toString()
map != null
InternalDecorator.this.computeActive()
CharSequence message
mAnimator.getAnimatedValue(ANIMATED_PROPERTY_ALPHA)
scriptField.setText("")
mService.oneTouchPlay(getCallbackWrapper(callback))
Files.delete(file.toPath())
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_TUNE_FUNCTION)
create(config)
getLogger().error("Unknown classloader [ITE]: " + e.getMessage())
findCodecForFormat(false,format)
mTestStream.getBytesFlushed()
contentType != null
dockedBounds.bottom + adjustment
this.messageService.monoPreAuthorizeBeanFindById(1L).contextStart(withUser)
uiAclHandler.permit(reqContext,op,conf)
pluginsModel.setSortByStatus(true)
!okToShowLocked(r)
context == null
INSTANCE.rand(shape)
contentType.equals(PresContentClient.CONTENT_TYPE)
store.getImage()
Preconditions.checkNotNull(path)
mScreenBrightnessDarkConfig > mScreenBrightnessDimConfig
i < maxListFill
ESClientYamlSuiteTestCase.createParameters(0,1)
new Note(null,noteText,comment,new Date())
separator.setBorder(new EmptyBorder(3,0,2,0))
new NullPointerException()
_logloss / _count
mUserManager.hasUserRestriction(UserManager.DISALLOW_PRINTING)
peekServiceForUserLocked(userId)
HashMap<String,Session>
private BaseAdapter mListAdapter; 
Integer.valueOf(nextArgRequired())
GenericUDFEnforceNotNullConstraint.class
DiagnosticFactory0<KtExpression>
loaded.getLoaded().getConstructor()
@Override public MavenModule dependsOn(Module module){   backingModule.dependsOn(module);   return t(); } 
builder.breakToFill(" ")
telephony.getDataNetworkTypeForSubscriber(subId)
sizeNeeded >= items.length
err != 0
listIntent.toArray()
Environment.getRootDirectory()
findAnnotationAttributes(element,annotationType.getName(),true,true,true,true,false,false)
public AttributeBinding getValueBinding(){   return attributeBinding; } 
logger.warn("Cannot play TuneIn station {} ({})",stationId,e.getMessage())
position.getFixTime()
DEFAULT_DATA_SIZE_PER_COLUMN=10
new EmbeddedDatabaseRule(testDirectory.graphDbDir())
overrideDeploymentConfig
new MediaBrowser.MediaItem(MediaBrowser.MediaItem.FLAG_BROWSABLE,bob.build())
selenium.isVisible("link=Control Panel")
LocalBroadcastManager.getInstance(getContext()).sendBroadcast(intent)
((BaseActivity)getActivity()).injectJava(UserAccountsController.class).isTeamSpace()
refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)
dpToPx(4f)
block.useSourceInfoFromForTree(exprRoot)
getUserBadgedDrawableForDensity(dr,new UserHandle(mContext.getUserId()),null,0)
ClientSession.getTLSPolicy() != Connection.TLSPolicy.required
containerLog.error(sm.getString("dataSourceRealm.getPassword.exception",username))
mContainerActivity.getStorageManager() != null
log.warn("Not found for {}: {}",uriInfo.getRequestUri(),error)
(excluded == null) && (line.length() > 80) && !line.startsWith("import ")&& !line.startsWith("package ")
authentication.hasDefined(USERS)
log.error("Not obtaining HBase Auth Token for MapReduce job " + job.getJobName())
ctx.sendDownstream(e)
InputMethodManager.getInstance(instance)
mService.oneTouchPlay(getCallbackWrapper(callback))
println_native(logId,ASSERT,tag,msg + '\n' + getStackTraceString(localStack ? what : tr))
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_SUBMODULE))
range.contains(offset)
mSyncStatus.get(i)
this.counterpart.split("/")
NoClassDefFoundError e
file.flush()
Math.min(1,(end - currentTimeMillis()) / TimeUnit.DAYS.toMillis(1))
metadata.getFaceRectangles()
List<ValueParameterDescriptor>
constraintCache.getObject(monitor,schema,null)
getPath("InputPackageDeclarationDiffDirectory.java")
ColorResources.getColor("sliderGradientLight")
text.setCompoundDrawablesWithIntrinsicBounds(item.icon,null,null,null)
Throwable t
libsDir() != null
ImageView repost_flag; 
this.logger.isWarnEnabled()
strongClassCache.put(beanClass,results)
"Interrupted when attempting to close writer for end point: " + ep
contact.GetWorldManifold()
MockReset.before()
log.warn("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
telephony.getCdmaEriIconModeForSubscriber(subId)
endElement == null
getEffectiveCleartextTrafficPermitted()
e.getMessage()
session != null
config.getId()
new ClassPathResource(location)
-46
parameter.toString()
floatBuffer.clear()
result=55
null == user
LOG.info(getName() + " caught: ",e)
mPhone.getContext().enforceCallingPermission("android.permission.SEND_SMS","Sending SMS message")
computeGraph(_effective_n_classes,treeToPrint)
psiFileFactory.createFileFromText(HTMLLanguage.INSTANCE,templateString)
from > to
Session.getDefaultInstance(mailServerProperties,null)
new Runtime()
postAgg.getName().equals(topNMetricName)
assertEquals(row.getField(0),3L)
MapActivity.getMapViewTrackingUtilities()
stmt.executeQuery(sql)
leftResult.cardinality()
MAX_IMAGE_DIMEN=1280
mDark && mPulsing ? 0.5f : 1
!userInfo.canHaveProfile()
Build.VERSION.SDK_INT > 21
new GZIPOutputStream(outputStream,true)
manager.getUserDictionary().getWords()
interceptor.intercept(invocation)
states.length == 3
nativeSetFlags(mNativeObject,sc.mNativeObject,0,OPAQUE)
Exception e
logger.debug("attempting to login")
resultSet.getShort(index)
Slog.wtfStack(TAG_WM,"Leaked dim user=" + user.toShortString() + " state="+ state)
this.stringMatcherCache.size() == CACHE_TURNOFF_THRESHOLD
new ChunkedUploadRemoteFileOperation(mFile.getStoragePath(),mFile.getRemotePath(),mFile.getMimetype(),mFile.getEtagInConflict())
mVibratorService.vibrate(2000,new Binder())
WebSettings.setTextSize(WebSettings.TextSize.LARGER)
edge.setType(type)
status <= retry
memoryReservation.getAndAdd(bytes)
getGenericParameterType(genericType,0)
Integer.parseInt(nid[0])
/**   * This is the primary connection pool class that provides the basic pooling behavior for HikariCP.  * @author Brett Wooldridge  */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener {   protected final Logger LOGGER=LoggerFactory.getLogger(getClass());   private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L);   protected static final int POOL_RUNNING=0;   protected static final int POOL_SUSPENDED=1;   protected static final int POOL_SHUTDOWN=2;   public final String catalog;   public final boolean isReadOnly;   public final boolean isAutoCommit;   public int transactionIsolation;   protected final PoolUtilities poolUtils;   protected final HikariConfig configuration;   protected final AtomicInteger totalConnections;   protected final ConcurrentBag<PoolBagEntry> connectionBag;   protected final ThreadPoolExecutor addConnectionExecutor;   protected final ThreadPoolExecutor closeConnectionExecutor;   protected final ScheduledThreadPoolExecutor houseKeepingExecutorService;   protected final boolean isUseJdbc4Validation;   protected final boolean isIsolateInternalQueries;   protected volatile int poolState;   protected volatile long connectionTimeout;   protected volatile long validationTimeout;   private final LeakTask leakTask;   private final DataSource dataSource;   private final GlobalPoolLock suspendResumeLock;   private final IConnectionCustomizer connectionCustomizer;   private final AtomicReference<Throwable> lastConnectionFailure;   private final String username;   private final String password;   private volatile MetricsTracker metricsTracker;   private volatile boolean isRecordMetrics;   /**   * Construct a HikariPool with the specified configuration.  * @param configuration a HikariConfig instance  */   public BaseHikariPool(  HikariConfig configuration){     this(configuration,configuration.getUsername(),configuration.getPassword());   }   /**   * Construct a HikariPool with the specified configuration.  We cache lots of configuration items in class-local final members for speed.  * @param configuration a HikariConfig instance  * @param username authentication username  * @param password authentication password  */   public BaseHikariPool(  HikariConfig configuration,  String username,  String password){     this.username=username;     this.password=password;     this.configuration=configuration;     this.poolUtils=new PoolUtilities(configuration);     this.connectionBag=createConcurrentBag(this);     this.totalConnections=new AtomicInteger();     this.connectionTimeout=configuration.getConnectionTimeout();     this.validationTimeout=configuration.getValidationTimeout();     this.lastConnectionFailure=new AtomicReference<Throwable>();     this.isReadOnly=configuration.isReadOnly();     this.isAutoCommit=configuration.isAutoCommit();     this.suspendResumeLock=configuration.isAllowPoolSuspension() ? new GlobalPoolLock(true) : GlobalPoolLock.FAUX_LOCK;     this.catalog=configuration.getCatalog();     this.connectionCustomizer=initializeCustomizer();     this.transactionIsolation=getTransactionIsolation(configuration.getTransactionIsolation());     this.isIsolateInternalQueries=configuration.isIsolateInternalQueries();     this.isUseJdbc4Validation=configuration.getConnectionTestQuery() == null;     setMetricRegistry(configuration.getMetricRegistry());     setHealthCheckRegistry(configuration.getHealthCheckRegistry());     this.dataSource=poolUtils.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getDriverClassName(),configuration.getJdbcUrl(),username,password);     this.addConnectionExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),"HikariCP connection filler (pool " + configuration.getPoolName() + ")",configuration.getThreadFactory(),new ThreadPoolExecutor.DiscardPolicy());     this.closeConnectionExecutor=createThreadPoolExecutor(4,"HikariCP connection closer (pool " + configuration.getPoolName() + ")",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());     long delayPeriod=Long.getLong("com.zaxxer.hikari.housekeeping.periodMs",TimeUnit.SECONDS.toMillis(30L));     ThreadFactory threadFactory=configuration.getThreadFactory() != null ? configuration.getThreadFactory() : new DefaultThreadFactory("Hikari Housekeeping Timer (pool " + configuration.getPoolName() + ")",true);     this.houseKeepingExecutorService=new ScheduledThreadPoolExecutor(1,threadFactory,new ThreadPoolExecutor.DiscardPolicy());     this.houseKeepingExecutorService.scheduleAtFixedRate(getHouseKeeper(),delayPeriod,delayPeriod,TimeUnit.MILLISECONDS);     this.houseKeepingExecutorService.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);     this.leakTask=(configuration.getLeakDetectionThreshold() == 0) ? LeakTask.NO_LEAK : new LeakTask(configuration.getLeakDetectionThreshold(),houseKeepingExecutorService);     setRemoveOnCancelPolicy(houseKeepingExecutorService);     poolUtils.setLoginTimeout(dataSource,connectionTimeout);     registerMBeans(configuration,this);     initializeConnections();   }   /**   * Get a connection from the pool, or timeout after connectionTimeout milliseconds.  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection() throws SQLException {     return getConnection(connectionTimeout);   }   /**   * Get a connection from the pool, or timeout after the specified number of milliseconds.  * @param hardTimeout the maximum time to wait for a connection from the pool  * @return a java.sql.Connection instance  * @throws SQLException thrown if a timeout occurs trying to obtain a connection  */   public final Connection getConnection(  final long hardTimeout) throws SQLException {     suspendResumeLock.acquire();     long timeout=hardTimeout;     final long start=System.currentTimeMillis();     final MetricsContext metricsContext=(isRecordMetrics ? metricsTracker.recordConnectionRequest(start) : MetricsTracker.NO_CONTEXT);     try {       do {         final PoolBagEntry bagEntry=connectionBag.borrow(timeout,TimeUnit.MILLISECONDS);         if (bagEntry == null) {           break;         }         final long now=System.currentTimeMillis();         if (bagEntry.evicted || (now - bagEntry.lastAccess > ALIVE_BYPASS_WINDOW && !isConnectionAlive(bagEntry.connection))) {           closeConnection(bagEntry,"(connection evicted or dead)");           timeout=hardTimeout - elapsedTimeMs(start);         }  else {           metricsContext.setConnectionLastOpen(bagEntry,now);           metricsContext.stop();           return ProxyFactory.getProxyConnection((HikariPool)this,bagEntry,leakTask.start(bagEntry));         }       }  while (timeout > 0L);     }  catch (    InterruptedException e) {       throw new SQLException("Interrupted during connection acquisition",e);     }  finally {       suspendResumeLock.release();     }     logPoolState("Timeout failure ");     throw new SQLTimeoutException(String.format("Timeout after %dms of waiting for a connection.",elapsedTimeMs(start)),lastConnectionFailure.getAndSet(null));   }   /**   * Release a connection back to the pool, or permanently close it if it is broken.  * @param bagEntry the PoolBagEntry to release back to the pool  */   public final void releaseConnection(  final PoolBagEntry bagEntry){     metricsTracker.recordConnectionUsage(bagEntry);     if (bagEntry.evicted) {       LOGGER.debug("Connection returned to pool {} is broken or evicted.  Closing connection.",configuration.getPoolName());       closeConnection(bagEntry,"(connection broken or evicted)");     }  else {       connectionBag.requite(bagEntry);     }   }   /**   * Shutdown the pool, closing all idle connections and aborting or closing active connections.  * @throws InterruptedException thrown if the thread is interrupted during shutdown  */   public final void shutdown() throws InterruptedException {     if (poolState != POOL_SHUTDOWN) {       poolState=POOL_SHUTDOWN;       LOGGER.info("HikariCP pool {} is shutting down.",configuration.getPoolName());       logPoolState("Before shutdown ");       connectionBag.close();       softEvictConnections();       houseKeepingExecutorService.shutdown();       addConnectionExecutor.shutdownNow();       houseKeepingExecutorService.awaitTermination(5L,TimeUnit.SECONDS);       addConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       final ExecutorService assassinExecutor=createThreadPoolExecutor(configuration.getMaximumPoolSize(),"HikariCP connection assassin",configuration.getThreadFactory(),new ThreadPoolExecutor.CallerRunsPolicy());       final long start=System.currentTimeMillis();       do {         softEvictConnections();         abortActiveConnections(assassinExecutor);       }  while (getTotalConnections() > 0 && elapsedTimeMs(start) < TimeUnit.SECONDS.toMillis(5));       assassinExecutor.shutdown();       assassinExecutor.awaitTermination(5L,TimeUnit.SECONDS);       closeConnectionExecutor.shutdown();       closeConnectionExecutor.awaitTermination(5L,TimeUnit.SECONDS);       logPoolState("After shutdown ");       unregisterMBeans(configuration,this);       metricsTracker.close();     }   }   /**   * Evict a connection from the pool.  * @param proxyConnection the connection to evict  */   public final void evictConnection(  IHikariConnectionProxy proxyConnection){     closeConnection(proxyConnection.getPoolBagEntry(),"(connection evicted by user)");   }   /**   * Get the wrapped DataSource.  * @return the wrapped DataSource  */   public final DataSource getDataSource(){     return dataSource;   }   /**   * Get the pool configuration object.  * @return the {@link HikariConfig} for this pool  */   public final HikariConfig getConfiguration(){     return configuration;   }   @Override public String toString(){     return configuration.getPoolName();   }   /**   * {@inheritDoc}   */   @Override public final int getActiveConnections(){     return connectionBag.getCount(STATE_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getIdleConnections(){     return connectionBag.getCount(STATE_NOT_IN_USE);   }   /**   * {@inheritDoc}   */   @Override public final int getTotalConnections(){     return connectionBag.size() - connectionBag.getCount(STATE_REMOVED);   }   /**   * {@inheritDoc}   */   @Override public final int getThreadsAwaitingConnection(){     return connectionBag.getPendingQueue();   }   /**   * {@inheritDoc}   */   @Override public final void suspendPool(){     if (suspendResumeLock == GlobalPoolLock.FAUX_LOCK) {       throw new IllegalStateException("Pool " + configuration.getPoolName() + " is not suspendable");     }  else     if (poolState != POOL_SUSPENDED) {       suspendResumeLock.suspend();       poolState=POOL_SUSPENDED;     }   }   /**   * {@inheritDoc}   */   @Override public final void resumePool(){     if (poolState == POOL_SUSPENDED) {       poolState=POOL_RUNNING;       addBagItem();       suspendResumeLock.resume();     }   }   public void setMetricRegistry(  Object metricRegistry){     this.isRecordMetrics=metricRegistry != null;     if (isRecordMetrics) {       this.metricsTracker=new CodaHaleMetricsTracker(this,(MetricRegistry)metricRegistry);     }  else {       this.metricsTracker=new MetricsTracker(this);     }   }   public void setHealthCheckRegistry(  Object healthCheckRegistry){     if (healthCheckRegistry != null) {       CodahaleHealthChecker.registerHealthChecks(this,(HealthCheckRegistry)healthCheckRegistry);     }   }   /**   * {@inheritDoc}   */   @Override public Future<Boolean> addBagItem(){     FutureTask<Boolean> future=new FutureTask<Boolean>(new Runnable(){       public void run(){         long sleepBackoff=200L;         final int minimumIdle=configuration.getMinimumIdle();         final int maxPoolSize=configuration.getMaximumPoolSize();         while (poolState == POOL_RUNNING && totalConnections.get() < maxPoolSize && getIdleConnections() <= minimumIdle && !addConnection()) {           quietlySleep(sleepBackoff);           sleepBackoff=Math.min(connectionTimeout / 2,(long)((double)sleepBackoff * 1.5));         }       }     } ,true);     addConnectionExecutor.execute(future);     return future;   }   /**   * Create and add a single connection to the pool.  */   protected final boolean addConnection(){     if (totalConnections.incrementAndGet() <= configuration.getMaximumPoolSize()) {       Connection connection=null;       try {         connection=(username == null && password == null) ? dataSource.getConnection() : dataSource.getConnection(username,password);         if (isUseJdbc4Validation && !poolUtils.isJdbc4ValidationSupported(connection)) {           throw new SQLException("JDBC4 Connection.isValid() method not supported, connection test query must be configured");         }         final int originalTimeout=poolUtils.getAndSetNetworkTimeout(connection,connectionTimeout);         transactionIsolation=(transactionIsolation < 0 ? connection.getTransactionIsolation() : transactionIsolation);         poolUtils.setupConnection(connection,isAutoCommit,isReadOnly,transactionIsolation,catalog);         connectionCustomizer.customize(connection);         poolUtils.executeSql(connection,configuration.getConnectionInitSql(),isAutoCommit);         poolUtils.setNetworkTimeout(connection,originalTimeout);         connectionBag.add(new PoolBagEntry(connection,this));         lastConnectionFailure.set(null);         return true;       }  catch (      Exception e) {         lastConnectionFailure.set(e);         if (poolState == POOL_RUNNING) {           LOGGER.debug("Connection attempt to database {} failed: {}",configuration.getPoolName(),e.getMessage(),e);         }         poolUtils.quietlyCloseConnection(connection,"(exception during connection creation)");       }     }     totalConnections.decrementAndGet();     return false;   }   /**   * Fill pool up from current idle connections (as they are perceived at the point of execution) to minimumIdle connections.  */   protected void fillPool(){     final int connectionsToAdd=configuration.getMinimumIdle() - getIdleConnections();     for (int i=0; i < connectionsToAdd; i++) {       addBagItem();     }     if (connectionsToAdd > 0 && LOGGER.isDebugEnabled()) {       addConnectionExecutor.execute(new Runnable(){         public void run(){           logPoolState("After fill ");         }       } );     }   }   /**   * Permanently close the real (underlying) connection (eat any exception).  * @param connectionProxy the connection to actually close  */   protected abstract void closeConnection(  final PoolBagEntry bagEntry,  final String closureReason);   /**   * Check whether the connection is alive or not.  * @param connection the connection to test  * @return true if the connection is alive, false if it is not alive or we timed out  */   protected abstract boolean isConnectionAlive(  final Connection connection);   /**   * Attempt to abort() active connections on Java7+, or close() them on Java6.  * @param assassinExecutor   * @throws InterruptedException   */   protected abstract void abortActiveConnections(  final ExecutorService assassinExecutor) throws InterruptedException ;   /**   * Create the JVM version-specific ConcurrentBag instance used by the pool.  * @param listener the IBagStateListener instance  * @return a ConcurrentBag instance  */   protected abstract ConcurrentBag<PoolBagEntry> createConcurrentBag(  IBagStateListener listener);   /**   * Create the JVM version-specific Housekeeping runnable instance used by the pool.  * @return the HouseKeeper instance  */   protected abstract Runnable getHouseKeeper();   /**   * Fill the pool up to the minimum size.  */   private void initializeConnections(){     if (configuration.isInitializationFailFast()) {       try {         try {           if (!addConnection()) {             shutdown();             throw new PoolInitializationException(lastConnectionFailure.getAndSet(null));           }           ConnectionProxy connection=(ConnectionProxy)getConnection();           connection.getPoolBagEntry().evicted=(configuration.getMinimumIdle() == 0);           connection.close();         }  catch (        SQLException e) {           shutdown();           throw new PoolInitializationException(e);         }       }  catch (      InterruptedException ie) {         throw new PoolInitializationException(ie);       }     }     fillPool();   }   /**   * Construct the user's connection customizer, if specified.  * @return an IConnectionCustomizer instance  */   @SuppressWarnings("deprecation") private IConnectionCustomizer initializeCustomizer(){     if (configuration.getConnectionCustomizerClassName() != null) {       return createInstance(configuration.getConnectionCustomizerClassName(),IConnectionCustomizer.class);     }     return configuration.getConnectionCustomizer();   }   public final void logPoolState(  String... prefix){     if (LOGGER.isDebugEnabled()) {       LOGGER.debug("{}pool stats {} (total={}, inUse={}, avail={}, waiting={})",(prefix.length > 0 ? prefix[0] : ""),configuration.getPoolName(),getTotalConnections(),getActiveConnections(),getIdleConnections(),getThreadsAwaitingConnection());     }   } } 
new JUnitMetadataGenerator(spec)
total=10000
builder.or(inRestrictions.toArray(new Predicate[inRestrictions.size()]))
TEST_UTIL.getHBaseAdmin()
return false; 
fraction * (nextValue - prevValue)
Flux.fromStream(viewResolverStream).concatMap(viewResolver -> viewResolver.resolveViewName(name(),locale)).next().otherwiseIfEmpty(Mono.error(new IllegalArgumentException("Could not resolve view with name '" + name() + "'")))
VibrationEffect.get(VibrationEffect.EFFECT_TICK)
Optional.of(realmName)
new CifarDataSetIterator(batchSize,numSamples,new int[]{height,width,channels},true,preProcessCifar)
items[32]
mVibratorService.vibratePattern(new long[]{0},0,new Binder())
request.getUserPrincipal()
SystraceMessage.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE)
referenceDatabase.setObjectQuotingStrategy(ObjectQuotingStrategy.QUOTE_ALL_OBJECTS)
selenium.isVisible("link=Control Panel")
LOGGER.debug("Could not execute markEntries",ex)
groupType == null
getLsNoAclResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER)
PortalUtil.getClassNameId(className)
cubeSeg.getConfig().getQueryCoprocessorTimeoutSeconds() * 1000
event.getTime() > currentPlayTime
log.debug("text : {}",text)
read.location().kind()
mSettingsButton != null
Table<String,String,byte[]>
MAX_DIMEN_FOR_ROUNDING=1080
bigFirstTokenBalance.multiply(bigTokenQuant).divide(bigSecondTokenBalance).longValue()
expandableView.getActualHeight()
times(2)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
logger.debug("Mapped {} to {}",t,e.getValue())
xCapClient.dicsonnect()
AtmosphereResourceImpl.class.cast(r)
new InputStreamReader(bais,StandardCharsets.UTF_8)
new DashboardServiceImpl(mongoRule.getMongoConnection(),metricRegistry,searches,dashboardWidgetCreator)
"com.android.browser".equals(browserPackageName)
new RuntimeException(msg.getMessage())
log.info(sm.getString("contextConfig.role.auth",roles[j]))
pending.incrementAndGet()
selenium.isVisible("link=Control Panel")
myListeners.add(listener)
items.size() == 1
readBuffer.position() > 0
assertEquals(49,(long)stats.getServerCache().getHostFor("dns:").getSubstats().get(CrawledBytesHistotable.WARC_NOVEL_CONTENT_BYTES))
activity == null
myFixture.checkHighlighting(true,false,false)
triggerProto.getAfterEndOfWidow()
super.getHibernateTemplate().executeFind(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Criteria crit=session.createCriteria(clazz);     crit.add(Expression.allEq(queryMap));     List results=crit.list();     if (results.size() > 0)     return results.get(0);     return null;   } } )
myWindow.getManager().openFileImpl3(myWindow,composite.getFile(),true,null)
new Handler().postDelayed(new Runnable(){   @Override public void run(){     showDonationDialog();   } } ,200)
gran.next(timeStart)
ClassHelper.make(SoftReference.class)
popupWindow.setWidth(menuWidth)
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
logger.info("transport is open - connecting")
range.getFrom()
setNumber(String.valueOf(integerPart))
return false; 
"Cannot find hibernate configuration file in CLASSPATH: " + HIBERNATE_DFLT_CFG
displayContent.getDockedStackLocked()
targetActor.addListener(listener)
String.format("Unable to resolve drawable \"%1$s\" in attribute \"%2$s\"",value,mNames[index])
uri.append(ENTITY_AMPERSAND)
public DerivedBuilder setSSLEngineFactory(SSLEngineFactory sslEngineFactory){   configBuilder.setSSLEngineFactory(sslEngineFactory);   return this; } 
LOG.info("Looking for service: " + service + ". Current token is "+ token)
@Override public MutableLongValue aggregate(MutableLongValue mergedResult,int docId,Block[] block){   if (mergedResult == null) {     return new MutableLongValue(1L);   }  else {     mergedResult.addToValue(1L);     return mergedResult;   } } 
_TestUtil.nextInt(random(),0,256)
input.getPlatformKind()
doTest(2)
createFile("Test.java","class Test extends Type {\n}")
new IndexWriter(d,new StandardAnalyzer(),true)
content.matches(expected)
logger.error("Starting Jetty Azkaban Executor...")
JDBCUtils.safeGetString(resultSet,"ROLENAME")
lhs.getScore()
synchronized (classCache) {   classCache.remove(name); } 
BitmapUploadActivity.class
mAdapter == null
FastMath.max(origin,num.doubleValue())
new SpannedString(first,false)
logger.info("[v] Sync complete! The best block: " + bestBlock.getShortDescr())
parent != mHostView
!comp.getCollectorItems().isEmpty()
caretPos.line == 1
/**   * Returns carrier name of the current subscription. <p>Carrier name is a user-facing name of carrier id  {@link #getSubscriptionCarrierId()}, usually the brand name of the subsidiary (e.g. T-Mobile). Each carrier could configure multiple  {@link #getSimOperatorName() SPN} but should have a single carrier name.Carrier name is not a canonical identity, use  {@link #getSubscriptionCarrierId()} instead.<p>The returned carrier name is unlocalized.  * @return Carrier name of the current subscription. Return {@code null} if the subscription isunavailable or the carrier cannot be identified.  * @throws IllegalStateException if telephony service is unavailable.  */ public String getSubscriptionCarrierName(){   try {     ITelephony service=getITelephony();     return service.getSubscriptionCarrierName(getSubId());   }  catch (  RemoteException ex) {     ex.rethrowAsRuntimeException();   } catch (  NullPointerException ex) {     throw new IllegalStateException("Telephony service unavailable");   }   return null; } 
read == '/'
BUTTON_QUIESCENT_ALPHA=0.6f
new ImmutableInstruction3rc(opcode,instruction.getRegisterCount(),instruction.getStartRegister(),resolvedMethod)
/**   * Returns the private data provider registered to the specified XML element name and namespace. For example, if a provider was registered to the element name "prefs" and the namespace "http://www.xmppclient.com/prefs", then the following packet would trigger the provider: <pre> &lt;iq type='result' to='joe@example.com' from='mary@example.com' id='time_1'&gt; &lt;query xmlns='jabber:iq:private'&gt; &lt;prefs xmlns='http://www.xmppclient.com/prefs'&gt; &lt;value1&gt;ABC&lt;/value1&gt; &lt;value2&gt;XYZ&lt;/value2&gt; &lt;/prefs&gt; &lt;/query&gt; &lt;/iq&gt;</pre> <p>Note: this method is generally only called by the internal Smack classes.  * @param elementName the XML element name.  * @param namespace the XML namespace.  * @return the PrivateData provider.  */ public static PrivateData getPrivateDataProvider(String elementName,String namespace){   String key=getProviderKey(elementName,namespace);   return (PrivateData)privateDataProviders.get(key); } 
_projectTemplateArgs.getName()
mPowerRequest.policy == DisplayPowerRequest.POLICY_DIM
ROOT_LOGGER.error(consoleSlot == null ? "main" : consoleSlot)
mTfs.mkdirs(path)
INDEX_VERSION=17
curArticle.getResourcePrimKey()
SystemProperties.getBoolean("persist.quickstep.scrub.enabled",false)
workDir == null
new ByteBuddy().subclass(Object.class).method(named("toString")).intercept(FixedValue.value(42).withAssigner(new PrimitiveTypeAwareAssigner(ToStringAssigner.INSTANCE),Assigner.Typing.STATIC)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
EnumSet.of(BarcodeFormat.CODE_39,BarcodeFormat.CODE_93,BarcodeFormat.CODE_128,BarcodeFormat.ITF)
private Integer measureId; 
LOG.warn("Promotion of block " + blockId + " failed.",ioe)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_SAVE_MID,false)
ids1.size()
new RemoteViews(mBuilder.mContext.getPackageName(),R.layout.notification_material_media_action)
Response.ok()
ImmutableMap.of(columnFamily,mutations)
LeakHunter.checkLeak(usageView,PsiFileImpl.class)
fluentSetters()
selenium.isVisible("link=Control Panel")
new OptionValue<>(10)
LOG.info("Syslog message is missing date or date could not be parsed. (Possibly set {} to true) " + "Not further handling. Message was: {}",SyslogInputBase.CK_ALLOW_OVERRIDE_DATE,new String(msg.getRaw()))
BitmapUtils.isImage(mFile)
Exception e
final SimulatedTrackball mSimulatedTrackball; 
target.getDestination()
destination.delete()
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_JUMP_TO,false)
new SegmentReader(infos.info(i),newReaders[i].core,IOContext.READ)
sMenuHeight=800
mState.isAlive()
new AlertDialog.Builder(context)
assertEquals(countDownLatch.getCount(),3L)
native_get_videoeditor_export_profile(vidCodec)
ImmutableSet.of("~key","~value","~id","~nid","~label","~adjacent","~timestamp","~ttl","~visibility","key","vertex","edge","element","property","~T$VertexExists","~T$SchemaName","~T$SchemaDefinitionProperty","~T$SchemaCategory","~T$SchemaDefinitionDescription","~T$SchemaUpdateTimestamp","~T$SchemaRelated","~T$VertexLabel")
mGpsListener != null
mRepeat > 1
info.getDeviceSvnUsingSubId(subId[0])
globalScheme.getAttributes(DiffColors.DIFF_DELETED).getEffectColor()
DirectoryReader.open(iw,true)
mGpsListener != null
selenium.isVisible("link=Control Panel")
telephony.getCdmaEriTextForSubscriber(subId)
file.getName().getURI()
Double.max(dgg / gg,0.0)
smallIcon.getType() == Icon.TYPE_RESOURCE
RuleChain.outerRule(timeout)
hStack.getScrollWidth() + 30
members.size() > 1
GlobalSearchScope.projectScope(project)
public Object mapLine(FieldSet fieldSet,int lineNum){   LineItem item=new LineItem();   item.setItemId(fieldSet.readLong(ITEM_ID_COLUMN));   item.setPrice(fieldSet.readBigDecimal(PRICE_COLUMN));   item.setDiscountPerc(fieldSet.readBigDecimal(DISCOUNT_PERC_COLUMN));   item.setDiscountAmount(fieldSet.readBigDecimal(DISCOUNT_AMOUNT_COLUMN));   item.setShippingPrice(fieldSet.readBigDecimal(SHIPPING_PRICE_COLUMN));   item.setHandlingPrice(fieldSet.readBigDecimal(HANDLING_PRICE_COLUMN));   item.setQuantity(fieldSet.readInt(QUANTITY_COLUMN));   item.setTotalPrice(fieldSet.readBigDecimal(TOTAL_PRICE_COLUMN));   return item; } 
new int[8571]
requestFilters != null
world.setBlockState(other,state,3)
mOneShot=true
sep < 0
invoke(compile("testL2I"),12)
0.3f * METERS_IN_ONE_MILE
infos[1]
DBFactoryUtil.setDB(DB.TYPE_HYPERSONIC)
syncOperation.delay == 0
last.getParent()
input.length() >= 2
mAlarmManager.set(AlarmManager.RTC,timestampMs,mAnomalyAlarmIntent)
Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.SYSTEM_NAVIGATION_KEYS_ENABLED,0)
!currentCondition.toString().trim().equals(condition.trim())
mInterpolator == null
SDK_INT >= JELLY_BEAN
DiagnosticType.warning("JSC_REDECLARED_VARIABLE","Redeclared variable: {0}")
MessageBodyReader<TestDummy>
PREVIEW_FRAME_TIMEOUT=300
assertThat(System.currentTimeMillis() - start).isBetween(950L,1050L)
cache.withExpiryPolicy(new InteropExpiryPolicy(create,update,access))
Log_OC.e(TAG,"onResume() start")
extraMargin + "pt"
type.getConstructor()
mHandler.postDelayed(pae,timeout)
mValues[7]
FileUtil.loadFileText(ioFile)
deadline < now
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
FitNesseSuite.initContext(new File(ContextConfigurator.DEFAULT_CONFIG_FILE),fitNesseRootPath,ContextConfigurator.DEFAULT_ROOT,port)
MAX_PERCENT_DIFFERENCE=0.1
tableHasColumn("MicroblogsEntry","receiverMicroblogsEntryId")
DataBufferUtils.read(is,this.bufferFactory,4)
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
Math.abs(e1.getY() - e2.getY()) > SWIPE_MAX_OFF_PATH
logger.error("Action Invalid Value Format Exception {}",ex.getMessage())
alertDialogBuilder.setNegativeButton(resources.getString(R.string.title_allow),new DialogInterface.OnClickListener(){   @Override public void onClick(  DialogInterface dialog,  int which){     result.restricted=false;     if (!cbWhitelist.isChecked() && !cbWhitelistExtra.isChecked()) {       mSelectCategory=cbCategory.isChecked();       mSelectOnce=cbOnce.isChecked();     }     if (cbWhitelist.isChecked())     onDemandWhitelist(restriction,null,result,hook);  else     if (cbWhitelistExtra.isChecked())     onDemandWhitelist(restriction,getXExtra(restriction,hook),result,hook);  else     if (cbOnce.isChecked())     onDemandOnce(restriction,result);  else     onDemandChoice(restriction,cbCategory.isChecked(),false);     latch.countDown();   } } )
computeSemiJoin(inputStatistics,inputStatistics,unknown,u)
String.format(res.getString(R.string.error__upload__local_file_not_copied),((UploadFileOperation)operation).getFileName())
Settings.Global.getInt(getContext().getContentResolver(),Settings.Global.NETWORK_WATCHLIST_ENABLED,0)
mInjector.getUserManager().removeUser(userId)
new BranchedDataException(e)
countNewlines(headerFragment) + 2
objective != null
_path.toString()
IBackupManagerService svc=mService; 
DefaultConversionService conversionService=new DefaultConversionService(); 
-33.865436156120467
new AffineTransform(mTextScaleX,mTextSkewX,0,0,1,0)
return mChangingAppearingDuration; 
@NonNull
subCursor.getInt(COLUMN_ATTENDEE_ID_NAMESPACE)
under
input.slices()
mActiveAgents.valueAt(i)
((PyFunction)def).getParameterList().accept(new PyElementVisitor(){   @Override public void visitPyParameter(  PyParameter par){     PyNamedParameter n_param=par.getAsNamed();     assert n_param != null;     if (!n_param.isKeywordContainer() && !n_param.isPositionalContainer()) {       LookupItem item=(LookupItem)factory.createLookupElement(n_param.getName() + "=");       item.setIcon(n_param.getIcon(0));       ret.add(item);     }   } } )
serialVersionUID=136781021
telephony.isRadioOn()
minutes * 60 * 1000
this.decoder.decode(message.getBody(),elementType,contentType,hints).mapError(this::mapError)
service.getCharacteristic(charUuid.getUuid())
selenium.isVisible("link=Control Panel")
true || DEBUG_WALLPAPER
file == null
ArrayList<UsageInfo>
values == null
formatter.format(toString(Verbosity.Long))
String.format("BUG: %s changed requestable capabilities during rematch: %s -> %s",nc,newNetwork.networkCapabilities)
showTooltip == null
eps(otherArr)
conn.getResponseCode() == HttpURLConnection.HTTP_OK
deopt1.action()
getSshUrl(name,httpPort)
mJobs.get(i)
AvatarManager.getInstance().getOccupantAvatar(user + "/" + resource)
intent.resolveTypeIfNeeded(getContentResolver())
serialVersionUID=215521212534239L
impl._handler_method.toString()
Log.e(TAG,"Got null argument for a defined keyset, ignoring!")
distinctValues.put(distinct,distinct)
log.warn("Problem in JSR223 script ",e)
new IndexWriter(dir,new WhitespaceAnalyzer(),false)
tw.release()
protocolProvider.getAccountID().getAccountAddress()
Fabric.with(this,crashlyticsKit,new Crashlytics())
i > speedBumpIndex
res - _bias
descriptions.size() > 0
partialUri.toString()
getExecutorService()
LOG.error(e)
w1.getGradient(target,alpha)
constructors[TXN_REMOVE_ALL]
((Composite)item.getControl()).layout()
new SpacingBuilder(settings)
byteBuffer == null
getType().isArray()
ContainerUtil.getLastItem(expressions)
attributes.getFlags()
message.length <= MAC_LENGTH
checkManageUsersPermission("getting profiles related to user " + userId)
IllegalArgumentException e
Collection<String>
mHeadsUpNotificationView.clear()
event.getTime() <= currentPlayTime
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_strsm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0)
KeyValue<String,Long>
HashMap<Type,CstType>
myPreprocessorActive
new ArrayList<>()
keySyncOperation.contains(targetKey)
nri.mUid != callingUid
Thread.currentThread().isInterrupted()
this::handle
_connector.getResponses("GET /foo?data=1 HTTP/1.0\nhost: host:80\n\n")
PositiveIntegerValidator.class
zip(srcFile,zipFile,true)
assertOpenEventually("responseLatch",responseLatch,5)
indexOfSlashN != -1
(sync != POSITION_SYNCHRONIZATION_NONE) || (sync != POSITION_SYNCHRONIZATION_CHECK)
sqlType == Types.NUMERIC
telephony.getCdmaEriIconIndexForSubscriber(subId)
new ByteBuddy().subclass(Baz.class).method(named("foo")).intercept(MethodDelegation.to(new Qux())).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
logger.debug("Failed to obtain file icon from JFileChooser.",e)
getActionBar()
createFromResourceStream(res,value,is,srcName)
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_MARK_AS_FINALIZED,false)
actionName.startsWith("android.net.netmon.lingerExpired") || actionName.startsWith("com.android.server.sip.SipWakeupTimer") || actionName.startsWith("com.android.internal.telephony.data-reconnect")
getAdapter() == null
new JedisClusterCommand<Long>(connectionHandler,timeout,maxRedirections){   @Override public Long execute(  Jedis connection){     return connection.persist(key);   } } 
IllegalStateException.class
textSize.y + 4
myDiffContentFactory.create(content)
new StringBuilder()
DEBUG_RC=true
PRESERVE_WINDOWS
sendAdminCommandLocked(deviceOwner,action,extras,null)
JMeterUtils.getPropDefault(USE_RHINO_ENGINE_PROPERTY,false)
out.writeLong(sampleCount)
index > templateTypes.size()
display.getMetrics(dm)
polyglot.executeUnsupported(receiver)
-90
schemeSpecificParts != null
Long.valueOf(val)
Predicate<String>
mAlarmManager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP,userWhen,lockSender)
logger.debug("NODE {}: App version requested but Version class not supported",this.getNodeId())
e.getMessage().indexOf(":") + 2
g.paidAppName.isEmpty()
myTempDir.getCanonicalPath()
assertThat(ex.code()).isEqualTo(400)
Log_OC.e(TAG,"Requesting sync for " + getAccount().name + " at "+ MainApp.getAuthority())
InitialTutorialPrompts.isTargetingBottomNavBar(mActiveTutorialPrompt.getTask())
log.warn("Can't set transaction isolation level",e)
addViewInLayout(child,fromLeft != mIsRtl ? -1 : 0,lp)
assertEquals(10,tasks.size())
Log.w(TAG,"Session failed to close due to remote exception",e)
return false; 
new ConnectionError(sm.getString("upgradeHandler.stream.even",key),Http2Error.PROTOCOL_ERROR)
Iterable<SkyKey>
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
StringBuffer output=new StringBuffer(inName.length()); 
Object[]
HighlightUtil.Feature.ENHANCED_SWITCH.isAvailable(block)
builder.append("#")
PyTokenTypes.ADDITIVE_OPERATIONS.contains(op) || PyTokenTypes.MULTIPLICATIVE_OPERATIONS.contains(op) || PyTokenTypes.SHIFT_OPERATIONS.contains(op)
!myApplicationActive || e.getArea() != EditorMouseEventArea.EDITING_AREA
xml.openElement(getElementName())
this.currentNode
selenium.clickAt("//li[4]/span/a/span",RuntimeVariables.replace("Delete"))
nlDataOutNodes != null & nlDataOutNodes.getLength() > 0
w.closeException() == null
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
AtmosphereResourceEventListener.class
"Error resetting interface " + mInterfaceName + ", :"+ e
index >= widgets.length
displayList != null
v > 65355
logger.getLoggedInfo().startsWith("This stubbing was never used")
configurator.setExcludedImportantEntries("jodd.petite.data.*","jodd.petite.tst3.*","jodd.petite.tst.Ses")
onDetachedFromWindows()
sampleFactory.getConstructor()
instance.startAction(getDefaultTitle(),null,false)
resolver.acquireContentProviderClient(uri)
StringUtil.shortenTextWithEllipsis(modulesToRestoreText.toString(),100,0)
new StringBuilder(246)
mResourceData[i] != null
LOG.isDebugEnabled()
appWindowToken == null
createHalf(buffer.length(),init)
idAnnotation != null
attrNameElement.getInternedText() == charTableIndex
DirectMessage.constructDirectMessages(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
HashMap<String,Operator<? extends Serializable>>
/**   * Returns a child element node at given index.  */ public Node getChildElement(int index){   initChildElementNodes();   if ((index < 0) || (index >= childElementNodes.length)) {     return null;   }   return childElementNodes[index]; } 
log.debug(msg,t)
from > to
worldEdit.getBlockRegistry().parseFromInput(component,context)
new Paint(Paint.ANTI_ALIAS_FLAG)
DpmTestUtils.newRestrictions(UserManager.DISALLOW_ADD_USER)
RandomStringUtils.random(255)
service != null
terminal.receivedInput(postCreateText)
Boolean.valueOf(getOptional("kylin.htrace.show-gui-trace-toggle","false"))
new InvalidFragmentEntryFileException("fragment-collection-cannot-be-imported-into-" + "existing-fragment-collection")
err != 0
mRilVoiceRadioTechnology=m.getInt("dataRadioTechnology")
this.createError == null
myRole2 == ChildRole.LOOP_BODY
mProfileCursor.getCount() == 0
String.format("Cannot complete a promise more than once! Present value: %s, attempted to set: %s",value)
Thread.sleep(50)
Error err
head.getNext()
loaded.getLoaded().getConstructor()
Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline.json",null,paging.asPostParameterList(),true))
BatchCSVRecord singleCsvRecord=Unirest.post(url + "/transformincremental").header("accept","application/json").header("Content-Type","application/json").header(SEQUENCE_OR_NOT_HEADER,"true").body(transform).asObject(BatchCSVRecord.class).getBody(); 
myCachedIntentions.getEditor()
DEBUG=true
Stream.of("CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
outputFile.lastModified() < grammarFile.lastModified()
selenium.isVisible("link=Control Panel")
selenium.isVisible("link=Control Panel")
into.get(i)
new Histogram(10,100,1000,10 * 1000,100 * 1000)
DJB_TYPE=0x04
value.setScale(1,RoundingMode.HALF_EVEN).toString()
"Second position set to " + pos1 + "."
mDeviceInfo.isMili1A()
DEBUG_ALL || false
declaringClass.isInterface() && directMethodCallCandidate.isStatic()
builder.append("#")
TelephonyManager.getDefault().getPhoneType()
context.getPackageName()
appBundle.exists() == false
TextView tv=(TextView)getChildAt(LAST_OBJECT_IN_STACK); 
featuresMask != null
DDMStructureLocalServiceUtil.getStructure(GetterUtil.getLong(ddmStructureFieldNameParts[2]))
case 16: 
Model.getSingleton().getDb().getTableHistory().getHistoryIdsOfHistType(session.getSessionId(),HistoryReference.TYPE_PROXIED,HistoryReference.TYPE_ZAP_USER,HistoryReference.TYPE_SPIDER)
connectionWaitMs + delta
new DescribeInstances(awsConfig).execute(endpoint)
application.getApplicationContext()
message.getContact()
latch.await(55,TimeUnit.MILLISECONDS)
dlFileShortcut.getFolderId()
current.localDeletionTime > gcBefore
dest.writeLong(txPower)
primaries()
new IOException("Unhandled exception: " + e.getMessage())
NestedSetBuilder.stableOrder()
LOG.debug("Exception while creating remote block reader, datanode {}",source,e)
ColorResources.getColor("sliderGradientDark")
value == null
selenium.isVisible("link=Control Panel")
Exception exception
PsiTreeUtil.getParentOfType(element,XmlComment.class) != null
tableHasData(oldTableName)
mBondState.setBondState(address.toUpperCase(),state)
mInner.end()
type.getConstructor()
NativeLibraryHelper.Handle.create(scanFile)
Byte.valueOf(value.toString())
new Translog.DeleteByQuery(new byte[]{4},null,null)
loaded.getLoaded().getConstructor()
Integer.valueOf(topStr)
createShrinkFadeOutFromBottomAnimation(mContentContainer,150,new AnimatorListenerAdapter(){   @Override public void onAnimationEnd(  Animator animation){     mPopupWindow.dismiss();   } } )
wrapper.getServlet() != null
1
log.warn("Error extracting callable results",e)
pkgs.get(i)
bookmarksFolderFinder.findBF_BE_ByG_F(groupId,folderId,queryDefinition)
ColorResources.getColor("selectionBackground")
public static ArrayValue dateArray(LocalDate[] values){   return new DateArray(values); } 
Log.info(this + " JVM BUG(s) - recreating selector " + _jvmFix1+ " times, cancelled keys "+ _jvmFix0+ " times")
dist > maxDist
getEndpoint().getConfig().getIndexName()
selenium.isVisible("link=Control Panel")
Thread.sleep(5000)
fingerId == 0
LOG.debug("Error while deserializing payload",e)
exchange.getOut()
PRESSED_STATE_DURATION=125
mDeviceOwner != null
new ProtoFile("descriptor.proto",null,NO_STRINGS,NO_STRINGS,Arrays.<Type>asList(messageType),NO_SERVICES,map(),NO_EXTEND_DECLARATIONs)
getLoaderManager().initLoader(LOADER,null,mLoaderCallbacks)
new ByteBuddy().subclass(Object.class).method(named("toString")).intercept(MethodDelegation.to(ToStringInterceptor.class).defineParameterBinder(StringValueBinder.INSTANCE)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
ON_TOP
mService.setWifiApConfiguration(wifiConfig,mContext.getOpPackageName())
parent.decrementPrioritizableForTree(amt)
Boolean.valueOf(attrValue)
WeakReference<Object>
configureCluster(5)
origin < other
List<PsiMethod>
service.getDataStore().getContainers()
new Paint(Paint.ANTI_ALIAS_FLAG)
BitSetUtils.class
ExceptionInInitializerError|ClassNotFoundException
new ObjectMapper().reader(Map.class)
new Paint(Paint.ANTI_ALIAS_FLAG)
qux.getConstructor()
mUserManager.isUserRunning(userHandle)
loaded.getLoaded().getConstructor()
selenium.isVisible("link=Control Panel")
Exception e
String.format("Data file row position %d differs from index file row position %d",dataStart,dataSizeFromIndex)
mEntries[which]
params.copyWithExtraDeps(new Supplier<ImmutableSortedSet<BuildRule>>(){   @Override public ImmutableSortedSet<BuildRule> get(){     return ImmutableSortedSet.<BuildRule>naturalOrder().addAll(libDir.transform(com.facebook.buck.rules.args.Arg.getDepsFunction(pathResolver)).or(ImmutableList.<BuildRule>of())).build();   } } )
putInternal(mapService.getMapServiceContext().toData(entry.getKey(),partitionStrategy),mapService.getMapServiceContext().toData(entry.getValue()),-1,TimeUnit.MILLISECONDS)
assertLeftRightCategory(10,category2b)
mAttributes.getFlags()
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
statistics.addGetTimeNano(System.nanoTime() - start)
out.setAttributesToElements(value)
tFAgentStatMappter.map(agentStatBo)
newDefaultSubIdObj.equals(mDefaultSubId)
in.readStringNull(8)
Observable.interval(10,TimeUnit.MILLISECONDS)
args.length == 0
intsScratch.values[0]=docId
selenium.isVisible("link=Control Panel")
DBG=false
nameLength > maxHeadersLength - headersLength
mHomeStackResizable && adjustedForIme
info.getDeviceIdForPhone(slotId)
Exception e
N > 0
ThemeUtils.getDefaultDisplayNameForRootFolder()
type.getConstructor()
NameTable.getObjCType(var.getType())
java.lang.System.currentTimeMillis() + 2000
getDefaultSystemHandlerActvityPackageLPr(deviceProvisionIntent,userId)
new RendezvousAffinityFunction()
mEnabledPrintServices.size() > 0
assertEquals(9776l,(long)sourceStats.get("warcNovelContentBytes"))
DBG=true
LOG.error("Unable to delete {} because listInternal returns null",path)
new StringBundler(4)
revWalk.release()
getLogger().error("Row {} not found in {}, transferring to not found",new Object[]{rowId,tableName})
mNetworkInfo.getDetailedState() != networkInfo.getDetailedState()
OAuthConstants.HAWK_TOKEN_TYPE.equals(tokenType)
createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE)
uid == Process.SHELL_UID
moveToState(fragment,fragment.mStateAfterAnimating,0,0,true)
Utils.isZkAuthenticationConfiguredStormServer(topoConf)
mRS.nScriptIntrinsicBLAS_Double(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha,A.getID(mRS),B.getID(mRS),beta,C.getID(mRS),0,0,0,0)
Boolean.valueOf(resizeableStr)
new TextPaint(Paint.ANTI_ALIAS_FLAG)
PersistentTask<Params>
selenium.isVisible("link=Control Panel")
ThreadLocal<Integer>
DEFAULT_TETHER_OFFLOAD_DISABLED=1
holder == null
Assertions.expectThrows(EmptyStackException.class,() -> stack.pop())
mWorkerId + BASE_FILE_NUMBER
entry.notification.clone()
zk.exists(znode,false) != null
parser.getBoolean(KEY_ADJUST_BRIGHTNESS_DISABLED,false)
ft.replace(R.id.layout_fragment_container,readerFragment,tagForFragment).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE).addToBackStack(tagForFragment).commit()
notifier.getConfiguration().setPort(25667)
assertThat(targetConnectionCount).isGreaterThanOrEqualTo(goodServerStats.getTotalRequestsCount())
new Error("Unknown " + name + "/"+ test)
Double.valueOf(parser.group(index++)) / 60
uid > 0
log.error(currentThread() + String.format("Trying to recover from dead Channel: %s ",channel))
bindingMatch.toString()
InputType.recurrent(convNIn)
final StringBuffer sb=new StringBuffer("PluginInfo{"); 
JBUI.insets(2)
intent.putExtra(EXTRA_THEME,1)
manager.beginTransaction().remove(fragment).commit()
"unable to parse " + abstractOption
JetTestUtils.navigationMetadata("compiler/testData/diagnostics/tests/delegatedProperty/inference/manyIncompleteCandidates.kt")
Files.move(tmpCacheEntry,cacheEntry.toPath())
FastMath.max(origin,num.doubleValue())
myPieces.ceilingEntry(startOffset)
popupWindow.setWidth(menuWidth)
new TypeConversionDescriptorFactory("$it$.toMap($f$)","$it$.collect(java.util.stream.Collectors.toMap(java.util.function.Function.identity(), $f$))",false)
DefaultCacheKeysFactory.getCollectionId(cacheKey)
suffix.add(tmp.substring(0,tmp.length() - 1))
e2.addSuppressed(e)
return false; 
myCache1.getCacheConfiguration().getMaxElementsInMemory()
TextUtils.isEmpty(credential)
d.setMajorVersion(1)
GitLineHandler h=new GitLineHandler(project,root,GitCommand.INIT); 
fingerId == 0
HashMap<ShardId,ShardRestoreStatus>
expiresOn == null
info.crashInfo.stackTrace.length() > 10000
Long.valueOf(numRowsProp)
logger.debug("rapidRefreshFuture scheduleing for {} millis",millis)
new ConcurrentHashMap<String,InjectionMetadata>(64)
new ByteBuddy().subclass(MemoryDatabase.class).method(named("load")).intercept(MethodDelegation.to(ChangingLoggerInterceptor.class)).make().load(getClass().getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getConstructor()
_log.error(ioe.getMessage())
mMncStr == null
Exception e
jGitConnection.executeRemoteCommand("ssh://host.xz/repo.git",transportCommand)
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
CodeSignIdentityStore.class
previousDataInputs == null
new BufferedOutputStream(new FileOutputStream(outFile))
DISMISS_MIN_DRAG_WIDTH_RATIO=.4f
assertEquals(ex.getCause().getMessage(),"ClassInfo's name should be non-null")
type.getConstructor()
client.replicationControllers().inNamespace(session.getNamespace()).withName(serviceName)
(r.info.flags & ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS) != 0
Schedulers.newThread()
new DQLExecutionEvent(sqlExecuteUnit.getRouteUnit(),parameters)
selenium.isVisible("link=Control Panel")
serviceDataUuid == null
is(3)
currentBlog.getRemoteBlogId()
gradleProject.getIdentifier()
scores.getAlgorithmName()
Constant.messages.getString("start.gui.cmdline.newsession.already.exist")
new StringBuilder(561)
renderingAsyncTask.execute()
logger.info("--> checking that _current returns the currently running snapshot",blockedNode)
PlainJUnit4TestCaseWithSingleTestWhichFails.class.getName()
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
new XlsExporter()
Socket.sendbb(socketRef,0,outputBuffer.position()) < 0
Object[]
classType.hasTypeTree()
DataType.list(datatype)
new MD5Renderer(model,true)
ContainerUtil.newHashSet("AddToFavoritesPopup","RemoveFromFavorites","DatabaseView.ImportDataSources","CompileDirty","Compile","AddNewFavoritesList","EditFavorites","RemoveFromFavorites","RenameFavoritesList","RemoveFavoritesList")
Math.max(titleRight,subtitleRight)
CachingConnectionFactory connectionFactory
Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline.json",true))
(mIncallPowerBehavior & Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP) != 0 && telephonyService.isOffhook() && isScreenOn
mHorizontals == null
8 * 60000
convertView == null
logger.warning("Unable to load image using DDS loader!")
(device=1 << i) <= AudioSystem.DEVICE_OUT_DEFAULT
typeSettingsProperties.toSortedString()
result == null ? 0l : result
topPanel.addView(mCustomTitleView,lp)
updateCrumbs()
lp.onResolveLayoutDirection(layoutDirection)
event.getTime() > currentPlayTime
new SwiftRange(mPos,endPos)
metadata.getFaces()
Looper.getMainLooper()
new IndexWriter(startDir,new WhitespaceAnalyzer(),true)
selenium.isVisible("link=Control Panel")
mRedrawClip.isEmpty()
selenium.isVisible("link=Control Panel")
decoder.readOutbound()
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
volume.getType() == VolumeInfo.TYPE_PUBLIC
item == 271
this.currentKeys
tableRow.getString("type").toLowerCase()
CompletableFuture<Boolean>
mActiveAgents.remove(info)
mMatchMode=numOfMatchesPerFilter
elements.size() > i
inbound.isEmpty() && inbound.hasByteBuffer()
RandomStringUtils.randomAscii(20)
assertEquals(actual.length,expected.length)
InvokerHelper.getMetaClass(obj.getClass()) == mc
uuid.getMostSignificantBits() & 0x0000FFFF00000000L
new InverseSchedule(ScheduleType.ITERATION,1,decay,1)
LOG.info(() -> createDiscoveredTestEnginesMessage(testEngines))
Objects.deepEquals(mServiceDataUuid,other.mServiceDataUuid)
callTimeoutMs=5000
returnTypeElement == null
LOGGER.debug("Error while downloading file",ioex)
space.getText().replace(' ','\n')
cam.near=0.1f
builder.length() == 0
tokenEnd >= buffer.length()
WORKER_BLOCK_HEARTBEAT_TIMEOUT_MS(Name.WORKER_BLOCK_HEARTBEAT_TIMEOUT_MS,10000)
nameLength > maxHeadersLength - headersLength
val._resDev <= 379
LOG.isDebugEnabled()
taskRabbitTask.getLocalTaskData() != null
new LightweightThread(null,test)
m.getMethod()
c.getMethod("load")
Glide.with(activity).load(url).downloadOnly(size.getWidth(),size.getHeight())
HashMap<String,ArrayList<String>>
driverFile.getLocalFile()
resources.getDimension(R.dimen.close_handle_height)
"-" + CONFDIR + " and -"+ CONFNAME+ " are required for "+ LINKCONFIG
new ScaledResolution(mc,mc.displayWidth,mc.displayHeight)
CharSequence message
indexLock.readLock()
compressedSliceInput.length()
!mIsRecentsShown || !mIsPipFocusedInRecent
dynamicServletRequest.getParameterValues(name)
new Paint(Paint.ANTI_ALIAS_FLAG)
new GotoFileAction().gotoActionPerformed(e)
MimetypeIconUtil.getFileTypeIconId(null,mFile.getName())
list(TYPES,newline(),CsmElement.none(),CsmElement.newline())
getCategoriesAndThreads(category.getGroupId(),categoryId)
subCursor.getInt(COLUMN_ATTENDEE_IDENTITY)
SOURCE_INTERETRADIO(26)
MockReset.before()
capacity > 1 << 30
reverseSpeedEncoder.getBits()
this.myHashMap.containsKey(o)
mAudioHandler.hasMessages(MSG_SET_A2DP_SINK_CONNECTION_STATE)
dimensionsSpec.getDimensions()
moveToState(fragment,fragment.mStateAfterAnimating,0,0,true)
set(object,value.intValue())
payload.intPayload[3]
SystemProperties.getInstance().getJavaIoTmpDir()
mForegroundResId=array.getResourceId(1,0)
!match && compareCompat
revWalk.release()
(byte)9
RemoteException e
getProject()
startOffset > pages.size()
HIVE_TABLE_OFFLINE(2,EXTERNAL)
target.isAuthorized("essentials.world." + toPlayer.getWorld().getName())
new LeftTuple(new DefaultFactHandle(1,"cheese"))
assertTrue(blockDirectory.isBlockCacheWriteEnabled())
mService.mAppOps.checkOpNoThrow(w.mAppOp,w.getOwningUid(),w.getOwningPackage())
items.get(index)
className.startsWith(Classes.COROUTINE_NAME)
Utilities.LOG14535.info("creating new paths " + System.identityHashCode(fsp2) + " for "+ dirName+ ", childSpec "+ unionPath+ ": tmpPath "+ fsp2.getTmpPath()+ ", task path "+ fsp2.getTaskOutputTempPath(),new Exception())
Double returned=factory.newInstance(vars).execute(); 
value != null
offsets[i + 1] - offsets[i] == 1
new GeoLocation(array.getDouble(0),array.getDouble(1))
sourceContact != null
formNavigatorEntryKeysProperties.getProperty(context)
bucket.exists()
mState == STATE_STARTED | mState == STATE_STARTING
Collection<? extends IJsonNode>
jabberStatusToPresenceStatus(o2,parentProvider)
mappers.mapper().searchAnalyzer()
selenium.isVisible("link=Control Panel")
!isDirectPickup(block,blockDamageModifierComponent) && !inventoryManager.giveItem(event.getInstigator(),item)
new IndexWriter(dir,false,new WhitespaceAnalyzer(),false)
selenium.isVisible("link=Control Panel")
return true; 
lookup(parseName(name))
Slog.wtf(LOG_TAG,"Trying to set ro.device_owner, but it has already been set?")
SimpleAttributeDefinitionBuilder.create("file",ModelType.OBJECT,true)
o == null
StringBuffer output=new StringBuffer(inName.length()); 
status().isPermanentRedirect()
VDBG=true
(opCode & 0x08) > 0
assertEquals(12,singlePackageBeanCount)
Assert.assertEquals(2,clusterEventListeners.size())
Assert.assertEquals(3,results.size())
selenium.isVisible("link=Control Panel")
JsPeerInfo.create(JsPeer.create(src.getPeer()),src.getDialogTitle(),fileUrl,Placeholders.getPlaceholder(src.getPeer().getPeerId()))
assertMockEndpointsSatisifed()
ACRA.log.w(LOG_TAG,context.getPackageName() + " reports will be sent by Http.")
setStatus(SC_MOVED_TEMPORARILY)
LOG.trace("Terminating channel to the remote gRPC server")
docker.waitContainerCmd(container.getId())
Attachment attachment=getAttachment(attachmentId); 
new XValueChildrenList()
h2o.onExceptionalCompletion(ex,h2o.getCompleter())
annotationReader.ofParameter(index)
subMesh.firstByte.intValue() / 3
ab.get1()
fluidIDs.containsKey(fluid.getName())
realm.assertThread()
new Paint(Paint.ANTI_ALIAS_FLAG)
res >= mLen
"Cannot guess file extension for invalid MIME type: '" + name + "'"
logger.error("Cannot retrieve item {} for widget {}",itemName,w.eClass().getInstanceTypeName())
sourceSet.getRuntimeClasspathConfigurationName()
new Paint(Paint.ANTI_ALIAS_FLAG)
ignite.cache(CACHE_NAME)
stack.mStackId != DOCKED_STACK_ID
assertOpenEventually(countDownLatch,50)
countNewlines(headerFragment) + 1
process.getInputStream()
new ResolveTakenPictureAsyncTask(data,promise,options,cacheDirectory)
mGpsListener != null
error == FingerprintManager.FINGERPRINT_ERROR_USER_CANCELED
1
synchronized (mAccounts) {   writeStatisticsLocked(); } 
number.length()
getClient().prepareSearch(resolveIndexName()).setTypes(IndexAuditTrail.DOC_TYPE).addFields(fieldList())
time.put(delta)
Timber.d(e,"Error getting path delimiter using LIST command",e)
Log_OC.e(TAG,"Initializing Fragments in onAccountChanged..")
code.addLoad(0,field.getType())
computeSemiJoin(inputStatistics,inputStatistics,x,unknown)
this.photoLabel
String.format("BUG: %s changed score during rematch: %d -> %d",score,newNetwork.getCurrentScore())
data.hasTestPassed()
extraMargin + "pt"
mbRootMessage.getMessageId()
sampleFactory.getConstructor()
other instanceof OpenBitSet
Stream.of("CYPHER 2.3","CYPHER 3.1","CYPHER 3.2","CYPHER 3.3","CYPHER 3.4")
return RES_WAIT; 
new ReactorManager(Collections.EMPTY_LIST)
this.cusolverDnSsyevd_bufferSize.invoke(solverDn,jobz,uplo,M,(FloatPointer)xAPointer.getDevicePointer(),M,(FloatPointer)xRPointer.getDevicePointer(),(IntPointer)worksizeBuffer.addressPointer())
zkWorker.getWorker()
!isPartialUpdate
PyQualifiedName.fromComponents(name)
a[left]
ams.mContext.createPackageContext(appInfo.packageName,0)
state.registerDeleted(descriptor.getTarget(),file)
DEBUG_ALL || false
backups.length > 5
!allowBlacklisting
new GLMModel(args.dest,model._parms,new GLMOutput(model._output._names,model._output._domains,names,beta,.5f,model._output._binomial),model.dinfo(),Double.NaN,Double.NaN,-1,null)
INDEX_VERSION=15
accountHandle.getComponentName().toString()
assertEquals(1,langTool.check("Certo, isto está bem. Este exemplo está correto. Certo que este também.").size())
length - 2
Log.d(TAG,"We have a callback to send this result to")
POSITVE_X(0)
serverSocket.setReuseAddress(false)
doTest(true)
value == null
-1
new CommandExecutor(context,message,this)
assertEquals(10,beanCount)
LOGGER.debug("Register profile {}",qualityProfile.getQProfileName())
selenium.isVisible("link=Control Panel")
@ManyToOne(optional=false) private Top top; 
CLOSE_PANEL_WHEN_EMPTIED && !hasActiveNotifications() && !mNotificationPanel.isTracking()
checkPojoMetaClass()
selenium.isVisible("link=Control Panel")
public Component getFocusableComponent(){   if (myComponent instanceof JComboBox) {     return ((JComboBox)myComponent).getEditor().getEditorComponent();   }  else {     return myComponent;   } } 
return _keyStoreResource; 
new RuntimeException("Unable to format " + fileName,e)
operationJSONObjectBuilder.field(TYPE).stringValue(HYDRA_OPERATION)
pa.getStore().getJournal().getFileMap().size() == 1
logger.info(String.format("connection attempt will timeout after %d",timeout))
!trimmedText.equalsIgnoreCase(myModel.getElementName(e))
DeprecationLogger.nagUser("<someIdeTask>.withXml is deprecated! Moved to the relevant model object of eclipse/idea.\n" + "As a starting point, refer to the dsl guide for IdeaProject or EclipseProject")
cfg.getMarshaller() != null || !(cfg.getMarshaller() instanceof BinaryMarshaller)
assertEquals(2,StringUtil.countMatches(drl,"import "))
from >= to
mAuthorities.get(i)
segmentInfos.createBackupSegmentInfos(true)
Comparing.equal(myContextModule,namedLibraryElement.myContextModule)
IBackupManagerService svc=mService; 
HighlightInfo.newHighlightInfo(HighlightInfoType.WRONG_REF).range(ref).description(message)
selenium.isVisible("link=Control Panel")
Vector<>
r.destination != null
len != 2
Math.cos(Math.toRadians(degrees))
builder.timeValueField(HttpRequest.Field.CONNECTION_TIMEOUT.getPreferredName(),HttpRequest.Field.CONNECTION_TIMEOUT_HUMAN.getPreferredName(),connectionTimeout)
mService.setUidPolicy(UID_A,POLICY_NONE)
System.out.print("JVM options:")
buildName(node)
entry.getName().startsWith(BOOT_INF_CLASSES)
pubnub.unsubscribe(channel)
getTestName(true)
JavaPlugin.class
mHandler.removeCallbacks(pae)
pipeManager.writeDocument(getContext(),mtpManager,new Identifier(0,0,1))
killBillClient.createExternalCharge(externalCharge,clock.getUTCToday(),false,true,null,null,createdBy,reason,comment)
host1.getAddress()
pluginContainer.lookup(ComponentConfigurator.ROLE,configuratorId)
new IllegalStateException()
res.getContentType().toLowerCase().indexOf("text/html") != -1
Throwable e
nextPos != mBoundPos
XML_READER != null
gatecoinOrder.getType()
mPowerManager.isScreenOn()
count > 2
nativeSetFlags(mNativeObject,sc.mNativeObject,0,OPAQUE)
dynamicType.getLoaded().getConstructor()
timedOut=true
net.getDefaultConfiguration()
FluidRenderer.renderFluid(FluidSpriteType.STILL,forRender,amount / flow.capacity,1,min,max,vb,sides)
new CustomDataColletor(customParameters)
runnable.getResult() != null
FileUtil.loadFile(new File("injector-generator/copyright.txt"),true)
rw.release()
capacity > 1 << 30
Environment.getRootDirectory()
zkDb.snapLog.getSnapDir()
assertEquals(2,map.size())
DEBUG=true
JetBrainsAccountDialogKt.showJetBrainsAccountDialog(getRootPane(),null)
endOffset - 2
database instanceof DB2Database || database instanceof DerbyDatabase || database instanceof HsqlDatabase
variable.getVariables()
log.error("Error while closing command context",exception)
logger.error("Could not find original user Authentication object!")
mContext.startActivity(intent)
insets.left == 0
Arrays.sort(slaveNames,0,slaveNames.length - 1,new Comparator<String>(){   public int compare(  String o1,  String o2){     return o1.compareToIgnoreCase(o2);   } } )
myComp.getSize()
theClass.getConstructor(new Class[0])
merge4dCnnData(featuresToMerge)
logger.error("{}",builder.toString())
workspace.runBuckBuild("build","//:provided_only")
BrowserApp.getAppContext()
Exception ignored
weekRange.roll(Calendar.DATE,6)
new MaterialDialog.Builder(getActivity()).title(R.string.reschedule_card_dialog_title).positiveText(getResources().getString(R.string.dialog_ok)).negativeText(R.string.cancel).inputType(InputType.TYPE_CLASS_NUMBER).inputRange(1,9999)
mQuietEnable
jsonObj.put(_clientHost,_clientHost)
Assert.assertTrue(_clusterInvokeAcceptor.accept(context))
a.getFloat(attr,0)
mMessageList.getId()
new Builder().setDuration(3000).setTextColor(android.R.color.holo_green_light)
CodeStyleSettings.class.getDeclaredField(value)
dest.writeLong(mSubId)
Context.packingClass(initialConfig)
BuildArtifactsBeforeRunTaskProvider.setBuildArtifactBeforeRunOption(myMainPanel,selectedArtifact,true)
tracesFile.mkdirs()
ScanResult.is24GHz(frequency)
Boolean.valueOf(optionsHelper.getOptionValue(OPTION_INCLUDE_CUBE))
SingleServerInventoryProvider.class
TIMEOUT=50
expand("serializedforms/JobDataMapSerializationTest.testEmptyMap.{?}.ser","JDK16","JDK17")
_addTestVariant("small.hd","uuid1",99,200)
OpenmrsProfileWithoutTest1Module.class
mActionBarTop.getVisibility() == VISIBLE
/**   * Represents the default formatter for log message. Default log message format is: [SEVERITY LEVEL] filePath:lineNo:columnNo: message. [CheckName]  * @author Andrei Selkin  */ public class AuditEventDefaultFormatter implements AuditEvemtFormatter {   /**   * Length of all separators.   */   private static final int LENGTH_OF_ALL_SEPARATORS=10;   /**   * Suffix of module names like XXXXCheck.   */   private static final String SUFFIX="Check";   @Override public String format(  AuditEvent event){     final String fileName=event.getFileName();     final String message=event.getMessage();     final SeverityLevel severityLevel=event.getSeverityLevel();     final String severityLevelName;     if (severityLevel == SeverityLevel.WARNING) {       severityLevelName="WARN";     }  else {       severityLevelName=severityLevel.getName().toUpperCase(Locale.US);     }     final int bufLen=calculateBufferLength(event,severityLevelName.length());     final StringBuilder sb=new StringBuilder(bufLen);     sb.append('[').append(severityLevelName).append("] ").append(fileName).append(':').append(event.getLine());     if (event.getColumn() > 0) {       sb.append(':').append(event.getColumn());     }     sb.append(": ").append(message);     final String checkShortName=getCheckShortName(event);     sb.append(" [").append(checkShortName).append(']');     return sb.toString();   }   /**   * Returns the length of the buffer for StringBuilder. bufferLength = fileNameLength + messageLength + lengthOfAllSeparators + + severityNameLength + checkNameLength.  * @param event audit event.  * @param severityLevelNameLength length of severity level name.  * @return the length of the buffer for StringBuilder.  */   private static int calculateBufferLength(  AuditEvent event,  int severityLevelNameLength){     return LENGTH_OF_ALL_SEPARATORS + event.getFileName().length() + event.getMessage().length()+ severityLevelNameLength+ getCheckShortName(event).length();   }   /**   * Returns check name without 'Check' suffix.  * @param event audit ivent.  * @return check name without 'Check' suffix.  */   private static String getCheckShortName(  AuditEvent event){     final String checkFullName=event.getSourceName();     final String checkShortName;     final int lastDotIndex=checkFullName.lastIndexOf('.');     if (lastDotIndex == -1) {       if (checkFullName.endsWith(SUFFIX)) {         checkShortName=checkFullName.substring(0,checkFullName.lastIndexOf(SUFFIX));       }  else {         checkShortName=checkFullName.substring(0,checkFullName.length());       }     }  else {       if (checkFullName.endsWith(SUFFIX)) {         checkShortName=checkFullName.substring(lastDotIndex + 1,checkFullName.lastIndexOf(SUFFIX));       }  else {         checkShortName=checkFullName.substring(lastDotIndex + 1,checkFullName.length());       }     }     return checkShortName;   } } 
new IllegalArgumentException("Advertising can't be both connectable and anonymous")
mAppOps.noteOp(AppOpsManager.OP_GET_USAGE_STATS,callingUid,callingPackage)
U extends Identifier
Exception e
assertTrue(killRes)
FinalUtils.canFieldBeFinal(field)
new SemanticException(generateErrorMessage(tabref,"Schema of both sides of union should match: field " + field + ":"+ " appears on the left side of the UNION at column position: "+ getPositionFromInternalName(lInfo.getInternalName())+ ", and on the right side of the UNION at column position: "+ getPositionFromInternalName(rInfo.getInternalName())+ ". Column positions should match for a UNION"))
Locale.getDefault().getISO3Language()
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
isCreated()
delegate.getChild(element)
new DhcpAckPacket(transactionId,(short)0,broadcast,serverIpAddr,relayIp,INADDR_ANY,yourIp,mac)
Integer.valueOf(taskIdStr)
new GitCompareBranchesDialog(myProject,info.getTo(),info.getFrom(),info.getInfo(),myGitRepository)
options.get("wireFormat")
StatBuckets.prettyUptime(secs)
handleSecurityPermissionActions(principalNode,permConfig)
PendingIntent.getBroadcast(context,0,new Intent(Intent.ACTION_TIME_TICK).addFlags(Intent.FLAG_RECEIVER_REGISTERED_ONLY),0)
config.isAutoRead()
Settings.Secure.getInt(mContext.getContentResolver(),Settings.Secure.SYSTEM_NAVIGATION_KEYS_ENABLED,1)
Element.F64(mRS)
typeLength == 0
Status.constructStatuses(get(getBaseURL() + "statuses/retweeted_by_me.json",null,paging.asPostParameterList(),true))
logger.info("Return Object {} now at size {}",b,count.getAndDecrement())
new RelativeCoordinatesProvider(hRef,vRef,hDelta,vDelta)
/**   * [Sa * Da, Sc * Dc]   */ MULTIPLY(24)
getCompactionStrategyFor(deleted)
NumberUtils.decodeLowUnsignedNibble(encodedInstruction[5])
info.getMsisdnForSubscriber(subId)
exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class,graph)
activityManager.getMemoryClass()
random.nextInt(64)
result.getReceipt().getEnergyTotal()
AnnotatedElementUtils.getAnnotationAttributes(type,annotationType)
status != 0
ScanResult.is24GHz(frequency)
LOGGER.debug("Error during XML parsing",e2)
HttpComplianceSection#RFC7230_3_1_1_METHOD_CASE_SENSITIVE
stripFilter.skipWhiteSpace(charBuffer,stringWriter)
_barrier.waitFor(nextSequence,10,TimeUnit.MILLISECONDS)
mMncStr == null
StepVerifier.create(Flux.just(1).thenEmpty(Flux.empty())).expectComplete()
TypeEvalContext.fast(file)
USE_COMPASS_IN_NAVIGATION.setModeDefaultValue(ApplicationMode.CAR,false)
@Override public final DivideBy orNotExists(Select<?> select){   return or(notExists(select)); } 
new Location(target.getWorld(),x,y,z)
log.warn(e,"Graceful shutdown of task[%s] aborted with exception.")
new WebApplicationException(serverError(e))
NumberFormatException nfe
layerInput.slices()
adapter == ResultSetViewer.class
120 * 1000L
offset + blockSize <= bytes.length
hour != 0
type.getConstructor()
new Paint(Paint.ANTI_ALIAS_FLAG)
dataSourceContainer.getDriver().getName()
connectGatt(context,autoConnect,callback,TRANSPORT_AUTO,PHY_LE_1M_MASK)
formsFound=true
policyFlags & SCAN_REQUIRE_KNOWN
error("Failed to change current working directory ownership. Error code: " + Integer.toString(result))
JetTestUtils.navigationMetadata("idea/idea-completion/testData/basic/common/staticMembers/JavaStaticMethodsNoDuplicatesFromBases.kt")
nsDescriptor.getAttribute(localName,namespace)
lastPos != mBoundPos
comp.trayIconUtil()
con.getClass().getName()
assertEquals(expected.ig,actual.ig)
synchronized (this) {   pw.print(prefix);   pw.print("SERVICE ");   pw.print(r.shortName);   pw.print(" ");   pw.print(Integer.toHexString(System.identityHashCode(r)));   pw.print(" pid=");   if (r.app != null)   pw.println(r.app.pid);  else   pw.println("(not running)");   if (dumpAll) {     r.dump(pw,innerPrefix);   } } 
Object result=getJdbcTemplate().queryForObject("SELECT VALUE FROM BATCH_STAGING WHERE ID=?",new Object[]{id},new RowMapper(){   public Object mapRow(  ResultSet rs,  int rowNum) throws SQLException {     byte[] blob=lobHandler.getBlobAsBytes(rs,1);     return SerializationUtils.deserialize(blob);   } } ); 
ONE_MINUS_DST_ALPA(7)
writeRepeatedSFixed64(id,val)
new Insets(6,0,0,6)
compositeBuffer()
status == INTENT_FILTER_DOMAIN_VERIFICATION_STATUS_ALWAYS
centroid.size()
new IntentPickerSheetView.ActivityInfo(customDrawable,"Custom mix-in",MainActivity.class)
ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining("AutoFactory does not support generic types").in(file).onLine(6)
mHandler.removeCallbacks(pae)
frequencyKhz < 30000
new ConcurrentHashMap<Class<?>,Constructor<?>[]>(64)
Exception ioe
Log_OC.wtf(TAG,"Trying to open a NULL OCFile")
JvmDeclarationOriginKt.OtherOrigin(myClass)
atLeast(50)
atUserBeans.size() == 0
readers[i].delete(n - starts[i])
output.writeStartElement(part.getConcreteName().getNamespaceURI(),part.getConcreteName().getLocalPart())
new Settings(getContext(),getContext().getFilesDir(),new Object())
Nd4j.getExecutioner().execAndReturn(Nd4j.getOpFactory().createTransform("softmax",preOut),0)
a.getDimensionPixelOffset(attr,0)
ultimateRecyclerView.enableSwipeRefresh(false)
OpenmrsProfileWithoutTest1Module bean=applicationContext.getBean(OpenmrsProfileWithoutTest1Module.class); 
loaded.getLoaded().getConstructor()
myEditor.visualLineToY(startLineNumber)
enabled=false
_log.error(StringBundler.concat("Column ",columnName," in Table ",tableName," already is ",newTypeDefinition))
_valueDesc()
mPowerManager.isScreenOn()
state.mTint != null
@Nullable
selenium.isVisible("link=Control Panel")
Locale.getDefault().toString()
assertNumUniqueNodeNameBuckets(2)
new Label(GroovyBundle.message("dynamic.toolwindow.search.elements"))
ZKMetadataProvider.getOfflineTableConfig(_pinotHelixResourceManager.getPropertyStore(),realtimeTableName)
WebPageElementNestedCollectionResource.class
mAuthorities.get(i)
getMockServerClient(mockServerPort).stop()
Long.valueOf(this.getOptional("kylin.server.sequence-sql.expire-time","86400000"))
init(app)
info.toString()
mCurrentFirstVisiblePosition > 0
target.getDestination()
VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)
Thread.sleep(50)
buildPages.getTypes()
mContext.sendBroadcastAsUser(intent,UserHandle.ALL)
super(message); 
Timber.e(e,msg)
return mRxTimeMillis; 
activity == null
currentEditor.getScrollingModel()
getTimeout()
ctx.cache().dynamicStartCaches(cacheCfgs,true,true,true)
type.getConstructor()
stopTimeNs - responseStartTimeNs
o1 instanceof String
TupleDomain.none()
model._output._iters >= _parms._max_iters
MetadataInstrument2.class.getName()
RedissonMultimap.this.size()
super(80,new File(".")); 
Exception e
new IllegalArgumentException(ERROR_ADD_REMOTE_NAME_MISSING)
fileShortcut.getToTitle()
input.getSourceFileNameFieldName()
AsyncTask<Void,Object,String>
formController != null
uri.getQuery()
logger.getLogger().warn("Shut down master")
mAms.mWaitForNetworkTimeoutMs=100
program.getProgramId()
FifoPolicy.class
field.getType().getName()
delegate.writeEmptyElement(prefix,namespaceURI,localName)
result.getErrors()
ElementUtil.isWeakOuterType(element)
table.get(j,i)
inOrder.verify(mockAwareService).publish(eq(clientId),eq(publishConfig),sessionProxyCallback.capture())
JsonUt8Writer.string(buffer,strings[i])
prefixq(dst)
j < size
cache.remove(key,null)
channel.write(response)
unfinishedVerificationHere()
LOGGER.warn("Groovy script [{}] returned no value for username attribute. Fallback to default [{}]",principal.getId())
new ParseField("rules")
Thread.sleep(5000)
Settings.Secure.getInt(mResolver,NETSTATS_ENABLED,1)
holder == null
context.getPackageName()
final IInputMethodClient client=(IInputMethodClient)msg.obj; 
inputProcessor.touchDown(event.x,event.y,event.pointer,Buttons.LEFT)
mVibratorService.vibrate(2000,new Binder())
getDelegate().handle(exchange).switchOnError(ex -> {   if (logger.isDebugEnabled()) {     logger.debug("Could not complete request",ex);   }   response.setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR);   return Mono.empty(); } )
AvatarManager.getInstance().getOccupantAvatar(user + "/" + resource)
final ImageButton buttonNavigate=(ImageButton)view.findViewById(R.id.context_menu_route_button); 
String imageUrl
JCVideoPlayerManager.listener()
STATUS.isStatusDefault(mStatus)
config.getMaxElementsInMemory()
/**   * Proxy class to catch calls to set blocks.  * @author sk89q  */ public class MinecraftSetBlockProxy extends el {   /**   * Edit session.  */   private EditSession editSession;   /**   * Constructor that should NOT be called.  * @param editSession  */   public MinecraftSetBlockProxy(  EditSession editSession){     super(null,"",(long)0,null);     throw new IllegalStateException("MinecraftSetBlockProxy constructor called (BAD)");   }   /**   * Called to set a block.  * @param x  * @param y  * @param z  * @param blockType  * @return  */   @Override public boolean a(  int x,  int y,  int z,  int blockType){     try {       return editSession.setBlock(new Vector(x,y,z),new BaseBlock(blockType));     }  catch (    MaxChangedBlocksException ex) {       return false;     }   }   /**   * Called to get a block.  * @param x  * @param y  * @param z  * @return  */   @Override public int a(  int x,  int y,  int z){     return editSession.getBlock(new Vector(x,y,z)).getID();   }   /**   * @return  */   public EditSession getEditSession(){     return editSession;   }   /**   * @param editSession  */   public void setEditSession(  EditSession editSession){     this.editSession=editSession;   } } 
checkPojoMetaClass()
mono.switchOnError(ex -> Mono.error(getReadError(bodyParameter,ex)))
new IndexWriter(dir,new WhitespaceAnalyzer(),true)
ExternalSystemApiUtil.isOneToOneMapping(project,projectDataNode.getData())
AstyanaxOrderedKeyColumnValueStore store=new AstyanaxOrderedKeyColumnValueStore(name,keyspaceContext.getClient(),this,retryPolicy); 
Locale.getDefault().toString()
{26,31}
globalDisplay_.openWindow(result_.getOutputFile())
activityNdx < topActivityNdx
Response.ok()
!SystemPropertyUtil.getBoolean("io.netty.noJdkZlibDecoder",true)
mRemote.transact(REVOKE_URI_PERMISSION_TRANSACTION,data,reply,0)
new DateTime()
independentReserveOrderBook.getBuyOrders()
threshold > 0
oconf.getJSONObject("rev").getInt("fuzz")
LOG.error("Unable to parse HTTP response content",e)
assertEquals(provider.fetchCount,is(3))
volume.getMtpReserveSpace() * 1024 * 1024
ArrayList<String[]>
mPulseCallback.onPulseFinished()
mNextWakeFromIdle != null
parcel.writeCharSequence(mViewIdResourceName)
hours >= 2
Integer.valueOf(matcher.group(1))
hz1.getLifecycleService().terminate()
DumpUtils.checkDumpPermission(getContext(),TAG,pw)
LOG.isDebugEnabled()
constr.ipadx=6
xtw.writeCharacters(customProperty.getSimpleValue())
hasCdmaDataConnectionChanged
name + ".DEBUG"
LanguageLevel.JDK_1_5.compareTo(field.getManager().getEffectiveLanguageLevel()) >= 0
AllCodehausJavaTestsSuite.suite()
f1.getPanelDisplayName().compareTo(f2.getPanelDisplayName())
edge.setType(EdgeDirection.UNDIRECTED)
assertEquals(2,intentions.size())
TestSuiteEnvironment.getServerAddress()
Status.constructStatuses(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
Exception ex
mFocusStack.remove(fse)
greaterThan(0l)
schemaName == null
new CvsRollbackProvider(myProject,selectedRevisions,containsExcluded)
new ScriptC_errorCalculator(mRS,resources,R.raw.errorcalculator)
_appendables == null
Iterable<ObjectType>
m.getCurrentJobWaitTime()
@Autowired GraphTraversalService graphTraversalService; 
queryBuilder.appendQuoted(columnAliases[i].getAliasName())
(getSource().z() + getTarget().z()) / 2f
getBurnTime(ALCHEMICAL_COAL_BLOCK_STACK)
getRawFieldBlock(i).getSizeInBytes()
logger.error("Action Invalid Value Format Exception {}",ex.getMessage())
ImmutableSet<ImplemetationMethodDescriptor>
DefaultCacheKeysFactory.getCollectionId(cacheKey)
zController.sendData(doRequestStop())
assertEquals(11,definitions.size())
mAlarmManager.set(AlarmManager.RTC,timestampMs,mAnomalyAlarmIntent)
compensationRange.inRange(compensation)
ITERATIONS=100
buildChannelsUriForInput(inputId,true)
result.ocFile.getMimetype()
xtw.writeCharacters(customProperty.getSimpleValue())
args.putLong(ProgressScene.KEY_PAGE,result2.page)
new Paint(Paint.ANTI_ALIAS_FLAG)
new URI(parentUri.getScheme(),parentUri.getAuthority(),parentUri.getPath() + SEPARATOR,null)
equalTo("Could not load compiled classes for script-display-name from cache.")
(mFlags & ViewNode.FLAGS_ASSIST_BLOCKED) == 0
params.setJpegQuality(0xFF & ParamsUtils.getOrDefault(request,JPEG_THUMBNAIL_QUALITY,DEFAULT_JPEG_QUALITY))
PFLAG3_FITTING_SYSTEM_WINDOWS
isOffhook
mDrawable.getIntrinsicHeight()
mH.obtainMessage(MSG_TIMEOUT_INPUT_EVENT,p)
items[23]
type.getConstructor()
log.warn("getOptimizationConfig(): Session ID is unknown: {}",currentSessionID)
mp.getValue()
manager.beginTransaction().remove(fragment).commit()
Column::toString
result.startsWith(connectionFactory.getProtocol() + ":/")
resources.getDimension(R.dimen.close_handle_height)
LOG.error("Root project path of the Gradle project not found for " + rootModel.getModule())
TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,10,a.getResources().getDisplayMetrics())
mAdminPreferences.getBoolean(AdminPreferencesActivity.KEY_CHANGE_LANGUAGE,false)
osName.contains("solaris")
new IndexWriter(dir,autoCommit,new WhitespaceAnalyzer(),true)
sendMsg(mAudioHandler,MSG_SET_ALL_VOLUMES,SENDMSG_NOOP,0,0,VolumeStreamState.this,0)
VcsBundle.message("message.text.cannot.show.differences")
tracesFile.mkdirs()
LocalFileSystem.getInstance().findFileByPath(libPath)
tempBlock.getCommitPath()
selenium.isVisible("link=Control Panel")
DLFolderPermission.contains(getPermissionChecker(),groupId,folderId,ActionKeys.VIEW)
from=PERSISTENT_ALL_CACHES
getRequiredDate(singletonMap("date","2017-04-03"),list)
session.close()
checkPojoMetaClass()
trade.getPrice()
upd != null
host.setHeaderView(this)
assertEquals(401,te.getStatusCode())
passThruFields != null
Short.valueOf(value.toString())
counter <= max
assertFalse("reuse-address",networkConfig.isReuseAddress())
mHorizontals == null
(~activity.mActivityInfo.getRealConfigChanged() & diff) == 0
Trans == TRANSPOSE
invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
sDefaults.putBoolean(KEY_PERSIST_LPP_MODE_BOOL,false)
parser.parse(GroovyElementTypes.CONSTRUCTOR_BLOCK,builder)
expected == boolean.class
Exception ex
service.getDomain().getName()
Thread.sleep(50)
into.get(i)
dataBuilder.addLinesBuilder().setLine(i).setScmRevision("REVISION_" + i).setScmAuthor("a_guy").setSource("this is not java code " + i).setUtLineHits(i).setUtConditions(i + 1).setUtCoveredConditions(i).setItLineHits(i).setItConditions(i + 1).setItCoveredConditions(i).setOverallLineHits(i).setOverallConditions(i + 1).setOverallCoveredConditions(i).setScmDate(150000000L).setHighlighting("2,9,k;9,18,k").addAllDuplications(Arrays.asList(19,33,141))
BungeeCord.instance.pluginManager.onHandshake(event)
attrs.size() <= 4096
loaded.getLoaded().getConstructor()
Assert.assertEquals(transitions.size(),2)
new VisorGatewayArgument(VisorQueryTask.class).forNode(locNode).argument(VisorQueryArg.class,"person",URLEncoder.encode("select * from Person",CHARSET),false,1)
page != Page.ARCHIVE
getActionBar()
promise.setSuccess()
StringBuffer ret
!mWindow.getSharedElementsUseOverlay()
host1.getAddress()
selenium.isVisible("link=Control Panel")
mHorizontals == null
sections.remove(section)
buf.get()
sStatsd.informDeviceShutdown(true)
g.cachesx(null)
cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
0x1000000 - 0x50
getTtsVoiceUsed()
serverConfig.getRenewalPercentThreshold() * numberOfRenewsPerMinThreshold
(str.length() * 3) << 2
Long.valueOf(subSecs)
vis.fontAction(eastAsia)
parent instanceof AppWidgetHostView
logger.error("Cannot retrieve item {} for widget {}",itemName,w.eClass().getInstanceTypeName())
new IllegalArgumentException()
delayMs < 0
DefaultCacheKeysFactory.getEntityId(cacheKey)
p + "." + M_ITERATOR
Long.valueOf(args[2])
for (BooleanClause<Filter> booleanClause : _mustBooleanClauses) {   sb.append(booleanClause);   sb.append(StringPool.COMMA_AND_SPACE); } 
type.getConstructor()
Log_OC.e(TAG,"Canceling all syncs for " + MainApp.getAuthority())
compensationRange.inRange(compensation)
synchronized (this) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
assertEquals(ImageRequest.DEFAULT_IMAGE_BACKOFF_MULT,2f)
sourceSet.getClasses()
mRS.nScriptIntrinsicBLAS_Z(getID(mRS),RsBlas_strmm,TransA,0,Side,Uplo,Diag,B.getType().getY(),B.getType().getX(),0,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),0,0,0,0,0,0,0)
newline(1)
mLayerType == LAYER_TYPE_SOFTWARE
oauth20ValidationServiceSelectionStrategy()
r.nextFloat() < 0.1f
new IllegalStateException(sm.getString("upgradeHandler.sendPrefaceFail"),ioe)
IllegalArgumentException e
mTempDate.get(Calendar.DAY_OF_YEAR) != mMinDate.get(Calendar.DAY_OF_YEAR)
synchronized (this) {   int[] users=mAm.getUsersLocked();   if ("all".equals(name)) {     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         services.add(r1);       }     }   }  else {     ComponentName componentName=name != null ? ComponentName.unflattenFromString(name) : null;     int objectId=0;     if (componentName == null) {       try {         objectId=Integer.parseInt(name,16);         name=null;         componentName=null;       }  catch (      RuntimeException e) {       }     }     for (    int user : users) {       ServiceMap smap=mServiceMap.get(user);       if (smap == null) {         continue;       }       ArrayMap<ComponentName,ServiceRecord> alls=smap.mServicesByName;       for (int i=0; i < alls.size(); i++) {         ServiceRecord r1=alls.valueAt(i);         if (componentName != null) {           if (r1.name.equals(componentName)) {             services.add(r1);           }         }  else         if (name != null) {           if (r1.name.flattenToString().contains(name)) {             services.add(r1);           }         }  else         if (System.identityHashCode(r1) == objectId) {           services.add(r1);         }       }     }   } } 
UserHandle.getCallingUserId()
delegate.update(entity)
latch.countDown()
LOG.error("Defaulting JMX to HTTP protocol for  for clusterName = " + clusterName + ", componentName = "+ componentName+ componentName)
settings.getDateBeforeFilter()
IgniteException expected
Key.class.getCanonicalName()
isCreated()
new ArrayList<>()
obj.getName() != null
Context.getVisitService().getAllVisitTypes(false)
selenium.isVisible("link=Control Panel")
interceptor.intercept(invocation)
mConferenceById.containsKey(callId)
REMOVALS_UPDATER.compareAndSet(this,nanos,nanos + duration)
@Controller
event.getElement()
_portalResiliencyAction.execute(null,null,_mockHttpServletRequest,_response)
addError("URL [" + url + "] is not of type file")
signature != null
cacheCanvas.clipRect(0,0,tabWidth,tabHeight)
Slog.wtf(TAG,"showSaveLocked(): no mStructure")
mHandler.removeCallbacks(pae)
readStayAwakeConditions()
mImm.getInputMethodList()
header.getX()
new IndexShardRoutingTable.Builder(new ShardId(WatchStore.INDEX,0),false)
nextPos != mBoundPos
row - 0.25f
depthErrorXYZ("modelY")
assertEquals(dataFileStream.getMetaString("avro.codec"),"null")
SamlAdapterTestStrategy.uploadSP("http://localhost:8081/auth",keycloakRule)
Long.valueOf(attrValue)
15 * 60 * 1000
this.decoder.decode(message.getBody(),elementType,contentType,hints).mapError(this::mapError)
memoryReservation.getAndAdd(bytes)
e.printStackTrace()
mImmersiveModeConfirmation.onPowerKeyDown(isScreenOn,event.getDownTime(),isImmersiveMode(mLastSystemUiFlags))
trace.debug(e,"removing server because of exception")
Mono.currentContext()
IoUtils.safeClose(delegate)
addSourcesBuildPhase(target,targetGroup,buildable.getSrcs(),buildable.getPerFileFlags())
type.getConstructor()
ColorResources.getColor("buttonGradientLight")
ListDataSink.get(2)
url.addArgument(getAttributeValue(nodeAtts,"name"),tempNode.getFirstChild().getNodeValue())
sendMsg(mAudioHandler,MSG_SET_DEVICE_VOLUME,SENDMSG_NOOP,device,0,streamState,0)
doUpgrade()
ATLAS_MAP_ENTRY_FIELD_COUNT=4
pos1.getBlockX()
getService().animateCollapse()
Float.toString(f)
calendar.getTimeZone().getDSTSavings()
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
XContentParserUtils.ensureExpectedToken(parser.nextToken(),XContentParser.Token.START_OBJECT,parser::getTokenLocation)
@API(help="NetworkTestResults",direction=API.Direction.OUTPUT) public TwoDimTable table; 
private Integer buffer=null; 
role.getChatUser().getAddress().toBareJID()
Object[]
Set<UidRange>
args.length == 0
E extends Throwable
new RuntimeException(e.getMessage())
mAuthorities.get(i)
BTreeRow.unsortedBuilder(0)
mRS.nScriptIntrinsicBLAS_Complex(getID(mRS),RsBlas_ssyr2k,Trans,0,0,Uplo,0,0,C.getType().getX(),K,alpha.x,alpha.y,A.getID(mRS),B.getID(mRS),beta.x,beta.y,C.getID(mRS),0,0,0,0)
knownHandlers.contains(handler)
selenium.isVisible("link=Control Panel")
new TextVar(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER)
roles != null
AnnotationDescription.Loadable<Annotation>
0 - originY
System.currentTimeMillis() + 15000
this(maxFrameLength,lengthFieldOffset,lengthFieldOffset,lengthAdjustment,initialBytesToStrip,false); 
globalSecurityDomain != null
Character.isDigit(ch)
new IndexWriter(runData.getDirectory(),config.get("autocommit",DEFAULT_AUTO_COMMIT),runData.getAnalyzer(),false)
new TimelineChunk(sourceId,chunkId,metricId,startTime,endTime,timeBytes,sampleBytes,timeBytes.length)
scanFeatures(getKarafFeatureUrl(),"spring","spring-dm","jetty")
minBukkitBuildVersion=711
_portalResiliencyAction.execute(null,null,_mockHttpServletRequest,_response)
eventDispatcher.loadCompleted(loadable.dataSpec,loadable.type,elapsedRealtimeMs,loadDurationMs,loadable.bytesLoaded())
in.getVersion().after(Version.V_5_3_0_UNRELEASED)
-1
tgt.grantServiceTicket("ST3",service,new NeverExpiresExpirationPolicy(),true)
mView.setTransitionVisibility(mFinalVisibility)
ProcessBundleDescriptors.fromExecutableStage("my_stage",stage,components,dataServer.getApiServiceDescriptor())
executeWrappedCommandProtocolAsync(databaseName,getCommand(),connection,transformer(),wrappedCallback)
testAllocation("test2snippet",1,0,0)
changeInfo.getNewParametersSignature((JetCallableDefinitionUsage<PsiElement>)this)
activityNdx < topActivityNdx
nativeSetFlags(mNativeObject,sc.mNativeObject,0,OPAQUE)
Base.copyFile(file,properPdeFile)
return true; 
platformJars.contains(classfile)
declaration instanceof KtProperty || declaration instanceof KtNamedFunction
braceStyle == CodeStyleSettings.END_OF_LINE
interpreterSetting.getName()
SdpParseException e
SinglePartitionReadCommand.create(command.isForThrift(),command.metadata(),command.nowInSec(),command.columnFilter(),command.rowFilter(),command.limits().forShortReadRetry(toQuery),partitionKey,filter)
SystemTable.getLocalHostId()
POOL_LIMIT=12
props.getInt("session.time.to.live",SESSION_TIME_TO_LIVE)
log.info("Committed all active tasks {} and standby tasks {} in {}ms",taskManager.activeTaskIds(),taskManager.standbyTaskIds(),timerStartedMs - now)
new SpannedString(new CustomSpanned(first),false)
mPm.queryIntentActivitiesAsUser(mIntent,PackageManager.MATCH_DEFAULT_ONLY | (mAlwaysUseOption ? PackageManager.GET_RESOLVED_FILTER : 0),UserHandle.getUserId(mLaunchedFromUid))
@NonNull String bluetoothAddress
a.getFloat(attr,0)
caches.values()
fraction * (nextValue - prevValue)
new RemoteViews(mContext.getPackageName(),tombstone ? getActionTombstoneLayoutResource() : getActionLayoutResource())
mCaCerts != null || mCaCerts.length > 0
new SearchUICore.SearchResultMatcher(null,0,null,100)
selenium.isVisible("link=Control Panel")
FLING_DIST_THRESHOLD=70
assertTrue(mDisabled.hasFocus())
pk.getColumnName()
Log_OC.wtf(TAG,"Unhandled conflict decision " + decision)
final PyFunction function=PsiTreeUtil.getParentOfType(element,PyFunction.class,false); 
mNotificationsUtilsWrapper.mapJsonToFormattablbeContent(headerArray.getJSONObject(i))
startActivityAsUser(intent,new UserHandle(UserHandle.getUserId(mLaunchedFromUid)))
Preferences.navigationEnabled(context)
given().contentType(ContentType.BINARY).content(inputStream).when().post("/file")
U extends Identifier
assetUri.getAssetName().toString()
reload()
DLStoreUtil.deleteDirectory(companyId,REPOSITORY_ID,path)
anyInt()
PolylineEncoder.decode(route_geometry,10)
ResourceBundle.getBundle(MESSAGES,defaultLocale)
this.markBaseChanged()
mDeviceOwner.getProfileOwnerName(i)
geom.getMaterial().isEqual(mat)
mp.getValue()
LOG.error("Failed to get files from " + baseDirectory.getAbsolutePath())
first > 0
log.debug("Article " + title,es)
Integer.valueOf(value)
b.getTopicId()
/**   * Represents the formatter for log message which is used in UTs. Message format is: filePath:lineNo:columnNo: message.  * @author Andrei Selkin  */ public class AuditEventUtFormatter implements AuditEvemtFormatter {   /**   * Length of all separators.   */   private static final int LENGTH_OF_ALL_SEPARATORS=4;   @Override public String format(  AuditEvent event){     final String fileName=event.getFileName();     final String message=event.getMessage();     final int bufLen=event.getFileName().length() + event.getMessage().length() + LENGTH_OF_ALL_SEPARATORS;     final StringBuilder sb=new StringBuilder(bufLen);     sb.append(fileName).append(':').append(event.getLine());     if (event.getColumn() > 0) {       sb.append(':').append(event.getColumn());     }     sb.append(": ").append(message);     return sb.toString();   } } 
position > 0
/**   * Returns a result of type  {@code T} if the operation succeeds; otherwisethrows an exception.  * @return a result of type {@code T} if the operation succeeds; anexception otherwise  */ public T get() throws Exception ; 
StringBuffer txt=new StringBuffer(); 
TelephonyManager.getDefault().getPhoneType()
Assert.assertNull(ReportUtils.calculateFuel(startPosition,endPosition))
pos == -1
servletRequestContext.getServletRequest()
transport != null
new RuntimeException("Unable to find namespace and className for classCommandName: " + classCommandName)
other instanceof ValueLob
refresh(false)
directory.mkdir()
currentResponse.getAuthentication() != null
channel.getName().equals(actualChatRoom.getIdentifier())
logger.debug("defineClass pluginClass:{} cl:{}",className,classLoader)
StatusBarIconController.getTint(mTintArea,mWifiActivity,mIconTint)
Thread.sleep(1000)
into.get(i)
FileUtils.setPermissions(mPackageListFilename,0660,SYSTEM_UID,PACKAGE_INFO_GID)
_("Error while setting serial port parameters: {0} {1} {2} {3}")
