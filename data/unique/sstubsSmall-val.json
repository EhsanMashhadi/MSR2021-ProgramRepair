[
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "52f08044d059ecb590df82b98f1f68b9137e2c29",
        "fixCommitParentSHA1": "2ac40593c435265d10eed940b3d31d98dee43871",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapWriteOrderTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapWriteOrderTest.java b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapWriteOrderTest.java\nindex 97f6210..7e9a3ac 100644\n--- a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapWriteOrderTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapWriteOrderTest.java\n@@ -37,7 +37,7 @@\n import static org.junit.Assert.assertNotNull;\n \n @RunWith(Parameterized.class)\n-public class ReplicatedMapWriteOrderTest extends ReplicatedMapBaseTest {\n+public class ReplicatedMapWriteOrderTest extends ReplicatedMapAbstractTest {\n \n     int nodeCount;\n     int operations;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 39,
        "bugNodeStartChar": 1281,
        "bugNodeLength": 5049,
        "fixLineNum": 39,
        "fixNodeStartChar": 1281,
        "fixNodeLength": 5053,
        "sourceBeforeFix": "@RunWith(Parameterized.class) public class ReplicatedMapWriteOrderTest extends ReplicatedMapBaseTest {   int nodeCount;   int operations;   int keyCount;   public ReplicatedMapWriteOrderTest(  int nodeCount,  int operations,  int keyCount){     this.nodeCount=nodeCount;     this.operations=operations;     this.keyCount=keyCount;   }   @Parameterized.Parameters public static Collection<Object[]> data(){     return Arrays.asList(new Object[][]{{2,50,1},{2,50,10},{2,50,50}});   }   @After public void setUp() throws Exception {     HazelcastInstanceFactory.terminateAll();   }   @Test public void testDataIntegrity() throws InterruptedException {     setLoggingLog4j();     System.out.println(\"nodeCount = \" + nodeCount);     System.out.println(\"operations = \" + operations);     System.out.println(\"keyCount = \" + keyCount);     Config config=new Config();     config.getReplicatedMapConfig(\"test\").setReplicationDelayMillis(0);     TestHazelcastInstanceFactory factory=new TestHazelcastInstanceFactory(nodeCount);     final HazelcastInstance[] instances=factory.newInstances(config);     String replicatedMapName=\"test\";     final List<ReplicatedMap> maps=createMapOnEachInstance(instances,replicatedMapName);     ArrayList<Integer> keys=generateRandomIntegerList(keyCount);     Thread[] threads=createThreads(nodeCount,maps,keys,operations);     for (    Thread thread : threads) {       thread.start();     }     for (    Thread thread : threads) {       thread.join();     }     for (int i=0; i < keyCount; i++) {       final String key=\"foo-\" + keys.get(i);       assertTrueEventually(new AssertTask(){         @Override public void run() throws Exception {           System.out.println(\"---------------------\");           System.out.println(\"key = \" + key);           printValues();           assertValuesAreEqual();         }         private void printValues() throws Exception {           for (int j=0; j < maps.size(); j++) {             ReplicatedMap map=maps.get(j);             System.out.println(\"value[\" + j + \"] = \"+ map.get(key)+ \" , store version : \"+ getStore(map,key).getVersion());           }         }         private void assertValuesAreEqual(){           for (int i=0; i < maps.size() - 1; i++) {             ReplicatedMap map1=maps.get(i);             ReplicatedMap map2=maps.get(i + 1);             Object v1=map1.get(key);             Object v2=map2.get(key);             assertNotNull(v1);             assertNotNull(v2);             assertEquals(v1,v2);           }         }       } ,120);     }   }   private Thread[] createThreads(  int count,  List<ReplicatedMap> maps,  ArrayList<Integer> keys,  int operations){     Thread[] threads=new Thread[count];     for (int i=0; i < count; i++) {       threads[i]=createPutOperationThread(maps.get(i),keys,operations);     }     return threads;   }   private Thread createPutOperationThread(  final ReplicatedMap<String,Object> map,  final ArrayList<Integer> keys,  final int operations){     return new Thread(new Runnable(){       @Override public void run(){         Random random=new Random();         int size=keys.size();         for (int i=0; i < operations; i++) {           int index=i % size;           String key=\"foo-\" + keys.get(index);           map.put(key,random.nextLong());           boolean containsKey=map.containsKey(key);           assert containsKey;         }       }     } );   } } ",
        "sourceAfterFix": "@RunWith(Parameterized.class) public class ReplicatedMapWriteOrderTest extends ReplicatedMapAbstractTest {   int nodeCount;   int operations;   int keyCount;   public ReplicatedMapWriteOrderTest(  int nodeCount,  int operations,  int keyCount){     this.nodeCount=nodeCount;     this.operations=operations;     this.keyCount=keyCount;   }   @Parameterized.Parameters public static Collection<Object[]> data(){     return Arrays.asList(new Object[][]{{2,50,1},{2,50,10},{2,50,50}});   }   @After public void setUp() throws Exception {     HazelcastInstanceFactory.terminateAll();   }   @Test public void testDataIntegrity() throws InterruptedException {     setLoggingLog4j();     System.out.println(\"nodeCount = \" + nodeCount);     System.out.println(\"operations = \" + operations);     System.out.println(\"keyCount = \" + keyCount);     Config config=new Config();     config.getReplicatedMapConfig(\"test\").setReplicationDelayMillis(0);     TestHazelcastInstanceFactory factory=new TestHazelcastInstanceFactory(nodeCount);     final HazelcastInstance[] instances=factory.newInstances(config);     String replicatedMapName=\"test\";     final List<ReplicatedMap> maps=createMapOnEachInstance(instances,replicatedMapName);     ArrayList<Integer> keys=generateRandomIntegerList(keyCount);     Thread[] threads=createThreads(nodeCount,maps,keys,operations);     for (    Thread thread : threads) {       thread.start();     }     for (    Thread thread : threads) {       thread.join();     }     for (int i=0; i < keyCount; i++) {       final String key=\"foo-\" + keys.get(i);       assertTrueEventually(new AssertTask(){         @Override public void run() throws Exception {           System.out.println(\"---------------------\");           System.out.println(\"key = \" + key);           printValues();           assertValuesAreEqual();         }         private void printValues() throws Exception {           for (int j=0; j < maps.size(); j++) {             ReplicatedMap map=maps.get(j);             System.out.println(\"value[\" + j + \"] = \"+ map.get(key)+ \" , store version : \"+ getStore(map,key).getVersion());           }         }         private void assertValuesAreEqual(){           for (int i=0; i < maps.size() - 1; i++) {             ReplicatedMap map1=maps.get(i);             ReplicatedMap map2=maps.get(i + 1);             Object v1=map1.get(key);             Object v2=map2.get(key);             assertNotNull(v1);             assertNotNull(v2);             assertEquals(v1,v2);           }         }       } ,120);     }   }   private Thread[] createThreads(  int count,  List<ReplicatedMap> maps,  ArrayList<Integer> keys,  int operations){     Thread[] threads=new Thread[count];     for (int i=0; i < count; i++) {       threads[i]=createPutOperationThread(maps.get(i),keys,operations);     }     return threads;   }   private Thread createPutOperationThread(  final ReplicatedMap<String,Object> map,  final ArrayList<Integer> keys,  final int operations){     return new Thread(new Runnable(){       @Override public void run(){         Random random=new Random();         int size=keys.size();         for (int i=0; i < operations; i++) {           int index=i % size;           String key=\"foo-\" + keys.get(index);           map.put(key,random.nextLong());           boolean containsKey=map.containsKey(key);           assert containsKey;         }       }     } );   } } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "53c0cde20042683e48266819a47099612e69d5bd",
        "fixCommitParentSHA1": "08a1f24dc0f17c4b32ebda1ac39be3ee01434f0f",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java b/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\nindex c486ce0..e556f1c 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/dataformat/DataFormatComponentConfigurationAndDocumentationTest.java\n@@ -71,7 +71,7 @@\n                 + \", \\\"javaType\\\": \\\"java.lang.String\\\", \\\"deprecated\\\": \\\"false\\\", \\\"secret\\\": \\\"false\\\", \\\"defaultValue\\\": \\\"\\\\\\\"\\\"\"));\n \n         List<Map<String, String>> rows = JsonSchemaHelper.parseJsonSchema(\"properties\", json, true);\n-        assertEquals(9, rows.size());\n+        assertEquals(10, rows.size());\n \n         Map<String, String> found = null;\n         for (Map<String, String> row : rows) {\n@@ -105,7 +105,7 @@\n                 + \" \\\"deprecated\\\": \\\"false\\\", \\\"secret\\\": \\\"false\\\", \\\"defaultValue\\\": \\\"\\\\\\\\\\\", \\\"description\\\": \\\"The escape character.\\\"\"));\n \n         List<Map<String, String>> rows = JsonSchemaHelper.parseJsonSchema(\"properties\", json, true);\n-        assertEquals(15, rows.size());\n+        assertEquals(16, rows.size());\n \n         Map<String, String> found = null;\n         for (Map<String, String> row : rows) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 108,
        "bugNodeStartChar": 5176,
        "bugNodeLength": 29,
        "fixLineNum": 108,
        "fixNodeStartChar": 5176,
        "fixNodeLength": 29,
        "sourceBeforeFix": "assertEquals(15,rows.size())",
        "sourceAfterFix": "assertEquals(16,rows.size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "31a360700bc11b55dc64e89c7b6f8b660b50bddb",
        "fixCommitParentSHA1": "561080e0f19c42999d9036fa12a988b450ffabe1",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\nindex 0fa4eb9..9a93590 100644\n--- a/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n+++ b/graylog2-server/src/main/java/org/graylog2/rest/resources/search/SearchResource.java\n@@ -161,7 +161,7 @@\n     }\n \n     protected List<ResultMessageSummary> resultMessageListtoValueList(List<ResultMessage> resultMessages) {\n-        final List<ResultMessageSummary> result = Lists.newArrayListWithExpectedSize(resultMessages.size());\n+        final List<ResultMessageSummary> result = Lists.newArrayListWithCapacity(resultMessages.size());\n \n         for (ResultMessage resultMessage : resultMessages) {\n             result.add(ResultMessageSummary.create(resultMessage.highlightRanges, resultMessage.getMessage(), resultMessage.getIndex()));\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 164,
        "bugNodeStartChar": 7127,
        "bugNodeLength": 57,
        "fixLineNum": 164,
        "fixNodeStartChar": 7127,
        "fixNodeLength": 53,
        "sourceBeforeFix": "Lists.newArrayListWithExpectedSize(resultMessages.size())",
        "sourceAfterFix": "Lists.newArrayListWithCapacity(resultMessages.size())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "6eaf3674e604c25ec1ffc72e97ae2933209ad971",
        "fixCommitParentSHA1": "8a386eb107de7eff4b048157f659ab8ab8219084",
        "bugFilePath": "core/client/src/main/java/alluxio/client/file/FileInStream.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/file/FileInStream.java b/core/client/src/main/java/alluxio/client/file/FileInStream.java\nindex b263009..5592db2 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileInStream.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileInStream.java\n@@ -454,7 +454,7 @@\n \n     // If this block is read from a remote worker but we don't have a local worker, don't cache\n     if (mCurrentBlockInStream instanceof RemoteBlockInStream\n-        && BlockStoreContext.INSTANCE.hasLocalWorker()) {\n+        && !BlockStoreContext.INSTANCE.hasLocalWorker()) {\n       return;\n     }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 457,
        "bugNodeStartChar": 16911,
        "bugNodeLength": 43,
        "fixLineNum": 457,
        "fixNodeStartChar": 16911,
        "fixNodeLength": 44,
        "sourceBeforeFix": "BlockStoreContext.INSTANCE.hasLocalWorker()",
        "sourceAfterFix": "!BlockStoreContext.INSTANCE.hasLocalWorker()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5856078799d2bfc99513d30334f43da6df8f3885",
        "fixCommitParentSHA1": "cb71ccd12e5385e00fabecd197f4e9e4fc670d92",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/longrunning/DynamicClusterTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/longrunning/DynamicClusterTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/longrunning/DynamicClusterTest.java\nindex 5dcd49b..60b8a47 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/longrunning/DynamicClusterTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/longrunning/DynamicClusterTest.java\n@@ -234,7 +234,7 @@\n         final CountDownLatch latch = new CountDownLatch(3);\n         final String message = \"Hazelcast Rocks!\";\n         topic.addMessageListener(new MessageListener<String>() {\n-            public void onMessage(String msg) {\n+            public void onMessage(Message<String> msg) {\n                 if (msg.equals(message)) {\n                     latch.countDown();\n                 }\n@@ -1013,7 +1013,7 @@\n         HazelcastInstance h2 = Hazelcast.newHazelcastInstance(c2);\n         HazelcastClient client2 = HazelcastClient.newHazelcastClient(c2.getGroupConfig().getName(), c2.getGroupConfig().getPassword(), \"127.0.0.1:5702\");\n         client2.getTopic(\"def\").addMessageListener(new MessageListener<Object>() {\n-            public void onMessage(Object message) {\n+            public void onMessage(Message message) {\n             }\n         });\n         LifecycleCountingListener l = new LifecycleCountingListener();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1016,
        "bugNodeStartChar": 44367,
        "bugNodeLength": 14,
        "fixLineNum": 1016,
        "fixNodeStartChar": 44367,
        "fixNodeLength": 15,
        "sourceBeforeFix": "Object message",
        "sourceAfterFix": "Message message"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4e5331a21a2efbf87f31b2ccde50208a9ac31046",
        "fixCommitParentSHA1": "50d13df01d20ed1f4a8a9131c09d1301e9ac963b",
        "bugFilePath": "presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java",
        "fixPatch": "diff --git a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\nindex 5ec47e2..70abb99 100644\n--- a/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n+++ b/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/BingTileFunctions.java\n@@ -362,7 +362,7 @@\n \n     private static Point tileXYToLatitudeLongitude(int tileX, int tileY, int zoomLevel)\n     {\n-        int mapSize = mapSize(zoomLevel);\n+        long mapSize = mapSize(zoomLevel);\n         double x = (clip(tileX * TILE_PIXELS, 0, mapSize) / mapSize) - 0.5;\n         double y = 0.5 - (clip(tileY * TILE_PIXELS, 0, mapSize) / mapSize);\n \n@@ -377,7 +377,7 @@\n         double sinLatitude = Math.sin(latitude * Math.PI / 180);\n         double y = 0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / (4 * Math.PI);\n \n-        int mapSize = mapSize(zoomLevel);\n+        long mapSize = mapSize(zoomLevel);\n         int tileX = (int) clip(x * mapSize, 0, mapSize - 1);\n         int tileY = (int) clip(y * mapSize, 0, mapSize - 1);\n         return BingTile.fromCoordinates(tileX / TILE_PIXELS, tileY / TILE_PIXELS, zoomLevel);\n@@ -467,8 +467,8 @@\n         return Math.min(Math.max(n, minValue), maxValue);\n     }\n \n-    private static int mapSize(int zoomLevel)\n+    private static long mapSize(int zoomLevel)\n     {\n-        return 256 << zoomLevel;\n+        return 256L << zoomLevel;\n     }\n }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 472,
        "bugNodeStartChar": 20615,
        "bugNodeLength": 16,
        "fixLineNum": 472,
        "fixNodeStartChar": 20615,
        "fixNodeLength": 17,
        "sourceBeforeFix": "256 << zoomLevel",
        "sourceAfterFix": "256L << zoomLevel"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b4cef872f8429ea78bc13f1ac2b3fa5eb3723d3a",
        "fixCommitParentSHA1": "032216497c565f881bd24a2b31d0cf04d3b9fa0a",
        "bugFilePath": "presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java",
        "fixPatch": "diff --git a/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java b/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\nindex 1236792..1881cee 100644\n--- a/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\n+++ b/presto-hive/src/test/java/com/facebook/presto/hive/metastore/InMemoryHiveMetastore.java\n@@ -170,7 +170,7 @@\n \n         // if the name did not change, this is a simple schema change\n         if (oldName.equals(newName)) {\n-            if (relations.replace(oldName, newTable) != null) {\n+            if (relations.replace(oldName, newTable) == null) {\n                 throw new TableNotFoundException(oldName);\n             }\n             return;\n",
        "projectName": "facebook.presto",
        "bugLineNum": 173,
        "bugNodeStartChar": 7891,
        "bugNodeLength": 44,
        "fixLineNum": 173,
        "fixNodeStartChar": 7891,
        "fixNodeLength": 44,
        "sourceBeforeFix": "relations.replace(oldName,newTable) != null",
        "sourceAfterFix": "relations.replace(oldName,newTable) == null"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "f8d9a3b19b8a69e20c4469b541a5ae96b07e7cc8",
        "fixCommitParentSHA1": "d9b9f73494724d873968a014c1622b0b14b9e262",
        "bugFilePath": "server/src/main/java/com/metamx/druid/index/v1/IndexGranularity.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/index/v1/IndexGranularity.java b/server/src/main/java/com/metamx/druid/index/v1/IndexGranularity.java\nindex 4628028..75ebd7c 100644\n--- a/server/src/main/java/com/metamx/druid/index/v1/IndexGranularity.java\n+++ b/server/src/main/java/com/metamx/druid/index/v1/IndexGranularity.java\n@@ -204,7 +204,7 @@\n         @Override\n         public long increment(long timeMillis)\n         {\n-          return timeMillis - MILLIS_IN;\n+          return timeMillis + MILLIS_IN;\n         }\n \n         @Override\n@@ -273,7 +273,7 @@\n         @Override\n         public long increment(long timeMillis)\n         {\n-          return timeMillis - MILLIS_IN;\n+          return timeMillis + MILLIS_IN;\n         }\n \n         @Override\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 207,
        "bugNodeStartChar": 5433,
        "bugNodeLength": 22,
        "fixLineNum": 207,
        "fixNodeStartChar": 5433,
        "fixNodeLength": 22,
        "sourceBeforeFix": "timeMillis - MILLIS_IN",
        "sourceAfterFix": "timeMillis + MILLIS_IN"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "59970361c11b8177edbf56786e896ce4da82c6ba",
        "fixCommitParentSHA1": "47ec09e10ea6807f6c7f6a17273b3eeffe5958b7",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\nindex b3c25e4..2e40ff9 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/ValueTypeInfo.java\n@@ -96,10 +96,10 @@\n \t\t}\n \t\t\n \t\tif (CopyableValue.class.isAssignableFrom(type)) {\n-\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n \t\t}\n \t\telse {\n-\t\t\treturn (TypeComparator<T>) new CopyableValueComparator(sortOrderAscending, type);\n+\t\t\treturn (TypeComparator<T>) new ValueComparator(sortOrderAscending, type);\n \t\t}\n \t}\n \t\n",
        "projectName": "apache.flink",
        "bugLineNum": 99,
        "bugNodeStartChar": 3021,
        "bugNodeLength": 45,
        "fixLineNum": 99,
        "fixNodeStartChar": 3021,
        "fixNodeLength": 53,
        "sourceBeforeFix": "new ValueComparator(sortOrderAscending,type)",
        "sourceAfterFix": "new CopyableValueComparator(sortOrderAscending,type)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "27301617876b102c50f758608843f9ccf9456a1b",
        "fixCommitParentSHA1": "76468809428da1af433cc14871b874482c5be9bd",
        "bugFilePath": "presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java",
        "fixPatch": "diff --git a/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java b/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\nindex 74b18c1..5ffb638 100644\n--- a/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\n+++ b/presto-example-http/src/main/java/com/facebook/presto/example/ExampleSplit.java\n@@ -32,7 +32,7 @@\n     private final String tableName;\n     private final URI uri;\n     private final boolean remotelyAccessible;\n-    private final ImmutableList<HostAddress> addresses;\n+    private final List<HostAddress> addresses;\n \n     @JsonCreator\n     public ExampleSplit(\n",
        "projectName": "facebook.presto",
        "bugLineNum": 35,
        "bugNodeStartChar": 1205,
        "bugNodeLength": 26,
        "fixLineNum": 35,
        "fixNodeStartChar": 1205,
        "fixNodeLength": 17,
        "sourceBeforeFix": "ImmutableList<HostAddress>",
        "sourceAfterFix": "List<HostAddress>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7274d19d3eaeb4bc1ef2a16c0ac08e7447a27003",
        "fixCommitParentSHA1": "5c98a9a77137ecee6ed62d8f7b0b2a0999051b60",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/collection/impl/set/SetBasicDistributedTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/collection/impl/set/SetBasicDistributedTest.java b/hazelcast/src/test/java/com/hazelcast/collection/impl/set/SetBasicDistributedTest.java\nindex fc79c18..b61aefd 100644\n--- a/hazelcast/src/test/java/com/hazelcast/collection/impl/set/SetBasicDistributedTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/collection/impl/set/SetBasicDistributedTest.java\n@@ -10,7 +10,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class SetBasicDistributedTest extends SetBasicTest{\n+public class SetBasicDistributedTest extends SetAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances(Config config) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 11,
        "bugNodeStartChar": 365,
        "bugNodeLength": 310,
        "fixLineNum": 11,
        "fixNodeStartChar": 365,
        "fixNodeLength": 314,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class SetBasicDistributedTest extends SetBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(2).newInstances(config);   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class SetBasicDistributedTest extends SetAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(2).newInstances(config);   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5cf710f1b72db6a8413d42668b0e878243217165",
        "fixCommitParentSHA1": "a74b79c7802f088f73d1f126fba378791a5e14c5",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\nindex 113d7d2..5dd358f 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AtmosphereFramework.java\n@@ -2078,7 +2078,7 @@\n                         l.onSuspend(request, response);\n                         break;\n                     case RESUME:\n-                        l.onSuspend(request, response);\n+                        l.onResume(request, response);\n                         break;\n                     case DESTROYED:\n                         l.onDestroyed(request, response);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 2081,
        "bugNodeStartChar": 83036,
        "bugNodeLength": 30,
        "fixLineNum": 2081,
        "fixNodeStartChar": 83036,
        "fixNodeLength": 29,
        "sourceBeforeFix": "l.onSuspend(request,response)",
        "sourceAfterFix": "l.onResume(request,response)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "62a2eb679b8849fa708b87e627fff36b65dc2ecd",
        "fixCommitParentSHA1": "a7ea864d23e4b47cef8056a446ea4e7344c62ee7",
        "bugFilePath": "components/camel-rabbitmq/src/test/java/org/apache/camel/component/rabbitmq/RabbitMQEndpointTest.java",
        "fixPatch": "diff --git a/components/camel-rabbitmq/src/test/java/org/apache/camel/component/rabbitmq/RabbitMQEndpointTest.java b/components/camel-rabbitmq/src/test/java/org/apache/camel/component/rabbitmq/RabbitMQEndpointTest.java\nindex 11b3675..86a7bcc 100644\n--- a/components/camel-rabbitmq/src/test/java/org/apache/camel/component/rabbitmq/RabbitMQEndpointTest.java\n+++ b/components/camel-rabbitmq/src/test/java/org/apache/camel/component/rabbitmq/RabbitMQEndpointTest.java\n@@ -133,7 +133,7 @@\n \n     private ConnectionFactory createConnectionFactory(String uri) {\n         RabbitMQEndpoint endpoint = context.getEndpoint(uri, RabbitMQEndpoint.class); \n-        return endpoint.getConnectionFactory();\n+        return endpoint.getOrCreateConnectionFactory();\n     }\n \n     @Test\n",
        "projectName": "apache.camel",
        "bugLineNum": 136,
        "bugNodeStartChar": 6816,
        "bugNodeLength": 31,
        "fixLineNum": 136,
        "fixNodeStartChar": 6816,
        "fixNodeLength": 39,
        "sourceBeforeFix": "endpoint.getConnectionFactory()",
        "sourceAfterFix": "endpoint.getOrCreateConnectionFactory()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "87418e0a4168464983d7a6ce24ad2a4ff0bd6f77",
        "fixCommitParentSHA1": "9b8c4898d126cef24b6b1fa7623a12e4650f9e7a",
        "bugFilePath": "src/com/google/javascript/rhino/Node.java",
        "fixPatch": "diff --git a/src/com/google/javascript/rhino/Node.java b/src/com/google/javascript/rhino/Node.java\nindex f0a7b60..f1ac1c0 100644\n--- a/src/com/google/javascript/rhino/Node.java\n+++ b/src/com/google/javascript/rhino/Node.java\n@@ -729,7 +729,10 @@\n   }\n \n   public void addChildToBack(Node child) {\n-    checkArgument(child.parent == null);\n+    checkArgument(\n+        child.parent == null,\n+        \"Cannot add already-owned child node.\\nChild: %s\\nExisting parent: %s\\nNew parent: %s\",\n+        child, parent, this);\n     checkArgument(child.next == null);\n     checkArgument(child.previous == null);\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 732,
        "bugNodeStartChar": 25021,
        "bugNodeLength": 35,
        "fixLineNum": 732,
        "fixNodeStartChar": 25021,
        "fixNodeLength": 169,
        "sourceBeforeFix": "checkArgument(child.parent == null)",
        "sourceAfterFix": "checkArgument(child.parent == null,\"Cannot add already-owned child node.\\nChild: %s\\nExisting parent: %s\\nNew parent: %s\",child,parent,this)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "175ad301ad86b5b5f5eae58f0fd97aecc0345014",
        "fixCommitParentSHA1": "50ed39f50ffe60fb03cd9e8f467157ce2db81638",
        "bugFilePath": "presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java",
        "fixPatch": "diff --git a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\nindex 89867e9..33ee8fa 100644\n--- a/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n+++ b/presto-spi/src/main/java/com/facebook/presto/spi/block/SingleRowBlock.java\n@@ -55,7 +55,7 @@\n     {\n         long sizeInBytes = 0;\n         for (int i = 0; i < fieldBlocks.length; i++) {\n-            sizeInBytes += getRawFieldBlock(i).getSizeInBytes();\n+            sizeInBytes += getRawFieldBlock(i).getRegionSizeInBytes(rowIndex, 1);\n         }\n         return sizeInBytes;\n     }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 58,
        "bugNodeStartChar": 1524,
        "bugNodeLength": 36,
        "fixLineNum": 58,
        "fixNodeStartChar": 1524,
        "fixNodeLength": 53,
        "sourceBeforeFix": "getRawFieldBlock(i).getSizeInBytes()",
        "sourceAfterFix": "getRawFieldBlock(i).getRegionSizeInBytes(rowIndex,1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a295b91c37f681199a83fdb963344c19e0d015c0",
        "fixCommitParentSHA1": "639746c600fda2645e33223cb7c6607cf7163783",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/examples/TestApp.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\nindex c8b085e..e583dd5 100644\n--- a/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n+++ b/hazelcast/src/main/java/com/hazelcast/examples/TestApp.java\n@@ -631,7 +631,7 @@\n     private void handleAtomicNumberSet(String[] args) {\n         long v = 0;\n         if (args.length > 1) {\n-            v = Long.valueOf(args[1]);\n+            v = Long.parseLong(args[1]);\n         }\n         getAtomicNumber().set(v);\n         println(getAtomicNumber().get());\n@@ -848,7 +848,7 @@\n \n     protected void handleMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMap().tryLock(key);\n@@ -971,7 +971,7 @@\n \n     protected void handleMultiMapTryLock(String[] args) {\n         String key = args[1];\n-        long time = (args.length > 2) ? Long.valueOf(args[2]) : 0;\n+        long time = (args.length > 2) ? Long.parseLong(args[2]) : 0;\n         boolean locked;\n         if (time == 0) {\n             locked = getMultiMap().tryLock(key);\n@@ -1019,7 +1019,7 @@\n             if (timeout == null) {\n                 println(lock.tryLock());\n             } else {\n-                long time = Long.valueOf(timeout);\n+                long time = Long.parseLong(timeout);\n                 try {\n                     println(lock.tryLock(time, TimeUnit.SECONDS));\n                 } catch (InterruptedException e) {\n@@ -1232,7 +1232,7 @@\n     protected void handleQOffer(String[] args) {\n         long timeout = 0;\n         if (args.length > 2) {\n-            timeout = Long.valueOf(args[2]);\n+            timeout = Long.parseLong(args[2]);\n         }\n         try {\n             boolean offered = getQueue().offer(args[1], timeout, TimeUnit.SECONDS);\n@@ -1253,7 +1253,7 @@\n     protected void handleQPoll(String[] args) {\n         long timeout = 0;\n         if (args.length > 1) {\n-            timeout = Long.valueOf(args[1]);\n+            timeout = Long.parseLong(args[1]);\n         }\n         try {\n             println(getQueue().poll(timeout, TimeUnit.SECONDS));\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 1022,
        "bugNodeStartChar": 34680,
        "bugNodeLength": 21,
        "fixLineNum": 1022,
        "fixNodeStartChar": 34680,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Long.valueOf(timeout)",
        "sourceAfterFix": "Long.parseLong(timeout)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "798beed7a84ec00cfb0835cf41b7988e27898e22",
        "fixCommitParentSHA1": "3445a3a3f2491f0d82f375578702c80566659097",
        "bugFilePath": "src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java b/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\nindex b2e8724..4d1cc9f 100644\n--- a/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\n+++ b/src/main/java/com/alibaba/druid/wall/spi/MySqlWallProvider.java\n@@ -39,7 +39,9 @@\n \r\n     @Override\r\n     public SQLStatementParser createParser(String sql) {\r\n-        return new MySqlStatementParser(sql, SQLParserFeature.EnableSQLBinaryOpExprGroup\r\n+        return new MySqlStatementParser(sql\r\n+                , SQLParserFeature.EnableSQLBinaryOpExprGroup\r\n+                , SQLParserFeature.StrictForWall\r\n         );\r\n     }\r\n \r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 42,
        "bugNodeStartChar": 1604,
        "bugNodeLength": 84,
        "fixLineNum": 42,
        "fixNodeStartChar": 1563,
        "fixNodeLength": 149,
        "sourceBeforeFix": "new MySqlStatementParser(sql,SQLParserFeature.EnableSQLBinaryOpExprGroup)",
        "sourceAfterFix": "new MySqlStatementParser(sql,SQLParserFeature.EnableSQLBinaryOpExprGroup,SQLParserFeature.StrictForWall)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex da44e32..b328b00 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -513,7 +513,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15873, value = \"Repository does not contain any deployment with hash %s\")\n+    @Message(id = 10873, value = \"Repository does not contain any deployment with hash %s\")\n     IllegalStateException deploymentHashNotFoundInRepository(String hash);\n \n     /**\n@@ -523,7 +523,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15874, value = \"Expected only one deployment, found %d\")\n+    @Message(id = 10874, value = \"Expected only one deployment, found %d\")\n     IllegalStateException expectedOnlyOneDeployment(int i);\n \n     /**\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 516,
        "bugNodeStartChar": 19053,
        "bugNodeLength": 10,
        "fixLineNum": 516,
        "fixNodeStartChar": 19053,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15873",
        "sourceAfterFix": "id=10873"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "c7314141c0b6c3caa0be72c78f2ba2996a9eabd7",
        "fixCommitParentSHA1": "ac696a6b50a5ca7f27fb5afd4002540f8aa718b7",
        "bugFilePath": "src/api/org/openmrs/hl7/handler/ADTA28Handler.java",
        "fixPatch": "diff --git a/src/api/org/openmrs/hl7/handler/ADTA28Handler.java b/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\nindex ad5a952..2c78d85 100644\n--- a/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\n+++ b/src/api/org/openmrs/hl7/handler/ADTA28Handler.java\n@@ -288,7 +288,7 @@\n \t\t\r\n \t\t// Date of Birth\r\n \t\tTS dateOfBirth = pid.getDateTimeOfBirth();\r\n-\t    if (dateOfBirth == null)\t\r\n+\t    if (dateOfBirth == null || dateOfBirth.getTime() == null || dateOfBirth.getTime().getValue() == null)\t\r\n \t\t\tthrow new HL7Exception(\"Missing birth date in the PID segment\");\r\n \t\tpatient.setBirthdate(tsToDate(dateOfBirth));\r\n \t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 291,
        "bugNodeStartChar": 10658,
        "bugNodeLength": 19,
        "fixLineNum": 291,
        "fixNodeStartChar": 10368,
        "fixNodeLength": 96,
        "sourceBeforeFix": "dateOfBirth == null",
        "sourceAfterFix": "dateOfBirth == null || dateOfBirth.getTime() == null || dateOfBirth.getTime().getValue() == null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b2eec07c6682767e23d09d688fd784afbfee9add",
        "fixCommitParentSHA1": "55929fd44dbdf69f203d9dacd70ecaa6a30b5b34",
        "bugFilePath": "core/src/test/java/tachyon/UnderFileSystemCluster.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/UnderFileSystemCluster.java b/core/src/test/java/tachyon/UnderFileSystemCluster.java\nindex d328d60..6094918 100644\n--- a/core/src/test/java/tachyon/UnderFileSystemCluster.java\n+++ b/core/src/test/java/tachyon/UnderFileSystemCluster.java\n@@ -72,8 +72,8 @@\n     if (mUfsClz != null && !mUfsClz.equals(\"\")) {\n       try {\n         UnderFileSystemCluster ufsCluster =\n-            (UnderFileSystemCluster) Class.forName(mUfsClz).getConstructor(String.class)\n-                .newInstance(baseDir);\n+            (UnderFileSystemCluster) Class.forName(mUfsClz).getConstructor(String.class,\n+                TachyonConf.class).newInstance(baseDir, tachyonConf);\n         return ufsCluster;\n       } catch (Exception e) {\n         System.out.println(\"Failed to initialize the ufsCluster of \" + mUfsClz\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 75,
        "bugNodeStartChar": 2404,
        "bugNodeLength": 51,
        "fixLineNum": 75,
        "fixNodeStartChar": 2404,
        "fixNodeLength": 86,
        "sourceBeforeFix": "Class.forName(mUfsClz).getConstructor(String.class)",
        "sourceAfterFix": "Class.forName(mUfsClz).getConstructor(String.class,TachyonConf.class)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "62bc0b861423b8764f479d9d50d29ff82daf2d8f",
        "fixCommitParentSHA1": "6cef03f5a2aee7a51d7bea5b77ca10f379e4e402",
        "bugFilePath": "components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java",
        "fixPatch": "diff --git a/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java b/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\nindex 5473049..fbc0a80 100644\n--- a/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\n+++ b/components/camel-csv/src/main/java/org/apache/camel/dataformat/csv/CsvDataFormat.java\n@@ -46,7 +46,7 @@\n         Map map = ExchangeHelper.convertToMandatoryType(exchange, Map.class, object);\n         OutputStreamWriter out = new OutputStreamWriter(outputStream);\n         try {\n-            CSVConfig conf = createConfig();\n+            CSVConfig conf = getConfig();\n             // lets add fields\n             Set set = map.keySet();\n             for (Object value : set) {\n",
        "projectName": "apache.camel",
        "bugLineNum": 49,
        "bugNodeStartChar": 1940,
        "bugNodeLength": 14,
        "fixLineNum": 49,
        "fixNodeStartChar": 1940,
        "fixNodeLength": 11,
        "sourceBeforeFix": "createConfig()",
        "sourceAfterFix": "getConfig()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "da1e7159eaa3dba8f47ee6c22177a4472fd33cb6",
        "fixCommitParentSHA1": "a27e1f37acd555b22d0282702ab610bcb5625597",
        "bugFilePath": "testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/extended/ejb2/stateless/RemoteStatelessFailoverTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/extended/ejb2/stateless/RemoteStatelessFailoverTestCase.java b/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/extended/ejb2/stateless/RemoteStatelessFailoverTestCase.java\nindex feca70e..32c813f 100644\n--- a/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/extended/ejb2/stateless/RemoteStatelessFailoverTestCase.java\n+++ b/testsuite/integration/clustering/src/test/java/org/jboss/as/test/clustering/extended/ejb2/stateless/RemoteStatelessFailoverTestCase.java\n@@ -78,7 +78,7 @@\n     private static final String ARCHIVE_NAME = \"stateless-ejb2-failover-test\";\n     private static final String ARCHIVE_NAME_DD = \"stateless-ejb2-failover-dd-test\";\n \n-    private static final Integer PORT_2 = 8080;\n+    private static final Integer PORT_2 = 8180;\n     private static final String HOST_2 = System.getProperty(\"node1\");\n     private static final String REMOTE_PORT_PROPERTY_NAME = \"remote.connection.default.port\";\n     private static final String REMOTE_HOST_PROPERTY_NAME = \"remote.connection.default.host\";\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 81,
        "bugNodeStartChar": 3552,
        "bugNodeLength": 13,
        "fixLineNum": 81,
        "fixNodeStartChar": 3552,
        "fixNodeLength": 13,
        "sourceBeforeFix": "PORT_2=8080",
        "sourceAfterFix": "PORT_2=8180"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b0662ce83b466318ce8dcec13428846b1b190aaf",
        "fixCommitParentSHA1": "9a12d6357cf48534678723286b4741f55eb7009c",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\nindex 98bc0b6..c33dc62 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/connection/nio/ClientConnectionManagerImpl.java\n@@ -327,11 +327,11 @@\n             throw new IOException(\"Address is required!\");\n         }\n \n-        ClientConnection clientConnection = connections.get(address);\n+        ClientConnection clientConnection = connections.get(target);\n         if (clientConnection == null) {\n-            final Object lock = getLock(address);\n+            final Object lock = getLock(target);\n             synchronized (lock) {\n-                clientConnection = connections.get(address);\n+                clientConnection = connections.get(target);\n                 if (clientConnection == null) {\n                     final ConnectionProcessor connectionProcessor = new ConnectionProcessor(address, authenticator, false);\n                     final ICompletableFuture<ClientConnection> future = executionService.submitInternal(connectionProcessor);\n@@ -341,7 +341,7 @@\n                         future.cancel(true);\n                         throw ExceptionUtil.rethrow(e, IOException.class);\n                     }\n-                    ClientConnection current = connections.putIfAbsent(address, clientConnection);\n+                    ClientConnection current = connections.putIfAbsent(clientConnection.getRemoteEndpoint(), clientConnection);\n                     if (current != null) {\n                         clientConnection.close();\n                         clientConnection = current;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 332,
        "bugNodeStartChar": 13499,
        "bugNodeLength": 16,
        "fixLineNum": 332,
        "fixNodeStartChar": 13499,
        "fixNodeLength": 15,
        "sourceBeforeFix": "getLock(address)",
        "sourceAfterFix": "getLock(target)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\nindex 50f43e2..8259c17 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/sar/injection/resource/X.java\n@@ -35,10 +35,10 @@\n \n     private TransactionManager transactionManager;\n \n-    @Resource(name = \"java:jboss/mail\")\n+    @Resource(lookup = \"java:jboss/mail\")\n     private Context context;\n \n-    @Resource(name = \"java:/TransactionManager\")\n+    @Resource(lookup = \"java:/TransactionManager\")\n     public void setTransactionManager(TransactionManager transactionManager) {\n         this.transactionManager = transactionManager;\n     }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 38,
        "bugNodeStartChar": 1339,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1339,
        "fixNodeLength": 26,
        "sourceBeforeFix": "name=\"java:jboss/mail\"",
        "sourceAfterFix": "lookup=\"java:jboss/mail\""
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "2c2d74610fec585556af21e02f3d8bfde051ad46",
        "fixCommitParentSHA1": "e51e7faf7d746dedbaeabdbeabedee2bbf37d23a",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/websocket/WebSocketProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocketProcessor.java b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocketProcessor.java\nindex 6b39359..b9340dc 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocketProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocketProcessor.java\n@@ -116,7 +116,7 @@\n \n         webSocketProtocol.onOpen(webSocket);\n \n-        if (webSocket.resource().getAtmosphereResourceEvent().isSuspended()) {\n+        if (!webSocket.resource().getAtmosphereResourceEvent().isSuspended()) {\n             webSocketProtocol.onError(webSocket, new WebSocketException(\"No AtmosphereResource has been suspended. The WebSocket will be closed.\", wsr));\n         }\n     }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 119,
        "bugNodeStartChar": 5249,
        "bugNodeLength": 63,
        "fixLineNum": 119,
        "fixNodeStartChar": 5249,
        "fixNodeLength": 64,
        "sourceBeforeFix": "webSocket.resource().getAtmosphereResourceEvent().isSuspended()",
        "sourceAfterFix": "!webSocket.resource().getAtmosphereResourceEvent().isSuspended()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "ae9233fffeff545d037c55373eeeed5d4f7577a2",
        "fixCommitParentSHA1": "8ce1d49a45ecf2a8aec0f8815b30c8ef7776cb8b",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\nindex 7cb4aab..87f500e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\n+++ b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java\n@@ -292,7 +292,7 @@\n                 throw new HazelcastException(e);\n             }\n         }\n-        if (list.isEmpty()){\n+        if (!list.isEmpty()){\n             getItemQueue().addAll(list);\n             cancelEvictionIfExists();\n         }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 295,
        "bugNodeStartChar": 9750,
        "bugNodeLength": 14,
        "fixLineNum": 295,
        "fixNodeStartChar": 9750,
        "fixNodeLength": 15,
        "sourceBeforeFix": "list.isEmpty()",
        "sourceAfterFix": "!list.isEmpty()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "d7b19bfc78039804e5460a01e6d5939d2f4ce5f7",
        "fixCommitParentSHA1": "3dc1389f687b886d6c2cff0acdb1dcac0bc8a57c",
        "bugFilePath": "shell/src/main/java/tachyon/shell/TFsShell.java",
        "fixPatch": "diff --git a/shell/src/main/java/tachyon/shell/TFsShell.java b/shell/src/main/java/tachyon/shell/TFsShell.java\nindex 0f44ed0..76a4aec 100644\n--- a/shell/src/main/java/tachyon/shell/TFsShell.java\n+++ b/shell/src/main/java/tachyon/shell/TFsShell.java\n@@ -497,7 +497,7 @@\n    */\n   public int mkdir(TachyonURI path) {\n     try {\n-      mTfs.mkdirs(path);\n+      mTfs.mkdirs(path, true);\n       System.out.println(\"Successfully created directory \" + path);\n       return 0;\n     } catch (IOException ioe) {\n@@ -717,7 +717,7 @@\n    */\n   public int rmr(TachyonURI path) {\n     try {\n-      mTfs.delete(mTfs.open(path));\n+      mTfs.delete(mTfs.open(path), true);\n       System.out.println(path + \" has been removed\");\n       return 0;\n     } catch (IOException ioe) {\n@@ -932,7 +932,7 @@\n    */\n   public int unpin(TachyonURI path) throws IOException {\n     try {\n-      mTfs.setPin(mTfs.open(path), false);\n+      mTfs.setPin(mTfs.open(path), true);\n       System.out.println(\"File '\" + path + \"' was successfully unpinned.\");\n       return 0;\n     } catch (Exception e) {\n@@ -943,7 +943,8 @@\n   }\n \n   /**\n-   * Free the file or Folder from tachyon in-memory specified by argv\n+   * Free the given file or folder from tachyon in-memory (recursively freeing all children \n+   * if a folder)\n    *\n    * @param path The TachyonURI path as the input of the command\n    * @return 0 if command if successful, -1 if an error occurred.\n@@ -951,7 +952,7 @@\n    */\n   public int free(TachyonURI path) throws IOException {\n     try {\n-      mTfs.free(mTfs.open(path));\n+      mTfs.free(mTfs.open(path), true);\n       System.out.println(path + \" was successfully freed from memory.\");\n       return 0;\n     } catch (InvalidPathException ioe) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 935,
        "bugNodeStartChar": 29525,
        "bugNodeLength": 35,
        "fixLineNum": 935,
        "fixNodeStartChar": 29525,
        "fixNodeLength": 34,
        "sourceBeforeFix": "mTfs.setPin(mTfs.open(path),false)",
        "sourceAfterFix": "mTfs.setPin(mTfs.open(path),true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bd963bca14d8ecd4c2eded3c6354045ebf73d505",
        "fixCommitParentSHA1": "e78a9a703fe213d6fcf35eb5f956e80573ba9881",
        "bugFilePath": "src/jvm/backtype/storm/scheduler/Cluster.java",
        "fixPatch": "diff --git a/src/jvm/backtype/storm/scheduler/Cluster.java b/src/jvm/backtype/storm/scheduler/Cluster.java\nindex b94bfdd..d268831 100644\n--- a/src/jvm/backtype/storm/scheduler/Cluster.java\n+++ b/src/jvm/backtype/storm/scheduler/Cluster.java\n@@ -33,7 +33,7 @@\n         for (String nodeId : supervisors.keySet()) {\n             SupervisorDetails supervisor = supervisors.get(nodeId);\n             String host = supervisor.getHost();\n-            if (!this.supervisors.containsKey(host)) {\n+            if (!this.hostToId.containsKey(host)) {\n                 this.hostToId.put(host, new ArrayList<String>());\n             }\n             this.hostToId.get(host).add(nodeId);\n",
        "projectName": "apache.storm",
        "bugLineNum": 36,
        "bugNodeStartChar": 1255,
        "bugNodeLength": 16,
        "fixLineNum": 36,
        "fixNodeStartChar": 1255,
        "fixNodeLength": 13,
        "sourceBeforeFix": "this.supervisors",
        "sourceAfterFix": "this.hostToId"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0e05cfd1dbe7e423498620c807ac3ff8681688c9",
        "fixCommitParentSHA1": "74c8dcb3875ec066aa9a8f2d736000457bcec9dc",
        "bugFilePath": "PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java",
        "fixPatch": "diff --git a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\nindex bff33e9..1438466 100644\n--- a/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n+++ b/PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java\n@@ -286,16 +286,16 @@\n      */\n     private void completeManagedRenderersListIfNecessary() {\n         if (managedRenderers != null) {\n-            Set<Renderer> existing = new HashSet<Renderer>();\n+            Set<String> existing = new HashSet<String>();\n             for (ManagedRenderer mr : managedRenderers) {\n-                existing.add(mr.getRenderer());\n+                existing.add(mr.getRenderer().getClass().getName());\n             }\n \n             List<ManagedRenderer> completeManagedRenderersList = new ArrayList<ManagedRenderer>();\n             completeManagedRenderersList.addAll(Arrays.asList(managedRenderers));\n \n             for (Renderer renderer : previewController.getRegisteredRenderers()) {\n-                if (!existing.contains(renderer)) {\n+                if (!existing.contains(renderer.getClass().getName())) {\n                     completeManagedRenderersList.add(new ManagedRenderer(renderer, false));\n                 }\n             }\n@@ -336,7 +336,7 @@\n         //Validate no null ManagedRenderers\n         for (int i = 0; i < managedRenderers.length; i++) {\n             if (managedRenderers[i] == null) {\n-                throw new IllegalArgumentException(\"managedRenderers should not contains null values\");\n+                throw new IllegalArgumentException(\"managedRenderers should not contain null values\");\n             }\n         }\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 289,
        "bugNodeStartChar": 10484,
        "bugNodeLength": 13,
        "fixLineNum": 289,
        "fixNodeStartChar": 10484,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Set<Renderer>",
        "sourceAfterFix": "Set<String>"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "40264637f4188e5a9c2eb72632aeb3b9df275eeb",
        "fixCommitParentSHA1": "dd781136c4ecc557ac9c1e22126fed36efa35c25",
        "bugFilePath": "src/jvm/backtype/storm/task/TopologyContext.java",
        "fixPatch": "diff --git a/src/jvm/backtype/storm/task/TopologyContext.java b/src/jvm/backtype/storm/task/TopologyContext.java\nindex 872f8a9..b74e691 100644\n--- a/src/jvm/backtype/storm/task/TopologyContext.java\n+++ b/src/jvm/backtype/storm/task/TopologyContext.java\n@@ -208,7 +208,7 @@\n      * You must call this during IBolt::prepare or ISpout::open.\n      * @return The IMetric argument unchanged.\n      */\n-    public IMetric registerMetric(String name, IMetric metric, int timeBucketSizeInSecs) {\n+    public <T extends IMetric> T registerMetric(String name, T metric, int timeBucketSizeInSecs) {\n         if((Boolean)_openOrPrepareWasCalled.deref() == true) {\n             throw new RuntimeException(\"TopologyContext.registerMetric can only be called from within overridden \" + \n                                        \"IBolt::prepare() or ISpout::open() method.\");\n@@ -237,13 +237,13 @@\n     /*\n      * Convinience method for registering ReducedMetric.\n      */\n-    public IMetric registerMetric(String name, IReducer reducer, int timeBucketSizeInSecs) {\n+    public ReducedMetric registerMetric(String name, IReducer reducer, int timeBucketSizeInSecs) {\n         return registerMetric(name, new ReducedMetric(reducer), timeBucketSizeInSecs);\n     }\n     /*\n      * Convinience method for registering CombinedMetric.\n      */\n-    public IMetric registerMetric(String name, ICombiner combiner, int timeBucketSizeInSecs) {\n+    public CombinedMetric registerMetric(String name, ICombiner combiner, int timeBucketSizeInSecs) {\n         return registerMetric(name, new CombinedMetric(combiner), timeBucketSizeInSecs);\n     }\n }\n\\ No newline at end of file\n",
        "projectName": "apache.storm",
        "bugLineNum": 246,
        "bugNodeStartChar": 9105,
        "bugNodeLength": 185,
        "fixLineNum": 246,
        "fixNodeStartChar": 9105,
        "fixNodeLength": 192,
        "sourceBeforeFix": "public IMetric registerMetric(String name,ICombiner combiner,int timeBucketSizeInSecs){   return registerMetric(name,new CombinedMetric(combiner),timeBucketSizeInSecs); } ",
        "sourceAfterFix": "public CombinedMetric registerMetric(String name,ICombiner combiner,int timeBucketSizeInSecs){   return registerMetric(name,new CombinedMetric(combiner),timeBucketSizeInSecs); } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b8a86c4259cf3d058106ef9c0388a86fae42469f",
        "fixCommitParentSHA1": "1982e95061fe991f2a00979cf97a6edadce04833",
        "bugFilePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java",
        "fixPatch": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\nindex 1739621..1740101 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/TileTest.java\n@@ -1,3 +1,15 @@\n+/*\r\n+ * Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)\r\n+ * \r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the\r\n+ * License. You may obtain a copy of the License at\r\n+ * \r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\"\r\n+ * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language\r\n+ * governing permissions and limitations under the License.\r\n+ */\r\n package com.badlogic.gdx.tests;\r\n \r\n import com.badlogic.gdx.Gdx;\r\n@@ -11,7 +23,7 @@\n import com.badlogic.gdx.tests.utils.GdxTest;\r\n \r\n public class TileTest extends GdxTest {\r\n-\tstatic final int LAYERS = 10;\r\n+\tstatic final int LAYERS = 5;\r\n \tstatic final int BLOCK_TILES = 25;\r\n \tstatic final int WIDTH = 15;\r\n \tstatic final int HEIGHT = 10;\r\n@@ -26,7 +38,7 @@\n \tpublic void create() {\r\n \t\tcam = new OrthographicCamera();\r\n \t\tcam.setViewport(480, 320);\r\n-\t\tcam.getPosition().set(WIDTH*32/2, 10*HEIGHT/2,0);\t\t\r\n+\t\tcam.getPosition().set(WIDTH*32/2, HEIGHT/2,0);\t\t\r\n \t\ttexture = Gdx.graphics.newTexture(Gdx.files.internal(\"data/tiles.png\"), TextureFilter.Nearest, TextureFilter.Nearest, TextureWrap.ClampToEdge, TextureWrap.ClampToEdge);\r\n \t\t\r\n \t\tfor(int i = 0; i < LAYERS; i++) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 14,
        "bugNodeStartChar": 509,
        "bugNodeLength": 11,
        "fixLineNum": 14,
        "fixNodeStartChar": 496,
        "fixNodeLength": 10,
        "sourceBeforeFix": "LAYERS=10",
        "sourceAfterFix": "LAYERS=5"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "24ae29463107c03bc4e2eb6c6c3fc92ecf5612bd",
        "fixCommitParentSHA1": "8b729a206fb93c54a68bda732f3d89eac49774f3",
        "bugFilePath": "tooling/camel-route-parser/src/main/java/org/apache/camel/parser/helper/CamelJavaTreeParserHelper.java",
        "fixPatch": "diff --git a/tooling/camel-route-parser/src/main/java/org/apache/camel/parser/helper/CamelJavaTreeParserHelper.java b/tooling/camel-route-parser/src/main/java/org/apache/camel/parser/helper/CamelJavaTreeParserHelper.java\nindex bce6f44..3d2ff1b 100644\n--- a/tooling/camel-route-parser/src/main/java/org/apache/camel/parser/helper/CamelJavaTreeParserHelper.java\n+++ b/tooling/camel-route-parser/src/main/java/org/apache/camel/parser/helper/CamelJavaTreeParserHelper.java\n@@ -95,7 +95,7 @@\n \n         List<CamelNodeDetails> answer = new ArrayList<>();\n \n-        if (route.getOutputs().isEmpty()) {\n+        if (route.getOutputs() == null || route.getOutputs().isEmpty()) {\n             // okay no routes found\n             return answer;\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 98,
        "bugNodeStartChar": 5087,
        "bugNodeLength": 28,
        "fixLineNum": 98,
        "fixNodeStartChar": 5087,
        "fixNodeLength": 58,
        "sourceBeforeFix": "route.getOutputs().isEmpty()",
        "sourceAfterFix": "route.getOutputs() == null || route.getOutputs().isEmpty()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ddb852cdf7da29827fcab0b25a2b2ed6ee443cf9",
        "fixCommitParentSHA1": "e3890695b8cb92dff1d14b38f2876ee925d9acff",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/RoutingSlip.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/RoutingSlip.java b/camel-core/src/main/java/org/apache/camel/processor/RoutingSlip.java\nindex 641834c..d2d46af 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/RoutingSlip.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/RoutingSlip.java\n@@ -80,9 +80,9 @@\n      * <p/>\n      * This is similar to how multicast processor does.\n      */\n-    static final class PreparedErrorHandler extends KeyValueHolder<RouteContext, Processor> {\n+    static final class PreparedErrorHandler extends KeyValueHolder<String, Processor> {\n \n-        PreparedErrorHandler(RouteContext key, Processor value) {\n+        PreparedErrorHandler(String key, Processor value) {\n             super(key, value);\n         }\n \n@@ -324,7 +324,7 @@\n         return copy;\n     }\n \n-    protected AsyncProcessor createErrorHandler(RouteContext routeContext, Exchange exchange, AsyncProcessor processor) {\n+    protected AsyncProcessor createErrorHandler(RouteContext routeContext, Exchange exchange, AsyncProcessor processor, Endpoint endpoint) {\n         AsyncProcessor answer = processor;\n \n         boolean tryBlock = exchange.getProperty(Exchange.TRY_ROUTE_BLOCK, false, boolean.class);\n@@ -337,7 +337,7 @@\n             // for the entire routingslip/dynamic-router block again which will start from scratch again\n \n             // create key for cache\n-            final PreparedErrorHandler key = new PreparedErrorHandler(routeContext, processor);\n+            final PreparedErrorHandler key = new PreparedErrorHandler(endpoint.getEndpointUri(), processor);\n \n             // lookup cached first to reuse and preserve memory\n             answer = errorHandlers.get(key);\n@@ -379,7 +379,7 @@\n \n                 // rework error handling to support fine grained error handling\n                 RouteContext routeContext = exchange.getUnitOfWork() != null ? exchange.getUnitOfWork().getRouteContext() : null;\n-                asyncProducer = createErrorHandler(routeContext, exchange, asyncProducer);\n+                asyncProducer = createErrorHandler(routeContext, exchange, asyncProducer, endpoint);\n \n                 // set property which endpoint we send to\n                 exchange.setProperty(Exchange.TO_ENDPOINT, endpoint.getEndpointUri());\n",
        "projectName": "apache.camel",
        "bugLineNum": 83,
        "bugNodeStartChar": 3743,
        "bugNodeLength": 39,
        "fixLineNum": 83,
        "fixNodeStartChar": 3743,
        "fixNodeLength": 33,
        "sourceBeforeFix": "KeyValueHolder<RouteContext,Processor>",
        "sourceAfterFix": "KeyValueHolder<String,Processor>"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a0cb51880d250a4db339312a0d1c62e42ffafdf0",
        "fixCommitParentSHA1": "692c2f34409172f07c0e0e4900f65bfdac9ba89e",
        "bugFilePath": "components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java",
        "fixPatch": "diff --git a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\nindex 27ef480..4cd0293 100644\n--- a/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\n+++ b/components/camel-atom/src/test/java/org/apache/camel/component/atom/AtomGoodBlogsTest.java\n@@ -40,7 +40,7 @@\n \n         // First we register a blog service in our bean registry\n         SimpleRegistry registry = new SimpleRegistry();\n-        registry.put(\"blogService\", new BlogService());\n+        registry.bind(\"blogService\", new BlogService());\n \n         // Then we create the camel context with our bean registry\n         context = new DefaultCamelContext(registry);\n",
        "projectName": "apache.camel",
        "bugLineNum": 43,
        "bugNodeStartChar": 1639,
        "bugNodeLength": 46,
        "fixLineNum": 43,
        "fixNodeStartChar": 1639,
        "fixNodeLength": 47,
        "sourceBeforeFix": "registry.put(\"blogService\",new BlogService())",
        "sourceAfterFix": "registry.bind(\"blogService\",new BlogService())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "facd8dc5ca08d45214b47e394b78e59f71d588f5",
        "fixCommitParentSHA1": "60bfc33e9f428859a82c3ca5de0dcca4efa0c5f4",
        "bugFilePath": "cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java",
        "fixPatch": "diff --git a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\nindex 12ab0f9..2365a3e 100644\n--- a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n+++ b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n@@ -66,7 +66,7 @@\n \n         ModelNode request = (ModelNode) ctx.get(\"OP_REQ\");\n         if(request == null) {\n-            throw new CommandFormatException(\"Parsed request isn't available.\");\n+            throw new CommandLineException(\"Parsed request isn't available.\");\n         }\n \n         if(ctx.getConfig().isValidateOperationRequests()) {\n@@ -78,17 +78,17 @@\n             if(Util.isSuccess(result)) {\n                 ctx.printLine(result.toString());\n             } else {\n-                throw new CommandFormatException(result.toString());\n+                throw new CommandLineException(result.toString());\n             }\n         } catch(NoSuchElementException e) {\n-            throw new CommandFormatException(\"ModelNode request is incomplete\", e);\n+            throw new CommandLineException(\"ModelNode request is incomplete\", e);\n         } catch (CancellationException e) {\n-            throw new CommandFormatException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n+            throw new CommandLineException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n         } catch (IOException e) {\n             ctx.disconnectController();\n-            throw new CommandFormatException(\"Communication error\", e);\n+            throw new CommandLineException(\"Communication error\", e);\n         } catch (RuntimeException e) {\n-            throw new CommandFormatException(\"Failed to execute operation.\", e);\n+            throw new CommandLineException(\"Failed to execute operation.\", e);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 91,
        "bugNodeStartChar": 3543,
        "bugNodeLength": 61,
        "fixLineNum": 91,
        "fixNodeStartChar": 3543,
        "fixNodeLength": 59,
        "sourceBeforeFix": "new CommandFormatException(\"Failed to execute operation.\",e)",
        "sourceAfterFix": "new CommandLineException(\"Failed to execute operation.\",e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2763f44d32286938fdd6c5afd58d4a69bc8bce8f",
        "fixCommitParentSHA1": "7a125ec13d5fb4391ec7e460a2c0e1d0be0a6842",
        "bugFilePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\nindex cd6b62a..99f4296 100644\n--- a/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\n+++ b/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGL11.java\n@@ -127,7 +127,7 @@\n \r\n \tpublic void glGenBuffers (int n, int[] buffers, int offset) {\r\n \t\tfor (int i = offset; i < offset + n; i++)\r\n-\t\t\tbuffers[offset] = GL15.glGenBuffers();\r\n+\t\t\tbuffers[i] = GL15.glGenBuffers();\r\n \t}\r\n \r\n \tpublic void glGenBuffers (int n, IntBuffer buffers) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 130,
        "bugNodeStartChar": 4535,
        "bugNodeLength": 15,
        "fixLineNum": 130,
        "fixNodeStartChar": 4406,
        "fixNodeLength": 10,
        "sourceBeforeFix": "buffers[offset]",
        "sourceAfterFix": "buffers[i]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f23520327e887028d3334206f89a7566261d0c83",
        "fixCommitParentSHA1": "ff66b97a3d990452b811eaeb24a9deda00640b4c",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/SharedCamelInternalProcessor.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/SharedCamelInternalProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/SharedCamelInternalProcessor.java\nindex 4f004ef..ab9c3da 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/SharedCamelInternalProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/SharedCamelInternalProcessor.java\n@@ -191,7 +191,7 @@\n             // CAMEL END USER - DEBUG ME HERE +++ END +++\n             // ----------------------------------------------------------\n \n-            ReactiveHelper.scheduleLast(() -> {\n+            ReactiveHelper.schedule(() -> {\n                 // execute any after processor work (in current thread, not in the callback)\n                 if (uow != null) {\n                     uow.afterProcess(processor, exchange, callback, sync);\n",
        "projectName": "apache.camel",
        "bugLineNum": 194,
        "bugNodeStartChar": 9283,
        "bugNodeLength": 625,
        "fixLineNum": 194,
        "fixNodeStartChar": 9283,
        "fixNodeLength": 621,
        "sourceBeforeFix": "ReactiveHelper.scheduleLast(() -> {   if (uow != null) {     uow.afterProcess(processor,exchange,callback,sync);   }   if (LOG.isTraceEnabled()) {     LOG.trace(\"Exchange processed and is continued routed asynchronously for exchangeId: {} -> {}\",exchange.getExchangeId(),exchange);   } } ,\"SharedCamelInternalProcessor - UnitOfWork - afterProcess - \" + processor + \" - \"+ exchange.getExchangeId())",
        "sourceAfterFix": "ReactiveHelper.schedule(() -> {   if (uow != null) {     uow.afterProcess(processor,exchange,callback,sync);   }   if (LOG.isTraceEnabled()) {     LOG.trace(\"Exchange processed and is continued routed asynchronously for exchangeId: {} -> {}\",exchange.getExchangeId(),exchange);   } } ,\"SharedCamelInternalProcessor - UnitOfWork - afterProcess - \" + processor + \" - \"+ exchange.getExchangeId())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "03d70ad6fdf692ec23cf00bfa5b6e9093c77f0b4",
        "fixCommitParentSHA1": "7518a70d01edd99de9ebdc7e8cedefb11b298563",
        "bugFilePath": "presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java",
        "fixPatch": "diff --git a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\nindex 1809500..45dc3ab 100644\n--- a/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n+++ b/presto-verifier/src/main/java/com/facebook/presto/verifier/framework/QueryRewriter.java\n@@ -61,15 +61,15 @@\n {\n     private final SqlParser sqlParser;\n     private final PrestoAction prestoAction;\n-    private final List<Property> tablePropertiesOverride;\n+    private final List<Property> tablePropertyOverrides;\n     private final Map<TargetCluster, QualifiedName> prefixes;\n \n     @Inject\n-    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertiesOverride, VerifierConfig config)\n+    public QueryRewriter(SqlParser sqlParser, PrestoAction prestoAction, List<Property> tablePropertyOverrides, VerifierConfig config)\n     {\n         this.sqlParser = requireNonNull(sqlParser, \"sqlParser is null\");\n         this.prestoAction = requireNonNull(prestoAction, \"prestoAction is null\");\n-        this.tablePropertiesOverride = requireNonNull(tablePropertiesOverride, \"tablePropertiesOverride is null\");\n+        this.tablePropertyOverrides = requireNonNull(tablePropertyOverrides, \"tablePropertyOverrides is null\");\n         this.prefixes = ImmutableMap.of(\n                 CONTROL, config.getControlTablePrefix(),\n                 TEST, config.getTestTablePrefix());\n@@ -93,7 +93,7 @@\n                             temporaryTableName,\n                             createTableAsSelect.getQuery(),\n                             createTableAsSelect.isNotExists(),\n-                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertiesOverride),\n+                            applyPropertyOverride(createTableAsSelect.getProperties(), tablePropertyOverrides),\n                             createTableAsSelect.isWithData(),\n                             createTableAsSelect.getColumnAliases(),\n                             createTableAsSelect.getComment()),\n@@ -110,7 +110,7 @@\n                                     temporaryTableName,\n                                     ImmutableList.of(new LikeClause(originalTableName, Optional.of(INCLUDING))),\n                                     false,\n-                                    tablePropertiesOverride,\n+                                    tablePropertyOverrides,\n                                     Optional.empty())),\n                     new Insert(\n                             temporaryTableName,\n@@ -127,7 +127,7 @@\n                             temporaryTableName,\n                             (Query) statement,\n                             false,\n-                            tablePropertiesOverride,\n+                            tablePropertyOverrides,\n                             true,\n                             Optional.of(generateStorageColumnAliases((Query) statement, controlConfiguration, context)),\n                             Optional.empty()),\n",
        "projectName": "facebook.presto",
        "bugLineNum": 126,
        "bugNodeStartChar": 6278,
        "bugNodeLength": 408,
        "fixLineNum": 126,
        "fixNodeStartChar": 6278,
        "fixNodeLength": 407,
        "sourceBeforeFix": "new CreateTableAsSelect(temporaryTableName,(Query)statement,false,tablePropertiesOverride,true,Optional.of(generateStorageColumnAliases((Query)statement,controlConfiguration,context)),Optional.empty())",
        "sourceAfterFix": "new CreateTableAsSelect(temporaryTableName,(Query)statement,false,tablePropertyOverrides,true,Optional.of(generateStorageColumnAliases((Query)statement,controlConfiguration,context)),Optional.empty())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4f6ba4fe3dd1ab5443020923d14c5e4c379e56ec",
        "fixCommitParentSHA1": "762adfcb69266a7ba1786a966fe371d69a1043fd",
        "bugFilePath": "handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java",
        "fixPatch": "diff --git a/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\nindex db9d62f..d4b8234 100644\n--- a/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\n+++ b/handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java\n@@ -350,7 +350,7 @@\n         void progress() {\n             progress ++;\n             if (promise instanceof ChannelProgressivePromise) {\n-                ((ChannelProgressivePromise) promise).setProgress(progress, -1);\n+                ((ChannelProgressivePromise) promise).tryProgress(progress, -1);\n             }\n         }\n     }\n",
        "projectName": "netty.netty",
        "bugLineNum": 353,
        "bugNodeStartChar": 12870,
        "bugNodeLength": 63,
        "fixLineNum": 353,
        "fixNodeStartChar": 12870,
        "fixNodeLength": 63,
        "sourceBeforeFix": "((ChannelProgressivePromise)promise).setProgress(progress,-1)",
        "sourceAfterFix": "((ChannelProgressivePromise)promise).tryProgress(progress,-1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0ed957ba961cb7b4057fe1372cfc363afead4f1e",
        "fixCommitParentSHA1": "e5298f62da9c8ff2319709bdd35aceef75e97228",
        "bugFilePath": "components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java",
        "fixPatch": "diff --git a/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java b/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java\nindex f715726..e7a8a66 100644\n--- a/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java\n+++ b/components/camel-jpa/src/test/java/org/apache/camel/component/jpa/JpaWithNamedQueryAndParametersTest.java\n@@ -126,7 +126,7 @@\n         Map<String, Object> params = new HashMap<>();\n         params.put(\"custName\", \"Willem\");\n         // bind the params\n-        registry.put(\"params\", params);\n+        registry.bind(\"params\", params);\n         camelContext.setRegistry(registry);\n         \n         template = camelContext.createProducerTemplate();\n",
        "projectName": "apache.camel",
        "bugLineNum": 129,
        "bugNodeStartChar": 5255,
        "bugNodeLength": 30,
        "fixLineNum": 129,
        "fixNodeStartChar": 5255,
        "fixNodeLength": 31,
        "sourceBeforeFix": "registry.put(\"params\",params)",
        "sourceAfterFix": "registry.bind(\"params\",params)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "acc9d3961e1d0d8ebf12269a08566222ec382cf2",
        "fixCommitParentSHA1": "e19a3546c35eefddc429be2c0eb6193b72f719e6",
        "bugFilePath": "bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java b/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\nindex a815be2..341907b 100644\n--- a/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\n+++ b/bundles/binding/org.openhab.binding.nibeheatpump/src/main/java/org/openhab/binding/nibeheatpump/protocol/NibeHeatPumpDataParser.java\n@@ -125,7 +125,7 @@\n \t\tput(43239, new VariableInformation(1,\t\"Total hot water operation time add\",\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43395, new VariableInformation(1,\t\"HPAC relays\",\t\t\t\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none\n \t\tput(43416, new VariableInformation(1,\t\"Compressor starts EB100-EP14\",\t\t\tNibeDataType.S32,\tType.Sensor));   // Unit: none\n-\t\tput(43420, new VariableInformation(10,\t\"Total operation time compressor\",\t\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n+\t\tput(43420, new VariableInformation(1,\t\"Total operation time compressor\",\t\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43424, new VariableInformation(1,\t\"Total hot water operation time compr\",\tNibeDataType.S32,\tType.Sensor));   // Unit: hours\n \t\tput(43427, new VariableInformation(1,\t\"Compressor state EP14\",\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none, // 20 = Stopped, 40 = Starting, 60 = Running, 100 = Stopping \n \t\tput(43514, new VariableInformation(1,\t\"PCA-Base relayes EP14\",\t\t\t\tNibeDataType.U8,\tType.Sensor));   // Unit: none \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 128,
        "bugNodeStartChar": 9753,
        "bugNodeLength": 94,
        "fixLineNum": 128,
        "fixNodeStartChar": 9753,
        "fixNodeLength": 93,
        "sourceBeforeFix": "new VariableInformation(10,\"Total operation time compressor\",NibeDataType.S32,Type.Sensor)",
        "sourceAfterFix": "new VariableInformation(1,\"Total operation time compressor\",NibeDataType.S32,Type.Sensor)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e007ca9e7d3692b65de28d1018d2d7f8228ed112",
        "fixCommitParentSHA1": "53c0b336d7f46bc633ee3bb72663084eb082b6a0",
        "bugFilePath": "components/camel-netty4/src/test/java/org/apache/camel/component/netty4/NettyConsumerClientModeTest.java",
        "fixPatch": "diff --git a/components/camel-netty4/src/test/java/org/apache/camel/component/netty4/NettyConsumerClientModeTest.java b/components/camel-netty4/src/test/java/org/apache/camel/component/netty4/NettyConsumerClientModeTest.java\nindex 88a219c..81632ec 100644\n--- a/components/camel-netty4/src/test/java/org/apache/camel/component/netty4/NettyConsumerClientModeTest.java\n+++ b/components/camel-netty4/src/test/java/org/apache/camel/component/netty4/NettyConsumerClientModeTest.java\n@@ -107,7 +107,7 @@\n         }\n         \n         public void shutdown() {\n-            channel.close();\n+            channel.disconnect();\n             bossGroup.shutdownGracefully();\n             workerGroup.shutdownGracefully();\n         }\n",
        "projectName": "apache.camel",
        "bugLineNum": 110,
        "bugNodeStartChar": 3979,
        "bugNodeLength": 15,
        "fixLineNum": 110,
        "fixNodeStartChar": 3979,
        "fixNodeLength": 20,
        "sourceBeforeFix": "channel.close()",
        "sourceAfterFix": "channel.disconnect()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "9c715f798811f010cdeb0a30a7a35c1d1acb56c9",
        "fixCommitParentSHA1": "b9ddc49c335c883b404f903306ed162360986e5a",
        "bugFilePath": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java",
        "fixPatch": "diff --git a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\nindex 5d4619d..0e06268 100644\n--- a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n+++ b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n@@ -57,7 +57,7 @@\n         Assert.assertEquals(1144, details.get(1).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(1).getLinePosition());\n \n-        Assert.assertEquals(\"netty4-http:http:someserver:80/hello\", details.get(2).getEndpointUri());\n+        Assert.assertEquals(\"netty-http:http:someserver:80/hello\", details.get(2).getEndpointUri());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumber());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumberEnd());\n         Assert.assertEquals(1202, details.get(2).getAbsolutePosition());\n@@ -67,7 +67,7 @@\n         Assert.assertEquals(\"mock:foo?retainFirst=1\", details.get(6).getEndpointUri());\n         Assert.assertEquals(\"45\", details.get(6).getLineNumber());\n         Assert.assertEquals(\"46\", details.get(6).getLineNumberEnd());\n-        Assert.assertEquals(1456, details.get(6).getAbsolutePosition());\n+        Assert.assertEquals(1455, details.get(6).getAbsolutePosition());\n         Assert.assertEquals(17, details.get(6).getLinePosition());\n \n         List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 70,
        "bugNodeStartChar": 3425,
        "bugNodeLength": 63,
        "fixLineNum": 70,
        "fixNodeStartChar": 3425,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Assert.assertEquals(1456,details.get(6).getAbsolutePosition())",
        "sourceAfterFix": "Assert.assertEquals(1455,details.get(6).getAbsolutePosition())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionDeclarationOrderTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionDeclarationOrderTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionDeclarationOrderTest.java\nindex 4db0455..81fe368 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionDeclarationOrderTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionDeclarationOrderTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck;\n \n-public class XpathRegressionDeclarationOrderTest extends AbstractXpathTestSupport {\n+public class XpathRegressionDeclarationOrderTest extends XpathTestSupport {\n \n     @Test\n     public void testOne() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1313,
        "bugNodeLength": 2570,
        "fixLineNum": 31,
        "fixNodeStartChar": 1313,
        "fixNodeLength": 2562,
        "sourceBeforeFix": "public class XpathRegressionDeclarationOrderTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=DeclarationOrderCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionDeclarationOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(DeclarationOrderCheck.class);     final String[] expectedViolation={\"5:5: \" + getCheckMessage(DeclarationOrderCheck.class,DeclarationOrderCheck.MSG_ACCESS)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=DeclarationOrderCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionDeclarationTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(DeclarationOrderCheck.class);     final String[] expectedViolation={\"5:5: \" + getCheckMessage(DeclarationOrderCheck.class,DeclarationOrderCheck.MSG_STATIC)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionDeclarationOrderTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=DeclarationOrderCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionDeclarationOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(DeclarationOrderCheck.class);     final String[] expectedViolation={\"5:5: \" + getCheckMessage(DeclarationOrderCheck.class,DeclarationOrderCheck.MSG_ACCESS)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationOne']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='name']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=DeclarationOrderCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionDeclarationTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(DeclarationOrderCheck.class);     final String[] expectedViolation={\"5:5: \" + getCheckMessage(DeclarationOrderCheck.class,DeclarationOrderCheck.MSG_STATIC)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionDeclarationTwo']\" + \"/OBJBLOCK/VARIABLE_DEF[@text='MAX']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "6b754d327bdb7a778c37543e6ddeb830df851402",
        "fixCommitParentSHA1": "d7a44052b65132cc00368cdd7c231588adab714c",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 58c4727..f494016 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -1631,8 +1631,10 @@\n                 .distinct()\n                 .collect(toImmutableList());\n \n-        // is this an aggregation query?\n-        if (!aggregates.isEmpty() || !allGroupingColumns.isEmpty()) {\n+        // check if:\n+        // - aggregation is present: SELECT SUM(x) FROM table; or\n+        // - group by is present: SELECT ... FROM table GROUP BY category\n+        if (!aggregates.isEmpty() || !groupingSets.isEmpty()) {\n             // ensure SELECT, ORDER BY and HAVING are constant with respect to group\n             // e.g, these are all valid expressions:\n             //     SELECT f(a) GROUP BY a\n",
        "projectName": "facebook.presto",
        "bugLineNum": 1635,
        "bugNodeStartChar": 81106,
        "bugNodeLength": 28,
        "fixLineNum": 1637,
        "fixNodeStartChar": 81226,
        "fixNodeLength": 22,
        "sourceBeforeFix": "allGroupingColumns.isEmpty()",
        "sourceAfterFix": "groupingSets.isEmpty()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e78398ed32106c1c71bc47a1d5058fe3c8e5b9dd",
        "fixCommitParentSHA1": "6c8995d048138d7555d4a03af5a4f57fd3599dce",
        "bugFilePath": "dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java",
        "fixPatch": "diff --git a/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java b/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\nindex ed23f8e..4da6af8 100644\n--- a/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\n+++ b/dex-translator/src/main/java/com/googlecode/dex2jar/v3/LocalCurrect.java\n@@ -95,7 +95,7 @@\n         Type t2 = LocalType.type(e2.op1.value);\r\n         if (t2 == null && e2.op1.value.vt == VT.ARRAY) {\r\n             Type t3 = detectArray((E2Expr) e2.op1.value);\r\n-            if (t3 != null && t3.getSize() == Type.ARRAY) {\r\n+            if (t3 != null && t3.getSort() == Type.ARRAY) {\r\n                 Type t4 = Type.getType(t3.getDescriptor().substring(1));\r\n                 LocalType.type(e2, t4);\r\n                 return t4;\r\n",
        "projectName": "pxb1988.dex2jar",
        "bugLineNum": 98,
        "bugNodeStartChar": 3024,
        "bugNodeLength": 12,
        "fixLineNum": 98,
        "fixNodeStartChar": 2927,
        "fixNodeLength": 12,
        "sourceBeforeFix": "t3.getSize()",
        "sourceAfterFix": "t3.getSort()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 642,
        "bugNodeStartChar": 24632,
        "bugNodeLength": 8,
        "fixLineNum": 642,
        "fixNodeStartChar": 24632,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15866",
        "sourceAfterFix": "id=16513"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "753b2e0167e38ea7698c498651224b118a51619e",
        "fixCommitParentSHA1": "f3e2b639c68bc979c90b1473fb75c399a9b77f69",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/util/EventHelper.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/util/EventHelper.java b/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\nindex bf751ef..50ee5b3 100644\n--- a/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\n+++ b/camel-core/src/main/java/org/apache/camel/util/EventHelper.java\n@@ -818,7 +818,7 @@\n             if (notifier.isDisabled()) {\n                 continue;\n             }\n-            if (notifier.isIgnoreExchangeEvents() || notifier.isIgnoreExchangeSentEvents()) {\n+            if (notifier.isIgnoreExchangeEvents() || notifier.isIgnoreExchangeSendingEvents()) {\n                 continue;\n             }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 821,
        "bugNodeStartChar": 27290,
        "bugNodeLength": 37,
        "fixLineNum": 821,
        "fixNodeStartChar": 27290,
        "fixNodeLength": 40,
        "sourceBeforeFix": "notifier.isIgnoreExchangeSentEvents()",
        "sourceAfterFix": "notifier.isIgnoreExchangeSendingEvents()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "399623fe9ee40f9e692d8b31e58c59f0641aecdd",
        "fixCommitParentSHA1": "77280a624e4fbec76acadb0474c044560867d77a",
        "bugFilePath": "factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java",
        "fixPatch": "diff --git a/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java b/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\nindex 68167c8..0ccbd43 100644\n--- a/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\n+++ b/factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java\n@@ -129,7 +129,7 @@\n             .processedWith(new AutoFactoryProcessor())\n             .failsToCompile()\n             .withErrorContaining(\"AutoFactory does not support generic types\")\n-                .in(file).onLine(6).atColumn(14);\n+                .in(file).onLine(21).atColumn(14);\n   }\n \n   @Test public void providedButNoAutoFactory() {\n",
        "projectName": "google.auto",
        "bugLineNum": 127,
        "bugNodeStartChar": 5121,
        "bugNodeLength": 250,
        "fixLineNum": 127,
        "fixNodeStartChar": 5121,
        "fixNodeLength": 251,
        "sourceBeforeFix": "ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining(\"AutoFactory does not support generic types\").in(file).onLine(6)",
        "sourceAfterFix": "ASSERT.about(javaSource()).that(file).processedWith(new AutoFactoryProcessor()).failsToCompile().withErrorContaining(\"AutoFactory does not support generic types\").in(file).onLine(21)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1c93b2a8d7e7dc8d7a1620c5566e7eb20df8f0ec",
        "fixCommitParentSHA1": "b41598db1c05160ebaf543f4b78dc11fd8c17f88",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/stress/FileAsyncStressReadLockLockFileTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/stress/FileAsyncStressReadLockLockFileTest.java b/camel-core/src/test/java/org/apache/camel/component/file/stress/FileAsyncStressReadLockLockFileTest.java\nindex 58c60e7..39bae9a 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/stress/FileAsyncStressReadLockLockFileTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/stress/FileAsyncStressReadLockLockFileTest.java\n@@ -41,7 +41,7 @@\n                         public void process(Exchange exchange) throws Exception {\n                             // simulate some work with random time to complete\n                             Random ran = new Random();\n-                            int delay = ran.nextInt(500) + 10;\n+                            int delay = ran.nextInt(250) + 10;\n                             Thread.sleep(delay);\n                         }\n                     }).to(\"mock:result\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1937,
        "bugNodeLength": 16,
        "fixLineNum": 44,
        "fixNodeStartChar": 1937,
        "fixNodeLength": 16,
        "sourceBeforeFix": "ran.nextInt(500)",
        "sourceAfterFix": "ran.nextInt(250)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "39c82b017cbbc7239c90e792acd9d0e4efdb44de",
        "fixCommitParentSHA1": "a8dfec5d8afb60252af94ee261509edb24259fd2",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\nindex c4f04cb..c735be1 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java\n@@ -129,7 +129,7 @@\n       rowsRet = work.getLimit() >= 0 ? Math.min(work.getLimit() - totalRows, maxRows) : maxRows;\n     }\n     try {\n-      if (rowsRet <= 0) {\n+      if (rowsRet <= 0 || work.getLimit() == totalRows) {\n         fetch.clearFetchContext();\n         return false;\n       }\n",
        "projectName": "apache.hive",
        "bugLineNum": 132,
        "bugNodeStartChar": 4309,
        "bugNodeLength": 12,
        "fixLineNum": 132,
        "fixNodeStartChar": 4309,
        "fixNodeLength": 44,
        "sourceBeforeFix": "rowsRet <= 0",
        "sourceAfterFix": "rowsRet <= 0 || work.getLimit() == totalRows"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "e21fbe4e606ba215b86ae3beea66edffcc7766ed",
        "fixCommitParentSHA1": "56ea4ceb13b6b3e3cfc9c06e0abcf153de30820f",
        "bugFilePath": "library/src/android/support/v4/app/DialogFragment.java",
        "fixPatch": "diff --git a/library/src/android/support/v4/app/DialogFragment.java b/library/src/android/support/v4/app/DialogFragment.java\nindex a5b89a9..952659d 100644\n--- a/library/src/android/support/v4/app/DialogFragment.java\n+++ b/library/src/android/support/v4/app/DialogFragment.java\n@@ -361,7 +361,7 @@\n         if (!mCancelable) {\n             outState.putBoolean(SAVED_CANCELABLE, mCancelable);\n         }\n-        if (!mShowsDialog) {\n+        if (mShowsDialog) {\n             outState.putBoolean(SAVED_SHOWS_DIALOG, mShowsDialog);\n         }\n         if (mBackStackId != -1) {\n",
        "projectName": "JakeWharton.ActionBarSherlock",
        "bugLineNum": 364,
        "bugNodeStartChar": 13464,
        "bugNodeLength": 13,
        "fixLineNum": 364,
        "fixNodeStartChar": 13464,
        "fixNodeLength": 12,
        "sourceBeforeFix": "!mShowsDialog",
        "sourceAfterFix": "mShowsDialog"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c",
        "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e",
        "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java",
        "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 68,
        "bugNodeStartChar": 2539,
        "bugNodeLength": 23,
        "fixLineNum": 68,
        "fixNodeStartChar": 2539,
        "fixNodeLength": 24,
        "sourceBeforeFix": "nameTextField.getText()",
        "sourceAfterFix": "titleTextField.getText()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3691be4c1f9974b445e682c6d290306700eab602",
        "fixCommitParentSHA1": "38c360dd4f610f9a37b150246b2d92081c8d3135",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\nindex eaaf479..58f9ee7 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/AsynchronousProcessor.java\n@@ -232,7 +232,7 @@\n      * @throws javax.servlet.ServletException\n      */\n     protected AtmosphereHandlerWrapper map(HttpServletRequest req) throws ServletException {\n-        String path = req.getRequestURI();\n+        String path = req.getServletPath() + req.getPathInfo();\n         if (path == null || path.length() == 0) {\n             path = \"/*\";\n         }\n@@ -242,7 +242,7 @@\n             final Map<String, String> m = new HashMap<String, String>();\n             for (Map.Entry<String,AtmosphereHandlerWrapper> e : config.handlers().entrySet()) {\n                 UriTemplate t = new UriTemplate(e.getKey());\n-                logger.trace(\"Trying to map {} to {}\", t, path);\n+                logger.debug(\"Trying to map {} to {}\", t, path);\n                 if (t.match(path, m)) {\n                     atmosphereHandlerWrapper = e.getValue();\n                     logger.trace(\"Mapped {} to {}\", t, e.getValue());\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 245,
        "bugNodeStartChar": 10117,
        "bugNodeLength": 47,
        "fixLineNum": 245,
        "fixNodeStartChar": 10117,
        "fixNodeLength": 47,
        "sourceBeforeFix": "logger.trace(\"Trying to map {} to {}\",t,path)",
        "sourceAfterFix": "logger.debug(\"Trying to map {} to {}\",t,path)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "53694f29adf8c68992e1b966c86380219f438c14",
        "fixCommitParentSHA1": "77e476c1009b4449b5326405b29b2ad8e2aad587",
        "bugFilePath": "components/camel-jsch/src/test/java/org/apache/camel/component/jsch/ScpSimpleProduceTest.java",
        "fixPatch": "diff --git a/components/camel-jsch/src/test/java/org/apache/camel/component/jsch/ScpSimpleProduceTest.java b/components/camel-jsch/src/test/java/org/apache/camel/component/jsch/ScpSimpleProduceTest.java\nindex 5bd1885..803eda2 100644\n--- a/components/camel-jsch/src/test/java/org/apache/camel/component/jsch/ScpSimpleProduceTest.java\n+++ b/components/camel-jsch/src/test/java/org/apache/camel/component/jsch/ScpSimpleProduceTest.java\n@@ -35,7 +35,7 @@\n \n         String uri = getScpUri() + \"?username=admin&password=admin&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Hello World\", Exchange.FILE_NAME, \"hello.txt\");\n-        Thread.sleep(100);\n+        Thread.sleep(200);\n \n         File file = new File(getScpPath() + \"/hello.txt\");\n         assertFileExists(file.getAbsolutePath());\n@@ -48,7 +48,7 @@\n \n         String uri = getScpUri() + \"?username=admin&password=admin&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Bye World\", Exchange.FILE_NAME, \"mysub/bye.txt\");\n-        Thread.sleep(100);\n+        Thread.sleep(200);\n \n         File file = new File(getScpPath() + \"/mysub/bye.txt\");\n         assertFileExists(file.getAbsolutePath());\n@@ -61,7 +61,7 @@\n \n         String uri = getScpUri() + \"?username=admin&password=admin&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Farewell World\", Exchange.FILE_NAME, \"mysub/mysubsub/farewell.txt\");\n-        Thread.sleep(100);\n+        Thread.sleep(200);\n \n         File file = new File(getScpPath() + \"/mysub/mysubsub/farewell.txt\");\n         assertFileExists(file.getAbsolutePath());\n@@ -74,7 +74,7 @@\n \n         String uri = getScpUri() + \"?username=admin&password=admin&chmod=640&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Bonjour Monde\", Exchange.FILE_NAME, \"monde.txt\");\n-        Thread.sleep(100);\n+        Thread.sleep(200);\n \n         File file = new File(getScpPath() + \"/monde.txt\");\n         assertFileExists(file.getAbsolutePath());\n@@ -89,7 +89,7 @@\n \n         String uri = getScpUri() + \"?username=admin&privateKeyFile=src/test/resources/camel-key.priv&privateKeyFilePassphrase=password&knownHostsFile=\" + getKnownHostsFile();\n         template.sendBodyAndHeader(uri, \"Hallo Welt\", Exchange.FILE_NAME, \"welt.txt\");\n-        Thread.sleep(100);\n+        Thread.sleep(200);\n \n         File file = new File(getScpPath() + \"/welt.txt\");\n         assertFileExists(file.getAbsolutePath());\n",
        "projectName": "apache.camel",
        "bugLineNum": 38,
        "bugNodeStartChar": 1429,
        "bugNodeLength": 17,
        "fixLineNum": 38,
        "fixNodeStartChar": 1429,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(100)",
        "sourceAfterFix": "Thread.sleep(200)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 418,
        "bugNodeStartChar": 15576,
        "bugNodeLength": 10,
        "fixLineNum": 418,
        "fixNodeStartChar": 15576,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15864",
        "sourceAfterFix": "id=10864"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e08f74620ba29298d59c97e7327cbe51fbd5b39e",
        "fixCommitParentSHA1": "8a84ebf7df044e0e88c8aaab395dfed236f8aa53",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\nindex 54411d9..9ed55d5 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ClickListener.java\n@@ -38,7 +38,7 @@\n \tprivate int pressedButton = -1;\r\n \tprivate int button;\r\n \tprivate boolean pressed, over, cancelled;\r\n-\tprivate float visualPressedTime;\r\n+\tprivate long visualPressedTime;\r\n \tprivate long tapCountInterval = (long)(0.4f * 1000000000l);\r\n \tprivate int tapCount;\r\n \tprivate long lastTapTime;\r\n@@ -61,7 +61,7 @@\n \t\tpressedButton = button;\r\n \t\ttouchDownX = x;\r\n \t\ttouchDownY = y;\r\n-\t\tvisualPressedTime = TimeUtils.nanoTime() + visualPressedDuration * 1000000000;\r\n+\t\tvisualPressedTime = TimeUtils.millis() + (long)(visualPressedDuration * 1000);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -147,7 +147,7 @@\n \tpublic boolean isVisualPressed () {\r\n \t\tif (pressed) return true;\r\n \t\tif (visualPressedTime <= 0) return false;\r\n-\t\tif (visualPressedTime > TimeUtils.nanoTime() && Gdx.graphics.isContinuousRendering()) return true;\r\n+\t\tif (visualPressedTime > TimeUtils.millis() && Gdx.graphics.isContinuousRendering()) return true;\r\n \t\tvisualPressedTime = 0;\r\n \t\treturn false;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 64,
        "bugNodeStartChar": 2844,
        "bugNodeLength": 20,
        "fixLineNum": 64,
        "fixNodeStartChar": 2781,
        "fixNodeLength": 18,
        "sourceBeforeFix": "TimeUtils.nanoTime()",
        "sourceAfterFix": "TimeUtils.millis()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f37d5613a9b20a315d208d3e78a2c51aa2eca47e",
        "fixCommitParentSHA1": "5c2d9e952736db1b3b2c663a20cad48d8d1b6922",
        "bugFilePath": "src/com/google/javascript/jscomp/deps/JsFileRegexParser.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java b/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\nindex 1102b59..d9f07eb 100644\n--- a/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\n+++ b/src/com/google/javascript/jscomp/deps/JsFileRegexParser.java\n@@ -249,7 +249,14 @@\n     if (provideGoogModuleConflict || provideEs6ModuleConflict || googEs6ModuleConflict) {\n       // TODO(sdh): should this be an error?\n       errorManager.report(\n-          CheckLevel.WARNING, JSError.make(ModuleLoader.MODULE_CONFLICT, file.toString()));\n+          CheckLevel.WARNING,\n+          JSError.make(\n+              file.toString(),\n+              /* lineno= */ -1,\n+              /* charno= */ -1,\n+              ModuleLoader.MODULE_CONFLICT,\n+              file.toString()));\n+\n       return false;\n     }\n \n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 252,
        "bugNodeStartChar": 9738,
        "bugNodeLength": 59,
        "fixLineNum": 253,
        "fixNodeStartChar": 9748,
        "fixNodeLength": 183,
        "sourceBeforeFix": "JSError.make(ModuleLoader.MODULE_CONFLICT,file.toString())",
        "sourceAfterFix": "JSError.make(file.toString(),-1,-1,ModuleLoader.MODULE_CONFLICT,file.toString())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "238869eb9e3d7b02c8a7f0d13459819912ce88d7",
        "fixCommitParentSHA1": "c9507e98af9a904b046642629e027c9866dcc131",
        "bugFilePath": "src/test/java/com/ning/http/client/async/BodyDeferringAsyncHandlerTest.java",
        "fixPatch": "diff --git a/src/test/java/com/ning/http/client/async/BodyDeferringAsyncHandlerTest.java b/src/test/java/com/ning/http/client/async/BodyDeferringAsyncHandlerTest.java\nindex 56a86de..3d79324 100644\n--- a/src/test/java/com/ning/http/client/async/BodyDeferringAsyncHandlerTest.java\n+++ b/src/test/java/com/ning/http/client/async/BodyDeferringAsyncHandlerTest.java\n@@ -157,7 +157,7 @@\n         client.close();\n     }\n \n-    @Test(groups = { \"standalone\", \"default_provider\" }, enabled = false)\n+    @Test(groups = { \"standalone\", \"default_provider\" }, enabled = true)\n     public void deferredSimpleWithFailure() throws IOException,\n             ExecutionException, TimeoutException, InterruptedException {\n         AsyncHttpClient client = getAsyncHttpClient(getAsyncHttpClientConfig());\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 160,
        "bugNodeStartChar": 5979,
        "bugNodeLength": 15,
        "fixLineNum": 160,
        "fixNodeStartChar": 5979,
        "fixNodeLength": 14,
        "sourceBeforeFix": "enabled=false",
        "sourceAfterFix": "enabled=true"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7b16e4b0f1aa1596f4ede7b3a7886591c42bda05",
        "fixCommitParentSHA1": "1b2ba9c660c68beabea9161e00f64774e892676e",
        "bugFilePath": "tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java",
        "fixPatch": "diff --git a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\nindex 141cf15..f922ffb 100644\n--- a/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n+++ b/tests/gdx-tests-android/src/com/badlogic/gdx/tests/android/MatrixTest.java\n@@ -75,7 +75,7 @@\n \tpublic void render () {\r\n \t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\r\n \t\tbatch.begin();\r\n-\t\tfont.drawMultiLine(batch, results, 20, 300);\r\n+\t\tfont.draw(batch, results, 20, 300);\r\n \t\tbatch.end();\r\n \t}\r\n }\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 78,
        "bugNodeStartChar": 2243,
        "bugNodeLength": 43,
        "fixLineNum": 78,
        "fixNodeStartChar": 2166,
        "fixNodeLength": 34,
        "sourceBeforeFix": "font.drawMultiLine(batch,results,20,300)",
        "sourceAfterFix": "font.draw(batch,results,20,300)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "0a71511afb0e94f9b3413ff670953a42be97eeb8",
        "fixCommitParentSHA1": "2fd70293876dc3713cb9deb1c3e1f237336c6b62",
        "bugFilePath": "src/jvm/clojure/lang/ProxyHandler.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/ProxyHandler.java b/src/jvm/clojure/lang/ProxyHandler.java\nindex 2e67d5b..832deef 100644\n--- a/src/jvm/clojure/lang/ProxyHandler.java\n+++ b/src/jvm/clojure/lang/ProxyHandler.java\n@@ -48,7 +48,7 @@\n \t\t\treturn ((Number) ret).floatValue();\n \t\telse if(rt == Double.TYPE)\n \t\t\treturn ((Number) ret).doubleValue();\n-\t\telse if(rt == Boolean.TYPE)\n+\t\telse if(rt == Boolean.TYPE && !(ret instanceof Boolean))\n \t\t\treturn ret == null ? Boolean.FALSE : Boolean.TRUE;\n \t\telse if(rt == Byte.TYPE)\n \t\t\treturn (byte) ((Number) ret).intValue();\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 51,
        "bugNodeStartChar": 1468,
        "bugNodeLength": 18,
        "fixLineNum": 51,
        "fixNodeStartChar": 1468,
        "fixNodeLength": 47,
        "sourceBeforeFix": "rt == Boolean.TYPE",
        "sourceAfterFix": "rt == Boolean.TYPE && !(ret instanceof Boolean)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6e44c2ab7f925356eebe85a007e5d89d2880fef2",
        "fixCommitParentSHA1": "42b4f45a6216a4bad199d03ecd09a9fbdc4b6f65",
        "bugFilePath": "src/com/google/javascript/jscomp/RhinoErrorReporter.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/RhinoErrorReporter.java b/src/com/google/javascript/jscomp/RhinoErrorReporter.java\nindex 772b22b..e56db07 100644\n--- a/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n+++ b/src/com/google/javascript/jscomp/RhinoErrorReporter.java\n@@ -49,7 +49,7 @@\n       DiagnosticType.disabled(\"JSC_JSDOC_MISSING_TYPE_WARNING\", \"{0}\");\n \n   static final DiagnosticType TOO_MANY_TEMPLATE_PARAMS =\n-      DiagnosticType.disabled(\"JSC_TOO_MANY_TEMPLATE_PARAMS\", \"{0}\");\n+      DiagnosticType.error(\"JSC_TOO_MANY_TEMPLATE_PARAMS\", \"{0}\");\n \n   // Special-cased errors, so that they can be configured via the\n   // warnings API.\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 52,
        "bugNodeStartChar": 2018,
        "bugNodeLength": 62,
        "fixLineNum": 52,
        "fixNodeStartChar": 2018,
        "fixNodeLength": 59,
        "sourceBeforeFix": "DiagnosticType.disabled(\"JSC_TOO_MANY_TEMPLATE_PARAMS\",\"{0}\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_TOO_MANY_TEMPLATE_PARAMS\",\"{0}\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0a5f26324cfe4eb39eb48947f11364ec39221fa6",
        "fixCommitParentSHA1": "f1a81618fdd6318df5edded64fbb07e085e10853",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\nindex 3fab7fb..a0b3b54 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java\n@@ -104,7 +104,7 @@\n     CallRunner task = createMockTask();\n     task.setStatus(new MonitoredRPCHandlerImpl());\n     scheduler.dispatch(task);\n-    verify(task, timeout(1000)).run();\n+    verify(task, timeout(10000)).run();\n     scheduler.stop();\n   }\n \n@@ -218,7 +218,7 @@\n       scheduler.dispatch(task);\n     }\n     for (CallRunner task : tasks) {\n-      verify(task, timeout(1000)).run();\n+      verify(task, timeout(10000)).run();\n     }\n     scheduler.stop();\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 107,
        "bugNodeStartChar": 4235,
        "bugNodeLength": 13,
        "fixLineNum": 107,
        "fixNodeStartChar": 4235,
        "fixNodeLength": 14,
        "sourceBeforeFix": "timeout(1000)",
        "sourceAfterFix": "timeout(10000)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "fc13cf7d7843029d807878869e3c64cace5640dd",
        "fixCommitParentSHA1": "efb95a17945cc91aa639396f6f6c528b52c71fcb",
        "bugFilePath": "hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java",
        "fixPatch": "diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\nindex 825d9b1..a3029f8 100644\n--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\n+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java\n@@ -657,7 +657,7 @@\n     }\n \n     @Override\n-    public Cell deepClone() {\n+    public ExtendedCell deepClone() {\n       Cell clonedBaseCell = ((ExtendedCell) this.cell).deepClone();\n       return new TagRewriteCell(clonedBaseCell, this.tags);\n     }\n@@ -838,7 +838,7 @@\n     }\n \n     @Override\n-    public Cell deepClone() {\n+    public ExtendedCell deepClone() {\n       Cell clonedBaseCell = ((ExtendedCell) this.cell).deepClone();\n       if (clonedBaseCell instanceof ByteBufferCell) {\n         return new TagRewriteByteBufferCell((ByteBufferCell) clonedBaseCell, this.tags);\n@@ -981,7 +981,7 @@\n     }\n \n     @Override\n-    public Cell deepClone() {\n+    public ExtendedCell deepClone() {\n       Cell clonedBaseCell = ((ExtendedCell) this.cell).deepClone();\n       return new ValueAndTagRewriteCell(clonedBaseCell, this.value, this.tags);\n     }\n@@ -1047,7 +1047,7 @@\n     }\n \n     @Override\n-    public Cell deepClone() {\n+    public ExtendedCell deepClone() {\n       Cell clonedBaseCell = ((ExtendedCell) this.cell).deepClone();\n       if (clonedBaseCell instanceof ByteBufferCell) {\n         return new ValueAndTagRewriteByteBufferCell((ByteBufferCell) clonedBaseCell, this.value,\n",
        "projectName": "apache.hbase",
        "bugLineNum": 983,
        "bugNodeStartChar": 32393,
        "bugNodeLength": 193,
        "fixLineNum": 983,
        "fixNodeStartChar": 32393,
        "fixNodeLength": 201,
        "sourceBeforeFix": "@Override public Cell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   return new ValueAndTagRewriteCell(clonedBaseCell,this.value,this.tags); } ",
        "sourceAfterFix": "@Override public ExtendedCell deepClone(){   Cell clonedBaseCell=((ExtendedCell)this.cell).deepClone();   return new ValueAndTagRewriteCell(clonedBaseCell,this.value,this.tags); } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "54d7f19cc7befbc0719da2558da6954da6c39b52",
        "fixCommitParentSHA1": "9b205a6bbf60daec684c6b72c5162dd53031c253",
        "bugFilePath": "clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ServiceCommandDispatcher.java",
        "fixPatch": "diff --git a/clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ServiceCommandDispatcher.java b/clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ServiceCommandDispatcher.java\nindex 35ec46b..6ccb326 100644\n--- a/clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ServiceCommandDispatcher.java\n+++ b/clustering/server/src/main/java/org/wildfly/clustering/server/dispatcher/ServiceCommandDispatcher.java\n@@ -202,7 +202,7 @@\n     }\n \n     private RequestOptions createRequestOptions() {\n-        return new RequestOptions(ResponseMode.GET_ALL, this.timeout, false, FILTER, Message.Flag.DONT_BUNDLE);\n+        return new RequestOptions(ResponseMode.GET_ALL, this.timeout, false, FILTER, Message.Flag.DONT_BUNDLE, Message.Flag.OOB);\n     }\n \n     static <R> CommandResponse<R> createCommandResponse(Rsp<R> response) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 205,
        "bugNodeStartChar": 8153,
        "bugNodeLength": 95,
        "fixLineNum": 205,
        "fixNodeStartChar": 8153,
        "fixNodeLength": 113,
        "sourceBeforeFix": "new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE)",
        "sourceAfterFix": "new RequestOptions(ResponseMode.GET_ALL,this.timeout,false,FILTER,Message.Flag.DONT_BUNDLE,Message.Flag.OOB)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "cea872d4e9317601eed60f7fa0a9a831446f41be",
        "fixCommitParentSHA1": "b1ccc153d924a971d2f1303023b969f8c975b238",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/task/ShellBolt.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/task/ShellBolt.java b/storm-core/src/jvm/backtype/storm/task/ShellBolt.java\nindex f34d465..17938dc 100644\n--- a/storm-core/src/jvm/backtype/storm/task/ShellBolt.java\n+++ b/storm-core/src/jvm/backtype/storm/task/ShellBolt.java\n@@ -241,8 +241,8 @@\n \n     private void die(Throwable exception) {\n         _exception = exception;\n-        LOG.info(\"Halting process: ShellBolt died.\", exception);\n+        LOG.error(\"Halting process: ShellBolt died.\", exception);\n         _collector.reportError(exception);\n-        Runtime.getRuntime().halt(11);\n+        System.exit(11);\n     }\n }\n",
        "projectName": "apache.storm",
        "bugLineNum": 244,
        "bugNodeStartChar": 9157,
        "bugNodeLength": 55,
        "fixLineNum": 244,
        "fixNodeStartChar": 9157,
        "fixNodeLength": 56,
        "sourceBeforeFix": "LOG.info(\"Halting process: ShellBolt died.\",exception)",
        "sourceAfterFix": "LOG.error(\"Halting process: ShellBolt died.\",exception)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "8b845392e920d753eb24fcffead0263416bc6227",
        "fixCommitParentSHA1": "4523e54eba2ca7cf4b95aa664daa175fa0ae8185",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/messaging/netty/Client.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java b/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\nindex 08f5d2a..8e66193 100644\n--- a/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\n+++ b/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java\n@@ -317,7 +317,7 @@\n      * If the write operation fails, then we will close the channel and trigger a reconnect.\n      */\n     private void flushMessages(Channel channel, final MessageBatch batch) {\n-        if(batch.isEmpty()){\n+        if(null == batch || batch.isEmpty()){\n             return;\n         }\n \n",
        "projectName": "apache.storm",
        "bugLineNum": 320,
        "bugNodeStartChar": 12469,
        "bugNodeLength": 15,
        "fixLineNum": 320,
        "fixNodeStartChar": 12469,
        "fixNodeLength": 32,
        "sourceBeforeFix": "batch.isEmpty()",
        "sourceAfterFix": "null == batch || batch.isEmpty()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "8264af051e753ff408e860607575178a2d892b7d",
        "fixCommitParentSHA1": "0963b7d8650e29b0b6f2d545f6a09ab930b92736",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex 61c0a9f..0863718 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -712,7 +712,7 @@\n                     int length = lengthWrapper[0];\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(length));\n                     nettyRequest.setContent(ChannelBuffers.wrappedBuffer(bytes, 0, length));\n-                } else if (request.getParams() != null) {\n+                } else if (request.getParams() != null && !request.getParams().isEmpty()) {\n                     StringBuilder sb = new StringBuilder();\n                     for (final Entry<String, List<String>> paramEntry : request.getParams()) {\n                         final String key = paramEntry.getKey();\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 715,
        "bugNodeStartChar": 32765,
        "bugNodeLength": 27,
        "fixLineNum": 715,
        "fixNodeStartChar": 32765,
        "fixNodeLength": 61,
        "sourceBeforeFix": "request.getParams() != null",
        "sourceAfterFix": "request.getParams() != null && !request.getParams().isEmpty()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "626cf14a6e42fa0a2d144e8e16940e09bafd754a",
        "fixCommitParentSHA1": "a95d9c46e2f7bb9bec968f8392ac62ccda6c0283",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\nindex a20e324..3c65cc9 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/ZkWorker.java\n@@ -85,7 +85,7 @@\n     return worker;\n   }\n \n-  @JsonProperty\n+  @JsonProperty(\"runningTasks\")\n   public Map<String, TaskStatus> getRunningTasks()\n   {\n     Map<String, TaskStatus> retVal = Maps.newHashMap();\n@@ -99,8 +99,8 @@\n     return retVal;\n   }\n \n-  @JsonProperty(\"currCapacity\")\n-  public int getCurrCapacity()\n+  @JsonProperty(\"currCapacityUsed\")\n+  public int getCurrCapacityUsed()\n   {\n     int currCapacity = 0;\n     for (TaskStatus taskStatus : getRunningTasks().values()) {\n@@ -132,12 +132,12 @@\n \n   public boolean isAtCapacity()\n   {\n-    return getCurrCapacity() >= worker.getCapacity();\n+    return getCurrCapacityUsed() >= worker.getCapacity();\n   }\n \n   public boolean canRunTask(Task task)\n   {\n-    return (worker.getCapacity() - getCurrCapacity() >= task.getTaskResource().getRequiredCapacity()\n+    return (worker.getCapacity() - getCurrCapacityUsed() >= task.getTaskResource().getRequiredCapacity()\n             && !getAvailabilityGroups().contains(task.getTaskResource().getAvailabilityGroup()));\n   }\n \n",
        "projectName": "druid-io.druid",
        "bugLineNum": 135,
        "bugNodeStartChar": 3981,
        "bugNodeLength": 17,
        "fixLineNum": 135,
        "fixNodeStartChar": 3981,
        "fixNodeLength": 21,
        "sourceBeforeFix": "getCurrCapacity()",
        "sourceAfterFix": "getCurrCapacityUsed()"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "afc1ff8a41848817cb3b3be04bcb5c0a2df41293",
        "fixCommitParentSHA1": "504c611956a5c43c5ce643dbbf5cf53bfb59ffe5",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java b/src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java\nindex 008ec8f..6b70096 100755\n--- a/src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java\n@@ -43,7 +43,7 @@\n             int scale = val.scale();\r\n \r\n             String outText;\r\n-            if (out.isEnabled(SerializerFeature.WriteBigDecimalAsPlain) && scale >= 100 && scale < 100) {\r\n+            if (out.isEnabled(SerializerFeature.WriteBigDecimalAsPlain) && scale >= -100 && scale < 100) {\r\n                 outText = val.toPlainString();\r\n             } else {\r\n                 outText = val.toString();\r\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 46,
        "bugNodeStartChar": 1780,
        "bugNodeLength": 3,
        "fixLineNum": 46,
        "fixNodeStartChar": 1735,
        "fixNodeLength": 4,
        "sourceBeforeFix": "100",
        "sourceAfterFix": "-100"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f",
        "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 74,
        "bugNodeStartChar": 1779,
        "bugNodeLength": 135,
        "fixLineNum": 74,
        "fixNodeStartChar": 1779,
        "fixNodeLength": 131,
        "sourceBeforeFix": "@Override public ResponseImpl headers(Map<String,Property> headers){   throw new RuntimeException(\"Not implemented\"); } ",
        "sourceAfterFix": "@Override public Response headers(Map<String,Property> headers){   throw new RuntimeException(\"Not implemented\"); } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "023faf092faa11ecde2c17cb7ff37b1f09cccce2",
        "fixCommitParentSHA1": "bcae284dd9343be846d7e13ef4792afb0aedbf54",
        "bugFilePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java\nindex 80a439e..20dc615 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfigurationTests.java\n@@ -88,7 +88,7 @@\n \t\t\t\tEmbeddedServletContainerAutoConfiguration.class,\n \t\t\t\tDispatcherServletAutoConfiguration.class, WebMvcAutoConfiguration.class,\n \t\t\t\tManagementServerPropertiesAutoConfiguration.class,\n-\t\t\t\tEndpointWebMvcAutoConfiguration.class);\n+\t\t\t\tEndpointWebMvcAutoConfiguration.class, ErrorMvcAutoConfiguration.class);\n \t\tthis.applicationContext.refresh();\n \t\tassertContent(\"/controller\", 8080, \"controlleroutput\");\n \t\tassertContent(\"/endpoint\", 8080, null);\n@@ -125,7 +125,7 @@\n \t\t\t\tServerPropertiesAutoConfiguration.class,\n \t\t\t\tEmbeddedServletContainerAutoConfiguration.class,\n \t\t\t\tDispatcherServletAutoConfiguration.class, WebMvcAutoConfiguration.class,\n-\t\t\t\tEndpointWebMvcAutoConfiguration.class);\n+\t\t\t\tEndpointWebMvcAutoConfiguration.class, ErrorMvcAutoConfiguration.class);\n \t\tthis.applicationContext.refresh();\n \t\tassertContent(\"/controller\", 7070, \"controlleroutput\");\n \t\tassertContent(\"/endpoint\", 7070, null);\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 86,
        "bugNodeStartChar": 3424,
        "bugNodeLength": 353,
        "fixLineNum": 86,
        "fixNodeStartChar": 3424,
        "fixNodeLength": 386,
        "sourceBeforeFix": "this.applicationContext.register(RootConfig.class,DifferentPortConfig.class,PropertyPlaceholderAutoConfiguration.class,EmbeddedServletContainerAutoConfiguration.class,DispatcherServletAutoConfiguration.class,WebMvcAutoConfiguration.class,ManagementServerPropertiesAutoConfiguration.class,EndpointWebMvcAutoConfiguration.class)",
        "sourceAfterFix": "this.applicationContext.register(RootConfig.class,DifferentPortConfig.class,PropertyPlaceholderAutoConfiguration.class,EmbeddedServletContainerAutoConfiguration.class,DispatcherServletAutoConfiguration.class,WebMvcAutoConfiguration.class,ManagementServerPropertiesAutoConfiguration.class,EndpointWebMvcAutoConfiguration.class,ErrorMvcAutoConfiguration.class)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "ea891b1fd030f0e7442611ed4c3c81893124712b",
        "fixCommitParentSHA1": "ee7d6e9df391945a64c23210cd0fdc1a58fb7d95",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java\nindex 335d581..95cb6d0 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java\n@@ -170,7 +170,7 @@\n         Set<LocalizedMessage> messages = check.process(impossibleFile, Lists.newArrayList(\"txt\"));\n         assertTrue(messages.size() == 1);\n         Iterator<LocalizedMessage> iter = messages.iterator();\n-        assertEquals(iter.next().getMessage(), \"Unable to open ''.\");\n+        assertEquals(\"Unable to open ''.\", iter.next().getMessage());\n     }\n \n     @Test\n@@ -190,10 +190,10 @@\n         catch (InvocationTargetException ex) {\n             assertTrue(ex.getCause() instanceof IOException);\n             if (System.getProperty(\"os.name\").toLowerCase(ENGLISH).startsWith(\"windows\")) {\n-                assertEquals(ex.getCause().getMessage(), \"Unable to read 2 bytes, got 0\");\n+                assertEquals(\"Unable to read 2 bytes, got 0\", ex.getCause().getMessage());\n             }\n             else {\n-                assertEquals(ex.getCause().getMessage(), \"Unable to read 1 bytes, got 0\");\n+                assertEquals(\"Unable to read 1 bytes, got 0\", ex.getCause().getMessage());\n             }\n         }\n     }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 193,
        "bugNodeStartChar": 7891,
        "bugNodeLength": 73,
        "fixLineNum": 193,
        "fixNodeStartChar": 7891,
        "fixNodeLength": 73,
        "sourceBeforeFix": "assertEquals(ex.getCause().getMessage(),\"Unable to read 2 bytes, got 0\")",
        "sourceAfterFix": "assertEquals(\"Unable to read 2 bytes, got 0\",ex.getCause().getMessage())"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "8a9e1bcbff1ff10cf122b23b3a1aa437f02a2086",
        "fixCommitParentSHA1": "b6fc25ba45d751940df624f8af63b7ef156ace83",
        "bugFilePath": "PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java",
        "fixPatch": "diff --git a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\nindex c94de3a..f278275 100644\n--- a/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n+++ b/PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java\n@@ -265,7 +265,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -302,7 +302,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n@@ -339,7 +339,7 @@\n         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();\n \n         String label = sourceEdgeData.getLabel();\n-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {\n             label = sourceEdgeTextData.getText();\n         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {\n             label = null;\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 268,
        "bugNodeStartChar": 10000,
        "bugNodeLength": 38,
        "fixLineNum": 268,
        "fixNodeStartChar": 10000,
        "fixNodeLength": 39,
        "sourceBeforeFix": "sourceEdgeTextData.getText().isEmpty()",
        "sourceAfterFix": "!sourceEdgeTextData.getText().isEmpty()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "cdd2f673c253f0103756957467ee74db81829d98",
        "fixCommitParentSHA1": "30d455ec987b257b704b96428a494c7c9066d9d5",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java b/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\nindex 001c420..7f2abfe 100644\n--- a/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\n+++ b/presto-main/src/main/java/com/facebook/presto/server/PrestoSystemRequirements.java\n@@ -104,7 +104,7 @@\n         }\n \n         JavaVersion version = JavaVersion.parse(javaVersion);\n-        if (version.getMajor() == 8 && version.getUpdate().isPresent() && version.getUpdate().getAsInt() >= 92) {\n+        if (version.getMajor() == 8 && version.getUpdate().isPresent() && version.getUpdate().getAsInt() >= 151) {\n             return;\n         }\n \n@@ -112,7 +112,7 @@\n             return;\n         }\n \n-        failRequirement(\"Presto requires Java 8u92+ (found %s)\", javaVersion);\n+        failRequirement(\"Presto requires Java 8u151+ (found %s)\", javaVersion);\n     }\n \n     private static void verifyUsingG1Gc()\n",
        "projectName": "facebook.presto",
        "bugLineNum": 107,
        "bugNodeStartChar": 3708,
        "bugNodeLength": 36,
        "fixLineNum": 107,
        "fixNodeStartChar": 3708,
        "fixNodeLength": 37,
        "sourceBeforeFix": "version.getUpdate().getAsInt() >= 92",
        "sourceAfterFix": "version.getUpdate().getAsInt() >= 151"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\nindex a964c06..7b69c96 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcConsumer.java\n@@ -71,7 +71,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (server != null) {\n-            LOG.trace(\"Terminating gRPC server\");\n+            LOG.debug(\"Terminating gRPC server\");\n             server.shutdown().shutdownNow();\n             server = null;\n         }\n@@ -93,10 +93,10 @@\n         }\n         \n         if (!ObjectHelper.isEmpty(configuration.getHost()) && !ObjectHelper.isEmpty(configuration.getPort())) {\n-            LOG.info(\"Building gRPC server on \" + configuration.getHost() + \":\" + configuration.getPort());\n+            LOG.debug(\"Building gRPC server on \" + configuration.getHost() + \":\" + configuration.getPort());\n             serverBuilder = NettyServerBuilder.forAddress(new InetSocketAddress(configuration.getHost(), configuration.getPort()));\n         } else if (ObjectHelper.isEmpty(configuration.getHost()) && !ObjectHelper.isEmpty(configuration.getPort())) {\n-            LOG.info(\"Building gRPC server on <any address>\" + \":\" + configuration.getPort());\n+            LOG.debug(\"Building gRPC server on <any address>\" + \":\" + configuration.getPort());\n             serverBuilder = NettyServerBuilder.forPort(configuration.getPort());\n         } else {\n             throw new IllegalArgumentException(\"No server start properties (host, port) specified\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 74,
        "bugNodeStartChar": 2642,
        "bugNodeLength": 36,
        "fixLineNum": 74,
        "fixNodeStartChar": 2642,
        "fixNodeLength": 36,
        "sourceBeforeFix": "LOG.trace(\"Terminating gRPC server\")",
        "sourceAfterFix": "LOG.debug(\"Terminating gRPC server\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4038c28564a0b729932059be31b512fc38b8f184",
        "fixCommitParentSHA1": "26d4a37b1cbe6c1f5fda8f5d5b01bcc274f99142",
        "bugFilePath": "src/test/java/com/ning/http/client/async/RemoteSiteTest.java",
        "fixPatch": "diff --git a/src/test/java/com/ning/http/client/async/RemoteSiteTest.java b/src/test/java/com/ning/http/client/async/RemoteSiteTest.java\nindex 148f839..ebf49b6 100644\n--- a/src/test/java/com/ning/http/client/async/RemoteSiteTest.java\n+++ b/src/test/java/com/ning/http/client/async/RemoteSiteTest.java\n@@ -254,7 +254,7 @@\n             }\n         }).get(10, TimeUnit.SECONDS);\n         assertNotNull(response);\n-        assertEquals(response.getResponseBody().length(), 3876);\n+        assertEquals(response.getResponseBody().length(), 3873);\n     }\n \n }\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 257,
        "bugNodeStartChar": 10221,
        "bugNodeLength": 55,
        "fixLineNum": 257,
        "fixNodeStartChar": 10221,
        "fixNodeLength": 55,
        "sourceBeforeFix": "assertEquals(response.getResponseBody().length(),3876)",
        "sourceAfterFix": "assertEquals(response.getResponseBody().length(),3873)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "19907030d105079fee4fe6db70431f7f6b928149",
        "fixCommitParentSHA1": "75a2ddd61c3df0b7a1e6db1cc5c588177b24c3cf",
        "bugFilePath": "buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java",
        "fixPatch": "diff --git a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\nindex 5cbd676..9cbf069 100644\n--- a/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n+++ b/buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java\n@@ -251,7 +251,8 @@\n             short v = PlatformDependent.getShort(array, index);\n             return BIG_ENDIAN_NATIVE_ORDER ? v : Short.reverseBytes(v);\n         }\n-        return (short) (PlatformDependent.getByte(index) << 8 | PlatformDependent.getByte(index + 1) & 0xff);\n+        return (short) (PlatformDependent.getByte(array, index) << 8 |\n+                PlatformDependent.getByte(array, index + 1) & 0xff);\n     }\n \n     static short getShortLE(byte[] array, int index) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 254,
        "bugNodeStartChar": 11275,
        "bugNodeLength": 32,
        "fixLineNum": 254,
        "fixNodeStartChar": 11275,
        "fixNodeLength": 39,
        "sourceBeforeFix": "PlatformDependent.getByte(index)",
        "sourceAfterFix": "PlatformDependent.getByte(array,index)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "664d66d9373b77995163d37c1391da43b526beb0",
        "fixCommitParentSHA1": "9889de87ac6d3b7c3092e4f95fd67a9a58cdda25",
        "bugFilePath": "tool/src/org/antlr/v4/codegen/model/RuleFunction.java",
        "fixPatch": "diff --git a/tool/src/org/antlr/v4/codegen/model/RuleFunction.java b/tool/src/org/antlr/v4/codegen/model/RuleFunction.java\nindex 01a41e0..466cf05 100644\n--- a/tool/src/org/antlr/v4/codegen/model/RuleFunction.java\n+++ b/tool/src/org/antlr/v4/codegen/model/RuleFunction.java\n@@ -307,13 +307,23 @@\n \t\t * Common\n \t\t */\n \n+\t\t/**\n+\t\t * Generate a frequency set as the union of two input sets. If an\n+\t\t * element is contained in both sets, the value for the output will be\n+\t\t * the maximum of the two input values.\n+\t\t *\n+\t\t * @param a The first set.\n+\t\t * @param b The second set.\n+\t\t * @return The union of the two sets, with the maximum value chosen\n+\t\t * whenever both sets contain the same key.\n+\t\t */\n \t\tprotected static FrequencySet<String> combineMax(FrequencySet<String> a, FrequencySet<String> b) {\n \t\t\tFrequencySet<String> result = combineAndClip(a, b, 1);\n \t\t\tfor (Map.Entry<String, MutableInt> entry : a.entrySet()) {\n \t\t\t\tresult.get(entry.getKey()).v = entry.getValue().v;\n \t\t\t}\n \n-\t\t\tfor (Map.Entry<String, MutableInt> entry : a.entrySet()) {\n+\t\t\tfor (Map.Entry<String, MutableInt> entry : b.entrySet()) {\n \t\t\t\tMutableInt slot = result.get(entry.getKey());\n \t\t\t\tslot.v = Math.max(slot.v, entry.getValue().v);\n \t\t\t}\n@@ -321,6 +331,18 @@\n \t\t\treturn result;\n \t\t}\n \n+\t\t/**\n+\t\t * Generate a frequency set as the union of two input sets, with the\n+\t\t * values clipped to a specified maximum value. If an element is\n+\t\t * contained in both sets, the value for the output, prior to clipping,\n+\t\t * will be the sum of the two input values.\n+\t\t *\n+\t\t * @param a The first set.\n+\t\t * @param b The second set.\n+\t\t * @param clip The maximum value to allow for any output.\n+\t\t * @return The sum of the two sets, with the individual elements clipped\n+\t\t * to the maximum value gived by {@code clip}.\n+\t\t */\n \t\tprotected static FrequencySet<String> combineAndClip(FrequencySet<String> a, FrequencySet<String> b, int clip) {\n \t\t\tFrequencySet<String> result = new FrequencySet<String>();\n \t\t\tfor (Map.Entry<String, MutableInt> entry : a.entrySet()) {\n",
        "projectName": "antlr.antlr4",
        "bugLineNum": 316,
        "bugNodeStartChar": 11666,
        "bugNodeLength": 12,
        "fixLineNum": 316,
        "fixNodeStartChar": 11666,
        "fixNodeLength": 12,
        "sourceBeforeFix": "a.entrySet()",
        "sourceAfterFix": "b.entrySet()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae95d478d3a59cdfd39d7621309f9a00b4b1bfc8",
        "fixCommitParentSHA1": "f8e0767386d08929f289068f44c3336ea02e40ab",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\nindex d8106dc..a6a8ac7 100644\n--- a/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/apache/ApacheAsyncHttpProvider.java\n@@ -375,7 +375,7 @@\n         } else if (config.getUserAgent() != null) {\n             method.setRequestHeader(\"User-Agent\", config.getUserAgent());\n         } else {\n-            method.setRequestHeader(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(NettyAsyncHttpProvider.class));\n+            method.setRequestHeader(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(ApacheAsyncHttpProvider.class));\n         }\n \n         if (config.isCompressionEnabled()) {\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 378,
        "bugNodeStartChar": 18573,
        "bugNodeLength": 28,
        "fixLineNum": 378,
        "fixNodeStartChar": 18573,
        "fixNodeLength": 29,
        "sourceBeforeFix": "NettyAsyncHttpProvider.class",
        "sourceAfterFix": "ApacheAsyncHttpProvider.class"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "ff0c12880d6a3d3ee0b34787e7a2028e174cd788",
        "fixCommitParentSHA1": "e7fddb1fdc55c5b8b9dbfee38857016587c85701",
        "bugFilePath": "modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java",
        "fixPatch": "diff --git a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\nindex 78682d5..b0603d6 100644\n--- a/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n+++ b/modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java\n@@ -152,7 +152,7 @@\n                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);\n                 if (ac.canChangeColumnData(column)) {\n                     //Editable column, provide \"set\" method:\n-                    if (propEditor != null) {//The type can be edited by default:\n+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:\n                         p = new PropertySupport.Reflection(wrap, type, \"getValue\" + type.getSimpleName(), \"setValue\" + type.getSimpleName());\n                     } else {//Use the AttributeType as String:\n                         p = new PropertySupport.Reflection(wrap, String.class, \"getValueAsString\", \"setValueAsString\");\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 155,
        "bugNodeStartChar": 6128,
        "bugNodeLength": 18,
        "fixLineNum": 155,
        "fixNodeStartChar": 6128,
        "fixNodeLength": 37,
        "sourceBeforeFix": "propEditor != null",
        "sourceAfterFix": "propEditor != null && !type.isArray()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e7bf415427b37bbc760ff9b9c69650db8ec477e4",
        "fixCommitParentSHA1": "69fcae6b44cb9443bd970f89f7215258d6092bcc",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\nindex 250e3ac..ceafa9d 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n@@ -153,7 +153,7 @@\n \t@Configuration\n \t@ConditionalOnClass(JdbcTemplate.class)\n \t@ConditionalOnBean(DataSource.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"db\")\n+\t@ConditionalOnEnabledHealthIndicator(\"db\")\n \tpublic static class DataSourcesHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<DataSourceHealthIndicator, DataSource>\n \t\t\timplements InitializingBean {\n@@ -193,7 +193,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(MongoTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mongo\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mongo\")\n \tpublic static class MongoHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<MongoHealthIndicator, MongoTemplate> {\n \n@@ -210,7 +210,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RedisConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"redis\")\n+\t@ConditionalOnEnabledHealthIndicator(\"redis\")\n \tpublic static class RedisHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<RedisHealthIndicator, RedisConnectionFactory> {\n@@ -228,7 +228,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RabbitTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"rabbit\")\n+\t@ConditionalOnEnabledHealthIndicator(\"rabbit\")\n \tpublic static class RabbitHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<RabbitHealthIndicator, RabbitTemplate> {\n \n@@ -245,7 +245,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(SolrServer.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"solr\")\n+\t@ConditionalOnEnabledHealthIndicator(\"solr\")\n \tpublic static class SolrHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<SolrHealthIndicator, SolrServer> {\n \n@@ -261,7 +261,7 @@\n \t}\n \n \t@Configuration\n-\t@ConditionalOnEnablednHealthIndicator(\"diskspace\")\n+\t@ConditionalOnEnabledHealthIndicator(\"diskspace\")\n \tpublic static class DiskSpaceHealthIndicatorConfiguration {\n \n \t\t@Bean\n@@ -280,7 +280,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {\n@@ -298,7 +298,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(ConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"jms\")\n+\t@ConditionalOnEnabledHealthIndicator(\"jms\")\n \tpublic static class JmsHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<JmsHealthIndicator, ConnectionFactory> {\n \n@@ -315,7 +315,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(Client.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"elasticsearch\")\n+\t@ConditionalOnEnabledHealthIndicator(\"elasticsearch\")\n \t@EnableConfigurationProperties(ElasticsearchHealthIndicatorProperties.class)\n \tpublic static class ElasticsearchHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<ElasticsearchHealthIndicator, Client> {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 196,
        "bugNodeStartChar": 8319,
        "bugNodeLength": 46,
        "fixLineNum": 196,
        "fixNodeStartChar": 8319,
        "fixNodeLength": 45,
        "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"mongo\")",
        "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"mongo\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "7b6d887302ff951e04e9df4d907f6c7dfca608fb",
        "fixCommitParentSHA1": "0d62f9d2e47cc960422ca39070b116b3783ea750",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\nindex f06ddc8..649b193 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterDefinition.java\n@@ -103,12 +103,12 @@\n         final DescriptionProvider readProxiesInfoConfiguration = new DefaultOperationDescriptionProvider(CommonAttributes.READ_PROXIES_CONFIGURATION, rootResolver);\n         registration.registerOperationHandler(CommonAttributes.READ_PROXIES_CONFIGURATION, ModClusterGetProxyConfiguration.INSTANCE, readProxiesInfoConfiguration, false, runtimeOnlyFlags);\n \n-        //These seem to be modifying the state so don't add the runtimeOnly stuff for now\n+        // add/remove a proxy from the proxy-list (it is not persisted operation).\n         final DescriptionProvider addProxy = new DefaultOperationDescriptionProvider(CommonAttributes.ADD_PROXY, rootResolver, HOST, PORT);\n-        registration.registerOperationHandler(CommonAttributes.ADD_PROXY, ModClusterAddProxy.INSTANCE, addProxy, false);\n+        registration.registerOperationHandler(CommonAttributes.ADD_PROXY, ModClusterAddProxy.INSTANCE, addProxy, false, runtimeOnlyFlags);\n \n         final DescriptionProvider removeProxy = new DefaultOperationDescriptionProvider(CommonAttributes.REMOVE_PROXY, rootResolver, HOST, PORT);\n-        registration.registerOperationHandler(CommonAttributes.REMOVE_PROXY, ModClusterRemoveProxy.INSTANCE, removeProxy, false);\n+        registration.registerOperationHandler(CommonAttributes.REMOVE_PROXY, ModClusterRemoveProxy.INSTANCE, removeProxy, false, runtimeOnlyFlags);\n \n         // node related operations.\n         final DescriptionProvider refresh = new DefaultOperationDescriptionProvider(CommonAttributes.REFRESH, rootResolver);\n@@ -119,23 +119,23 @@\n \n         // node (all contexts) related operations.\n         final DescriptionProvider enable = new DefaultOperationDescriptionProvider(CommonAttributes.ENABLE, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.ENABLE, ModClusterEnable.INSTANCE, enable, false);\n+        registration.registerOperationHandler(CommonAttributes.ENABLE, ModClusterEnable.INSTANCE, enable, false, runtimeOnlyFlags);\n \n         final DescriptionProvider disable = new DefaultOperationDescriptionProvider(CommonAttributes.DISABLE, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.DISABLE, ModClusterDisable.INSTANCE, disable, false);\n+        registration.registerOperationHandler(CommonAttributes.DISABLE, ModClusterDisable.INSTANCE, disable, false, runtimeOnlyFlags);\n \n         final DescriptionProvider stop = new DefaultOperationDescriptionProvider(CommonAttributes.STOP, rootResolver);\n-        registration.registerOperationHandler(CommonAttributes.STOP, ModClusterStop.INSTANCE, stop, false);\n+        registration.registerOperationHandler(CommonAttributes.STOP, ModClusterStop.INSTANCE, stop, false, runtimeOnlyFlags);\n \n         // Context related operations.\n         final DescriptionProvider enableContext = new DefaultOperationDescriptionProvider(CommonAttributes.ENABLE_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT);\n-        registration.registerOperationHandler(CommonAttributes.ENABLE_CONTEXT, ModClusterEnableContext.INSTANCE, enableContext, false);\n+        registration.registerOperationHandler(CommonAttributes.ENABLE_CONTEXT, ModClusterEnableContext.INSTANCE, enableContext, false, runtimeOnlyFlags);\n \n         final DescriptionProvider disableContext = new DefaultOperationDescriptionProvider(CommonAttributes.DISABLE_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT);\n-        registration.registerOperationHandler(CommonAttributes.DISABLE_CONTEXT, ModClusterDisableContext.INSTANCE, disableContext, false);\n+        registration.registerOperationHandler(CommonAttributes.DISABLE_CONTEXT, ModClusterDisableContext.INSTANCE, disableContext, false, runtimeOnlyFlags);\n \n         final DescriptionProvider stopContext = new DefaultOperationDescriptionProvider(CommonAttributes.STOP_CONTEXT, rootResolver, VIRTUAL_HOST, CONTEXT, WAIT_TIME);\n-        registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT, ModClusterStopContext.INSTANCE, stopContext, false);\n+        registration.registerOperationHandler(CommonAttributes.STOP_CONTEXT, ModClusterStopContext.INSTANCE, stopContext, false, runtimeOnlyFlags);\n     }\n \n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 125,
        "bugNodeStartChar": 7048,
        "bugNodeLength": 107,
        "fixLineNum": 125,
        "fixNodeStartChar": 7048,
        "fixNodeLength": 125,
        "sourceBeforeFix": "registration.registerOperationHandler(CommonAttributes.DISABLE,ModClusterDisable.INSTANCE,disable,false)",
        "sourceAfterFix": "registration.registerOperationHandler(CommonAttributes.DISABLE,ModClusterDisable.INSTANCE,disable,false,runtimeOnlyFlags)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6cc0fdc67c2c6f12131ed252473d3c7d77d90cb5",
        "fixCommitParentSHA1": "e0f95b67df087b5bd06fb2be321ddfd1d69b1eac",
        "bugFilePath": "DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java",
        "fixPatch": "diff --git a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\nindex aeb985d..db1e774 100644\n--- a/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n+++ b/DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java\n@@ -271,10 +271,10 @@\n         }\n \n         if (model == null) {\n-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));\n             table.setModel(model);\n         } else {\n-            model.setEdges(graph.getEdges().toArray());\n+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());\n             model.setColumns(columns.toArray(new EdgeDataColumn[0]));\n         }\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 274,
        "bugNodeStartChar": 11890,
        "bugNodeLength": 16,
        "fixLineNum": 274,
        "fixNodeStartChar": 11890,
        "fixNodeLength": 28,
        "sourceBeforeFix": "graph.getEdges()",
        "sourceAfterFix": "graph.getEdgesAndMetaEdges()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6c8e81f8706f6e5f13027ba63fc667f1f0e2b488",
        "fixCommitParentSHA1": "99350a221658e2c446d0f5636d751f00747e8b88",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/context/web/SpringBootServletInitializer.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/context/web/SpringBootServletInitializer.java b/spring-boot/src/main/java/org/springframework/boot/context/web/SpringBootServletInitializer.java\nindex fef93f4..abbe9b2 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/context/web/SpringBootServletInitializer.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/context/web/SpringBootServletInitializer.java\n@@ -85,7 +85,7 @@\n \t\tapplication.contextClass(AnnotationConfigEmbeddedWebApplicationContext.class);\n \t\tapplication = configure(application);\n \t\t// Ensure error pages are registered\n-\t\tapplication.sources(ErrorWrapperEmbeddedServletContainerFactory.class);\n+\t\tapplication.sources(ErrorPageFilter.class);\n \t\treturn (WebApplicationContext) application.run();\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 88,
        "bugNodeStartChar": 3670,
        "bugNodeLength": 49,
        "fixLineNum": 88,
        "fixNodeStartChar": 3670,
        "fixNodeLength": 21,
        "sourceBeforeFix": "ErrorWrapperEmbeddedServletContainerFactory.class",
        "sourceAfterFix": "ErrorPageFilter.class"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "4743cfc38b17ee3f8aa7faf658cd758c0ad3e12e",
        "fixCommitParentSHA1": "37422c2a16aceae32b2a91910405c96b78d65960",
        "bugFilePath": "servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java",
        "fixPatch": "diff --git a/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java b/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\nindex 5df156a..78f0165 100644\n--- a/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\n+++ b/servlet/src/main/java/com/yammer/metrics/reporting/MetricsServlet.java\n@@ -36,10 +36,10 @@\n \t\t\t\t\t\t\t\t\t\t   \"<body>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  <h1>Operational Menu</h1>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  <ul>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{0}\\\">Metrics</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{1}\\\">Ping</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{2}\\\">Threads</a></li>\\n\" +\n-\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{3}\\\">Healthcheck</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{0}{1}\\\">Metrics</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{2}{3}\\\">Ping</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{4}{5}\\\">Threads</a></li>\\n\" +\n+\t\t\t\t\t\t\t\t\t\t   \"    <li><a href=\\\"{6}{7}\\\">Healthcheck</a></li>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"  </ul>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"</body>\\n\" +\n \t\t\t\t\t\t\t\t\t\t   \"</html>\";\n@@ -94,7 +94,7 @@\n \tprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n \t\tfinal String uri = req.getPathInfo();\n \t\tif (uri == null || uri.equals(\"/\")) {\n-\t\t\thandleHome(resp);\n+\t\t\thandleHome(req.getServletPath(), resp);\n \t\t} else if (uri.startsWith(metricsUri)) {\n \t\t\thandleMetrics(req.getParameter(\"class\"), Boolean.parseBoolean(req.getParameter(\"full-samples\")), resp);\n \t\t} else if (uri.equals(pingUri)) {\n@@ -108,12 +108,12 @@\n \t\t}\n \t}\n \n-\tprivate void handleHome(HttpServletResponse resp) throws IOException {\n+\tprivate void handleHome(String path, HttpServletResponse resp) throws IOException {\n \t\tresp.setStatus(HttpServletResponse.SC_OK);\n \t\tresp.setContentType(\"text/html\");\n \n \t\tfinal PrintWriter writer = resp.getWriter();\n-\t\twriter.println(MessageFormat.format(TEMPLATE, metricsUri, pingUri, threadsUri, healthcheckUri));\n+\t\twriter.println(MessageFormat.format(TEMPLATE, path, metricsUri, path, pingUri, path, threadsUri, path, healthcheckUri));\n \t\twriter.close();\n \t}\n \n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 116,
        "bugNodeStartChar": 4593,
        "bugNodeLength": 79,
        "fixLineNum": 116,
        "fixNodeStartChar": 4593,
        "fixNodeLength": 103,
        "sourceBeforeFix": "MessageFormat.format(TEMPLATE,metricsUri,pingUri,threadsUri,healthcheckUri)",
        "sourceAfterFix": "MessageFormat.format(TEMPLATE,path,metricsUri,path,pingUri,path,threadsUri,path,healthcheckUri)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2e3328d3b849d29df6afd79a9d803a2ccb71793d",
        "fixCommitParentSHA1": "c217e41ad5a9ff661fda4b44e539f91af24867b5",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex c1fd2d2..82fc656 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n@@ -1208,7 +1208,7 @@\n                 findPathInPairList(recursiveUFSDeletes, ancestor);\n             while (ancestor != null && ancestorPair != null) {\n               toAdd.add(ancestorPair);\n-              recursiveUFSDeletes.remove(ancestor);\n+              recursiveUFSDeletes.remove(ancestorPair);\n               ancestor = ancestor.getParent();\n               ancestorPair = findPathInPairList(recursiveUFSDeletes, ancestor);\n             }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 1211,
        "bugNodeStartChar": 53782,
        "bugNodeLength": 36,
        "fixLineNum": 1211,
        "fixNodeStartChar": 53782,
        "fixNodeLength": 40,
        "sourceBeforeFix": "recursiveUFSDeletes.remove(ancestor)",
        "sourceAfterFix": "recursiveUFSDeletes.remove(ancestorPair)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2fb0eb51ffad15d396955ab06d0bb30fb0b186bb",
        "fixCommitParentSHA1": "cd3ff6d59d36efc75985f463ba58c586c31a87cd",
        "bugFilePath": "presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java",
        "fixPatch": "diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java b/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\nindex 96ed093..ca888fb 100644\n--- a/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\n+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestAggregationOperator.java\n@@ -107,7 +107,7 @@\n                         DOUBLE_SUM.bind(ImmutableList.of(5), Optional.empty()),\n                         maxVarcharColumn.bind(ImmutableList.of(6), Optional.empty())));\n \n-        MaterializedResult expected = resultBuilder(driverContext.getSession(), BIGINT, BIGINT, DOUBLE, VARCHAR, BIGINT, BIGINT, DOUBLE, VARCHAR)\n+        MaterializedResult expected = resultBuilder(driverContext.getSession(), BIGINT, BIGINT, DOUBLE, VARCHAR, BIGINT, BIGINT, REAL, DOUBLE, VARCHAR)\n                 .row(100L, 4950L, 49.5, \"399\", 100L, 54950L, 44950.0f, 54950.0, \"599\")\n                 .build();\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 110,
        "bugNodeStartChar": 5850,
        "bugNodeLength": 107,
        "fixLineNum": 110,
        "fixNodeStartChar": 5850,
        "fixNodeLength": 113,
        "sourceBeforeFix": "resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,DOUBLE,VARCHAR)",
        "sourceAfterFix": "resultBuilder(driverContext.getSession(),BIGINT,BIGINT,DOUBLE,VARCHAR,BIGINT,BIGINT,REAL,DOUBLE,VARCHAR)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a6e7fb22578c900a5b806d2a429a05d81a722635",
        "fixCommitParentSHA1": "43b6253401d332add7a1755f23e194ad7548459e",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\nindex e67bda4..e773701 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java\n@@ -190,7 +190,7 @@\n \r\n \t/** Sets the position where the sprite will be drawn, relative to its current origin.  */\r\n \tpublic void setOriginBasedPosition (float x, float y) {\r\n-\t\tsetPosition(x - this.originX, y - this.originX);\r\n+\t\tsetPosition(x - this.originX, y - this.originY);\r\n \t}\r\n \r\n \t/** Sets the x position where the sprite will be drawn. If origin, rotation, or scale are changed, it is slightly more efficient\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 193,
        "bugNodeStartChar": 7723,
        "bugNodeLength": 12,
        "fixLineNum": 193,
        "fixNodeStartChar": 7531,
        "fixNodeLength": 12,
        "sourceBeforeFix": "this.originX",
        "sourceAfterFix": "this.originY"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "efa5b54542e6ccd1357433f3ae340e94efdd9f6e",
        "fixCommitParentSHA1": "4a14cfc01b6c06817899290b6d2c5f0849cb44dd",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex b43b4df..5b353c4 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -2031,7 +2031,7 @@\n             transactionalListenerResponses =\n                 MetaStoreListenerNotifier.notifyEvent(transactionalListeners,\n                                                       EventType.DROP_TABLE,\n-                                                      new DropTableEvent(tbl, deleteData, true, this),\n+                                                      new DropTableEvent(tbl, true, deleteData, this),\n                                                       envContext);\n           }\n           success = ms.commitTransaction();\n@@ -2051,7 +2051,7 @@\n         if (!listeners.isEmpty()) {\n           MetaStoreListenerNotifier.notifyEvent(listeners,\n                                                 EventType.DROP_TABLE,\n-                                                new DropTableEvent(tbl, deleteData, success, this),\n+                                                new DropTableEvent(tbl, success, deleteData, this),\n                                                 envContext,\n                                                 transactionalListenerResponses, ms);\n         }\n",
        "projectName": "apache.hive",
        "bugLineNum": 2034,
        "bugNodeStartChar": 79703,
        "bugNodeLength": 47,
        "fixLineNum": 2034,
        "fixNodeStartChar": 79703,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new DropTableEvent(tbl,deleteData,true,this)",
        "sourceAfterFix": "new DropTableEvent(tbl,true,deleteData,this)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "175f9f119e75281a4548a35a9b915cbefe270c30",
        "fixCommitParentSHA1": "58d11953282c324dc36b33f5e4b17dd4b841cd10",
        "bugFilePath": "core/common/src/test/java/alluxio/ConfigurationTest.java",
        "fixPatch": "diff --git a/core/common/src/test/java/alluxio/ConfigurationTest.java b/core/common/src/test/java/alluxio/ConfigurationTest.java\nindex b8af727..e4096cf 100644\n--- a/core/common/src/test/java/alluxio/ConfigurationTest.java\n+++ b/core/common/src/test/java/alluxio/ConfigurationTest.java\n@@ -178,7 +178,7 @@\n     Assert.assertEquals(Constants.SECOND_MS, intValue);\n \n     intValue = sDefaultConfiguration.getInt(Constants.MASTER_WORKER_THREADS_MIN);\n-    Assert.assertEquals(Runtime.getRuntime().availableProcessors(), intValue);\n+    Assert.assertEquals(512, intValue);\n \n     intValue = sDefaultConfiguration.getInt(Constants.MASTER_WORKER_TIMEOUT_MS);\n     Assert.assertEquals(10 * Constants.SECOND_MS, intValue);\n@@ -221,7 +221,7 @@\n     Assert.assertEquals(Constants.SECOND_MS, intValue);\n \n     intValue = sDefaultConfiguration.getInt(Constants.WORKER_WORKER_BLOCK_THREADS_MIN);\n-    Assert.assertEquals(1, intValue);\n+    Assert.assertEquals(256, intValue);\n \n     intValue = sDefaultConfiguration.getInt(Constants.WORKER_SESSION_TIMEOUT_MS);\n     Assert.assertEquals(10 * Constants.SECOND_MS, intValue);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 224,
        "bugNodeStartChar": 8399,
        "bugNodeLength": 32,
        "fixLineNum": 224,
        "fixNodeStartChar": 8399,
        "fixNodeLength": 34,
        "sourceBeforeFix": "Assert.assertEquals(1,intValue)",
        "sourceAfterFix": "Assert.assertEquals(256,intValue)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 550,
        "bugNodeStartChar": 26189,
        "bugNodeLength": 119,
        "fixLineNum": 550,
        "fixNodeStartChar": 26189,
        "fixNodeLength": 119,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null,paging.asPostParameterList(),true))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e7bf415427b37bbc760ff9b9c69650db8ec477e4",
        "fixCommitParentSHA1": "69fcae6b44cb9443bd970f89f7215258d6092bcc",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\nindex 250e3ac..ceafa9d 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java\n@@ -153,7 +153,7 @@\n \t@Configuration\n \t@ConditionalOnClass(JdbcTemplate.class)\n \t@ConditionalOnBean(DataSource.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"db\")\n+\t@ConditionalOnEnabledHealthIndicator(\"db\")\n \tpublic static class DataSourcesHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<DataSourceHealthIndicator, DataSource>\n \t\t\timplements InitializingBean {\n@@ -193,7 +193,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(MongoTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mongo\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mongo\")\n \tpublic static class MongoHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<MongoHealthIndicator, MongoTemplate> {\n \n@@ -210,7 +210,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RedisConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"redis\")\n+\t@ConditionalOnEnabledHealthIndicator(\"redis\")\n \tpublic static class RedisHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<RedisHealthIndicator, RedisConnectionFactory> {\n@@ -228,7 +228,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(RabbitTemplate.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"rabbit\")\n+\t@ConditionalOnEnabledHealthIndicator(\"rabbit\")\n \tpublic static class RabbitHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<RabbitHealthIndicator, RabbitTemplate> {\n \n@@ -245,7 +245,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(SolrServer.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"solr\")\n+\t@ConditionalOnEnabledHealthIndicator(\"solr\")\n \tpublic static class SolrHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<SolrHealthIndicator, SolrServer> {\n \n@@ -261,7 +261,7 @@\n \t}\n \n \t@Configuration\n-\t@ConditionalOnEnablednHealthIndicator(\"diskspace\")\n+\t@ConditionalOnEnabledHealthIndicator(\"diskspace\")\n \tpublic static class DiskSpaceHealthIndicatorConfiguration {\n \n \t\t@Bean\n@@ -280,7 +280,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(JavaMailSenderImpl.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"mail\")\n+\t@ConditionalOnEnabledHealthIndicator(\"mail\")\n \tpublic static class MailHealthIndicatorConfiguration\n \t\t\textends\n \t\t\tCompositeHealthIndicatorConfiguration<MailHealthIndicator, JavaMailSenderImpl> {\n@@ -298,7 +298,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(ConnectionFactory.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"jms\")\n+\t@ConditionalOnEnabledHealthIndicator(\"jms\")\n \tpublic static class JmsHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<JmsHealthIndicator, ConnectionFactory> {\n \n@@ -315,7 +315,7 @@\n \n \t@Configuration\n \t@ConditionalOnBean(Client.class)\n-\t@ConditionalOnEnablednHealthIndicator(\"elasticsearch\")\n+\t@ConditionalOnEnabledHealthIndicator(\"elasticsearch\")\n \t@EnableConfigurationProperties(ElasticsearchHealthIndicatorProperties.class)\n \tpublic static class ElasticsearchHealthIndicatorConfiguration extends\n \t\t\tCompositeHealthIndicatorConfiguration<ElasticsearchHealthIndicator, Client> {\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 264,
        "bugNodeStartChar": 10302,
        "bugNodeLength": 50,
        "fixLineNum": 264,
        "fixNodeStartChar": 10302,
        "fixNodeLength": 49,
        "sourceBeforeFix": "@ConditionalOnEnablednHealthIndicator(\"diskspace\")",
        "sourceAfterFix": "@ConditionalOnEnabledHealthIndicator(\"diskspace\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "594c6ff5541529755a3bef8ca9530d0ac3d5b690",
        "fixCommitParentSHA1": "3775fdcaac370f6cccf6a7a5089bff12b6f28782",
        "bugFilePath": "pact/pact-common/src/main/java/eu/stratosphere/pact/common/type/PactRecord.java",
        "fixPatch": "diff --git a/pact/pact-common/src/main/java/eu/stratosphere/pact/common/type/PactRecord.java b/pact/pact-common/src/main/java/eu/stratosphere/pact/common/type/PactRecord.java\nindex b83e458..0738200 100644\n--- a/pact/pact-common/src/main/java/eu/stratosphere/pact/common/type/PactRecord.java\n+++ b/pact/pact-common/src/main/java/eu/stratosphere/pact/common/type/PactRecord.java\n@@ -643,14 +643,14 @@\n \t\t\t\t// the remainder %8 comes first \n \t\t\t\tint col = numFields - 1;\n \t\t\t\tint mask = 0;\n-\t\t\t\tfor (int i = numFields & 0x7; i >= 0; i--, col--) {\n+\t\t\t\tfor (int i = numFields & 0x7; i > 0; i--, col--) {\n \t\t\t\t\tmask <<= 1;\n \t\t\t\t\tmask |= (offsets[col] != NULL_INDICATOR_OFFSET) ? 0x1 : 0x0;\n \t\t\t\t}\n \t\t\t\tserializer.writeByte(mask);\n \t\t\t\t\n \t\t\t\t// now the eight-bit chunks\n-\t\t\t\tfor (int i = numFields >>> 3; i >= 0; i--) {\n+\t\t\t\tfor (int i = numFields >>> 3; i > 0; i--) {\n \t\t\t\t\tmask = 0;\n \t\t\t\t\tfor (int k = 0; k < 8; k++, col--) {\n \t\t\t\t\t\tmask <<= 1;\n",
        "projectName": "apache.flink",
        "bugLineNum": 646,
        "bugNodeStartChar": 20749,
        "bugNodeLength": 6,
        "fixLineNum": 646,
        "fixNodeStartChar": 20749,
        "fixNodeLength": 5,
        "sourceBeforeFix": "i >= 0",
        "sourceAfterFix": "i > 0"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "9ade53da21a13bf55b876bdccc42d3d674b37642",
        "fixCommitParentSHA1": "aa68d157375db159e026354774d99cad27218c46",
        "bugFilePath": "components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java",
        "fixPatch": "diff --git a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java\nindex 9e0ace6..60c7968 100644\n--- a/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java\n+++ b/components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java\n@@ -64,7 +64,7 @@\n             setHost(value);\n         }\n \n-        if (getProtocol() != null && isIgnoreUriScheme()) {\n+        if (getProtocol() != null && !isIgnoreUriScheme()) {\n             String scheme = uri.getScheme();\n             if (scheme != null) {\n                 setProtocol(scheme);\n",
        "projectName": "apache.camel",
        "bugLineNum": 67,
        "bugNodeStartChar": 2093,
        "bugNodeLength": 19,
        "fixLineNum": 67,
        "fixNodeStartChar": 2093,
        "fixNodeLength": 20,
        "sourceBeforeFix": "isIgnoreUriScheme()",
        "sourceAfterFix": "!isIgnoreUriScheme()"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fa187b882171fc0c6cf049a85bcaae26d2261328",
        "fixCommitParentSHA1": "3f035d80334fc38672916718a7b38b7d9d18f075",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Pools.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Pools.java b/gdx/src/com/badlogic/gdx/utils/Pools.java\nindex 798efe1..043a819 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Pools.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Pools.java\n@@ -51,7 +51,7 @@\n \t\tif (objects == null) throw new IllegalArgumentException(\"objects cannot be null.\");\r\n \t\tfor (int i = 0, n = objects.size; i < n; i++) {\r\n \t\t\tObject object = objects.get(i);\r\n-\t\t\tif (objects == null) continue;\r\n+\t\t\tif (object == null) continue;\r\n \t\t\tReflectionPool pool = typePools.get(object.getClass());\r\n \t\t\tif (pool == null) return; // Ignore freeing an object that was never retained.\r\n \t\t\tpool.free(object);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 54,
        "bugNodeStartChar": 2316,
        "bugNodeLength": 15,
        "fixLineNum": 54,
        "fixNodeStartChar": 2263,
        "fixNodeLength": 14,
        "sourceBeforeFix": "objects == null",
        "sourceAfterFix": "object == null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "dbf099e38ac11b6a5e31791f5ccbbb2511fabbf8",
        "fixCommitParentSHA1": "07c7dd485506b511de206689b0e806f3d8411aab",
        "bugFilePath": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/OpenmrsTestsTest.java b/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\nindex e6b272e..3960806 100644\n--- a/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\n+++ b/api/src/test/java/org/openmrs/OpenmrsTestsTest.java\n@@ -199,7 +199,7 @@\n \t\t\t\tclassName = className.replace(File.separator, \".\");\r\n \t\t\t\t\r\n \t\t\t\t// strip out the beginning (/home/ben/workspace...) up to org.openmrs.\r\n-\t\t\t\tclassName = className.substring(className.indexOf(\"org.openmrs.\"));\r\n+\t\t\t\tclassName = className.substring(className.lastIndexOf(\"org.openmrs.\"));\r\n \t\t\t\t\r\n \t\t\t\ttry {\r\n \t\t\t\t\tClass<?> currentClass = classLoader.loadClass(className);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 202,
        "bugNodeStartChar": 6896,
        "bugNodeLength": 33,
        "fixLineNum": 202,
        "fixNodeStartChar": 6695,
        "fixNodeLength": 37,
        "sourceBeforeFix": "className.indexOf(\"org.openmrs.\")",
        "sourceAfterFix": "className.lastIndexOf(\"org.openmrs.\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a33c7226df1ebd6d0deab62bead9438d9a1ff2ac",
        "fixCommitParentSHA1": "88695264999bd49d16c23e2bbb772ff4b5112b4d",
        "bugFilePath": "nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/ID.java",
        "fixPatch": "diff --git a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/ID.java b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/ID.java\nindex 92e951c..8de82d5 100644\n--- a/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/ID.java\n+++ b/nephele/nephele-common/src/main/java/eu/stratosphere/nephele/io/ID.java\n@@ -75,7 +75,7 @@\n \t\t\treturn;\n \t\t}\n \t\t\n-\t\tSystem.arraycopy(bytes, 0, this.bytes, 0, SIZE);\n+\t\tSystem.arraycopy(src, 0, this.bytes, 0, SIZE);\n \t}\n \n \t/**\n",
        "projectName": "apache.flink",
        "bugLineNum": 78,
        "bugNodeStartChar": 2120,
        "bugNodeLength": 47,
        "fixLineNum": 78,
        "fixNodeStartChar": 2120,
        "fixNodeLength": 45,
        "sourceBeforeFix": "System.arraycopy(bytes,0,this.bytes,0,SIZE)",
        "sourceAfterFix": "System.arraycopy(src,0,this.bytes,0,SIZE)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "292df7f0b637a17c8a6a78b2cf9dbb483bbeb4da",
        "fixCommitParentSHA1": "1435dad364fb6547de60d6f142211ccd6649bd06",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\nindex f3ece18..3c2b618 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheRecordStore.java\n@@ -188,7 +188,7 @@\n         if (isStatisticsEnabled()) {\n             if (isPutSucceed) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n             if (getValue) {\n                 if (oldValueNull) {\n@@ -196,7 +196,7 @@\n                 } else {\n                     statistics.increaseCacheHits(1);\n                 }\n-                statistics.addGetTimeNano(System.nanoTime() - start);\n+                statistics.addGetTimeNanos(System.nanoTime() - start);\n             }\n         }\n     }\n@@ -230,7 +230,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCachePuts(1);\n-            statistics.addPutTimeNano(System.nanoTime() - start);\n+            statistics.addPutTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -252,11 +252,11 @@\n             deleteRecord(key);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCacheRemovals(1);\n-                statistics.addRemoveTimeNano(System.nanoTime() - start);\n+                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -281,7 +281,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n         }\n         return result;\n     }\n@@ -315,7 +315,7 @@\n         }\n         if (result && isStatisticsEnabled()) {\n             statistics.increaseCacheRemovals(1);\n-            statistics.addRemoveTimeNano(System.nanoTime() - start);\n+            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n             if (hitCount == 1) {\n                 statistics.increaseCacheHits(hitCount);\n             } else {\n@@ -357,11 +357,11 @@\n             result = updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result) {\n                 statistics.increaseCachePuts(1);\n                 statistics.increaseCacheHits(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -400,9 +400,9 @@\n         if (isStatisticsEnabled()) {\n             if (result) {\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             }\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (isHit) {\n                 statistics.increaseCacheHits(1);\n             } else {\n@@ -428,11 +428,11 @@\n             updateRecordWithExpiry(key, value, record, localExpiryPolicy, now, false);\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n             if (result != null) {\n                 statistics.increaseCacheHits(1);\n                 statistics.increaseCachePuts(1);\n-                statistics.addPutTimeNano(System.nanoTime() - start);\n+                statistics.addPutTimeNanos(System.nanoTime() - start);\n             } else {\n                 statistics.increaseCacheMisses(1);\n             }\n@@ -587,7 +587,7 @@\n             }\n         }\n         if (isStatisticsEnabled()) {\n-            statistics.addGetTimeNano(System.nanoTime() - start);\n+            statistics.addGetTimeNanos(System.nanoTime() - start);\n         }\n         CacheEntryProcessorEntry entry = new CacheEntryProcessorEntry(key, record, this, now);\n         final Object process = entryProcessor.process(entry, arguments);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 191,
        "bugNodeStartChar": 8183,
        "bugNodeLength": 52,
        "fixLineNum": 191,
        "fixNodeStartChar": 8183,
        "fixNodeLength": 53,
        "sourceBeforeFix": "statistics.addPutTimeNano(System.nanoTime() - start)",
        "sourceAfterFix": "statistics.addPutTimeNanos(System.nanoTime() - start)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "f65bc869273495b405fb0a55d2dc68950381c648",
        "fixCommitParentSHA1": "65645eb24befdb5822a899af0378e63e01a21d30",
        "bugFilePath": "src/main/java/io/vertx/core/impl/DeploymentManager.java",
        "fixPatch": "diff --git a/src/main/java/io/vertx/core/impl/DeploymentManager.java b/src/main/java/io/vertx/core/impl/DeploymentManager.java\nindex 44c8ebd..26f1a18 100644\n--- a/src/main/java/io/vertx/core/impl/DeploymentManager.java\n+++ b/src/main/java/io/vertx/core/impl/DeploymentManager.java\n@@ -669,7 +669,7 @@\n           undeployed = false;\n           log.trace(\"Redeployed ok\");\n         } else {\n-          log.trace(\"Failed to deploy!!\");\n+          log.trace(\"Failed to deploy!!\", res2.cause());\n           broken = true;\n           doStartRedeployTimer();\n         }\n",
        "projectName": "eclipse.vert.x",
        "bugLineNum": 672,
        "bugNodeStartChar": 25047,
        "bugNodeLength": 31,
        "fixLineNum": 672,
        "fixNodeStartChar": 25047,
        "fixNodeLength": 45,
        "sourceBeforeFix": "log.trace(\"Failed to deploy!!\")",
        "sourceAfterFix": "log.trace(\"Failed to deploy!!\",res2.cause())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c3439fb13b3fa16d5e42d0e064065be5ae7462eb",
        "fixCommitParentSHA1": "a9985cbe64988960f30426fd36cbb4487e6d10b4",
        "bugFilePath": "src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\nindex cb35755..8377fbe 100644\n--- a/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n+++ b/src/main/java/com/ning/http/client/SimpleAsyncHttpClient.java\n@@ -407,12 +407,12 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n+        public Builder setMaximumConnectionsPerHost(int defaultMaxConnectionPerHost) {\n             configBuilder.setMaximumConnectionsPerHost(defaultMaxConnectionPerHost);\n             return this;\n         }\n \n-        public DerivedBuilder setConnectionTimeoutInMs(int connectionTimeuot) {\n+        public Builder setConnectionTimeoutInMs(int connectionTimeuot) {\n             configBuilder.setConnectionTimeoutInMs(connectionTimeuot);\n             return this;\n         }\n@@ -427,52 +427,52 @@\n             return this;\n         }\n \n-        public DerivedBuilder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n+        public Builder setMaximumNumberOfRedirects(int maxDefaultRedirects) {\n             configBuilder.setMaximumNumberOfRedirects(maxDefaultRedirects);\n             return this;\n         }\n \n-        public DerivedBuilder setCompressionEnabled(boolean compressionEnabled) {\n+        public Builder setCompressionEnabled(boolean compressionEnabled) {\n             configBuilder.setCompressionEnabled(compressionEnabled);\n             return this;\n         }\n \n-        public DerivedBuilder setUserAgent(String userAgent) {\n+        public Builder setUserAgent(String userAgent) {\n             configBuilder.setUserAgent(userAgent);\n             return this;\n         }\n \n-        public DerivedBuilder setAllowPoolingConnection(boolean allowPoolingConnection) {\n+        public Builder setAllowPoolingConnection(boolean allowPoolingConnection) {\n             configBuilder.setAllowPoolingConnection(allowPoolingConnection);\n             return this;\n         }\n \n-        public DerivedBuilder setScheduledExecutorService(ScheduledExecutorService reaper) {\n+        public Builder setScheduledExecutorService(ScheduledExecutorService reaper) {\n             configBuilder.setScheduledExecutorService(reaper);\n             return this;\n         }\n \n-        public DerivedBuilder setExecutorService(ExecutorService applicationThreadPool) {\n+        public Builder setExecutorService(ExecutorService applicationThreadPool) {\n             configBuilder.setExecutorService(applicationThreadPool);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n+        public Builder setSSLEngineFactory(SSLEngineFactory sslEngineFactory) {\n             configBuilder.setSSLEngineFactory(sslEngineFactory);\n             return this;\n         }\n \n-        public DerivedBuilder setSSLContext(final SSLContext sslContext) {\n+        public Builder setSSLContext(final SSLContext sslContext) {\n             configBuilder.setSSLContext(sslContext);\n             return this;\n         }\n \n-        public DerivedBuilder setRequestCompressionLevel(int requestCompressionLevel) {\n+        public Builder setRequestCompressionLevel(int requestCompressionLevel) {\n             configBuilder.setRequestCompressionLevel(requestCompressionLevel);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmDomain(String domain) {\n+        public Builder setRealmDomain(String domain) {\n             realm().setDomain(domain);\n             return this;\n         }\n@@ -482,27 +482,27 @@\n             return this;\n         }\n \n-        public DerivedBuilder setRealmPassword(String password) {\n+        public Builder setRealmPassword(String password) {\n             realm().setPassword(password);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmScheme(Realm.AuthScheme scheme) {\n+        public Builder setRealmScheme(Realm.AuthScheme scheme) {\n             realm().setScheme(scheme);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmName(String realmName) {\n+        public Builder setRealmName(String realmName) {\n             realm().setRealmName(realmName);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n+        public Builder setRealmUsePreemptiveAuth(boolean usePreemptiveAuth) {\n             realm().setUsePreemptiveAuth(usePreemptiveAuth);\n             return this;\n         }\n \n-        public DerivedBuilder setRealmEnconding(String enc) {\n+        public Builder setRealmEnconding(String enc) {\n             realm().setEnconding(enc);\n             return this;\n         }\n@@ -517,22 +517,22 @@\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPrincipal(String principal) {\n+        public Builder setProxyPrincipal(String principal) {\n             this.proxyPrincipal = principal;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPassword(String password) {\n+        public Builder setProxyPassword(String password) {\n             this.proxyPassword = password;\n             return this;\n         }\n \n-        public DerivedBuilder setProxyPort(int port) {\n+        public Builder setProxyPort(int port) {\n             this.proxyPort = port;\n             return this;\n         }\n         \n-        public DerivedBuilder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n+        public Builder setDefaultThrowableHandler(ThrowableHandler throwableHandler)\n         {\n             this.defaultThrowableHandler = throwableHandler;\n             return this;\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 475,
        "bugNodeStartChar": 18479,
        "bugNodeLength": 127,
        "fixLineNum": 475,
        "fixNodeStartChar": 18479,
        "fixNodeLength": 120,
        "sourceBeforeFix": "public DerivedBuilder setRealmDomain(String domain){   realm().setDomain(domain);   return this; } ",
        "sourceAfterFix": "public Builder setRealmDomain(String domain){   realm().setDomain(domain);   return this; } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4652223dec1e4cd9f9a2978e4a0e6d4086c3b24a",
        "fixCommitParentSHA1": "6e919f70f8b55ae52f74b0992a7ecb89b5e91cf1",
        "bugFilePath": "codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java",
        "fixPatch": "diff --git a/codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java b/codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java\nindex 51cb356..77f98dc 100644\n--- a/codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java\n+++ b/codec-http/src/test/java/io/netty/handler/codec/http/HttpRequestDecoderTest.java\n@@ -86,7 +86,7 @@\n         assertEquals(CONTENT_LENGTH, c.content().readableBytes());\n         assertEquals(\n                 Unpooled.wrappedBuffer(content, content.length - CONTENT_LENGTH, CONTENT_LENGTH),\n-                c.content().readBytes(CONTENT_LENGTH));\n+                c.content().readSlice(CONTENT_LENGTH));\n         c.release();\n \n         assertFalse(channel.finish());\n",
        "projectName": "netty.netty",
        "bugLineNum": 89,
        "bugNodeStartChar": 3685,
        "bugNodeLength": 37,
        "fixLineNum": 89,
        "fixNodeStartChar": 3685,
        "fixNodeLength": 37,
        "sourceBeforeFix": "c.content().readBytes(CONTENT_LENGTH)",
        "sourceAfterFix": "c.content().readSlice(CONTENT_LENGTH)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "89b6af6a05d3c7820afac94137ae105cf800c457",
        "fixCommitParentSHA1": "04ceb4b91f4e66439479406834f42014c5be62ed",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java\nindex b6afbc0..e2df937 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java\n@@ -196,7 +196,7 @@\n     @Override\n     public void beginTree(DetailAST rootAST)\n     {\n-        currentFrame = new FieldFrame(null, true, null, null);\n+        currentFrame = new FieldFrame(null, true, null);\n     }\n \n     @Override\n@@ -234,7 +234,7 @@\n                         && typeMods.branchContains(TokenTypes.LITERAL_STATIC);\n \n         final FieldFrame frame =\n-            new FieldFrame(currentFrame, isStaticInnerType, type,\n+            new FieldFrame(currentFrame, isStaticInnerType,\n                 type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF\n                     ? ast.findFirstToken(TokenTypes.IDENT).getText()\n                     : null\n@@ -558,14 +558,11 @@\n \n         /**\n          * Creates new frame.\n-         * @param staticType is this a static inner type (class or enum).\n          * @param parent parent frame.\n-         * @param frameType frameType derived from {@link TokenTypes}\n+         * @param staticType is this a static inner type (class or enum).\n          * @param frameName name associated with the frame, which can be a\n-         * class or enum name or null if no relevan information is available.\n          */\n-        public FieldFrame(FieldFrame parent, boolean staticType,\n-            Integer frameType, String frameName)\n+        public FieldFrame(FieldFrame parent, boolean staticType, String frameName)\n         {\n             this.parent = parent;\n             this.staticType = staticType;\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 199,
        "bugNodeStartChar": 6490,
        "bugNodeLength": 38,
        "fixLineNum": 199,
        "fixNodeStartChar": 6490,
        "fixNodeLength": 32,
        "sourceBeforeFix": "new FieldFrame(null,true,null,null)",
        "sourceAfterFix": "new FieldFrame(null,true,null)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "70c31b498c5083f9efc1914b679737235826149f",
        "fixCommitParentSHA1": "3cb676a4593b1b6b4426d76a87b16489cf41b336",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\nindex 5ae466d..c206b64 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java\n@@ -156,11 +156,11 @@\n         this.functionManager = functionManager;\n \n         Optional<Duration> totalCpuTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         Optional<Duration> totalScheduledTime = stats.map(s -> new Duration(s.values().stream()\n-                .mapToLong(planNode -> planNode.getPlanNodeCpuTime().toMillis())\n+                .mapToLong(planNode -> planNode.getPlanNodeScheduledTime().toMillis())\n                 .sum(), MILLISECONDS));\n \n         this.representation = new PlanRepresentation(planRoot, types, totalCpuTime, totalScheduledTime);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 159,
        "bugNodeStartChar": 7934,
        "bugNodeLength": 35,
        "fixLineNum": 159,
        "fixNodeStartChar": 7934,
        "fixNodeLength": 29,
        "sourceBeforeFix": "planNode.getPlanNodeScheduledTime()",
        "sourceAfterFix": "planNode.getPlanNodeCpuTime()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "47ac10ca185ef128ccdd055cb83fea5def7428c3",
        "fixCommitParentSHA1": "d4a70d5eea5f6baa5e88529de851136e0675725b",
        "bugFilePath": "store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java",
        "fixPatch": "diff --git a/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java b/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\nindex fb74d5f..6c6d08f 100644\n--- a/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\n+++ b/store/src/main/java/com/alibaba/otter/canal/store/memory/MemoryEventStoreWithBuffer.java\n@@ -435,7 +435,7 @@\n                     if (batchMode.isMemSize()) {\n                         ackMemSize.addAndGet(memsize);\n                         // \u5c1d\u8bd5\u6e05\u7a7abuffer\u4e2d\u7684\u5185\u5b58\uff0c\u5c06ack\u4e4b\u524d\u7684\u5185\u5b58\u5168\u90e8\u91ca\u653e\u6389\n-                        for (long index = sequence + 1; index <= next; index++) {\n+                        for (long index = sequence + 1; index < next; index++) {\n                             entries[getIndex(index)] = null;// \u8bbe\u7f6e\u4e3anull\n                         }\n                     }\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 438,
        "bugNodeStartChar": 16498,
        "bugNodeLength": 13,
        "fixLineNum": 438,
        "fixNodeStartChar": 16498,
        "fixNodeLength": 12,
        "sourceBeforeFix": "index <= next",
        "sourceAfterFix": "index < next"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0bf18ee3843b60bbd95b5d4dac20a1ab505a2f41",
        "fixCommitParentSHA1": "8c07e2d1a96ec1adea9bc06bc86df366368cffa2",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\nindex b54c5b7..7db4ad9 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/DefaultWebSocketProcessor.java\n@@ -643,8 +643,9 @@\n         }\n     }\n \n+    // Highly bogus nased on which I/O layer we are using.\n     private boolean allowedCloseCode(int closeCode) {\n-        return closeCode < 1002 || closeCode > 1004 ? true : false;\n+        return closeCode < 1001 || closeCode > 1004 ? true : false;\n     }\n \n     private void finish(WebSocket webSocket, AtmosphereResource resource, AtmosphereRequest r, AtmosphereResponse s, boolean closeWebSocket) {\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 647,
        "bugNodeStartChar": 30433,
        "bugNodeLength": 16,
        "fixLineNum": 647,
        "fixNodeStartChar": 30433,
        "fixNodeLength": 16,
        "sourceBeforeFix": "closeCode < 1002",
        "sourceAfterFix": "closeCode < 1001"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dbc0ca8d1cb03f2da2c8fc0062e5d4b681fef11a",
        "fixCommitParentSHA1": "d9c72eadecbf3507c6188e9edae3fb8512597ade",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ExecutePacketTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ExecutePacketTest.java b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ExecutePacketTest.java\nindex 2de2c45..1ef72c9 100644\n--- a/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ExecutePacketTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/spi/impl/operationexecutor/classic/ExecutePacketTest.java\n@@ -35,7 +35,7 @@\n \n         final NormalResponse normalResponse = new NormalResponse(null, 1, 0, false);\n         Data data = serializationService.toData(normalResponse);\n-        final Packet packet = new Packet(data, 0, serializationService.getPortableContext());\n+        final Packet packet = new Packet(data, 0);\n         packet.setHeader(Packet.HEADER_RESPONSE);\n         packet.setHeader(Packet.HEADER_OP);\n         executor.execute(packet);\n@@ -56,7 +56,7 @@\n \n         final DummyOperation operation = new DummyOperation(0);\n         Data data = serializationService.toData(operation);\n-        final Packet packet = new Packet(data, operation.getPartitionId(), serializationService.getPortableContext());\n+        final Packet packet = new Packet(data, operation.getPartitionId());\n         packet.setHeader(Packet.HEADER_OP);\n         executor.execute(packet);\n \n@@ -76,7 +76,7 @@\n \n         final DummyOperation operation = new DummyOperation(Operation.GENERIC_PARTITION_ID);\n         Data data = serializationService.toData(operation);\n-        final Packet packet = new Packet(data, operation.getPartitionId(), serializationService.getPortableContext());\n+        final Packet packet = new Packet(data, operation.getPartitionId());\n         packet.setHeader(Packet.HEADER_OP);\n         executor.execute(packet);\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 59,
        "bugNodeStartChar": 2181,
        "bugNodeLength": 87,
        "fixLineNum": 59,
        "fixNodeStartChar": 2181,
        "fixNodeLength": 44,
        "sourceBeforeFix": "new Packet(data,operation.getPartitionId(),serializationService.getPortableContext())",
        "sourceAfterFix": "new Packet(data,operation.getPartitionId())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 101,
        "bugNodeStartChar": 4317,
        "bugNodeLength": 10,
        "fixLineNum": 101,
        "fixNodeStartChar": 4317,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15803",
        "sourceAfterFix": "id=10803"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "facd8dc5ca08d45214b47e394b78e59f71d588f5",
        "fixCommitParentSHA1": "60bfc33e9f428859a82c3ca5de0dcca4efa0c5f4",
        "bugFilePath": "cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java",
        "fixPatch": "diff --git a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\nindex 12ab0f9..2365a3e 100644\n--- a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n+++ b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n@@ -66,7 +66,7 @@\n \n         ModelNode request = (ModelNode) ctx.get(\"OP_REQ\");\n         if(request == null) {\n-            throw new CommandFormatException(\"Parsed request isn't available.\");\n+            throw new CommandLineException(\"Parsed request isn't available.\");\n         }\n \n         if(ctx.getConfig().isValidateOperationRequests()) {\n@@ -78,17 +78,17 @@\n             if(Util.isSuccess(result)) {\n                 ctx.printLine(result.toString());\n             } else {\n-                throw new CommandFormatException(result.toString());\n+                throw new CommandLineException(result.toString());\n             }\n         } catch(NoSuchElementException e) {\n-            throw new CommandFormatException(\"ModelNode request is incomplete\", e);\n+            throw new CommandLineException(\"ModelNode request is incomplete\", e);\n         } catch (CancellationException e) {\n-            throw new CommandFormatException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n+            throw new CommandLineException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n         } catch (IOException e) {\n             ctx.disconnectController();\n-            throw new CommandFormatException(\"Communication error\", e);\n+            throw new CommandLineException(\"Communication error\", e);\n         } catch (RuntimeException e) {\n-            throw new CommandFormatException(\"Failed to execute operation.\", e);\n+            throw new CommandLineException(\"Failed to execute operation.\", e);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 84,
        "bugNodeStartChar": 3113,
        "bugNodeLength": 64,
        "fixLineNum": 84,
        "fixNodeStartChar": 3113,
        "fixNodeLength": 62,
        "sourceBeforeFix": "new CommandFormatException(\"ModelNode request is incomplete\",e)",
        "sourceAfterFix": "new CommandLineException(\"ModelNode request is incomplete\",e)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "f281ead05c3ee771e976e6253685331084ac4c73",
        "fixCommitParentSHA1": "7b1c8a348e695f4427f23784090897effc81784a",
        "bugFilePath": "legacy/web/src/main/java/org/jboss/as/web/WebExtension.java",
        "fixPatch": "diff --git a/legacy/web/src/main/java/org/jboss/as/web/WebExtension.java b/legacy/web/src/main/java/org/jboss/as/web/WebExtension.java\nindex 63ec923..f40f339 100644\n--- a/legacy/web/src/main/java/org/jboss/as/web/WebExtension.java\n+++ b/legacy/web/src/main/java/org/jboss/as/web/WebExtension.java\n@@ -93,10 +93,10 @@\n     private static final String extensionName = \"org.jboss.as.web\";\n \n     static final SensitiveTargetAccessConstraintDefinition WEB_CONNECTOR_CONSTRAINT = new SensitiveTargetAccessConstraintDefinition(\n-            new SensitivityClassification(SUBSYSTEM_NAME, \"web-connector\", true, false, false));\n+            new SensitivityClassification(SUBSYSTEM_NAME, \"web-connector\", false, false, false));\n \n     static final SensitiveTargetAccessConstraintDefinition WEB_VALVE_CONSTRAINT = new SensitiveTargetAccessConstraintDefinition(\n-            new SensitivityClassification(SUBSYSTEM_NAME, \"web-valve\", true, false, false));\n+            new SensitivityClassification(SUBSYSTEM_NAME, \"web-valve\", false, false, false));\n \n     public WebExtension() {\n         super(extensionName, SUBSYSTEM_NAME);\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 99,
        "bugNodeStartChar": 6344,
        "bugNodeLength": 78,
        "fixLineNum": 99,
        "fixNodeStartChar": 6344,
        "fixNodeLength": 79,
        "sourceBeforeFix": "new SensitivityClassification(SUBSYSTEM_NAME,\"web-valve\",true,false,false)",
        "sourceAfterFix": "new SensitivityClassification(SUBSYSTEM_NAME,\"web-valve\",false,false,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8b22663471292a0094c56876160f3266b259e696",
        "fixCommitParentSHA1": "d3a227f45f00aafcf76dc4be0ddb280dbdb745e5",
        "bugFilePath": "domain-controller/src/main/java/org/jboss/as/domain/controller/operations/coordination/DomainFinalResultHandler.java",
        "fixPatch": "diff --git a/domain-controller/src/main/java/org/jboss/as/domain/controller/operations/coordination/DomainFinalResultHandler.java b/domain-controller/src/main/java/org/jboss/as/domain/controller/operations/coordination/DomainFinalResultHandler.java\nindex a981fff..a7b1326 100644\n--- a/domain-controller/src/main/java/org/jboss/as/domain/controller/operations/coordination/DomainFinalResultHandler.java\n+++ b/domain-controller/src/main/java/org/jboss/as/domain/controller/operations/coordination/DomainFinalResultHandler.java\n@@ -174,7 +174,7 @@\n             final String serverGroup = entry.getKey().getServerGroupName();\n             groupNames.add(serverGroup);\n             final String hostName = entry.getKey().getHostName();\n-            final String serverName = entry.getKey().getHostName();\n+            final String serverName = entry.getKey().getServerName();\n             if (!groupToServerMap.containsKey(serverGroup)) {\n                 groupToServerMap.put(serverGroup, new TreeSet<HostServer>());\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 177,
        "bugNodeStartChar": 8702,
        "bugNodeLength": 28,
        "fixLineNum": 177,
        "fixNodeStartChar": 8702,
        "fixNodeLength": 30,
        "sourceBeforeFix": "entry.getKey().getHostName()",
        "sourceAfterFix": "entry.getKey().getServerName()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "781f153ed21f62ab877ebb9e75cdff7330370cc4",
        "fixCommitParentSHA1": "1096ea847536d8e0f3539f4c6e142422a11cfe9e",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/ClientRunnableTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/ClientRunnableTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/ClientRunnableTest.java\nindex 80f592b..5bb7368 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/ClientRunnableTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/ClientRunnableTest.java\n@@ -40,7 +40,7 @@\n         new Thread(new Runnable() {\n             public void run() {\n                 try {\n-                    Thread.sleep(10);\n+                    Thread.sleep(50);\n                     clientRunnable.running = false;\n                     synchronized (clientRunnable.monitor) {\n                         clientRunnable.monitor.wait();\n@@ -52,7 +52,7 @@\n         }).start();\n         clientRunnable.run();\n         assertTrue(counter.get() > 1);\n-        assertTrue(\"Not notified\", latch.await(5, TimeUnit.SECONDS));\n+        assertTrue(\"Not notified\", latch.await(25, TimeUnit.SECONDS));\n     }\n \n     @Test\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 55,
        "bugNodeStartChar": 1901,
        "bugNodeLength": 32,
        "fixLineNum": 55,
        "fixNodeStartChar": 1901,
        "fixNodeLength": 33,
        "sourceBeforeFix": "latch.await(5,TimeUnit.SECONDS)",
        "sourceAfterFix": "latch.await(25,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "58d4d29c049c0bf8314d2c0b00ef133ee68c77e9",
        "fixCommitParentSHA1": "a481dcbd4696e4b1277028ec08b9b781502fb5df",
        "bugFilePath": "bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java b/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\nindex c697033..f815f51 100644\n--- a/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\n+++ b/bundles/binding/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/weather/GetStationsDataResponse.java\n@@ -599,13 +599,13 @@\n             int level = this.rfStatus.intValue();\n             int result;\n \n-            if (level <= RF_STATUS_FULL_SIGNAL) {\n+            if (level < RF_STATUS_FULL_SIGNAL) {\n                 result = 5;\n-            } else if (level <= RF_STATUS_HIGH_SIGNAL) {\n+            } else if (level < RF_STATUS_HIGH_SIGNAL) {\n                 result = 4;\n-            } else if (level <= RF_STATUS_MEDIUM_SIGNAL) {\n+            } else if (level < RF_STATUS_MEDIUM_SIGNAL) {\n                 result = 3;\n-            } else if (level <= RF_STATUS_LOW_SIGNAL) {\n+            } else if (level < RF_STATUS_LOW_SIGNAL) {\n                 result = 2;\n             } else {\n                 result = 1;\n@@ -643,13 +643,13 @@\n \n             int batteryVp = this.batteryVp;\n             int result;\n-            if (batteryVp >= full) {\n+            if (batteryVp > full) {\n                 result = 5;\n-            } else if (batteryVp >= high) {\n+            } else if (batteryVp > high) {\n                 result = 4;\n-            } else if (batteryVp >= medium) {\n+            } else if (batteryVp > medium) {\n                 result = 3;\n-            } else if (batteryVp >= low) {\n+            } else if (batteryVp > low) {\n                 result = 2;\n             } else { /* very low */\n                 result = 1;\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 608,
        "bugNodeStartChar": 16663,
        "bugNodeLength": 29,
        "fixLineNum": 608,
        "fixNodeStartChar": 16663,
        "fixNodeLength": 28,
        "sourceBeforeFix": "level <= RF_STATUS_LOW_SIGNAL",
        "sourceAfterFix": "level < RF_STATUS_LOW_SIGNAL"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 101,
        "bugNodeStartChar": 3227,
        "bugNodeLength": 7,
        "fixLineNum": 101,
        "fixNodeStartChar": 3227,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=27",
        "sourceAfterFix": "id=25"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "43b2fa49ca351c05c453c8cd0eec32ce6277c830",
        "fixCommitParentSHA1": "783fd9c0cca8da433e7eeb81d84b9c4cf07bf2b3",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\nindex f1f5e6a..b182ba1 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java\n@@ -34,7 +34,7 @@\n public class Label extends Widget {\r\n \tprivate LabelStyle style;\r\n \tprivate final TextBounds bounds = new TextBounds();\r\n-\tprivate String text;\r\n+\tprivate CharSequence text;\r\n \tprivate BitmapFontCache cache;\r\n \tprivate float prefWidth, prefHeight;\r\n \tprivate int labelAlign = Align.LEFT;\r\n@@ -46,27 +46,27 @@\n \t\tthis(\"\", skin);\r\n \t}\r\n \r\n-\tpublic Label (String text, Skin skin) {\r\n+\tpublic Label (CharSequence text, Skin skin) {\r\n \t\tthis(text, skin.getStyle(LabelStyle.class), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name from the skin and the specified\r\n \t * color. */\r\n-\tpublic Label (String text, String fontName, Color color, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, Color color, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), color), null);\r\n \t}\r\n \r\n \t/** Creates a label, using a {@link LabelStyle} that has a BitmapFont with the specified name and the specified color from the\r\n \t * skin. */\r\n-\tpublic Label (String text, String fontName, String colorName, Skin skin) {\r\n+\tpublic Label (CharSequence text, String fontName, String colorName, Skin skin) {\r\n \t\tthis(text, new LabelStyle(skin.getFont(fontName), skin.getColor(colorName)), null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style) {\r\n+\tpublic Label (CharSequence text, LabelStyle style) {\r\n \t\tthis(text, style, null);\r\n \t}\r\n \r\n-\tpublic Label (String text, LabelStyle style, String name) {\r\n+\tpublic Label (CharSequence text, LabelStyle style, String name) {\r\n \t\tsuper(name);\r\n \t\tif (text == null) text = \"\";\r\n \t\tthis.text = text;\r\n@@ -91,7 +91,7 @@\n \t\treturn style;\r\n \t}\r\n \r\n-\tpublic void setText (String text) {\r\n+\tpublic void setText (CharSequence text) {\r\n \t\tif (text == null) throw new IllegalArgumentException(\"text cannot be null.\");\r\n \t\tif (text.equals(this.text)) return;\r\n \t\tthis.text = text;\r\n@@ -99,7 +99,7 @@\n \t\tinvalidateHierarchy();\r\n \t}\r\n \r\n-\tpublic String getText () {\r\n+\tpublic CharSequence getText () {\r\n \t\treturn text;\r\n \t}\r\n \r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 102,
        "bugNodeStartChar": 3808,
        "bugNodeLength": 46,
        "fixLineNum": 102,
        "fixNodeStartChar": 3707,
        "fixNodeLength": 50,
        "sourceBeforeFix": "public String getText(){   return text; } ",
        "sourceAfterFix": "public CharSequence getText(){   return text; } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b2fe91c9b8394067bccfb56650dbe376b100a890",
        "fixCommitParentSHA1": "111eec01be5bfce6e8cfdce8de9e4c0628ff9669",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapLockTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapLockTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapLockTest.java\nindex c6d4fdf..e251ca9 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapLockTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapLockTest.java\n@@ -347,7 +347,7 @@\n         new Thread() {\n             public void run() {\n                 try {\n-                    if (mm.tryLock(key, 4, TimeUnit.SECONDS)) {\n+                    if (mm.tryLock(key, 10, TimeUnit.SECONDS)) {\n                         tryLockSuccess.countDown();\n                     }\n                 } catch (InterruptedException e) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 350,
        "bugNodeStartChar": 10869,
        "bugNodeLength": 36,
        "fixLineNum": 350,
        "fixNodeStartChar": 10869,
        "fixNodeLength": 37,
        "sourceBeforeFix": "mm.tryLock(key,4,TimeUnit.SECONDS)",
        "sourceAfterFix": "mm.tryLock(key,10,TimeUnit.SECONDS)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "facd8dc5ca08d45214b47e394b78e59f71d588f5",
        "fixCommitParentSHA1": "60bfc33e9f428859a82c3ca5de0dcca4efa0c5f4",
        "bugFilePath": "cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java",
        "fixPatch": "diff --git a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\nindex 12ab0f9..2365a3e 100644\n--- a/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n+++ b/cli/src/main/java/org/jboss/as/cli/handlers/OperationRequestHandler.java\n@@ -66,7 +66,7 @@\n \n         ModelNode request = (ModelNode) ctx.get(\"OP_REQ\");\n         if(request == null) {\n-            throw new CommandFormatException(\"Parsed request isn't available.\");\n+            throw new CommandLineException(\"Parsed request isn't available.\");\n         }\n \n         if(ctx.getConfig().isValidateOperationRequests()) {\n@@ -78,17 +78,17 @@\n             if(Util.isSuccess(result)) {\n                 ctx.printLine(result.toString());\n             } else {\n-                throw new CommandFormatException(result.toString());\n+                throw new CommandLineException(result.toString());\n             }\n         } catch(NoSuchElementException e) {\n-            throw new CommandFormatException(\"ModelNode request is incomplete\", e);\n+            throw new CommandLineException(\"ModelNode request is incomplete\", e);\n         } catch (CancellationException e) {\n-            throw new CommandFormatException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n+            throw new CommandLineException(\"The result couldn't be retrieved (perhaps the task was cancelled\", e);\n         } catch (IOException e) {\n             ctx.disconnectController();\n-            throw new CommandFormatException(\"Communication error\", e);\n+            throw new CommandLineException(\"Communication error\", e);\n         } catch (RuntimeException e) {\n-            throw new CommandFormatException(\"Failed to execute operation.\", e);\n+            throw new CommandLineException(\"Failed to execute operation.\", e);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 69,
        "bugNodeStartChar": 2592,
        "bugNodeLength": 61,
        "fixLineNum": 69,
        "fixNodeStartChar": 2592,
        "fixNodeLength": 59,
        "sourceBeforeFix": "new CommandFormatException(\"Parsed request isn't available.\")",
        "sourceAfterFix": "new CommandLineException(\"Parsed request isn't available.\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "eba20b3dcc401fb4c873afc5948cc92fbcb00097",
        "fixCommitParentSHA1": "c81e2a431edcbda8f7287418bc91f75a9e195a3a",
        "bugFilePath": "src/jvm/clojure/lang/Numbers.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Numbers.java b/src/jvm/clojure/lang/Numbers.java\nindex 5f56ab5..47bac98 100644\n--- a/src/jvm/clojure/lang/Numbers.java\n+++ b/src/jvm/clojure/lang/Numbers.java\n@@ -1277,7 +1277,7 @@\n \t\t\tint size = s.count();\n \t\t\tfloat[] ret = new float[size];\n \t\t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\t\tret[i] = ((Number) s.first()).floatValue();\n \t\t\treturn ret;\n \t\t\t}\n \t}\n@@ -1308,7 +1308,7 @@\n \t\tint size = s.count();\n \t\tdouble[] ret = new double[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).doubleValue();\n \t\treturn ret;\n \t\t}\n }\n@@ -1370,7 +1370,7 @@\n \t\tint size = s.count();\n \t\tlong[] ret = new long[size];\n \t\tfor(int i = 0; i < size && s != null; i++, s = s.rest())\n-\t\t\tret[i] = ((Number) s.first()).intValue();\n+\t\t\tret[i] = ((Number) s.first()).longValue();\n \t\treturn ret;\n \t\t}\n }\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 1373,
        "bugNodeStartChar": 30669,
        "bugNodeLength": 31,
        "fixLineNum": 1373,
        "fixNodeStartChar": 30669,
        "fixNodeLength": 32,
        "sourceBeforeFix": "((Number)s.first()).intValue()",
        "sourceAfterFix": "((Number)s.first()).longValue()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b2b6b606f010d7d1da5a60bab132e65213e7c3bf",
        "fixCommitParentSHA1": "25acd36d7d4e73201c61cbbca3aa9b14e623a7cf",
        "bugFilePath": "tests/src/test/java/alluxio/client/fs/UfsSyncIntegrationTest.java",
        "fixPatch": "diff --git a/tests/src/test/java/alluxio/client/fs/UfsSyncIntegrationTest.java b/tests/src/test/java/alluxio/client/fs/UfsSyncIntegrationTest.java\nindex 1d0e5cd..824a660 100644\n--- a/tests/src/test/java/alluxio/client/fs/UfsSyncIntegrationTest.java\n+++ b/tests/src/test/java/alluxio/client/fs/UfsSyncIntegrationTest.java\n@@ -447,14 +447,14 @@\n \n     // Set initial alluxio permissions\n     mFileSystem.setAttribute(new AlluxioURI(alluxioPath(EXISTING_FILE)),\n-        SetAttributeOptions.defaults().setMode(new Mode((short) 777)));\n+        SetAttributeOptions.defaults().setMode(new Mode((short) 0777)));\n \n     URIStatus status = mFileSystem.getStatus(new AlluxioURI(alluxioPath(EXISTING_FILE)), options);\n     String startFingerprint = status.getUfsFingerprint();\n \n     // Change alluxio permissions\n     mFileSystem.setAttribute(new AlluxioURI(alluxioPath(EXISTING_FILE)),\n-        SetAttributeOptions.defaults().setMode(new Mode((short) 655)));\n+        SetAttributeOptions.defaults().setMode(new Mode((short) 0655)));\n \n     status = mFileSystem.getStatus(new AlluxioURI(alluxioPath(EXISTING_FILE)), options);\n     String endFingerprint = status.getUfsFingerprint();\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 457,
        "bugNodeStartChar": 18182,
        "bugNodeLength": 11,
        "fixLineNum": 457,
        "fixNodeStartChar": 18182,
        "fixNodeLength": 12,
        "sourceBeforeFix": "(short)655",
        "sourceAfterFix": "(short)0655"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "9f857ec87fe63bec133675da8a0bc4ad203de7e0",
        "fixCommitParentSHA1": "75fc0671bdc118d4d8e399889543431309ae63fe",
        "bugFilePath": "components/camel-box/src/main/java/org/apache/camel/component/box/BoxConsumer.java",
        "fixPatch": "diff --git a/components/camel-box/src/main/java/org/apache/camel/component/box/BoxConsumer.java b/components/camel-box/src/main/java/org/apache/camel/component/box/BoxConsumer.java\nindex f0da8a5..6b6fabf 100644\n--- a/components/camel-box/src/main/java/org/apache/camel/component/box/BoxConsumer.java\n+++ b/components/camel-box/src/main/java/org/apache/camel/component/box/BoxConsumer.java\n@@ -56,7 +56,7 @@\n     public BoxConsumer(BoxEndpoint endpoint, Processor processor) {\n         super(endpoint, processor);\n \n-        apiMethod = ApiConsumerHelper.findMethod(endpoint, this, log);\n+        apiMethod = ApiConsumerHelper.findMethod(endpoint, this);\n \n         properties = new HashMap<String, Object>();\n         properties.putAll(endpoint.getEndpointProperties());\n",
        "projectName": "apache.camel",
        "bugLineNum": 59,
        "bugNodeStartChar": 2411,
        "bugNodeLength": 49,
        "fixLineNum": 59,
        "fixNodeStartChar": 2411,
        "fixNodeLength": 44,
        "sourceBeforeFix": "ApiConsumerHelper.findMethod(endpoint,this,log)",
        "sourceAfterFix": "ApiConsumerHelper.findMethod(endpoint,this)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f103267d37e15a1f2ad7cf09da94b75b53d34c02",
        "fixCommitParentSHA1": "b60ca4b9c18870b0de0600ba52943d9a0048099c",
        "bugFilePath": "servers/src/main/java/tachyon/worker/block/meta/BlockMetaBase.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/block/meta/BlockMetaBase.java b/servers/src/main/java/tachyon/worker/block/meta/BlockMetaBase.java\nindex 241dc50..01205cf 100644\n--- a/servers/src/main/java/tachyon/worker/block/meta/BlockMetaBase.java\n+++ b/servers/src/main/java/tachyon/worker/block/meta/BlockMetaBase.java\n@@ -40,7 +40,7 @@\n    */\n   public BlockStoreLocation getBlockLocation() {\n     StorageTier tier = mDir.getParentTier();\n-    return new BlockStoreLocation(tier.getTierAlias(), mDir.getDirId());\n+    return new BlockStoreLocation(tier.getTierAlias(), mDir.getDirIndex());\n   }\n \n   public StorageDir getParentDir() {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 43,
        "bugNodeStartChar": 1489,
        "bugNodeLength": 15,
        "fixLineNum": 43,
        "fixNodeStartChar": 1489,
        "fixNodeLength": 18,
        "sourceBeforeFix": "mDir.getDirId()",
        "sourceAfterFix": "mDir.getDirIndex()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 89,
        "bugNodeStartChar": 3709,
        "bugNodeLength": 10,
        "fixLineNum": 89,
        "fixNodeStartChar": 3709,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15802",
        "sourceAfterFix": "id=10802"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "70857b76b6debcce4cd2b1e9befcc9ee574e0b10",
        "fixCommitParentSHA1": "b12a354d55153891154df0c7af7e03a3c9cc0a75",
        "bugFilePath": "test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\nindex 191bcfe..e2475e1 100644\n--- a/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n+++ b/test/com/google/javascript/jscomp/ProcessCommonJSModulesTest.java\n@@ -177,19 +177,19 @@\n \n   public void testModuleExportsScope() {\n     setFilename(\"test\");\n-    test(\n+    testModules(\n         \"var foo = function (module) {module.exports = {};};\" +\n         \"module.exports = foo;\",\n         \"goog.provide('module$test');\" +\n         \"var foo$$module$test=function(module){module.exports={}};\" +\n         \"var module$test=foo$$module$test\");\n-    test(\n+    testModules(\n         \"var foo = function () {var module = {};module.exports = {};};\" +\n         \"module.exports = foo;\",\n         \"goog.provide('module$test');\" +\n         \"var foo$$module$test=function(){var module={};module.exports={}};\" +\n         \"var module$test=foo$$module$test\");\n-    test(\n+    testModules(\n         \"var foo = function () {if (true) var module = {};\" +\n         \"module.exports = {};};\" +\n         \"module.exports = foo;\",\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 180,
        "bugNodeStartChar": 6166,
        "bugNodeLength": 257,
        "fixLineNum": 180,
        "fixNodeStartChar": 6166,
        "fixNodeLength": 264,
        "sourceBeforeFix": "test(\"var foo = function (module) {module.exports = {};};\" + \"module.exports = foo;\",\"goog.provide('module$test');\" + \"var foo$$module$test=function(module){module.exports={}};\" + \"var module$test=foo$$module$test\")",
        "sourceAfterFix": "testModules(\"var foo = function (module) {module.exports = {};};\" + \"module.exports = foo;\",\"goog.provide('module$test');\" + \"var foo$$module$test=function(module){module.exports={}};\" + \"var module$test=foo$$module$test\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "622d62ec3cd0ce3bd3678dd7579cc7978b7908ad",
        "fixCommitParentSHA1": "526c75fca4b784ab147bfdd10d53da0a2777a8ab",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\nindex c3a65df..a1ac7fc 100644\n--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java\n@@ -1604,7 +1604,8 @@\n \n         // shutdown default error handler thread pool\n         if (errorHandlerExecutorService != null) {\n-            getExecutorServiceManager().shutdown(errorHandlerExecutorService);\n+            // force shutting down the thread pool\n+            getExecutorServiceManager().shutdownNow(errorHandlerExecutorService);\n             errorHandlerExecutorService = null;\n         }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 1607,
        "bugNodeStartChar": 64007,
        "bugNodeLength": 65,
        "fixLineNum": 1608,
        "fixNodeStartChar": 64058,
        "fixNodeLength": 68,
        "sourceBeforeFix": "getExecutorServiceManager().shutdown(errorHandlerExecutorService)",
        "sourceAfterFix": "getExecutorServiceManager().shutdownNow(errorHandlerExecutorService)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a63faf44e1b103a49d25a15c720fc5940ae9fc07",
        "fixCommitParentSHA1": "2b0a4f13844bbb93482c52bd2c60a55e3fa24a88",
        "bugFilePath": "retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java",
        "fixPatch": "diff --git a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\nindex 5897161..dea046f 100644\n--- a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n+++ b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n@@ -73,10 +73,10 @@\n     assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyClass = new TypeToken<Maybe<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyClass = new TypeToken<Flowable<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();\n@@ -86,10 +86,10 @@\n     assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyWildcard = new TypeToken<Maybe<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyWildcard = new TypeToken<Flowable<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyGeneric = new TypeToken<Observable<List<String>>>() {}.getType();\n@@ -99,10 +99,10 @@\n     assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type mBodyGeneric = new TypeToken<Maybe<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type fBodyGeneric = new TypeToken<Flowable<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n \n     Type oResponseClass = new TypeToken<Observable<Response<String>>>() {}.getType();\n@@ -112,10 +112,10 @@\n     assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseClass = new TypeToken<Maybe<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseClass = new TypeToken<Flowable<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();\n@@ -125,10 +125,10 @@\n     assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseWildcard = new TypeToken<Maybe<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseWildcard = new TypeToken<Flowable<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultClass = new TypeToken<Observable<Result<String>>>() {}.getType();\n@@ -138,10 +138,10 @@\n     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();\n@@ -151,10 +151,10 @@\n     assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultWildcard = new TypeToken<Maybe<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultWildcard = new TypeToken<Flowable<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n   }\n \n",
        "projectName": "square.retrofit",
        "bugLineNum": 157,
        "bugNodeStartChar": 7799,
        "bugNodeLength": 54,
        "fixLineNum": 157,
        "fixNodeStartChar": 7799,
        "fixNodeLength": 54,
        "sourceBeforeFix": "factory.get(sResultWildcard,NO_ANNOTATIONS,retrofit)",
        "sourceAfterFix": "factory.get(fResultWildcard,NO_ANNOTATIONS,retrofit)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "34aa92dca9aee7ee6e0ba551e69639f853df15d3",
        "fixCommitParentSHA1": "fbc4c4b2adfb1460e6398d61bc4371c91ef3a0e0",
        "bugFilePath": "src/main/java/com/yammer/metrics/core/MetricsServlet.java",
        "fixPatch": "diff --git a/src/main/java/com/yammer/metrics/core/MetricsServlet.java b/src/main/java/com/yammer/metrics/core/MetricsServlet.java\nindex dba4ecb..0d4fb4b 100644\n--- a/src/main/java/com/yammer/metrics/core/MetricsServlet.java\n+++ b/src/main/java/com/yammer/metrics/core/MetricsServlet.java\n@@ -96,7 +96,7 @@\n \t@Override\n \tprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n \t\tfinal String uri = req.getPathInfo();\n-\t\tif (uri.equals(\"/\")) {\n+\t\tif (uri == null || uri.equals(\"/\")) {\n \t\t\thandleHome(resp);\n \t\t} else if (uri.startsWith(metricsUri)) {\n \t\t\thandleMetrics(req.getParameter(\"class\"), Boolean.parseBoolean(req.getParameter(\"full-samples\")), resp);\n",
        "projectName": "dropwizard.metrics",
        "bugLineNum": 99,
        "bugNodeStartChar": 3390,
        "bugNodeLength": 15,
        "fixLineNum": 99,
        "fixNodeStartChar": 3390,
        "fixNodeLength": 30,
        "sourceBeforeFix": "uri.equals(\"/\")",
        "sourceAfterFix": "uri == null || uri.equals(\"/\")"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "c3448fe289734ed7498eee4444af630f7abd6986",
        "fixCommitParentSHA1": "0e1b19a1116a7ff61dd35bb8d8a9dff01c4cdc60",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\nindex 8a7f7fc..f5706d9 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java\n@@ -18,7 +18,7 @@\n   /** Whether to use the user name as the queue name (instead of \"default\") if\n    * the request does not specify a queue. */\n   protected static final String  USER_AS_DEFAULT_QUEUE = CONF_PREFIX + \"user-as-default-queue\";\n-  protected static final boolean DEFAULT_USER_AS_DEFAULT_QUEUE = false;\n+  protected static final boolean DEFAULT_USER_AS_DEFAULT_QUEUE = true;\n \n   protected static final String LOCALITY_THRESHOLD = CONF_PREFIX + \"locality.threshold\";\n   protected static final float  DEFAULT_LOCALITY_THRESHOLD = -1.0f;\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 21,
        "bugNodeStartChar": 930,
        "bugNodeLength": 37,
        "fixLineNum": 21,
        "fixNodeStartChar": 930,
        "fixNodeLength": 36,
        "sourceBeforeFix": "DEFAULT_USER_AS_DEFAULT_QUEUE=false",
        "sourceAfterFix": "DEFAULT_USER_AS_DEFAULT_QUEUE=true"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b60259b83514863bf10644e7c12e9b5e4292cbb3",
        "fixCommitParentSHA1": "60a3bdd6d367f3627f680cce5730531c615b173f",
        "bugFilePath": "components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java",
        "fixPatch": "diff --git a/components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java b/components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java\nindex 1759087..aa85025 100644\n--- a/components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java\n+++ b/components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java\n@@ -39,7 +39,7 @@\n     protected CamelContext container = new DefaultCamelContext();\n \n     // use parameter sync=true to force InOut pattern of the MinaExchange\n-    protected String uri = \"mina:tcp://localhost:9888?textline=true&sync=true\";\n+    protected String uri = \"mina:tcp://localhost:6333?textline=true&sync=true\";\n \n     public void testSendAndReceiveOnce() throws Exception {\n         String response = sendAndReceive(\"World\");\n@@ -81,7 +81,7 @@\n         byte buf[] = new byte[128];\n \n         Socket soc = new Socket();\n-        soc.connect(new InetSocketAddress(\"localhost\", 8888));\n+        soc.connect(new InetSocketAddress(\"localhost\", 6333));\n \n         // Send message using plain Socket to test if this works\n         OutputStream os = null;\n",
        "projectName": "apache.camel",
        "bugLineNum": 84,
        "bugNodeStartChar": 3242,
        "bugNodeLength": 40,
        "fixLineNum": 84,
        "fixNodeStartChar": 3242,
        "fixNodeLength": 40,
        "sourceBeforeFix": "new InetSocketAddress(\"localhost\",8888)",
        "sourceAfterFix": "new InetSocketAddress(\"localhost\",6333)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\nindex ebd88ed..f704207 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerLogger.java\n@@ -34,7 +34,7 @@\n import org.jboss.logging.MessageLogger;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10950-10974 for domain\n+ * This module is using message IDs in the range 10800-10999. This file is using the subset 10800-10829 for domain\n  * controller logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -71,11 +71,11 @@\n     DomainControllerLogger HOST_CONTROLLER_LOGGER = Logger.getMessageLogger(DomainControllerLogger.class, \"org.jboss.as.host.controller\");\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n+    @Message(id = 10800, value = \"Ignoring 'include' child of 'socket-binding-group' %s\")\n     void warnIgnoringSocketBindingGroupInclude(Location location);\n \n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15801, value = \"Ignoring 'include' child of 'profile' %s\")\n+    @Message(id = 10801, value = \"Ignoring 'include' child of 'profile' %s\")\n     void warnIgnoringProfileInclude(Location location);\n \n     /**\n@@ -86,7 +86,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15802, value = \"Interrupted awaiting final response from server %s on host %s\")\n+    @Message(id = 10802, value = \"Interrupted awaiting final response from server %s on host %s\")\n     void interruptedAwaitingFinalResponse(String serverName, String hostName);\n \n     /**\n@@ -98,7 +98,7 @@\n      * @param hostName   the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15803, value = \"Caught exception awaiting final response from server %s on host %s\")\n+    @Message(id = 10803, value = \"Caught exception awaiting final response from server %s on host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String serverName, String hostName);\n \n     /**\n@@ -108,7 +108,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15804, value = \"Interrupted awaiting final response from host %s\")\n+    @Message(id = 10804, value = \"Interrupted awaiting final response from host %s\")\n     void interruptedAwaitingFinalResponse(String hostName);\n \n     /**\n@@ -119,7 +119,7 @@\n      * @param hostName the name of the host.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15805, value = \"Caught exception awaiting final response from host %s\")\n+    @Message(id = 10805, value = \"Caught exception awaiting final response from host %s\")\n     void caughtExceptionAwaitingFinalResponse(@Cause Throwable cause, String hostName);\n \n     /**\n@@ -128,7 +128,7 @@\n      * @param cause the cause of the error.\n      */\n     @LogMessage(level = Level.WARN)\n-    @Message(id = 15806, value = \"Caught exception closing input stream\")\n+    @Message(id = 10806, value = \"Caught exception closing input stream\")\n     void caughtExceptionClosingInputStream(@Cause Throwable cause);\n \n     /**\n@@ -138,7 +138,7 @@\n      * @param servers the servers that need to restart.\n      */\n     @LogMessage(level = Level.INFO)\n-    @Message(id = 15807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n+    @Message(id = 10807, value = \"Domain model has changed on re-connect. The following servers will need to be restarted for changes to take affect: %s\")\n     void domainModelChangedOnReConnect(Set<ServerIdentity> servers);\n \n     /**\n@@ -150,7 +150,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15808, value = \"%s caught %s waiting for task %s\")\n+    @Message(id = 10808, value = \"%s caught %s waiting for task %s\")\n     void caughtExceptionWaitingForTask(String className, String exceptionName, String task);\n \n     /**\n@@ -162,7 +162,7 @@\n      * @param task          the task.\n      */\n     @LogMessage(level = Level.ERROR)\n-    @Message(id = 15809, value = \"%s caught %s waiting for task %s; returning\")\n+    @Message(id = 10809, value = \"%s caught %s waiting for task %s; returning\")\n     void caughtExceptionWaitingForTaskReturning(String className, String exceptionName, String task);\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 122,
        "bugNodeStartChar": 5245,
        "bugNodeLength": 10,
        "fixLineNum": 122,
        "fixNodeStartChar": 5245,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15805",
        "sourceAfterFix": "id=10805"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "178c690d37e7a329ad0a7a9349f3950f57dc4dde",
        "fixCommitParentSHA1": "16dac01886f5b7bacb11302c8213ee1d17a6ccf0",
        "bugFilePath": "spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java",
        "fixPatch": "diff --git a/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java\nindex 0a35c94..b247a9b 100644\n--- a/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java\n+++ b/spring-boot-tools/spring-boot-configuration-processor/src/main/java/org/springframework/boot/configurationprocessor/metadata/JsonMarshaller.java\n@@ -50,7 +50,7 @@\n \n \tpublic void write(ConfigurationMetadata metadata, OutputStream outputStream)\n \t\t\tthrows IOException {\n-\t\tJSONObject object = new JSONObject();\n+\t\tJSONObject object = new JSONOrderedObject();\n \t\tobject.put(\"groups\", toJsonArray(metadata, ItemType.GROUP));\n \t\tobject.put(\"properties\", toJsonArray(metadata, ItemType.PROPERTY));\n \t\tobject.put(\"hints\", toJsonArray(metadata.getHints()));\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 53,
        "bugNodeStartChar": 1637,
        "bugNodeLength": 16,
        "fixLineNum": 53,
        "fixNodeStartChar": 1637,
        "fixNodeLength": 23,
        "sourceBeforeFix": "new JSONObject()",
        "sourceAfterFix": "new JSONOrderedObject()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "048c1d20bae99c00f76b088fc9fdd7c286deb7b8",
        "fixCommitParentSHA1": "b844a7400cdd9f4961ba30ebb1439390aac9fd61",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/proxy/ClientMapProxy.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/proxy/ClientMapProxy.java b/hazelcast-client/src/main/java/com/hazelcast/client/proxy/ClientMapProxy.java\nindex ec449b8..39f7144 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/proxy/ClientMapProxy.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/proxy/ClientMapProxy.java\n@@ -561,10 +561,9 @@\n                     void invalidate(EntryEvent<K, V> event){\n                         System.err.println(\"invalidate\");\n                         final Data key = toData(event.getKey());\n-//                        nearCache.invalidate(key);\n-                        nearCache.put(key, event.getValue());\n+                        nearCache.invalidate(key);\n                     }\n-                }, true);\n+                }, false);\n             }\n         }\n     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 544,
        "bugNodeStartChar": 20671,
        "bugNodeLength": 936,
        "fixLineNum": 544,
        "fixNodeStartChar": 20671,
        "fixNodeLength": 937,
        "sourceBeforeFix": "addEntryListener(new EntryListener<K,V>(){   public void entryAdded(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryRemoved(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryUpdated(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryEvicted(  EntryEvent<K,V> event){     invalidate(event);   }   void invalidate(  EntryEvent<K,V> event){     System.err.println(\"invalidate\");     final Data key=toData(event.getKey());     nearCache.put(key,event.getValue());   } } ,true)",
        "sourceAfterFix": "addEntryListener(new EntryListener<K,V>(){   public void entryAdded(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryRemoved(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryUpdated(  EntryEvent<K,V> event){     invalidate(event);   }   public void entryEvicted(  EntryEvent<K,V> event){     invalidate(event);   }   void invalidate(  EntryEvent<K,V> event){     System.err.println(\"invalidate\");     final Data key=toData(event.getKey());     nearCache.put(key,event.getValue());   } } ,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 398,
        "bugNodeStartChar": 12978,
        "bugNodeLength": 94,
        "fixLineNum": 398,
        "fixNodeStartChar": 12581,
        "fixNodeLength": 96,
        "sourceBeforeFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target,attachment,pname,params)",
        "sourceAfterFix": "EXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target,attachment,pname,params)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e4754241591a948b354f61953a998a63c96f79ac",
        "fixCommitParentSHA1": "ae92d90bc94df7ee226041e8b32e03771f0e9f7e",
        "bugFilePath": "demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java",
        "fixPatch": "diff --git a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\nindex 2f95c62..5dcffd2 100644\n--- a/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n+++ b/demos/superjumper/superjumper/src/com/badlogicgames/superjumper/Settings.java\n@@ -22,7 +22,7 @@\n             for(int i = 0; i < 5; i++) {\r\n                 highscores[i] = Integer.parseInt(in.readLine());\r\n             }\r\n-        } catch (Exception e) {\r\n+        } catch (Throwable e) {\r\n             // :( It's ok we have defaults        \r\n         } finally {\r\n             try {\r\n@@ -42,7 +42,7 @@\n                 out.write(Integer.toString(highscores[i]));\r\n             }\r\n \r\n-        } catch (IOException e) {\r\n+        } catch (Throwable e) {\r\n         } finally {\r\n             try {\r\n                 if (out != null)\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 45,
        "bugNodeStartChar": 1460,
        "bugNodeLength": 13,
        "fixLineNum": 45,
        "fixNodeStartChar": 1416,
        "fixNodeLength": 11,
        "sourceBeforeFix": "IOException e",
        "sourceAfterFix": "Throwable e"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "aee1f182e8fbd311713d1661ab61755b069b1a6c",
        "fixCommitParentSHA1": "21cff1d00d4866614c005e005000b4e8ad783142",
        "bugFilePath": "flink-runtime/src/test/java/org/apache/flink/runtime/state/ttl/TtlStateTestBase.java",
        "fixPatch": "diff --git a/flink-runtime/src/test/java/org/apache/flink/runtime/state/ttl/TtlStateTestBase.java b/flink-runtime/src/test/java/org/apache/flink/runtime/state/ttl/TtlStateTestBase.java\nindex e6d5ba3..5c92e67 100644\n--- a/flink-runtime/src/test/java/org/apache/flink/runtime/state/ttl/TtlStateTestBase.java\n+++ b/flink-runtime/src/test/java/org/apache/flink/runtime/state/ttl/TtlStateTestBase.java\n@@ -515,7 +515,7 @@\n \t\t// trigger more cleanup by doing something out side of INC_CLEANUP_ALL_KEYS\n \t\tfor (int i = INC_CLEANUP_ALL_KEYS; i < INC_CLEANUP_ALL_KEYS * 2; i++) {\n \t\t\tsbetc.setCurrentKey(Integer.toString(i));\n-\t\t\tif (i / 2 == 0) {\n+\t\t\tif (i % 2 == 0) {\n \t\t\t\tctx().get();\n \t\t\t} else {\n \t\t\t\tctx().update(ctx().updateEmpty);\n",
        "projectName": "apache.flink",
        "bugLineNum": 518,
        "bugNodeStartChar": 17407,
        "bugNodeLength": 5,
        "fixLineNum": 518,
        "fixNodeStartChar": 17407,
        "fixNodeLength": 5,
        "sourceBeforeFix": "i / 2",
        "sourceAfterFix": "i % 2"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "daba0256b7cf360824aebb3ff176d5937c862e46",
        "fixCommitParentSHA1": "0e0ede5a02b931e68c7d8c538ef815c47561e92e",
        "bugFilePath": "api/src/test/java/org/openmrs/api/AdministrationServiceTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java b/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\nindex 51f946b..5201f1d 100644\n--- a/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/AdministrationServiceTest.java\n@@ -474,7 +474,7 @@\n \t@Verifies(value = \"should return all global properties in the database\", method = \"getAllGlobalProperties()\")\n \tpublic void getAllGlobalProperties_shouldReturnAllGlobalPropertiesInTheDatabase() throws Exception {\n \t\texecuteDataSet(ADMIN_INITIAL_DATA_XML);\n-\t\tAssert.assertEquals(20, Context.getAdministrationService().getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(21, Context.getAdministrationService().getAllGlobalProperties().size());\n \t}\n \t\n \t/**\n@@ -546,9 +546,9 @@\n \t\texecuteDataSet(ADMIN_INITIAL_DATA_XML);\n \t\tAdministrationService as = Context.getAdministrationService();\n \t\t\n-\t\tAssert.assertEquals(20, as.getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(21, as.getAllGlobalProperties().size());\n \t\tas.purgeGlobalProperty(as.getGlobalPropertyObject(\"a_valid_gp_key\"));\n-\t\tAssert.assertEquals(19, as.getAllGlobalProperties().size());\n+\t\tAssert.assertEquals(20, as.getAllGlobalProperties().size());\n \t}\n \t\n \t/**\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 551,
        "bugNodeStartChar": 24248,
        "bugNodeLength": 59,
        "fixLineNum": 551,
        "fixNodeStartChar": 24248,
        "fixNodeLength": 59,
        "sourceBeforeFix": "Assert.assertEquals(19,as.getAllGlobalProperties().size())",
        "sourceAfterFix": "Assert.assertEquals(20,as.getAllGlobalProperties().size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa",
        "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999",
        "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java",
        "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 17bdde1..234830e 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -406,15 +406,15 @@\n         //Type\n         if (!directed.isEmpty()) {\n             if (directed.equalsIgnoreCase(\"true\")) {\n-                edge.setType(EdgeDirection.DIRECTED);\n+                edge.setDirection(EdgeDirection.DIRECTED);\n             } else if (directed.equalsIgnoreCase(\"false\")) {\n-                edge.setType(EdgeDirection.UNDIRECTED);\n+                edge.setDirection(EdgeDirection.UNDIRECTED);\n             } else {\n                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, \"importerGraphML_error_edgetype\", directed, edge), Issue.Level.SEVERE));\n-                edge.setType(edgeDefault);\n+                edge.setDirection(edgeDefault);\n             }\n         } else {\n-            edge.setType(edgeDefault);\n+            edge.setDirection(edgeDefault);\n         }\n \n         boolean end = false;\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 414,
        "bugNodeStartChar": 17847,
        "bugNodeLength": 25,
        "fixLineNum": 414,
        "fixNodeStartChar": 17847,
        "fixNodeLength": 30,
        "sourceBeforeFix": "edge.setType(edgeDefault)",
        "sourceAfterFix": "edge.setDirection(edgeDefault)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e78d8584a1298e79c17a45e01f79062b55c9f703",
        "fixCommitParentSHA1": "054cf8a18390f4a082629456d78f8657fc0515b3",
        "bugFilePath": "sql/src/test/java/io/druid/sql/avatica/DruidAvaticaHandlerTest.java",
        "fixPatch": "diff --git a/sql/src/test/java/io/druid/sql/avatica/DruidAvaticaHandlerTest.java b/sql/src/test/java/io/druid/sql/avatica/DruidAvaticaHandlerTest.java\nindex 47a79c3..282c51a 100644\n--- a/sql/src/test/java/io/druid/sql/avatica/DruidAvaticaHandlerTest.java\n+++ b/sql/src/test/java/io/druid/sql/avatica/DruidAvaticaHandlerTest.java\n@@ -370,7 +370,7 @@\n     );\n   }\n \n-  @Test(timeout = 30000)\n+  @Test(timeout = 90000)\n   public void testConcurrentQueries() throws Exception\n   {\n     final List<ListenableFuture<Integer>> futures = new ArrayList<>();\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 373,
        "bugNodeStartChar": 12116,
        "bugNodeLength": 15,
        "fixLineNum": 373,
        "fixNodeStartChar": 12116,
        "fixNodeLength": 15,
        "sourceBeforeFix": "timeout=30000",
        "sourceAfterFix": "timeout=90000"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e38662958d7db7030bf961d25341586cedea5f1f",
        "fixCommitParentSHA1": "41c66b4ea4ed0d5ae2561fe812fd83e14ce773e7",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/EjbMessages.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/EjbMessages.java b/ejb3/src/main/java/org/jboss/as/ejb3/EjbMessages.java\nindex a409f65..d2492d8 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/EjbMessages.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/EjbMessages.java\n@@ -2457,9 +2457,9 @@\n     @Message(id = 14238, value = \"More than one timer found in database with id %s\")\n     RuntimeException moreThanOneTimerFoundWithId(String id);\n \n-    @Message(id = 14238, value = \"The timer service has been disabled. Please add a <timer-service> entry into the ejb section of the server configuration to enable it.\")\n+    @Message(id = 14239, value = \"The timer service has been disabled. Please add a <timer-service> entry into the ejb section of the server configuration to enable it.\")\n     String timerServiceIsNotActive();\n \n-    @Message(id = 14239, value = \"This EJB does not have any timeout methods\")\n+    @Message(id = 14240, value = \"This EJB does not have any timeout methods\")\n     String ejbHasNoTimerMethods();\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 2460,
        "bugNodeStartChar": 113448,
        "bugNodeLength": 10,
        "fixLineNum": 2460,
        "fixNodeStartChar": 113448,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=14238",
        "sourceAfterFix": "id=14239"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "aaa8c6e4c9ae0d5b4bc8adb573e85dea12afc59e",
        "fixCommitParentSHA1": "b1199502227e1186fbb2d7369fa42549c9ce653b",
        "bugFilePath": "ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java",
        "fixPatch": "diff --git a/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java b/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\nindex 045e168..566c73b 100644\n--- a/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\n+++ b/ee/src/main/java/org/jboss/as/ee/component/deployers/InterceptorAnnotationProcessor.java\n@@ -82,7 +82,7 @@\n         final Class<?> componentClass;\n         try {\n             componentClass = ClassLoadingUtils.loadClass(description.getComponentClassName(), deploymentUnit);\n-        } catch (ClassNotFoundException e) {\n+        } catch (Throwable e) {\n             //just ignore the class for now.\n             //if it is an optional component this is ok, if it is not an optional component\n             //it will fail at configure time anyway\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 85,
        "bugNodeStartChar": 4084,
        "bugNodeLength": 24,
        "fixLineNum": 85,
        "fixNodeStartChar": 4084,
        "fixNodeLength": 11,
        "sourceBeforeFix": "ClassNotFoundException e",
        "sourceAfterFix": "Throwable e"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "996cadb3e79b248d2f2b3e584a1ea9e9f77fc1c2",
        "fixCommitParentSHA1": "34fdc2a3d329587123ed00be6fafdbc1ba6cc852",
        "bugFilePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\nindex c78e84c..f4ec715 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java\n@@ -320,7 +320,7 @@\n \t}\n \n \tpublic float getPrefWidth () {\n-\t\treturn Math.max(super.getPrefWidth(), titleLabel.getPrefWidth() + getPadLeft() + getPadRight());\n+\t\treturn Math.max(super.getPrefWidth(), titleTable.getPrefWidth() + getPadLeft() + getPadRight());\n \t}\n \n \tpublic Table getTitleTable () {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 323,
        "bugNodeStartChar": 11631,
        "bugNodeLength": 25,
        "fixLineNum": 323,
        "fixNodeStartChar": 11631,
        "fixNodeLength": 25,
        "sourceBeforeFix": "titleLabel.getPrefWidth()",
        "sourceAfterFix": "titleTable.getPrefWidth()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "01d18f2c3db799d144cc8e3308da3fb2ade19417",
        "fixCommitParentSHA1": "2f6370343200faec3de904a5cf2e39345acb33e7",
        "bugFilePath": "android/guava/src/com/google/common/util/concurrent/Striped.java",
        "fixPatch": "diff --git a/android/guava/src/com/google/common/util/concurrent/Striped.java b/android/guava/src/com/google/common/util/concurrent/Striped.java\nindex cd43294..36fa929 100644\n--- a/android/guava/src/com/google/common/util/concurrent/Striped.java\n+++ b/android/guava/src/com/google/common/util/concurrent/Striped.java\n@@ -321,9 +321,9 @@\n     private final Lock delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeLock(Lock delegate, Object strongReference) {\n+    WeakSafeLock(Lock delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n@@ -344,9 +344,9 @@\n     private final Condition delegate;\n \n     @SuppressWarnings(\"unused\")\n-    private final Object strongReference;\n+    private final WeakSafeReadWriteLock strongReference;\n \n-    WeakSafeCondition(Condition delegate, Object strongReference) {\n+    WeakSafeCondition(Condition delegate, WeakSafeReadWriteLock strongReference) {\n       this.delegate = delegate;\n       this.strongReference = strongReference;\n     }\n",
        "projectName": "google.guava",
        "bugLineNum": 326,
        "bugNodeStartChar": 13268,
        "bugNodeLength": 22,
        "fixLineNum": 326,
        "fixNodeStartChar": 13268,
        "fixNodeLength": 37,
        "sourceBeforeFix": "Object strongReference",
        "sourceAfterFix": "WeakSafeReadWriteLock strongReference"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "a3b9f6f1ebb21dd528effcceba2ac207f40b15e8",
        "fixCommitParentSHA1": "2dc019709b661828a56b6f1111b4701d8890d527",
        "bugFilePath": "parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java",
        "fixPatch": "diff --git a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\nindex 958dc73..64ddc72 100644\n--- a/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n+++ b/parse/src/main/java/com/alibaba/otter/canal/parse/inbound/mysql/ddl/DruidDdlParser.java\n@@ -187,7 +187,7 @@\n     }\n \n     public static String unescapeName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if ((c0 == '\"' && x0 == '\"') || (c0 == '`' && x0 == '`')) {\n@@ -199,7 +199,7 @@\n     }\n \n     public static String unescapeQuotaName(String name) {\n-        if (name.length() > 2) {\n+        if (name != null && name.length() > 2) {\n             char c0 = name.charAt(0);\n             char x0 = name.charAt(name.length() - 1);\n             if (c0 == '\\'' && x0 == '\\'') {\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 190,
        "bugNodeStartChar": 10326,
        "bugNodeLength": 17,
        "fixLineNum": 190,
        "fixNodeStartChar": 10326,
        "fixNodeLength": 33,
        "sourceBeforeFix": "name.length() > 2",
        "sourceAfterFix": "name != null && name.length() > 2"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b7bc9bf9bd0793f2acbf158651e3200b30f97d99",
        "fixCommitParentSHA1": "cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc",
        "bugFilePath": "storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java b/storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java\nindex aae4231..1095fff 100644\n--- a/storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java\n+++ b/storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java\n@@ -94,7 +94,7 @@\n     public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {\n         List<ACL> aclList = null;\n         String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);\n-        if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) {\n+        if (Utils.isZkAuthenticationConfiguredTopology(topoConf)) {\n             aclList = new ArrayList<>();\n             ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n             aclList.add(acl1);\n",
        "projectName": "apache.storm",
        "bugLineNum": 97,
        "bugNodeStartChar": 4595,
        "bugNodeLength": 55,
        "fixLineNum": 97,
        "fixNodeStartChar": 4595,
        "fixNodeLength": 52,
        "sourceBeforeFix": "Utils.isZkAuthenticationConfiguredStormServer(topoConf)",
        "sourceAfterFix": "Utils.isZkAuthenticationConfiguredTopology(topoConf)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8af2dd3da2bacbd93965edb9de9d5ba3a8bf9ca4",
        "fixCommitParentSHA1": "bf140acd20fd3671919673e74da212a0faf43485",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\nindex ff56a26..d291b39 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n@@ -4736,7 +4736,7 @@\n                   HConstants.HREGION_EDITS_REPLAY_SKIP_ERRORS + \" instead.\");\n         }\n         if (skipErrors) {\n-          Path p = WALSplitter.moveAsideBadEditsFile(walFS, edits);\n+          Path p = WALSplitter.moveAsideBadEditsFile(fs, edits);\n           LOG.error(HConstants.HREGION_EDITS_REPLAY_SKIP_ERRORS\n               + \"=true so continuing. Renamed \" + edits +\n               \" as \" + p, e);\n",
        "projectName": "apache.hbase",
        "bugLineNum": 4739,
        "bugNodeStartChar": 191534,
        "bugNodeLength": 47,
        "fixLineNum": 4739,
        "fixNodeStartChar": 191534,
        "fixNodeLength": 44,
        "sourceBeforeFix": "WALSplitter.moveAsideBadEditsFile(walFS,edits)",
        "sourceAfterFix": "WALSplitter.moveAsideBadEditsFile(fs,edits)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c9a1cc9df3dc4fe2eef78ad6090a9b1d95a02557",
        "fixCommitParentSHA1": "adccab823675fb33685c5c0268388fc9857b7047",
        "bugFilePath": "clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java",
        "fixPatch": "diff --git a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java\nindex bb04a27..3af37f9 100644\n--- a/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java\n+++ b/clustering/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/StoreWriteBehindResourceDefinition.java\n@@ -56,7 +56,7 @@\n             .setXmlName(Attribute.FLUSH_LOCK_TIMEOUT.getLocalName())\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(1))\n+            .setDefaultValue(new ModelNode().set(1L))\n             .build();\n \n     static final SimpleAttributeDefinition MODIFICATION_QUEUE_SIZE = new SimpleAttributeDefinitionBuilder(ModelKeys.MODIFICATION_QUEUE_SIZE, ModelType.INT, true)\n@@ -70,7 +70,7 @@\n             .setXmlName(Attribute.SHUTDOWN_TIMEOUT.getLocalName())\n             .setAllowExpression(true)\n             .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)\n-            .setDefaultValue(new ModelNode().set(25000))\n+            .setDefaultValue(new ModelNode().set(25000L))\n             .build();\n \n     static final SimpleAttributeDefinition THREAD_POOL_SIZE = new SimpleAttributeDefinitionBuilder(ModelKeys.THREAD_POOL_SIZE, ModelType.INT, true)\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 73,
        "bugNodeStartChar": 3677,
        "bugNodeLength": 26,
        "fixLineNum": 73,
        "fixNodeStartChar": 3677,
        "fixNodeLength": 27,
        "sourceBeforeFix": "new ModelNode().set(25000)",
        "sourceAfterFix": "new ModelNode().set(25000L)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "199acbe5764ea5ec39c1b36d7a28721671f17dd3",
        "fixCommitParentSHA1": "07e36ddebe48ab4acf0c2aff359b7f284a5cec92",
        "bugFilePath": "test/web/org/openmrs/web/controller/user/UserFormControllerTest.java",
        "fixPatch": "diff --git a/test/web/org/openmrs/web/controller/user/UserFormControllerTest.java b/test/web/org/openmrs/web/controller/user/UserFormControllerTest.java\nindex 52f4f54..bef5287 100644\n--- a/test/web/org/openmrs/web/controller/user/UserFormControllerTest.java\n+++ b/test/web/org/openmrs/web/controller/user/UserFormControllerTest.java\n@@ -42,7 +42,7 @@\n \t    User user = controller.formBackingObject(request, null);\n \t    user.addName(new PersonName(\"This\", \"is\", \"Test\"));\n \t    user.getPerson().setGender(\"F\");\n-\t    controller.handleSubmission(request, new MockHttpSession(), new ModelMap(), \"Save User\", \"pass123\", \"pass123\", new String[0], user, new BindException(user, \"user\"));\n+\t    controller.handleSubmission(request, new MockHttpSession(), new ModelMap(), \"Save User\", \"pass123\", \"pass123\", new String[0], \"true\", user, new BindException(user, \"user\"));\n     }\n \t\n }\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 45,
        "bugNodeStartChar": 1910,
        "bugNodeLength": 164,
        "fixLineNum": 45,
        "fixNodeStartChar": 1910,
        "fixNodeLength": 172,
        "sourceBeforeFix": "controller.handleSubmission(request,new MockHttpSession(),new ModelMap(),\"Save User\",\"pass123\",\"pass123\",new String[0],user,new BindException(user,\"user\"))",
        "sourceAfterFix": "controller.handleSubmission(request,new MockHttpSession(),new ModelMap(),\"Save User\",\"pass123\",\"pass123\",new String[0],\"true\",user,new BindException(user,\"user\"))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "782a7444a6cf0d212cac614358d830cd66b8ae10",
        "fixCommitParentSHA1": "f4a5e678af30db49529cc48d834e520db72a9e83",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/PartitionPruner.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/PartitionPruner.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/PartitionPruner.java\nindex 45f0d38..aeb9cc3 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/PartitionPruner.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/PartitionPruner.java\n@@ -213,7 +213,7 @@\n         assert(expr.getChildCount() == 2);\n         String tabAlias = BaseSemanticAnalyzer.unescapeIdentifier(expr.getChild(0).getText());\n         String colName = BaseSemanticAnalyzer.unescapeIdentifier(expr.getChild(1).getText());\n-        if (tabAlias.equals(tableAlias) && tab.isPartitionKey(colName)) {\n+        if (tabAlias.equalsIgnoreCase(tableAlias) && tab.isPartitionKey(colName)) {\n           hasPPred = true;\n         }\n         break;\n",
        "projectName": "apache.hive",
        "bugLineNum": 216,
        "bugNodeStartChar": 8958,
        "bugNodeLength": 27,
        "fixLineNum": 216,
        "fixNodeStartChar": 8958,
        "fixNodeLength": 37,
        "sourceBeforeFix": "tabAlias.equals(tableAlias)",
        "sourceAfterFix": "tabAlias.equalsIgnoreCase(tableAlias)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2381bd9b4a10217c8678a4fb4c1d43a090e396b8",
        "fixCommitParentSHA1": "0a082de9f7310fb72c71cf3dc0071698d95b31d3",
        "bugFilePath": "components/camel-ibatis/src/test/java/org/apache/camel/component/ibatis/IBatisPollingDelayRouteTest.java",
        "fixPatch": "diff --git a/components/camel-ibatis/src/test/java/org/apache/camel/component/ibatis/IBatisPollingDelayRouteTest.java b/components/camel-ibatis/src/test/java/org/apache/camel/component/ibatis/IBatisPollingDelayRouteTest.java\nindex 6bf1ef0..4193b36 100644\n--- a/components/camel-ibatis/src/test/java/org/apache/camel/component/ibatis/IBatisPollingDelayRouteTest.java\n+++ b/components/camel-ibatis/src/test/java/org/apache/camel/component/ibatis/IBatisPollingDelayRouteTest.java\n@@ -42,7 +42,7 @@\n         assertMockEndpointsSatisfied();\n         long delta = System.currentTimeMillis() - start;\n \n-        assertTrue(\"Should not take that long: \" + delta, delta < 5000);\n+        assertTrue(\"Should not take that long: \" + delta, delta < 7000);\n     }\n \n     private void createTestData() {\n",
        "projectName": "apache.camel",
        "bugLineNum": 45,
        "bugNodeStartChar": 1628,
        "bugNodeLength": 12,
        "fixLineNum": 45,
        "fixNodeStartChar": 1628,
        "fixNodeLength": 12,
        "sourceBeforeFix": "delta < 5000",
        "sourceAfterFix": "delta < 7000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a63faf44e1b103a49d25a15c720fc5940ae9fc07",
        "fixCommitParentSHA1": "2b0a4f13844bbb93482c52bd2c60a55e3fa24a88",
        "bugFilePath": "retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java",
        "fixPatch": "diff --git a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\nindex 5897161..dea046f 100644\n--- a/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n+++ b/retrofit-adapters/rxjava2/src/test/java/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactoryTest.java\n@@ -73,10 +73,10 @@\n     assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyClass = new TypeToken<Maybe<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyClass = new TypeToken<Flowable<String>>() {}.getType();\n-    assertThat(factory.get(sBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyWildcard = new TypeToken<Observable<? extends String>>() {}.getType();\n@@ -86,10 +86,10 @@\n     assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mBodyWildcard = new TypeToken<Maybe<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fBodyWildcard = new TypeToken<Flowable<? extends String>>() {}.getType();\n-    assertThat(factory.get(sBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oBodyGeneric = new TypeToken<Observable<List<String>>>() {}.getType();\n@@ -99,10 +99,10 @@\n     assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type mBodyGeneric = new TypeToken<Maybe<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n     Type fBodyGeneric = new TypeToken<Flowable<List<String>>>() {}.getType();\n-    assertThat(factory.get(sBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fBodyGeneric, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(new TypeToken<List<String>>() {}.getType());\n \n     Type oResponseClass = new TypeToken<Observable<Response<String>>>() {}.getType();\n@@ -112,10 +112,10 @@\n     assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseClass = new TypeToken<Maybe<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseClass = new TypeToken<Flowable<Response<String>>>() {}.getType();\n-    assertThat(factory.get(sResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResponseWildcard = new TypeToken<Observable<Response<? extends String>>>() {}.getType();\n@@ -125,10 +125,10 @@\n     assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResponseWildcard = new TypeToken<Maybe<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResponseWildcard = new TypeToken<Flowable<Response<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResponseWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultClass = new TypeToken<Observable<Result<String>>>() {}.getType();\n@@ -138,10 +138,10 @@\n     assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultClass = new TypeToken<Maybe<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultClass = new TypeToken<Flowable<Result<String>>>() {}.getType();\n-    assertThat(factory.get(sResultClass, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultClass, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n \n     Type oResultWildcard = new TypeToken<Observable<Result<? extends String>>>() {}.getType();\n@@ -151,10 +151,10 @@\n     assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type mResultWildcard = new TypeToken<Maybe<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(mResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n     Type fResultWildcard = new TypeToken<Flowable<Result<? extends String>>>() {}.getType();\n-    assertThat(factory.get(sResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n+    assertThat(factory.get(fResultWildcard, NO_ANNOTATIONS, retrofit).responseType())\n         .isEqualTo(String.class);\n   }\n \n",
        "projectName": "square.retrofit",
        "bugLineNum": 102,
        "bugNodeStartChar": 4227,
        "bugNodeLength": 51,
        "fixLineNum": 102,
        "fixNodeStartChar": 4227,
        "fixNodeLength": 51,
        "sourceBeforeFix": "factory.get(sBodyGeneric,NO_ANNOTATIONS,retrofit)",
        "sourceAfterFix": "factory.get(mBodyGeneric,NO_ANNOTATIONS,retrofit)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e3e1fea787147261448e30c1745d9157f442cb9f",
        "fixCommitParentSHA1": "17e56f9c6b1e650c1ea9190d479ad390111234f1",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java b/src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java\nindex b27e6e0..f900ce2 100755\n--- a/src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java\n+++ b/src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java\n@@ -2447,7 +2447,7 @@\n                 }\r\n             }\r\n \r\n-            int power = 1;\r\n+            long power = 1;\r\n             boolean small = (chLocal == '.');\r\n             if (small) {\r\n                 chLocal = charAt(bp + (offset++));\r\n@@ -2500,7 +2500,7 @@\n                 count = bp + offset - start - 1;\r\n             }\r\n \r\n-            if ((!exp) && count < 12) {\r\n+            if ((!exp) && count < 17) {\r\n                 value = (float) (((double) intVal) / power);\r\n                 if (negative) {\r\n                     value = -value;\r\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 2503,
        "bugNodeStartChar": 77154,
        "bugNodeLength": 10,
        "fixLineNum": 2503,
        "fixNodeStartChar": 74652,
        "fixNodeLength": 10,
        "sourceBeforeFix": "count < 12",
        "sourceAfterFix": "count < 17"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "609361434c29e231a2d296dcd39e10de8dc50de6",
        "fixCommitParentSHA1": "6dfab498859b7406ed85bf48b5c81a06be1d0fe0",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\nindex 358a2ed..9f775e3 100644\n--- a/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n+++ b/src/test/java/com/alibaba/json/bvt/date/DateFieldTest9.java\n@@ -21,7 +21,7 @@\n     public void test_tw() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016/05/06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -35,7 +35,7 @@\n     public void test_cn() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016-05-06\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -49,7 +49,7 @@\n     public void test_cn_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -63,7 +63,7 @@\n     public void test_cn_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e745\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -77,7 +77,7 @@\n     public void test_cn_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u67086\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -91,7 +91,7 @@\n     public void test_cn_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\u5e7405\u670806\u65e5\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -105,7 +105,7 @@\n     public void test_kr_1() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -119,7 +119,7 @@\n     public void test_kr_2() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub1445\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -133,7 +133,7 @@\n     public void test_kr_3() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d46\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -147,7 +147,7 @@\n     public void test_kr_4() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"2016\ub14405\uc6d406\uc77c\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -161,7 +161,7 @@\n     public void test_de() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06.05.2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n@@ -175,7 +175,7 @@\n     public void test_in() throws Exception {\n         Entity vo = JSON.parseObject(\"{\\\"date\\\":\\\"06-05-2016\\\"}\", Entity.class);\n \n-        Calendar calendar = Calendar.getInstance(JSON.defaultLocale);\n+        Calendar calendar = Calendar.getInstance(JSON.defaultTimeZone, JSON.defaultLocale);\n         calendar.setTime(vo.date);\n         Assert.assertEquals(2016, calendar.get(Calendar.YEAR));\n         Assert.assertEquals(4, calendar.get(Calendar.MONTH));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 24,
        "bugNodeStartChar": 603,
        "bugNodeLength": 40,
        "fixLineNum": 24,
        "fixNodeStartChar": 603,
        "fixNodeLength": 62,
        "sourceBeforeFix": "Calendar.getInstance(JSON.defaultLocale)",
        "sourceAfterFix": "Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "cedf72640d917a1d2df5ca88fb6a41d624ffd1ab",
        "fixCommitParentSHA1": "178de15fac9b9d085bed8bae05360dd7a27715bc",
        "bugFilePath": "src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java b/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\nindex 50d820d..21d9c93 100644\n--- a/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\n+++ b/src/main/java/com/alibaba/druid/sql/dialect/postgresql/visitor/PGExportParameterVisitor.java\n@@ -46,7 +46,7 @@\n     }\r\n \r\n     public PGExportParameterVisitor(final List<Object> parameters){\r\n-        this(parameters,new StringBuilder(),false);\r\n+        this(parameters,new StringBuilder(),true);\r\n     }\r\n \r\n     public PGExportParameterVisitor(final Appendable appender) {\r\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 49,
        "bugNodeStartChar": 1957,
        "bugNodeLength": 43,
        "fixLineNum": 49,
        "fixNodeStartChar": 1909,
        "fixNodeLength": 42,
        "sourceBeforeFix": "this(parameters,new StringBuilder(),false); ",
        "sourceAfterFix": "this(parameters,new StringBuilder(),true); "
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "7e00d8df5cbf268a8b13544d2a132f84166fe033",
        "fixCommitParentSHA1": "3c69ee4ccfbfbef1c3abf8e1fe91d6d79b30c16a",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\nindex 5355448..409731d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cache/impl/CacheStatisticsImpl.java\n@@ -296,12 +296,12 @@\n         for (;;) {\n             long nanos = removeTimeTakenNanos;\n             if (nanos <= Long.MAX_VALUE - duration) {\n-                if (REMOVALS_UPDATER.compareAndSet(this, nanos, nanos + duration)) {\n+                if (REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this, nanos, nanos + duration)) {\n                     return;\n                 }\n             } else {\n                 //counter full. Just reset.\n-                if (REMOVALS_UPDATER.compareAndSet(this, nanos, duration)) {\n+                if (REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this, nanos, duration)) {\n                     clear();\n                     return;\n                 }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 304,
        "bugNodeStartChar": 10137,
        "bugNodeLength": 53,
        "fixLineNum": 304,
        "fixNodeStartChar": 10137,
        "fixNodeLength": 68,
        "sourceBeforeFix": "REMOVALS_UPDATER.compareAndSet(this,nanos,duration)",
        "sourceAfterFix": "REMOVE_TIME_TAKEN_NANOS_UPDATER.compareAndSet(this,nanos,duration)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b52fefcc898f6f82c627bba9fcdd38a62583b22",
        "fixCommitParentSHA1": "083c9eb1dc214cfe6de4dc4f9f83ff163ff6b79e",
        "bugFilePath": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java",
        "fixPatch": "diff --git a/src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java b/src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java\nindex 395f4ac..f20e030 100644\n--- a/src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java\n+++ b/src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java\n@@ -61,7 +61,7 @@\n                     final int actualIndent = getLineStart(line, tabWidth);\n \n                     if (actualIndent != indentInComment) {\n-                        throw new RuntimeException(String.format(\n+                        throw new IllegalStateException(String.format(\n                                         \"File \\\"%1$s\\\" has incorrect indentation in comment.\"\n                                                         + \"Line %2$d: comment:%3$d, actual:%4$d.\",\n                                         aFileName,\n@@ -75,14 +75,14 @@\n                     }\n \n                     if (!isCommentConsistent(comment)) {\n-                        throw new RuntimeException(String.format(\n+                        throw new IllegalStateException(String.format(\n                                         \"File \\\"%1$s\\\" has inconsistent comment on line %2$d\",\n                                         aFileName,\n                                         lineNumber));\n                     }\n                 }\n                 else if (NONEMPTY_LINE_REGEX.matcher(line).matches()) {\n-                    throw new RuntimeException(String.format(\n+                    throw new IllegalStateException(String.format(\n                                     \"File \\\"%1$s\\\" has no indentation comment or its format \"\n                                                     + \"malformed. Error on line: %2$d(%3$s)\",\n                                     aFileName,\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 78,
        "bugNodeStartChar": 3147,
        "bugNodeLength": 234,
        "fixLineNum": 78,
        "fixNodeStartChar": 3147,
        "fixNodeLength": 239,
        "sourceBeforeFix": "new RuntimeException(String.format(\"File \\\"%1$s\\\" has inconsistent comment on line %2$d\",aFileName,lineNumber))",
        "sourceAfterFix": "new IllegalStateException(String.format(\"File \\\"%1$s\\\" has inconsistent comment on line %2$d\",aFileName,lineNumber))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "a258a1045c85126aae00cfbac5b48d19e8d533fa",
        "fixCommitParentSHA1": "075d5e8d12d02a93b8fdc828baec42f6a0aa802b",
        "bugFilePath": "spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\nindex 2d2d632..0683800 100644\n--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\n+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/CacheStatisticsAutoConfigurationTests.java\n@@ -199,7 +199,7 @@\n \n \tprivate Cache getCache(String cacheName) {\n \t\tCache cache = this.cacheManager.getCache(cacheName);\n-\t\tAssert.notNull(\"No cache with name '\" + cacheName + \"' found.\");\n+\t\tAssert.notNull(cache, \"No cache with name '\" + cacheName + \"' found.\");\n \t\treturn cache;\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 202,
        "bugNodeStartChar": 7225,
        "bugNodeLength": 63,
        "fixLineNum": 202,
        "fixNodeStartChar": 7225,
        "fixNodeLength": 70,
        "sourceBeforeFix": "Assert.notNull(\"No cache with name '\" + cacheName + \"' found.\")",
        "sourceAfterFix": "Assert.notNull(cache,\"No cache with name '\" + cacheName + \"' found.\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6bae902bd35ed4f57e7a5d612b7ad9b72f4559bc",
        "fixCommitParentSHA1": "e4cf805a6a27301672660756202e8dedee1e012b",
        "bugFilePath": "test/com/google/javascript/rhino/NodeTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/rhino/NodeTest.java b/test/com/google/javascript/rhino/NodeTest.java\nindex 5b5ad2b..6ad4d06 100644\n--- a/test/com/google/javascript/rhino/NodeTest.java\n+++ b/test/com/google/javascript/rhino/NodeTest.java\n@@ -107,13 +107,13 @@\n \n   public void testCheckTreeEqualsBooleanSame() {\n     Node node1 = new Node(1);\n-    assertEquals(true, node1.checkTreeEqualsSilent(node1));\n+    assertEquals(true, node1.isEquivalentTo(node1));\n   }\n \n   public void testCheckTreeEqualsBooleanDifferent() {\n     Node node1 = new Node(1);\n     Node node2 = new Node(2);\n-    assertEquals(false, node1.checkTreeEqualsSilent(node2));\n+    assertEquals(false, node1.isEquivalentTo(node2));\n   }\n \n   public void testCheckTreeEqualsImplDifferentIncProp() {\n@@ -130,7 +130,7 @@\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsSameNull() {\n@@ -138,7 +138,7 @@\n     JSTypeRegistry registry = new JSTypeRegistry(testErrorReporter);\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertTrue(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertTrue(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferent() {\n@@ -148,7 +148,7 @@\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n     node2.setJSType(registry.getNativeType(JSTypeNative.STRING_TYPE));\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testCheckTreeTypeAwareEqualsDifferentNull() {\n@@ -157,7 +157,7 @@\n     Node node1 = Node.newString(Token.NAME, \"f\");\n     node1.setJSType(registry.getNativeType(JSTypeNative.NUMBER_TYPE));\n     Node node2 = Node.newString(Token.NAME, \"f\");\n-    assertFalse(node1.checkTreeTypeAwareEqualsSilent(node2));\n+    assertFalse(node1.isEquivalentToTyped(node2));\n   }\n \n   public void testVarArgs1() {\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 110,
        "bugNodeStartChar": 3912,
        "bugNodeLength": 34,
        "fixLineNum": 110,
        "fixNodeStartChar": 3912,
        "fixNodeLength": 27,
        "sourceBeforeFix": "node1.checkTreeEqualsSilent(node1)",
        "sourceAfterFix": "node1.isEquivalentTo(node1)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "1c7750f426c0b90c0ac107b404ecbb8b7d33553d",
        "fixCommitParentSHA1": "77c6d31553d0e23f45032e700ca4a8c398240e1e",
        "bugFilePath": "hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java",
        "fixPatch": "diff --git a/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java b/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\nindex 23490af..f9915a2 100644\n--- a/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\n+++ b/hazelcast-client/src/main/java/com/hazelcast/client/spi/impl/ClientClusterServiceImpl.java\n@@ -250,7 +250,7 @@\n     private void _sendAndHandle(ConnectionFactory connectionFactory, Object obj, ResponseHandler handler) throws IOException {\n         ResponseStream stream = null;\n         while (stream == null) {\n-            if (active){\n+            if (!active){\n                 throw new HazelcastInstanceNotActiveException();\n             }\n             Connection conn = null;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 253,
        "bugNodeStartChar": 9804,
        "bugNodeLength": 6,
        "fixLineNum": 253,
        "fixNodeStartChar": 9804,
        "fixNodeLength": 7,
        "sourceBeforeFix": "active",
        "sourceAfterFix": "!active"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d4e7640fe2f77e350582a12f86b5e46a0e02bb08",
        "fixCommitParentSHA1": "d58eb8d10d379fbda5abc2bed313757453847f43",
        "bugFilePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/files/FileHandle.java b/gdx/src/com/badlogic/gdx/files/FileHandle.java\nindex bfe5e92..5650a43 100644\n--- a/gdx/src/com/badlogic/gdx/files/FileHandle.java\n+++ b/gdx/src/com/badlogic/gdx/files/FileHandle.java\n@@ -115,7 +115,7 @@\n \t\t}\r\n \t\ttry {\r\n \t\t\treturn new FileInputStream(file());\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error reading file: \" + file + \" (\" + type + \")\", ex);\r\n@@ -258,7 +258,7 @@\n \t\tparent().mkdirs();\r\n \t\ttry {\r\n \t\t\treturn new FileOutputStream(file(), append);\r\n-\t\t} catch (FileNotFoundException ex) {\r\n+\t\t} catch (Exception ex) {\r\n \t\t\tif (file().isDirectory())\r\n \t\t\t\tthrow new GdxRuntimeException(\"Cannot open a stream to a directory: \" + file + \" (\" + type + \")\", ex);\r\n \t\t\tthrow new GdxRuntimeException(\"Error writing file: \" + file + \" (\" + type + \")\", ex);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 118,
        "bugNodeStartChar": 4164,
        "bugNodeLength": 24,
        "fixLineNum": 118,
        "fixNodeStartChar": 4047,
        "fixNodeLength": 12,
        "sourceBeforeFix": "FileNotFoundException ex",
        "sourceAfterFix": "Exception ex"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d837ac1e1fd6d03f22ebd458ddc5bbeb33de9889",
        "fixCommitParentSHA1": "3ce178f7e3fbcf271b6deae19077807fa8ab3e5d",
        "bugFilePath": "servers/src/main/java/tachyon/worker/block/BlockMetadataManagerView.java",
        "fixPatch": "diff --git a/servers/src/main/java/tachyon/worker/block/BlockMetadataManagerView.java b/servers/src/main/java/tachyon/worker/block/BlockMetadataManagerView.java\nindex a767905..3e3cee7 100644\n--- a/servers/src/main/java/tachyon/worker/block/BlockMetadataManagerView.java\n+++ b/servers/src/main/java/tachyon/worker/block/BlockMetadataManagerView.java\n@@ -55,7 +55,7 @@\n   public BlockMetadataManagerView(BlockMetadataManager manager, Set<Integer> pinnedInodes,\n       Set<Long> lockedBlocks) throws IOException {\n     mMetadataManager = Preconditions.checkNotNull(manager);\n-    mPinnedInodes.addAll(Preconditions.checkNotNull(mPinnedInodes));\n+    mPinnedInodes.addAll(Preconditions.checkNotNull(pinnedInodes));\n     mLockedBlocks.addAll(Preconditions.checkNotNull(lockedBlocks));\n \n     // iteratively create all StorageTierViews and StorageDirViews\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 58,
        "bugNodeStartChar": 2297,
        "bugNodeLength": 41,
        "fixLineNum": 58,
        "fixNodeStartChar": 2297,
        "fixNodeLength": 40,
        "sourceBeforeFix": "Preconditions.checkNotNull(mPinnedInodes)",
        "sourceAfterFix": "Preconditions.checkNotNull(pinnedInodes)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0e2a0eede5bf85f3c1f64e5752501eddf9ab7202",
        "fixCommitParentSHA1": "c8765bc9e09df13164a8513efc91141767239eea",
        "bugFilePath": "guava-tests/test/com/google/common/math/StatsTesting.java",
        "fixPatch": "diff --git a/guava-tests/test/com/google/common/math/StatsTesting.java b/guava-tests/test/com/google/common/math/StatsTesting.java\nindex da9625c..ae26f1f 100644\n--- a/guava-tests/test/com/google/common/math/StatsTesting.java\n+++ b/guava-tests/test/com/google/common/math/StatsTesting.java\n@@ -246,7 +246,7 @@\n     LONG_MANY_VALUES_STATS_SNAPSHOT = accumulator.snapshot();\n   }\n \n-  static final List<Stats> ALL_STATS =\n+  static final ImmutableList<Stats> ALL_STATS =\n       ImmutableList.of(\n           EMPTY_STATS_VARARGS,\n           EMPTY_STATS_ITERABLE,\n@@ -313,7 +313,7 @@\n     CONSTANT_VALUES_PAIRED_STATS = accumulator.snapshot();\n   }\n \n-  static final List<PairedStats> ALL_PAIRED_STATS =\n+  static final ImmutableList<PairedStats> ALL_PAIRED_STATS =\n       ImmutableList.of(\n           EMPTY_PAIRED_STATS,\n           ONE_VALUE_PAIRED_STATS,\n",
        "projectName": "google.guava",
        "bugLineNum": 316,
        "bugNodeStartChar": 13532,
        "bugNodeLength": 17,
        "fixLineNum": 316,
        "fixNodeStartChar": 13532,
        "fixNodeLength": 26,
        "sourceBeforeFix": "List<PairedStats>",
        "sourceAfterFix": "ImmutableList<PairedStats>"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "eebcaa5425216fdc9a9c4349090fa68c6a2504d3",
        "fixCommitParentSHA1": "43e4684a43da4b8232bf59e1028f3e77d253d61c",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\nindex f0aabd9..0b06f01 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n@@ -1067,12 +1067,12 @@\n       ResultSet tables = null;\n \n       String catalog = this.connectionMetadataDefaultCatalog;\n-      if (dbSqlSessionFactory.getDatabaseCatalog() != null) {\n+      if (dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0) {\n         catalog = dbSqlSessionFactory.getDatabaseCatalog();\n       }\n \n       String schema = this.connectionMetadataDefaultSchema;\n-      if (dbSqlSessionFactory.getDatabaseSchema()!=null) {\n+      if (dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0) {\n         schema = dbSqlSessionFactory.getDatabaseSchema();\n       }\n       \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 1075,
        "bugNodeStartChar": 40337,
        "bugNodeLength": 45,
        "fixLineNum": 1075,
        "fixNodeStartChar": 40337,
        "fixNodeLength": 103,
        "sourceBeforeFix": "dbSqlSessionFactory.getDatabaseSchema() != null",
        "sourceAfterFix": "dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "c3cdefcf979188c68a8d9fc923f077f21497b5ab",
        "fixCommitParentSHA1": "b4ae7f080d6bb0f98e7c62f2143c53aa77041e51",
        "bugFilePath": "integration-tests/src/test/java/tachyon/shell/TfsShellTest.java",
        "fixPatch": "diff --git a/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java b/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\nindex 84cd38e..af99b9d 100644\n--- a/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\n+++ b/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\n@@ -528,15 +528,16 @@\n     String expected = \"\";\n     String format = \"%-10s%-25s%-15s%-15s%-5s\\n\";\n     expected += String.format(format, FormatUtils.getSizeFromBytes(10),\n-        TfsShell.convertMsToDate(files[0].getCreationTimeMs()), \"In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[0].getCreationTimeMs()), \"In Memory\", testUser,\n         \"/testRoot/testFileA\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(0),\n-        TfsShell.convertMsToDate(files[1].getCreationTimeMs()), \"\", testUser, \"/testRoot/testDir\");\n+        CommandUtils.convertMsToDate(files[1].getCreationTimeMs()), \"\", testUser,\n+        \"/testRoot/testDir\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(20),\n-        TfsShell.convertMsToDate(files[2].getCreationTimeMs()), \"In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[2].getCreationTimeMs()), \"In Memory\", testUser,\n         \"/testRoot/testDir/testFileB\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(30),\n-        TfsShell.convertMsToDate(files[3].getCreationTimeMs()), \"Not In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[3].getCreationTimeMs()), \"Not In Memory\", testUser,\n         \"/testRoot/testFileC\");\n     Assert.assertEquals(expected, mOutput.toString());\n     // clear testing username\n@@ -905,8 +906,8 @@\n   TachyonException {\n     String format = \"%-10s%-25s%-15s%-15s%-5s\\n\";\n     return String.format(format, FormatUtils.getSizeFromBytes(size),\n-        TfsShell.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs()), \"In Memory\",\n-        testUser, tUri.getPath());\n+        CommandUtils.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs()),\n+        \"In Memory\", testUser, tUri.getPath());\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 908,
        "bugNodeStartChar": 40916,
        "bugNodeLength": 75,
        "fixLineNum": 908,
        "fixNodeStartChar": 40916,
        "fixNodeLength": 79,
        "sourceBeforeFix": "TfsShell.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs())",
        "sourceAfterFix": "CommandUtils.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs())"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "9910fd182dab98e0b505348fa1a0b112994c9e2d",
        "fixCommitParentSHA1": "b1d9b851f8b959533378f933da6426af0f9f2c1f",
        "bugFilePath": "src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java b/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\nindex 6679e1f..af0b681 100644\n--- a/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\n+++ b/src/main/java/org/apache/ibatis/type/TypeAliasRegistry.java\n@@ -124,7 +124,8 @@\n     Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses();\r\n     for(Class<?> type : typeSet){\r\n       //Ignore inner classes and interfaces (including package-info.java)\r\n-      if (!type.isAnonymousClass() && !type.isInterface()) {\r\n+      // Skip also inner classes. See issue #6\r\n+      if (!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()) {\r\n         registerAlias(type);\r\n       }\r\n     }\r\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 127,
        "bugNodeStartChar": 4743,
        "bugNodeLength": 47,
        "fixLineNum": 128,
        "fixNodeStartChar": 4664,
        "fixNodeLength": 72,
        "sourceBeforeFix": "!type.isAnonymousClass() && !type.isInterface()",
        "sourceAfterFix": "!type.isAnonymousClass() && !type.isInterface() && !type.isMemberClass()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55a4b30e72ad36e69499aa5db9b25f63ea7884ac",
        "fixCommitParentSHA1": "5450703664242d9d51061b8de56f99837822a9ef",
        "bugFilePath": "components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java",
        "fixPatch": "diff --git a/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java b/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\nindex c734c23..4be5718 100644\n--- a/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\n+++ b/components/camel-spring/src/test/java/org/apache/camel/spring/issues/SpringChristianDLCLoseMessageIssueTest.java\n@@ -35,7 +35,7 @@\n         result.expectedMessageCount(2);\n \n         MockEndpoint error = getMockEndpoint(\"mock:error\");\n-        error.expectedMessageCount(2);\n+        error.expectedMinimumMessageCount(2);\n \n         // should newer get a message as DLC handles it\n         MockEndpoint kaboom = getMockEndpoint(\"mock:kaboom\");\n@@ -57,9 +57,9 @@\n         MockEndpoint result = getMockEndpoint(\"mock:result\");\n         result.expectedMessageCount(2);\n \n-        // should get 1 message when seda:bye is full\n+        // should get at least 1 message when seda:bye is full\n         MockEndpoint error = getMockEndpoint(\"mock:error\");\n-        error.expectedMessageCount(1);\n+        error.expectedMinimumMessageCount(1);\n \n         template.sendBody(\"direct:start\", \"Hello World\");\n         template.sendBody(\"direct:start\", \"Bye World\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 62,
        "bugNodeStartChar": 2472,
        "bugNodeLength": 29,
        "fixLineNum": 62,
        "fixNodeStartChar": 2472,
        "fixNodeLength": 36,
        "sourceBeforeFix": "error.expectedMessageCount(1)",
        "sourceAfterFix": "error.expectedMinimumMessageCount(1)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e09d2f32fb1c7f2ab8d1e41fdb72e00adb7032ff",
        "fixCommitParentSHA1": "f88cd62354464a3445c68976d6f3a535d775180a",
        "bugFilePath": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java",
        "fixPatch": "diff --git a/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\nindex a6aa310..968a149 100644\n--- a/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\n+++ b/codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResource.java\n@@ -74,7 +74,7 @@\n      * Returns a duplicate of this resource record.\n      */\n     @Override\n-    public ByteBufHolder duplicate() {\n+    public DnsResource duplicate() {\n         return new DnsResource(name(), type(), dnsClass(), ttl, content.duplicate());\n     }\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 73,
        "bugNodeStartChar": 2077,
        "bugNodeLength": 208,
        "fixLineNum": 73,
        "fixNodeStartChar": 2077,
        "fixNodeLength": 206,
        "sourceBeforeFix": "/**   * Returns a duplicate of this resource record.  */ @Override public ByteBufHolder duplicate(){   return new DnsResource(name(),type(),dnsClass(),ttl,content.duplicate()); } ",
        "sourceAfterFix": "/**   * Returns a duplicate of this resource record.  */ @Override public DnsResource duplicate(){   return new DnsResource(name(),type(),dnsClass(),ttl,content.duplicate()); } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "bd229bdbd2ea75bef4d5c5927fafd92a44e018a7",
        "fixCommitParentSHA1": "e5abb6616758f2b76adb358cebc76228f4699b53",
        "bugFilePath": "dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java",
        "fixPatch": "diff --git a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\nindex a1a81e6..d6b2704 100644\n--- a/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n+++ b/dropwizard-client/src/main/java/io/dropwizard/client/HttpClientBuilder.java\n@@ -88,7 +88,7 @@\n                 .setSoTimeout(timeout)\n                 .build();\n \n-        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy))\n+        builder.setRequestExecutor(new InstrumentedHttpRequestExecutor(metricRegistry, metricNameStrategy, name))\n                 .setConnectionManager(manager)\n                 .setDefaultRequestConfig(requestConfig)\n                 .setDefaultSocketConfig(socketConfig)\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 91,
        "bugNodeStartChar": 3686,
        "bugNodeLength": 71,
        "fixLineNum": 91,
        "fixNodeStartChar": 3686,
        "fixNodeLength": 77,
        "sourceBeforeFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy)",
        "sourceAfterFix": "new InstrumentedHttpRequestExecutor(metricRegistry,metricNameStrategy,name)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6618cef776cf1c9ce67ff8ee461412110ca5ada7",
        "fixCommitParentSHA1": "948ab73523bed79d1672884207fd3a06f33d9572",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\nindex b9250d6..f157006 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/legacy/metrics/MetricFetcherImpl.java\n@@ -139,7 +139,7 @@\n \t\t\t\tqueryServiceAddressesFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<String> queryServiceAddresses, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting paths for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting paths for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tfor (String queryServiceAddress : queryServiceAddresses) {\n \t\t\t\t\t\t\t\tretrieveAndQueryMetrics(queryServiceAddress);\n@@ -157,7 +157,7 @@\n \t\t\t\ttaskManagerQueryServiceGatewaysFuture.whenCompleteAsync(\n \t\t\t\t\t(Collection<Tuple2<ResourceID, String>> queryServiceGateways, Throwable throwable) -> {\n \t\t\t\t\t\tif (throwable != null) {\n-\t\t\t\t\t\t\tLOG.warn(\"Requesting TaskManager's path for query services failed.\", throwable);\n+\t\t\t\t\t\t\tLOG.debug(\"Requesting TaskManager's path for query services failed.\", throwable);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tList<String> taskManagersToRetain = queryServiceGateways\n \t\t\t\t\t\t\t\t.stream()\n@@ -175,7 +175,7 @@\n \t\t\t\t\texecutor);\n \t\t\t}\n \t\t} catch (Exception e) {\n-\t\t\tLOG.warn(\"Exception while fetching metrics.\", e);\n+\t\t\tLOG.debug(\"Exception while fetching metrics.\", e);\n \t\t}\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 160,
        "bugNodeStartChar": 6286,
        "bugNodeLength": 79,
        "fixLineNum": 160,
        "fixNodeStartChar": 6286,
        "fixNodeLength": 80,
        "sourceBeforeFix": "LOG.warn(\"Requesting TaskManager's path for query services failed.\",throwable)",
        "sourceAfterFix": "LOG.debug(\"Requesting TaskManager's path for query services failed.\",throwable)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a295b91c37f681199a83fdb963344c19e0d015c0",
        "fixCommitParentSHA1": "639746c600fda2645e33223cb7c6607cf7163783",
        "bugFilePath": "hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java",
        "fixPatch": "diff --git a/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java b/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\nindex 6a1062d..f6f6cca 100644\n--- a/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\n+++ b/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\n@@ -119,7 +119,7 @@\n             String sessionTTL = getParam(\"session-ttl-seconds\");\n             if (sessionTTL != null) {\n                 MapConfig mapConfig = hzConfig.getMapConfig(clusterMapName);\n-                mapConfig.setTimeToLiveSeconds(Integer.valueOf(sessionTTL));\n+                mapConfig.setTimeToLiveSeconds(Integer.parseInt(sessionTTL));\n                 hzConfig.addMapConfig(mapConfig);\n             }\n         } catch (UnsupportedOperationException ignored) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 122,
        "bugNodeStartChar": 4163,
        "bugNodeLength": 27,
        "fixLineNum": 122,
        "fixNodeStartChar": 4163,
        "fixNodeLength": 28,
        "sourceBeforeFix": "Integer.valueOf(sessionTTL)",
        "sourceAfterFix": "Integer.parseInt(sessionTTL)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "eba6f9a2f7bfd15a9adf15d356e699a0143bb5a1",
        "fixCommitParentSHA1": "0437722449c59fdc21fc5d18a59e5e0b961208af",
        "bugFilePath": "flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java",
        "fixPatch": "diff --git a/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java b/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\nindex 39386e6..4cf855a 100644\n--- a/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\n+++ b/flink-staging/flink-tez/src/main/java/org/apache/flink/tez/runtime/TezRuntimeEnvironment.java\n@@ -36,7 +36,7 @@\n \tpublic TezRuntimeEnvironment(long totalMemory) {\n \t\tint pageSize = DEFAULT_PAGE_SIZE;\n \t\tint numSlots = DEFAULT_NUM_SLOTS;\n-\t\tthis.memoryManager = new DefaultMemoryManager(totalMemory, numSlots, pageSize);\n+\t\tthis.memoryManager = new DefaultMemoryManager(totalMemory, numSlots, pageSize, true);\n \t\tthis.ioManager = new IOManagerAsync();\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 39,
        "bugNodeStartChar": 1461,
        "bugNodeLength": 57,
        "fixLineNum": 39,
        "fixNodeStartChar": 1461,
        "fixNodeLength": 63,
        "sourceBeforeFix": "new DefaultMemoryManager(totalMemory,numSlots,pageSize)",
        "sourceAfterFix": "new DefaultMemoryManager(totalMemory,numSlots,pageSize,true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "998cca82220175171f60cd096ee26f600eabd8dc",
        "fixCommitParentSHA1": "5f5b80ddd0b8f51525764ffdda9ecc7b0bdf18b5",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java b/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\nindex 89cb7f4..61be69c 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/modularhelpers/SimpleClusterUtil.java\n@@ -62,9 +62,9 @@\n         return getNode(random.nextInt(cluster.size()));\n     }\n \n-    public void terminateRandomNode(){\n+    public void shutdownRandomNode(){\n         HazelcastInstance node = getRandomNode();\n-        node.getLifecycleService().terminate();\n+        node.getLifecycleService().shutdown();\n         cluster.remove(node);\n     }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 67,
        "bugNodeStartChar": 1916,
        "bugNodeLength": 38,
        "fixLineNum": 67,
        "fixNodeStartChar": 1916,
        "fixNodeLength": 37,
        "sourceBeforeFix": "node.getLifecycleService().terminate()",
        "sourceAfterFix": "node.getLifecycleService().shutdown()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d2b19965df52e66385a2d7146887a44cea50330a",
        "fixCommitParentSHA1": "ce819584559a211d448da934412514e00139d8f8",
        "bugFilePath": "src/com/google/javascript/jscomp/Compiler.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex d16c12e..3f38020 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -757,7 +757,7 @@\n   }\n \n   private void externExports() {\n-    logger.info(\"Creating extern file for exports\");\n+    logger.fine(\"Creating extern file for exports\");\n     startPass(\"externExports\");\n \n     ExternExportsPass pass = new ExternExportsPass(this);\n@@ -795,7 +795,7 @@\n    * Removes try/catch/finally statements for easier debugging.\n    */\n   void removeTryCatchFinally() {\n-    logger.info(\"Remove try/catch/finally\");\n+    logger.fine(\"Remove try/catch/finally\");\n     startPass(\"removeTryCatchFinally\");\n     RemoveTryCatch r = new RemoveTryCatch(this);\n     process(r);\n@@ -808,7 +808,7 @@\n    */\n   void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes,\n       Set<String> stripTypePrefixes, Set<String> stripNamePrefixes) {\n-    logger.info(\"Strip code\");\n+    logger.fine(\"Strip code\");\n     startPass(\"stripCode\");\n     StripCode r = new StripCode(this, stripTypes, stripNameSuffixes,\n         stripTypePrefixes, stripNamePrefixes);\n@@ -1784,7 +1784,7 @@\n \n   /** Control Flow Analysis. */\n   ControlFlowGraph<Node> computeCFG() {\n-    logger.info(\"Computing Control Flow Graph\");\n+    logger.fine(\"Computing Control Flow Graph\");\n     Tracer tracer = newTracer(\"computeCFG\");\n     ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);\n     process(cfa);\n@@ -1793,7 +1793,7 @@\n   }\n \n   public void normalize() {\n-    logger.info(\"Normalizing\");\n+    logger.fine(\"Normalizing\");\n     startPass(\"normalize\");\n     process(new Normalize(this, false));\n     endPass();\n@@ -1806,7 +1806,7 @@\n   }\n \n   void recordFunctionInformation() {\n-    logger.info(\"Recording function information\");\n+    logger.fine(\"Recording function information\");\n     startPass(\"recordFunctionInformation\");\n     RecordFunctionInformation recordFunctionInfoPass =\n         new RecordFunctionInformation(\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 798,
        "bugNodeStartChar": 24460,
        "bugNodeLength": 39,
        "fixLineNum": 798,
        "fixNodeStartChar": 24460,
        "fixNodeLength": 39,
        "sourceBeforeFix": "logger.info(\"Remove try/catch/finally\")",
        "sourceAfterFix": "logger.fine(\"Remove try/catch/finally\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "144599323abb2666d2226773d46a2cc26faa83ec",
        "fixCommitParentSHA1": "0931db176963ca3f16886b64edd3d6579fdfe046",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/container/JBossWebCometSupport.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/container/JBossWebCometSupport.java b/modules/cpr/src/main/java/org/atmosphere/container/JBossWebCometSupport.java\nindex 68a5383..f7b81ed 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/container/JBossWebCometSupport.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/container/JBossWebCometSupport.java\n@@ -152,7 +152,7 @@\n     @Override\n     public AsyncSupport complete(AtmosphereResourceImpl r) {\n         try {\n-            HttpEvent event = (HttpEvent) r.getRequest().getAttribute(HTTP_EVENT);\n+            HttpEvent event = (HttpEvent) r.getRequest(false).getAttribute(HTTP_EVENT);\n             // Resume without closing the underlying suspended connection.\n             if (event != null) {\n                 event.close();\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 155,
        "bugNodeStartChar": 5952,
        "bugNodeLength": 14,
        "fixLineNum": 155,
        "fixNodeStartChar": 5952,
        "fixNodeLength": 19,
        "sourceBeforeFix": "r.getRequest()",
        "sourceAfterFix": "r.getRequest(false)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "27229d0a21279c5f7aac5e6298690f578bdf5285",
        "fixCommitParentSHA1": "7597ed828f591429d5e4ce7c98de110bc5256c41",
        "bugFilePath": "components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/strategy/SftpChangedExclusiveReadLockStrategy.java",
        "fixPatch": "diff --git a/components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/strategy/SftpChangedExclusiveReadLockStrategy.java b/components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/strategy/SftpChangedExclusiveReadLockStrategy.java\nindex 7ac91c1..1efe642 100644\n--- a/components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/strategy/SftpChangedExclusiveReadLockStrategy.java\n+++ b/components/camel-ftp/src/main/java/org/apache/camel/component/file/remote/strategy/SftpChangedExclusiveReadLockStrategy.java\n@@ -90,7 +90,7 @@\n                     match = f.getFilename().equals(file.getFileNameOnly());\n                 }\n                 if (match) {\n-                    newLastModified = f.getAttrs().getMTime() * 1000;\n+                    newLastModified = f.getAttrs().getMTime() * 1000L;\n                     newLength = f.getAttrs().getSize();\n                 }\n             }\n",
        "projectName": "apache.camel",
        "bugLineNum": 93,
        "bugNodeStartChar": 4475,
        "bugNodeLength": 30,
        "fixLineNum": 93,
        "fixNodeStartChar": 4475,
        "fixNodeLength": 31,
        "sourceBeforeFix": "f.getAttrs().getMTime() * 1000",
        "sourceAfterFix": "f.getAttrs().getMTime() * 1000L"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "91aa3b2ca0c43b66747d7926e34fae38ef030efa",
        "fixCommitParentSHA1": "ad88b82e09f499758365212a694f4e1166214999",
        "bugFilePath": "modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java",
        "fixPatch": "diff --git a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\nindex 9902d80..fe45926 100644\n--- a/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n+++ b/modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java\n@@ -291,7 +291,7 @@\n             } else if (\"directed\".equalsIgnoreCase(key)) {\n                 if (value instanceof Double) {\n                     EdgeDirection type = ((Double) value) == 1 ? EdgeDirection.DIRECTED : EdgeDirection.UNDIRECTED;\n-                    edge.setType(type);\n+                    edge.setDirection(type);\n                 } else {\n                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, \"importerGML_error_directedparse\", edge.toString()), Issue.Level.WARNING));\n                 }\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 294,
        "bugNodeStartChar": 11459,
        "bugNodeLength": 18,
        "fixLineNum": 294,
        "fixNodeStartChar": 11459,
        "fixNodeLength": 23,
        "sourceBeforeFix": "edge.setType(type)",
        "sourceAfterFix": "edge.setDirection(type)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b2b03c23b19619735d114bb2fdd52c69831d776e",
        "fixCommitParentSHA1": "e53e773ef7131b9a7cd1cbdf319c2599109965fe",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcasterFactory.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcasterFactory.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcasterFactory.java\nindex 097aa4c..2ad9710 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcasterFactory.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcasterFactory.java\n@@ -159,7 +159,6 @@\n \n     private <T extends Broadcaster> T createBroadcaster(Class<T> c, Object id) throws BroadcasterCreationException {\n         try {\n-            //T b = c.getConstructor(String.class, AtmosphereConfig.class).newInstance(id.toString(), config);\n             T b = config.framework().newClassInstance(c, c);\n             b.initialize(id.toString(), legacyBroadcasterURI, config);\n             b.setSuspendPolicy(defaultPolicyInteger, defaultPolicy);\n@@ -220,7 +219,7 @@\n     }\n \n     public <T extends Broadcaster> T lookup(Class<T> c, Object id, boolean createIfNull, boolean unique) {\n-        synchronized (id) {\n+        synchronized (c) {\n             logger.trace(\"About to create {}\", id);\n             if (unique && store.get(id) != null) {\n                 throw new IllegalStateException(\"Broadcaster already exists \" + id + \". Use BroadcasterFactory.lookup instead\");\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 223,
        "bugNodeStartChar": 9514,
        "bugNodeLength": 1371,
        "fixLineNum": 223,
        "fixNodeStartChar": 9514,
        "fixNodeLength": 1370,
        "sourceBeforeFix": "synchronized (id) {   logger.trace(\"About to create {}\",id);   if (unique && store.get(id) != null) {     throw new IllegalStateException(\"Broadcaster already exists \" + id + \". Use BroadcasterFactory.lookup instead\");   }   T b=(T)store.get(id);   logger.trace(\"Looking in the store using {} returned {}\",id,b);   if (b != null && !c.isAssignableFrom(b.getClass())) {     String msg=\"Invalid lookup class \" + c.getName() + \". Cached class is: \"+ b.getClass().getName();     logger.debug(msg);     throw new IllegalStateException(msg);   }   if ((b == null && createIfNull) || (b != null && b.isDestroyed())) {     if (b != null) {       logger.trace(\"Removing destroyed Broadcaster {}\",b.getID());       store.remove(b.getID(),b);     }     Broadcaster nb=store.get(id);     if (nb == null) {       nb=createBroadcaster(c,id);       store.put(id,nb);     }     if (nb == null && logger.isTraceEnabled()) {       logger.trace(\"Added Broadcaster {} . Factory size: {}\",id,store.size());     }     b=(T)nb;   }   return b; } ",
        "sourceAfterFix": "synchronized (c) {   logger.trace(\"About to create {}\",id);   if (unique && store.get(id) != null) {     throw new IllegalStateException(\"Broadcaster already exists \" + id + \". Use BroadcasterFactory.lookup instead\");   }   T b=(T)store.get(id);   logger.trace(\"Looking in the store using {} returned {}\",id,b);   if (b != null && !c.isAssignableFrom(b.getClass())) {     String msg=\"Invalid lookup class \" + c.getName() + \". Cached class is: \"+ b.getClass().getName();     logger.debug(msg);     throw new IllegalStateException(msg);   }   if ((b == null && createIfNull) || (b != null && b.isDestroyed())) {     if (b != null) {       logger.trace(\"Removing destroyed Broadcaster {}\",b.getID());       store.remove(b.getID(),b);     }     Broadcaster nb=store.get(id);     if (nb == null) {       nb=createBroadcaster(c,id);       store.put(id,nb);     }     if (nb == null && logger.isTraceEnabled()) {       logger.trace(\"Added Broadcaster {} . Factory size: {}\",id,store.size());     }     b=(T)nb;   }   return b; } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "64140b52a44ae7ea10721b22fe72c4eb32847a0e",
        "fixCommitParentSHA1": "ce46444e903a4b41906fa7224f0496a1c7a3ff25",
        "bugFilePath": "api/src/test/java/org/asynchttpclient/async/RemoteSiteTest.java",
        "fixPatch": "diff --git a/api/src/test/java/org/asynchttpclient/async/RemoteSiteTest.java b/api/src/test/java/org/asynchttpclient/async/RemoteSiteTest.java\nindex 521ce1d..a6e08a2 100644\n--- a/api/src/test/java/org/asynchttpclient/async/RemoteSiteTest.java\n+++ b/api/src/test/java/org/asynchttpclient/async/RemoteSiteTest.java\n@@ -119,7 +119,7 @@\n         try {\n             Response response = c.prepareGet(\"http://google.com/\").execute().get(10, TimeUnit.SECONDS);\n             assertNotNull(response);\n-            assertEquals(response.getStatusCode(), 301);\n+            assertEquals(response.getStatusCode(), 302);\n         } finally {\n             c.close();\n         }\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 122,
        "bugNodeStartChar": 4862,
        "bugNodeLength": 43,
        "fixLineNum": 122,
        "fixNodeStartChar": 4862,
        "fixNodeLength": 43,
        "sourceBeforeFix": "assertEquals(response.getStatusCode(),301)",
        "sourceAfterFix": "assertEquals(response.getStatusCode(),302)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "dc75782a421691bbbb373cc9e226495d4c773876",
        "fixCommitParentSHA1": "e9d9194376c12133f24a8d5011fbe7eda14550af",
        "bugFilePath": "itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java",
        "fixPatch": "diff --git a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\nindex aa12b18..b3be9ed 100644\n--- a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n+++ b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n@@ -240,7 +240,7 @@\n \n     // Check size\n     assertTrue(\"\" + compressedProto.length, compressedProto.length < 290000);\n-    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 1000000);\n+    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 1100000);\n   }\n \n   @Test\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 243,
        "bugNodeStartChar": 37424,
        "bugNodeLength": 34,
        "fixLineNum": 243,
        "fixNodeStartChar": 37424,
        "fixNodeLength": 34,
        "sourceBeforeFix": "uncompressedProto.length < 1000000",
        "sourceAfterFix": "uncompressedProto.length < 1100000"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d6683d7a2ec72295c4beb49fe36858eb639ee032",
        "fixCommitParentSHA1": "8ab86900625d09163d558bd7840043420503af6b",
        "bugFilePath": "web/src/test/java/org/openmrs/web/dwr/DWRProviderServiceTest.java",
        "fixPatch": "diff --git a/web/src/test/java/org/openmrs/web/dwr/DWRProviderServiceTest.java b/web/src/test/java/org/openmrs/web/dwr/DWRProviderServiceTest.java\nindex 76be8e9..a9f54d9 100644\n--- a/web/src/test/java/org/openmrs/web/dwr/DWRProviderServiceTest.java\n+++ b/web/src/test/java/org/openmrs/web/dwr/DWRProviderServiceTest.java\n@@ -64,7 +64,7 @@\n \t        throws Exception {\r\n \t\t\r\n \t\tVector<Object> providers = service.findProvider(\"provider\", true, 0, 10);\r\n-\t\tAssert.assertEquals(3, providers.size());\r\n+\t\tAssert.assertEquals(4, providers.size());\r\n \t\t\r\n \t\tAssert.assertTrue(CollectionUtils.exists(providers, new Predicate() {\r\n \t\t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 67,
        "bugNodeStartChar": 2461,
        "bugNodeLength": 40,
        "fixLineNum": 67,
        "fixNodeStartChar": 2395,
        "fixNodeLength": 40,
        "sourceBeforeFix": "Assert.assertEquals(3,providers.size())",
        "sourceAfterFix": "Assert.assertEquals(4,providers.size())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "419fb4a4dee3cd001631daa06fe6b8c30095b468",
        "fixCommitParentSHA1": "dbe14af2997bc076aecccfd8eace039fde84e43c",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java\nindex dcec0ef..dfe1c6a 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/GetImageServlet.java\n@@ -157,7 +157,7 @@\n               \n               // We may have lost our ticket since last checkpoint, log in again, just in case\n               if (UserGroupInformation.isSecurityEnabled()) {\n-                UserGroupInformation.getCurrentUser().reloginFromKeytab();\n+                UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();\n               }\n               \n               // issue a HTTP get request to download the new fsimage \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 160,
        "bugNodeStartChar": 7085,
        "bugNodeLength": 57,
        "fixLineNum": 160,
        "fixNodeStartChar": 7085,
        "fixNodeLength": 68,
        "sourceBeforeFix": "UserGroupInformation.getCurrentUser().reloginFromKeytab()",
        "sourceAfterFix": "UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f8d278fe37db3f41735b89ef557d42da47e95228",
        "fixCommitParentSHA1": "0c187419da170f3028329d407510abe18b7a8af2",
        "bugFilePath": "api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java b/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\nindex e0dacb4..75a0564 100644\n--- a/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\n+++ b/api/src/main/java/org/openmrs/api/handler/PersonSaveHandler.java\n@@ -93,7 +93,7 @@\n \t\t// do the checks for voided attributes (also in PersonVoidHandler)\r\n \t\tif (person.isPersonVoided()) {\r\n \t\t\t\r\n-\t\t\tif (!StringUtils.hasLength(person.getVoidReason()))\r\n+\t\t\tif (!StringUtils.hasLength(person.getPersonVoidReason()))\r\n \t\t\t\tthrow new APIException(\r\n \t\t\t\t        \"The voided bit was set to true, so a void reason is required at save time for person: \" + person);\r\n \t\t\t\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 96,
        "bugNodeStartChar": 3181,
        "bugNodeLength": 22,
        "fixLineNum": 96,
        "fixNodeStartChar": 3086,
        "fixNodeLength": 28,
        "sourceBeforeFix": "person.getVoidReason()",
        "sourceAfterFix": "person.getPersonVoidReason()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1f8fb8ad37dbd4cb4be77d827ba19e857bd451d1",
        "fixCommitParentSHA1": "3755e5734f04e17dc88ec98aa6c12e28bc9d02c0",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\nindex f9450b7..e4b578a 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/interceptor/CommandContext.java\n@@ -168,7 +168,7 @@\n               // reduce log level, as normally we're not interested in logging this exception\n               log.debug(\"Optimistic locking exception : \" + exception);\n             } else {\n-              log.debug(\"Error while closing command context\", exception);\n+              log.error(\"Error while closing command context\", exception);\n             }\n \n             transactionContext.rollback();\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 171,
        "bugNodeStartChar": 7738,
        "bugNodeLength": 59,
        "fixLineNum": 171,
        "fixNodeStartChar": 7738,
        "fixNodeLength": 59,
        "sourceBeforeFix": "log.debug(\"Error while closing command context\",exception)",
        "sourceAfterFix": "log.error(\"Error while closing command context\",exception)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "335f8c0d2af9c55c731dc7b44d18c5e3796f4bd6",
        "fixCommitParentSHA1": "cd35fc8c917fecde13fedd6c6cf6a43699625bc7",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java b/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\nindex 623354a..6baf4fb 100644\n--- a/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/concurrent/lock/LockResourceImpl.java\n@@ -85,7 +85,7 @@\n             this.transactional = transactional;\n             return true;\n         } else if (isLockedBy(owner, threadId)) {\n-            if (this.referenceId == referenceId) {\n+            if (!transactional && this.referenceId == referenceId) {\n                 return true;\n             }\n             this.referenceId = referenceId;\n@@ -134,7 +134,7 @@\n             return false;\n         }\n \n-        if (this.referenceId == referenceId) {\n+        if (!this.transactional && this.referenceId == referenceId) {\n             return true;\n         }\n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 88,
        "bugNodeStartChar": 2802,
        "bugNodeLength": 31,
        "fixLineNum": 88,
        "fixNodeStartChar": 2802,
        "fixNodeLength": 49,
        "sourceBeforeFix": "this.referenceId == referenceId",
        "sourceAfterFix": "!transactional && this.referenceId == referenceId"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "1b65b9c021feaab009ed5bf597d9e791c4c16727",
        "fixCommitParentSHA1": "705c9e9c32976ba7fe8ead91d6ab43331e8560e6",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/MeteorServlet.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/MeteorServlet.java b/modules/cpr/src/main/java/org/atmosphere/cpr/MeteorServlet.java\nindex d9b826b..0c6a439 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/MeteorServlet.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/MeteorServlet.java\n@@ -101,7 +101,7 @@\n         }\n \n         // The annotation was used.\n-        if (servletClass != null && filterClass != null) {\n+        if (servletClass != null || filterClass != null) {\n             ReflectorServletProcessor r = new ReflectorServletProcessor();\n             r.setServletClassName(servletClass);\n             r.setFilterClassName(filterClass);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 104,
        "bugNodeStartChar": 4547,
        "bugNodeLength": 43,
        "fixLineNum": 104,
        "fixNodeStartChar": 4547,
        "fixNodeLength": 43,
        "sourceBeforeFix": "servletClass != null && filterClass != null",
        "sourceAfterFix": "servletClass != null || filterClass != null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "4573c829b4c62ce1ad2a8f214ecea56654128cf9",
        "fixCommitParentSHA1": "87a95ec3e1eb86ff86a8acf50d40e7acae55be33",
        "bugFilePath": "src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java b/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java\nindex 6596872..8f4fde9 100644\n--- a/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java\n+++ b/src/main/java/org/apache/hadoop/hbase/regionserver/MemStoreFlusher.java\n@@ -239,7 +239,7 @@\n       } catch (ConcurrentModificationException ex) {\n         continue;\n       } catch (Exception ex) {\n-        LOG.error(\"Cache flusher failed for entry \" + fqe);\n+        LOG.error(\"Cache flusher failed for entry \" + fqe, ex);\n         if (!server.checkFileSystem()) {\n           break;\n         }\n",
        "projectName": "apache.hbase",
        "bugLineNum": 242,
        "bugNodeStartChar": 9636,
        "bugNodeLength": 50,
        "fixLineNum": 242,
        "fixNodeStartChar": 9636,
        "fixNodeLength": 54,
        "sourceBeforeFix": "LOG.error(\"Cache flusher failed for entry \" + fqe)",
        "sourceAfterFix": "LOG.error(\"Cache flusher failed for entry \" + fqe,ex)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1e2beef03be68c2aae4116db3b5bcd783bb3f858",
        "fixCommitParentSHA1": "cabc23150772e1ba7124ead95e509c99284475b0",
        "bugFilePath": "shell/src/main/java/tachyon/shell/command/ChownRecursiveCommand.java",
        "fixPatch": "diff --git a/shell/src/main/java/tachyon/shell/command/ChownRecursiveCommand.java b/shell/src/main/java/tachyon/shell/command/ChownRecursiveCommand.java\nindex 9556ff5..c2c8b29 100644\n--- a/shell/src/main/java/tachyon/shell/command/ChownRecursiveCommand.java\n+++ b/shell/src/main/java/tachyon/shell/command/ChownRecursiveCommand.java\n@@ -24,7 +24,7 @@\n /**\n  * Changes the owner of a file or directory specified by args recursively.\n  */\n-public final class ChownRecursiveCommand extends AbstractACLCommand {\n+public final class ChownRecursiveCommand extends AbstractAclCommand {\n \n   public ChownRecursiveCommand(TachyonConf conf, TachyonFileSystem tfs) {\n     super(conf, tfs);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 24,
        "bugNodeStartChar": 961,
        "bugNodeLength": 651,
        "fixLineNum": 24,
        "fixNodeStartChar": 961,
        "fixNodeLength": 651,
        "sourceBeforeFix": "/**   * Changes the owner of a file or directory specified by args recursively.  */ public final class ChownRecursiveCommand extends AbstractACLCommand {   public ChownRecursiveCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return \"chownr\";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String owner=args[0];     TachyonURI path=new TachyonURI(args[1]);     chown(path,owner,true);   }   @Override public String getUsage(){     return \"chownr <owner> <path>\";   } } ",
        "sourceAfterFix": "/**   * Changes the owner of a file or directory specified by args recursively.  */ public final class ChownRecursiveCommand extends AbstractAclCommand {   public ChownRecursiveCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return \"chownr\";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String owner=args[0];     TachyonURI path=new TachyonURI(args[1]);     chown(path,owner,true);   }   @Override public String getUsage(){     return \"chownr <owner> <path>\";   } } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "2ebebdf68c3f6d4d93d4a485a0be98f41530e890",
        "fixCommitParentSHA1": "0693fc2b371408934b20dc432db5a81a9a1f7549",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/NewModelControllerImpl.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/NewModelControllerImpl.java b/controller/src/main/java/org/jboss/as/controller/NewModelControllerImpl.java\nindex 71b3f5f..b22e9e9 100644\n--- a/controller/src/main/java/org/jboss/as/controller/NewModelControllerImpl.java\n+++ b/controller/src/main/java/org/jboss/as/controller/NewModelControllerImpl.java\n@@ -87,9 +87,9 @@\n         NewOperationContextImpl context = new NewOperationContextImpl(this, controllerType, EnumSet.of(NewOperationContextImpl.ContextFlag.ROLLBACK_ON_FAIL), handler, modelReference.get(), control, bootingFlag.getAndSet(false));\n         ModelNode response = new ModelNode();\n         if (prepareStep != null) {\n-            context.addStep(prepareStep, NewOperationContext.Stage.MODEL);\n+            context.addStep(response, operation, prepareStep, NewOperationContext.Stage.MODEL);\n         }\n-        context.addStep(new NewStepHandler() {\n+        context.addStep(response, operation, new NewStepHandler() {\n             public void execute(final NewOperationContext context, final ModelNode operation) {\n                 if (context.completeStep() == NewOperationContext.ResultAction.KEEP && context.isModelAffected()) {\n                     // TODO store the model here\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 90,
        "bugNodeStartChar": 4486,
        "bugNodeLength": 61,
        "fixLineNum": 90,
        "fixNodeStartChar": 4486,
        "fixNodeLength": 82,
        "sourceBeforeFix": "context.addStep(prepareStep,NewOperationContext.Stage.MODEL)",
        "sourceAfterFix": "context.addStep(response,operation,prepareStep,NewOperationContext.Stage.MODEL)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "e5c2684225f66cb0696a63ed52c66fb09678dd22",
        "fixCommitParentSHA1": "e59a18a298936b68b698e935bb884d773053d356",
        "bugFilePath": "src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java",
        "fixPatch": "diff --git a/src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java b/src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java\nindex 2a7780b..f7dca84 100644\n--- a/src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java\n+++ b/src/main/java/pxb/android/dex2jar/v3/V3CodeAdapter.java\n@@ -1069,7 +1069,7 @@\n \r\n \tprivate void checkResult() {\r\n \t\tif (typeInStack != null) {\r\n-\t\t\tif (Type.LONG_TYPE.equals(typeInStack)) {\r\n+\t\t\tif (Type.LONG_TYPE.equals(typeInStack) || Type.DOUBLE_TYPE.equals(typeInStack)) {\r\n \t\t\t\tmv.visitInsn(POP2);\r\n \t\t\t} else {\r\n \t\t\t\tmv.visitInsn(POP);\r\n",
        "projectName": "pxb1988.dex2jar",
        "bugLineNum": 1072,
        "bugNodeStartChar": 25872,
        "bugNodeLength": 34,
        "fixLineNum": 1072,
        "fixNodeStartChar": 24801,
        "fixNodeLength": 74,
        "sourceBeforeFix": "Type.LONG_TYPE.equals(typeInStack)",
        "sourceAfterFix": "Type.LONG_TYPE.equals(typeInStack) || Type.DOUBLE_TYPE.equals(typeInStack)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7e33296532b5abed5911bf283cac299b155ea2d6",
        "fixCommitParentSHA1": "4b80533b39039137521af463f68f352437d45503",
        "bugFilePath": "community/io/src/test/java/org/neo4j/test/LinearHistoryPageCacheTracerTest.java",
        "fixPatch": "diff --git a/community/io/src/test/java/org/neo4j/test/LinearHistoryPageCacheTracerTest.java b/community/io/src/test/java/org/neo4j/test/LinearHistoryPageCacheTracerTest.java\nindex 2632ac2..343190e 100644\n--- a/community/io/src/test/java/org/neo4j/test/LinearHistoryPageCacheTracerTest.java\n+++ b/community/io/src/test/java/org/neo4j/test/LinearHistoryPageCacheTracerTest.java\n@@ -91,11 +91,11 @@\n                     }\n                     if ( rng.nextDouble() < 0.1 )\n                     {\n-                        file.flush();\n+                        file.flushAndForce();\n                     }\n                     else if ( rng.nextBoolean() )\n                     {\n-                        cache.flush();\n+                        cache.flushAndForce();\n                     }\n                 }\n                 catch ( Throwable ignore )\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 94,
        "bugNodeStartChar": 4167,
        "bugNodeLength": 12,
        "fixLineNum": 94,
        "fixNodeStartChar": 4167,
        "fixNodeLength": 20,
        "sourceBeforeFix": "file.flush()",
        "sourceAfterFix": "file.flushAndForce()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3fcda6a67e8e859de3fc41ed93903832a30fc126",
        "fixCommitParentSHA1": "58b75feac96b31f18ad19e12e9835b43e12d3e0e",
        "bugFilePath": "core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java b/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\nindex 30de836..d4febbe 100644\n--- a/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\n+++ b/core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java\n@@ -100,19 +100,19 @@\n     private final String mServiceName;\n \n     // the key of connect hostname\n-    private final String mHostNameKey;\n+    private final PropertyKey mHostNameKey;\n \n     // the key of bind hostname\n-    private final String mBindHostKey;\n+    private final PropertyKey mBindHostKey;\n \n     // the key of service port\n-    private final String mPortKey;\n+    private final PropertyKey mPortKey;\n \n     // default port number\n     private final int mDefaultPort;\n \n-    ServiceType(String serviceName, String hostNameKey, String bindHostKey, String portKey,\n-        int defaultPort) {\n+    ServiceType(String serviceName, PropertyKey hostNameKey, PropertyKey bindHostKey,\n+        PropertyKey portKey, int defaultPort) {\n       mServiceName = serviceName;\n       mHostNameKey = hostNameKey;\n       mBindHostKey = bindHostKey;\n@@ -134,7 +134,7 @@\n      *\n      * @return key of connect hostname\n      */\n-    public String getHostNameKey() {\n+    public PropertyKey getHostNameKey() {\n       return mHostNameKey;\n     }\n \n@@ -143,7 +143,7 @@\n      *\n      * @return key of bind hostname\n      */\n-    public String getBindHostKey() {\n+    public PropertyKey getBindHostKey() {\n       return mBindHostKey;\n     }\n \n@@ -152,7 +152,7 @@\n      *\n      * @return key of service port\n      */\n-    public String getPortKey() {\n+    public PropertyKey getPortKey() {\n       return mPortKey;\n     }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 132,
        "bugNodeStartChar": 4009,
        "bugNodeLength": 168,
        "fixLineNum": 132,
        "fixNodeStartChar": 4009,
        "fixNodeLength": 173,
        "sourceBeforeFix": "/**   * Gets the key of connect hostname.  * @return key of connect hostname  */ public String getHostNameKey(){   return mHostNameKey; } ",
        "sourceAfterFix": "/**   * Gets the key of connect hostname.  * @return key of connect hostname  */ public PropertyKey getHostNameKey(){   return mHostNameKey; } "
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b0249470340022918fcc2b412e2347c4ba4ac7c5",
        "fixCommitParentSHA1": "19cc544158cdb3f4c1fb98137ae40024f29939b6",
        "bugFilePath": "providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/bodyhandler/BodyGeneratorBodyHandler.java",
        "fixPatch": "diff --git a/providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/bodyhandler/BodyGeneratorBodyHandler.java b/providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/bodyhandler/BodyGeneratorBodyHandler.java\nindex b8f3437..287f309 100644\n--- a/providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/bodyhandler/BodyGeneratorBodyHandler.java\n+++ b/providers/grizzly/src/main/java/org/asynchttpclient/providers/grizzly/bodyhandler/BodyGeneratorBodyHandler.java\n@@ -44,7 +44,7 @@\n         final BodyGenerator generator = request.getBodyGenerator();\n         final Body bodyLocal = generator.createBody();\n         final long len = bodyLocal.getContentLength();\n-        if (len > 0) {\n+        if (len >= 0) {\n             requestPacket.setContentLengthLong(len);\n         } else {\n             requestPacket.setChunked(true);\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 47,
        "bugNodeStartChar": 1947,
        "bugNodeLength": 7,
        "fixLineNum": 47,
        "fixNodeStartChar": 1947,
        "fixNodeLength": 8,
        "sourceBeforeFix": "len > 0",
        "sourceAfterFix": "len >= 0"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "c3cdefcf979188c68a8d9fc923f077f21497b5ab",
        "fixCommitParentSHA1": "b4ae7f080d6bb0f98e7c62f2143c53aa77041e51",
        "bugFilePath": "integration-tests/src/test/java/tachyon/shell/TfsShellTest.java",
        "fixPatch": "diff --git a/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java b/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\nindex 84cd38e..af99b9d 100644\n--- a/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\n+++ b/integration-tests/src/test/java/tachyon/shell/TfsShellTest.java\n@@ -528,15 +528,16 @@\n     String expected = \"\";\n     String format = \"%-10s%-25s%-15s%-15s%-5s\\n\";\n     expected += String.format(format, FormatUtils.getSizeFromBytes(10),\n-        TfsShell.convertMsToDate(files[0].getCreationTimeMs()), \"In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[0].getCreationTimeMs()), \"In Memory\", testUser,\n         \"/testRoot/testFileA\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(0),\n-        TfsShell.convertMsToDate(files[1].getCreationTimeMs()), \"\", testUser, \"/testRoot/testDir\");\n+        CommandUtils.convertMsToDate(files[1].getCreationTimeMs()), \"\", testUser,\n+        \"/testRoot/testDir\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(20),\n-        TfsShell.convertMsToDate(files[2].getCreationTimeMs()), \"In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[2].getCreationTimeMs()), \"In Memory\", testUser,\n         \"/testRoot/testDir/testFileB\");\n     expected += String.format(format, FormatUtils.getSizeFromBytes(30),\n-        TfsShell.convertMsToDate(files[3].getCreationTimeMs()), \"Not In Memory\", testUser,\n+        CommandUtils.convertMsToDate(files[3].getCreationTimeMs()), \"Not In Memory\", testUser,\n         \"/testRoot/testFileC\");\n     Assert.assertEquals(expected, mOutput.toString());\n     // clear testing username\n@@ -905,8 +906,8 @@\n   TachyonException {\n     String format = \"%-10s%-25s%-15s%-15s%-5s\\n\";\n     return String.format(format, FormatUtils.getSizeFromBytes(size),\n-        TfsShell.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs()), \"In Memory\",\n-        testUser, tUri.getPath());\n+        CommandUtils.convertMsToDate(mTfs.getInfo(mTfs.open(tUri)).getCreationTimeMs()),\n+        \"In Memory\", testUser, tUri.getPath());\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 539,
        "bugNodeStartChar": 24098,
        "bugNodeLength": 54,
        "fixLineNum": 539,
        "fixNodeStartChar": 24098,
        "fixNodeLength": 58,
        "sourceBeforeFix": "TfsShell.convertMsToDate(files[3].getCreationTimeMs())",
        "sourceAfterFix": "CommandUtils.convertMsToDate(files[3].getCreationTimeMs())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "168b6172617dcfc6c4cf05082d76ad048e907799",
        "fixCommitParentSHA1": "2eb6cdd0e1d3353eaacef0b11eba85119c1b26bf",
        "bugFilePath": "app/models/Radio.java",
        "fixPatch": "diff --git a/app/models/Radio.java b/app/models/Radio.java\nindex e980c08..9514ca6 100644\n--- a/app/models/Radio.java\n+++ b/app/models/Radio.java\n@@ -147,16 +147,16 @@\n \n     public boolean launchExistingInput(String inputId) {\n         try {\n-            api.get(EmptyResponse.class)\n-                    .path(\"/system/inputs/{0}\", inputId)\n+            api.get(InputLaunchResponse.class)\n+                    .path(\"/system/inputs/{0}/launch\", inputId)\n                     .radio(this)\n                     .expect(Http.Status.ACCEPTED)\n                     .execute();\n             return true;\n         } catch (APIException e) {\n-            log.error(\"Could not terminate input \" + inputId, e);\n+            log.error(\"Could not launch input \" + inputId, e);\n         } catch (IOException e) {\n-            log.error(\"Could not terminate input \" + inputId, e);\n+            log.error(\"Could not launch input \" + inputId, e);\n         }\n \n         return false;\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 150,
        "bugNodeStartChar": 4573,
        "bugNodeLength": 19,
        "fixLineNum": 150,
        "fixNodeStartChar": 4573,
        "fixNodeLength": 25,
        "sourceBeforeFix": "EmptyResponse.class",
        "sourceAfterFix": "InputLaunchResponse.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c2cfe6ff21e76d8c7f1ac185ba7538ef993f2733",
        "fixCommitParentSHA1": "233b4275d73c8f480017b709100acb58caa51e2a",
        "bugFilePath": "itest/src/edu/stanford/nlp/pipeline/KBPAnnotatorBenchmarkSlowITest.java",
        "fixPatch": "diff --git a/itest/src/edu/stanford/nlp/pipeline/KBPAnnotatorBenchmarkSlowITest.java b/itest/src/edu/stanford/nlp/pipeline/KBPAnnotatorBenchmarkSlowITest.java\nindex 4972ad0..6d62c9b 100644\n--- a/itest/src/edu/stanford/nlp/pipeline/KBPAnnotatorBenchmarkSlowITest.java\n+++ b/itest/src/edu/stanford/nlp/pipeline/KBPAnnotatorBenchmarkSlowITest.java\n@@ -18,7 +18,7 @@\n \n   public String KBP_DOCS_DIR = \"/scr/nlp/data/kbp-benchmark//kbp-docs\";\n   public String GOLD_RELATIONS_PATH = \"/scr/nlp/data/kbp-benchmark/kbp-gold-relations.txt\";\n-  public double KBP_MINIMUM_SCORE = 45.30;\n+  public double KBP_MINIMUM_SCORE = .453;\n \n   private String convertRelationName(String relationName) {\n     /*if (relationName.equals(\"org:top_members/employees\")) {\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 21,
        "bugNodeStartChar": 645,
        "bugNodeLength": 25,
        "fixLineNum": 21,
        "fixNodeStartChar": 645,
        "fixNodeLength": 24,
        "sourceBeforeFix": "KBP_MINIMUM_SCORE=45.30",
        "sourceAfterFix": "KBP_MINIMUM_SCORE=.453"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "a35860eadb4400f069e306ccd76f1a19ecfb3ba1",
        "fixCommitParentSHA1": "511730968ce8b82708c61e74e9c2c2bdaec51d57",
        "bugFilePath": "android/guava/src/com/google/common/graph/DirectedGraphConnections.java",
        "fixPatch": "diff --git a/android/guava/src/com/google/common/graph/DirectedGraphConnections.java b/android/guava/src/com/google/common/graph/DirectedGraphConnections.java\nindex 809046b..668b569 100755\n--- a/android/guava/src/com/google/common/graph/DirectedGraphConnections.java\n+++ b/android/guava/src/com/google/common/graph/DirectedGraphConnections.java\n@@ -166,7 +166,7 @@\n \n   @SuppressWarnings(\"unchecked\")\n   @Override\n-  public V value(Object node) {\n+  public V value(N node) {\n     Object value = adjacentNodeValues.get(node);\n     if (value == PRED) {\n       return null;\n@@ -179,7 +179,7 @@\n \n   @SuppressWarnings(\"unchecked\")\n   @Override\n-  public void removePredecessor(Object node) {\n+  public void removePredecessor(N node) {\n     Object previousValue = adjacentNodeValues.get(node);\n     if (previousValue == PRED) {\n       adjacentNodeValues.remove(node);\n",
        "projectName": "google.guava",
        "bugLineNum": 169,
        "bugNodeStartChar": 5569,
        "bugNodeLength": 11,
        "fixLineNum": 169,
        "fixNodeStartChar": 5569,
        "fixNodeLength": 6,
        "sourceBeforeFix": "Object node",
        "sourceAfterFix": "N node"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8474b292fc51555b81e43e67aded3edf94a5d6a5",
        "fixCommitParentSHA1": "dab44c5600048a8d29d2d659c3fb3a58847c1ae5",
        "bugFilePath": "src/main/java/org/ansj/splitWord/analysis/UserDefineAnalysis.java",
        "fixPatch": "diff --git a/src/main/java/org/ansj/splitWord/analysis/UserDefineAnalysis.java b/src/main/java/org/ansj/splitWord/analysis/UserDefineAnalysis.java\nindex 46cd4cd..cffdbc8 100644\n--- a/src/main/java/org/ansj/splitWord/analysis/UserDefineAnalysis.java\n+++ b/src/main/java/org/ansj/splitWord/analysis/UserDefineAnalysis.java\n@@ -74,7 +74,7 @@\n \t\t\t\t}\r\n \t\t\t\tsetRealName(graph, result);\r\n \r\n-\t\t\t\tFilterModifWord.modifResult(result);\r\n+\t\t\t\tFilterModifWord.modifResult(result,forests);\r\n \t\t\t\treturn result;\r\n \t\t\t}\r\n \t\t};\r\n",
        "projectName": "NLPchina.ansj_seg",
        "bugLineNum": 77,
        "bugNodeStartChar": 2066,
        "bugNodeLength": 35,
        "fixLineNum": 77,
        "fixNodeStartChar": 1990,
        "fixNodeLength": 43,
        "sourceBeforeFix": "FilterModifWord.modifResult(result)",
        "sourceAfterFix": "FilterModifWord.modifResult(result,forests)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "d848003e42080f7f40fcc7cd5559df53155d3389",
        "fixCommitParentSHA1": "2ec8d001e3a9515e978508b9452db5bfd84dea1e",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\nindex 63acfab..a4f5666 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/aggregation/MaxBy.java\n@@ -106,7 +106,7 @@\n                 false);\n \n         GenericAccumulatorFactoryBinder factory = new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata, classLoader);\n-        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, valueType, false, false, factory);\n+        return new GenericAggregationFunction(NAME, inputTypes, intermediateType, valueType, true, false, factory);\n     }\n \n     private static List<ParameterMetadata> createInputParameterMetadata(Type value, Type key)\n",
        "projectName": "facebook.presto",
        "bugLineNum": 109,
        "bugNodeStartChar": 4910,
        "bugNodeLength": 100,
        "fixLineNum": 109,
        "fixNodeStartChar": 4910,
        "fixNodeLength": 99,
        "sourceBeforeFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,valueType,false,false,factory)",
        "sourceAfterFix": "new GenericAggregationFunction(NAME,inputTypes,intermediateType,valueType,true,false,factory)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "81f85b9930f3b49433a04a0ffa6b1e3113eb8d40",
        "fixCommitParentSHA1": "1a78fcc9476c797673d3b3f92b794dc8e022541d",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\nindex 0e7e82b..876c28c 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java\n@@ -3081,7 +3081,7 @@\n     // them\n     for (String destination : dests) {\n \n-      getReduceValuesForReduceSinkNoMapAgg(parseInfo, dest, reduceSinkInputRowResolver,\n+      getReduceValuesForReduceSinkNoMapAgg(parseInfo, destination, reduceSinkInputRowResolver,\n           reduceSinkOutputRowResolver, outputValueColumnNames, reduceValues);\n \n       // Need to pass all of the columns used in the where clauses as reduce values\n",
        "projectName": "apache.hive",
        "bugLineNum": 3084,
        "bugNodeStartChar": 124914,
        "bugNodeLength": 158,
        "fixLineNum": 3084,
        "fixNodeStartChar": 124914,
        "fixNodeLength": 165,
        "sourceBeforeFix": "getReduceValuesForReduceSinkNoMapAgg(parseInfo,dest,reduceSinkInputRowResolver,reduceSinkOutputRowResolver,outputValueColumnNames,reduceValues)",
        "sourceAfterFix": "getReduceValuesForReduceSinkNoMapAgg(parseInfo,destination,reduceSinkInputRowResolver,reduceSinkOutputRowResolver,outputValueColumnNames,reduceValues)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2493a5e42691d3c0f7e6f5e638c923092dcf8b6a",
        "fixCommitParentSHA1": "cca2b931618b737547a44af3a6581b02bf626f0d",
        "bugFilePath": "examples/camel-example-axis/src/test/java/org/apache/camel/example/axis/AxisReportIncidentServiceTest.java",
        "fixPatch": "diff --git a/examples/camel-example-axis/src/test/java/org/apache/camel/example/axis/AxisReportIncidentServiceTest.java b/examples/camel-example-axis/src/test/java/org/apache/camel/example/axis/AxisReportIncidentServiceTest.java\nindex 3eb961c..e546fb0 100644\n--- a/examples/camel-example-axis/src/test/java/org/apache/camel/example/axis/AxisReportIncidentServiceTest.java\n+++ b/examples/camel-example-axis/src/test/java/org/apache/camel/example/axis/AxisReportIncidentServiceTest.java\n@@ -42,7 +42,7 @@\n \n         // add a listener on port 8080 on localhost (127.0.0.1)\n         Connector connector = new SelectChannelConnector();\n-        connector.setPort(8080);\n+        connector.setPort(9080);\n         connector.setHost(\"127.0.0.1\");\n         server.addConnector(connector);\n \n@@ -73,7 +73,7 @@\n \n     public void testReportIncidentWithAxis() throws Exception {\n         // the url to the axis webservice exposed by jetty\n-        URL url = new URL(\"http://localhost:8080/unittest/services/ReportIncidentPort\");\n+        URL url = new URL(\"http://localhost:9080/unittest/services/ReportIncidentPort\");\n \n         // Axis stuff to get the port where we can send the webservice request\n         ReportIncidentService_ServiceLocator locator = new ReportIncidentService_ServiceLocator();\n",
        "projectName": "apache.camel",
        "bugLineNum": 45,
        "bugNodeStartChar": 1822,
        "bugNodeLength": 23,
        "fixLineNum": 45,
        "fixNodeStartChar": 1822,
        "fixNodeLength": 23,
        "sourceBeforeFix": "connector.setPort(8080)",
        "sourceAfterFix": "connector.setPort(9080)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "59939fddd703f0880268ee1dc33fded2dc54cd9e",
        "fixCommitParentSHA1": "af8c3283a55161d836c61f2d78c4b188dbd2db62",
        "bugFilePath": "components/camel-restlet/src/main/java/org/apache/camel/component/restlet/DefaultRestletBinding.java",
        "fixPatch": "diff --git a/components/camel-restlet/src/main/java/org/apache/camel/component/restlet/DefaultRestletBinding.java b/components/camel-restlet/src/main/java/org/apache/camel/component/restlet/DefaultRestletBinding.java\nindex 57037e4..b95ef7a 100644\n--- a/components/camel-restlet/src/main/java/org/apache/camel/component/restlet/DefaultRestletBinding.java\n+++ b/components/camel-restlet/src/main/java/org/apache/camel/component/restlet/DefaultRestletBinding.java\n@@ -119,7 +119,7 @@\n         }\n \n         // only deal with the form if the content type is \"application/x-www-form-urlencoded\"\n-        if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM)) {\n+        if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM, true)) {\n             Form form = new Form(request.getEntity());\n             for (String paramName : form.getValuesMap().keySet()) {\n                 String[] values = form.getValuesArray(paramName);\n@@ -161,7 +161,7 @@\n \n         Form form = null;\n         // Use forms only for PUT, POST and x-www-form-urlencoded\n-        if ((Method.PUT == method || Method.POST == method) && mediaType == MediaType.APPLICATION_WWW_FORM) {\n+        if ((Method.PUT == method || Method.POST == method) && MediaType.APPLICATION_WWW_FORM.equals(mediaType, true)) {\n             form = new Form();\n             // must use string based for forms\n             String body = exchange.getIn().getBody(String.class);\n",
        "projectName": "apache.camel",
        "bugLineNum": 122,
        "bugNodeStartChar": 5027,
        "bugNodeLength": 73,
        "fixLineNum": 122,
        "fixNodeStartChar": 5027,
        "fixNodeLength": 79,
        "sourceBeforeFix": "request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM)",
        "sourceAfterFix": "request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM,true)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6ee3e54020bc8b28badd689fae4cd34948f78e7a",
        "fixCommitParentSHA1": "619460f025719dfa6cf208476b8a176aa59b1947",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\nindex c6b9f1c..43c8670 100644\n--- a/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/TweetsResourcesTest.java\n@@ -125,13 +125,13 @@\n     public void testRetweetMethods() throws Exception {\n         List<Status> statuses;\n \n-        statuses = twitter1.getRetweets(18594701629l);\n+        statuses = twitter1.getRetweets(1021608606934822912L);\n         assertNotNull(TwitterObjectFactory.getRawJSON(statuses));\n         assertEquals(statuses.get(0), TwitterObjectFactory.createStatus(TwitterObjectFactory.getRawJSON(statuses.get(0))));\n         assertIsRetweet(statuses);\n-        assertTrue(20 < statuses.size());\n+        assertTrue(2 < statuses.size());\n \n-        IDs retweeters = twitter1.getRetweeterIds(18594701629l, -1);\n+        IDs retweeters = twitter1.getRetweeterIds(1021608606934822912L, -1);\n         assertTrue(0 < retweeters.getIDs().length);\n     }\n \n@@ -213,7 +213,7 @@\n         assertEquals(1, medias.length);\n         MediaEntity media = medias[0];\n         assertEquals(\"pic.twitter.com/qbJx26r\", media.getDisplayURL());\n-        assertEquals(\"http://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n+        assertEquals(\"https://twitter.com/twitter/status/76360760606986241/photo/1\", media.getExpandedURL());\n         assertEquals(76360760611180544L, media.getId());\n         assertEquals(\"http://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURL());\n         assertEquals(\"https://pbs.twimg.com/media/AQ9JtQsCEAA7dEN.jpg\", media.getMediaURLHttps());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 132,
        "bugNodeStartChar": 7719,
        "bugNodeLength": 20,
        "fixLineNum": 132,
        "fixNodeStartChar": 7719,
        "fixNodeLength": 19,
        "sourceBeforeFix": "20 < statuses.size()",
        "sourceAfterFix": "2 < statuses.size()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "df73a7e98e8450813325d28458b6bdd4b8b11791",
        "fixCommitParentSHA1": "5f40b814ea77a457f55bbe4a9c1c077b790c0916",
        "bugFilePath": "okhttp-tests/src/test/java/okhttp3/SocksProxy.java",
        "fixPatch": "diff --git a/okhttp-tests/src/test/java/okhttp3/SocksProxy.java b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java\nindex 9c1b5a8..69ce1fa 100644\n--- a/okhttp-tests/src/test/java/okhttp3/SocksProxy.java\n+++ b/okhttp-tests/src/test/java/okhttp3/SocksProxy.java\n@@ -160,7 +160,7 @@\n         String domainName = fromSource.readUtf8(domainNameLength);\n         // Resolve HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS to localhost.\n         toAddress = domainName.equalsIgnoreCase(HOSTNAME_THAT_ONLY_THE_PROXY_KNOWS)\n-            ? InetAddress.getLoopbackAddress()\n+            ? InetAddress.getByName(\"localhost\")\n             : InetAddress.getByName(domainName);\n         break;\n \n",
        "projectName": "square.okhttp",
        "bugLineNum": 163,
        "bugNodeStartChar": 5833,
        "bugNodeLength": 32,
        "fixLineNum": 163,
        "fixNodeStartChar": 5833,
        "fixNodeLength": 34,
        "sourceBeforeFix": "InetAddress.getLoopbackAddress()",
        "sourceAfterFix": "InetAddress.getByName(\"localhost\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b2cfd099988a9491b1fa0052ab32a0c05596698e",
        "fixCommitParentSHA1": "e125d509fea9b3d165aa68860c563918eb0e4233",
        "bugFilePath": "src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java",
        "fixPatch": "diff --git a/src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java b/src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java\nindex 0d5f009..c8c9d27 100644\n--- a/src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java\n+++ b/src/test/java/com/zaxxer/hikari/pool/TestConnectionTimeoutRetry.java\n@@ -234,7 +234,7 @@\n          Connection connection6 = ds.getConnection();\n          Connection connection7 = ds.getConnection();\n \n-         Thread.sleep(1200);\n+         Thread.sleep(2000);\n \n          Assert.assertSame(\"Totals connections not as expected\", 10, TestElf.getPool(ds).getTotalConnections());\n          Assert.assertSame(\"Idle connections not as expected\", 3, TestElf.getPool(ds).getIdleConnections());\n",
        "projectName": "brettwooldridge.HikariCP",
        "bugLineNum": 237,
        "bugNodeStartChar": 8682,
        "bugNodeLength": 18,
        "fixLineNum": 237,
        "fixNodeStartChar": 8682,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Thread.sleep(1200)",
        "sourceAfterFix": "Thread.sleep(2000)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6",
        "fixCommitParentSHA1": "3a55941f33dcd9111d6b61b0505217f47973a39d",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\nindex 7c6cd90..b288cff 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java\n@@ -57,16 +57,16 @@\n     private String moduleId;\n \n     /** Line number filter. */\n-    private CSVFilter lineFilter;\n+    private CsvFilter lineFilter;\n \n     /** CSV for line number filter. */\n-    private String linesCSV;\n+    private String linesCsv;\n \n     /** Column number filter. */\n-    private CSVFilter columnFilter;\n+    private CsvFilter columnFilter;\n \n     /** CSV for column number filter. */\n-    private String columnsCSV;\n+    private String columnsCsv;\n \n     /**\n      * Constructs a {@code SuppressElement} for a\n@@ -102,12 +102,12 @@\n      * @param lines CSV values and ranges for line number filtering.\n      */\n     public void setLines(String lines) {\n-        linesCSV = lines;\n+        linesCsv = lines;\n         if (lines == null) {\n             lineFilter = null;\n         }\n         else {\n-            lineFilter = new CSVFilter(lines);\n+            lineFilter = new CsvFilter(lines);\n         }\n     }\n \n@@ -117,12 +117,12 @@\n      * @param columns CSV values and ranges for column number filtering.\n      */\n     public void setColumns(String columns) {\n-        columnsCSV = columns;\n+        columnsCsv = columns;\n         if (columns == null) {\n             columnFilter = null;\n         }\n         else {\n-            columnFilter = new CSVFilter(columns);\n+            columnFilter = new CsvFilter(columns);\n         }\n     }\n \n@@ -154,7 +154,7 @@\n \n     @Override\n     public int hashCode() {\n-        return Objects.hash(filePattern, checkPattern, moduleId, linesCSV, columnsCSV);\n+        return Objects.hash(filePattern, checkPattern, moduleId, linesCsv, columnsCsv);\n     }\n \n     @Override\n@@ -169,7 +169,7 @@\n         return Objects.equals(filePattern, suppressElement.filePattern)\n                 && Objects.equals(checkPattern, suppressElement.checkPattern)\n                 && Objects.equals(moduleId, suppressElement.moduleId)\n-                && Objects.equals(linesCSV, suppressElement.linesCSV)\n-                && Objects.equals(columnsCSV, suppressElement.columnsCSV);\n+                && Objects.equals(linesCsv, suppressElement.linesCsv)\n+                && Objects.equals(columnsCsv, suppressElement.columnsCsv);\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 59,
        "bugNodeStartChar": 2236,
        "bugNodeLength": 60,
        "fixLineNum": 59,
        "fixNodeStartChar": 2236,
        "fixNodeLength": 60,
        "sourceBeforeFix": "/**   * Line number filter.   */ private CSVFilter lineFilter; ",
        "sourceAfterFix": "/**   * Line number filter.   */ private CsvFilter lineFilter; "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "88e52c09c7f51122b38779f543abe6daa71e30eb",
        "fixCommitParentSHA1": "98e08c5e7b8468008452e68bef0e82337b4bbf3b",
        "bugFilePath": "integration-tests/jersey/src/test/java/org/atmosphere/jersey/tests/BuilderPubSubTest.java",
        "fixPatch": "diff --git a/integration-tests/jersey/src/test/java/org/atmosphere/jersey/tests/BuilderPubSubTest.java b/integration-tests/jersey/src/test/java/org/atmosphere/jersey/tests/BuilderPubSubTest.java\nindex 6065e87..70a6243 100644\n--- a/integration-tests/jersey/src/test/java/org/atmosphere/jersey/tests/BuilderPubSubTest.java\n+++ b/integration-tests/jersey/src/test/java/org/atmosphere/jersey/tests/BuilderPubSubTest.java\n@@ -180,14 +180,14 @@\n \n     @POST\n     @Path(\"filter\")\n-    @Broadcast(resumeOnBroadcast = true, value = {XSSHtmlFilter.class})\n+    @Broadcast(resumeOnBroadcast = true, filters = {XSSHtmlFilter.class})\n     public Broadcastable filter(@FormParam(\"message\") String message) {\n         return broadcast(message);\n     }\n \n     @POST\n     @Path(\"aggregate\")\n-    @Broadcast(resumeOnBroadcast = true, value = {StringFilterAggregator.class})\n+    @Broadcast(resumeOnBroadcast = true, filters = {StringFilterAggregator.class})\n     public Broadcastable aggregate(@FormParam(\"message\") String message) {\n         return broadcast(message);\n     }\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 183,
        "bugNodeStartChar": 5772,
        "bugNodeLength": 29,
        "fixLineNum": 183,
        "fixNodeStartChar": 5772,
        "fixNodeLength": 31,
        "sourceBeforeFix": "value={XSSHtmlFilter.class}",
        "sourceAfterFix": "filters={XSSHtmlFilter.class}"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "852c8b720dd810c699d6303d0470efa246c84d26",
        "fixCommitParentSHA1": "f52af38d05476aafd8389a642b5e6593d71df118",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\nindex 6874dc6..3357111 100644\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/ws/authentication/EJBEndpointAuthenticationTestCase.java\n@@ -122,7 +122,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"hello\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"hello\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -163,7 +163,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForRole\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForRole\"), e.getCause().getMessage());\n         }\n     }\n     \n@@ -234,7 +234,7 @@\n             Assert.fail(\"Test should fail, user shouldn't be allowed to invoke that method\");\n         } catch (WebServiceException e) {\n             // failure is expected\n-            Assert.assertEquals(e.getCause().getMessage(), getNotAllowedExceptionMessage(\"helloForRoles\"));\n+            Assert.assertEquals(getNotAllowedExceptionMessage(\"helloForRoles\"), e.getCause().getMessage());\n         }\n     }\n     \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 125,
        "bugNodeStartChar": 5268,
        "bugNodeLength": 86,
        "fixLineNum": 125,
        "fixNodeStartChar": 5268,
        "fixNodeLength": 86,
        "sourceBeforeFix": "Assert.assertEquals(e.getCause().getMessage(),getNotAllowedExceptionMessage(\"hello\"))",
        "sourceAfterFix": "Assert.assertEquals(getNotAllowedExceptionMessage(\"hello\"),e.getCause().getMessage())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "b7a31700f5eb974eccc4d9e5305015df8707bba0",
        "fixCommitParentSHA1": "321d42a1e9a169ed358c26cbac82a4ba4503a886",
        "bugFilePath": "commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java",
        "fixPatch": "diff --git a/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java b/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\nindex 9527543..781cf26 100644\n--- a/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\n+++ b/commons/src/main/java/com/navercorp/pinpoint/common/util/BytesUtils.java\n@@ -415,7 +415,7 @@\n             return null;\n         }\n         if (offset < 0) {\n-            throw new IllegalArgumentException(\"negative offset:\" + offset);\n+            throw new IndexOutOfBoundsException(\"negative offset:\" + offset);\n         }\n         if (length == 0) {\n             return \"\";\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 418,
        "bugNodeStartChar": 14655,
        "bugNodeLength": 57,
        "fixLineNum": 418,
        "fixNodeStartChar": 14655,
        "fixNodeLength": 58,
        "sourceBeforeFix": "new IllegalArgumentException(\"negative offset:\" + offset)",
        "sourceAfterFix": "new IndexOutOfBoundsException(\"negative offset:\" + offset)"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "aafd0373be686a3111cfbb0d487529c276772264",
        "fixCommitParentSHA1": "5f6bdd940b35734e98f6a681c0eb48173cd5f9df",
        "bugFilePath": "server/src/main/java/io/druid/client/DirectDruidClient.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/client/DirectDruidClient.java b/server/src/main/java/io/druid/client/DirectDruidClient.java\nindex cd1705d..5399a01 100644\n--- a/server/src/main/java/io/druid/client/DirectDruidClient.java\n+++ b/server/src/main/java/io/druid/client/DirectDruidClient.java\n@@ -337,7 +337,7 @@\n         public ClientResponse<InputStream> done(ClientResponse<InputStream> clientResponse)\n         {\n           long stopTimeNs = System.nanoTime();\n-          long nodeTimeNs = stopTimeNs - responseStartTimeNs;\n+          long nodeTimeNs = stopTimeNs - requestStartTimeNs;\n           final long nodeTimeMs = TimeUnit.NANOSECONDS.toMillis(nodeTimeNs);\n           log.debug(\n               \"Completed queryId[%s] request to url[%s] with %,d bytes returned in %,d millis [%,f b/s].\",\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 340,
        "bugNodeStartChar": 13062,
        "bugNodeLength": 32,
        "fixLineNum": 340,
        "fixNodeStartChar": 13062,
        "fixNodeLength": 31,
        "sourceBeforeFix": "stopTimeNs - responseStartTimeNs",
        "sourceAfterFix": "stopTimeNs - requestStartTimeNs"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "fdd6f8b54dccb215c8fe55e39b24fbbb5dd62a14",
        "fixCommitParentSHA1": "377cb2aea98f28237a4dff158f9d0e71ba884d89",
        "bugFilePath": "src/com/google/javascript/jscomp/Es6ToEs3Converter.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/Es6ToEs3Converter.java b/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\nindex 6dfa7d8..f78f2bb 100644\n--- a/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\n+++ b/src/com/google/javascript/jscomp/Es6ToEs3Converter.java\n@@ -744,7 +744,7 @@\n \n         JSTypeExpression existingType = membersToDeclare.get(member.getString());\n         if (existingType != null && !existingType.equals(typeExpr)) {\n-          compiler.report(JSError.make(member, CONFLICTING_GETTER_SETTER_TYPE));\n+          compiler.report(JSError.make(member, CONFLICTING_GETTER_SETTER_TYPE, member.getString()));\n         } else {\n           membersToDeclare.put(member.getString(), typeExpr);\n         }\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 747,
        "bugNodeStartChar": 29077,
        "bugNodeLength": 52,
        "fixLineNum": 747,
        "fixNodeStartChar": 29077,
        "fixNodeLength": 72,
        "sourceBeforeFix": "JSError.make(member,CONFLICTING_GETTER_SETTER_TYPE)",
        "sourceAfterFix": "JSError.make(member,CONFLICTING_GETTER_SETTER_TYPE,member.getString())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4dd18ed5c3188be2cfb14efce62e71ae6f19243a",
        "fixCommitParentSHA1": "7b3981c24c0fa959a4015be7abf313dd66ca056a",
        "bugFilePath": "dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java",
        "fixPatch": "diff --git a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\nindex 3c6ad40..9a6d8c1 100644\n--- a/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n+++ b/dropwizard-core/src/test/java/com/yammer/dropwizard/tasks/tests/TaskServletTest.java\n@@ -35,7 +35,7 @@\n     @Test\n     public void returnsA404WhenNotFound() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/test\");\n+        when(request.getPathInfo()).thenReturn(\"/test\");\n \n         servlet.service(request, response);\n \n@@ -47,7 +47,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n         when(response.getWriter()).thenReturn(output);\n \n@@ -61,7 +61,7 @@\n         final PrintWriter output = mock(PrintWriter.class);\n \n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.of(\"runs\")));\n         when(request.getParameterValues(\"runs\")).thenReturn(new String[]{\"1\"});\n         when(response.getWriter()).thenReturn(output);\n@@ -75,7 +75,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public void returnsA500OnExceptions() throws Exception {\n         when(request.getMethod()).thenReturn(\"POST\");\n-        when(request.getServletPath()).thenReturn(\"/tasks/gc\");\n+        when(request.getPathInfo()).thenReturn(\"/gc\");\n         when(request.getParameterNames()).thenReturn(Collections.enumeration(ImmutableList.<String>of()));\n \n         final RuntimeException ex = new RuntimeException(\"whoops\");\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 38,
        "bugNodeStartChar": 1231,
        "bugNodeLength": 24,
        "fixLineNum": 38,
        "fixNodeStartChar": 1231,
        "fixNodeLength": 21,
        "sourceBeforeFix": "request.getServletPath()",
        "sourceAfterFix": "request.getPathInfo()"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "c4669fc5bb8b622188422e3e75e470077eb7d6d2",
        "fixCommitParentSHA1": "76b194952bad1f2bc4c49359a10cf620cefac913",
        "bugFilePath": "core/src/test/java/cucumber/runtime/RuntimeOptionsTest.java",
        "fixPatch": "diff --git a/core/src/test/java/cucumber/runtime/RuntimeOptionsTest.java b/core/src/test/java/cucumber/runtime/RuntimeOptionsTest.java\nindex 1204816..bc7f4ec 100644\n--- a/core/src/test/java/cucumber/runtime/RuntimeOptionsTest.java\n+++ b/core/src/test/java/cucumber/runtime/RuntimeOptionsTest.java\n@@ -70,7 +70,7 @@\n         String someName = \"someName\";\n         RuntimeOptions options = new RuntimeOptions(new Properties(), \"--name\", someName);\n         Pattern actualPattern = (Pattern) options.filters.iterator().next();\n-        assertEquals(actualPattern.pattern(), someName);\n+        assertEquals(someName, actualPattern.pattern());\n     }\n \n     @Test\n@@ -78,7 +78,7 @@\n         String someName = \"someName\";\n         RuntimeOptions options = new RuntimeOptions(new Properties(), \"-n\", someName);\n         Pattern actualPattern = (Pattern) options.filters.iterator().next();\n-        assertEquals(actualPattern.pattern(), someName);\n+        assertEquals(someName, actualPattern.pattern());\n     }\n \n     @Test\n",
        "projectName": "cucumber.cucumber-jvm",
        "bugLineNum": 73,
        "bugNodeStartChar": 2396,
        "bugNodeLength": 47,
        "fixLineNum": 73,
        "fixNodeStartChar": 2396,
        "fixNodeLength": 47,
        "sourceBeforeFix": "assertEquals(actualPattern.pattern(),someName)",
        "sourceAfterFix": "assertEquals(someName,actualPattern.pattern())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "20bc74dff0cf1e1834e99d1f2499a3f5e4c38a36",
        "fixCommitParentSHA1": "cecc475d2f194eed67edf16cd84fbf9716b8d5c5",
        "bugFilePath": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java",
        "fixPatch": "diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\nindex ffb2dcf..b3e01f3 100644\n--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\n+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/AsyncRpcChannel.java\n@@ -607,7 +607,7 @@\n     }\n     for (AsyncCall call : toCleanup) {\n       call.setFailed(new CallTimeoutException(\"Call id=\" + call.id + \", waitTime=\"\n-          + (currentTime - call.getRpcTimeout()) + \", rpcTimeout=\" + call.getRpcTimeout()));\n+          + (currentTime - call.getStartTime()) + \", rpcTimeout=\" + call.getRpcTimeout()));\n     }\n   }\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 610,
        "bugNodeStartChar": 21287,
        "bugNodeLength": 20,
        "fixLineNum": 610,
        "fixNodeStartChar": 21287,
        "fixNodeLength": 19,
        "sourceBeforeFix": "call.getRpcTimeout()",
        "sourceAfterFix": "call.getStartTime()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6",
        "fixCommitParentSHA1": "3a55941f33dcd9111d6b61b0505217f47973a39d",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\nindex 07c40e6..afebf11 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java\n@@ -32,11 +32,11 @@\n \n /** Tests SuppressElementFilter. */\n public class FilterSetTest {\n-    private CSVFilter filter;\n+    private CsvFilter filter;\n \n     @Before\n     public void setUp() {\n-        filter = new CSVFilter(\"\");\n+        filter = new CsvFilter(\"\");\n     }\n \n     @Test\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 35,
        "bugNodeStartChar": 1481,
        "bugNodeLength": 25,
        "fixLineNum": 35,
        "fixNodeStartChar": 1481,
        "fixNodeLength": 25,
        "sourceBeforeFix": "private CSVFilter filter; ",
        "sourceAfterFix": "private CsvFilter filter; "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "85c0bc256211160178d49bead3f228b78a21e1c4",
        "fixCommitParentSHA1": "465c5777c9807b92fc039f0f3b8c3affd56882bb",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java\nindex e2db7b1..0073812 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFDateAdd.java\n@@ -89,7 +89,7 @@\n     if (arguments[1].getCategory() != ObjectInspector.Category.PRIMITIVE) {\n       throw new UDFArgumentTypeException(1,\n         \"Only primitive type arguments are accepted but \"\n-        + arguments[2].getTypeName() + \" is passed. as second arguments\");\n+        + arguments[1].getTypeName() + \" is passed. as second arguments\");\n     }\n \n     inputType1 = ((PrimitiveObjectInspector) arguments[0]).getPrimitiveCategory();\n",
        "projectName": "apache.hive",
        "bugLineNum": 92,
        "bugNodeStartChar": 4491,
        "bugNodeLength": 12,
        "fixLineNum": 92,
        "fixNodeStartChar": 4491,
        "fixNodeLength": 12,
        "sourceBeforeFix": "arguments[2]",
        "sourceAfterFix": "arguments[1]"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "ac0a527f7df275e047a4d6440ddc1cb0a1e4912c",
        "fixCommitParentSHA1": "abc9af18a62221b4c21fec91e464142254735fe6",
        "bugFilePath": "gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java b/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\nindex 3b33cba..3943f84 100644\n--- a/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\n+++ b/gdx/src/com/badlogic/gdx/math/collision/BoundingBox.java\n@@ -207,10 +207,10 @@\n \t\treturn this.set(min.set(0, 0, 0), max.set(0, 0, 0));\r\n \t}\r\n \r\n-\t/** Returns whether this bounding box is valid. This means that {@link #max} is greater than {@link #min}.\r\n+\t/** Returns whether this bounding box is valid. This means that {@link #max} is greater than or equal to {@link #min}.\r\n \t * @return True in case the bounding box is valid, false otherwise */\r\n \tpublic boolean isValid () {\r\n-\t\treturn min.x < max.x && min.y < max.y && min.z < max.z;\r\n+\t\treturn min.x <= max.x && min.y <= max.y && min.z <= max.z;\r\n \t}\r\n \r\n \t/** Extends this bounding box by the given bounding box.\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 213,
        "bugNodeStartChar": 6759,
        "bugNodeLength": 13,
        "fixLineNum": 213,
        "fixNodeStartChar": 6547,
        "fixNodeLength": 14,
        "sourceBeforeFix": "min.x < max.x",
        "sourceAfterFix": "min.x <= max.x"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "4bf80610fd2a67d952312e808edebdb74ebc26bb",
        "fixCommitParentSHA1": "ad1161d2401102f04ba1381f5ce4fb0aab209d0d",
        "bugFilePath": "enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java",
        "fixPatch": "diff --git a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\nindex 233d696..c468cdc 100644\n--- a/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n+++ b/enterprise/src/test/java/org/graylog/plugins/enterprise/database/PaginatedDbServiceTest.java\n@@ -167,7 +167,7 @@\n         final PaginatedList<TestDTO> page1 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 1, 2);\n \n         assertThat(page1.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello2\", \"hello3\");\n@@ -175,7 +175,7 @@\n         final PaginatedList<TestDTO> page2 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 2);\n \n         assertThat(page2.pagination().getCount()).isEqualTo(2);\n-        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page2.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page2.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello4\", \"hello5\");\n@@ -183,7 +183,7 @@\n         final PaginatedList<TestDTO> page3 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 3, 2);\n \n         assertThat(page3.pagination().getCount()).isEqualTo(1);\n-        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page3.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page3.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -191,7 +191,7 @@\n         final PaginatedList<TestDTO> page4 = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.asc(\"title\"), 2, 4);\n \n         assertThat(page4.pagination().getCount()).isEqualTo(1);\n-        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page4.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\");\n@@ -199,7 +199,7 @@\n         final PaginatedList<TestDTO> page1reverse = dbService.findPaginatedWithQueryFilterAndSort(DBQuery.empty(), filter, DBSort.desc(\"title\"), 1, 2);\n \n         assertThat(page1reverse.pagination().getCount()).isEqualTo(2);\n-        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7);\n+        assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5);\n         assertThat(page1reverse.delegate())\n                 .extracting(\"title\")\n                 .containsExactly(\"hello6\", \"hello5\");\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 194,
        "bugNodeStartChar": 7308,
        "bugNodeLength": 60,
        "fixLineNum": 194,
        "fixNodeStartChar": 7308,
        "fixNodeLength": 60,
        "sourceBeforeFix": "assertThat(page4.pagination().getGlobalTotal()).isEqualTo(7)",
        "sourceAfterFix": "assertThat(page4.pagination().getGlobalTotal()).isEqualTo(5)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "39e81c6df2ac7b3afb254e5c36446c7f42150bb0",
        "fixCommitParentSHA1": "a9a5715f7297a7deb78fa3d363bbb44217c7b5f3",
        "bugFilePath": "enterprise/server-enterprise/src/test/java/org/neo4j/server/enterprise/functional/DumpPortListenerOnNettyBindFailure.java",
        "fixPatch": "diff --git a/enterprise/server-enterprise/src/test/java/org/neo4j/server/enterprise/functional/DumpPortListenerOnNettyBindFailure.java b/enterprise/server-enterprise/src/test/java/org/neo4j/server/enterprise/functional/DumpPortListenerOnNettyBindFailure.java\nindex 15ce55e..6c64aa8 100644\n--- a/enterprise/server-enterprise/src/test/java/org/neo4j/server/enterprise/functional/DumpPortListenerOnNettyBindFailure.java\n+++ b/enterprise/server-enterprise/src/test/java/org/neo4j/server/enterprise/functional/DumpPortListenerOnNettyBindFailure.java\n@@ -71,7 +71,7 @@\n                 }\n                 catch ( Throwable failure )\n                 {\n-                    for ( Throwable cause = failure; cause != null; cause = failure.getCause() )\n+                    for ( Throwable cause = failure; cause != null; cause = cause.getCause() )\n                     {\n                         if ( cause instanceof ChannelException )\n                         {\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 74,
        "bugNodeStartChar": 2342,
        "bugNodeLength": 18,
        "fixLineNum": 74,
        "fixNodeStartChar": 2342,
        "fixNodeLength": 16,
        "sourceBeforeFix": "failure.getCause()",
        "sourceAfterFix": "cause.getCause()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f130eecfda624409190f9cb43747d8c69f37180b",
        "fixCommitParentSHA1": "0e929d8b72577fd3eb7eefe5034f1f6329b1eb10",
        "bugFilePath": "src/com/google/javascript/jscomp/deps/ModuleLoader.java",
        "fixPatch": "diff --git a/src/com/google/javascript/jscomp/deps/ModuleLoader.java b/src/com/google/javascript/jscomp/deps/ModuleLoader.java\nindex a57bd56..11d92f6 100644\n--- a/src/com/google/javascript/jscomp/deps/ModuleLoader.java\n+++ b/src/com/google/javascript/jscomp/deps/ModuleLoader.java\n@@ -55,7 +55,7 @@\n       DiagnosticType.warning(\"JSC_JS_MODULE_LOAD_WARNING\", \"Failed to load module \\\"{0}\\\"\");\n \n   public static final DiagnosticType INVALID_MODULE_PATH =\n-      DiagnosticType.warning(\n+      DiagnosticType.error(\n           \"JSC_INVALID_MODULE_PATH\", \"Invalid module path \\\"{0}\\\" for resolution mode \\\"{1}\\\"\");\n \n   private final ErrorHandler errorHandler;\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 58,
        "bugNodeStartChar": 2241,
        "bugNodeLength": 119,
        "fixLineNum": 58,
        "fixNodeStartChar": 2241,
        "fixNodeLength": 117,
        "sourceBeforeFix": "DiagnosticType.warning(\"JSC_INVALID_MODULE_PATH\",\"Invalid module path \\\"{0}\\\" for resolution mode \\\"{1}\\\"\")",
        "sourceAfterFix": "DiagnosticType.error(\"JSC_INVALID_MODULE_PATH\",\"Invalid module path \\\"{0}\\\" for resolution mode \\\"{1}\\\"\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e5298f62da9c8ff2319709bdd35aceef75e97228",
        "fixCommitParentSHA1": "94af4251adf9d306bfead934c7587492ddcee6f9",
        "bugFilePath": "components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXNotificationFilterTest.java",
        "fixPatch": "diff --git a/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXNotificationFilterTest.java b/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXNotificationFilterTest.java\nindex 0b2d1c5..796656f 100644\n--- a/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXNotificationFilterTest.java\n+++ b/components/camel-jmx/src/test/java/org/apache/camel/component/jmx/JMXNotificationFilterTest.java\n@@ -74,7 +74,7 @@\n         super.initRegistry();\n \n         // initialize the registry with our filter\n-        getRegistry().put(\"myFilter\", new NotificationFilter() {\n+        getRegistry().bind(\"myFilter\", new NotificationFilter() {\n \n             private static final long serialVersionUID = 1L;\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 77,
        "bugNodeStartChar": 2950,
        "bugNodeLength": 483,
        "fixLineNum": 77,
        "fixNodeStartChar": 2950,
        "fixNodeLength": 484,
        "sourceBeforeFix": "getRegistry().put(\"myFilter\",new NotificationFilter(){   private static final long serialVersionUID=1L;   public boolean isNotificationEnabled(  Notification aNotification){     boolean enabled=aNotification.getSequenceNumber() % 2 == 0;     if (!enabled) {       mRejected.add(aNotification);     }     return enabled;   } } )",
        "sourceAfterFix": "getRegistry().bind(\"myFilter\",new NotificationFilter(){   private static final long serialVersionUID=1L;   public boolean isNotificationEnabled(  Notification aNotification){     boolean enabled=aNotification.getSequenceNumber() % 2 == 0;     if (!enabled) {       mRejected.add(aNotification);     }     return enabled;   } } )"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae95d478d3a59cdfd39d7621309f9a00b4b1bfc8",
        "fixCommitParentSHA1": "f8e0767386d08929f289068f44c3336ea02e40ab",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\nindex c341073..1a7bb97 100644\n--- a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java\n@@ -551,7 +551,7 @@\n             } else if (config.getUserAgent() != null) {\n                 urlConnection.setRequestProperty(\"User-Agent\", config.getUserAgent());\n             } else {\n-                urlConnection.setRequestProperty(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(NettyAsyncHttpProvider.class));\n+                urlConnection.setRequestProperty(\"User-Agent\", AsyncHttpProviderUtils.constructUserAgent(JDKAsyncHttpProvider.class));\n             }\n \n             if (request.getCookies() != null && !request.getCookies().isEmpty()) {\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 554,
        "bugNodeStartChar": 24993,
        "bugNodeLength": 28,
        "fixLineNum": 554,
        "fixNodeStartChar": 24993,
        "fixNodeLength": 26,
        "sourceBeforeFix": "NettyAsyncHttpProvider.class",
        "sourceAfterFix": "JDKAsyncHttpProvider.class"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "58e2311116b2b7eab93c2f26a2ddc823d56e5375",
        "fixCommitParentSHA1": "fc32a9574448695fd1e96e9ff911a6603ab594d8",
        "bugFilePath": "api/src/main/java/org/openmrs/aop/RequiredDataAdvice.java",
        "fixPatch": "diff --git a/api/src/main/java/org/openmrs/aop/RequiredDataAdvice.java b/api/src/main/java/org/openmrs/aop/RequiredDataAdvice.java\nindex 4979a47..7c47488 100644\n--- a/api/src/main/java/org/openmrs/aop/RequiredDataAdvice.java\n+++ b/api/src/main/java/org/openmrs/aop/RequiredDataAdvice.java\n@@ -123,7 +123,7 @@\n \t\t\t\t// if a second argument exists, pass that to the save handler as well\r\n \t\t\t\t// (with current code, it means we're either in an obs save or a user save)\t\t\t\t\r\n \t\t\t\tString other = null;\r\n-\t\t\t\tif (args.length > 1)\r\n+\t\t\t\tif (args.length > 1 && args[1] instanceof String)\r\n \t\t\t\t\tother = (String) args[1];\r\n \t\t\t\t\r\n \t\t\t\trecursivelyHandle(SaveHandler.class, (OpenmrsObject) mainArgument, other);\r\n",
        "projectName": "openmrs.openmrs-core",
        "bugLineNum": 126,
        "bugNodeStartChar": 5680,
        "bugNodeLength": 15,
        "fixLineNum": 126,
        "fixNodeStartChar": 5555,
        "fixNodeLength": 44,
        "sourceBeforeFix": "args.length > 1",
        "sourceAfterFix": "args.length > 1 && args[1] instanceof String"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2877472d921d414b9c296c8997f30e838f08d351",
        "fixCommitParentSHA1": "f0dcb974763a4607d1660d90dc3d29c7f5f0a543",
        "bugFilePath": "src/main/java/org/bukkit/DyeColor.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/DyeColor.java b/src/main/java/org/bukkit/DyeColor.java\nindex c176dfd..b8e59a4 100644\n--- a/src/main/java/org/bukkit/DyeColor.java\n+++ b/src/main/java/org/bukkit/DyeColor.java\n@@ -12,67 +12,67 @@\n     /**\n      * Represents white dye\n      */\n-    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0x1E1B1B)),\n+    WHITE(0x0, 0xF, Color.WHITE, Color.fromRGB(0xF0F0F0)),\n     /**\n      * Represents orange dye\n      */\n-    ORANGE(0x1, 0xE, Color.fromRGB(0xD87f33), Color.fromRGB(0xB3312C)),\n+    ORANGE(0x1, 0xE, Color.fromRGB(0xD87F33), Color.fromRGB(0xEB8844)),\n     /**\n      * Represents magenta dye\n      */\n-    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0x3B511A)),\n+    MAGENTA(0x2, 0xD, Color.fromRGB(0xB24CD8), Color.fromRGB(0xC354CD)),\n     /**\n      * Represents light blue dye\n      */\n-    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x51301A)),\n+    LIGHT_BLUE(0x3, 0xC, Color.fromRGB(0x6699D8), Color.fromRGB(0x6689D3)),\n     /**\n      * Represents yellow dye\n      */\n-    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0x253192)),\n+    YELLOW(0x4, 0xB, Color.fromRGB(0xE5E533), Color.fromRGB(0xDECF2A)),\n     /**\n      * Represents lime dye\n      */\n-    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x7B2FBE)),\n+    LIME(0x5, 0xA, Color.fromRGB(0x7FCC19), Color.fromRGB(0x41CD34)),\n     /**\n      * Represents pink dye\n      */\n-    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0x287697)),\n+    PINK(0x6, 0x9, Color.fromRGB(0xF27FA5), Color.fromRGB(0xD88198)),\n     /**\n      * Represents gray dye\n      */\n-    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0xABABAB)),\n+    GRAY(0x7, 0x8, Color.fromRGB(0x4C4C4C), Color.fromRGB(0x434343)),\n     /**\n      * Represents silver dye\n      */\n-    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0x434343)),\n+    SILVER(0x8, 0x7, Color.fromRGB(0x999999), Color.fromRGB(0xABABAB)),\n     /**\n      * Represents cyan dye\n      */\n-    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0xD88198)),\n+    CYAN(0x9, 0x6, Color.fromRGB(0x4C7F99), Color.fromRGB(0x287697)),\n     /**\n      * Represents purple dye\n      */\n-    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x41CD34)),\n+    PURPLE(0xA, 0x5, Color.fromRGB(0x7F3FB2), Color.fromRGB(0x7B2FBE)),\n     /**\n      * Represents blue dye\n      */\n-    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0xDECF2A)),\n+    BLUE(0xB, 0x4, Color.fromRGB(0x334CB2), Color.fromRGB(0x253192)),\n     /**\n      * Represents brown dye\n      */\n-    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x6689D3)),\n+    BROWN(0xC, 0x3, Color.fromRGB(0x664C33), Color.fromRGB(0x51301A)),\n     /**\n      * Represents green dye\n      */\n-    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0xC354CD)),\n+    GREEN(0xD, 0x2, Color.fromRGB(0x667F33), Color.fromRGB(0x3B511A)),\n     /**\n      * Represents red dye\n      */\n-    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xEB8844)),\n+    RED(0xE, 0x1, Color.fromRGB(0x993333), Color.fromRGB(0xB3312C)),\n     /**\n      * Represents black dye\n      */\n-    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0xF0F0F0));\n+    BLACK(0xF, 0x0, Color.fromRGB(0x191919), Color.fromRGB(0x1E1B1B));\n \n     private final byte woolData;\n     private final byte dyeData;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 63,
        "bugNodeStartChar": 1642,
        "bugNodeLength": 23,
        "fixLineNum": 63,
        "fixNodeStartChar": 1642,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Color.fromRGB(0x6689D3)",
        "sourceAfterFix": "Color.fromRGB(0x51301A)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "20c49903145fbb36556b88e65052aaf96d92fe19",
        "fixCommitParentSHA1": "e5803f4dc544469a09dbcb9bda7e2bebf771c47f",
        "bugFilePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java",
        "fixPatch": "diff --git a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\nindex 3f6d46d..c512555 100644\n--- a/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\n+++ b/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java\n@@ -95,7 +95,7 @@\n \t\t}\r\n \t};\r\n \r\n-\tpublic static final int NUM_TOUCHES = 40;\r\n+\tpublic static final int NUM_TOUCHES = 20;\r\n \r\n \tArrayList<OnKeyListener> keyListeners = new ArrayList();\r\n \tArrayList<KeyEvent> keyEvents = new ArrayList();\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 98,
        "bugNodeStartChar": 3136,
        "bugNodeLength": 16,
        "fixLineNum": 98,
        "fixNodeStartChar": 3039,
        "fixNodeLength": 16,
        "sourceBeforeFix": "NUM_TOUCHES=40",
        "sourceAfterFix": "NUM_TOUCHES=20"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "46ebaab8bc4b4d75d29275c2fc78585025d28fb8",
        "fixCommitParentSHA1": "3dda28cacb2726e8a96a45f4c3cc225a60a1f609",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentWriteAppendSameFileTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentWriteAppendSameFileTest.java b/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentWriteAppendSameFileTest.java\nindex 1eb48e6..40c08fd 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentWriteAppendSameFileTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/FileConcurrentWriteAppendSameFileTest.java\n@@ -28,7 +28,7 @@\n \n public class FileConcurrentWriteAppendSameFileTest extends ContextTestSupport {\n \n-    private final int size = 500;\n+    private final int size = 100;\n \n     @Override\n     protected void setUp() throws Exception {\n@@ -52,12 +52,12 @@\n         mock.setResultWaitTime(30000);\n \n         // we need to wait a bit for our slow CI server to make sure the entire file is written on disc\n-        Thread.sleep(100);\n+        Thread.sleep(1000);\n         context.startRoute(\"foo\");\n \n         assertMockEndpointsSatisfied();\n \n-        // check the file has 500 lines\n+        // check the file has correct number of lines\n         String txt = context.getTypeConverter().convertTo(String.class, new File(\"target/concurrent/outbox/result.txt\"));\n         assertNotNull(txt);\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 55,
        "bugNodeStartChar": 2044,
        "bugNodeLength": 17,
        "fixLineNum": 55,
        "fixNodeStartChar": 2044,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Thread.sleep(100)",
        "sourceAfterFix": "Thread.sleep(1000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3d732616366b93a75351f4f43ecaa80d2d544abe",
        "fixCommitParentSHA1": "6b264008a9bcdf5ffc9ebf0f6a4b71be07766208",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\nindex be1c154..dacaae9 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java\n@@ -431,7 +431,7 @@\n         if (!root.exists()) {\n           // storage directory does not exist\n           if (startOpt != StartupOption.FORMAT) {\n-            LOG.info(\"Storage directory \" + rootPath + \" does not exist\");\n+            LOG.warn(\"Storage directory \" + rootPath + \" does not exist\");\n             return StorageState.NON_EXISTENT;\n           }\n           LOG.info(rootPath + \" does not exist. Creating ...\");\n@@ -440,15 +440,15 @@\n         }\n         // or is inaccessible\n         if (!root.isDirectory()) {\n-          LOG.info(rootPath + \"is not a directory\");\n+          LOG.warn(rootPath + \"is not a directory\");\n           return StorageState.NON_EXISTENT;\n         }\n         if (!root.canWrite()) {\n-          LOG.info(\"Cannot access storage directory \" + rootPath);\n+          LOG.warn(\"Cannot access storage directory \" + rootPath);\n           return StorageState.NON_EXISTENT;\n         }\n       } catch(SecurityException ex) {\n-        LOG.info(\"Cannot access storage directory \" + rootPath, ex);\n+        LOG.warn(\"Cannot access storage directory \" + rootPath, ex);\n         return StorageState.NON_EXISTENT;\n       }\n \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 443,
        "bugNodeStartChar": 15088,
        "bugNodeLength": 41,
        "fixLineNum": 443,
        "fixNodeStartChar": 15088,
        "fixNodeLength": 41,
        "sourceBeforeFix": "LOG.info(rootPath + \"is not a directory\")",
        "sourceAfterFix": "LOG.warn(rootPath + \"is not a directory\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "e92a6bead67118685a3f2247b7cdb17ee4f2549d",
        "fixCommitParentSHA1": "416881849b4fa44cea6236f934426ac763ba5537",
        "bugFilePath": "value/src/test/java/com/google/auto/value/processor/CompilationTest.java",
        "fixPatch": "diff --git a/value/src/test/java/com/google/auto/value/processor/CompilationTest.java b/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\nindex 45bea31..50b8d6b 100644\n--- a/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\n+++ b/value/src/test/java/com/google/auto/value/processor/CompilationTest.java\n@@ -959,7 +959,7 @@\n         \"}\");\n     assertAbout(javaSources())\n         .that(ImmutableList.of(javaFileObject, nestedJavaFileObject))\n-        .withCompilerOptions(\"-Xlint:-processing\")\n+        .withCompilerOptions(\"-Xlint:-processing\", \"-implicit:none\")\n         .processedWith(new AutoValueProcessor())\n         .compilesWithoutWarnings()\n         .and()\n",
        "projectName": "google.auto",
        "bugLineNum": 960,
        "bugNodeStartChar": 35491,
        "bugNodeLength": 147,
        "fixLineNum": 960,
        "fixNodeStartChar": 35491,
        "fixNodeLength": 165,
        "sourceBeforeFix": "assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions(\"-Xlint:-processing\")",
        "sourceAfterFix": "assertAbout(javaSources()).that(ImmutableList.of(javaFileObject,nestedJavaFileObject)).withCompilerOptions(\"-Xlint:-processing\",\"-implicit:none\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 149,
        "bugNodeStartChar": 4670,
        "bugNodeLength": 7,
        "fixLineNum": 149,
        "fixNodeStartChar": 4670,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=43",
        "sourceAfterFix": "id=41"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "0b70c36eb0dff06c81010d1569797c727712bddd",
        "fixCommitParentSHA1": "2ebdce20b1797858f8b20144eabfb46e3574f3e0",
        "bugFilePath": "core/src/main/java/org/apache/druid/math/expr/ExprEval.java",
        "fixPatch": "diff --git a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\nindex 2b649d4..4dad810 100644\n--- a/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n+++ b/core/src/main/java/org/apache/druid/math/expr/ExprEval.java\n@@ -197,7 +197,7 @@\n           return this;\n         case LONG:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofLong(null);\n           } else {\n             return ExprEval.of(asLong());\n           }\n@@ -239,7 +239,7 @@\n       switch (castTo) {\n         case DOUBLE:\n           if (value == null) {\n-            return ExprEval.of(null);\n+            return ExprEval.ofDouble(null);\n           } else {\n             return ExprEval.of(asDouble());\n           }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 242,
        "bugNodeStartChar": 5501,
        "bugNodeLength": 17,
        "fixLineNum": 242,
        "fixNodeStartChar": 5501,
        "fixNodeLength": 23,
        "sourceBeforeFix": "ExprEval.of(null)",
        "sourceAfterFix": "ExprEval.ofDouble(null)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "0a8713235af5d85e00396cd65fdaef3939e38d60",
        "fixCommitParentSHA1": "fdc7224c0f85f60a875cce74cf33c5a2c73bf39b",
        "bugFilePath": "core/src/test/java/tachyon/client/TachyonFSTest.java",
        "fixPatch": "diff --git a/core/src/test/java/tachyon/client/TachyonFSTest.java b/core/src/test/java/tachyon/client/TachyonFSTest.java\nindex df6842d..194f4b1 100644\n--- a/core/src/test/java/tachyon/client/TachyonFSTest.java\n+++ b/core/src/test/java/tachyon/client/TachyonFSTest.java\n@@ -262,9 +262,9 @@\n   }\n \n   private void getTestHelper(TachyonFS tfs) throws IOException {\n-    int fileId = mTfs.createFile(new TachyonURI(\"/root/testFile1\"));\n+    int fileId = tfs.createFile(new TachyonURI(\"/root/testFile1\"));\n     Assert.assertEquals(3, fileId);\n-    Assert.assertNotNull(mTfs.getFile(fileId));\n+    Assert.assertNotNull(tfs.getFile(fileId));\n   }\n \n   @Test\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 265,
        "bugNodeStartChar": 10302,
        "bugNodeLength": 50,
        "fixLineNum": 265,
        "fixNodeStartChar": 10302,
        "fixNodeLength": 49,
        "sourceBeforeFix": "mTfs.createFile(new TachyonURI(\"/root/testFile1\"))",
        "sourceAfterFix": "tfs.createFile(new TachyonURI(\"/root/testFile1\"))"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "eebcaa5425216fdc9a9c4349090fa68c6a2504d3",
        "fixCommitParentSHA1": "43e4684a43da4b8232bf59e1028f3e77d253d61c",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\nindex f0aabd9..0b06f01 100755\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/db/DbSqlSession.java\n@@ -1067,12 +1067,12 @@\n       ResultSet tables = null;\n \n       String catalog = this.connectionMetadataDefaultCatalog;\n-      if (dbSqlSessionFactory.getDatabaseCatalog() != null) {\n+      if (dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0) {\n         catalog = dbSqlSessionFactory.getDatabaseCatalog();\n       }\n \n       String schema = this.connectionMetadataDefaultSchema;\n-      if (dbSqlSessionFactory.getDatabaseSchema()!=null) {\n+      if (dbSqlSessionFactory.getDatabaseSchema() != null && dbSqlSessionFactory.getDatabaseSchema().length() > 0) {\n         schema = dbSqlSessionFactory.getDatabaseSchema();\n       }\n       \n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 1070,
        "bugNodeStartChar": 40146,
        "bugNodeLength": 48,
        "fixLineNum": 1070,
        "fixNodeStartChar": 40146,
        "fixNodeLength": 105,
        "sourceBeforeFix": "dbSqlSessionFactory.getDatabaseCatalog() != null",
        "sourceAfterFix": "dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6019f085f0d3dadc20a11f900784ce2796a89ce0",
        "fixCommitParentSHA1": "976bacc65908cc35382ddbbcdc80249a700bc2d3",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java b/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\nindex 86e0111..eb7e311 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/broadcast/BroadcastVariableMaterialization.java\n@@ -137,7 +137,7 @@\n \t\t\t\twhile ((element = readerIterator.next(element)) != null);\n \t\t\t\t\n \t\t\t\tsynchronized (materializationMonitor) {\n-\t\t\t\t\twhile (!this.materialized) {\n+\t\t\t\t\twhile (!this.materialized && !disposed) {\n \t\t\t\t\t\tmaterializationMonitor.wait();\n \t\t\t\t\t}\n \t\t\t\t}\n@@ -209,7 +209,7 @@\n \t\t\tthrow new IllegalStateException(\"The Broadcast Variable has been disposed\");\n \t\t}\n \t\t\n-\t\tsynchronized (this) {\n+\t\tsynchronized (references) {\n \t\t\tif (transformed != null) {\n \t\t\t\tif (transformed instanceof List) {\n \t\t\t\t\t@SuppressWarnings(\"unchecked\")\n@@ -233,7 +233,7 @@\n \t\t\tthrow new IllegalStateException(\"The Broadcast Variable has been disposed\");\n \t\t}\n \t\t\n-\t\tsynchronized (this) {\n+\t\tsynchronized (references) {\n \t\t\tif (transformed == null) {\n \t\t\t\ttransformed = initializer.initializeBroadcastVariable(data);\n \t\t\t\tdata = null;\n",
        "projectName": "apache.flink",
        "bugLineNum": 212,
        "bugNodeStartChar": 6905,
        "bugNodeLength": 4,
        "fixLineNum": 212,
        "fixNodeStartChar": 6905,
        "fixNodeLength": 10,
        "sourceBeforeFix": "synchronized (this) {   if (transformed != null) {     if (transformed instanceof List) {       @SuppressWarnings(\"unchecked\") List<T> casted=(List<T>)transformed;       return casted;     }  else {       throw new InitializationTypeConflictException(transformed.getClass());     }   }  else {     return data;   } } ",
        "sourceAfterFix": "synchronized (references) {   if (transformed != null) {     if (transformed instanceof List) {       @SuppressWarnings(\"unchecked\") List<T> casted=(List<T>)transformed;       return casted;     }  else {       throw new InitializationTypeConflictException(transformed.getClass());     }   }  else {     return data;   } } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "99e1a92191d36192872fd11665252a5f1cd87b79",
        "fixCommitParentSHA1": "a052ce24493898ec422ec2ef6a7d83e1e2de6dce",
        "bugFilePath": "src/main/java/org/bukkit/entity/EntityType.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/entity/EntityType.java b/src/main/java/org/bukkit/entity/EntityType.java\nindex 42f2dcc..cd3d4ec 100644\n--- a/src/main/java/org/bukkit/entity/EntityType.java\n+++ b/src/main/java/org/bukkit/entity/EntityType.java\n@@ -45,7 +45,7 @@\n     MUSHROOM_COW(\"MushroomCow\", MushroomCow.class, 96),\n     SNOWMAN(\"SnowMan\", Snowman.class, 97),\n     OCELOT(\"Ozelot\", Ocelot.class, 98),\n-    IRON_GOLEM(\"VillagerGolem\", IronGolem.class, 98),\n+    IRON_GOLEM(\"VillagerGolem\", IronGolem.class, 99),\n     VILLAGER(\"Villager\", Villager.class, 120),\n     ENDER_CRYSTAL(\"EnderCrystal\", EnderCrystal.class, 200),\n     // These don't have an entity ID in nms.EntityTypes.\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 48,
        "bugNodeStartChar": 1943,
        "bugNodeLength": 48,
        "fixLineNum": 48,
        "fixNodeStartChar": 1943,
        "fixNodeLength": 48,
        "sourceBeforeFix": "IRON_GOLEM(\"VillagerGolem\",IronGolem.class,98)",
        "sourceAfterFix": "IRON_GOLEM(\"VillagerGolem\",IronGolem.class,99)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f23520327e887028d3334206f89a7566261d0c83",
        "fixCommitParentSHA1": "ff66b97a3d990452b811eaeb24a9deda00640b4c",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\nindex ccb6e23..5a2e9b6 100644\n--- a/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n+++ b/camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java\n@@ -240,7 +240,7 @@\n         if (isParallelProcessing()) {\n             executorService.submit(() -> ReactiveHelper.schedule(runnable));\n         } else {\n-            ReactiveHelper.scheduleLast(runnable, \"Multicast next step\");\n+            ReactiveHelper.schedule(runnable, \"Multicast next step\");\n         }\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 243,
        "bugNodeStartChar": 9504,
        "bugNodeLength": 60,
        "fixLineNum": 243,
        "fixNodeStartChar": 9504,
        "fixNodeLength": 56,
        "sourceBeforeFix": "ReactiveHelper.scheduleLast(runnable,\"Multicast next step\")",
        "sourceAfterFix": "ReactiveHelper.schedule(runnable,\"Multicast next step\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "dcfe2673fd99ff60400ead9c83e338c358e2d1b3",
        "fixCommitParentSHA1": "5d3ac53da9f624214ceefd3ed11fb9c6dc497d9d",
        "bugFilePath": "spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java\nindex ebc28c6..83f962b 100644\n--- a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java\n+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/TomcatDataSourceConfigurationTests.java\n@@ -126,7 +126,7 @@\n \t\tassertThat(ds.getTimeBetweenEvictionRunsMillis()).isEqualTo(5000);\n \t\tassertThat(ds.getMinEvictableIdleTimeMillis()).isEqualTo(60000);\n \t\tassertThat(ds.getMaxWait()).isEqualTo(30000);\n-\t\tassertThat(ds.getValidationInterval()).isEqualTo(30000L);\n+\t\tassertThat(ds.getValidationInterval()).isEqualTo(3000L);\n \t}\n \n \t@SuppressWarnings(\"unchecked\")\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 129,
        "bugNodeStartChar": 5116,
        "bugNodeLength": 56,
        "fixLineNum": 129,
        "fixNodeStartChar": 5116,
        "fixNodeLength": 55,
        "sourceBeforeFix": "assertThat(ds.getValidationInterval()).isEqualTo(30000L)",
        "sourceAfterFix": "assertThat(ds.getValidationInterval()).isEqualTo(3000L)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "fedfad854b134ea5428c592ea711c59b377a71fa",
        "fixCommitParentSHA1": "7a8678decaae4216d3cd55f60a189ce24c48f759",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\nindex fe3a059..7647e78 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/DomainControllerMessages.java\n@@ -37,7 +37,7 @@\n import org.jboss.logging.Messages;\n \n /**\n- * This module is using message IDs in the range 10900-10999. This file is using the subset 10975-10999 for domain\n+ * This module is using message IDs in the range 10800-10899. This file is using the subset 10830-10899 for domain\n  * controller non-logger messages. See http://community.jboss.org/docs/DOC-16810 for the full list of currently reserved\n  * JBAS message id blocks.\n  * <p/>\n@@ -58,7 +58,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n+    @Message(id = 10830, value = \"Registration of remote hosts is not supported on slave host controllers\")\n     String slaveControllerCannotAcceptOtherSlaves();\n \n     /**\n@@ -69,7 +69,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n+    @Message(id = 10831, value = \"The master host controller cannot register slave host controllers as it's current running mode is '%s'\")\n     String adminOnlyModeCannotAcceptSlaves(RunningMode runningMode);\n \n     /**\n@@ -80,7 +80,7 @@\n      *\n      * @return a message for the error.\n      */\n-    @Message(id = 15832, value = \"There is already a registered host named '%s'\")\n+    @Message(id = 10832, value = \"There is already a registered host named '%s'\")\n     String slaveAlreadyRegistered(String slaveName);\n \n     /**\n@@ -92,7 +92,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15833, value = \"%s is missing %s: %s\")\n+    @Message(id = 10833, value = \"%s is missing %s: %s\")\n     String requiredChildIsMissing(String parent, String child, String parentSpec);\n \n     /**\n@@ -104,7 +104,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15834, value = \"%s recognizes only %s as children: %s\")\n+    @Message(id = 10834, value = \"%s recognizes only %s as children: %s\")\n     String unrecognizedChildren(String parent, String children, String parentSpec);\n \n     /**\n@@ -114,7 +114,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15835, value = IN_SERIES + \" is missing groups: %s\")\n+    @Message(id = 10835, value = IN_SERIES + \" is missing groups: %s\")\n     String inSeriesIsMissingGroups(String rolloutPlan);\n \n     /**\n@@ -124,7 +124,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n+    @Message(id = 10836, value = SERVER_GROUP + \" expects one and only one child: %s\")\n     String serverGroupExpectsSingleChild(String rolloutPlan);\n \n     /**\n@@ -135,7 +135,7 @@\n      *\n      * @return the error message\n      */\n-    @Message(id = 15837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n+    @Message(id = 10837, value = \"One of the groups does not define neither \" + SERVER_GROUP + \" nor \" + CONCURRENT_GROUPS + \": %s\")\n     String unexpectedInSeriesGroup(String rolloutPlan);\n \n     /**\n@@ -143,7 +143,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15838, value = \"Unexplained failure\")\n+    @Message(id = 10838, value = \"Unexplained failure\")\n     String unexplainedFailure();\n \n     /**\n@@ -151,7 +151,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15839, value = \"Operation failed or was rolled back on all servers.\")\n+    @Message(id = 10839, value = \"Operation failed or was rolled back on all servers.\")\n     String operationFailedOrRolledBack();\n \n     /**\n@@ -161,7 +161,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15840, value = \"Interrupted waiting for result from server %s\")\n+    @Message(id = 10840, value = \"Interrupted waiting for result from server %s\")\n     String interruptedAwaitingResultFromServer(ServerIdentity server);\n \n     /**\n@@ -172,7 +172,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15841, value = \"Exception getting result from server %s: %s\")\n+    @Message(id = 10841, value = \"Exception getting result from server %s: %s\")\n     String exceptionAwaitingResultFromServer(ServerIdentity server, String message);\n \n     /**\n@@ -184,7 +184,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n+    @Message(id = 10842, value = \"Invalid rollout plan. %s is not a valid child of node %s\")\n     String invalidRolloutPlan(ModelNode modelNode, String nodeName);\n \n     /**\n@@ -195,7 +195,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n+    @Message(id = 10843, value = \"Invalid rollout plan. Plan operations affect server groups %s that are not reflected in the rollout plan\")\n     String invalidRolloutPlan(Set<String> groups);\n \n     /**\n@@ -206,7 +206,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n+    @Message(id = 10844, value = \"Invalid rollout plan. Server group %s appears more than once in the plan.\")\n     String invalidRolloutPlanGroupAlreadyExists(String group);\n \n     /**\n@@ -219,7 +219,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n+    @Message(id = 10845, value = \"Invalid rollout plan. Server group %s has a %s value of %s; must be between 0 and 100.\")\n     String invalidRolloutPlanRange(String name, String propertyName, int value);\n \n     /**\n@@ -232,7 +232,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n+    @Message(id = 10846, value = \"Invalid rollout plan. Server group %s has a %s value of %s; cannot be less than 0.\")\n     String invalidRolloutPlanLess(String name, String propertyName, int value);\n \n     /**\n@@ -242,7 +242,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15847, value = \"Interrupted waiting for result from host %s\")\n+    @Message(id = 10847, value = \"Interrupted waiting for result from host %s\")\n     String interruptedAwaitingResultFromHost(String name);\n \n     /**\n@@ -253,7 +253,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15848, value = \"Exception getting result from host %s: %s\")\n+    @Message(id = 10848, value = \"Exception getting result from host %s: %s\")\n     String exceptionAwaitingResultFromHost(String name, String message);\n \n     /**\n@@ -265,7 +265,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15849, value = \"Operation %s for address %s can only be handled by the \" +\n+    @Message(id = 10849, value = \"Operation %s for address %s can only be handled by the \" +\n             \"master Domain Controller; this host is not the master Domain Controller\")\n     String masterDomainControllerOnlyOperation(String operation, PathAddress address);\n \n@@ -277,7 +277,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15850, value = \"No handler for operation %s at address %s\")\n+    @Message(id = 10850, value = \"No handler for operation %s at address %s\")\n     String noHandlerForOperation(String operationName, PathAddress address);\n \n     /**\n@@ -287,7 +287,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15851, value = \"Operation targets host %s but that host is not registered\")\n+    @Message(id = 10851, value = \"Operation targets host %s but that host is not registered\")\n     String invalidOperationTargetHost(String name);\n \n     /**\n@@ -298,7 +298,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15852, value = \"Caught %s storing deployment content -- %s\")\n+    @Message(id = 10852, value = \"Caught %s storing deployment content -- %s\")\n     String caughtExceptionStoringDeploymentContent(String exceptionName, Throwable exception);\n \n     /**\n@@ -308,7 +308,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15853, value = \"Unexpected initial path key %s\")\n+    @Message(id = 10853, value = \"Unexpected initial path key %s\")\n     IllegalStateException unexpectedInitialPathKey(String key);\n \n     /**\n@@ -318,7 +318,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15854, value = \"Null stream at index %d\")\n+    @Message(id = 10854, value = \"Null stream at index %d\")\n     String nullStream(int index);\n \n     /**\n@@ -326,7 +326,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15855, value = \"Invalid byte stream.\")\n+    @Message(id = 10855, value = \"Invalid byte stream.\")\n     String invalidByteStream();\n \n     /**\n@@ -334,7 +334,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15856, value = \"Invalid url stream.\")\n+    @Message(id = 10856, value = \"Invalid url stream.\")\n     String invalidUrlStream();\n \n     /**\n@@ -342,7 +342,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n+    @Message(id = 10857, value = \"Only 1 piece of content is currently supported (AS7-431)\")\n     String as7431();\n \n     /**\n@@ -352,7 +352,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n+    @Message(id = 10858, value = \"No deployment content with hash %s is available in the deployment content repository.\")\n     String noDeploymentContentWithHash(String hash);\n \n     /**\n@@ -360,7 +360,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15859, value = \"A slave domain controller cannot accept deployment content uploads\")\n+    @Message(id = 10859, value = \"A slave domain controller cannot accept deployment content uploads\")\n     String slaveCannotAcceptUploads();\n \n     /**\n@@ -370,7 +370,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15860, value = \"No deployment with name %s found\")\n+    @Message(id = 10860, value = \"No deployment with name %s found\")\n     String noDeploymentContentWithName(String name);\n \n     /**\n@@ -381,7 +381,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n+    @Message(id = 10861, value = \"Cannot remove deployment %s from the domain as it is still used by server groups %s\")\n     String cannotRemoveDeploymentInUse(String name, List<String> groups);\n \n     /**\n@@ -393,7 +393,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n+    @Message(id = 10862, value = \"Invalid '%s' value: %d, the maximum index is %d\")\n     String invalidValue(String name, int value, int maxIndex);\n \n     /**\n@@ -404,7 +404,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15863, value = \"%s is not a valid URL -- %s\")\n+    @Message(id = 10863, value = \"%s is not a valid URL -- %s\")\n     String invalidUrl(String url, String message);\n \n     /**\n@@ -415,7 +415,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15864, value = \"Error obtaining input stream from URL %s -- %s\")\n+    @Message(id = 10864, value = \"Error obtaining input stream from URL %s -- %s\")\n     String errorObtainingUrlStream(String url, String message);\n \n     /**\n@@ -423,7 +423,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15865, value = \"Invalid content declaration\")\n+    @Message(id = 10865, value = \"Invalid content declaration\")\n     String invalidContentDeclaration();\n \n     /**\n@@ -433,7 +433,7 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15866, value = \"%s is null\")\n+    @Message(id = 10866, value = \"%s is null\")\n     IllegalArgumentException nullVar(String name);\n \n     /**\n@@ -448,7 +448,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n+    @Message(id = 10867, value = \"Cannot use %s with the same value for parameters %s and %s. \" +\n             \"Use %s to redeploy the same content or %s to replace content with a new version with the same name.\")\n     String cannotUseSameValueForParameters(String opName, String param1, String param2, String redeployOpName, String replaceOpName);\n \n@@ -459,7 +459,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15868, value = \"Deployment %s is already started\")\n+    @Message(id = 10868, value = \"Deployment %s is already started\")\n     String deploymentAlreadyStarted(String name);\n \n     /**\n@@ -470,7 +470,7 @@\n      *\n      * @return the message.\n      */\n-    @Message(id = 15869, value = \"Unknown %s %s\")\n+    @Message(id = 10869, value = \"Unknown %s %s\")\n     String unknown(String name, String value);\n \n     /**\n@@ -480,7 +480,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15870, value = \"Unknown server group %s\")\n+    @Message(id = 10870, value = \"Unknown server group %s\")\n     IllegalStateException unknownServerGroup(String serverGroup);\n \n     /**\n@@ -490,7 +490,7 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15871, value = \"Unknown server %s\")\n+    @Message(id = 10871, value = \"Unknown server %s\")\n     IllegalStateException unknownServer(ServerIdentity server);\n \n     /**\n@@ -500,6 +500,6 @@\n      *\n      * @return an {@link IllegalArgumentException} for the error.\n      */\n-    @Message(id = 15872, value = \"Invalid code %d\")\n+    @Message(id = 10872, value = \"Invalid code %d\")\n     IllegalArgumentException invalidCode(int code);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 301,
        "bugNodeStartChar": 11774,
        "bugNodeLength": 10,
        "fixLineNum": 301,
        "fixNodeStartChar": 11774,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15852",
        "sourceAfterFix": "id=10852"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "1a5ec9791516322cfeb14508732b4a7025bef2e0",
        "fixCommitParentSHA1": "0283dec62a767c1ce3b7777423ca0bfc25a6d9c1",
        "bugFilePath": "src/main/java/org/graylog2/restclient/models/Extractor.java",
        "fixPatch": "diff --git a/src/main/java/org/graylog2/restclient/models/Extractor.java b/src/main/java/org/graylog2/restclient/models/Extractor.java\nindex 3b6f22c..0a0921a 100644\n--- a/src/main/java/org/graylog2/restclient/models/Extractor.java\n+++ b/src/main/java/org/graylog2/restclient/models/Extractor.java\n@@ -185,7 +185,7 @@\n         request.conditionValue = conditionValue;\n         request.order = order;\n \n-        final Map response = api.path(routes.ExtractorsResource().list(input.getId()), Map.class)\n+        final Map response = api.path(routes.ExtractorsResource().create(input.getId()), Map.class)\n                 .node(node)\n                 .expect(Http.Status.CREATED)\n                 .body(request)\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 188,
        "bugNodeStartChar": 6896,
        "bugNodeLength": 47,
        "fixLineNum": 188,
        "fixNodeStartChar": 6896,
        "fixNodeLength": 49,
        "sourceBeforeFix": "routes.ExtractorsResource().list(input.getId())",
        "sourceAfterFix": "routes.ExtractorsResource().create(input.getId())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "ebdfcb47a030730233cf0984aadae155ec138ff3",
        "fixCommitParentSHA1": "b2611e7376fa0047a88b9925329bf375cf5afbaa",
        "bugFilePath": "dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java",
        "fixPatch": "diff --git a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\nindex b52baad..8eac209 100644\n--- a/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n+++ b/dropwizard-jersey/src/main/java/io/dropwizard/jersey/jackson/JsonProcessingExceptionMapper.java\n@@ -48,7 +48,7 @@\n         /*\n          * Otherwise, it's those pesky users.\n          */\n-        LOGGER.debug(\"Unable to process JSON\", exception);\n+        LOGGER.warn(\"Unable to process JSON\", exception);\n         final ErrorMessage errorMessage = new ErrorMessage(Response.Status.BAD_REQUEST.getStatusCode(),\n                 \"Unable to process JSON\", showDetails ? message : null);\n         return Response.status(Response.Status.BAD_REQUEST)\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 51,
        "bugNodeStartChar": 1730,
        "bugNodeLength": 49,
        "fixLineNum": 51,
        "fixNodeStartChar": 1730,
        "fixNodeLength": 48,
        "sourceBeforeFix": "LOGGER.debug(\"Unable to process JSON\",exception)",
        "sourceAfterFix": "LOGGER.warn(\"Unable to process JSON\",exception)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "46284565a7d9127c25328e5ec036068f3f24dd49",
        "fixCommitParentSHA1": "94e561ce50f708f347136026c2c8685f262bf2b2",
        "bugFilePath": "src/main/java/org/bukkit/inventory/ItemStack.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java\nindex 7a424c7..95dc1f1 100644\n--- a/src/main/java/org/bukkit/inventory/ItemStack.java\n+++ b/src/main/java/org/bukkit/inventory/ItemStack.java\n@@ -356,18 +356,18 @@\n \n     public static ItemStack deserialize(Map<String, Object> args) {\n         Material type = Material.getMaterial((String) args.get(\"type\"));\n-        int damage = 0;\n+        short damage = 0;\n         int amount = 1;\n \n         if (args.containsKey(\"damage\")) {\n-            damage = (Integer) args.get(\"damage\");\n+            damage = (Short) args.get(\"damage\");\n         }\n \n         if (args.containsKey(\"amount\")) {\n             amount = (Integer) args.get(\"amount\");\n         }\n \n-        ItemStack result = new ItemStack(type, amount, (short) damage);\n+        ItemStack result = new ItemStack(type, amount, damage);\n \n         if (args.containsKey(\"enchantments\")) {\n             Object raw = args.get(\"enchantments\");\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 363,
        "bugNodeStartChar": 10707,
        "bugNodeLength": 28,
        "fixLineNum": 363,
        "fixNodeStartChar": 10707,
        "fixNodeLength": 26,
        "sourceBeforeFix": "(Integer)args.get(\"damage\")",
        "sourceAfterFix": "(Short)args.get(\"damage\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "eab15c5e16ba4ada19bb638f722e34bd071c9567",
        "fixCommitParentSHA1": "1993f27019ac6dbe20a39819e493a78461c42103",
        "bugFilePath": "src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java",
        "fixPatch": "diff --git a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\nindex 7dc1470..409030e 100644\n--- a/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n+++ b/src/test/java/org/apache/ibatis/logging/jdbc/ResultSetLoggerTest.java\n@@ -47,7 +47,7 @@\n     when(rs.getMetaData()).thenReturn(metaData);\n     when(metaData.getColumnCount()).thenReturn(1);\n     when(metaData.getColumnType(1)).thenReturn(type);\n-    when(metaData.getColumnName(1)).thenReturn(\"ColumnName\");\n+    when(metaData.getColumnLabel(1)).thenReturn(\"ColumnName\");\n     when(rs.getString(1)).thenReturn(\"value\");\n     when(log.isTraceEnabled()).thenReturn(true);\n     ResultSet resultSet = ResultSetLogger.newInstance(rs, log);\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 50,
        "bugNodeStartChar": 1528,
        "bugNodeLength": 25,
        "fixLineNum": 50,
        "fixNodeStartChar": 1528,
        "fixNodeLength": 26,
        "sourceBeforeFix": "metaData.getColumnName(1)",
        "sourceAfterFix": "metaData.getColumnLabel(1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9aa49c8f6d2b30577565f87984819e1df0d62d0f",
        "fixCommitParentSHA1": "536bc20b48637fa85025b790736114d5dcb7a385",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\nindex da90b2f..cf423bb 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java\n@@ -52,8 +52,8 @@\n      * Optional prefix for warning suppressions that are only intended to be\n      * recognized by checkstyle. For instance, to suppress {@code\n      * FallThroughCheck} only in checkstyle (and not in javac), use the\n-     * suppression {@code \"checkstyle:fallthrough\"}. To suppress the warning in\n-     * both tools, just use {@code \"fallthrough\"}.\n+     * suppression {@code \"checkstyle:fallthrough\"} or {@code \"checkstyle:FallThrough\"}.\n+     * To suppress the warning in both tools, just use {@code \"fallthrough\"}.\n      */\n     public static final String CHECKSTYLE_PREFIX = \"checkstyle:\";\n \n@@ -163,7 +163,7 @@\n                         .getLastColumn() >= column;\n             final boolean nameMatches =\n                 ALL_WARNING_MATCHING_ID.equals(entry.getCheckName())\n-                    || entry.getCheckName().equals(checkAlias);\n+                    || entry.getCheckName().equalsIgnoreCase(checkAlias);\n             if (afterStart && beforeEnd && nameMatches) {\n                 return true;\n             }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 166,
        "bugNodeStartChar": 6782,
        "bugNodeLength": 39,
        "fixLineNum": 166,
        "fixNodeStartChar": 6782,
        "fixNodeLength": 49,
        "sourceBeforeFix": "entry.getCheckName().equals(checkAlias)",
        "sourceAfterFix": "entry.getCheckName().equalsIgnoreCase(checkAlias)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3b5dd4e9dc0b6e350d27a2628b3f37b2483fe4a9",
        "fixCommitParentSHA1": "ba3616da3edf843412bc366f5dde533f3aef1add",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\nindex 205316b..cd05da1 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderNames.java\n@@ -147,7 +147,7 @@\n     /**\n      * {@code \"content-security-policy\"}\n      */\n-    public static final CharSequence CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n+    public static final AsciiString CONTENT_SECURITY_POLICY = new AsciiString(\"content-security-policy\");\n     /**\n      * {@code \"content-type\"}\n      */\n@@ -353,7 +353,7 @@\n     /**\n      * {@code \"x-frame-options\"}\n      */\n-    public static final CharSequence X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n+    public static final AsciiString X_FRAME_OPTIONS = new AsciiString(\"x-frame-options\");\n \n     private HttpHeaderNames() { }\n }\n",
        "projectName": "netty.netty",
        "bugLineNum": 147,
        "bugNodeStartChar": 5136,
        "bugNodeLength": 159,
        "fixLineNum": 147,
        "fixNodeStartChar": 5136,
        "fixNodeLength": 158,
        "sourceBeforeFix": "/**   * {@code \"content-security-policy\"}  */ public static final CharSequence CONTENT_SECURITY_POLICY=new AsciiString(\"content-security-policy\"); ",
        "sourceAfterFix": "/**   * {@code \"content-security-policy\"}  */ public static final AsciiString CONTENT_SECURITY_POLICY=new AsciiString(\"content-security-policy\"); "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 147,
        "bugNodeStartChar": 6008,
        "bugNodeLength": 77,
        "fixLineNum": 147,
        "fixNodeStartChar": 5862,
        "fixNodeLength": 77,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6b7a9eb44a285097eee57a08732ce247ca8e3bc3",
        "fixCommitParentSHA1": "92f2d0d2a65fdbf3c2cb3abefb0a6276822271aa",
        "bugFilePath": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java",
        "fixPatch": "diff --git a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\nindex 45ff9b3..e7ff10c 100644\n--- a/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\n+++ b/flink-table/flink-table-common/src/main/java/org/apache/flink/table/expressions/TypeLiteralExpression.java\n@@ -50,7 +50,7 @@\n \n \t@Override\n \tpublic <R> R accept(ExpressionVisitor<R> visitor) {\n-\t\treturn visitor.visit(this);\n+\t\treturn visitor.visitTypeLiteral(this);\n \t}\n \n \t@Override\n",
        "projectName": "apache.flink",
        "bugLineNum": 53,
        "bugNodeStartChar": 1666,
        "bugNodeLength": 19,
        "fixLineNum": 53,
        "fixNodeStartChar": 1666,
        "fixNodeLength": 30,
        "sourceBeforeFix": "visitor.visit(this)",
        "sourceAfterFix": "visitor.visitTypeLiteral(this)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "856d677bd206104de06ed33649576ad7ae90a6d2",
        "fixCommitParentSHA1": "9ddc0a3f2afc320bf2c6a7838aa2aaf7c96cda0e",
        "bugFilePath": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java",
        "fixPatch": "diff --git a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\nindex a8411c9..20dbafe 100644\n--- a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\n+++ b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java\n@@ -375,9 +375,9 @@\n     METASTORECONNECTURLKEY(\"javax.jdo.option.ConnectionURL\",\n         \"jdbc:derby:;databaseName=metastore_db;create=true\",\n         \"JDBC connect string for a JDBC metastore\"),\n-    HMSHANDLERATTEMPTS(\"hive.hmshandler.retry.attempts\", 1,\n+    HMSHANDLERATTEMPTS(\"hive.hmshandler.retry.attempts\", 10,\n         \"The number of times to retry a HMSHandler call if there were a connection error.\"),\n-    HMSHANDLERINTERVAL(\"hive.hmshandler.retry.interval\", \"1000ms\",\n+    HMSHANDLERINTERVAL(\"hive.hmshandler.retry.interval\", \"2000ms\",\n         new TimeValidator(TimeUnit.MILLISECONDS), \"The time between HMSHandler retry attempts on failure.\"),\n     HMSHANDLERFORCERELOADCONF(\"hive.hmshandler.force.reload.conf\", false,\n         \"Whether to force reloading of the HMSHandler configuration (including\\n\" +\n",
        "projectName": "apache.hive",
        "bugLineNum": 378,
        "bugNodeStartChar": 21693,
        "bugNodeLength": 147,
        "fixLineNum": 378,
        "fixNodeStartChar": 21693,
        "fixNodeLength": 148,
        "sourceBeforeFix": "HMSHANDLERATTEMPTS(\"hive.hmshandler.retry.attempts\",1,\"The number of times to retry a HMSHandler call if there were a connection error.\")",
        "sourceAfterFix": "HMSHANDLERATTEMPTS(\"hive.hmshandler.retry.attempts\",10,\"The number of times to retry a HMSHandler call if there were a connection error.\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "00840599a7a498cbd19d524ab5ad698365cbab4f",
        "fixCommitParentSHA1": "f96a7e0e57c382d2154fa7b004d18e6a6e2eaa89",
        "bugFilePath": "flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java",
        "fixPatch": "diff --git a/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java b/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\nindex 6ffbd1b..2efe7e9 100644\n--- a/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\n+++ b/flink-java/src/main/java/org/apache/flink/api/java/operators/JoinOperator.java\n@@ -925,13 +925,13 @@\n \t\tpublic void join(T1 in1, T2 in2, Collector<R> out) {\n \t\t\tfor(int i=0; i<fields.length; i++) {\n \t\t\t\tif(isFromFirst[i]) {\n-\t\t\t\t\tif(fields[i] >= 0) {\n+\t\t\t\t\tif(fields[i] >= 0 && in1 != null) {\n \t\t\t\t\t\toutTuple.setField(((Tuple)in1).getField(fields[i]), i);\n \t\t\t\t\t} else {\n \t\t\t\t\t\toutTuple.setField(in1, i);\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tif(fields[i] >= 0) {\n+\t\t\t\t\tif(fields[i] >= 0 && in2 != null) {\n \t\t\t\t\t\toutTuple.setField(((Tuple)in2).getField(fields[i]), i);\n \t\t\t\t\t} else {\n \t\t\t\t\t\toutTuple.setField(in2, i);\n",
        "projectName": "apache.flink",
        "bugLineNum": 928,
        "bugNodeStartChar": 41211,
        "bugNodeLength": 14,
        "fixLineNum": 928,
        "fixNodeStartChar": 41211,
        "fixNodeLength": 29,
        "sourceBeforeFix": "fields[i] >= 0",
        "sourceAfterFix": "fields[i] >= 0 && in1 != null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "c32ad40f85061b84724dd9b5b8479eebea8675a0",
        "fixCommitParentSHA1": "6f74927366d17a4773006a094a7f0bc29c4b674b",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/atomicreference/AtomicReferenceBasicLocalTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/atomicreference/AtomicReferenceBasicLocalTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/atomicreference/AtomicReferenceBasicLocalTest.java\nindex f9522d2..041b6c7 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/atomicreference/AtomicReferenceBasicLocalTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/atomicreference/AtomicReferenceBasicLocalTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class AtomicReferenceBasicLocalTest extends AtomicReferenceBasicTest {\n+public class AtomicReferenceBasicLocalTest extends AtomicReferenceAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 336,
        "bugNodeLength": 311,
        "fixLineNum": 10,
        "fixNodeStartChar": 336,
        "fixNodeLength": 314,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicReferenceBasicLocalTest extends AtomicReferenceBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicReferenceBasicLocalTest extends AtomicReferenceAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3761eecbff48b37391956c4c2d035c3b8456e39e",
        "fixCommitParentSHA1": "7e7c30561e0b457cb14b85beefdeb4a49ebb9ba9",
        "bugFilePath": "components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java",
        "fixPatch": "diff --git a/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java b/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\nindex 52b9c6f..f637f04 100644\n--- a/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\n+++ b/components/camel-jdbc/src/test/java/org/apache/camel/component/jdbc/JdbcSpringAnotherRouteTest.java\n@@ -30,7 +30,7 @@\n     \n     @Test\n     public void testTimerInvoked() throws Exception {\n-        mock.expectedMessageCount(1);\n+        mock.expectedMinimumMessageCount(1);\n \n         assertMockEndpointsSatisfied();\n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 33,
        "bugNodeStartChar": 1396,
        "bugNodeLength": 28,
        "fixLineNum": 33,
        "fixNodeStartChar": 1396,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.expectedMessageCount(1)",
        "sourceAfterFix": "mock.expectedMinimumMessageCount(1)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b282b8181d18ddfd3ba30089e65114696995462f",
        "fixCommitParentSHA1": "7d94fa4505a6ea45f4b247d8a18d922a726d0f30",
        "bugFilePath": "src/main/java/com/alibaba/druid/proxy/DruidDriver.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\nindex ca9d598..54263dd 100644\n--- a/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n+++ b/src/main/java/com/alibaba/druid/proxy/DruidDriver.java\n@@ -102,7 +102,7 @@\n                 if (LOG == null) {\n                     LOG = LogFactory.getLog(DruidDriver.class);\n                 }\n-                LOG.error(\"register druid-driver mbean error\", ex);\n+                LOG.warn(\"register druid-driver mbean error\", ex);\n             }\n \n             return true;\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 105,
        "bugNodeStartChar": 4630,
        "bugNodeLength": 50,
        "fixLineNum": 105,
        "fixNodeStartChar": 4630,
        "fixNodeLength": 49,
        "sourceBeforeFix": "LOG.error(\"register druid-driver mbean error\",ex)",
        "sourceAfterFix": "LOG.warn(\"register druid-driver mbean error\",ex)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCyclomaticComplexityTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCyclomaticComplexityTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCyclomaticComplexityTest.java\nindex 4422123..57d7abb 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCyclomaticComplexityTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCyclomaticComplexityTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck;\n \n-public class XpathRegressionCyclomaticComplexityTest extends AbstractXpathTestSupport {\n+public class XpathRegressionCyclomaticComplexityTest extends XpathTestSupport {\n \n     @Test\n     public void testOne() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1318,
        "bugNodeLength": 2645,
        "fixLineNum": 31,
        "fixNodeStartChar": 1318,
        "fixNodeLength": 2637,
        "sourceBeforeFix": "public class XpathRegressionCyclomaticComplexityTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=CyclomaticComplexityCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionCyclomaticOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(CyclomaticComplexityCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"4:5: \" + getCheckMessage(CyclomaticComplexityCheck.class,CyclomaticComplexityCheck.MSG_KEY,2,0)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=CyclomaticComplexityCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionCyclomaticTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(CyclomaticComplexityCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"6:5: \" + getCheckMessage(CyclomaticComplexityCheck.class,CyclomaticComplexityCheck.MSG_KEY,5,0)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionCyclomaticComplexityTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=CyclomaticComplexityCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionCyclomaticOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(CyclomaticComplexityCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"4:5: \" + getCheckMessage(CyclomaticComplexityCheck.class,CyclomaticComplexityCheck.MSG_KEY,2,0)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticOne']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=CyclomaticComplexityCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionCyclomaticTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(CyclomaticComplexityCheck.class);     moduleConfig.addAttribute(\"max\",\"0\");     final String[] expectedViolation={\"6:5: \" + getCheckMessage(CyclomaticComplexityCheck.class,CyclomaticComplexityCheck.MSG_KEY,5,0)};     final List<String> expectedXpathQueries=Arrays.asList(\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']/MODIFIERS\",\"/CLASS_DEF[@text='SuppressionXpathRegressionCyclomaticTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo2']/MODIFIERS/LITERAL_PUBLIC\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "72510eeab69456ab24afbf86dcd5db46e09aa2ab",
        "fixCommitParentSHA1": "8535b0c8f6ff071fd51d6d2a068263527858b0fa",
        "bugFilePath": "StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java",
        "fixPatch": "diff --git a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\nindex 9bd201e..473fe10 100644\n--- a/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n+++ b/StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java\n@@ -165,7 +165,7 @@\n                 Element reportE = document.createElement(\"report\");\n                 reportE.setAttribute(\"class\", entry.getKey().getName());\n                 reportE.setAttribute(\"value\", entry.getValue());\n-                resultsE.appendChild(reportE);\n+                reportsE.appendChild(reportE);\n             }\n         }\n         modelE.appendChild(reportsE);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 168,
        "bugNodeStartChar": 5788,
        "bugNodeLength": 29,
        "fixLineNum": 168,
        "fixNodeStartChar": 5788,
        "fixNodeLength": 29,
        "sourceBeforeFix": "resultsE.appendChild(reportE)",
        "sourceAfterFix": "reportsE.appendChild(reportE)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "dd6c3f83e4bb27d590c628b9202496770bde87aa",
        "fixCommitParentSHA1": "f8bce7f237dd6ab5d2f941f3a5f59cc0bf9622b3",
        "bugFilePath": "batch/chunk-csv-database/src/main/java/org/javaee7/batch/chunk/csv/database/MyItemReader.java",
        "fixPatch": "diff --git a/batch/chunk-csv-database/src/main/java/org/javaee7/batch/chunk/csv/database/MyItemReader.java b/batch/chunk-csv-database/src/main/java/org/javaee7/batch/chunk/csv/database/MyItemReader.java\nindex 03c1799..3709eca 100644\n--- a/batch/chunk-csv-database/src/main/java/org/javaee7/batch/chunk/csv/database/MyItemReader.java\n+++ b/batch/chunk-csv-database/src/main/java/org/javaee7/batch/chunk/csv/database/MyItemReader.java\n@@ -21,12 +21,7 @@\n     public void open(Serializable checkpoint) throws Exception {\n         reader = new BufferedReader(\n                 new InputStreamReader(\n-                    this\n-                    .getClass()\n-                    .getClassLoader()\n-                    .getResourceAsStream(\"/META-INF/mydata.csv\")\n-                )\n-            );\n+                        Thread.currentThread().getContextClassLoader().getResourceAsStream(\"/META-INF/mydata.csv\")));\n     }\n \n     @Override\n",
        "projectName": "javaee-samples.javaee7-samples",
        "bugLineNum": 24,
        "bugNodeStartChar": 615,
        "bugNodeLength": 4,
        "fixLineNum": 24,
        "fixNodeStartChar": 619,
        "fixNodeLength": 6,
        "sourceBeforeFix": "this.getClass()",
        "sourceAfterFix": "Thread.currentThread()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 580,
        "bugNodeStartChar": 28062,
        "bugNodeLength": 118,
        "fixLineNum": 580,
        "fixNodeStartChar": 28062,
        "fixNodeLength": 118,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id+ \".json\",http.isAuthenticationEnabled()))"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da",
        "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88",
        "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java",
        "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 605,
        "bugNodeStartChar": 24443,
        "bugNodeLength": 34,
        "fixLineNum": 605,
        "fixNodeStartChar": 24443,
        "fixNodeLength": 26,
        "sourceBeforeFix": "queryIdsSnapshot.remove(deadQuery)",
        "sourceAfterFix": "queryIds.remove(deadQuery)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d1cb70710f70a129598e92a638d536b9207aa01f",
        "fixCommitParentSHA1": "b36a323211503978fd314dddaab01bf964ad358b",
        "bugFilePath": "modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java",
        "fixPatch": "diff --git a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\nindex 3cce777..b677597 100644\n--- a/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n+++ b/modules/swagger-models/src/main/java/io/swagger/models/RefResponse.java\n@@ -52,27 +52,27 @@\n     }\n \n     @Override\n-    public ResponseImpl schema(Property property) {\n+    public Response schema(Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl description(String description) {\n+    public Response description(String description) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl example(String type, Object example) {\n+    public Response example(String type, Object example) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl header(String name, Property property) {\n+    public Response header(String name, Property property) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n     @Override\n-    public ResponseImpl headers(Map<String, Property> headers) {\n+    public Response headers(Map<String, Property> headers) {\n         throw new RuntimeException(\"Not implemented\");\n     }\n \n",
        "projectName": "swagger-api.swagger-core",
        "bugLineNum": 69,
        "bugNodeStartChar": 1638,
        "bugNodeLength": 135,
        "fixLineNum": 69,
        "fixNodeStartChar": 1638,
        "fixNodeLength": 131,
        "sourceBeforeFix": "@Override public ResponseImpl header(String name,Property property){   throw new RuntimeException(\"Not implemented\"); } ",
        "sourceAfterFix": "@Override public Response header(String name,Property property){   throw new RuntimeException(\"Not implemented\"); } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e0db0f19bd1aa3c7ce48ed02ed99b3ea950e1cee",
        "fixCommitParentSHA1": "64b750ac64e88477b536a9062b42cab2f0c85329",
        "bugFilePath": "ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java",
        "fixPatch": "diff --git a/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java b/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\nindex 850887c..54fceca 100644\n--- a/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\n+++ b/ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java\n@@ -231,7 +231,7 @@\n \n             Double[] toAdd = new Double[]{toRemove[0], excludingPoint};\n \n-            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[0]);\n+            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[1]);\n         }\n         return source;\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 234,
        "bugNodeStartChar": 9834,
        "bugNodeLength": 11,
        "fixLineNum": 234,
        "fixNodeStartChar": 9834,
        "fixNodeLength": 11,
        "sourceBeforeFix": "toRemove[0]",
        "sourceAfterFix": "toRemove[1]"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "2897c425577be5d5b3ed10ce5f01e0fcb8ba1975",
        "fixCommitParentSHA1": "b101a203b2cc36ec2252945a5f89e1936d318247",
        "bugFilePath": "core/common/src/main/java/alluxio/security/authorization/PermissionStatus.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/security/authorization/PermissionStatus.java b/core/common/src/main/java/alluxio/security/authorization/PermissionStatus.java\nindex 0ce7b8d..cff3cb9 100644\n--- a/core/common/src/main/java/alluxio/security/authorization/PermissionStatus.java\n+++ b/core/common/src/main/java/alluxio/security/authorization/PermissionStatus.java\n@@ -90,7 +90,7 @@\n    * @see FileSystemPermission#applyUMask(FileSystemPermission)\n    */\n   public PermissionStatus applyUMask(FileSystemPermission umask, Configuration configuration) {\n-    if (!SecurityUtils.isSecurityEnabled(configuration)) {\n+    if (!SecurityUtils.isAuthorizationEnabled(configuration)) {\n       return new PermissionStatus(mUserName, mGroupName, mPermission);\n     }\n     FileSystemPermission newFileSystemPermission = mPermission.applyUMask(umask);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 93,
        "bugNodeStartChar": 2819,
        "bugNodeLength": 46,
        "fixLineNum": 93,
        "fixNodeStartChar": 2819,
        "fixNodeLength": 51,
        "sourceBeforeFix": "SecurityUtils.isSecurityEnabled(configuration)",
        "sourceAfterFix": "SecurityUtils.isAuthorizationEnabled(configuration)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8f42f10cb9c29872b83f2a3595248c8c9f28326d",
        "fixCommitParentSHA1": "8652e1ff2838e16b7a4e141a37c8bf45299b6edd",
        "bugFilePath": "src/main/java/org/bukkit/command/defaults/TeleportCommand.java",
        "fixPatch": "diff --git a/src/main/java/org/bukkit/command/defaults/TeleportCommand.java b/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\nindex 2147d3e..fd1b9bd 100644\n--- a/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/TeleportCommand.java\n@@ -71,7 +71,7 @@\n             playerLocation.setY(y);\n             playerLocation.setZ(z);\n \n-            player.teleport(playerLocation);\n+            player.teleport(playerLocation, TeleportCause.COMMAND);\n             Command.broadcastCommandMessage(sender, String.format(\"Teleported %s to %.2f, %.2f, %.2f\", player.getDisplayName(), x, y, z));\n         }\n         return true;\n",
        "projectName": "Bukkit.Bukkit",
        "bugLineNum": 74,
        "bugNodeStartChar": 2763,
        "bugNodeLength": 31,
        "fixLineNum": 74,
        "fixNodeStartChar": 2763,
        "fixNodeLength": 54,
        "sourceBeforeFix": "player.teleport(playerLocation)",
        "sourceAfterFix": "player.teleport(playerLocation,TeleportCause.COMMAND)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "3f1de7052513fe59cca020660a5d34d92287a47d",
        "fixCommitParentSHA1": "3f295965dd0ea0e6d20ed7ecd001590d574af06b",
        "bugFilePath": "storm-core/src/jvm/backtype/storm/blobstore/KeySequenceNumber.java",
        "fixPatch": "diff --git a/storm-core/src/jvm/backtype/storm/blobstore/KeySequenceNumber.java b/storm-core/src/jvm/backtype/storm/blobstore/KeySequenceNumber.java\nindex 9307993..2a53828 100644\n--- a/storm-core/src/jvm/backtype/storm/blobstore/KeySequenceNumber.java\n+++ b/storm-core/src/jvm/backtype/storm/blobstore/KeySequenceNumber.java\n@@ -117,7 +117,7 @@\n  *  synchronization happens appropriately and all nimbodes have the same blob.\n  */\n public class KeySequenceNumber {\n-    private static final Logger LOG = LoggerFactory.getLogger(Utils.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(KeySequenceNumber.class);\n     private final String BLOBSTORE_SUBTREE=\"/blobstore\";\n     private final String BLOBSTORE_MAX_KEY_SEQUENCE_SUBTREE=\"/blobstoremaxkeysequencenumber\";\n     private final String key;\n",
        "projectName": "apache.storm",
        "bugLineNum": 120,
        "bugNodeStartChar": 7468,
        "bugNodeLength": 11,
        "fixLineNum": 120,
        "fixNodeStartChar": 7468,
        "fixNodeLength": 23,
        "sourceBeforeFix": "Utils.class",
        "sourceAfterFix": "KeySequenceNumber.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "256d2e40a6796283556618b87af4b5730f903f62",
        "fixCommitParentSHA1": "caec15542860ecf185364c2c7b0864fe9df0bae0",
        "bugFilePath": "extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java",
        "fixPatch": "diff --git a/extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java b/extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java\nindex b0d5a06..9412087 100644\n--- a/extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java\n+++ b/extras/registry/src/main/java/org/asynchttpclient/extras/registry/AsyncHttpClientFactory.java\n@@ -63,7 +63,7 @@\n     public static AsyncHttpClient getAsyncHttpClient(AsyncHttpClientConfig config) {\n         if (attemptInstantiation()) {\n             try {\n-                Constructor<AsyncHttpClient> constructor = asyncHttpClientImplClass.getConstructor(DefaultAsyncHttpClientConfig.class);\n+                Constructor<AsyncHttpClient> constructor = asyncHttpClientImplClass.getConstructor(AsyncHttpClientConfig.class);\n                 return constructor.newInstance(config);\n             } catch (Exception e) {\n                 throw new AsyncHttpClientImplException(\"Unable to find the instantiate the class specified by system property : \"\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 66,
        "bugNodeStartChar": 3254,
        "bugNodeLength": 34,
        "fixLineNum": 66,
        "fixNodeStartChar": 3254,
        "fixNodeLength": 27,
        "sourceBeforeFix": "DefaultAsyncHttpClientConfig.class",
        "sourceAfterFix": "AsyncHttpClientConfig.class"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "d4394e3727c822cd62e1e916335493df61ee409d",
        "fixCommitParentSHA1": "b58fc9ad713aa8ca68b0b38a87b235f4f8f96d6c",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\nindex 34d1c15..1dcf1e3 100755\n--- a/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n+++ b/src/main/java/com/alibaba/fastjson/serializer/ASMSerializerFactory.java\n@@ -586,7 +586,7 @@\n                 mw.visitLabel(forItemNullElse_);\n \n                 Label forItemClassIfEnd_ = new Label(), forItemClassIfElse_ = new Label();\n-                if (elementClass != null) {\n+                if (elementClass != null && Modifier.isPublic(elementClass.getModifiers())) {\n                     mw.visitVarInsn(ALOAD, context.var(\"list_item\"));\n                     mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n                     mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(elementClass)));\n@@ -697,7 +697,7 @@\n                 mw.visitVarInsn(ASTORE, context.var(\"fied_ser\"));\n \n                 Label instanceOfElse_ = new Label(), instanceOfEnd_ = new Label();\n-                if (context.writeDirect) {\n+                if (context.writeDirect && Modifier.isPublic(fieldClass.getModifiers())) {\n                     mw.visitVarInsn(ALOAD, context.var(\"fied_ser\"));\n                     mw.visitTypeInsn(INSTANCEOF, type(JavaBeanSerializer.class));\n                     mw.visitJumpInsn(IFEQ, instanceOfElse_);\n@@ -1482,7 +1482,7 @@\n             mw.visitLabel(forItemNullElse_);\n \n             Label forItemClassIfEnd_ = new Label(), forItemClassIfElse_ = new Label();\n-            if (elementClass != null) {\n+            if (elementClass != null && Modifier.isPublic(elementClass.getModifiers())) {\n                 mw.visitVarInsn(ALOAD, context.var(\"list_item\"));\n                 mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n                 mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(elementClass)));\n@@ -1670,7 +1670,7 @@\n         mw.visitMethodInsn(INVOKEVIRTUAL, SerializeWriter, \"writeFieldName\", \"(Ljava/lang/String;Z)V\");\n \n         Label classIfEnd_ = new Label(), classIfElse_ = new Label();\n-        if (!ParserConfig.isPrimitive(fieldClass)) {\n+        if (Modifier.isPublic(fieldClass.getModifiers()) && !ParserConfig.isPrimitive(fieldClass)) {\n             mw.visitVarInsn(ALOAD, context.var(\"object\"));\n             mw.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Object\", \"getClass\", \"()Ljava/lang/Class;\");\n             mw.visitLdcInsn(com.alibaba.fastjson.asm.Type.getType(desc(fieldClass)));\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 589,
        "bugNodeStartChar": 25510,
        "bugNodeLength": 20,
        "fixLineNum": 589,
        "fixNodeStartChar": 25510,
        "fixNodeLength": 70,
        "sourceBeforeFix": "elementClass != null",
        "sourceAfterFix": "elementClass != null && Modifier.isPublic(elementClass.getModifiers())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "692c2f34409172f07c0e0e4900f65bfdac9ba89e",
        "fixCommitParentSHA1": "0132d33d2a67ba2fd608e6ef4075784315ecfa03",
        "bugFilePath": "components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfEndpointTest.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfEndpointTest.java b/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfEndpointTest.java\nindex 8293ec6..72e93c5 100644\n--- a/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfEndpointTest.java\n+++ b/components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfEndpointTest.java\n@@ -102,7 +102,7 @@\n         SimpleRegistry registry = new SimpleRegistry();\n         CxfEndpointConfigurer configurer = mock(CxfEndpointConfigurer.class);\n         Processor processor = mock(Processor.class);\n-        registry.put(\"myConfigurer\", configurer);\n+        registry.bind(\"myConfigurer\", configurer);\n         CamelContext camelContext = new DefaultCamelContext(registry);\n         CxfComponent cxfComponent = new CxfComponent(camelContext);\n         CxfEndpoint endpoint = (CxfEndpoint)cxfComponent.createEndpoint(routerEndpointURI + \"&cxfEndpointConfigurer=#myConfigurer\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 105,
        "bugNodeStartChar": 4939,
        "bugNodeLength": 40,
        "fixLineNum": 105,
        "fixNodeStartChar": 4939,
        "fixNodeLength": 41,
        "sourceBeforeFix": "registry.put(\"myConfigurer\",configurer)",
        "sourceAfterFix": "registry.bind(\"myConfigurer\",configurer)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "807a77fe91fb3ad81a3a9c7ad13101b68dcdb4a4",
        "fixCommitParentSHA1": "9baeb5a265aba9afaad9109b944cb652ce2e23fb",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java b/ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java\nindex 638730a..74f6c3c 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/component/EJBComponent.java\n@@ -285,7 +285,7 @@\n         try {\n             return jndiContext.lookup(namespaceStrippedJndiName);\n         } catch (NamingException ne) {\n-            throw new RuntimeException(\"Could not lookup jndi name: \" + namespaceStrippedJndiName + \" in context: \" + jndiContext, ne);\n+            throw new IllegalArgumentException(\"Could not lookup jndi name: \" + namespaceStrippedJndiName + \" in context: \" + jndiContext, ne);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 288,
        "bugNodeStartChar": 14177,
        "bugNodeLength": 116,
        "fixLineNum": 288,
        "fixNodeStartChar": 14177,
        "fixNodeLength": 124,
        "sourceBeforeFix": "new RuntimeException(\"Could not lookup jndi name: \" + namespaceStrippedJndiName + \" in context: \"+ jndiContext,ne)",
        "sourceAfterFix": "new IllegalArgumentException(\"Could not lookup jndi name: \" + namespaceStrippedJndiName + \" in context: \"+ jndiContext,ne)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "b72b1ca4847db6559ca16fc9c7cab22e7e6242f2",
        "fixCommitParentSHA1": "0c8abb044b4c56dc5cdf391cece96a11a34f4f62",
        "bugFilePath": "examples/src/main/java/alluxio/cli/AlluxioFrameworkIntegrationTest.java",
        "fixPatch": "diff --git a/examples/src/main/java/alluxio/cli/AlluxioFrameworkIntegrationTest.java b/examples/src/main/java/alluxio/cli/AlluxioFrameworkIntegrationTest.java\nindex db32d70..24572f2 100644\n--- a/examples/src/main/java/alluxio/cli/AlluxioFrameworkIntegrationTest.java\n+++ b/examples/src/main/java/alluxio/cli/AlluxioFrameworkIntegrationTest.java\n@@ -127,7 +127,7 @@\n   private void startAlluxioFramework(Map<String, String> extraEnv) {\n     String startScript = PathUtils.concatPath(Configuration.get(PropertyKey.HOME),\n         \"integration\", \"bin\", \"alluxio-mesos.sh\");\n-    ProcessBuilder pb = new ProcessBuilder(startScript, mMesosAddress, \"-w\");\n+    ProcessBuilder pb = new ProcessBuilder(startScript, mMesosAddress);\n     Map<String, String> env = pb.environment();\n     env.putAll(extraEnv);\n     try {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 130,
        "bugNodeStartChar": 5171,
        "bugNodeLength": 52,
        "fixLineNum": 130,
        "fixNodeStartChar": 5171,
        "fixNodeLength": 46,
        "sourceBeforeFix": "new ProcessBuilder(startScript,mMesosAddress,\"-w\")",
        "sourceAfterFix": "new ProcessBuilder(startScript,mMesosAddress)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c7fd539c43b8e027a74d0f9118e9f3d48bc930d1",
        "fixCommitParentSHA1": "18cedf2d609b2a721f5bbc8c4c8fab2fe875d5fb",
        "bugFilePath": "hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java",
        "fixPatch": "diff --git a/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java b/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\nindex c3e1c82..6883615 100644\n--- a/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\n+++ b/hazelcast-wm/src/main/java/com/hazelcast/web/WebFilter.java\n@@ -742,7 +742,7 @@\n                 entry.value = value;\n                 entry.dirty = true;\n             } else {\n-                getClusterMap().put(buildAttributeName(name), value);\n+                getClusterMap().set(buildAttributeName(name), value);\n             }\n         }\n \n@@ -828,7 +828,7 @@\n                             clusterMap.delete(buildAttributeName(entry.getKey()));\n                             iterator.remove();\n                         } else {\n-                            clusterMap.put(buildAttributeName(entry.getKey()), cacheEntry.value);\n+                            clusterMap.set(buildAttributeName(entry.getKey()), cacheEntry.value);\n                             cacheEntry.dirty = false;\n                         }\n                     }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 831,
        "bugNodeStartChar": 34046,
        "bugNodeLength": 68,
        "fixLineNum": 831,
        "fixNodeStartChar": 34046,
        "fixNodeLength": 68,
        "sourceBeforeFix": "clusterMap.put(buildAttributeName(entry.getKey()),cacheEntry.value)",
        "sourceAfterFix": "clusterMap.set(buildAttributeName(entry.getKey()),cacheEntry.value)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "3c136fbd9f79b179f010322aff8ed2b829209db8",
        "fixCommitParentSHA1": "5ac926b4cfaaa7af83b3595b05da236713a05d68",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java\nindex 8f9ef7c..a89bb16 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java\n@@ -61,7 +61,7 @@\n         final FilterSet fc =\n             SuppressionsLoader.loadSuppressions(getPath(\"suppressions_none.xml\"));\n         final FilterSet fc2 = new FilterSet();\n-        assertEquals(fc, fc2);\n+        assertEquals(fc2, fc);\n     }\n \n     @Test\n@@ -120,7 +120,7 @@\n         se3.setLines(\"1,2-3\");\n         se3.setColumns(\"1,2-3\");\n         fc2.addFilter(se3);\n-        assertEquals(fc, fc2);\n+        assertEquals(fc2, fc);\n     }\n \n     @Test\n@@ -272,6 +272,6 @@\n         final FilterSet fc =\n             SuppressionsLoader.loadSuppressions(getPath(\"suppressions_none.xml\"));\n         final FilterSet fc2 = new FilterSet();\n-        assertEquals(fc, fc2);\n+        assertEquals(fc2, fc);\n     }\n }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 64,
        "bugNodeStartChar": 2540,
        "bugNodeLength": 21,
        "fixLineNum": 64,
        "fixNodeStartChar": 2540,
        "fixNodeLength": 21,
        "sourceBeforeFix": "assertEquals(fc,fc2)",
        "sourceAfterFix": "assertEquals(fc2,fc)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e6329ebed39492e0ffeb243b0430bcc07ece81a0",
        "fixCommitParentSHA1": "43ed372322106eb31e995ff25730e75705f5fe84",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/internal/networking/nonblocking/NonBlockingIOThreadingModel.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/networking/nonblocking/NonBlockingIOThreadingModel.java b/hazelcast/src/main/java/com/hazelcast/internal/networking/nonblocking/NonBlockingIOThreadingModel.java\nindex b9be294..dd2504f 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/networking/nonblocking/NonBlockingIOThreadingModel.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/networking/nonblocking/NonBlockingIOThreadingModel.java\n@@ -156,7 +156,7 @@\n         if (logger.isFineEnabled()) {\n             logger.fine(\"TcpIpConnectionManager configured with Non Blocking IO-threading model: \"\n                     + inputThreadCount + \" input threads and \"\n-                    + outputThreads + \" output threads\");\n+                    + outputThreadCount + \" output threads\");\n         }\n \n \n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 157,
        "bugNodeStartChar": 6987,
        "bugNodeLength": 193,
        "fixLineNum": 157,
        "fixNodeStartChar": 6987,
        "fixNodeLength": 197,
        "sourceBeforeFix": "\"TcpIpConnectionManager configured with Non Blocking IO-threading model: \" + inputThreadCount + \" input threads and \"+ outputThreads+ \" output threads\"",
        "sourceAfterFix": "\"TcpIpConnectionManager configured with Non Blocking IO-threading model: \" + inputThreadCount + \" input threads and \"+ outputThreadCount+ \" output threads\""
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "9323424d263a1e573ab7edbfc69d67d8782ce36a",
        "fixCommitParentSHA1": "4eae69e20692a697a12a705155e972ddf448ca48",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/lock/ConditionBasicLocalTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/ConditionBasicLocalTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/ConditionBasicLocalTest.java\nindex fa2e3ab..40cc2f3 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/ConditionBasicLocalTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/ConditionBasicLocalTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class ConditionBasicLocalTest extends ConditionBasicTest {\n+public class ConditionBasicLocalTest extends ConditionAbstractTest {\n     @Override\n     protected HazelcastInstance[] newInstances() {\n         return createHazelcastInstanceFactory(1).newInstances();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 325,
        "bugNodeLength": 297,
        "fixLineNum": 10,
        "fixNodeStartChar": 325,
        "fixNodeLength": 300,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ConditionBasicLocalTest extends ConditionBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ConditionBasicLocalTest extends ConditionAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } "
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "82a43727c308f2401468d4306c1ba2b5095f54b5",
        "fixCommitParentSHA1": "14ea69cdc1ad3c77b9c5ec088f6a69e7ec565447",
        "bugFilePath": "transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java",
        "fixPatch": "diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java b/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java\nindex 60fec62..bb67f8d 100644\n--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java\n+++ b/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixChannelUtilTest.java\n@@ -47,8 +47,7 @@\n     private static void testIsBufferCopyNeededForWrite(ByteBufAllocator alloc) {\n         ByteBuf byteBuf = alloc.directBuffer();\n         assertFalse(isBufferCopyNeededForWrite(byteBuf));\n-        assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));\n-\n+        assertFalse(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));\n         assertTrue(byteBuf.release());\n \n         byteBuf = alloc.heapBuffer();\n@@ -56,7 +55,7 @@\n         assertTrue(isBufferCopyNeededForWrite(byteBuf.asReadOnly()));\n         assertTrue(byteBuf.release());\n \n-        assertCompositeByteBufIsBufferCopyNeededForWrite(alloc, 2, 0, false);\n+        assertCompositeByteBufIsBufferCopyNeededForWrite(alloc, 2, 0, true);\n         assertCompositeByteBufIsBufferCopyNeededForWrite(alloc, IOV_MAX + 1, 0, true);\n         assertCompositeByteBufIsBufferCopyNeededForWrite(alloc, 0, 2, true);\n         assertCompositeByteBufIsBufferCopyNeededForWrite(alloc, 1, 1, true);\n",
        "projectName": "netty.netty",
        "bugLineNum": 59,
        "bugNodeStartChar": 2116,
        "bugNodeLength": 68,
        "fixLineNum": 59,
        "fixNodeStartChar": 2116,
        "fixNodeLength": 67,
        "sourceBeforeFix": "assertCompositeByteBufIsBufferCopyNeededForWrite(alloc,2,0,false)",
        "sourceAfterFix": "assertCompositeByteBufIsBufferCopyNeededForWrite(alloc,2,0,true)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "caf244292502931e38eb0c0be40f4a5f61e8aa0e",
        "fixCommitParentSHA1": "ed5c92ee06d60cba319841f43573872ec6583b52",
        "bugFilePath": "dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java",
        "fixPatch": "diff --git a/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java b/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\nindex 9dfef98..9d1a214 100644\n--- a/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\n+++ b/dropwizard-jdbi/src/test/java/io/dropwizard/jdbi/timestamps/DatabaseInTimeZone.java\n@@ -29,7 +29,7 @@\n         String vmArguments = \"-Duser.timezone=\" + timeZone.getID();\n \n         ProcessBuilder pb = new ProcessBuilder(java, vmArguments, \"-cp\", h2jar.getAbsolutePath(), Server.class.getName(),\n-                                               \"-tcp\", \"-baseDir\", tempDir.resolve(\"database-in-time-zone\").toString());\n+                                               \"-tcp\", \"-ifNotExists\", \"-baseDir\", tempDir.resolve(\"database-in-time-zone\").toString());\n         process = pb.start();\n     }\n \n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 31,
        "bugNodeStartChar": 907,
        "bugNodeLength": 213,
        "fixLineNum": 31,
        "fixNodeStartChar": 907,
        "fixNodeLength": 229,
        "sourceBeforeFix": "new ProcessBuilder(java,vmArguments,\"-cp\",h2jar.getAbsolutePath(),Server.class.getName(),\"-tcp\",\"-baseDir\",tempDir.resolve(\"database-in-time-zone\").toString())",
        "sourceAfterFix": "new ProcessBuilder(java,vmArguments,\"-cp\",h2jar.getAbsolutePath(),Server.class.getName(),\"-tcp\",\"-ifNotExists\",\"-baseDir\",tempDir.resolve(\"database-in-time-zone\").toString())"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "262f36ae8088206c992628ce7ba1d60e5527b31d",
        "fixCommitParentSHA1": "16c527131f9ddfcc1b0795822494c1fffc46b657",
        "bugFilePath": "FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java",
        "fixPatch": "diff --git a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\nindex b561725..85c330a 100644\n--- a/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n+++ b/FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java\n@@ -204,7 +204,7 @@\n             }\n             if (edgeColumn != null) {\n                 for (Edge e : graph.getEdgesAndMetaEdges()) {\n-                    Object obj = e.getEdgeData().getAttributes().getValue(nodeColumn.getIndex());\n+                    Object obj = e.getEdgeData().getAttributes().getValue(edgeColumn.getIndex());\n                     if (obj != null) {\n                         TimeInterval timeInterval = (TimeInterval) obj;\n                         min = Math.min(min, Double.isInfinite(timeInterval.getLow()) ? min : timeInterval.getLow());\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 207,
        "bugNodeStartChar": 8088,
        "bugNodeLength": 21,
        "fixLineNum": 207,
        "fixNodeStartChar": 8088,
        "fixNodeLength": 21,
        "sourceBeforeFix": "nodeColumn.getIndex()",
        "sourceAfterFix": "edgeColumn.getIndex()"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "2370a6d9f0029301ff4f30690ba67124e45f3bc5",
        "fixCommitParentSHA1": "df34e69887ccf95800f3f0c4e63787f102faa611",
        "bugFilePath": "ee/src/main/java/org/jboss/as/ee/component/ResourceInjectionAnnotationParsingProcessor.java",
        "fixPatch": "diff --git a/ee/src/main/java/org/jboss/as/ee/component/ResourceInjectionAnnotationParsingProcessor.java b/ee/src/main/java/org/jboss/as/ee/component/ResourceInjectionAnnotationParsingProcessor.java\nindex 497c4d2..170910d 100644\n--- a/ee/src/main/java/org/jboss/as/ee/component/ResourceInjectionAnnotationParsingProcessor.java\n+++ b/ee/src/main/java/org/jboss/as/ee/component/ResourceInjectionAnnotationParsingProcessor.java\n@@ -134,7 +134,7 @@\n         final String localContextName = isEmpty(name) ? methodInfo.declaringClass().name().toString() + \"/\" + contextNameSuffix : name;\n \n         final String injectionType = isEmpty(type) || type.equals(Object.class.getName()) ? methodInfo.args()[0].name().toString() : type;\n-        final InjectionTarget targetDescription = new MethodInjectionTarget(methodName, methodInfo.declaringClass().name().toString(), methodInfo.args()[0].name().toString());\n+        final InjectionTarget targetDescription = new MethodInjectionTarget(methodInfo.declaringClass().name().toString(), methodName, methodInfo.args()[0].name().toString());\n         process(classDescription, annotation, injectionType, localContextName, targetDescription);\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 137,
        "bugNodeStartChar": 8441,
        "bugNodeLength": 124,
        "fixLineNum": 137,
        "fixNodeStartChar": 8441,
        "fixNodeLength": 124,
        "sourceBeforeFix": "new MethodInjectionTarget(methodName,methodInfo.declaringClass().name().toString(),methodInfo.args()[0].name().toString())",
        "sourceAfterFix": "new MethodInjectionTarget(methodInfo.declaringClass().name().toString(),methodName,methodInfo.args()[0].name().toString())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "d18d75cdfc36f74fed0c8df772835f38d9604b13",
        "fixCommitParentSHA1": "e90d601ffa06233e2b2bcfe532e380fb1a4e9eb2",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\nindex ef16a9c..d166dc0 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java\n@@ -406,7 +406,7 @@\n \t/** @param id The ID of the animation to fetch (case sensitive).\r\n \t * @return The {@link Animation} with the specified id, or null if not available. */\r\n \tpublic Animation getAnimation (final String id) {\r\n-\t\treturn getAnimation(id, true);\r\n+\t\treturn getAnimation(id, false);\r\n \t}\r\n \r\n \t/** @param id The ID of the animation to fetch.\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 409,
        "bugNodeStartChar": 19106,
        "bugNodeLength": 22,
        "fixLineNum": 409,
        "fixNodeStartChar": 18698,
        "fixNodeLength": 23,
        "sourceBeforeFix": "getAnimation(id,true)",
        "sourceAfterFix": "getAnimation(id,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e3f3ae5f48a12ad28a8506302f1a440ed4e2fb17",
        "fixCommitParentSHA1": "61e0a8eba9e3d94ca2edc35796e8da663883bb58",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\nindex 5db21f8..bcf85e1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1.java\n@@ -62,7 +62,7 @@\n \t\t\ttry {\r\n \t\t\t\tin = new DataInputStream(new BufferedInputStream(new GZIPInputStream(pkmFile.read())));\r\n \t\t\t\tint fileSize = in.readInt();\r\n-\t\t\t\tcompressedData = BufferUtils.newByteBuffer(fileSize);\r\n+\t\t\t\tcompressedData = BufferUtils.newUnsafeByteBuffer(fileSize);\r\n \t\t\t\tint readBytes = 0;\r\n \t\t\t\twhile ((readBytes = in.read(buffer)) != -1) {\r\n \t\t\t\t\tcompressedData.put(buffer, 0, readBytes);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 65,
        "bugNodeStartChar": 2586,
        "bugNodeLength": 35,
        "fixLineNum": 65,
        "fixNodeStartChar": 2522,
        "fixNodeLength": 41,
        "sourceBeforeFix": "BufferUtils.newByteBuffer(fileSize)",
        "sourceAfterFix": "BufferUtils.newUnsafeByteBuffer(fileSize)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "b27f246f740829ca4a64beeb0b9405b06c49cff0",
        "fixCommitParentSHA1": "eab0c5d0bb41623c4037d4e8ecb84694a2c98fa7",
        "bugFilePath": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java",
        "fixPatch": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex 435021b..77a8b9f 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n@@ -1226,7 +1226,8 @@\n               String ufsUri = resolution.getUri().toString();\n               UnderFileSystem ufs = resolution.getUfs();\n               AlluxioURI parentUri = alluxioUriToDel.getParent();\n-              if (!ufsSyncChecker.isDirectoryInSync(parentUri)) {\n+              if (alluxioUriToDel.equals(inodePath.getUri())\n+                  || !ufsSyncChecker.isDirectoryInSync(parentUri)) {\n                 // Parent will not recursively delete, so delete this inode individually\n                 if (delInode.isFile()) {\n                   if (!ufs.deleteFile(ufsUri)) {\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 1229,
        "bugNodeStartChar": 54473,
        "bugNodeLength": 44,
        "fixLineNum": 1229,
        "fixNodeStartChar": 54473,
        "fixNodeLength": 108,
        "sourceBeforeFix": "!ufsSyncChecker.isDirectoryInSync(parentUri)",
        "sourceAfterFix": "alluxioUriToDel.equals(inodePath.getUri()) || !ufsSyncChecker.isDirectoryInSync(parentUri)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5530d4c27d508c513b68af67aadede84b4cfa102",
        "fixCommitParentSHA1": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java\nindex 1c35e12..cd108a1 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java\n@@ -40,14 +40,14 @@\n \n     @Test\n     public void testLoad() throws CheckstyleException {\n-        final PkgControl root =\n+        final ImportControl root =\n                 ImportControlLoader.load(new File(getPath(\"import-control_complete.xml\")).toURI());\n         assertNotNull(root);\n     }\n \n     @Test(expected = CheckstyleException.class)\n     public void testWrongFormatUri() throws Exception {\n-        final PkgControl root =\n+        final ImportControl root =\n                 ImportControlLoader.load(new URI(\"aaa://\"\n                     + getPath(\"import-control_complete.xml\")));\n         assertNotNull(root);\n@@ -55,7 +55,7 @@\n \n     @Test\n     public void testExtraElementInConfig() throws Exception {\n-        final PkgControl root =\n+        final ImportControl root =\n                 ImportControlLoader.load(\n                     new File(getPath(\"import-control_WithNewElement.xml\")).toURI());\n         assertNotNull(root);\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 50,
        "bugNodeStartChar": 2001,
        "bugNodeLength": 145,
        "fixLineNum": 50,
        "fixNodeStartChar": 2001,
        "fixNodeLength": 148,
        "sourceBeforeFix": "final PkgControl root=ImportControlLoader.load(new URI(\"aaa://\" + getPath(\"import-control_complete.xml\"))); ",
        "sourceAfterFix": "final ImportControl root=ImportControlLoader.load(new URI(\"aaa://\" + getPath(\"import-control_complete.xml\"))); "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOneStatementPerLineTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOneStatementPerLineTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOneStatementPerLineTest.java\nindex d239767..501dbc1 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOneStatementPerLineTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOneStatementPerLineTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck;\n \n-public class XpathRegressionOneStatementPerLineTest extends AbstractXpathTestSupport {\n+public class XpathRegressionOneStatementPerLineTest extends XpathTestSupport {\n \n     @Test\n     public void testOne() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1321,
        "bugNodeLength": 2007,
        "fixLineNum": 31,
        "fixNodeStartChar": 1321,
        "fixNodeLength": 1999,
        "sourceBeforeFix": "public class XpathRegressionOneStatementPerLineTest extends AbstractXpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=OneStatementPerLineCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOneStatementPerLineOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);     final String[] expectedViolation={\"4:17: \" + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineOne']/OBJBLOCK\" + \"/VARIABLE_DEF[@text='j']/SEMI\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=OneStatementPerLineCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOneStatementPerLineTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);     final String[] expectedViolation={\"9:39: \" + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo5']/SLIST/LITERAL_FOR/SLIST/SEMI\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionOneStatementPerLineTest extends XpathTestSupport {   @Test public void testOne() throws Exception {     final String checkName=OneStatementPerLineCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOneStatementPerLineOne.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);     final String[] expectedViolation={\"4:17: \" + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineOne']/OBJBLOCK\" + \"/VARIABLE_DEF[@text='j']/SEMI\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   }   @Test public void testTwo() throws Exception {     final String checkName=OneStatementPerLineCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionOneStatementPerLineTwo.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(OneStatementPerLineCheck.class);     final String[] expectedViolation={\"9:39: \" + getCheckMessage(OneStatementPerLineCheck.class,OneStatementPerLineCheck.MSG_KEY)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionOneStatementPerLineTwo']/OBJBLOCK\" + \"/METHOD_DEF[@text='foo5']/SLIST/LITERAL_FOR/SLIST/SEMI\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "067ed0a9c50964ebaca5b413684cc56339c5c23f",
        "fixCommitParentSHA1": "1b7312e99b3a273b57752132dadcdb8efdf61b51",
        "bugFilePath": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java",
        "fixPatch": "diff --git a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\nindex 4c5df33..35630e2 100644\n--- a/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n+++ b/src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java\n@@ -105,9 +105,9 @@\n         @Test\n         public void duration() throws InterruptedException {\n             Thread.sleep(300L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 300d, 100d);\n+            assertEquals(300d, fStopwatch.runtime(MILLISECONDS), 100d);\n             Thread.sleep(500L);\n-            assertEquals(fStopwatch.runtime(MILLISECONDS), 800d, 250d);\n+            assertEquals(800d, fStopwatch.runtime(MILLISECONDS), 250d);\n         }\n     }\n \n",
        "projectName": "junit-team.junit",
        "bugLineNum": 108,
        "bugNodeStartChar": 3320,
        "bugNodeLength": 58,
        "fixLineNum": 108,
        "fixNodeStartChar": 3320,
        "fixNodeLength": 58,
        "sourceBeforeFix": "assertEquals(fStopwatch.runtime(MILLISECONDS),300d,100d)",
        "sourceAfterFix": "assertEquals(300d,fStopwatch.runtime(MILLISECONDS),100d)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1e3c0da4bdd228f518ad7297096fdc26c9d53ead",
        "fixCommitParentSHA1": "6c7a5c5077d624e85f6db4d870735888f479cc41",
        "bugFilePath": "spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java",
        "fixPatch": "diff --git a/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java\nindex b9582f6..52baf22 100644\n--- a/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java\n+++ b/spring-boot/src/main/java/org/springframework/boot/bind/PropertiesConfigurationFactory.java\n@@ -53,9 +53,9 @@\n public class PropertiesConfigurationFactory<T> implements FactoryBean<T>,\n \t\tMessageSourceAware, InitializingBean {\n \n-\tprivate static final char[] EXACT_DELIMETERS = { '_', '.', '[' };\n+\tprivate static final char[] EXACT_DELIMITERS = { '_', '.', '[' };\n \n-\tprivate static final char[] TARGET_NAME_DELIMETERS = { '_', '.' };\n+\tprivate static final char[] TARGET_NAME_DELIMITERS = { '_', '.' };\n \n \tprivate final Log logger = LogFactory.getLog(getClass());\n \n@@ -308,13 +308,13 @@\n \t\tif (this.ignoreUnknownFields && !isMapTarget()) {\n \t\t\t// Since unknown fields are ignored we can filter them out early to save\n \t\t\t// unnecessary calls to the PropertySource.\n-\t\t\treturn new DefaultPropertyNamePatternsMatcher(EXACT_DELIMETERS, true, names);\n+\t\t\treturn new DefaultPropertyNamePatternsMatcher(EXACT_DELIMITERS, true, names);\n \t\t}\n \t\tif (this.targetName != null) {\n \t\t\t// We can filter properties to those starting with the target name, but\n \t\t\t// we can't do a complete filter since we need to trigger the\n \t\t\t// unknown fields check\n-\t\t\treturn new DefaultPropertyNamePatternsMatcher(TARGET_NAME_DELIMETERS,\n+\t\t\treturn new DefaultPropertyNamePatternsMatcher(TARGET_NAME_DELIMITERS,\n \t\t\t\t\tthis.targetName);\n \t\t}\n \t\t// Not ideal, we basically can't filter anything\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 311,
        "bugNodeStartChar": 9600,
        "bugNodeLength": 69,
        "fixLineNum": 311,
        "fixNodeStartChar": 9600,
        "fixNodeLength": 69,
        "sourceBeforeFix": "new DefaultPropertyNamePatternsMatcher(EXACT_DELIMETERS,true,names)",
        "sourceAfterFix": "new DefaultPropertyNamePatternsMatcher(EXACT_DELIMITERS,true,names)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "addd22c9cfa473eecf99779227f1952d52ad7af5",
        "fixCommitParentSHA1": "68b6c7755ed493d96b08dc1bccb1c0246cc11db9",
        "bugFilePath": "core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java",
        "fixPatch": "diff --git a/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java b/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\nindex 3782da2..22a0dce 100644\n--- a/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\n+++ b/core/client-internal/src/test/java/alluxio/client/file/BaseFileSystemTest.java\n@@ -322,9 +322,9 @@\n     AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n     AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n     MountOptions mountOptions = MountOptions.defaults();\n-    Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.doNothing().when(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions);\n     mFileSystem.mount(alluxioPath, ufsPath, mountOptions);\n-    Mockito.verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.verify(mFileSystemMasterClient).mount(alluxioPath, ufsPath, mountOptions);\n   }\n \n   /**\n@@ -337,7 +337,8 @@\n     AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n     AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n     MountOptions mountOptions = MountOptions.defaults();\n-    Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient).mount(alluxioPath, ufsPath);\n+    Mockito.doThrow(EXCEPTION).when(mFileSystemMasterClient)\n+        .mount(alluxioPath, ufsPath, mountOptions);\n     try {\n       mFileSystem.mount(alluxioPath, ufsPath, mountOptions);\n       Assert.fail(SHOULD_HAVE_PROPAGATED_MESSAGE);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 327,
        "bugNodeStartChar": 12171,
        "bugNodeLength": 67,
        "fixLineNum": 327,
        "fixNodeStartChar": 12171,
        "fixNodeLength": 81,
        "sourceBeforeFix": "Mockito.verify(mFileSystemMasterClient).mount(alluxioPath,ufsPath)",
        "sourceAfterFix": "Mockito.verify(mFileSystemMasterClient).mount(alluxioPath,ufsPath,mountOptions)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "af18c0227b3fe793f2c9072ec593ff32693f821c",
        "fixCommitParentSHA1": "2f12402577207fdce0197ee8af966b01ff23fa0e",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\nindex 409d22f..c0dd292 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/analyzer/StatementAnalyzer.java\n@@ -966,7 +966,7 @@\n                         throw new SemanticException(TYPE_MISMATCH,\n                                 node,\n                                 \"column %d in %s query has incompatible types: %s, %s\",\n-                                i, outputFieldTypes[i].getDisplayName(), setOperationName, descFieldType.getDisplayName());\n+                                i, setOperationName, outputFieldTypes[i].getDisplayName(), descFieldType.getDisplayName());\n                     }\n                     outputFieldTypes[i] = commonSuperType.get();\n                 }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 966,
        "bugNodeStartChar": 46858,
        "bugNodeLength": 285,
        "fixLineNum": 966,
        "fixNodeStartChar": 46858,
        "fixNodeLength": 285,
        "sourceBeforeFix": "new SemanticException(TYPE_MISMATCH,node,\"column %d in %s query has incompatible types: %s, %s\",i,outputFieldTypes[i].getDisplayName(),setOperationName,descFieldType.getDisplayName())",
        "sourceAfterFix": "new SemanticException(TYPE_MISMATCH,node,\"column %d in %s query has incompatible types: %s, %s\",i,setOperationName,outputFieldTypes[i].getDisplayName(),descFieldType.getDisplayName())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d46bb08334d56e19ca92e12e74642b5fa4e8ba74",
        "fixCommitParentSHA1": "6bebc319bfb7375d78b50974814f1bb73f85756a",
        "bugFilePath": "examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java",
        "fixPatch": "diff --git a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\nindex df4ae65..0ac4ec6 100644\n--- a/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\n+++ b/examples/camel-example-loan-broker/src/main/java/org/apache/camel/loanbroker/queue/version/LoanBroker.java\n@@ -100,7 +100,7 @@\n             // Set the aggregation strategy for aggregating the out message            \n             .multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true))\n                 // Send out the request the below three different banks parallelly\n-                .parallelProcessing(true).to(\"jms:queue2:bank1\", \"jms:queue2:bank2\", \"jms:queue2:bank3\");\n+                .setParallelProcessing(true).to(\"jms:queue2:bank1\", \"jms:queue2:bank2\", \"jms:queue2:bank3\");\n         \n         // Each bank processor will process the message and put the response message back\n         from(\"jms:queue2:bank1\").process(new Bank(\"bank1\"));\n",
        "projectName": "apache.camel",
        "bugLineNum": 99,
        "bugNodeStartChar": 4077,
        "bugNodeLength": 377,
        "fixLineNum": 99,
        "fixNodeStartChar": 4077,
        "fixNodeLength": 380,
        "sourceBeforeFix": "from(\"jms:queue2:parallelLoanRequestQueue\").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)",
        "sourceAfterFix": "from(\"jms:queue2:parallelLoanRequestQueue\").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8e01c1c07300c0fe2ecc76003ea7a01d5d5f47a3",
        "fixCommitParentSHA1": "aa3f4bfb3c2dd9f87d50a763cd1ea41187d162a3",
        "bugFilePath": "src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\nindex 73429dd..2f021cc 100644\n--- a/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n+++ b/src/main/java/org/apache/ibatis/reflection/ExceptionUtil.java\n@@ -9,9 +9,9 @@\n     Throwable unwrapped = wrapped;\r\n     while (true) {\r\n       if (unwrapped instanceof InvocationTargetException) {\r\n-        unwrapped = ((InvocationTargetException) wrapped).getTargetException();\r\n+        unwrapped = ((InvocationTargetException) unwrapped).getTargetException();\r\n       } else if (unwrapped instanceof UndeclaredThrowableException) {\r\n-        unwrapped = ((UndeclaredThrowableException) wrapped).getUndeclaredThrowable();\r\n+        unwrapped = ((UndeclaredThrowableException) unwrapped).getUndeclaredThrowable();\r\n       } else {\r\n         return unwrapped;\r\n       }\r\n",
        "projectName": "mybatis.mybatis-3",
        "bugLineNum": 12,
        "bugNodeStartChar": 386,
        "bugNodeLength": 35,
        "fixLineNum": 12,
        "fixNodeStartChar": 375,
        "fixNodeLength": 37,
        "sourceBeforeFix": "(InvocationTargetException)wrapped",
        "sourceAfterFix": "(InvocationTargetException)unwrapped"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "cb6f6e26c12839e59243f25bfb142ec5e5b71135",
        "fixCommitParentSHA1": "f559da2880b0d7ada18167b583e3b1173e645e90",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTimeoutTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTimeoutTest.java b/camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTimeoutTest.java\nindex 5e8b3b4..375f6c9 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTimeoutTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/BeanRecipientListTimeoutTest.java\n@@ -32,8 +32,8 @@\n \n     public void testBeanRecipientListParallelTimeout() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        // A will timeout so we only get B and C\n-        mock.expectedBodiesReceived(\"BC\");\n+        // A will timeout so we only get B and/or C\n+        mock.message(0).body().not(body().contains(\"A\"));\n \n         template.sendBody(\"direct:start\", \"Hello\");\n \n@@ -53,7 +53,7 @@\n             public void configure() {\n                 from(\"direct:start\").beanRef(\"myBean\", \"route\").to(\"mock:result\");\n \n-                from(\"direct:a\").delay(3000).setBody(constant(\"A\"));\n+                from(\"direct:a\").delay(2000).setBody(constant(\"A\"));\n \n                 from(\"direct:b\").setBody(constant(\"B\"));\n \n@@ -64,7 +64,7 @@\n \n     public static class MyBean {\n \n-        @org.apache.camel.RecipientList(strategyRef = \"myStrategy\", parallelProcessing = true, timeout = 2000)\n+        @org.apache.camel.RecipientList(strategyRef = \"myStrategy\", parallelProcessing = true, timeout = 1000)\n         public String[] route(String body) {\n             return new String[] {\"direct:a\", \"direct:b\", \"direct:c\"};\n         }\n@@ -73,7 +73,7 @@\n     private class MyAggregationStrategy implements TimeoutAwareAggregationStrategy {\n \n         public void timeout(Exchange oldExchange, int index, int total, long timeout) {\n-            assertEquals(2000, timeout);\n+            assertEquals(1000, timeout);\n             assertEquals(3, total);\n             assertEquals(0, index);\n             assertNotNull(oldExchange);\n",
        "projectName": "apache.camel",
        "bugLineNum": 67,
        "bugNodeStartChar": 2430,
        "bugNodeLength": 14,
        "fixLineNum": 67,
        "fixNodeStartChar": 2430,
        "fixNodeLength": 14,
        "sourceBeforeFix": "timeout=2000",
        "sourceAfterFix": "timeout=1000"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\nindex 4ccc105..f5c07a1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/MapTemplate.java\n@@ -83,109 +83,109 @@\n     @EncodeMethod(id = 19)\n     void lock(String name, Data key, long threadId, long ttl);\n \n-    @EncodeMethod(id = 21)\n+    @EncodeMethod(id = 20)\n     void tryLock(String name, Data key, long threadId, long timeout);\n \n-    @EncodeMethod(id = 23)\n+    @EncodeMethod(id = 21)\n     void isLocked(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 24)\n+    @EncodeMethod(id = 22)\n     void unlock(String name, Data key, long threadId, boolean force);\n \n-    @EncodeMethod(id = 25)\n+    @EncodeMethod(id = 23)\n     void addInterceptor(String name, Data interceptor);\n \n-    @EncodeMethod(id = 26)\n+    @EncodeMethod(id = 24)\n     void removeInterceptor(String name, String id);\n \n-    @EncodeMethod(id = 27)\n+    @EncodeMethod(id = 25)\n     void addEntryListenerToKeyWithPredicate(String name, Data key, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 28)\n+    @EncodeMethod(id = 26)\n     void addEntryListenerWithPredicate(String name, Data predicate, boolean includeValue);\n \n-    @EncodeMethod(id = 29)\n+    @EncodeMethod(id = 27)\n     void addEntryListenerToKey(String name, Data key, boolean includeValue);\n \n-    @EncodeMethod(id = 30)\n+    @EncodeMethod(id = 28)\n     void addEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 31)\n+    @EncodeMethod(id = 29)\n     void addNearCacheEntryListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 32)\n+    @EncodeMethod(id = 30)\n     void removeEntryListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 33)\n+    @EncodeMethod(id = 31)\n     void addPartitionLostListener(String name);\n \n-    @EncodeMethod(id = 34)\n+    @EncodeMethod(id = 32)\n     void removePartitionLostListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 35)\n+    @EncodeMethod(id = 33)\n     void getEntryView(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 36)\n+    @EncodeMethod(id = 34)\n     void evict(String name, Data key, long threadId);\n \n-    @EncodeMethod(id = 37)\n+    @EncodeMethod(id = 35)\n     void evictAll(String name);\n \n-    @EncodeMethod(id = 38)\n+    @EncodeMethod(id = 36)\n     void loadAll(String name, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 39)\n+    @EncodeMethod(id = 37)\n     void loadGivenKeys(String name, List<Data> keys, boolean replaceExistingValues);\n \n-    @EncodeMethod(id = 40)\n+    @EncodeMethod(id = 38)\n     void keySet(String name);\n \n-    @EncodeMethod(id = 41)\n+    @EncodeMethod(id = 39)\n     void getAll(String name, Set<Data> keys);\n \n-    @EncodeMethod(id = 42)\n+    @EncodeMethod(id = 40)\n     void values(String name);\n \n-    @EncodeMethod(id = 43)\n+    @EncodeMethod(id = 41)\n     void entrySet(String name);\n \n-    @EncodeMethod(id = 44)\n+    @EncodeMethod(id = 42)\n     void keySetWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 45)\n+    @EncodeMethod(id = 43)\n     void valuesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 46)\n+    @EncodeMethod(id = 44)\n     void entriesWithPredicate(String name, Data predicate);\n \n-    @EncodeMethod(id = 47)\n+    @EncodeMethod(id = 45)\n     void addIndex(String name, String attribute, boolean ordered);\n \n-    @EncodeMethod(id = 48)\n+    @EncodeMethod(id = 46)\n     void size(String name);\n \n-    @EncodeMethod(id = 49)\n+    @EncodeMethod(id = 47)\n     void isEmpty(String name);\n \n-    @EncodeMethod(id = 50)\n+    @EncodeMethod(id = 48)\n     void putAll(String name, List<Data> keys, List<Data> values);\n \n-    @EncodeMethod(id = 51)\n+    @EncodeMethod(id = 49)\n     void clear(String name);\n \n-    @EncodeMethod(id = 52)\n+    @EncodeMethod(id = 50)\n     void executeOnKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 53)\n+    @EncodeMethod(id = 51)\n     void submitToKey(String name, Data entryProcessor, Data key);\n \n-    @EncodeMethod(id = 54)\n+    @EncodeMethod(id = 52)\n     void executeOnAllKeys(String name, Data entryProcessor);\n \n-    @EncodeMethod(id = 55)\n+    @EncodeMethod(id = 53)\n     void executeWithPredicate(String name, Data entryProcessor, Data predicate);\n \n-    @EncodeMethod(id = 56)\n+    @EncodeMethod(id = 54)\n     void executeOnKeys(String name, Data entryProcessor, Set<Data> keys);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 104,
        "bugNodeStartChar": 3361,
        "bugNodeLength": 7,
        "fixLineNum": 104,
        "fixNodeStartChar": 3361,
        "fixNodeLength": 7,
        "sourceBeforeFix": "id=28",
        "sourceAfterFix": "id=26"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "036c682e1ad7ebb1de1639c5eb5337306a20bbb1",
        "fixCommitParentSHA1": "ada499af1f1dd40395f06873488a4e06adfe5554",
        "bugFilePath": "bundles/binding/org.openhab.binding.tinkerforge/src/main/java/org/openhab/binding/tinkerforge/internal/TinkerforgeBinding.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.tinkerforge/src/main/java/org/openhab/binding/tinkerforge/internal/TinkerforgeBinding.java b/bundles/binding/org.openhab.binding.tinkerforge/src/main/java/org/openhab/binding/tinkerforge/internal/TinkerforgeBinding.java\nindex ebc6d24..fae1592 100644\n--- a/bundles/binding/org.openhab.binding.tinkerforge/src/main/java/org/openhab/binding/tinkerforge/internal/TinkerforgeBinding.java\n+++ b/bundles/binding/org.openhab.binding.tinkerforge/src/main/java/org/openhab/binding/tinkerforge/internal/TinkerforgeBinding.java\n@@ -606,7 +606,7 @@\n         } else if (itemType.isAssignableFrom(SwitchItem.class)) {\n           value = sensorValue == HighLowValue.HIGH ? OnOffType.ON : OnOffType.OFF;\n         } else {\n-          logger.error(\"{} unsupported item type {} for item {}\", LoggerConstants.TFMODELUPDATE,\n+          logger.trace(\"{} unsupported item type {} for item {}\", LoggerConstants.TFMODELUPDATE,\n               provider.getItem(itemName), itemName);\n         }\n       } else if (sensorValue instanceof OnOffValue) {\n@@ -619,7 +619,7 @@\n         } else if (itemType.isAssignableFrom(SwitchItem.class)) {\n           value = sensorValue == OnOffValue.ON ? OnOffType.ON : OnOffType.OFF;\n         } else {\n-          logger.error(\"{} unsupported item type {} for item {}\", LoggerConstants.TFMODELUPDATE,\n+          logger.trace(\"{} unsupported item type {} for item {}\", LoggerConstants.TFMODELUPDATE,\n               provider.getItem(itemName), itemName);\n         }\n       } else if (sensorValue == UnDefValue.UNDEF || sensorValue == null) {\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 609,
        "bugNodeStartChar": 26839,
        "bugNodeLength": 138,
        "fixLineNum": 609,
        "fixNodeStartChar": 26839,
        "fixNodeLength": 138,
        "sourceBeforeFix": "logger.error(\"{} unsupported item type {} for item {}\",LoggerConstants.TFMODELUPDATE,provider.getItem(itemName),itemName)",
        "sourceAfterFix": "logger.trace(\"{} unsupported item type {} for item {}\",LoggerConstants.TFMODELUPDATE,provider.getItem(itemName),itemName)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "2296150cacd0bc1b8dec9539144ce00169d26bb6",
        "fixCommitParentSHA1": "e5e04d116bbe00f8b1f5bdceb5238e035bdff356",
        "bugFilePath": "controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java",
        "fixPatch": "diff --git a/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java b/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\nindex f44b08d..6345e8a 100644\n--- a/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\n+++ b/controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java\n@@ -124,7 +124,7 @@\n     }\n \n     public String[] getRequires() {\n-        return alternatives;\n+        return requires;\n     }\n \n     public EnumSet<AttributeAccess.Flag> getFlags() {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 127,
        "bugNodeStartChar": 4498,
        "bugNodeLength": 20,
        "fixLineNum": 127,
        "fixNodeStartChar": 4498,
        "fixNodeLength": 16,
        "sourceBeforeFix": "return alternatives; ",
        "sourceAfterFix": "return requires; "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "71457e50581dd7f16b18cf8faaec3f0aa21cd880",
        "fixCommitParentSHA1": "6e5badc4ef35c1391775b1f542d53ef030a9df16",
        "bugFilePath": "itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java",
        "fixPatch": "diff --git a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\nindex 859a456..57afc37 100644\n--- a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n+++ b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n@@ -313,7 +313,7 @@\n     assertNotNull(compressedProto);\n \n     // Check size\n-    assertTrue(\"\" + compressedProto.length, compressedProto.length < 390200);\n+    assertTrue(\"\" + compressedProto.length, compressedProto.length < 391000);\n     assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 2100000);\n   }\n \n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 316,
        "bugNodeStartChar": 44947,
        "bugNodeLength": 31,
        "fixLineNum": 316,
        "fixNodeStartChar": 44947,
        "fixNodeLength": 31,
        "sourceBeforeFix": "compressedProto.length < 390200",
        "sourceAfterFix": "compressedProto.length < 391000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0365cf723f8073528dc2c379b2c6f8fb9e6669d3",
        "fixCommitParentSHA1": "b9efb8bf887ddc2a43d9fa2c90c7462cca9a24bb",
        "bugFilePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java",
        "fixPatch": "diff --git a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java\nindex 16fe0f6..6a45924 100644\n--- a/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java\n+++ b/okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java\n@@ -2506,7 +2506,7 @@\n \n   private void reusedConnectionFailsWithPost(TransferKind transferKind, int requestSize)\n       throws Exception {\n-    server.enqueue(new MockResponse().setBody(\"A\").setSocketPolicy(SHUTDOWN_INPUT_AT_END));\n+    server.enqueue(new MockResponse().setBody(\"A\").setSocketPolicy(DISCONNECT_AT_END));\n     server.enqueue(new MockResponse().setBody(\"B\"));\n     server.enqueue(new MockResponse().setBody(\"C\"));\n     server.play();\n",
        "projectName": "square.okhttp",
        "bugLineNum": 2509,
        "bugNodeStartChar": 99048,
        "bugNodeLength": 70,
        "fixLineNum": 2509,
        "fixNodeStartChar": 99048,
        "fixNodeLength": 66,
        "sourceBeforeFix": "new MockResponse().setBody(\"A\").setSocketPolicy(SHUTDOWN_INPUT_AT_END)",
        "sourceAfterFix": "new MockResponse().setBody(\"A\").setSocketPolicy(DISCONNECT_AT_END)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "789f4be50f7ca95f2fb824bdffd170c1731c681a",
        "fixCommitParentSHA1": "4028e2b33b7f424e82fe6756c500d7d01a9ce77b",
        "bugFilePath": "tooling/apt/src/main/java/org/apache/camel/tools/apt/EndpointAnnotationProcessor.java",
        "fixPatch": "diff --git a/tooling/apt/src/main/java/org/apache/camel/tools/apt/EndpointAnnotationProcessor.java b/tooling/apt/src/main/java/org/apache/camel/tools/apt/EndpointAnnotationProcessor.java\nindex cf9c3fd..280361b 100644\n--- a/tooling/apt/src/main/java/org/apache/camel/tools/apt/EndpointAnnotationProcessor.java\n+++ b/tooling/apt/src/main/java/org/apache/camel/tools/apt/EndpointAnnotationProcessor.java\n@@ -817,7 +817,7 @@\n                 return false;\n             }\n \n-            EndpointOption that = (EndpointOption) o;\n+            ComponentOption that = (ComponentOption) o;\n \n             if (!name.equals(that.name)) {\n                 return false;\n",
        "projectName": "apache.camel",
        "bugLineNum": 820,
        "bugNodeStartChar": 36181,
        "bugNodeLength": 41,
        "fixLineNum": 820,
        "fixNodeStartChar": 36181,
        "fixNodeLength": 43,
        "sourceBeforeFix": "EndpointOption that=(EndpointOption)o; ",
        "sourceAfterFix": "ComponentOption that=(ComponentOption)o; "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "6ad626ae51a157306ddf4165f13ff5eb5b4d5e8b",
        "fixCommitParentSHA1": "45397fe974e1390cd39a34fc2eb216f3771ddf06",
        "bugFilePath": "flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/ClientTest.java",
        "fixPatch": "diff --git a/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/ClientTest.java b/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/ClientTest.java\nindex 8638efa..6aa4710 100644\n--- a/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/ClientTest.java\n+++ b/flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/ClientTest.java\n@@ -111,7 +111,8 @@\n \t@After\n \tpublic void tearDown() throws Exception {\n \t\tif (nioGroup != null) {\n-\t\t\tnioGroup.shutdownGracefully();\n+\t\t\t// note: no \"quiet period\" to not trigger Netty#4357\n+\t\t\tnioGroup.shutdownGracefully(0, 10, TimeUnit.SECONDS);\n \t\t}\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 114,
        "bugNodeStartChar": 4925,
        "bugNodeLength": 29,
        "fixLineNum": 115,
        "fixNodeStartChar": 4981,
        "fixNodeLength": 52,
        "sourceBeforeFix": "nioGroup.shutdownGracefully()",
        "sourceAfterFix": "nioGroup.shutdownGracefully(0,10,TimeUnit.SECONDS)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "a3feea0fe1a2ed6450ef1de7a1bccd5f73c9062f",
        "fixCommitParentSHA1": "3a486382133bd31abbcf231a3acb760338cd8e1f",
        "bugFilePath": "library/src/com/haarman/listviewanimations/itemmanipulation/contextualundo/ContextualUndoListViewTouchListener.java",
        "fixPatch": "diff --git a/library/src/com/haarman/listviewanimations/itemmanipulation/contextualundo/ContextualUndoListViewTouchListener.java b/library/src/com/haarman/listviewanimations/itemmanipulation/contextualundo/ContextualUndoListViewTouchListener.java\nindex e0ee08c..1f7b0a6 100644\n--- a/library/src/com/haarman/listviewanimations/itemmanipulation/contextualundo/ContextualUndoListViewTouchListener.java\n+++ b/library/src/com/haarman/listviewanimations/itemmanipulation/contextualundo/ContextualUndoListViewTouchListener.java\n@@ -124,7 +124,7 @@\n                     }\n                 }\n \n-                if (mDownView != null) {\n+                if (mDownView != null && mDownView instanceof ContextualUndoView) {\n                     mDownX = motionEvent.getRawX();\n                     mDownPosition = mListView.getPositionForView(mDownView);\n \n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 127,
        "bugNodeStartChar": 4550,
        "bugNodeLength": 17,
        "fixLineNum": 127,
        "fixNodeStartChar": 4550,
        "fixNodeLength": 60,
        "sourceBeforeFix": "mDownView != null",
        "sourceAfterFix": "mDownView != null && mDownView instanceof ContextualUndoView"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6f82ff5322cbe25eb6625733554053069415bebe",
        "fixCommitParentSHA1": "46666da441dee53fbc3b633d60a8e8cf10579f95",
        "bugFilePath": "components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java",
        "fixPatch": "diff --git a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\nindex ee4a082..14ee7b9 100644\n--- a/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\n+++ b/components/camel-cxf/src/main/java/org/apache/camel/component/cxf/spring/CxfEndpointBeanDefinitionParser.java\n@@ -40,7 +40,7 @@\n \n     @Override\n     protected Class getBeanClass(Element arg0) {\n-        return CxfEndpointBean.class;\n+        return CxfSpringEndpointBean.class;\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 43,
        "bugNodeStartChar": 1860,
        "bugNodeLength": 21,
        "fixLineNum": 43,
        "fixNodeStartChar": 1860,
        "fixNodeLength": 27,
        "sourceBeforeFix": "CxfEndpointBean.class",
        "sourceAfterFix": "CxfSpringEndpointBean.class"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f1b22619682351923e1d34481e6efe499f41745f",
        "fixCommitParentSHA1": "79e8351d357383e3b1f85f029883970fac601c46",
        "bugFilePath": "android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java",
        "fixPatch": "diff --git a/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java b/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\nindex 30f6477..dff58de 100644\n--- a/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n+++ b/android/guava-tests/test/com/google/common/util/concurrent/SequentialExecutorTest.java\n@@ -209,8 +209,9 @@\n     fakePool.runAll();\n \n     // Check that the interruption of a SequentialExecutor's task is restored to the thread once\n-    // it is yielded.\n-    assertThat(Thread.currentThread().isInterrupted()).isTrue();\n+    // it is yielded. Clear the bit while checking so that the test doesn't hose JUnit or some other\n+    // test case.\n+    assertThat(Thread.currentThread().interrupted()).isTrue();\n   }\n \n   public void testInterrupt_doesNotStopExecution() {\n",
        "projectName": "google.guava",
        "bugLineNum": 213,
        "bugNodeStartChar": 5997,
        "bugNodeLength": 38,
        "fixLineNum": 214,
        "fixNodeStartChar": 6094,
        "fixNodeLength": 36,
        "sourceBeforeFix": "Thread.currentThread().isInterrupted()",
        "sourceAfterFix": "Thread.currentThread().interrupted()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 757,
        "bugNodeStartChar": 25683,
        "bugNodeLength": 83,
        "fixLineNum": 757,
        "fixNodeStartChar": 24927,
        "fixNodeLength": 85,
        "sourceBeforeFix": "GL20.glUniformMatrix3(location,transpose,toFloatBuffer(value,offset,count * 9))",
        "sourceAfterFix": "GL20.glUniformMatrix3fv(location,transpose,toFloatBuffer(value,offset,count * 9))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7c7309b5fb6276e4098921915a8e0c39a5cd3450",
        "fixCommitParentSHA1": "6df8fb1b891601f1374e599a395d5ad632fcfbe7",
        "bugFilePath": "core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java",
        "fixPatch": "diff --git a/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java b/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\nindex 9ede102..f8ceea1 100644\n--- a/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\n+++ b/core/client/src/test/java/alluxio/client/block/BlockStoreContextTest.java\n@@ -35,8 +35,8 @@\n  * Tests {@link BlockStoreContext}.\n  */\n @RunWith(PowerMockRunner.class)\n-@PrepareForTest({BlockMasterClient.class, BlockMasterClientPool.class, BlockStoreContext.class,\n-    DefaultBlockWorkerClient.class, BlockWorkerClientPool.class})\n+@PrepareForTest({RetryHandlingBlockMasterClient.class, BlockMasterClientPool.class,\n+    BlockStoreContext.class, DefaultBlockWorkerClient.class, BlockWorkerClientPool.class})\n public final class BlockStoreContextTest {\n \n   /**\n@@ -110,11 +110,12 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"localhost\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     // Use mocks for the block worker client to prevent it from trying to invoke the session\n@@ -175,11 +176,12 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"localhost\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     Assert.assertTrue(BlockStoreContext.INSTANCE.hasLocalWorker());\n@@ -193,12 +195,13 @@\n     // Use mocks for the master client to make sure the pool of local block worker clients is\n     // initialized properly.\n     Whitebox.setInternalState(NetworkAddressUtils.class, \"sLocalHost\", \"localhost\");\n-    BlockMasterClient masterClientMock = PowerMockito.mock(BlockMasterClient.class);\n+    RetryHandlingBlockMasterClient masterClientMock =\n+        PowerMockito.mock(RetryHandlingBlockMasterClient.class);\n     List<WorkerInfo> list = new ArrayList<>();\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"foo\")));\n     list.add(new WorkerInfo().setAddress(new WorkerNetAddress().setHost(\"bar\")));\n     PowerMockito.doReturn(list).when(masterClientMock).getWorkerInfoList();\n-    PowerMockito.whenNew(BlockMasterClient.class).withArguments(Mockito.any())\n+    PowerMockito.whenNew(RetryHandlingBlockMasterClient.class).withArguments(Mockito.any())\n         .thenReturn(masterClientMock);\n \n     Assert.assertFalse(BlockStoreContext.INSTANCE.hasLocalWorker());\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 113,
        "bugNodeStartChar": 4313,
        "bugNodeLength": 80,
        "fixLineNum": 113,
        "fixNodeStartChar": 4313,
        "fixNodeLength": 114,
        "sourceBeforeFix": "BlockMasterClient masterClientMock=PowerMockito.mock(BlockMasterClient.class); ",
        "sourceAfterFix": "RetryHandlingBlockMasterClient masterClientMock=PowerMockito.mock(RetryHandlingBlockMasterClient.class); "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "cb6f6e26c12839e59243f25bfb142ec5e5b71135",
        "fixCommitParentSHA1": "f559da2880b0d7ada18167b583e3b1173e645e90",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTimeoutTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTimeoutTest.java b/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTimeoutTest.java\nindex 6797f1f..18e611e 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTimeoutTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/RecipientListParallelTimeoutTest.java\n@@ -29,8 +29,8 @@\n \n     public void testRecipientListParallelTimeout() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        // A will timeout so we only get B and C\n-        mock.expectedBodiesReceived(\"BC\");\n+        // A will timeout so we only get B and/or C\n+        mock.message(0).body().not(body().contains(\"A\"));\n \n         template.sendBodyAndHeader(\"direct:start\", \"Hello\", \"slip\", \"direct:a,direct:b,direct:c\");\n \n@@ -55,10 +55,10 @@\n                                 return oldExchange;\n                             }\n                         })\n-                        .parallelProcessing().timeout(2000)\n+                        .parallelProcessing().timeout(1000)\n                     .to(\"mock:result\");\n \n-                from(\"direct:a\").delay(3000).setBody(constant(\"A\"));\n+                from(\"direct:a\").delay(5000).setBody(constant(\"A\"));\n \n                 from(\"direct:b\").setBody(constant(\"B\"));\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 61,
        "bugNodeStartChar": 2605,
        "bugNodeLength": 28,
        "fixLineNum": 61,
        "fixNodeStartChar": 2605,
        "fixNodeLength": 28,
        "sourceBeforeFix": "from(\"direct:a\").delay(3000)",
        "sourceAfterFix": "from(\"direct:a\").delay(5000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "546f336e25b26d072f96e2cda139b885858ed5b0",
        "fixCommitParentSHA1": "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java b/src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java\nindex 7a57d72..1309fd5 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java\n@@ -403,12 +403,12 @@\n         final Map<String, Object> antProps = this.getProject().getProperties();\n         for (Map.Entry<String, Object> entry : antProps.entrySet()) {\n             final String value = String.valueOf(entry.getValue());\n-            retVal.put(entry.getKey(), value);\n+            retVal.setProperty(entry.getKey(), value);\n         }\n \n         // override with properties specified in subelements\n         for (Property p : overrideProps) {\n-            retVal.put(p.getKey(), p.getValue());\n+            retVal.setProperty(p.getKey(), p.getValue());\n         }\n \n         return retVal;\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 406,
        "bugNodeStartChar": 14001,
        "bugNodeLength": 33,
        "fixLineNum": 406,
        "fixNodeStartChar": 14001,
        "fixNodeLength": 41,
        "sourceBeforeFix": "retVal.put(entry.getKey(),value)",
        "sourceAfterFix": "retVal.setProperty(entry.getKey(),value)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "30b97b0595f6fd31ca129306da3e1f266b3e7681",
        "fixCommitParentSHA1": "8aa463a16007637832f632e4ce8813c946890e88",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/spi/impl/BasicOperationService.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/impl/BasicOperationService.java b/hazelcast/src/main/java/com/hazelcast/spi/impl/BasicOperationService.java\nindex 5c7968b..800e71d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/impl/BasicOperationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/impl/BasicOperationService.java\n@@ -95,7 +95,7 @@\n final class BasicOperationService implements InternalOperationService {\n \n     private static final int INITIAL_CAPACITY = 1000;\n-    private static final float LOAD_FACTOR = 1000;\n+    private static final float LOAD_FACTOR = 0.75f;\n     private static final long SLEEP_TIME = 100;\n     private static final int TRY_COUNT = 10;\n     private static final long TRY_PAUSE_MILLIS = 300;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 98,
        "bugNodeStartChar": 4406,
        "bugNodeLength": 18,
        "fixLineNum": 98,
        "fixNodeStartChar": 4406,
        "fixNodeLength": 19,
        "sourceBeforeFix": "LOAD_FACTOR=1000",
        "sourceAfterFix": "LOAD_FACTOR=0.75f"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d52950fe7a7a7dd5dc1262d5a6833f726f012dc8",
        "fixCommitParentSHA1": "c0373fd311479a3fc3d5e177f8675431ff297b50",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/DelayerPerRouteTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/DelayerPerRouteTest.java b/camel-core/src/test/java/org/apache/camel/processor/DelayerPerRouteTest.java\nindex 3854ee8..ca4dbc2 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/DelayerPerRouteTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/DelayerPerRouteTest.java\n@@ -39,9 +39,9 @@\n         return new RouteBuilder() {\n             @Override\n             public void configure() throws Exception {\n-                context.setDelayer(1000);\n+                context.setDelayer(2000);\n \n-                from(\"seda:a\").delayer(500).to(\"mock:result\");\n+                from(\"seda:a\").delayer(1000).to(\"mock:result\");\n \n                 from(\"seda:b\").noDelayer().to(\"mock:result\");\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1546,
        "bugNodeLength": 24,
        "fixLineNum": 42,
        "fixNodeStartChar": 1546,
        "fixNodeLength": 24,
        "sourceBeforeFix": "context.setDelayer(1000)",
        "sourceAfterFix": "context.setDelayer(2000)"
    },
    {
        "bugType": "CHANGE_UNARY_OPERATOR",
        "fixCommitSHA1": "312810d415da381fc6cd53358a4e986e7bdc4f63",
        "fixCommitParentSHA1": "e5a8958ed6b4e33ef554ce6627e3e1cb5aeba4bd",
        "bugFilePath": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java",
        "fixPatch": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\nindex f5ea2bb..1e52893 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java\n@@ -201,13 +201,13 @@\n         }\n \n         String upgrade = response.getHeader(Names.UPGRADE);\n-        if (Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n+        if (!Values.WEBSOCKET.equalsIgnoreCase(upgrade)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response upgrade: \"\n                     + response.getHeader(Names.UPGRADE));\n         }\n \n         String connection = response.getHeader(Names.CONNECTION);\n-        if (Values.UPGRADE.equalsIgnoreCase(connection)) {\n+        if (!Values.UPGRADE.equalsIgnoreCase(connection)) {\n             throw new WebSocketHandshakeException(\"Invalid handshake response connection: \"\n                     + response.getHeader(Names.CONNECTION));\n         }\n",
        "projectName": "netty.netty",
        "bugLineNum": 210,
        "bugNodeStartChar": 8007,
        "bugNodeLength": 43,
        "fixLineNum": 210,
        "fixNodeStartChar": 8007,
        "fixNodeLength": 44,
        "sourceBeforeFix": "Values.UPGRADE.equalsIgnoreCase(connection)",
        "sourceAfterFix": "!Values.UPGRADE.equalsIgnoreCase(connection)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3e97b0501c42c4adc47d32db7484295646632263",
        "fixCommitParentSHA1": "84813ab619e8dba994e3cdc5b4eafd3ae75c908e",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/Configuration.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/Configuration.java b/graylog2-server/src/main/java/org/graylog2/Configuration.java\nindex 478bc93..c61bc3f 100644\n--- a/graylog2-server/src/main/java/org/graylog2/Configuration.java\n+++ b/graylog2-server/src/main/java/org/graylog2/Configuration.java\n@@ -78,10 +78,10 @@\n     private int maxNumberOfIndices = 20;\n \n     @Parameter(value = \"output_batch_size\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBatchSize = 5000;\n+    private int outputBatchSize = 25;\n \n     @Parameter(value = \"outputbuffer_processors\", required = true, validator = PositiveIntegerValidator.class)\n-    private int outputBufferProcessors = 5;\n+    private int outputBufferProcessors = 3;\n     \n     @Parameter(value = \"outputbuffer_processor_threads_max_pool_size\", required = true, validator = PositiveIntegerValidator.class)\n     private int outputBufferProcessorThreadsMaxPoolSize = 30;\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 84,
        "bugNodeStartChar": 3183,
        "bugNodeLength": 26,
        "fixLineNum": 84,
        "fixNodeStartChar": 3183,
        "fixNodeLength": 26,
        "sourceBeforeFix": "outputBufferProcessors=5",
        "sourceAfterFix": "outputBufferProcessors=3"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2e44a1ba91557d4d6231bd46c63697776208bc9e",
        "fixCommitParentSHA1": "5b81e1692dce59992c13c2ab8774ece1a8c48e52",
        "bugFilePath": "transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java",
        "fixPatch": "diff --git a/transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java b/transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java\nindex d2f5109..7aa7904 100644\n--- a/transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java\n+++ b/transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java\n@@ -137,7 +137,7 @@\n                 timestamps.add(System.nanoTime());\n                 if (empty) {\n                     try {\n-                        Thread.sleep(400);\n+                        Thread.sleep(401);\n                     } catch (InterruptedException e) {\n                         // Ignore\n                     }\n@@ -176,7 +176,7 @@\n             public void run() {\n                 timestamps.add(System.nanoTime());\n                 try {\n-                    Thread.sleep(50);\n+                    Thread.sleep(51);\n                 } catch (InterruptedException e) {\n                     // Ignore\n                 }\n",
        "projectName": "netty.netty",
        "bugLineNum": 140,
        "bugNodeStartChar": 4376,
        "bugNodeLength": 17,
        "fixLineNum": 140,
        "fixNodeStartChar": 4376,
        "fixNodeLength": 17,
        "sourceBeforeFix": "Thread.sleep(400)",
        "sourceAfterFix": "Thread.sleep(401)"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "4be7f3630491ebbb716abb50233b7b453c39eb53",
        "fixCommitParentSHA1": "b7df19acc0d036c045da3ee00f5fae8ff6b7db29",
        "bugFilePath": "components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java",
        "fixPatch": "diff --git a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\nindex 3ed3a24..382ed68 100644\n--- a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n+++ b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n@@ -61,15 +61,15 @@\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName) throws Exception {\n-        return createMessageConsumer(session, destinationName, null, false, null, true);\n+        return createMessageConsumer(session, destinationName, null, false, null);\n     }\n \n     public static MessageConsumer createQueueConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, false, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, false, null);\n     }\n \n     public static MessageConsumer createTopicConsumer(Session session, String destinationName, String messageSelector) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, true, null, true);\n+        return createMessageConsumer(session, destinationName, messageSelector, true, null);\n     }\n     \n     public static MessageConsumer createTemporaryMessageConsumer(\n@@ -88,7 +88,8 @@\n             String messageSelector, \n             boolean topic, \n             String durableSubscriptionId) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, true);\n+        // noLocal is default false accordingly to JMS spec\n+        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, false);\n     }\n     \n     public static MessageConsumer createMessageConsumer(\n",
        "projectName": "apache.camel",
        "bugLineNum": 91,
        "bugNodeStartChar": 3559,
        "bugNodeLength": 100,
        "fixLineNum": 92,
        "fixNodeStartChar": 3619,
        "fixNodeLength": 101,
        "sourceBeforeFix": "createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,true)",
        "sourceAfterFix": "createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "6e015f738dbc659ea0b840f302de9b46a0497719",
        "fixCommitParentSHA1": "5c9bb59dfea3fb151ca37b1e1cc1beef15555191",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/cluster/ClusterImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/cluster/ClusterImpl.java b/hazelcast/src/main/java/com/hazelcast/cluster/ClusterImpl.java\nindex 8309ee5..1ee73ff 100644\n--- a/hazelcast/src/main/java/com/hazelcast/cluster/ClusterImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/cluster/ClusterImpl.java\n@@ -59,7 +59,7 @@\n             if (clusterMember == null) {\n                 clusterMember = dummy; \n                 if (listenerSet != null && listenerSet.size() > 0) {\n-                    node.executorManager.executeLocaly(new Runnable() {\n+                    node.executorManager.executeLocally(new Runnable() {\n                         public void run() {\n                             MembershipEvent membershipEvent = new MembershipEvent(ClusterImpl.this,\n                                     dummy, MembershipEvent.MEMBER_ADDED);\n@@ -79,7 +79,7 @@\n             Set<Member> it = clusterMembers.keySet();\n             for (final Member cm : it) {\n                 if (!setNew.contains(cm)) {\n-                    node.executorManager.executeLocaly(new Runnable() {\n+                    node.executorManager.executeLocally(new Runnable() {\n                         public void run() {\n                             MembershipEvent membershipEvent = new MembershipEvent(ClusterImpl.this,\n                                     cm, MembershipEvent.MEMBER_REMOVED);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 82,
        "bugNodeStartChar": 3353,
        "bugNodeLength": 498,
        "fixLineNum": 82,
        "fixNodeStartChar": 3353,
        "fixNodeLength": 499,
        "sourceBeforeFix": "node.executorManager.executeLocaly(new Runnable(){   public void run(){     MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,cm,MembershipEvent.MEMBER_REMOVED);     for (    MembershipListener listener : listenerSet) {       listener.memberRemoved(membershipEvent);     }   } } )",
        "sourceAfterFix": "node.executorManager.executeLocally(new Runnable(){   public void run(){     MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,cm,MembershipEvent.MEMBER_REMOVED);     for (    MembershipListener listener : listenerSet) {       listener.memberRemoved(membershipEvent);     }   } } )"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8f1349d4f3fb6affc967663a8c8032535735585a",
        "fixCommitParentSHA1": "7274d19d3eaeb4bc1ef2a16c0ac08e7447a27003",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java b/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\nindex 6a556cf..aa0ce64 100644\n--- a/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/collection/impl/list/ListBasicLocalTest.java\n@@ -10,7 +10,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class ListBasicLocalTest extends ListBasicTest {\n+public class ListBasicLocalTest extends ListAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances(Config config) {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 11,
        "bugNodeStartChar": 366,
        "bugNodeLength": 307,
        "fixLineNum": 11,
        "fixNodeStartChar": 366,
        "fixNodeLength": 310,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicLocalTest extends ListBasicTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class ListBasicLocalTest extends ListAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } } "
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "6d0b8df8802f95880b33ad6823598b01175e97f6",
        "fixCommitParentSHA1": "fbae7714cf93c0670662804fa2fae41d9712fceb",
        "bugFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
        "fixPatch": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java\nindex e984d54..ea59ae4 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java\n@@ -207,7 +207,7 @@\n   /** Format a new filesystem.  Destroys any filesystem that may already\n    * exist at this location.  **/\n   public static void format(Configuration conf) throws IOException {\n-    format(conf, false);\n+    format(conf, true);\n   }\n \n   static NameNodeMetrics metrics;\n@@ -644,12 +644,12 @@\n    * for each existing directory and format them.\n    * \n    * @param conf\n-   * @param isConfirmationNeeded\n+   * @param force\n    * @return true if formatting was aborted, false otherwise\n    * @throws IOException\n    */\n   private static boolean format(Configuration conf,\n-                                boolean isConfirmationNeeded)\n+                                boolean force)\n       throws IOException {\n     String nsId = DFSUtil.getNamenodeNameServiceId(conf);\n     String namenodeId = HAUtil.getNameNodeId(conf, nsId);\n@@ -659,7 +659,7 @@\n     Collection<URI> dirsToFormat = FSNamesystem.getNamespaceDirs(conf);\n     List<URI> editDirsToFormat = \n                  FSNamesystem.getNamespaceEditsDirs(conf);\n-    if (!confirmFormat(dirsToFormat, isConfirmationNeeded, true)) {\n+    if (!confirmFormat(dirsToFormat, force, true)) {\n       return true; // aborted\n     }\n \n@@ -868,7 +868,7 @@\n \n     switch (startOpt) {\n       case FORMAT:\n-        boolean aborted = format(conf, true);\n+        boolean aborted = format(conf, false);\n         System.exit(aborted ? 1 : 0);\n         return null; // avoid javac warning\n       case GENCLUSTERID:\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 210,
        "bugNodeStartChar": 9030,
        "bugNodeLength": 19,
        "fixLineNum": 210,
        "fixNodeStartChar": 9030,
        "fixNodeLength": 18,
        "sourceBeforeFix": "format(conf,false)",
        "sourceAfterFix": "format(conf,true)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "2979c84ee1ee2d8ee9623326bedd7d5a0d53de26",
        "fixCommitParentSHA1": "fcb18ff6ae441da1003ef87e566e4aaf05782488",
        "bugFilePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java",
        "fixPatch": "diff --git a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\nindex 63d0d38..ddf304f 100644\n--- a/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n+++ b/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java\n@@ -229,7 +229,7 @@\n \t\t\tString[] tokens = paths.split(\",\");\n \t\t\tString path = null;\n \t\t\tfor(String token: tokens) {\n-\t\t\t\tif(new FileWrapper(token).exists()) {\n+\t\t\t\tif (new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()) {\n \t\t\t\t\tpath = token;\n \t\t\t\t}\n \t\t\t}\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 232,
        "bugNodeStartChar": 9642,
        "bugNodeLength": 31,
        "fixLineNum": 232,
        "fixNodeStartChar": 9643,
        "fixNodeLength": 66,
        "sourceBeforeFix": "new FileWrapper(token).exists()",
        "sourceAfterFix": "new FileWrapper(token).exists() || new FileWrapper(token).mkdirs()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b47d226858ebcd6e4f6368a3c7132897456dfdb0",
        "fixCommitParentSHA1": "3335127493c2b7876657ea02f0a38dca4ae7e52c",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\nindex dbc7631..86b9f97 100644\n--- a/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\n+++ b/camel-core/src/main/java/org/apache/camel/builder/PredicateBuilder.java\n@@ -199,7 +199,7 @@\n         return new BinaryPredicateSupport<E>(left, right) {\n \n             protected boolean matches(E exchange, Object leftValue, Object rightValue) {\n-                return compare(leftValue, rightValue) < 0;\n+                return compare(leftValue, rightValue) >= 0;\n             }\n \n             protected String getOperationText() {\n",
        "projectName": "apache.camel",
        "bugLineNum": 202,
        "bugNodeStartChar": 7165,
        "bugNodeLength": 34,
        "fixLineNum": 202,
        "fixNodeStartChar": 7165,
        "fixNodeLength": 35,
        "sourceBeforeFix": "compare(leftValue,rightValue) < 0",
        "sourceAfterFix": "compare(leftValue,rightValue) >= 0"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "fceec74c60a1d72c1582f9d8871cbe1a0eb37fcf",
        "fixCommitParentSHA1": "b67cbebd9a050c7abb1bd2ef090199af06008b7e",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java b/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\nindex e843b07..8a934b9 100644\n--- a/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/instance/HazelcastInstanceImpl.java\n@@ -148,7 +148,7 @@\n     }\n \n     public ILock getLock(Object key) {\n-        if (name == null) {\n+        if (key == null) {\n             throw new NullPointerException(\"Retrieving a lock instance with a null key is not allowed!\");\n         }\n         return getDistributedObject(LockService.SERVICE_NAME, node.getSerializationService().toData(key));\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 151,
        "bugNodeStartChar": 5804,
        "bugNodeLength": 12,
        "fixLineNum": 151,
        "fixNodeStartChar": 5804,
        "fixNodeLength": 11,
        "sourceBeforeFix": "name == null",
        "sourceAfterFix": "key == null"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "f0b0cc268e5fcb59391bbf4f4773f6f92aed6dab",
        "fixCommitParentSHA1": "ff30a1ebf6a470ce66d7bc7cb8ed452ac956b347",
        "bugFilePath": "service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java",
        "fixPatch": "diff --git a/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java b/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java\nindex 1a2be8b..773dd51 100644\n--- a/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java\n+++ b/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java\n@@ -257,11 +257,12 @@\n       /**\n        * If the operation was cancelled by another thread, or the execution timed out, Driver#run\n        * may return a non-zero response code. We will simply return if the operation state is\n-       * CANCELED, TIMEDOUT or CLOSED, otherwise throw an exception\n+       * CANCELED, TIMEDOUT, CLOSED or FINISHED, otherwise throw an exception\n        */\n       if ((getStatus().getState() == OperationState.CANCELED)\n           || (getStatus().getState() == OperationState.TIMEDOUT)\n-          || (getStatus().getState() == OperationState.CLOSED)) {\n+          || (getStatus().getState() == OperationState.CLOSED)\n+          || (getStatus().getState() == OperationState.FINISHED)) {\n         LOG.warn(\"Ignore exception in terminal state\", e);\n         return;\n       }\n",
        "projectName": "apache.hive",
        "bugLineNum": 262,
        "bugNodeStartChar": 10935,
        "bugNodeLength": 179,
        "fixLineNum": 262,
        "fixNodeStartChar": 10935,
        "fixNodeLength": 244,
        "sourceBeforeFix": "(getStatus().getState() == OperationState.CANCELED) || (getStatus().getState() == OperationState.TIMEDOUT) || (getStatus().getState() == OperationState.CLOSED)",
        "sourceAfterFix": "(getStatus().getState() == OperationState.CANCELED) || (getStatus().getState() == OperationState.TIMEDOUT) || (getStatus().getState() == OperationState.CLOSED)|| (getStatus().getState() == OperationState.FINISHED)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8e168c23bde5fed98dea0141b0cdcf11a74a7454",
        "fixCommitParentSHA1": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
        "bugFilePath": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java",
        "fixPatch": "diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java\nindex 2ad47a9..a3266ac 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java\n@@ -154,7 +154,7 @@\n                     || indentInComment < expectedMinimalIndent && isWarnComment;\n         }\n \n-        throw new IllegalStateException();\n+        throw new IllegalStateException(\"Comments are not consistent\");\n     }\n \n     private static int getLineStart(String line, final int tabWidth) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 157,
        "bugNodeStartChar": 7115,
        "bugNodeLength": 27,
        "fixLineNum": 157,
        "fixNodeStartChar": 7115,
        "fixNodeLength": 56,
        "sourceBeforeFix": "new IllegalStateException()",
        "sourceAfterFix": "new IllegalStateException(\"Comments are not consistent\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5d9193eb8fcb699722980d5e5680557553c3ee39",
        "fixCommitParentSHA1": "570e618706b2cf996bc054087d19142b169bab74",
        "bugFilePath": "components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java",
        "fixPatch": "diff --git a/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java b/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\nindex 1e1e3a8..c140753 100644\n--- a/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\n+++ b/components/camel-aws-kinesis/src/test/java/org/apache/camel/component/aws/kinesis/KinesisEndpointTest.java\n@@ -41,7 +41,7 @@\n     @Before\n     public void setup() throws Exception {\n         SimpleRegistry registry = new SimpleRegistry();\n-        registry.put(\"kinesisClient\", amazonKinesisClient);\n+        registry.bind(\"kinesisClient\", amazonKinesisClient);\n         camelContext = new DefaultCamelContext(registry);\n     }\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 44,
        "bugNodeStartChar": 1633,
        "bugNodeLength": 50,
        "fixLineNum": 44,
        "fixNodeStartChar": 1633,
        "fixNodeLength": 51,
        "sourceBeforeFix": "registry.put(\"kinesisClient\",amazonKinesisClient)",
        "sourceAfterFix": "registry.bind(\"kinesisClient\",amazonKinesisClient)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c1e5e2e4627433ecc5158d873494777d24d9efd4",
        "fixCommitParentSHA1": "981e55b41fad60a7c0d0fc7d6634dd90472aedd6",
        "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java",
        "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\nindex 8161260..b391a04 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java\n@@ -481,7 +481,7 @@\n             }\n \n             //Data attribute value\n-            AttributeColumn column = container.getAttributeModel().getNodeTable().getColumn(fore);\n+            AttributeColumn column = container.getAttributeModel().getEdgeTable().getColumn(fore);\n             if (column != null) {\n                 try {\n                     Object val = column.getType().parse(value);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 484,
        "bugNodeStartChar": 20132,
        "bugNodeLength": 44,
        "fixLineNum": 484,
        "fixNodeStartChar": 20132,
        "fixNodeLength": 44,
        "sourceBeforeFix": "container.getAttributeModel().getNodeTable()",
        "sourceAfterFix": "container.getAttributeModel().getEdgeTable()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "c80e76bd7ccfe864566bdbffd6dcb6549709ea73",
        "fixCommitParentSHA1": "1c5a929c7ad6e40939e1170cdaf19c6ffd64f583",
        "bugFilePath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java",
        "fixPatch": "diff --git a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\nindex 83ca4a6..f35434f 100644\n--- a/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\n+++ b/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java\n@@ -711,7 +711,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(Arrays.asList(data), typeInfo);\n \t}\n@@ -744,7 +744,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + type.getName()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(Arrays.asList(data), typeInfo);\n \t}\n@@ -785,7 +785,7 @@\n \t\tcatch (Exception e) {\n \t\t\tthrow new RuntimeException(\"Could not create TypeInformation for type \" + first.getClass()\n \t\t\t\t\t+ \"; please specify the TypeInformation manually via \"\n-\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\");\n+\t\t\t\t\t+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\", e);\n \t\t}\n \t\treturn fromCollection(data, typeInfo);\n \t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 712,
        "bugNodeStartChar": 28359,
        "bugNodeLength": 235,
        "fixLineNum": 712,
        "fixNodeStartChar": 28359,
        "fixNodeLength": 238,
        "sourceBeforeFix": "new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName() + \"; please specify the TypeInformation manually via \"+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\")",
        "sourceAfterFix": "new RuntimeException(\"Could not create TypeInformation for type \" + data[0].getClass().getName() + \"; please specify the TypeInformation manually via \"+ \"StreamExecutionEnvironment#fromElements(Collection, TypeInformation)\",e)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "811f7b2271556befe5b0e74c3881d34fe1531252",
        "fixCommitParentSHA1": "e2fd8e10e39ae5e6e7b45538c929ca63551dae18",
        "bugFilePath": "src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java",
        "fixPatch": "diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\nindex 2256db9..1d229b8 100644\n--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java\n@@ -631,16 +631,16 @@\n                     nettyRequest.setContent(buffer);\n                 } else if (request.getByteData() != null) {\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(request.getByteData().length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(request.getByteData()));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(request.getByteData()));\n                 } else if (request.getStringData() != null) {\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(request.getStringData().getBytes(bodyCharset).length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(request.getStringData(), bodyCharset));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(request.getStringData().getBytes(bodyCharset)));\n                 } else if (request.getStreamData() != null) {\n                     int[] lengthWrapper = new int[1];\n                     byte[] bytes = AsyncHttpProviderUtils.readFully(request.getStreamData(), lengthWrapper);\n                     int length = lengthWrapper[0];\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(length));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(bytes, 0, length));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(bytes, 0, length));\n                 } else if (request.getParams() != null) {\n                     StringBuilder sb = new StringBuilder();\n                     for (final Entry<String, List<String>> paramEntry : request.getParams()) {\n@@ -655,7 +655,7 @@\n                         }\n                     }\n                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(sb.length()));\n-                    nettyRequest.setContent(ChannelBuffers.copiedBuffer(sb.toString().getBytes(bodyCharset)));\n+                    nettyRequest.setContent(ChannelBuffers.wrappedBuffer(sb.toString().getBytes(bodyCharset)));\n \n                     if (!request.getHeaders().containsKey(HttpHeaders.Names.CONTENT_TYPE)) {\n                         nettyRequest.setHeader(HttpHeaders.Names.CONTENT_TYPE, \"application/x-www-form-urlencoded\");\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 634,
        "bugNodeStartChar": 28649,
        "bugNodeLength": 50,
        "fixLineNum": 634,
        "fixNodeStartChar": 28649,
        "fixNodeLength": 51,
        "sourceBeforeFix": "ChannelBuffers.copiedBuffer(request.getByteData())",
        "sourceAfterFix": "ChannelBuffers.wrappedBuffer(request.getByteData())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "e508f61a11d9c30f9063b9d19dd9cd10bdfe9e7f",
        "fixCommitParentSHA1": "1e93e408645fb640c3f58405aa04a03ff23c846c",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java\nindex bfc5d55..282c562 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java\n@@ -464,9 +464,9 @@\n      */\n     public void setMemberModifiers(String modifiers)\n     {\n-        final List<Integer> modifiersList = new ArrayList<>(modifiers.length());\n+        final List<Integer> modifiersList = new ArrayList<>();\n         for (String modifier : modifiers.split(\", \")) {\n-            modifiersList.add(TokenTypes.getTokenId(modifier));\n+            modifiersList.add(TokenTypes.getTokenId(modifier.trim()));\n         }\n         this.memberModifiers = modifiersList;\n     }\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 467,
        "bugNodeStartChar": 15659,
        "bugNodeLength": 35,
        "fixLineNum": 467,
        "fixNodeStartChar": 15659,
        "fixNodeLength": 17,
        "sourceBeforeFix": "new ArrayList<>(modifiers.length())",
        "sourceAfterFix": "new ArrayList<>()"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "b4dd066af8d780844f20f35c892476f6b35ff1b2",
        "fixCommitParentSHA1": "ca69317371eb16049456d0efd0f418031420613e",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\nindex b01c711..85eb787 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n@@ -546,7 +546,7 @@\n         }\n         for (Future<Pairs> future : lsFutures) {\n             Pairs pairs = future.get();\n-            if (pairs != null) {\n+            if (pairs != null && pairs.getKeyValues()!=null) {\n                 for (KeyValue keyValue : pairs.getKeyValues()) {\n                     results.addKeyValue(keyValue);\n                 }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 549,
        "bugNodeStartChar": 23157,
        "bugNodeLength": 13,
        "fixLineNum": 549,
        "fixNodeStartChar": 23157,
        "fixNodeLength": 43,
        "sourceBeforeFix": "pairs != null",
        "sourceAfterFix": "pairs != null && pairs.getKeyValues() != null"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "51271a02806489a2e2b5539475eb2131fd29b77d",
        "fixCommitParentSHA1": "903084399a57721d987f61c9c09ac6d2cdb2b3a8",
        "bugFilePath": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/CompilerTestCase.java b/test/com/google/javascript/jscomp/CompilerTestCase.java\nindex 2eb8ae6..e2e80b8 100644\n--- a/test/com/google/javascript/jscomp/CompilerTestCase.java\n+++ b/test/com/google/javascript/jscomp/CompilerTestCase.java\n@@ -1610,7 +1610,7 @@\n         }\n \n         if ((verifyGetterAndSetterUpdates || verifyNoNewGettersOrSetters) && i == 0) {\n-          GatherGettersAndSetterProperties.update(compiler, externsRoot, mainRoot);\n+          GatherGetterAndSetterProperties.update(compiler, externsRoot, mainRoot);\n         }\n \n         recentChange.reset();\n@@ -1633,17 +1633,17 @@\n         if (verifyGetterAndSetterUpdates) {\n           assertWithMessage(\"Pass did not update extern getters / setters\")\n               .that(compiler.getExternGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update source getters / setters\")\n               .that(compiler.getSourceGetterAndSetterProperties())\n-              .isEqualTo(GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+              .isEqualTo(GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n         }\n \n         if (verifyNoNewGettersOrSetters) {\n           MapDifference<String, PropertyAccessKind> externsDifference =\n               Maps.difference(\n                   compiler.getExternGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, externsRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, externsRoot));\n           assertWithMessage(\"Pass did not update new extern getters / setters\")\n               .that(externsDifference.entriesOnlyOnRight())\n               .isEmpty();\n@@ -1654,7 +1654,7 @@\n           MapDifference<String, PropertyAccessKind> sourceDifference =\n               Maps.difference(\n                   compiler.getSourceGetterAndSetterProperties(),\n-                  GatherGettersAndSetterProperties.gather(compiler, mainRoot));\n+                  GatherGetterAndSetterProperties.gather(compiler, mainRoot));\n           assertWithMessage(\"Pass did not update new source getters / setters\")\n               .that(sourceDifference.entriesOnlyOnRight())\n               .isEmpty();\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 1636,
        "bugNodeStartChar": 56712,
        "bugNodeLength": 62,
        "fixLineNum": 1636,
        "fixNodeStartChar": 56712,
        "fixNodeLength": 61,
        "sourceBeforeFix": "GatherGettersAndSetterProperties.gather(compiler,externsRoot)",
        "sourceAfterFix": "GatherGetterAndSetterProperties.gather(compiler,externsRoot)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "8aedc02d8bfdf75de4610a1b0b8ffe0285ce6643",
        "fixCommitParentSHA1": "c360fc1f3a5757cd58cf75f42fb6bc89d5afb5e8",
        "bugFilePath": "jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrLogger.java",
        "fixPatch": "diff --git a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrLogger.java b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrLogger.java\nindex 6ef13ec..8de3e42 100644\n--- a/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrLogger.java\n+++ b/jdr/jboss-as-jdr/src/main/java/org/jboss/as/jdr/JdrLogger.java\n@@ -93,20 +93,20 @@\n      * JDR could not create a zipfile to store the report.\n      */\n     @LogMessage(level = ERROR)\n-    @Message(id=13306, value=\"Could not create zipfile.\")\n+    @Message(id=13106, value=\"Could not create zipfile.\")\n     void couldNotCreateZipfile(@Cause Throwable cause);\n \n     /**\n      * One of the configuration steps in JDR threw an exception.\n      */\n     @LogMessage(level = ERROR)\n-    @Message(id=13307, value=\"Could not configure JDR.\")\n+    @Message(id=13107, value=\"Could not configure JDR.\")\n     void couldNotConfigureJDR(@Cause Throwable cause);\n \n     /**\n      * No Commands to run, probably no valid plugin loaded\n      */\n     @LogMessage(level = ERROR)\n-    @Message(id = 13308, value = \"No JDR commands were loaded. Be sure that a valid Plugin class is specified in plugins.properties.\")\n+    @Message(id = 13108, value = \"No JDR commands were loaded. Be sure that a valid Plugin class is specified in plugins.properties.\")\n     void noCommandsToRun();\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 110,
        "bugNodeStartChar": 3969,
        "bugNodeLength": 10,
        "fixLineNum": 110,
        "fixNodeStartChar": 3969,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=13308",
        "sourceAfterFix": "id=13108"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "49d871ec1fc794b631f884482cbb69811514727e",
        "fixCommitParentSHA1": "db0c4a90ddc3c2e6ca69a531e2f81bdfbf872723",
        "bugFilePath": "src/main/java/com/alibaba/fastjson/parser/ParserConfig.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\nindex 4226ed7..b4a4403 100644\n--- a/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n+++ b/src/main/java/com/alibaba/fastjson/parser/ParserConfig.java\n@@ -311,7 +311,7 @@\n             return derializer;\r\n         }\r\n \r\n-        if (type instanceof WildcardType || type instanceof TypeVariable) {\r\n+        if (type instanceof WildcardType || type instanceof TypeVariable || type instanceof ParameterizedType) {\r\n             derializer = derializers.get(clazz);\r\n         }\r\n \r\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 314,
        "bugNodeStartChar": 14792,
        "bugNodeLength": 60,
        "fixLineNum": 314,
        "fixNodeStartChar": 14479,
        "fixNodeLength": 97,
        "sourceBeforeFix": "type instanceof WildcardType || type instanceof TypeVariable",
        "sourceAfterFix": "type instanceof WildcardType || type instanceof TypeVariable || type instanceof ParameterizedType"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "10e4ecd7341ca6afd1d374c11546935aa488a054",
        "fixCommitParentSHA1": "b92b037a96d086e3d5b5b8326883c20642d310c1",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\nindex 509dedf..dec10b8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/parameters/QueueTemplate.java\n@@ -28,61 +28,61 @@\n     @EncodeMethod(id = 1)\n     void offer(String name, Data value, long timeoutMillis);\n \n-    @EncodeMethod(id = 1)\n+    @EncodeMethod(id = 2)\n     void put(String name, Data value);\n \n-    @EncodeMethod(id = 2)\n+    @EncodeMethod(id = 3)\n     void size(String name);\n \n-    @EncodeMethod(id = 3)\n+    @EncodeMethod(id = 4)\n     void remove(String name, Data value);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 5)\n     void poll(String name, long timeoutMillis);\n \n-    @EncodeMethod(id = 4)\n+    @EncodeMethod(id = 6)\n     void take(String name);\n \n-    @EncodeMethod(id = 5)\n+    @EncodeMethod(id = 7)\n     void peek(String name);\n \n-    @EncodeMethod(id = 6)\n+    @EncodeMethod(id = 8)\n     void iterator(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 9)\n     void drainTo(String name);\n \n-    @EncodeMethod(id = 7)\n+    @EncodeMethod(id = 10)\n     void drainToMaxSize(String name, int maxSize);\n \n-    @EncodeMethod(id = 8)\n+    @EncodeMethod(id = 11)\n     void contains(String name, Data value);\n \n-    @EncodeMethod(id = 9)\n+    @EncodeMethod(id = 12)\n     void containsAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 10)\n+    @EncodeMethod(id = 13)\n     void compareAndRemoveAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 11)\n+    @EncodeMethod(id = 14)\n     void compareAndRetainAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 12)\n+    @EncodeMethod(id = 15)\n     void clear(String name);\n \n-    @EncodeMethod(id = 13)\n+    @EncodeMethod(id = 16)\n     void addAll(String name, Collection<Data> dataList);\n \n-    @EncodeMethod(id = 14)\n+    @EncodeMethod(id = 17)\n     void addListener(String name, boolean includeValue);\n \n-    @EncodeMethod(id = 15)\n+    @EncodeMethod(id = 18)\n     void removeListener(String name, String registrationId);\n \n-    @EncodeMethod(id = 16)\n+    @EncodeMethod(id = 19)\n     void remainingCapacity(String name);\n \n-    @EncodeMethod(id = 17)\n+    @EncodeMethod(id = 20)\n     void isEmpty(String name);\n \n }\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 43,
        "bugNodeStartChar": 1346,
        "bugNodeLength": 6,
        "fixLineNum": 43,
        "fixNodeStartChar": 1346,
        "fixNodeLength": 6,
        "sourceBeforeFix": "id=4",
        "sourceAfterFix": "id=6"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bc42c31387e272b70f2418debbb1601519b44d0f",
        "fixCommitParentSHA1": "973b8b3f76178cf9e7ad4c3f5fb17c9fd9145880",
        "bugFilePath": "components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzHelper.java",
        "fixPatch": "diff --git a/components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzHelper.java b/components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzHelper.java\nindex bb6db52..7263bae 100644\n--- a/components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzHelper.java\n+++ b/components/camel-quartz2/src/main/java/org/apache/camel/component/quartz2/QuartzHelper.java\n@@ -24,9 +24,10 @@\n \n public final class QuartzHelper {\n \n-    public static final Logger LOG = LoggerFactory.getLogger(QuartzEndpoint.class);\n+    public static final Logger LOG = LoggerFactory.getLogger(QuartzHelper.class);\n \n     private QuartzHelper() {\n+        // prevent instantiation\n     }\n \n     public static String getQuartzContextName(CamelContext camelContext) {\n@@ -38,6 +39,14 @@\n         }\n     }\n \n+    /**\n+     * Adds the current CamelContext name and endpoint URI to the Job's jobData\n+     * map.\n+     * \n+     * @param camelContext The currently active camelContext\n+     * @param jobDetail The job for which the jobData map shall be updated\n+     * @param endpointUri URI of the endpoint name, if any. May be {@code null}\n+     */\n     public static void updateJobDataMap(CamelContext camelContext, JobDetail jobDetail, String endpointUri) {\n         // Store this camelContext name into the job data\n         JobDataMap jobDataMap = jobDetail.getJobDataMap();\n",
        "projectName": "apache.camel",
        "bugLineNum": 27,
        "bugNodeStartChar": 1100,
        "bugNodeLength": 20,
        "fixLineNum": 27,
        "fixNodeStartChar": 1100,
        "fixNodeLength": 18,
        "sourceBeforeFix": "QuartzEndpoint.class",
        "sourceAfterFix": "QuartzHelper.class"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b7a82854871f76fbc0bda0c5fec2be699fc46b68",
        "fixCommitParentSHA1": "d2edcae4c5817e007d0ac74541711b44dff1a1b3",
        "bugFilePath": "hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapListenerStressTest.java",
        "fixPatch": "diff --git a/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapListenerStressTest.java b/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapListenerStressTest.java\nindex 3eaeb78..217b4ac 100644\n--- a/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapListenerStressTest.java\n+++ b/hazelcast-client/src/test/java/com/hazelcast/client/multimap/ClientMultiMapListenerStressTest.java\n@@ -29,7 +29,7 @@\n \n     private static final int MAX_SECONDS = 60 * 10;\n     private static final int NUMBER_OF_CLIENTS = 8;\n-    private static final int THREADS_PER_CLIENT = 8;\n+    private static final int THREADS_PER_CLIENT = 4;\n     private static final String MAP_NAME = randomString();\n \n \n@@ -82,7 +82,7 @@\n     }\n \n     public class PutItemsThread extends Thread {\n-        public static final int MAX_ITEMS = 1000;\n+        public static final int MAX_ITEMS = 100;\n \n         public final MyEntryListener listener = new MyEntryListener();\n         public HazelcastInstance client;\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 85,
        "bugNodeStartChar": 2910,
        "bugNodeLength": 16,
        "fixLineNum": 85,
        "fixNodeStartChar": 2910,
        "fixNodeLength": 15,
        "sourceBeforeFix": "MAX_ITEMS=1000",
        "sourceAfterFix": "MAX_ITEMS=100"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "eeab6767db852d251bb86a7f4363fb31c9f07d03",
        "fixCommitParentSHA1": "82f876f7db96810e16648ca3afd3eaad4a0298ad",
        "bugFilePath": "transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java\nindex 530e910..fd2ea13 100644\n--- a/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java\n+++ b/transport/src/main/java/io/netty/bootstrap/ServerBootstrap.java\n@@ -43,7 +43,7 @@\n  * {@link Bootstrap} sub-class which allows easy bootstrap of {@link ServerChannel}\n  *\n  */\n-public final class ServerBootstrap extends AbstractBootstrap<ServerBootstrap, Channel> {\n+public final class ServerBootstrap extends AbstractBootstrap<ServerBootstrap, ServerChannel> {\n \n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(ServerBootstrap.class);\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 46,
        "bugNodeStartChar": 1670,
        "bugNodeLength": 43,
        "fixLineNum": 46,
        "fixNodeStartChar": 1670,
        "fixNodeLength": 49,
        "sourceBeforeFix": "AbstractBootstrap<ServerBootstrap,Channel>",
        "sourceAfterFix": "AbstractBootstrap<ServerBootstrap,ServerChannel>"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "4f952dac30892ce9458bee0403d908ee642c4481",
        "fixCommitParentSHA1": "517b4a2f15020263bac77ba06b605e3747f07219",
        "bugFilePath": "remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystemRootResource.java",
        "fixPatch": "diff --git a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystemRootResource.java b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystemRootResource.java\nindex cf0aeae..6895c30 100644\n--- a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystemRootResource.java\n+++ b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystemRootResource.java\n@@ -78,7 +78,7 @@\n     }\n \n     private static SimpleAttributeDefinition createIntAttribute(String name, Attribute attribute, int defaultValue) {\n-        return SimpleAttributeDefinitionBuilder.create(name, ModelType.INT, true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1)).build();\n+        return SimpleAttributeDefinitionBuilder.create(name, ModelType.INT, true).setDefaultValue(new ModelNode().set(defaultValue)).setXmlName(attribute.getLocalName()).setValidator(new IntRangeValidator(1, true)).build();\n     }\n \n     private static class ThreadWriteAttributeHandler extends RestartParentWriteAttributeHandler {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 81,
        "bugNodeStartChar": 4835,
        "bugNodeLength": 24,
        "fixLineNum": 81,
        "fixNodeStartChar": 4835,
        "fixNodeLength": 30,
        "sourceBeforeFix": "new IntRangeValidator(1)",
        "sourceAfterFix": "new IntRangeValidator(1,true)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b7ceb6548fc986277173ca79065914877f1cc007",
        "fixCommitParentSHA1": "858199a2fa14f835369ede30deb3de7fdfcc98c9",
        "bugFilePath": "spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\nindex 5fba037..548d8fe 100644\n--- a/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\n+++ b/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/CompositeReactiveHealthIndicator.java\n@@ -78,8 +78,9 @@\n \n \t@Override\n \tpublic Mono<Health> health() {\n-\t\treturn Flux.fromIterable(this.registry.getAll().entrySet()).flatMap(\n-\t\t\t\t(entry) -> Mono.zip(Mono.just(entry.getKey()), entry.getValue().health().compose(this.timeoutCompose)))\n+\t\treturn Flux.fromIterable(this.registry.getAll().entrySet())\n+\t\t\t\t.flatMap((entry) -> Mono.zip(Mono.just(entry.getKey()),\n+\t\t\t\t\t\tentry.getValue().health().transformDeferred(this.timeoutCompose)))\n \t\t\t\t.collectMap(Tuple2::getT1, Tuple2::getT2).map(this.healthAggregator::aggregate);\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 82,
        "bugNodeStartChar": 2860,
        "bugNodeLength": 54,
        "fixLineNum": 83,
        "fixNodeStartChar": 2866,
        "fixNodeLength": 64,
        "sourceBeforeFix": "entry.getValue().health().compose(this.timeoutCompose)",
        "sourceAfterFix": "entry.getValue().health().transformDeferred(this.timeoutCompose)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a04df35fd9c932531fce2ebd85de52812a038b13",
        "fixCommitParentSHA1": "a641e82bef611b82380729f35ccd86dafeadf1da",
        "bugFilePath": "core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java",
        "fixPatch": "diff --git a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\nindex 7062e2a..1cdfda1 100644\n--- a/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n+++ b/core/client/src/main/java/alluxio/client/block/RetryHandlingBlockWorkerClient.java\n@@ -258,7 +258,7 @@\n       client.getOutputProtocol().getTransport().close();\n       throw new IOException(e);\n     } finally {\n-      BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress, client);\n+      BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress, client);\n     }\n   }\n \n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 261,
        "bugNodeStartChar": 9311,
        "bugNodeLength": 69,
        "fixLineNum": 261,
        "fixNodeStartChar": 9311,
        "fixNodeLength": 78,
        "sourceBeforeFix": "BlockStoreContext.releaseBlockWorkerThriftClient(mRpcAddress,client)",
        "sourceAfterFix": "BlockStoreContext.releaseBlockWorkerThriftClientHeartbeat(mRpcAddress,client)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "67b17a5bdc6c5bcd2ac8136216422677b84d988c",
        "fixCommitParentSHA1": "f9fba78ce600b0c7c81f27d87654cc73041ff3c5",
        "bugFilePath": "components/camel-dozer/src/main/java/org/apache/camel/component/dozer/DozerProducer.java",
        "fixPatch": "diff --git a/components/camel-dozer/src/main/java/org/apache/camel/component/dozer/DozerProducer.java b/components/camel-dozer/src/main/java/org/apache/camel/component/dozer/DozerProducer.java\nindex b316197..7050225 100644\n--- a/components/camel-dozer/src/main/java/org/apache/camel/component/dozer/DozerProducer.java\n+++ b/components/camel-dozer/src/main/java/org/apache/camel/component/dozer/DozerProducer.java\n@@ -59,7 +59,7 @@\n         }\n         \n         // Load the target model class\n-        Class<?> targetModel = endpoint.getCamelContext().getClassResolver().resolveClass(\n+        Class<?> targetModel = endpoint.getCamelContext().getClassResolver().resolveMandatoryClass(\n                 endpoint.getConfiguration().getTargetModel());\n         \n         // If an unmarshaller was used, the unmarshalled message is the OUT message.\n",
        "projectName": "apache.camel",
        "bugLineNum": 62,
        "bugNodeStartChar": 2393,
        "bugNodeLength": 121,
        "fixLineNum": 62,
        "fixNodeStartChar": 2393,
        "fixNodeLength": 130,
        "sourceBeforeFix": "endpoint.getCamelContext().getClassResolver().resolveClass(endpoint.getConfiguration().getTargetModel())",
        "sourceAfterFix": "endpoint.getCamelContext().getClassResolver().resolveMandatoryClass(endpoint.getConfiguration().getTargetModel())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "29c0169903314b08f810aedca121122017fa39ec",
        "fixCommitParentSHA1": "56ec398262f548268b436f906cac745314c36094",
        "bugFilePath": "profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java",
        "fixPatch": "diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\nindex ca8b941..46e20a0 100644\n--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\n+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGenerator.java\n@@ -147,7 +147,7 @@\n     private void parameterBind(CodeBuilder builder, Class<?>[] interceptorParamTypes) {\n         int i = 0;\n         int argNum = targetMethod.getParameterTypes().length;\n-        int interceptorArgNum = interceptorParamTypes.length - 1;\n+        int interceptorArgNum = interceptorParamTypes.length - 3;\n         int matchNum = Math.min(argNum, interceptorArgNum);\n \n         for (; i < matchNum; i++) {\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 150,
        "bugNodeStartChar": 4992,
        "bugNodeLength": 32,
        "fixLineNum": 150,
        "fixNodeStartChar": 4992,
        "fixNodeLength": 32,
        "sourceBeforeFix": "interceptorParamTypes.length - 1",
        "sourceAfterFix": "interceptorParamTypes.length - 3"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "127bef4d101ac677d2b4875305d402528d4b81a6",
        "fixCommitParentSHA1": "47cb6295fae119e16c8625b5260dd33e9127b4ff",
        "bugFilePath": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java",
        "fixPatch": "diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\nindex 2ce34a9..52f0c7d 100644\n--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\n+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestClientOperationTimeout.java\n@@ -120,7 +120,7 @@\n    * Tests that a get on a table throws {@link SocketTimeoutException} when the operation takes\n    * longer than 'hbase.client.operation.timeout'.\n    */\n-  @Test(expected = SocketTimeoutException.class)\n+  @Test(expected = RetriesExhaustedException.class)\n   public void testGetTimeout() throws Exception {\n     DELAY_GET = 600;\n     TABLE.get(new Get(ROW));\n@@ -130,7 +130,7 @@\n    * Tests that a put on a table throws {@link SocketTimeoutException} when the operation takes\n    * longer than 'hbase.client.operation.timeout'.\n    */\n-  @Test(expected = SocketTimeoutException.class)\n+  @Test(expected = RetriesExhaustedException.class)\n   public void testPutTimeout() throws Exception {\n     DELAY_MUTATE = 600;\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 123,
        "bugNodeStartChar": 5186,
        "bugNodeLength": 28,
        "fixLineNum": 123,
        "fixNodeStartChar": 5186,
        "fixNodeLength": 31,
        "sourceBeforeFix": "SocketTimeoutException.class",
        "sourceAfterFix": "RetriesExhaustedException.class"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e2854295f7c484671ce69bff7ec37fcb0c413a32",
        "fixCommitParentSHA1": "c2c976107dfcc44fbd6bc2af8435b2c440ca592d",
        "bugFilePath": "src/main/java/spark/ExceptionHandler.java",
        "fixPatch": "diff --git a/src/main/java/spark/ExceptionHandler.java b/src/main/java/spark/ExceptionHandler.java\nindex 4650688..f30004d 100644\n--- a/src/main/java/spark/ExceptionHandler.java\n+++ b/src/main/java/spark/ExceptionHandler.java\n@@ -4,7 +4,7 @@\n  * Created by Per Wendel on 2014-05-10.\n  */\n @FunctionalInterface\n-public interface ExceptionHandler {\n+public interface ExceptionHandler<T extends Exception> {\n \n     /**\n      * Invoked when an exception that is mapped to this handler occurs during routing\n@@ -13,5 +13,5 @@\n      * @param request   The request object providing information about the HTTP request\n      * @param response  The response object providing functionality for modifying the response\n      */\n-    void handle(Exception exception, Request request, Response response);\n+    void handle(T exception, Request request, Response response);\n }\n",
        "projectName": "perwendel.spark",
        "bugLineNum": 16,
        "bugNodeStartChar": 499,
        "bugNodeLength": 19,
        "fixLineNum": 16,
        "fixNodeStartChar": 499,
        "fixNodeLength": 11,
        "sourceBeforeFix": "Exception exception",
        "sourceAfterFix": "T exception"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0b4934d140f64feb7a8a995ab4e66d990dbbf931",
        "fixCommitParentSHA1": "c4024d8b451267b8941f9e6e1e70bc2cb1291c46",
        "bugFilePath": "spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java",
        "fixPatch": "diff --git a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java\nindex ba925fc..aa31d7f 100644\n--- a/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java\n+++ b/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandlerIntegrationTests.java\n@@ -335,7 +335,7 @@\n \n \t\t\t@GetMapping(\"/commit\")\n \t\t\tpublic Mono<Void> commit(ServerWebExchange exchange) {\n-\t\t\t\treturn exchange.getResponse().writeWith(Mono.empty()).then(\n+\t\t\t\treturn exchange.getResponse().setComplete().then(\n \t\t\t\t\t\tMono.error(new IllegalStateException(\"already committed!\")));\n \t\t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 338,
        "bugNodeStartChar": 13275,
        "bugNodeLength": 46,
        "fixLineNum": 338,
        "fixNodeStartChar": 13275,
        "fixNodeLength": 36,
        "sourceBeforeFix": "exchange.getResponse().writeWith(Mono.empty())",
        "sourceAfterFix": "exchange.getResponse().setComplete()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6f74927366d17a4773006a094a7f0bc29c4b674b",
        "fixCommitParentSHA1": "9323424d263a1e573ab7edbfc69d67d8782ce36a",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\nindex 3b7a752..d76f73e 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/idgen/IdGeneratorBasicDistributedTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest {\n+public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 326,
        "bugNodeLength": 308,
        "fixLineNum": 10,
        "fixNodeStartChar": 326,
        "fixNodeLength": 311,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } } "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "46fa8090954480eecdeb6e7367f0e30655853f42",
        "fixCommitParentSHA1": "68d0572d3b89d738e0c2fc1a91ff174b5b763b33",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java b/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\nindex c0fbf2f..64f4805 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java\n@@ -346,7 +346,7 @@\n         final List<String> propertyRefs = new ArrayList<>();\n         parsePropertyString(value, fragments, propertyRefs);\n \n-        final StringBuilder sb = new StringBuilder();\n+        final StringBuilder sb = new StringBuilder(256);\n         final Iterator<String> fragmentsIterator = fragments.iterator();\n         final Iterator<String> propertyRefsIterator = propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 349,
        "bugNodeStartChar": 15460,
        "bugNodeLength": 19,
        "fixLineNum": 349,
        "fixNodeStartChar": 15460,
        "fixNodeLength": 22,
        "sourceBeforeFix": "new StringBuilder()",
        "sourceAfterFix": "new StringBuilder(256)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "30c46ed134b6660f4099973832074ab809ffa0d1",
        "fixCommitParentSHA1": "4c1cffd9d02d9ddaaf433a1882098c8423d97c28",
        "bugFilePath": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyClient.java",
        "fixPatch": "diff --git a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyClient.java b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyClient.java\nindex fd6d980..6cab15d 100644\n--- a/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyClient.java\n+++ b/flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyClient.java\n@@ -147,7 +147,7 @@\n \t\t// multiple clients running on the same host.\n \t\tString name = NettyConfig.CLIENT_THREAD_GROUP_NAME + \" (\" + config.getServerPort() + \")\";\n \n-\t\tEpollEventLoopGroup epollGroup = new EpollEventLoopGroup(config.getServerNumThreads(), NettyServer.getNamedThreadFactory(name));\n+\t\tEpollEventLoopGroup epollGroup = new EpollEventLoopGroup(config.getClientNumThreads(), NettyServer.getNamedThreadFactory(name));\n \t\tbootstrap.group(epollGroup).channel(EpollSocketChannel.class);\n \t}\n \n",
        "projectName": "apache.flink",
        "bugLineNum": 150,
        "bugNodeStartChar": 5016,
        "bugNodeLength": 28,
        "fixLineNum": 150,
        "fixNodeStartChar": 5016,
        "fixNodeLength": 28,
        "sourceBeforeFix": "config.getServerNumThreads()",
        "sourceAfterFix": "config.getClientNumThreads()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b59ebb01c93bd75a38d59e57d9403515bc3aa014",
        "fixCommitParentSHA1": "3997b356ac8fad916d9c9d47688f20c82b27d79b",
        "bugFilePath": "jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java",
        "fixPatch": "diff --git a/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java b/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\nindex 57b3a26..7c35784 100644\n--- a/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\n+++ b/jstorm-core/src/test/java/com/alibaba/jstorm/common/metric/old/window/StatBucketsTest.java\n@@ -9,19 +9,19 @@\n \n     public void testPrettyUptime() throws Exception {\n         int secs = 10860;\n-        assertEquals(\"3h 1m 0s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"3h 1m 0s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 203010;\n-        assertEquals(\"2d 8h 23m 30s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"2d 8h 23m 30s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 234;\n-        assertEquals(\"3m 54s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"3m 54s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 32;\n-        assertEquals(\"32s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"32s\", StatBuckets.prettyUptimeStr(secs));\n \n         secs = 0;\n-        assertEquals(\"0s\", StatBuckets.prettyUptime(secs));\n+        assertEquals(\"0s\", StatBuckets.prettyUptimeStr(secs));\n \n     }\n }\n\\ No newline at end of file\n",
        "projectName": "alibaba.jstorm",
        "bugLineNum": 12,
        "bugNodeStartChar": 292,
        "bugNodeLength": 30,
        "fixLineNum": 12,
        "fixNodeStartChar": 292,
        "fixNodeLength": 33,
        "sourceBeforeFix": "StatBuckets.prettyUptime(secs)",
        "sourceAfterFix": "StatBuckets.prettyUptimeStr(secs)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "6ed3c275fc3f67ecc814a1cb838915661f782f22",
        "fixCommitParentSHA1": "66c7b2cfffaaee3200369d146ab4b24f1b7effd6",
        "bugFilePath": "testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\nindex 08ba486..72e26f8 100755\n--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\n+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/web/sso/SingleSignOnUnitTestCase.java\n@@ -76,7 +76,7 @@\n     @Test\n     public void testFormAuthSingleSignOn(@ArquillianResource URL baseURLNoAuth) throws Exception {\n         log.info(\"+++ testFormAuthSingleSignOn\");\n-        SSOBaseCase.executeFormAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n+        SSOTestBase.executeFormAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n     }\n \n     /**\n@@ -85,7 +85,7 @@\n     @Test\n     public void testNoAuthSingleSignOn(@ArquillianResource URL baseURLNoAuth) throws Exception {\n         log.info(\"+++ testNoAuthSingleSignOn\");\n-        SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n+        SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth, baseURLNoAuth, log);\n     }\n \n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 88,
        "bugNodeStartChar": 3472,
        "bugNodeLength": 76,
        "fixLineNum": 88,
        "fixNodeStartChar": 3472,
        "fixNodeLength": 76,
        "sourceBeforeFix": "SSOBaseCase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)",
        "sourceAfterFix": "SSOTestBase.executeNoAuthSingleSignOnTest(baseURLNoAuth,baseURLNoAuth,log)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "eba7e984d0999606f90689ca3b89ee644b1e92a4",
        "fixCommitParentSHA1": "7db8e2ad2c7ecd5c3502a7068241a7e469447921",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\nindex 7b59f8f..8aa312c 100644\n--- a/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n+++ b/graylog2-server/src/main/java/org/graylog2/indexer/searches/Searches.java\n@@ -221,7 +221,7 @@\n         stats.order(TermsStatsFacet.ComparatorType.fromString(order.toString().toLowerCase()));\n         stats.size(size);\n \n-        terms.facetFilter(standardFilters(range, filter));\n+        stats.facetFilter(standardFilters(range, filter));\n \n         srb.addFacet(stats);\n \n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 224,
        "bugNodeStartChar": 9563,
        "bugNodeLength": 49,
        "fixLineNum": 224,
        "fixNodeStartChar": 9563,
        "fixNodeLength": 49,
        "sourceBeforeFix": "terms.facetFilter(standardFilters(range,filter))",
        "sourceAfterFix": "stats.facetFilter(standardFilters(range,filter))"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "2f9d955099f62c12ced65ab9f9cc6ca39a62f469",
        "fixCommitParentSHA1": "ac74a0ce6297ce3754744ceb07107f6024c1a163",
        "bugFilePath": "flink-core/src/main/java/org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil.java",
        "fixPatch": "diff --git a/flink-core/src/main/java/org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil.java b/flink-core/src/main/java/org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil.java\nindex 110b2ab..0bcff93 100644\n--- a/flink-core/src/main/java/org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil.java\n+++ b/flink-core/src/main/java/org/apache/flink/api/common/typeutils/TypeSerializerSnapshotSerializationUtil.java\n@@ -149,7 +149,7 @@\n \t\t\tClass<? extends TypeSerializerSnapshot> serializerConfigSnapshotClass;\n \t\t\ttry {\n \t\t\t\tserializerConfigSnapshotClass = (Class<? extends TypeSerializerSnapshot>)\n-\t\t\t\t\tClass.forName(serializerConfigClassname, true, userCodeClassLoader);\n+\t\t\t\t\tClass.forName(serializerConfigClassname, false, userCodeClassLoader);\n \t\t\t} catch (ClassNotFoundException e) {\n \t\t\t\tthrow new IOException(\n \t\t\t\t\t\"Could not find requested TypeSerializerConfigSnapshot class \"\n",
        "projectName": "apache.flink",
        "bugLineNum": 152,
        "bugNodeStartChar": 6032,
        "bugNodeLength": 67,
        "fixLineNum": 152,
        "fixNodeStartChar": 6032,
        "fixNodeLength": 68,
        "sourceBeforeFix": "Class.forName(serializerConfigClassname,true,userCodeClassLoader)",
        "sourceAfterFix": "Class.forName(serializerConfigClassname,false,userCodeClassLoader)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1190,
        "bugNodeStartChar": 63801,
        "bugNodeLength": 130,
        "fixLineNum": 1190,
        "fixNodeStartChar": 63801,
        "fixNodeLength": 130,
        "sourceBeforeFix": "DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))",
        "sourceAfterFix": "DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages/sent.json\",new PostParameter[0],true))"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b8f47f506adeb28b8465119057673be4eb0b8015",
        "fixCommitParentSHA1": "1ec01527a3cc01a8ef3f35de391ad752667e9203",
        "bugFilePath": "core/common/src/main/java/alluxio/collections/IndexedSet.java",
        "fixPatch": "diff --git a/core/common/src/main/java/alluxio/collections/IndexedSet.java b/core/common/src/main/java/alluxio/collections/IndexedSet.java\nindex 12251c3..35a4156 100644\n--- a/core/common/src/main/java/alluxio/collections/IndexedSet.java\n+++ b/core/common/src/main/java/alluxio/collections/IndexedSet.java\n@@ -165,7 +165,7 @@\n    */\n   @Override\n   public boolean add(T object) {\n-    Preconditions.checkNotNull(object);\n+    Preconditions.checkNotNull(object, \"object\");\n \n     // Locking this object protects against removing the exact object, but does not protect against\n     // removing a distinct, but equivalent object.\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 168,
        "bugNodeStartChar": 5376,
        "bugNodeLength": 34,
        "fixLineNum": 168,
        "fixNodeStartChar": 5376,
        "fixNodeLength": 44,
        "sourceBeforeFix": "Preconditions.checkNotNull(object)",
        "sourceAfterFix": "Preconditions.checkNotNull(object,\"object\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "76d69ac2d17de5b0b7212cc9109ed99a76d54aec",
        "fixCommitParentSHA1": "5864b18cd4850f8b33d6594554f8d2ef57491e8d",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\nindex c627724..30bcee1 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java\n@@ -533,7 +533,7 @@\n \t\t\t\tfloat radius2 = radiusX * radiusX;\r\n \t\t\t\twhile (true) {\r\n \t\t\t\t\tfloat px = MathUtils.random(width) - radiusX;\r\n-\t\t\t\t\tfloat py = MathUtils.random(height) - radiusY;\r\n+\t\t\t\t\tfloat py = MathUtils.random(width) - radiusX;\r\n \t\t\t\t\tif (px * px + py * py <= radius2) {\r\n \t\t\t\t\t\tx += px;\r\n \t\t\t\t\t\ty += py / scaleY;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 536,
        "bugNodeStartChar": 18471,
        "bugNodeLength": 24,
        "fixLineNum": 536,
        "fixNodeStartChar": 17936,
        "fixNodeLength": 23,
        "sourceBeforeFix": "MathUtils.random(height)",
        "sourceAfterFix": "MathUtils.random(width)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0af154afd196d10f969a1cb9adb01b04cbdba2ad",
        "fixCommitParentSHA1": "1ea49f4fec5cc54b4e0b839b3599a1ee32dac690",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/impl/RedoNoConnectionTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/impl/RedoNoConnectionTest.java b/hazelcast/src/test/java/com/hazelcast/impl/RedoNoConnectionTest.java\nindex 3d472d9..1b29b8d 100644\n--- a/hazelcast/src/test/java/com/hazelcast/impl/RedoNoConnectionTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/impl/RedoNoConnectionTest.java\n@@ -100,7 +100,7 @@\n         config.setProperty(GroupProperties.PROP_HEARTBEAT_INTERVAL_SECONDS, \"6\");\n         final HazelcastInstance h1 = Hazelcast.newHazelcastInstance(config);\n         final HazelcastInstance h2 = Hazelcast.newHazelcastInstance(config);\n-        BeforeAfterTester t = new BeforeAfterTester(\n+        Runnable t = new RunAfterTester(\n                 new DisconnectionBehavior(h1, h2),\n                 new MultiCallBuilder(h1));\n         t.run();\n@@ -112,7 +112,7 @@\n         config.setProperty(GroupProperties.PROP_HEARTBEAT_INTERVAL_SECONDS, \"6\");\n         final HazelcastInstance h1 = Hazelcast.newHazelcastInstance(config);\n         final HazelcastInstance h2 = Hazelcast.newHazelcastInstance(config);\n-        BeforeAfterTester t = new BeforeAfterTester(\n+        Runnable t = new RunAfterTester(\n                 new DisconnectionBehavior(h2, h1),\n                 new MultiCallBuilder(h2));\n         t.run();\n@@ -139,7 +139,7 @@\n         config.setProperty(GroupProperties.PROP_HEARTBEAT_INTERVAL_SECONDS, \"6\");\n         final HazelcastInstance h1 = Hazelcast.newHazelcastInstance(config);\n         final HazelcastInstance h2 = Hazelcast.newHazelcastInstance(config);\n-        BeforeAfterTester t = new BeforeAfterTester(\n+        Runnable t = new RunAfterTester(\n                 new DisconnectionBehavior(h2, h1),\n                 new QueueCallBuilder(h2));\n         t.run();\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 103,
        "bugNodeStartChar": 3994,
        "bugNodeLength": 138,
        "fixLineNum": 103,
        "fixNodeStartChar": 3994,
        "fixNodeLength": 126,
        "sourceBeforeFix": "BeforeAfterTester t=new BeforeAfterTester(new DisconnectionBehavior(h1,h2),new MultiCallBuilder(h1)); ",
        "sourceAfterFix": "Runnable t=new RunAfterTester(new DisconnectionBehavior(h1,h2),new MultiCallBuilder(h1)); "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "72ea162a10fc698c1394aef87d295883c990b993",
        "fixCommitParentSHA1": "306ba836690fc8fb30384d4b351eb5b77cef1818",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/SearchAPITest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\nindex 27958a0..677c67e 100644\n--- a/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/SearchAPITest.java\n@@ -65,7 +65,7 @@\n     public void testSearch() throws Exception {\n         String queryStr = \"test\";\n         SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n-        String dateStr = format.format(new java.util.Date());\n+        String dateStr = format.format(new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000));\n         Query query = new Query(queryStr).until(dateStr);\n         QueryResult queryResult = unauthenticated.search(query);\n         assertTrue(\"sinceId\", -1 != queryResult.getSinceId());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 68,
        "bugNodeStartChar": 2835,
        "bugNodeLength": 20,
        "fixLineNum": 68,
        "fixNodeStartChar": 2835,
        "fixNodeLength": 65,
        "sourceBeforeFix": "new java.util.Date()",
        "sourceAfterFix": "new java.util.Date(System.currentTimeMillis() - 24 * 3600 * 1000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "b9c0d31c3c2d6d6e91791308db92fd6a1cb5db43",
        "fixCommitParentSHA1": "41ab0faeedc4873d0ea32b20250e3ae913e96bbe",
        "bugFilePath": "testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\nindex 48a0618..e0a3493 100644\n--- a/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n+++ b/testsuite/integration/clust/src/test/java/org/jboss/as/test/clustering/cluster/ClusteredWebTestCase.java\n@@ -107,7 +107,7 @@\n             Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatusLine().getStatusCode());\n             Assert.assertEquals(2, Integer.parseInt(response.getFirstHeader(\"value\").getValue()));\n             // This won't be true unless we have somewhere to which to replicate\n-            Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n+            Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()));\n             response.getEntity().getContent().close();\n         } finally {\n             client.getConnectionManager().shutdown();\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 110,
        "bugNodeStartChar": 4726,
        "bugNodeLength": 85,
        "fixLineNum": 110,
        "fixNodeStartChar": 4726,
        "fixNodeLength": 84,
        "sourceBeforeFix": "Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))",
        "sourceAfterFix": "Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(\"serialized\").getValue()))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "5cdfcd29a2d89e658f5f37aad3deb6130eeb47af",
        "fixCommitParentSHA1": "50035429f8123e8be3c7068c4899e95c13b8bac3",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/container/version/Jetty9WebSocket.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty9WebSocket.java b/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty9WebSocket.java\nindex 1b9c05f..cd9c216 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty9WebSocket.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/container/version/Jetty9WebSocket.java\n@@ -38,13 +38,13 @@\n \n     @Override\n     public WebSocket write(String s) throws IOException {\n-        if (isOpen()) webSocketConnection.getRemote().sendString(s);\n+        if (isOpen()) webSocketConnection.getRemote().sendStringByFuture(s);\n         return this;\n     }\n \n     @Override\n     public WebSocket write(byte[] b, int offset, int length) throws IOException {\n-        if (isOpen()) webSocketConnection.getRemote().sendBytes(ByteBuffer.wrap(b, offset, length));\n+        if (isOpen()) webSocketConnection.getRemote().sendBytesByFuture(ByteBuffer.wrap(b, offset, length));\n         return this;\n     }\n \n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 47,
        "bugNodeStartChar": 1471,
        "bugNodeLength": 77,
        "fixLineNum": 47,
        "fixNodeStartChar": 1471,
        "fixNodeLength": 85,
        "sourceBeforeFix": "webSocketConnection.getRemote().sendBytes(ByteBuffer.wrap(b,offset,length))",
        "sourceAfterFix": "webSocketConnection.getRemote().sendBytesByFuture(ByteBuffer.wrap(b,offset,length))"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6b7e05a672ddf95bd7ee066e878ab90389f5b02c",
        "fixCommitParentSHA1": "40f49c0ae5059fa78f75df6c93d32ed10632170a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\nindex 89ef0ac..5306b51 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java\n@@ -292,7 +292,7 @@\n \t\tif (currentLocalTransform != renderable.localTransform)\n \t\t\tset(u_localTrans, (currentLocalTransform = renderable.localTransform) == null ? idtMatrix : renderable.localTransform);\n \t\tif (currentModelTransform != renderable.modelTransform)\n-\t\t\tset(u_modelTrans, (currentWorldTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n+\t\t\tset(u_modelTrans, (currentModelTransform = renderable.modelTransform) == null ? idtMatrix : renderable.modelTransform);\n \t\tif (currentLocalTransform == null && currentModelTransform == null)\n \t\t\tsetWorldTransform(idtMatrix, false);\n \t\telse if (currentLocalTransform == null)\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 295,
        "bugNodeStartChar": 13829,
        "bugNodeLength": 49,
        "fixLineNum": 295,
        "fixNodeStartChar": 13829,
        "fixNodeLength": 49,
        "sourceBeforeFix": "currentWorldTransform=renderable.modelTransform",
        "sourceAfterFix": "currentModelTransform=renderable.modelTransform"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "97b70880908a85c9832f93ef62f84a6d2929598b",
        "fixCommitParentSHA1": "b022f870ca1924542486655e3aa44a95cec61073",
        "bugFilePath": "library/src/com/nhaarman/listviewanimations/widget/DynamicListView.java",
        "fixPatch": "diff --git a/library/src/com/nhaarman/listviewanimations/widget/DynamicListView.java b/library/src/com/nhaarman/listviewanimations/widget/DynamicListView.java\nindex 151d9b9..b7a5647 100644\n--- a/library/src/com/nhaarman/listviewanimations/widget/DynamicListView.java\n+++ b/library/src/com/nhaarman/listviewanimations/widget/DynamicListView.java\n@@ -483,7 +483,7 @@\n                 return;\n             }\n \n-            if (getPositionForView(switchView) < getHeaderViewsCount()) {\n+            if (getPositionForView(switchView) < getHeaderViewsCount() || getPositionForView(switchView) >= (getAdapter().getCount() - getHeaderViewsCount() - getFooterViewsCount())) {\n                 return;\n             }\n             swapElements(originalItem, getPositionForView(switchView));\n",
        "projectName": "nhaarman.ListViewAnimations",
        "bugLineNum": 486,
        "bugNodeStartChar": 18609,
        "bugNodeLength": 54,
        "fixLineNum": 486,
        "fixNodeStartChar": 18609,
        "fixNodeLength": 165,
        "sourceBeforeFix": "getPositionForView(switchView) < getHeaderViewsCount()",
        "sourceAfterFix": "getPositionForView(switchView) < getHeaderViewsCount() || getPositionForView(switchView) >= (getAdapter().getCount() - getHeaderViewsCount() - getFooterViewsCount())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "8a91b07d5ab85b6bf100a36c5e26e6297a7f3a2a",
        "fixCommitParentSHA1": "3422308f542222d4d4ce64231ba75ff39764bc8e",
        "bugFilePath": "flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java",
        "fixPatch": "diff --git a/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java b/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\nindex 00123f5..c18adb1 100644\n--- a/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\n+++ b/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java\n@@ -148,7 +148,7 @@\n \t\t\t\treturn element;\n \t\t\t}\n \t\t} catch (IOException e) {\n-\t\t\tthrow new FlinkRuntimeException(\"Unexpected list element deserialization failure\");\n+\t\t\tthrow new FlinkRuntimeException(\"Unexpected list element deserialization failure\", e);\n \t\t}\n \t\treturn null;\n \t}\n",
        "projectName": "apache.flink",
        "bugLineNum": 151,
        "bugNodeStartChar": 4966,
        "bugNodeLength": 76,
        "fixLineNum": 151,
        "fixNodeStartChar": 4966,
        "fixNodeLength": 79,
        "sourceBeforeFix": "new FlinkRuntimeException(\"Unexpected list element deserialization failure\")",
        "sourceAfterFix": "new FlinkRuntimeException(\"Unexpected list element deserialization failure\",e)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "35bb9eb5c0f3b2b4a2e7c212cdd97edeca4b0594",
        "fixCommitParentSHA1": "718d7821a7793145e8cd520cecec3b3eecca74fa",
        "bugFilePath": "twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java",
        "fixPatch": "diff --git a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\nindex 51787f4..17a06ec 100644\n--- a/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n+++ b/twitter4j-core/src/test/java/twitter4j/FavoriteMethodsTest.java\n@@ -35,7 +35,7 @@\n     }\n \n     public void testFavoriteMethods() throws Exception {\n-        Status status = twitter1.getHomeTimeline(new Paging().count(1)).get(0);\n+        Status status = twitter1.getPublicTimeline().get(0);\n         assertNotNull(DataObjectFactory.getRawJSON(status));\n         assertEquals(status, DataObjectFactory.createStatus(DataObjectFactory.getRawJSON(status)));\n         status = twitter2.createFavorite(status.getId());\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 38,
        "bugNodeStartChar": 1115,
        "bugNodeLength": 47,
        "fixLineNum": 38,
        "fixNodeStartChar": 1115,
        "fixNodeLength": 28,
        "sourceBeforeFix": "twitter1.getHomeTimeline(new Paging().count(1))",
        "sourceAfterFix": "twitter1.getPublicTimeline()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "ae434b1f61ef3cf1fffeaa482b5ed2fd9462e2cd",
        "fixCommitParentSHA1": "2733d503c1d68068237588b4a1b876fd7af34c55",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/Meteor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/Meteor.java b/modules/cpr/src/main/java/org/atmosphere/cpr/Meteor.java\nindex 7fcaf08..1833276 100755\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/Meteor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/Meteor.java\n@@ -386,7 +386,7 @@\n      */\n     public void destroy() {\n         isDestroyed.set(true);\n-        cache.remove(this);\n+        cache.remove(r);\n     }\n \n     private boolean destroyed(){\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 389,
        "bugNodeStartChar": 13616,
        "bugNodeLength": 4,
        "fixLineNum": 389,
        "fixNodeStartChar": 13616,
        "fixNodeLength": 1,
        "sourceBeforeFix": "cache.remove(this)",
        "sourceAfterFix": "cache.remove(r)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d725e4c654270636bc7de92cc6d74683b1de29fe",
        "fixCommitParentSHA1": "2289bf56b2278c6145badc6cf53e4a919a79c661",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\nindex bc58b3e..d054b5c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/QueryPlanner.java\n@@ -388,7 +388,7 @@\n         boolean needPostProjectionCoercion = false;\n         for (FunctionCall aggregate : analysis.getAggregates(node)) {\n             Expression rewritten = subPlan.rewrite(aggregate);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(aggregate));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(aggregate));\n \n             // TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.\n             // Therefore we can end up with this implicit cast, and have to move it into a post-projection\n@@ -567,7 +567,7 @@\n \n             // Rewrite function call in terms of pre-projected inputs\n             Expression rewritten = subPlan.rewrite(windowFunction);\n-            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getType(windowFunction));\n+            Symbol newSymbol = symbolAllocator.newSymbol(rewritten, analysis.getTypeWithCoercions(windowFunction));\n \n             boolean needCoercion = rewritten instanceof Cast;\n             // Strip out the cast and add it back as a post-projection\n@@ -621,7 +621,7 @@\n \n         ImmutableMap.Builder<Symbol, Expression> newTranslations = ImmutableMap.builder();\n         for (Expression expression : expressions) {\n-            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getType(expression));\n+            Symbol symbol = symbolAllocator.newSymbol(expression, analysis.getTypeWithCoercions(expression));\n \n             projections.put(symbol, translations.rewrite(expression));\n             newTranslations.put(symbol, expression);\n",
        "projectName": "facebook.presto",
        "bugLineNum": 624,
        "bugNodeStartChar": 29163,
        "bugNodeLength": 28,
        "fixLineNum": 624,
        "fixNodeStartChar": 29163,
        "fixNodeLength": 41,
        "sourceBeforeFix": "analysis.getType(expression)",
        "sourceAfterFix": "analysis.getTypeWithCoercions(expression)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5d32900cdc433ee792808356695773ca24a4b94c",
        "fixCommitParentSHA1": "bbdfc98f918db1d58908f9c21378a2772e4f0910",
        "bugFilePath": "hazelcast/src/main/java/com/hazelcast/client/impl/protocol/ClientMessage.java",
        "fixPatch": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/ClientMessage.java b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/ClientMessage.java\nindex 582a38d..8619ab8 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/ClientMessage.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/protocol/ClientMessage.java\n@@ -64,7 +64,7 @@\n     /**\n      * Current protocol version\n      */\n-    public static final short VERSION = 0;\n+    public static final short VERSION = 1;\n \n     /**\n      * Begin Flag\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 67,
        "bugNodeStartChar": 2661,
        "bugNodeLength": 11,
        "fixLineNum": 67,
        "fixNodeStartChar": 2661,
        "fixNodeLength": 11,
        "sourceBeforeFix": "VERSION=0",
        "sourceAfterFix": "VERSION=1"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "3d3fda9c794011bca067f217e90b00437a7b2ec8",
        "fixCommitParentSHA1": "837ffc89474c530232804c801bc3126c65fa71f2",
        "bugFilePath": "modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/Qt5CPPGenerator.java",
        "fixPatch": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/Qt5CPPGenerator.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/Qt5CPPGenerator.java\nindex ff58dbd..13efbc3 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/Qt5CPPGenerator.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/Qt5CPPGenerator.java\n@@ -97,7 +97,9 @@\n                 Arrays.asList(\n                         \"bool\",\n                         \"qint32\",\n-                        \"qint64\")\n+                        \"qint64\",\n+                        \"float\",\n+                        \"double\")\n         );\n \n         supportingFiles.add(new SupportingFile(\"helpers-header.mustache\", sourceFolder, PREFIX + \"Helpers.h\"));\n",
        "projectName": "swagger-api.swagger-codegen",
        "bugLineNum": 97,
        "bugNodeStartChar": 3714,
        "bugNodeLength": 114,
        "fixLineNum": 97,
        "fixNodeStartChar": 3714,
        "fixNodeLength": 181,
        "sourceBeforeFix": "Arrays.asList(\"bool\",\"qint32\",\"qint64\")",
        "sourceAfterFix": "Arrays.asList(\"bool\",\"qint32\",\"qint64\",\"float\",\"double\")"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "c4a5cd208aef54ae5b292fa41c4880017315e553",
        "fixCommitParentSHA1": "88cb2692219dfba415e2e6c631077e0d0e8a7699",
        "bugFilePath": "src/jvm/clojure/lang/Compiler.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/Compiler.java b/src/jvm/clojure/lang/Compiler.java\nindex cb14d96..9d744d7 100644\n--- a/src/jvm/clojure/lang/Compiler.java\n+++ b/src/jvm/clojure/lang/Compiler.java\n@@ -971,7 +971,7 @@\n \tpublic void emitAssign(C context, FnExpr fn, GeneratorAdapter gen,\n \t                       Expr val){\n \t\tgen.visitLineNumber(line, gen.mark());\n-\t\tif(targetClass != null)\n+\t\tif(targetClass != null && field != null)\n \t\t\t{\n \t\t\ttarget.emit(C.EXPRESSION, fn, gen);\n \t\t\tgen.checkCast(Type.getType(targetClass));\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 974,
        "bugNodeStartChar": 30251,
        "bugNodeLength": 19,
        "fixLineNum": 974,
        "fixNodeStartChar": 30251,
        "fixNodeLength": 36,
        "sourceBeforeFix": "targetClass != null",
        "sourceAfterFix": "targetClass != null && field != null"
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "3a43345ad0a599659d462cfc14dba9d8c0553bbf",
        "fixCommitParentSHA1": "1928ef1ab8b474d03fcc43c04e7b75a6eb753e51",
        "bugFilePath": "graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java",
        "fixPatch": "diff --git a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\nindex 5785af1..5e5cee8 100644\n--- a/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n+++ b/graylog2-server/src/main/java/org/graylog2/periodical/ConfigurationManagementPeriodical.java\n@@ -75,7 +75,7 @@\n \n         // All default retention strategy settings\n         final ClosingRetentionStrategyConfig closingRetentionStrategyConfig = clusterConfigService.get(ClosingRetentionStrategyConfig.class);\n-        final DeletionRetentionStrategy deletionRetentionStrategy = clusterConfigService.get(DeletionRetentionStrategy.class);\n+        final DeletionRetentionStrategyConfig deletionRetentionStrategyConfig = clusterConfigService.get(DeletionRetentionStrategyConfig.class);\n \n         if (closingRetentionStrategyConfig == null) {\n             final ClosingRetentionStrategyConfig closingConfig = ClosingRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n@@ -83,7 +83,7 @@\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", closingConfig);\n         }\n \n-        if (deletionRetentionStrategy == null) {\n+        if (deletionRetentionStrategyConfig == null) {\n             final DeletionRetentionStrategyConfig deletionConfig = DeletionRetentionStrategyConfig.create(elasticsearchConfiguration.getMaxNumberOfIndices());\n             clusterConfigService.write(deletionConfig);\n             LOG.info(\"Migrated \\\"{}\\\" setting: {}\", \"elasticsearch_max_number_of_indices\", deletionConfig);\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 86,
        "bugNodeStartChar": 5050,
        "bugNodeLength": 33,
        "fixLineNum": 86,
        "fixNodeStartChar": 5050,
        "fixNodeLength": 39,
        "sourceBeforeFix": "deletionRetentionStrategy == null",
        "sourceAfterFix": "deletionRetentionStrategyConfig == null"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0cb756acf8ee44c28bee8b9ea626e2a65cee5880",
        "fixCommitParentSHA1": "60e108886fcb173ca21f3966965a0b57cf5b5797",
        "bugFilePath": "android/guava-tests/test/com/google/common/hash/HashTestUtils.java",
        "fixPatch": "diff --git a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\nindex f2b8971..8dfbdb0 100644\n--- a/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n+++ b/android/guava-tests/test/com/google/common/hash/HashTestUtils.java\n@@ -509,9 +509,9 @@\n     rng.nextBytes(bytes);\n     ByteBuffer littleEndian = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n-    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(littleEndian));\n+    assertEquals(hashFunction.hashBytes(littleEndian), hashFunction.hashBytes(bigEndian));\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHasherByteBufferPreservesByteOrder(HashFunction hashFunction) {\n@@ -522,9 +522,9 @@\n     ByteBuffer bigEndian = ByteBuffer.wrap(bytes).order(ByteOrder.BIG_ENDIAN);\n     assertEquals(\n         hashFunction.newHasher().putBytes(littleEndian).hash(),\n-        hashFunction.newHasher().putBytes(littleEndian).hash());\n+        hashFunction.newHasher().putBytes(bigEndian).hash());\n     assertEquals(ByteOrder.LITTLE_ENDIAN, littleEndian.order());\n-    assertEquals(ByteOrder.BIG_ENDIAN, littleEndian.order());\n+    assertEquals(ByteOrder.BIG_ENDIAN, bigEndian.order());\n   }\n \n   static void assertHashBytesThrowsCorrectExceptions(HashFunction hashFunction) {\n",
        "projectName": "google.guava",
        "bugLineNum": 525,
        "bugNodeStartChar": 18762,
        "bugNodeLength": 47,
        "fixLineNum": 525,
        "fixNodeStartChar": 18762,
        "fixNodeLength": 44,
        "sourceBeforeFix": "hashFunction.newHasher().putBytes(littleEndian)",
        "sourceAfterFix": "hashFunction.newHasher().putBytes(bigEndian)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "f9fa3ea530d5743d26a3879e79ab67676e2a476b",
        "fixCommitParentSHA1": "80e6930bc330c3a0a41ccb0f8b9a488cd2ec17df",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\nindex a6f2e3f..3fed957 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java\n@@ -84,7 +84,7 @@\n \t * \n \t * @param file the FileHandle */\n \tpublic Model loadObj (FileHandle file) {\n-\t\treturn loadObj(file, false);\n+\t\treturn loadModel(file);\n \t}\n \n \t/** @deprecated Use {@link ObjLoader#loadModel(FileHandle, boolean)} instead.<p>\n@@ -94,7 +94,7 @@\n \t * @param flipV whether to flip the v texture coordinate (Blender, Wings3D, et al) \n \t * */\n \tpublic Model loadObj (FileHandle file, boolean flipV) {\n-\t\treturn new Model(loadModelData(file, flipV));\n+\t\treturn loadModel(file, flipV);\n \t}\n \t\n \t/** Directly load the model on the calling thread. The model with not be managed by an {@link AssetManager}. */\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 87,
        "bugNodeStartChar": 3446,
        "bugNodeLength": 20,
        "fixLineNum": 87,
        "fixNodeStartChar": 3446,
        "fixNodeLength": 15,
        "sourceBeforeFix": "loadObj(file,false)",
        "sourceAfterFix": "loadModel(file)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "347894fc4ee82d26280c3a95665fdee04fb48966",
        "fixCommitParentSHA1": "d9559d3f29568c720cd967b2abf0e47745a33a36",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\nindex e8e5fe4..c67449e 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/AddNodeMessageClass.java\n@@ -88,14 +88,14 @@\n \t\t\tbreak;\n \t\tcase ADD_NODE_STATUS_DONE:\n \t\t\tlogger.debug(\"Done.\");\n-\t\t\tzController.sendData(doRequestStop());\n+\t\t\tzController.enqueue(doRequestStop());\n \t\t\t// If the node ID is 0, ignore!\n \t\t\tif(incomingMessage.getMessagePayloadByte(2) != 0)\n \t\t\t\tzController.notifyEventListeners(new ZWaveInclusionEvent(ZWaveInclusionEvent.Type.IncludeDone, incomingMessage.getMessagePayloadByte(2)));\n \t\t\tbreak;\n \t\tcase ADD_NODE_STATUS_FAILED:\n \t\t\tlogger.debug(\"Failed.\");\n-\t\t\tzController.sendData(doRequestStop());\n+\t\t\tzController.enqueue(doRequestStop());\n \t\t\tzController.notifyEventListeners(new ZWaveInclusionEvent(ZWaveInclusionEvent.Type.IncludeFail));\n \t\t\tbreak;\n \t\tdefault:\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 91,
        "bugNodeStartChar": 4003,
        "bugNodeLength": 37,
        "fixLineNum": 91,
        "fixNodeStartChar": 4003,
        "fixNodeLength": 36,
        "sourceBeforeFix": "zController.sendData(doRequestStop())",
        "sourceAfterFix": "zController.enqueue(doRequestStop())"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "313d81ca2fb88a734f46e0e144d5a1a44ee1c4cd",
        "fixCommitParentSHA1": "d4ca805cb915e064a7b82fc9f0f3cafb6a947179",
        "bugFilePath": "server/src/test/java/io/druid/server/coordination/ServerManagerTest.java",
        "fixPatch": "diff --git a/server/src/test/java/io/druid/server/coordination/ServerManagerTest.java b/server/src/test/java/io/druid/server/coordination/ServerManagerTest.java\nindex 72a15d9..34f1df0 100644\n--- a/server/src/test/java/io/druid/server/coordination/ServerManagerTest.java\n+++ b/server/src/test/java/io/druid/server/coordination/ServerManagerTest.java\n@@ -315,7 +315,7 @@\n         )\n     );\n \n-    Assert.assertTrue(\"Operation must complete within 100ms\", queryNotifyLatch.await(100, TimeUnit.MILLISECONDS));\n+    queryNotifyLatch.await();\n \n     Assert.assertEquals(1, factory.getSegmentReferences().size());\n \n@@ -720,7 +720,7 @@\n       notifyLatch.countDown();\n \n       try {\n-        waitYieldLatch.await(25, TimeUnit.MILLISECONDS);\n+        waitYieldLatch.await();\n       }\n       catch (Exception e) {\n         throw Throwables.propagate(e);\n@@ -733,7 +733,7 @@\n         public OutType get()\n         {\n           try {\n-            waitLatch.await(25, TimeUnit.MILLISECONDS);\n+            waitLatch.await();\n           }\n           catch (Exception e) {\n             throw Throwables.propagate(e);\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 723,
        "bugNodeStartChar": 23094,
        "bugNodeLength": 47,
        "fixLineNum": 723,
        "fixNodeStartChar": 23094,
        "fixNodeLength": 22,
        "sourceBeforeFix": "waitYieldLatch.await(25,TimeUnit.MILLISECONDS)",
        "sourceAfterFix": "waitYieldLatch.await()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e3e1fea787147261448e30c1745d9157f442cb9f",
        "fixCommitParentSHA1": "17e56f9c6b1e650c1ea9190d479ad390111234f1",
        "bugFilePath": "src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java",
        "fixPatch": "diff --git a/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java b/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\nindex b2a70da..8eff86f 100644\n--- a/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\n+++ b/src/test/java/com/alibaba/json/bvt/basicType/FloatTest3_random.java\n@@ -26,7 +26,7 @@\n     public void test_ran_2() throws Exception {\n         Random rand = new Random();\n \n-        for (int i = 0; i < 1000 * 1000 * 10; ++i) {\n+        for (int i = 0; i < 1000 * 1000 * 1; ++i) {\n             float val = rand.nextFloat();\n \n             String str = JSON.toJSONString(new Model(val), SerializerFeature.BeanToArray);\n",
        "projectName": "alibaba.fastjson",
        "bugLineNum": 29,
        "bugNodeStartChar": 810,
        "bugNodeLength": 16,
        "fixLineNum": 29,
        "fixNodeStartChar": 810,
        "fixNodeLength": 15,
        "sourceBeforeFix": "1000 * 1000 * 10",
        "sourceAfterFix": "1000 * 1000 * 1"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f2188d334cf2e91dbd62f84aeba025186738f4ea",
        "fixCommitParentSHA1": "f364a44fa21c90120749de4335ce1cee4215536d",
        "bugFilePath": "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java",
        "fixPatch": "diff --git a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\nindex d5889fa..94148e6 100644\n--- a/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n+++ b/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/AnnotationPropertyValuesAdapterTest.java\n@@ -113,7 +113,7 @@\n         Assert.assertEquals(\"ondisconnect\", referenceBean.getOndisconnect());\n         Assert.assertEquals(\"owner\", referenceBean.getOwner());\n         Assert.assertEquals(\"layer\", referenceBean.getLayer());\n-        Assert.assertEquals(Integer.valueOf(2), referenceBean.getRetries());\n+        Assert.assertEquals(Integer.valueOf(1), referenceBean.getRetries());\n         Assert.assertEquals(\"random\", referenceBean.getLoadbalance());\n         Assert.assertEquals(true, referenceBean.isAsync());\n         Assert.assertEquals(Integer.valueOf(1), referenceBean.getActives());\n@@ -147,7 +147,7 @@\n                 check = false, init = true, lazy = true, stubevent = true,\n                 reconnect = \"reconnect\", sticky = true, proxy = \"javassist\", stub = \"stub\",\n                 cluster = \"failover\", connections = 1, callbacks = 1, onconnect = \"onconnect\",\n-                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 2,\n+                ondisconnect = \"ondisconnect\", owner = \"owner\", layer = \"layer\", retries = 1,\n                 loadbalance = \"random\", async = true, actives = 1, sent = true,\n                 mock = \"mock\", validation = \"validation\", timeout = 2, cache = \"cache\",\n                 filter = {\"default\", \"default\"}, listener = {\"default\", \"default\"}, parameters = {\"key1\", \"value1\"}, application = \"application\",\n",
        "projectName": "alibaba.dubbo",
        "bugLineNum": 116,
        "bugNodeStartChar": 4899,
        "bugNodeLength": 18,
        "fixLineNum": 116,
        "fixNodeStartChar": 4899,
        "fixNodeLength": 18,
        "sourceBeforeFix": "Integer.valueOf(2)",
        "sourceAfterFix": "Integer.valueOf(1)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "8c267e67579f089ec1415933f9111036fc21c3bb",
        "fixCommitParentSHA1": "b0f9c74e291ac47332441fc25bf6d9411db12967",
        "bugFilePath": "DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java",
        "fixPatch": "diff --git a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\nindex 1218bdd..ffb53da 100644\n--- a/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n+++ b/DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java\n@@ -100,7 +100,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.saved\", fileName));\n             }\n         };\n-        if (saveRunnable instanceof LongTask) {\n+        if (saveTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) saveTask, saveRunnable);\n         } else {\n             longTaskExecutor.execute(null, saveRunnable);\n@@ -291,7 +291,7 @@\n                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, \"ProjectControllerUI.status.opened\", fileName));\n             }\n         };\n-        if (loadRunnable instanceof LongTask) {\n+        if (loadTask instanceof LongTask) {\n             longTaskExecutor.execute((LongTask) loadTask, loadRunnable);\n         } else {\n             longTaskExecutor.execute(null, loadRunnable);\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 103,
        "bugNodeStartChar": 3766,
        "bugNodeLength": 32,
        "fixLineNum": 103,
        "fixNodeStartChar": 3766,
        "fixNodeLength": 28,
        "sourceBeforeFix": "saveRunnable instanceof LongTask",
        "sourceAfterFix": "saveTask instanceof LongTask"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "626cf14a6e42fa0a2d144e8e16940e09bafd754a",
        "fixCommitParentSHA1": "a95d9c46e2f7bb9bec968f8392ac62ccda6c0283",
        "bugFilePath": "indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/SimpleResourceManagementStrategy.java",
        "fixPatch": "diff --git a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/SimpleResourceManagementStrategy.java b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/SimpleResourceManagementStrategy.java\nindex 4451d68..2546d7e 100644\n--- a/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/SimpleResourceManagementStrategy.java\n+++ b/indexing-service/src/main/java/com/metamx/druid/indexing/coordinator/scaling/SimpleResourceManagementStrategy.java\n@@ -72,7 +72,7 @@\n   public boolean doProvision(Collection<RemoteTaskRunnerWorkItem> pendingTasks, Collection<ZkWorker> zkWorkers)\n   {\n     if (zkWorkers.size() >= workerSetupdDataRef.get().getMaxNumWorkers()) {\n-      log.info(\n+      log.debug(\n           \"Cannot scale anymore. Num workers = %d, Max num workers = %d\",\n           zkWorkers.size(),\n           workerSetupdDataRef.get().getMaxNumWorkers()\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 75,
        "bugNodeStartChar": 3053,
        "bugNodeLength": 174,
        "fixLineNum": 75,
        "fixNodeStartChar": 3053,
        "fixNodeLength": 175,
        "sourceBeforeFix": "log.info(\"Cannot scale anymore. Num workers = %d, Max num workers = %d\",zkWorkers.size(),workerSetupdDataRef.get().getMaxNumWorkers())",
        "sourceAfterFix": "log.debug(\"Cannot scale anymore. Num workers = %d, Max num workers = %d\",zkWorkers.size(),workerSetupdDataRef.get().getMaxNumWorkers())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a076b497cd3ad3b559d00c145d3504441472a48b",
        "fixCommitParentSHA1": "5168af0501d022ffdf38b961f190fb22a9fbb862",
        "bugFilePath": "DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java",
        "fixPatch": "diff --git a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\nindex 26ef2a1..364400f 100644\n--- a/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n+++ b/DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java\n@@ -93,7 +93,7 @@\n     public int getDegree(Node node) {\n         view.checkUpdate();\n         AbstractNode absNode = checkNode(node);\n-        int count = view.getClusteredLayerInDegree(absNode);\n+        int count = view.getClusteredLayerDegree(absNode);\n         return count;\n     }\n \n",
        "projectName": "gephi.gephi",
        "bugLineNum": 96,
        "bugNodeStartChar": 3744,
        "bugNodeLength": 39,
        "fixLineNum": 96,
        "fixNodeStartChar": 3744,
        "fixNodeLength": 37,
        "sourceBeforeFix": "view.getClusteredLayerInDegree(absNode)",
        "sourceAfterFix": "view.getClusteredLayerDegree(absNode)"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "dd20434290eb6ae6dff133d70073e35a3998d362",
        "fixCommitParentSHA1": "cb0dee8b09d8cd27f0b817b0317b68501fbac924",
        "bugFilePath": "clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java",
        "fixPatch": "diff --git a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\nindex 989bda8..92adc88 100644\n--- a/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n+++ b/clients/unshaded/src/main/java/tachyon/client/file/FileInStream.java\n@@ -121,7 +121,7 @@\n       try {\n         mCurrentCacheStream.write(data);\n       } catch (IOException ioe) {\n-        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\", ioe);\n+        LOG.warn(\"Block of ID \" + getCurrentBlockId() + \" could not be cached into Tachyon\");\n         mShouldCacheCurrentBlock = false;\n       }\n     }\n@@ -158,7 +158,7 @@\n           mCurrentCacheStream.write(b, currentOffset, bytesRead);\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write into TachyonStorage, the block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -232,7 +232,7 @@\n                      NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to get TachyonStore stream, the block \" + currentBlockId\n-              + \" will not be in TachyonStorage\", ioe);\n+              + \" will not be in TachyonStorage\");\n           mShouldCacheCurrentBlock = false;\n         }\n       }\n@@ -292,7 +292,7 @@\n                       NetworkAddressUtils.getLocalHostName(ClientContext.getConf()));\n         } catch (IOException ioe) {\n           LOG.warn(\"Failed to write to TachyonStore stream, block \" + getCurrentBlockId()\n-              + \" will not be in TachyonStorage.\", ioe);\n+              + \" will not be in TachyonStorage.\");\n           mShouldCacheCurrentBlock = false;\n         }\n       } else {\n@@ -318,14 +318,14 @@\n           mContext.getTachyonBlockStore().promote(blockId);\n         } catch (IOException ioe) {\n           // Failed to promote\n-          LOG.warn(\"Promotion of block \" + blockId + \" failed.\", ioe);\n+          LOG.warn(\"Promotion of block \" + blockId + \" failed.\");\n         }\n       }\n       mCurrentBlockInStream = mContext.getTachyonBlockStore().getInStream(blockId);\n       mShouldCacheCurrentBlock =\n           !(mCurrentBlockInStream instanceof LocalBlockInStream) && mTachyonStorageType.isStore();\n     } catch (IOException ioe) {\n-      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead\", ioe);\n+      LOG.debug(\"Failed to get BlockInStream for \" + blockId + \", using ufs instead.\");\n       if (!mFileInfo.isPersisted) {\n         LOG.error(\"Could not obtain data for \" + blockId\n             + \" from Tachyon and data is not persisted in under storage.\");\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 321,
        "bugNodeStartChar": 11493,
        "bugNodeLength": 59,
        "fixLineNum": 321,
        "fixNodeStartChar": 11493,
        "fixNodeLength": 54,
        "sourceBeforeFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\",ioe)",
        "sourceAfterFix": "LOG.warn(\"Promotion of block \" + blockId + \" failed.\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0c797c7035998e70bc194c801f44d44cfac2effe",
        "fixCommitParentSHA1": "a189f64d0a71258c860aa5e8949a1a94f3444234",
        "bugFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNestedTryDepthTest.java",
        "fixPatch": "diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNestedTryDepthTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNestedTryDepthTest.java\nindex 65963dd..5a79a6a 100644\n--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNestedTryDepthTest.java\n+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionNestedTryDepthTest.java\n@@ -28,7 +28,7 @@\n import com.puppycrawl.tools.checkstyle.DefaultConfiguration;\n import com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck;\n \n-public class XpathRegressionNestedTryDepthTest extends AbstractXpathTestSupport {\n+public class XpathRegressionNestedTryDepthTest extends XpathTestSupport {\n \n     @Test\n     public void testCorrect() throws Exception {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 31,
        "bugNodeStartChar": 1316,
        "bugNodeLength": 1054,
        "fixLineNum": 31,
        "fixNodeStartChar": 1316,
        "fixNodeLength": 1046,
        "sourceBeforeFix": "public class XpathRegressionNestedTryDepthTest extends AbstractXpathTestSupport {   @Test public void testCorrect() throws Exception {     final String checkName=NestedTryDepthCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionNestedTryDepth.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(NestedTryDepthCheck.class);     final String[] expectedViolation={\"7:17: \" + getCheckMessage(NestedTryDepthCheck.class,NestedTryDepthCheck.MSG_KEY,2,1)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionNestedTryDepth']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/SLIST/LITERAL_TRY/SLIST/LITERAL_TRY/SLIST/LITERAL_TRY\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } ",
        "sourceAfterFix": "public class XpathRegressionNestedTryDepthTest extends XpathTestSupport {   @Test public void testCorrect() throws Exception {     final String checkName=NestedTryDepthCheck.class.getSimpleName();     final File fileToProcess=new File(getPath(checkName,\"SuppressionXpathRegressionNestedTryDepth.java\"));     final DefaultConfiguration moduleConfig=createModuleConfig(NestedTryDepthCheck.class);     final String[] expectedViolation={\"7:17: \" + getCheckMessage(NestedTryDepthCheck.class,NestedTryDepthCheck.MSG_KEY,2,1)};     final List<String> expectedXpathQueries=Collections.singletonList(\"/CLASS_DEF[@text='SuppressionXpathRegressionNestedTryDepth']/OBJBLOCK\" + \"/METHOD_DEF[@text='test']/SLIST/LITERAL_TRY/SLIST/LITERAL_TRY/SLIST/LITERAL_TRY\");     runVerifications(moduleConfig,fileToProcess,expectedViolation,expectedXpathQueries);   } } "
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "db28d9720672b0198731ddf5d4427fd90b01610c",
        "fixCommitParentSHA1": "92e20f9f493b23a15a655d1466c0ae207ef16aea",
        "bugFilePath": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java",
        "fixPatch": "diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java\nindex 8f8f98a..c4ea2b1 100644\n--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java\n+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java\n@@ -727,7 +727,7 @@\n         LOG.warn(\"Failed flushing store file, retring num=\" + i, e);\n         lastException = e;\n       }\n-      if (lastException != null) {\n+      if (lastException != null && i < (flushRetriesNumber - 1)) {\n         try {\n           Thread.sleep(pauseTime);\n         } catch (InterruptedException e) {\n",
        "projectName": "apache.hbase",
        "bugLineNum": 730,
        "bugNodeStartChar": 26556,
        "bugNodeLength": 21,
        "fixLineNum": 730,
        "fixNodeStartChar": 26556,
        "fixNodeLength": 53,
        "sourceBeforeFix": "lastException != null",
        "sourceAfterFix": "lastException != null && i < (flushRetriesNumber - 1)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "453488cff2a54f32c573589f1cfc47bbf30ebe09",
        "fixCommitParentSHA1": "015b30c3ab0231f316f318417c69c869fc10f9f0",
        "bugFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
        "fixPatch": "diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\nindex 130cfd4..c209873 100644\n--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\n+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java\n@@ -200,7 +200,8 @@\n         this.configurationProvider.getConfigurationInputStream(this.conf,\n             YarnConfiguration.CORE_SITE_CONFIGURATION_FILE);\n     if (coreSiteXMLInputStream != null) {\n-      this.conf.addResource(coreSiteXMLInputStream);\n+      this.conf.addResource(coreSiteXMLInputStream,\n+          YarnConfiguration.CORE_SITE_CONFIGURATION_FILE);\n     }\n \n     // Do refreshUserToGroupsMappings with loaded core-site.xml\n@@ -218,7 +219,8 @@\n         this.configurationProvider.getConfigurationInputStream(this.conf,\n             YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n     if (yarnSiteXMLInputStream != null) {\n-      this.conf.addResource(yarnSiteXMLInputStream);\n+      this.conf.addResource(yarnSiteXMLInputStream,\n+          YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n     }\n \n     validateConfigs(this.conf);\n",
        "projectName": "apache.hadoop",
        "bugLineNum": 221,
        "bugNodeStartChar": 10096,
        "bugNodeLength": 45,
        "fixLineNum": 221,
        "fixNodeStartChar": 10096,
        "fixNodeLength": 103,
        "sourceBeforeFix": "this.conf.addResource(yarnSiteXMLInputStream)",
        "sourceAfterFix": "this.conf.addResource(yarnSiteXMLInputStream,YarnConfiguration.YARN_SITE_CONFIGURATION_FILE)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "a18c3d7297c81147d0fdf619ba0d4a85fc408726",
        "fixCommitParentSHA1": "531f32882a439a7b98fd06b3b420b22f3d0cafd2",
        "bugFilePath": "titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java",
        "fixPatch": "diff --git a/titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java b/titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java\nindex 9217cbb..15087fd 100644\n--- a/titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java\n+++ b/titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java\n@@ -231,7 +231,7 @@\n                 throw new TemporaryStorageException(ee);\n             }\n         } else { // check if compression was enabled, if not - enable it\n-            if (cf.getCompressionType() == null) {\n+            if (cf.getCompressionType() == null || cf.getCompressionType() == Compression.Algorithm.NONE) {\n                 try {\n                     adm.disableTable(tableName);\n \n",
        "projectName": "thinkaurelius.titan",
        "bugLineNum": 234,
        "bugNodeStartChar": 8889,
        "bugNodeLength": 31,
        "fixLineNum": 234,
        "fixNodeStartChar": 8889,
        "fixNodeLength": 88,
        "sourceBeforeFix": "cf.getCompressionType() == null",
        "sourceAfterFix": "cf.getCompressionType() == null || cf.getCompressionType() == Compression.Algorithm.NONE"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "359aa1a0740d2b47d6ebdc70377b9fbdfa42c5df",
        "fixCommitParentSHA1": "6ff57f53f8169caa1202a1d63caca0c699a6ae2b",
        "bugFilePath": "dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java",
        "fixPatch": "diff --git a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\nindex d0c6746..27ecf3d 100644\n--- a/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n+++ b/dbsync/src/test/java/com/taobao/tddl/dbsync/binlog/BaseLogFetcherTest.java\n@@ -68,7 +68,7 @@\n                     // update\u9700\u8981\u5904\u7406before/after\n                     System.out.println(\"-------> before\");\n                     parseOneRow(event, buffer, columns, false);\n-                    if (!buffer.nextOneRow(changeColumns)) {\n+                    if (!buffer.nextOneRow(changeColumns, true)) {\n                         break;\n                     }\n                     System.out.println(\"-------> after\");\n@@ -97,7 +97,7 @@\n             }\n \n             ColumnInfo info = columnInfo[i];\n-            buffer.nextValue(info.type, info.meta);\n+            buffer.nextValue(null , i ,info.type, info.meta);\n \n             if (buffer.isNull()) {\n                 //\n",
        "projectName": "alibaba.canal",
        "bugLineNum": 100,
        "bugNodeStartChar": 4632,
        "bugNodeLength": 38,
        "fixLineNum": 100,
        "fixNodeStartChar": 4632,
        "fixNodeLength": 48,
        "sourceBeforeFix": "buffer.nextValue(info.type,info.meta)",
        "sourceAfterFix": "buffer.nextValue(null,i,info.type,info.meta)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d3e163dbea08a905f9b0ee0bbc89da7e89d03d20",
        "fixCommitParentSHA1": "a66fcb1328eecd41eebdf6be8e93cb4810971ace",
        "bugFilePath": "dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java",
        "fixPatch": "diff --git a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\nindex 29a8835..91707e6 100644\n--- a/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n+++ b/dropwizard-core/src/main/java/com/yammer/dropwizard/config/HttpConfiguration.java\n@@ -64,7 +64,7 @@\n \n     @NotNull\n     @JsonProperty\n-    private Duration maxIdleTime = Duration.seconds(1);\n+    private Duration maxIdleTime = Duration.seconds(200);\n \n     @Min(1)\n     @Max(128)\n",
        "projectName": "dropwizard.dropwizard",
        "bugLineNum": 67,
        "bugNodeStartChar": 1622,
        "bugNodeLength": 19,
        "fixLineNum": 67,
        "fixNodeStartChar": 1622,
        "fixNodeLength": 21,
        "sourceBeforeFix": "Duration.seconds(1)",
        "sourceAfterFix": "Duration.seconds(200)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "d10dd137149cea58a3b085abe116a1ca2cb69b67",
        "fixCommitParentSHA1": "1be439485502e0fd556e01139cf3b2481c05cc8f",
        "bugFilePath": "spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java",
        "fixPatch": "diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java\nindex 0a53cb1..29c98bb 100644\n--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java\n+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/ConfigurationPropertiesReportEndpoint.java\n@@ -192,7 +192,7 @@\n \t */\n \tprivate void applyCglibFilters(ObjectMapper mapper) {\n \t\tmapper.setAnnotationIntrospector(new CglibAnnotationIntrospector());\n-\t\tmapper.setFilters(new SimpleFilterProvider().addFilter(CGLIB_FILTER_ID,\n+\t\tmapper.setFilterProvider(new SimpleFilterProvider().addFilter(CGLIB_FILTER_ID,\n \t\t\t\tnew CglibBeanPropertyFilter()));\n \t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 195,
        "bugNodeStartChar": 7265,
        "bugNodeLength": 107,
        "fixLineNum": 195,
        "fixNodeStartChar": 7265,
        "fixNodeLength": 114,
        "sourceBeforeFix": "mapper.setFilters(new SimpleFilterProvider().addFilter(CGLIB_FILTER_ID,new CglibBeanPropertyFilter()))",
        "sourceAfterFix": "mapper.setFilterProvider(new SimpleFilterProvider().addFilter(CGLIB_FILTER_ID,new CglibBeanPropertyFilter()))"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "335a2826481725aabc86de8068909060894a274b",
        "fixCommitParentSHA1": "181b54515ed2701a25d4a71fa7ed52394b2aeb66",
        "bugFilePath": "flink-batch-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCOutputFormat.java",
        "fixPatch": "diff --git a/flink-batch-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCOutputFormat.java b/flink-batch-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCOutputFormat.java\nindex 5464a94..da4b1ad 100644\n--- a/flink-batch-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCOutputFormat.java\n+++ b/flink-batch-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCOutputFormat.java\n@@ -108,7 +108,7 @@\n \t@Override\n \tpublic void writeRecord(Row row) throws IOException {\n \n-\t\tif (typesArray != null && typesArray.length > 0 && typesArray.length == row.productArity()) {\n+\t\tif (typesArray != null && typesArray.length > 0 && typesArray.length != row.productArity()) {\n \t\t\tLOG.warn(\"Column SQL types array doesn't match arity of passed Row! Check the passed array...\");\n \t\t} \n \t\ttry {\n",
        "projectName": "apache.flink",
        "bugLineNum": 111,
        "bugNodeStartChar": 3592,
        "bugNodeLength": 39,
        "fixLineNum": 111,
        "fixNodeStartChar": 3592,
        "fixNodeLength": 39,
        "sourceBeforeFix": "typesArray.length == row.productArity()",
        "sourceAfterFix": "typesArray.length != row.productArity()"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "febe9af92ea9c5b2e924788628b928bda8c7d1d8",
        "fixCommitParentSHA1": "6e651219af1e256c8d8aad8c0b7e8b1dbbd5dd43",
        "bugFilePath": "gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java",
        "fixPatch": "diff --git a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\nindex eb0c80c..00f1d48 100644\n--- a/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n+++ b/gdx-tests/src/com/badlogic/gdx/tests/Box2DTest.java\n@@ -175,7 +175,7 @@\n \t\t// matrices\r\n \t\tGL10 gl = app.getGraphics().getGL10();\r\n \t\tgl.glClear( GL10.GL_COLOR_BUFFER_BIT );\r\n-\t\tcamera.setMatrices( app.getGraphics() );\r\n+\t\tcamera.setMatrices( );\r\n \t\t\r\n \t\t// next we render the ground body\r\n \t\trenderBox( gl, groundBody, 50, 1 );\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 178,
        "bugNodeStartChar": 6521,
        "bugNodeLength": 39,
        "fixLineNum": 178,
        "fixNodeStartChar": 6344,
        "fixNodeLength": 21,
        "sourceBeforeFix": "camera.setMatrices(app.getGraphics())",
        "sourceAfterFix": "camera.setMatrices()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9338e13c38d7b70e1a919c650ebea63f6f42beff",
        "fixCommitParentSHA1": "7020b8648d2ddf70cbf39b476970f7ef807832e4",
        "bugFilePath": "webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java",
        "fixPatch": "diff --git a/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java b/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\nindex 10dfb62..90a9d1d 100644\n--- a/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\n+++ b/webmagic-core/src/main/java/us/codecraft/webmagic/selector/CssSelector.java\n@@ -27,7 +27,7 @@\n     public String select(String text) {\n         Document doc = Jsoup.parse(text);\n         Elements elements = doc.select(selectorText);\n-        if (CollectionUtils.isNotEmpty(elements)) {\n+        if (CollectionUtils.isEmpty(elements)) {\n             return null;\n         }\n         return elements.get(0).outerHtml();\n",
        "projectName": "code4craft.webmagic",
        "bugLineNum": 30,
        "bugNodeStartChar": 734,
        "bugNodeLength": 36,
        "fixLineNum": 30,
        "fixNodeStartChar": 734,
        "fixNodeLength": 33,
        "sourceBeforeFix": "CollectionUtils.isNotEmpty(elements)",
        "sourceAfterFix": "CollectionUtils.isEmpty(elements)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d49d02ffe490f956126db37a1abf6f82858aeff5",
        "fixCommitParentSHA1": "a156f67804f5a55cc1673ed298cec4f8defd534c",
        "bugFilePath": "transport/src/main/java/com/sun/nio/sctp/SctpServerChannel.java",
        "fixPatch": "diff --git a/transport/src/main/java/com/sun/nio/sctp/SctpServerChannel.java b/transport/src/main/java/com/sun/nio/sctp/SctpServerChannel.java\nindex eaf617e..2b47d1d 100644\n--- a/transport/src/main/java/com/sun/nio/sctp/SctpServerChannel.java\n+++ b/transport/src/main/java/com/sun/nio/sctp/SctpServerChannel.java\n@@ -36,7 +36,7 @@\n     }\n \n     public abstract <T> T getOption(SctpSocketOption<T> name) throws IOException;\n-    public abstract <T> SctpChannel setOption(SctpSocketOption<T> name, T value) throws IOException;\n+    public abstract <T> SctpServerChannel setOption(SctpSocketOption<T> name, T value) throws IOException;\n \n     public abstract Set<SocketAddress> getAllLocalAddresses() throws IOException;\n \n",
        "projectName": "netty.netty",
        "bugLineNum": 39,
        "bugNodeStartChar": 1298,
        "bugNodeLength": 96,
        "fixLineNum": 39,
        "fixNodeStartChar": 1298,
        "fixNodeLength": 102,
        "sourceBeforeFix": "public abstract <T>SctpChannel setOption(SctpSocketOption<T> name,T value) throws IOException ; ",
        "sourceAfterFix": "public abstract <T>SctpServerChannel setOption(SctpSocketOption<T> name,T value) throws IOException ; "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 584,
        "bugNodeStartChar": 21822,
        "bugNodeLength": 10,
        "fixLineNum": 584,
        "fixNodeStartChar": 21822,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15849",
        "sourceAfterFix": "id=10996"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "0f8c0e4ff5f80aab6ab653c9aaa5a97812d2ec7c",
        "fixCommitParentSHA1": "df7cf03d410079faa17f032e6f2504868ccbfa17",
        "bugFilePath": "testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java",
        "fixPatch": "diff --git a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\nindex ad210b5..39d7397 100644\n--- a/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n+++ b/testsuite/integration/smoke/src/test/java/org/jboss/as/test/smoke/jms/auxiliary/TransactedQueueMessageSender.java\n@@ -43,10 +43,10 @@\n \n     private static final Logger logger = Logger.getLogger(TransactedQueueMessageSender.class);\n \n-    @Resource(name = \"java:/queue/myAwesomeQueue\")\n+    @Resource(lookup = \"java:/queue/myAwesomeQueue\")\n     private Queue queue;\n \n-    @Resource(name = \"java:/ConnectionFactory\")\n+    @Resource(lookup = \"java:/ConnectionFactory\")\n     private ConnectionFactory factory;\n \n     @Resource\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 46,
        "bugNodeStartChar": 1692,
        "bugNodeLength": 35,
        "fixLineNum": 46,
        "fixNodeStartChar": 1692,
        "fixNodeLength": 37,
        "sourceBeforeFix": "name=\"java:/queue/myAwesomeQueue\"",
        "sourceAfterFix": "lookup=\"java:/queue/myAwesomeQueue\""
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "dac442889f82a7f84ee1e74746027845c263b8ea",
        "fixCommitParentSHA1": "ca5e0ed8edd780a0e54c43e67f7222fcd48aef0c",
        "bugFilePath": "ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java",
        "fixPatch": "diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java\nindex 6660a91..c80403d 100644\n--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java\n+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java\n@@ -1166,12 +1166,12 @@\n           bucketCols = part.getBucketCols();\n           inputFormatClass = part.getInputFormatClass();\n           isArchived = ArchiveUtils.isArchived(part);\n-          tblPartLoc = part.getDataLocation().toString();\n+          tblPartLoc = part.getPartitionPath().toString();\n         }\n       } else {\n         inputFormatClass = tblObj.getInputFormatClass();\n         bucketCols = tblObj.getBucketCols();\n-        tblPartLoc = tblObj.getDataLocation().toString();\n+        tblPartLoc = tblObj.getPath().toString();\n       }\n \n       // throw a HiveException for non-rcfile.\n",
        "projectName": "apache.hive",
        "bugLineNum": 1174,
        "bugNodeStartChar": 45706,
        "bugNodeLength": 24,
        "fixLineNum": 1174,
        "fixNodeStartChar": 45706,
        "fixNodeLength": 16,
        "sourceBeforeFix": "tblObj.getDataLocation()",
        "sourceAfterFix": "tblObj.getPath()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "1e2beef03be68c2aae4116db3b5bcd783bb3f858",
        "fixCommitParentSHA1": "cabc23150772e1ba7124ead95e509c99284475b0",
        "bugFilePath": "shell/src/main/java/tachyon/shell/command/ChownCommand.java",
        "fixPatch": "diff --git a/shell/src/main/java/tachyon/shell/command/ChownCommand.java b/shell/src/main/java/tachyon/shell/command/ChownCommand.java\nindex 375c5fa..376c77e 100644\n--- a/shell/src/main/java/tachyon/shell/command/ChownCommand.java\n+++ b/shell/src/main/java/tachyon/shell/command/ChownCommand.java\n@@ -24,7 +24,7 @@\n /**\n  * Changes the owner of a file or directory specified by args.\n  */\n-public final class ChownCommand extends AbstractACLCommand {\n+public final class ChownCommand extends AbstractAclCommand {\n \n   public ChownCommand(TachyonConf conf, TachyonFileSystem tfs) {\n     super(conf, tfs);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 24,
        "bugNodeStartChar": 961,
        "bugNodeLength": 620,
        "fixLineNum": 24,
        "fixNodeStartChar": 961,
        "fixNodeLength": 620,
        "sourceBeforeFix": "/**   * Changes the owner of a file or directory specified by args.  */ public final class ChownCommand extends AbstractACLCommand {   public ChownCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return \"chown\";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String owner=args[0];     TachyonURI path=new TachyonURI(args[1]);     chown(path,owner,false);   }   @Override public String getUsage(){     return \"chown <owner> <path>\";   } } ",
        "sourceAfterFix": "/**   * Changes the owner of a file or directory specified by args.  */ public final class ChownCommand extends AbstractAclCommand {   public ChownCommand(  TachyonConf conf,  TachyonFileSystem tfs){     super(conf,tfs);   }   @Override public String getCommandName(){     return \"chown\";   }   @Override protected int getNumOfArgs(){     return 2;   }   @Override public void run(  String... args) throws IOException {     String owner=args[0];     TachyonURI path=new TachyonURI(args[1]);     chown(path,owner,false);   }   @Override public String getUsage(){     return \"chown <owner> <path>\";   } } "
    },
    {
        "bugType": "CHANGE_OPERAND",
        "fixCommitSHA1": "ba91960ef4f56fe20a68f04375b023486e79a416",
        "fixCommitParentSHA1": "bce343fd7548221e956f73eefc4baf869bc8ea2a",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/ArrayMap.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\nindex f460df5..b95e415 100644\n--- a/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n+++ b/gdx/src/com/badlogic/gdx/utils/ArrayMap.java\n@@ -136,12 +136,12 @@\n \tpublic K getKey (V value, boolean identity) {\r\n \t\tObject[] values = this.values;\r\n \t\tint i = size - 1;\r\n-\t\tif (identity || values == null) {\r\n+\t\tif (identity || value == null) {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values[i] == values) return keys[i];\r\n+\t\t\t\tif (values[i] == value) return keys[i];\r\n \t\t} else {\r\n \t\t\tfor (; i >= 0; i--)\r\n-\t\t\t\tif (values.equals(values[i])) return keys[i];\r\n+\t\t\t\tif (value.equals(values[i])) return keys[i];\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 139,
        "bugNodeStartChar": 5905,
        "bugNodeLength": 14,
        "fixLineNum": 139,
        "fixNodeStartChar": 5767,
        "fixNodeLength": 13,
        "sourceBeforeFix": "values == null",
        "sourceAfterFix": "value == null"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "24418dcfa1db3efda6041091f36351b03e0dd067",
        "fixCommitParentSHA1": "956bcef32ea419569f12a773d103ff7ce46faa69",
        "bugFilePath": "community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java",
        "fixPatch": "diff --git a/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java b/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java\nindex 63efcc3..764b24a 100644\n--- a/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java\n+++ b/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java\n@@ -115,7 +115,7 @@\n         Map<String, Object> map = JsonHelper.jsonToMap( entity );\n         assertNotNull( map.get( indexName ) );\n \n-        assertEquals( 1, functionalTestHelper.removeAnyAutoIndex( map ).size() );\n+        assertEquals( \"Was: \" + map + \", no-auto-index:\" + functionalTestHelper.removeAnyAutoIndex( map ), 1, functionalTestHelper.removeAnyAutoIndex( map ).size() );\n     }\n \n     /**\n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 118,
        "bugNodeStartChar": 3865,
        "bugNodeLength": 72,
        "fixLineNum": 118,
        "fixNodeStartChar": 3865,
        "fixNodeLength": 157,
        "sourceBeforeFix": "assertEquals(1,functionalTestHelper.removeAnyAutoIndex(map).size())",
        "sourceAfterFix": "assertEquals(\"Was: \" + map + \", no-auto-index:\"+ functionalTestHelper.removeAnyAutoIndex(map),1,functionalTestHelper.removeAnyAutoIndex(map).size())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "58ce4c40970fc29d00e5740bc6098eb475668e86",
        "fixCommitParentSHA1": "b8c558e473c0a9a75c41312e31df34b8572a271b",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java\nindex 469e3f1..91e69a2 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java\n@@ -39,7 +39,8 @@\n  * <p>\n  * Checks the Javadoc of a method or constructor.\n  * By default, does not check for unused throws.\n- * To check for unused throws, set property checkUnusedThrows to true.\n+ * To allow documented <code>java.lang.RuntimeException</code>s\n+ * that are not declared, set property allowUndeclaredRTE to true.\n  * The scope to verify is specified using the {@link Scope} class and\n  * defaults to {@link Scope#PRIVATE}. To verify another scope,\n  * set property scope to one of the {@link Scope} constants.\n@@ -50,13 +51,14 @@\n  * <pre>\n  * &lt;module name=\"JavadocMethod\"/&gt;\n  * </pre>\n- * <p> An example of how to configure the check to check for unused imports\n+ * <p> An example of how to configure the check to check to allow\n+ * documentation of undeclared RuntimeExceptions\n  * and for the {@link Scope#PUBLIC} scope is:\n  *</p>\n  * <pre>\n  * &lt;module name=\"JavadocMethod\"&gt;\n  *    &lt;property name=\"scope\" value=\"public\"/&gt;\n- *    &lt;property name=\"checkUnusedThrows\" value=\"true\"/&gt;\n+ *    &lt;property name=\"allowUndeclaredRTE\" value=\"true\"/&gt;\n  * &lt;/module&gt;\n  * </pre>\n  *\n@@ -121,8 +123,12 @@\n     /** the visibility scope where Javadoc comments are checked **/\n     private Scope mScope = Scope.PRIVATE;\n \n-    /** check for unused throws **/\n-    private boolean mCheckUnusedThrows = false;\n+    /**\n+     * controls whether to allow documented exceptions that\n+     * are not declared if they are a subclass of\n+     * java.lang.RuntimeException.\n+     **/\n+    private boolean mAllowUndeclaredRTE = false;\n \n     /**\n      * Set the scope.\n@@ -134,12 +140,14 @@\n     }\n \n     /**\n-     * Set whether to check for unused throws.\n+     * controls whether to allow documented exceptions that\n+     * are not declared if they are a subclass of\n+     * java.lang.RuntimeException.\n      * @param aFlag a <code>Boolean</code> value\n      */\n-    public void setCheckUnusedThrows(boolean aFlag)\n+    public void setAllowUndeclaredRTE(boolean aFlag)\n     {\n-        mCheckUnusedThrows = aFlag;\n+        mAllowUndeclaredRTE = aFlag;\n     }\n \n     /** @see com.puppycrawl.tools.checkstyle.api.Check */\n@@ -179,12 +187,12 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() == TokenTypes.PACKAGE_DEF) {\n-            if (mCheckUnusedThrows) {\n+            if (mAllowUndeclaredRTE) {\n                 processPackage(aAST);\n             }\n         }\n         else if (aAST.getType() == TokenTypes.IMPORT) {\n-            if (mCheckUnusedThrows) {\n+            if (mAllowUndeclaredRTE) {\n                 processImport(aAST);\n             }\n         }\n@@ -510,7 +518,7 @@\n             // Handle extra JavadocTag.\n             if (!found) {\n                 boolean reqd = true;\n-                if (mCheckUnusedThrows) {\n+                if (mAllowUndeclaredRTE) {\n                     final ClassResolver cr =\n                         new ClassResolver(\n                             getClassLoader(),\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 182,
        "bugNodeStartChar": 6560,
        "bugNodeLength": 77,
        "fixLineNum": 182,
        "fixNodeStartChar": 6560,
        "fixNodeLength": 78,
        "sourceBeforeFix": "if (mCheckUnusedThrows) {   processPackage(aAST); } ",
        "sourceAfterFix": "if (mAllowUndeclaredRTE) {   processPackage(aAST); } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e0aff862bb608004841da3487d94aecb45964e17",
        "fixCommitParentSHA1": "789c061e49a3f4201e6184c21e3383175a866ff2",
        "bugFilePath": "core/src/main/java/tachyon/examples/Performance.java",
        "fixPatch": "diff --git a/core/src/main/java/tachyon/examples/Performance.java b/core/src/main/java/tachyon/examples/Performance.java\nindex 80612c4..6278c4c 100644\n--- a/core/src/main/java/tachyon/examples/Performance.java\n+++ b/core/src/main/java/tachyon/examples/Performance.java\n@@ -74,7 +74,7 @@\n \n   public static void logPerIteration(long startTimeMs, int times, String msg, int workerId) {\n     long takenTimeMs = System.currentTimeMillis() - startTimeMs;\n-    double result = 1000L * FILE_BYTES / takenTimeMs / 1024 / 1024;\n+    double result = 1000.0 * FILE_BYTES / takenTimeMs / 1024 / 1024;\n     LOG.info(times + msg + workerId + \" : \" + result + \" Mb/sec. Took \" + takenTimeMs + \" ms. \");\n   }\n \n@@ -410,7 +410,7 @@\n       }\n     }\n     long takenTimeMs = System.currentTimeMillis() - startTimeMs;\n-    double result = 1000L * FILES_BYTES / takenTimeMs / 1024 / 1024;\n+    double result = 1000.0 * FILES_BYTES / takenTimeMs / 1024 / 1024;\n \n     LOG.info(result + \" Mb/sec. \" + RESULT_PREFIX + \"Entire \" + msg + \" Test : \" + \" Took \"\n         + takenTimeMs + \" ms. Current System Time: \" + System.currentTimeMillis());\n@@ -450,7 +450,7 @@\n       }\n     }\n     long takenTimeMs = System.currentTimeMillis() - startTimeMs;\n-    double result = FILES_BYTES * 1000L / takenTimeMs / 1024 / 1024;\n+    double result = FILES_BYTES * 1000.0 / takenTimeMs / 1024 / 1024;\n     LOG.info(result + \" Mb/sec. \" + RESULT_PREFIX + \"Entire \" + (write ? \"Write \" : \"Read \")\n         + \" Took \" + takenTimeMs + \" ms. Current System Time: \" + System.currentTimeMillis());\n   }\n@@ -486,7 +486,7 @@\n       }\n     }\n     long takenTimeMs = System.currentTimeMillis() - startTimeMs;\n-    double result = FILES_BYTES * 1000L / takenTimeMs / 1024 / 1024;\n+    double result = FILES_BYTES * 1000.0 / takenTimeMs / 1024 / 1024;\n     LOG.info(result + \" Mb/sec. \" + RESULT_PREFIX + \"Entire \" + (write ? \"Write \" : \"Read \")\n         + \" Took \" + takenTimeMs + \" ms. Current System Time: \" + System.currentTimeMillis());\n   }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 413,
        "bugNodeStartChar": 13840,
        "bugNodeLength": 19,
        "fixLineNum": 413,
        "fixNodeStartChar": 13840,
        "fixNodeLength": 20,
        "sourceBeforeFix": "1000L * FILES_BYTES",
        "sourceAfterFix": "1000.0 * FILES_BYTES"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "98a8875db1735c4a60bf1989fd727217a739baf0",
        "fixCommitParentSHA1": "01433360bcf817e363f8f2481415d3e6bc5aa224",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java b/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\nindex a4b63ae..08f3b12 100644\n--- a/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\n@@ -47,7 +47,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-1/x/y/z\", \"Hello World\", Exchange.FILE_NAME, \"report.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result1\");\n-        mock.expectedBodiesReceived(\"Hello World\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -59,7 +59,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-2/x/y/z\", \"Hello World 2\", Exchange.FILE_NAME, \"report.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result2\");\n-        mock.expectedBodiesReceived(\"Hello World 2\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -75,7 +75,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-3/x/y/z\", \"Hello World 6\", Exchange.FILE_NAME, \"m.bak\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result3\");\n-        mock.expectedBodiesReceived(\"Hello World 2\", \"Hello World 4\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\", \"Hello World 4\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n@@ -88,7 +88,7 @@\n         template.sendBodyAndHeader(\"file://target/files/ant-path-4/x/y/z\", \"Hello World 3\", Exchange.FILE_NAME, \"c.txt\");\n \n         MockEndpoint mock = getMockEndpoint(\"mock:result4\");\n-        mock.expectedBodiesReceived(\"Hello World 3\");\n+        mock.expectedBodiesReceivedInAnyOrder(\"Hello World 3\");\n \n         assertMockEndpointsSatisfied();\n         oneExchangeDone.matchesMockWaitTime();\n",
        "projectName": "apache.camel",
        "bugLineNum": 78,
        "bugNodeStartChar": 3367,
        "bugNodeLength": 61,
        "fixLineNum": 78,
        "fixNodeStartChar": 3367,
        "fixNodeLength": 71,
        "sourceBeforeFix": "mock.expectedBodiesReceived(\"Hello World 2\",\"Hello World 4\")",
        "sourceAfterFix": "mock.expectedBodiesReceivedInAnyOrder(\"Hello World 2\",\"Hello World 4\")"
    },
    {
        "bugType": "OVERLOAD_METHOD_DELETED_ARGS",
        "fixCommitSHA1": "3f752b8af067be1237b1094767e78633580431fc",
        "fixCommitParentSHA1": "d13af0e3717e7070b523a42ef437064372707f33",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java b/camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java\nindex b29ee07..b014bbf 100644\n--- a/camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/impl/MultipleLifecycleStrategyTest.java\n@@ -51,7 +51,7 @@\n         context.stop();\n \n         List<String> expectedEvents = Arrays.asList(\"onThreadPoolAdd\", \"onContextStart\", \"onServiceAdd\", \"onServiceAdd\", \"onServiceAdd\", \"onServiceAdd\", \"onServiceAdd\",\n-             \"onServiceAdd\", \"onServiceAdd\", \"onComponentAdd\", \"onEndpointAdd\", \"onComponentRemove\", \"onThreadPoolAdd\", \"onContextStop\"); \n+             \"onServiceAdd\", \"onServiceAdd\", \"onComponentAdd\", \"onEndpointAdd\", \"onComponentRemove\", \"onContextStop\");\n         \n         assertEquals(expectedEvents, dummy1.getEvents());\n         assertEquals(expectedEvents, dummy2.getEvents());\n",
        "projectName": "apache.camel",
        "bugLineNum": 53,
        "bugNodeStartChar": 2007,
        "bugNodeLength": 267,
        "fixLineNum": 53,
        "fixNodeStartChar": 2007,
        "fixNodeLength": 248,
        "sourceBeforeFix": "Arrays.asList(\"onThreadPoolAdd\",\"onContextStart\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onComponentAdd\",\"onEndpointAdd\",\"onComponentRemove\",\"onThreadPoolAdd\",\"onContextStop\")",
        "sourceAfterFix": "Arrays.asList(\"onThreadPoolAdd\",\"onContextStart\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onServiceAdd\",\"onComponentAdd\",\"onEndpointAdd\",\"onComponentRemove\",\"onContextStop\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "46e2a4f06dbca99976496adc1c270f882c02888b",
        "fixCommitParentSHA1": "644b7c9e7c63b1967c205ee018f42c6a34c200be",
        "bugFilePath": "core/camel-core/src/main/java/org/apache/camel/reifier/dataformat/TidyMarkupDataFormatReifier.java",
        "fixPatch": "diff --git a/core/camel-core/src/main/java/org/apache/camel/reifier/dataformat/TidyMarkupDataFormatReifier.java b/core/camel-core/src/main/java/org/apache/camel/reifier/dataformat/TidyMarkupDataFormatReifier.java\nindex c805e95..a6a67ea 100644\n--- a/core/camel-core/src/main/java/org/apache/camel/reifier/dataformat/TidyMarkupDataFormatReifier.java\n+++ b/core/camel-core/src/main/java/org/apache/camel/reifier/dataformat/TidyMarkupDataFormatReifier.java\n@@ -38,7 +38,7 @@\n             }\n         }\n \n-        return super.createDataFormat(camelContext);\n+        return super.doCreateDataFormat(camelContext);\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 41,
        "bugNodeStartChar": 1818,
        "bugNodeLength": 36,
        "fixLineNum": 41,
        "fixNodeStartChar": 1818,
        "fixNodeLength": 38,
        "sourceBeforeFix": "super.createDataFormat(camelContext)",
        "sourceAfterFix": "super.doCreateDataFormat(camelContext)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "59e2775fe4349667d553fd5b87ae55bed08f0866",
        "fixCommitParentSHA1": "0fc67af628089a8a200f9bc4a5c752097ea448d7",
        "bugFilePath": "components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java",
        "fixPatch": "diff --git a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\nindex 7514e8e..f2d7fef 100755\n--- a/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\n+++ b/components/camel-cache/src/main/java/org/apache/camel/component/cache/CacheConfiguration.java\n@@ -73,13 +73,13 @@\n             setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"timeToLiveSeconds\")).longValue());\n         }\n         if (cacheSettings.containsKey(\"timeToIdleSeconds\")) {\n-            setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"timeToIdleSeconds\")).longValue());\n+            setTimeToIdleSeconds(Long.valueOf((String) cacheSettings.get(\"timeToIdleSeconds\")).longValue());\n         }\n         if (cacheSettings.containsKey(\"diskPersistent\")) {\n-            setEternal(Boolean.valueOf((String) cacheSettings.get(\"diskPersistent\")));\n+            setDiskPersistent(Boolean.valueOf((String) cacheSettings.get(\"diskPersistent\")));\n         }\n         if (cacheSettings.containsKey(\"diskExpiryThreadIntervalSeconds\")) {\n-            setTimeToLiveSeconds(Long.valueOf((String) cacheSettings.get(\"diskExpiryThreadIntervalSeconds\")).longValue());\n+            setDiskExpiryThreadIntervalSeconds(Long.valueOf((String) cacheSettings.get(\"diskExpiryThreadIntervalSeconds\")).longValue());\n         }\n         \n     }\n",
        "projectName": "apache.camel",
        "bugLineNum": 76,
        "bugNodeStartChar": 3107,
        "bugNodeLength": 95,
        "fixLineNum": 76,
        "fixNodeStartChar": 3107,
        "fixNodeLength": 95,
        "sourceBeforeFix": "setTimeToLiveSeconds(Long.valueOf((String)cacheSettings.get(\"timeToIdleSeconds\")).longValue())",
        "sourceAfterFix": "setTimeToIdleSeconds(Long.valueOf((String)cacheSettings.get(\"timeToIdleSeconds\")).longValue())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "bfb69f6eeabb7ba6140f95d27c6b16f6f2e40d47",
        "fixCommitParentSHA1": "10f82d19223e19a2e8b360ced7972126942416df",
        "bugFilePath": "hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java",
        "fixPatch": "diff --git a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\nindex fc3c617..1c7e70c 100644\n--- a/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\n+++ b/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java\n@@ -449,7 +449,7 @@\n   static void signalTasks(MiniDFSCluster dfs, FileSystem fileSys, \n                           String mapSignalFile, \n                           String reduceSignalFile, int replication) \n-  throws IOException {\n+  throws Exception {\n     writeFile(dfs.getNameNode(), fileSys.getConf(), new Path(mapSignalFile), \n               (short)replication);\n     writeFile(dfs.getNameNode(), fileSys.getConf(), new Path(reduceSignalFile), \n@@ -462,7 +462,7 @@\n   static void signalTasks(MiniDFSCluster dfs, FileSystem fileSys, \n                           boolean isMap, String mapSignalFile, \n                           String reduceSignalFile)\n-  throws IOException {\n+  throws Exception {\n     //  signal the maps to complete\n     writeFile(dfs.getNameNode(), fileSys.getConf(),\n               isMap \n@@ -483,7 +483,7 @@\n   }\n   \n   static void writeFile(NameNode namenode, Configuration conf, Path name, \n-      short replication) throws IOException {\n+      short replication) throws Exception {\n     FileSystem fileSys = FileSystem.get(conf);\n     SequenceFile.Writer writer = \n       SequenceFile.createWriter(fileSys, conf, name, \n",
        "projectName": "apache.hadoop",
        "bugLineNum": 485,
        "bugNodeStartChar": 14803,
        "bugNodeLength": 575,
        "fixLineNum": 485,
        "fixNodeStartChar": 14803,
        "fixNodeLength": 573,
        "sourceBeforeFix": "static void writeFile(NameNode namenode,Configuration conf,Path name,short replication) throws IOException {   FileSystem fileSys=FileSystem.get(conf);   SequenceFile.Writer writer=SequenceFile.createWriter(fileSys,conf,name,BytesWritable.class,BytesWritable.class,CompressionType.NONE);   writer.append(new BytesWritable(),new BytesWritable());   writer.close();   fileSys.setReplication(name,replication);   DFSTestUtil.waitReplication(fileSys,name,replication); } ",
        "sourceAfterFix": "static void writeFile(NameNode namenode,Configuration conf,Path name,short replication) throws Exception {   FileSystem fileSys=FileSystem.get(conf);   SequenceFile.Writer writer=SequenceFile.createWriter(fileSys,conf,name,BytesWritable.class,BytesWritable.class,CompressionType.NONE);   writer.append(new BytesWritable(),new BytesWritable());   writer.close();   fileSys.setReplication(name,replication);   DFSTestUtil.waitReplication(fileSys,name,replication); } "
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "cbb7f2cf26daf213a6265a99fc27980bfcf4ff89",
        "fixCommitParentSHA1": "6b3aaf3d1febf2185305c08d5ecbfe583315525c",
        "bugFilePath": "camel-core/src/main/java/org/apache/camel/component/bean/BeanHolder.java",
        "fixPatch": "diff --git a/camel-core/src/main/java/org/apache/camel/component/bean/BeanHolder.java b/camel-core/src/main/java/org/apache/camel/component/bean/BeanHolder.java\nindex e80a7e0..b1a0741 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/bean/BeanHolder.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/bean/BeanHolder.java\n@@ -25,7 +25,7 @@\n  */\n public interface BeanHolder {\n \n-    Object getBean() throws Exception;\n+    Object getBean() throws NoBeanAvailableException;\n \n     Processor getProcessor();\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 28,
        "bugNodeStartChar": 980,
        "bugNodeLength": 34,
        "fixLineNum": 28,
        "fixNodeStartChar": 980,
        "fixNodeLength": 49,
        "sourceBeforeFix": "Object getBean() throws Exception ; ",
        "sourceAfterFix": "Object getBean() throws NoBeanAvailableException ; "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "b48a6a5a1a94b81a2c07b9cbdeb0c03c1fd68ee6",
        "fixCommitParentSHA1": "46a2f802e8a723b0b60eb7df329a2a1c96eedc50",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/processor/async/AsyncRouteWaitIfReplyExpectedTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/processor/async/AsyncRouteWaitIfReplyExpectedTest.java b/camel-core/src/test/java/org/apache/camel/processor/async/AsyncRouteWaitIfReplyExpectedTest.java\nindex a190888..85b4bcf 100644\n--- a/camel-core/src/test/java/org/apache/camel/processor/async/AsyncRouteWaitIfReplyExpectedTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/processor/async/AsyncRouteWaitIfReplyExpectedTest.java\n@@ -85,7 +85,7 @@\n                             // so we do a bit of delay to simulate heavy work that takes time\n                         .to(\"mock:foo\")\n                             // wait a litter longer for the slow box\n-                        .delay(500)\n+                        .delay(1000)\n                             // and we also work with the message so we can prepare a response\n                         .process(new MyProcessor())\n                             // and we use mocks for unit testing\n",
        "projectName": "apache.camel",
        "bugLineNum": 75,
        "bugNodeStartChar": 2573,
        "bugNodeLength": 984,
        "fixLineNum": 75,
        "fixNodeStartChar": 2573,
        "fixNodeLength": 985,
        "sourceBeforeFix": "from(\"direct:start\").transform(body().append(\" World\")).async().waitForTaskToComplete(WaitForTaskToComplete.IfReplyExpected).to(\"mock:foo\").delay(500)",
        "sourceAfterFix": "from(\"direct:start\").transform(body().append(\" World\")).async().waitForTaskToComplete(WaitForTaskToComplete.IfReplyExpected).to(\"mock:foo\").delay(1000)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e981384cc21ca3c1958acd4b494a6ddd147c0a60",
        "fixCommitParentSHA1": "e4262ff29940c300db4fc9739ebefb9039f12ba3",
        "bugFilePath": "modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java",
        "fixPatch": "diff --git a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\nindex d52f996..435ac50 100644\n--- a/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n+++ b/modcluster/src/main/java/org/jboss/as/modcluster/ModClusterService.java\n@@ -132,7 +132,7 @@\n             if (ssl.has(CommonAttributes.CIPHER_SUITE))\n                 config.setSslCiphers(ssl.get(CommonAttributes.CIPHER_SUITE).asString());\n             if (ssl.has(CommonAttributes.PROTOCOL))\n-                config.setSslKeyAlias(ssl.get(CommonAttributes.PROTOCOL).asString());\n+                config.setSslProtocol(ssl.get(CommonAttributes.PROTOCOL).asString());\n             if (ssl.has(CommonAttributes.CA_CERTIFICATE_FILE))\n                 config.setSslTrustStore(ssl.get(CommonAttributes.CA_CERTIFICATE_FILE).asString());\n             if (ssl.has(CommonAttributes.CA_REVOCATION_URL))\n@@ -144,9 +144,9 @@\n             config.setProxyList(modelconf.get(CommonAttributes.PROXY_LIST).asString());\n         }\n         if (modelconf.hasDefined(CommonAttributes.PROXY_URL))\n-            config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString());\n+            config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString());\n         if (modelconf.has(CommonAttributes.ADVERTISE_SECURITY_KEY))\n-            config.setProxyList(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n+            config.setAdvertiseSecurityKey(modelconf.get(CommonAttributes.ADVERTISE_SECURITY_KEY).asString());\n \n         if (modelconf.hasDefined(CommonAttributes.EXCLUDED_CONTEXTS)) {\n             // read the default host.\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 147,
        "bugNodeStartChar": 6810,
        "bugNodeLength": 73,
        "fixLineNum": 147,
        "fixNodeStartChar": 6810,
        "fixNodeLength": 72,
        "sourceBeforeFix": "config.setProxyList(modelconf.get(CommonAttributes.PROXY_URL).asString())",
        "sourceAfterFix": "config.setProxyURL(modelconf.get(CommonAttributes.PROXY_URL).asString())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "23efcad891c91fc131ed4729c734ff6b122197df",
        "fixCommitParentSHA1": "dce2a9168d64b99fe089cc8107e1c5ab69b31f7e",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\nindex 85a4e58..c1f49a4 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/db/DuplicateVariableInsertTest.java\n@@ -35,7 +35,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnExecution() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\t\n \t\tfinal CyclicBarrier startBarrier = new CyclicBarrier(2);\n@@ -88,7 +88,7 @@\n \t * a barrier for starting and a barrier for completing the command, so they each insert a new variable guaranteed.\n \t */\n \tpublic void testDuplicateVariableInsertOnTask() throws Exception {\n-\t\tString processDefinitionId = deployOneTaskProcess();\n+\t\tString processDefinitionId = deployOneTaskTestProcess();\n \t\tfinal ProcessInstance processInstance = runtimeService.startProcessInstanceById(processDefinitionId);\n \t\tfinal Task task = taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();\n \t\t\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 38,
        "bugNodeStartChar": 1691,
        "bugNodeLength": 22,
        "fixLineNum": 38,
        "fixNodeStartChar": 1691,
        "fixNodeLength": 26,
        "sourceBeforeFix": "deployOneTaskProcess()",
        "sourceAfterFix": "deployOneTaskTestProcess()"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "5855ba3b3a70f813d1d47b40bf856b15b694534a",
        "fixCommitParentSHA1": "c568ccdebf927562166af05c3c9aa02e61c602c3",
        "bugFilePath": "modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\nindex 9423166..a25f7b0 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/bpmn/behavior/InclusiveGatewayActivityBehavior.java\n@@ -143,7 +143,7 @@\n      // if source has no outputs, it is the end of the process, and its parent process should be checked.\t  \n \tif (srcActivity.getOutgoingTransitions().size() == 0) {\n \t\tvisitedActivities.add(srcActivity);\n-\t\tif (srcActivity.getParent() == null)\n+\t\tif (srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity) )\n \t\t\treturn false;\n \t\tsrcActivity = (PvmActivity) srcActivity.getParent();\n \t}\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 146,
        "bugNodeStartChar": 5951,
        "bugNodeLength": 31,
        "fixLineNum": 146,
        "fixNodeStartChar": 5951,
        "fixNodeLength": 84,
        "sourceBeforeFix": "srcActivity.getParent() == null",
        "sourceAfterFix": "srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55ed50c4975cf694828d46ee9ca32ce72a9ef913",
        "fixCommitParentSHA1": "46a3fbcb5cf35fbd18472658627a90a53be89ccf",
        "bugFilePath": "src/jvm/clojure/lang/RestFn.java",
        "fixPatch": "diff --git a/src/jvm/clojure/lang/RestFn.java b/src/jvm/clojure/lang/RestFn.java\nindex e33d21f..e87c77f 100644\n--- a/src/jvm/clojure/lang/RestFn.java\n+++ b/src/jvm/clojure/lang/RestFn.java\n@@ -139,34 +139,34 @@\n \tswitch(reqArity)\r\n \t\t{\r\n \t\tcase 0:\r\n-\t\t\treturn invoke(args);\r\n+\t\t\treturn doInvoke(args);\r\n \t\tcase 1:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 2:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 3:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 4:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 5:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 6:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -174,7 +174,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 7:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -183,7 +183,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 8:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -193,7 +193,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 9:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -204,7 +204,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 10:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -216,7 +216,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 11:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -229,7 +229,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 12:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -243,7 +243,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 13:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -258,7 +258,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 14:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -274,7 +274,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 15:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -291,7 +291,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 16:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -309,7 +309,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 17:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -328,7 +328,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 18:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -348,7 +348,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 19:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n@@ -369,7 +369,7 @@\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, args.rest());\r\n \t\tcase 20:\r\n-\t\t\treturn invoke(args.first()\r\n+\t\t\treturn doInvoke(args.first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n \t\t\t\t\t, (args = args.rest()).first()\r\n",
        "projectName": "clojure.clojure",
        "bugLineNum": 331,
        "bugNodeStartChar": 12073,
        "bugNodeLength": 669,
        "fixLineNum": 331,
        "fixNodeStartChar": 11743,
        "fixNodeLength": 653,
        "sourceBeforeFix": "invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())",
        "sourceAfterFix": "doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "d2f4d3fa8625b347e7936091c3bd1a1e2f07d89c",
        "fixCommitParentSHA1": "8f1bf2316f6c68b090e274642e7fd2698248079e",
        "bugFilePath": "ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java",
        "fixPatch": "diff --git a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\nindex e1270a8..a9301b4 100644\n--- a/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n+++ b/ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java\n@@ -58,14 +58,14 @@\n     public void save(Project project) {\n         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);\n         if (info != null) {\n-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {\n+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {\n                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);\n-                pc.renameProject(project, titleTextField.getText());\n+                pc.renameProject(project, nameTextField.getText());\n             }\n         }\n         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);\n         if (metaData != null) {\n-            metaData.setTitle(nameTextField.getText());\n+            metaData.setTitle(titleTextField.getText());\n \n             metaData.setAuthor(authorTextField.getText());\n             metaData.setKeywords(keywordsTextField.getText());\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 61,
        "bugNodeStartChar": 2116,
        "bugNodeLength": 24,
        "fixLineNum": 61,
        "fixNodeStartChar": 2116,
        "fixNodeLength": 23,
        "sourceBeforeFix": "titleTextField.getText()",
        "sourceAfterFix": "nameTextField.getText()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "cef498f67beedbe7eb7cf4e921c0b22f9d096fd4",
        "fixCommitParentSHA1": "d9133be383e6069b11d3cdf2308a765fc64064ed",
        "bugFilePath": "gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\nindex 337971e..5b898e8 100644\n--- a/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n+++ b/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java\n@@ -72,7 +72,7 @@\n \t/** The size (in number of floats) of each vertex */\r\n \tprivate int stride;\r\n \t/** The current vertex index, used for indexing */\r\n-\tprivate short vindex;\r\n+\tprivate int vindex;\r\n \t/** The offset in the indices array when begin() was called, used to define a meshpart. */\r\n \tprivate int istart;\r\n \t/** The offset within an vertex to position */\r\n@@ -536,7 +536,7 @@\n \r\n \t@Override\r\n \tpublic short vertex (Vector3 pos, Vector3 nor, Color col, Vector2 uv) {\r\n-\t\tif (vindex >= Short.MAX_VALUE) throw new GdxRuntimeException(\"Too many vertices used\");\r\n+\t\tif (vindex > Short.MAX_VALUE) throw new GdxRuntimeException(\"Too many vertices used\");\r\n \r\n \t\tvertex[posOffset] = pos.x;\r\n \t\tif (posSize > 1) vertex[posOffset + 1] = pos.y;\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 539,
        "bugNodeStartChar": 21746,
        "bugNodeLength": 25,
        "fixLineNum": 539,
        "fixNodeStartChar": 21208,
        "fixNodeLength": 24,
        "sourceBeforeFix": "vindex >= Short.MAX_VALUE",
        "sourceAfterFix": "vindex > Short.MAX_VALUE"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "c4ffe721c786c54074a6913cb889d46e83bb32c1",
        "fixCommitParentSHA1": "ae7098ae1d8ed13bed52f67f30612e7ecf39d618",
        "bugFilePath": "spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\nindex ea7ade8..b745c96 100644\n--- a/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\n+++ b/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/JmsTemplateAutoConfigurationTests.java\n@@ -94,23 +94,23 @@\n \t}\n \n \t@Test\n-\tpublic void testPubSubEnabledByDefault() {\n+\tpublic void testPubSubDisabledByDefault() {\n \t\tthis.context = new AnnotationConfigApplicationContext();\n \t\tthis.context\n \t\t\t\t.register(TestConfiguration.class, JmsTemplateAutoConfiguration.class);\n \t\tthis.context.refresh();\n \t\tJmsTemplate jmsTemplate = this.context.getBean(JmsTemplate.class);\n-\t\tassertTrue(jmsTemplate.isPubSubDomain());\n+\t\tassertFalse(jmsTemplate.isPubSubDomain());\n \t}\n \n \t@Test\n-\tpublic void testJmsTemplatePostProcessedSoThatPubSubIsFalse() {\n+\tpublic void testJmsTemplatePostProcessedSoThatPubSubIsTrue() {\n \t\tthis.context = new AnnotationConfigApplicationContext();\n \t\tthis.context.register(TestConfiguration4.class,\n \t\t\t\tJmsTemplateAutoConfiguration.class);\n \t\tthis.context.refresh();\n \t\tJmsTemplate jmsTemplate = this.context.getBean(JmsTemplate.class);\n-\t\tassertFalse(jmsTemplate.isPubSubDomain());\n+\t\tassertTrue(jmsTemplate.isPubSubDomain());\n \t}\n \n \t@Test\n@@ -262,7 +262,7 @@\n \t\t\t\tthrows BeansException {\n \t\t\tif (bean.getClass().isAssignableFrom(JmsTemplate.class)) {\n \t\t\t\tJmsTemplate jmsTemplate = (JmsTemplate) bean;\n-\t\t\t\tjmsTemplate.setPubSubDomain(false);\n+\t\t\t\tjmsTemplate.setPubSubDomain(true);\n \t\t\t}\n \t\t\treturn bean;\n \t\t}\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 113,
        "bugNodeStartChar": 4132,
        "bugNodeLength": 41,
        "fixLineNum": 113,
        "fixNodeStartChar": 4132,
        "fixNodeLength": 40,
        "sourceBeforeFix": "assertFalse(jmsTemplate.isPubSubDomain())",
        "sourceAfterFix": "assertTrue(jmsTemplate.isPubSubDomain())"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "df0b1fd128601b25ac352a8e83a4bc35ea992890",
        "fixCommitParentSHA1": "1127e1dcad20d20287fa399e13f5c942fb56c113",
        "bugFilePath": "presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java",
        "fixPatch": "diff --git a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\nindex 2e0f289..2464b59 100644\n--- a/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n+++ b/presto-main/src/main/java/com/facebook/presto/SystemSessionProperties.java\n@@ -258,8 +258,8 @@\n                 booleanSessionProperty(\n                         LEGACY_ORDER_BY,\n                         \"Use legacy rules for column resolution in ORDER BY clause\",\n-                        false,\n-                        featuresConfig.isLegacyOrderBy()));\n+                        featuresConfig.isLegacyOrderBy(),\n+                        false));\n     }\n \n     public List<PropertyMetadata<?>> getSessionProperties()\n",
        "projectName": "facebook.presto",
        "bugLineNum": 258,
        "bugNodeStartChar": 13441,
        "bugNodeLength": 238,
        "fixLineNum": 258,
        "fixNodeStartChar": 13441,
        "fixNodeLength": 238,
        "sourceBeforeFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",false,featuresConfig.isLegacyOrderBy())",
        "sourceAfterFix": "booleanSessionProperty(LEGACY_ORDER_BY,\"Use legacy rules for column resolution in ORDER BY clause\",featuresConfig.isLegacyOrderBy(),false)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "fb8fc104115926f045d7898b0c58b647f30fb602",
        "fixCommitParentSHA1": "4924406fdc1e5a17af9019c5f76014811d8885ce",
        "bugFilePath": "community/server/src/functionaltest/java/org/neo4j/server/rest/IndexRelationshipFunctionalTest.java",
        "fixPatch": "diff --git a/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexRelationshipFunctionalTest.java b/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexRelationshipFunctionalTest.java\nindex c61fa2f..4a03e61 100644\n--- a/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexRelationshipFunctionalTest.java\n+++ b/community/server/src/functionaltest/java/org/neo4j/server/rest/IndexRelationshipFunctionalTest.java\n@@ -117,7 +117,7 @@\n         JaxRsResponse response = httpPostIndexRelationshipRoot( JsonHelper.createJsonFrom( indexSpecification ) );\n         assertEquals( 201, response.getStatus() );\n         assertNotNull( response.getHeaders().get( \"Location\" ).get( 0 ) );\n-        assertEquals( helper.getRelationshipIndexes().length, 1 );\n+        assertEquals( 1, helper.getRelationshipIndexes().length);\n         assertNotNull( helper.getRelationshipIndex( indexName ) );\n     }\n \n",
        "projectName": "neo4j.neo4j",
        "bugLineNum": 120,
        "bugNodeStartChar": 3885,
        "bugNodeLength": 57,
        "fixLineNum": 120,
        "fixNodeStartChar": 3885,
        "fixNodeLength": 56,
        "sourceBeforeFix": "assertEquals(helper.getRelationshipIndexes().length,1)",
        "sourceAfterFix": "assertEquals(1,helper.getRelationshipIndexes().length)"
    },
    {
        "bugType": "SWAP_ARGUMENTS",
        "fixCommitSHA1": "16767e5187b0d75a180aa8a3678d7afe6bc6f0da",
        "fixCommitParentSHA1": "2d90802070fc1762fc3154b002b388771f072e88",
        "bugFilePath": "presto-server/src/main/java/com/facebook/presto/server/StatementResource.java",
        "fixPatch": "diff --git a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\nindex b5f691a..8da0f0f 100644\n--- a/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n+++ b/presto-server/src/main/java/com/facebook/presto/server/StatementResource.java\n@@ -106,7 +106,7 @@\n         this.queryManager = checkNotNull(queryManager, \"queryManager is null\");\n         this.httpClient = checkNotNull(httpClient, \"httpClient is null\");\n \n-        queryPurger.scheduleAtFixedRate(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n+        queryPurger.scheduleWithFixedDelay(new PurgeQueriesRunnable(queries.keySet(), queryManager), 200, 200, TimeUnit.MILLISECONDS);\n     }\n \n     @PreDestroy\n@@ -600,9 +600,9 @@\n                 // do not call queryManager.getQueryInfo() since it updates the heartbeat time\n                 Set<QueryId> liveQueries = ImmutableSet.copyOf(transform(queryManager.getAllQueryInfo(), queryIdGetter()));\n \n-                Set<QueryId> deadQueries = Sets.difference(liveQueries, queryIdsSnapshot);\n+                Set<QueryId> deadQueries = Sets.difference(queryIdsSnapshot, liveQueries);\n                 for (QueryId deadQuery : deadQueries) {\n-                    queryIdsSnapshot.remove(deadQuery);\n+                    queryIds.remove(deadQuery);\n                     log.debug(\"Removed expired query %s\", deadQuery);\n                 }\n             }\n",
        "projectName": "facebook.presto",
        "bugLineNum": 603,
        "bugNodeStartChar": 24319,
        "bugNodeLength": 46,
        "fixLineNum": 603,
        "fixNodeStartChar": 24319,
        "fixNodeLength": 46,
        "sourceBeforeFix": "Sets.difference(liveQueries,queryIdsSnapshot)",
        "sourceAfterFix": "Sets.difference(queryIdsSnapshot,liveQueries)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "8ad270d80cf8e4743af883b5a7c863cc638bff48",
        "fixCommitParentSHA1": "c83dfd3a1ebf933b4792a6efb6b40bad5496bb9c",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\nindex c4663ed..e981992 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/lock/LockBasicTest.java\n@@ -180,7 +180,7 @@\n             }\n         }).start();\n         latch.await();\n-        assertTrue(lock.tryLock(3, TimeUnit.SECONDS));\n+        assertTrue(lock.tryLock(30, TimeUnit.SECONDS));\n \n         assertTrue(lock.isLocked());\n         assertTrue(lock.isLockedByCurrentThread());\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 183,
        "bugNodeStartChar": 5818,
        "bugNodeLength": 33,
        "fixLineNum": 183,
        "fixNodeStartChar": 5818,
        "fixNodeLength": 34,
        "sourceBeforeFix": "lock.tryLock(3,TimeUnit.SECONDS)",
        "sourceAfterFix": "lock.tryLock(30,TimeUnit.SECONDS)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4156ed69f5a554a2a0f6ae1fe0e411db1e7ab8d3",
        "fixCommitParentSHA1": "d91a8647933b641032a76c213f8823e2a1ba7aae",
        "bugFilePath": "jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java",
        "fixPatch": "diff --git a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\nindex d0561c7..4d1e98b 100644\n--- a/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n+++ b/jmx/src/main/java/org/jboss/as/jmx/PluggableMBeanServerImpl.java\n@@ -224,7 +224,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n@@ -252,7 +252,7 @@\n         MBeanServerPlugin delegate = null;\n         final boolean readOnly = false;\n         try {\n-            delegate = findDelegate(name);\n+            delegate = findDelegateForNewObject(name);\n             if (delegate.shouldAuthorize()) {\n                 authorizeSensitiveOperation(CREATE_MBEAN, readOnly, true);\n             }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 227,
        "bugNodeStartChar": 10305,
        "bugNodeLength": 18,
        "fixLineNum": 227,
        "fixNodeStartChar": 10305,
        "fixNodeLength": 30,
        "sourceBeforeFix": "findDelegate(name)",
        "sourceAfterFix": "findDelegateForNewObject(name)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "fe569ea7a31f2a85393eea1bb4fd0b648a0d5a97",
        "fixCommitParentSHA1": "9bfeab2c8a802b24e867c8f1ba424969ce206903",
        "bugFilePath": "handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java",
        "fixPatch": "diff --git a/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java\nindex 67de79d..3758e4f 100644\n--- a/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java\n+++ b/handler/src/main/java/io/netty/handler/ssl/OpenSslContext.java\n@@ -547,7 +547,7 @@\n \n             ByteBuf buffer = allocator.directBuffer(content.readableBytes());\n             try {\n-                buffer.writeBytes(content);\n+                buffer.writeBytes(content, content.readerIndex(), content.readableBytes());\n                 return newBIO(buffer.retainedSlice());\n             } finally {\n                 try {\n",
        "projectName": "netty.netty",
        "bugLineNum": 550,
        "bugNodeStartChar": 21812,
        "bugNodeLength": 26,
        "fixLineNum": 550,
        "fixNodeStartChar": 21812,
        "fixNodeLength": 74,
        "sourceBeforeFix": "buffer.writeBytes(content)",
        "sourceAfterFix": "buffer.writeBytes(content,content.readerIndex(),content.readableBytes())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "3ae514dcbcea3287baaf498f28cce0267a2d50bb",
        "fixCommitParentSHA1": "c22a5697f827ceec5df8d12bdeab1e27129d4f88",
        "bugFilePath": "host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java",
        "fixPatch": "diff --git a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\nindex 63234a0..49f1b7f 100644\n--- a/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n+++ b/host-controller/src/main/java/org/jboss/as/host/controller/HostControllerMessages.java\n@@ -578,46 +578,46 @@\n     @Message(id = 10994, value = \"Home directory does not exist: %s\")\n     IllegalStateException homeDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15848, value = \"Determined modules directory does not exist: %s\")\n+    @Message(id = 10995, value = \"Determined modules directory does not exist: %s\")\n     IllegalStateException modulesDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15849, value = \"Domain base directory does not exist: %s\")\n+    @Message(id = 10996, value = \"Domain base directory does not exist: %s\")\n     IllegalStateException domainBaseDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15850, value = \"Domain base directory is not a directory: %s\")\n+    @Message(id = 10997, value = \"Domain base directory is not a directory: %s\")\n     IllegalStateException domainBaseDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15851, value = \"Configuration directory does not exist: %s\")\n+    @Message(id = 10998, value = \"Configuration directory does not exist: %s\")\n     IllegalStateException configDirectoryDoesNotExist(File f);\n \n-    @Message(id = 15852, value = \"Domain data directory is not a directory: %s\")\n+    @Message(id = 10999, value = \"Domain data directory is not a directory: %s\")\n     IllegalStateException domainDataDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15853, value = \"Could not create domain data directory: %s\")\n+    @Message(id = 16500, value = \"Could not create domain data directory: %s\")\n     IllegalStateException couldNotCreateDomainDataDirectory(File file);\n \n-    @Message(id = 15854, value = \"Domain content directory is not a directory: %s\")\n+    @Message(id = 16501, value = \"Domain content directory is not a directory: %s\")\n     IllegalStateException domainContentDirectoryIsNotDirectory(File file);\n \n-    @Message(id = 15855, value = \"Could not create domain content directory: %s\")\n+    @Message(id = 16502, value = \"Could not create domain content directory: %s\")\n     IllegalStateException couldNotCreateDomainContentDirectory(File file);\n \n-    @Message(id = 15856, value = \"Log directory is not a directory: %s\")\n+    @Message(id = 16503, value = \"Log directory is not a directory: %s\")\n     IllegalStateException logDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15857, value = \"Could not create log directory: %s\")\n+    @Message(id = 16504, value = \"Could not create log directory: %s\")\n     IllegalStateException couldNotCreateLogDirectory(File f);\n \n-    @Message(id = 15858, value = \"Servers directory is not a directory: %s\")\n+    @Message(id = 16505, value = \"Servers directory is not a directory: %s\")\n     IllegalStateException serversDirectoryIsNotADirectory(File f);\n \n-    @Message(id = 15859, value = \"Could not create servers directory: %s\")\n+    @Message(id = 16506, value = \"Could not create servers directory: %s\")\n     IllegalStateException couldNotCreateServersDirectory(File f);\n \n-    @Message(id = 15860, value = \"Domain temp directory does not exist: %s\")\n+    @Message(id = 16507, value = \"Domain temp directory does not exist: %s\")\n     IllegalStateException domainTempDirectoryIsNotADirectory(File file);\n \n-    @Message(id = 15861, value = \"Could not create domain temp directory: %s\")\n+    @Message(id = 16508, value = \"Could not create domain temp directory: %s\")\n     IllegalStateException couldNotCreateDomainTempDirectory(File file);\n \n     /**\n@@ -627,18 +627,18 @@\n      *\n      * @return an {@link IllegalStateException} for the error.\n      */\n-    @Message(id = 15862, value = \"Unable to connect due to SSL failure.\")\n+    @Message(id = 16509, value = \"Unable to connect due to SSL failure.\")\n     IllegalStateException sslFailureUnableToConnect(@Cause Throwable cause);\n \n-    @Message(id = 15863, value = \"Option '%s' already exists\")\n+    @Message(id = 16510, value = \"Option '%s' already exists\")\n     IllegalStateException jvmOptionAlreadyExists(String option);\n \n-    @Message(id = 15864, value = \"Environment variable '%s' already exists\")\n+    @Message(id = 16511, value = \"Environment variable '%s' already exists\")\n     IllegalStateException envVariableAlreadyExists(String var);\n \n-    @Message(id=15865, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n+    @Message(id = 16512, value=\"Host controller management version %s.%s is too old, Only %s.%s or higher are supported\")\n     OperationFailedException unsupportedManagementVersionForHost(int major, int minor, int minMajor, int minMinor);\n \n-    @Message(id=15866, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n+    @Message(id = 16513, value=\"Failed to add extensions used by the domain. Failure description: %s\")\n     IllegalStateException failedToAddExtensions(ModelNode failureDescription);\n }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 614,
        "bugNodeStartChar": 23305,
        "bugNodeLength": 10,
        "fixLineNum": 614,
        "fixNodeStartChar": 23305,
        "fixNodeLength": 10,
        "sourceBeforeFix": "id=15859",
        "sourceAfterFix": "id=16506"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "80f6215ed3e0c1fe902342b2cd9a55f460dc08be",
        "fixCommitParentSHA1": "9c34ed16ff762ea4170b9449ee7da89247afdb5c",
        "bugFilePath": "src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java",
        "fixPatch": "diff --git a/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java b/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\nindex e404bd8..3f7be8d 100644\n--- a/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\n+++ b/src/main/java/com/hankcs/hanlp/corpus/dictionary/NSDictionaryMaker.java\n@@ -91,7 +91,7 @@\n             while (iterator.hasNext())\n             {\n                 IWord current = iterator.next();\n-                if (current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\"))\n+                if (current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\") && !pre.getValue().equals(Predefine.TAG_BIGIN))\n                 {\n                     pre.setLabel(NS.A.toString());\n                 }\n",
        "projectName": "hankcs.HanLP",
        "bugLineNum": 94,
        "bugNodeStartChar": 3021,
        "bugNodeLength": 71,
        "fixLineNum": 94,
        "fixNodeStartChar": 3021,
        "fixNodeLength": 118,
        "sourceBeforeFix": "current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\")",
        "sourceAfterFix": "current.getLabel().startsWith(\"ns\") && !pre.getLabel().startsWith(\"ns\") && !pre.getValue().equals(Predefine.TAG_BIGIN)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "4cd1f08314076c86ecb4d1e8699cdcbbaba6b567",
        "fixCommitParentSHA1": "0a9129cbc57187d61b273c10c49b03026a7047e0",
        "bugFilePath": "ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java",
        "fixPatch": "diff --git a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\nindex 19e8781..a414025 100644\n--- a/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n+++ b/ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java\n@@ -748,9 +748,9 @@\n \n             //Type\n             AttributeType attributeType = AttributeType.STRING;\n-            if (type.equalsIgnoreCase(\"boolean\")) {\n+            if (type.equalsIgnoreCase(\"boolean\") || type.equalsIgnoreCase(\"bool\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_BOOLEAN : AttributeType.BOOLEAN;\n-            } else if (type.equalsIgnoreCase(\"integer\")) {\n+            } else if (type.equalsIgnoreCase(\"integer\") || type.equalsIgnoreCase(\"int\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_INT : AttributeType.INT;\n             } else if (type.equalsIgnoreCase(\"long\")) {\n                 attributeType = dynamic ? AttributeType.DYNAMIC_LONG : AttributeType.LONG;\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 751,
        "bugNodeStartChar": 31199,
        "bugNodeLength": 32,
        "fixLineNum": 751,
        "fixNodeStartChar": 31199,
        "fixNodeLength": 65,
        "sourceBeforeFix": "type.equalsIgnoreCase(\"boolean\")",
        "sourceAfterFix": "type.equalsIgnoreCase(\"boolean\") || type.equalsIgnoreCase(\"bool\")"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "63a368bf671e3356c5be441b8833bad844a4ff8e",
        "fixCommitParentSHA1": "83a61950f79424caccd548888d8b58a59905d379",
        "bugFilePath": "integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java",
        "fixPatch": "diff --git a/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java b/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\nindex 056519f..edf75e2 100644\n--- a/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\n+++ b/integration-tests/src/test/java/tachyon/master/lineage/LineageMasterIntegrationTest.java\n@@ -142,11 +142,11 @@\n           fileInfo.getPersistenceState());\n \n       // sleep and wait for worker to persist the file\n-      CommonUtils.sleepMs(5);\n+      CommonUtils.sleepMs(200);\n \n       // worker notifies the master\n       HeartbeatScheduler.schedule(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC);\n-      Assert.assertTrue(HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC, 5,\n+      Assert.assertTrue(HeartbeatScheduler.await(HeartbeatContext.WORKER_FILESYSTEM_MASTER_SYNC, 500,\n           TimeUnit.SECONDS));\n \n       fileInfo = getFileSystemMasterClient().getFileInfo(fileId);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 145,
        "bugNodeStartChar": 6038,
        "bugNodeLength": 22,
        "fixLineNum": 145,
        "fixNodeStartChar": 6038,
        "fixNodeLength": 24,
        "sourceBeforeFix": "CommonUtils.sleepMs(5)",
        "sourceAfterFix": "CommonUtils.sleepMs(200)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "bb5f9fe078e7d586d04d5858792f10e2fdc20ec3",
        "fixCommitParentSHA1": "a2cd01b32bffb6fe33d34362670c8bdc4ff9974b",
        "bugFilePath": "transport/src/main/java/io/netty/channel/DefaultChannelId.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/DefaultChannelId.java b/transport/src/main/java/io/netty/channel/DefaultChannelId.java\nindex fdc55b0..b31663c 100644\n--- a/transport/src/main/java/io/netty/channel/DefaultChannelId.java\n+++ b/transport/src/main/java/io/netty/channel/DefaultChannelId.java\n@@ -280,7 +280,7 @@\n     }\n \n     private static int scoreAddress(InetAddress addr) {\n-        if (addr.isAnyLocalAddress()) {\n+        if (addr.isAnyLocalAddress() || addr.isLoopbackAddress()) {\n             return 0;\n         }\n         if (addr.isMulticastAddress()) {\n",
        "projectName": "netty.netty",
        "bugLineNum": 283,
        "bugNodeStartChar": 10135,
        "bugNodeLength": 24,
        "fixLineNum": 283,
        "fixNodeStartChar": 10135,
        "fixNodeLength": 52,
        "sourceBeforeFix": "addr.isAnyLocalAddress()",
        "sourceAfterFix": "addr.isAnyLocalAddress() || addr.isLoopbackAddress()"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "c3298a9ee990eeeeabadb36b035433338e878ecf",
        "fixCommitParentSHA1": "da790091a3253ef46dc266d35d444a257a0070e9",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\nindex 57c3201..5278d05 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/HiveClient.java\n@@ -585,7 +585,7 @@\n                                 break;\n                             case DOUBLE:\n                                 if (value.isEmpty()) {\n-                                    builder.put(columnHandle, 0L);\n+                                    builder.put(columnHandle, 0.0);\n                                 }\n                                 else {\n                                     builder.put(columnHandle, parseDouble(value));\n",
        "projectName": "facebook.presto",
        "bugLineNum": 588,
        "bugNodeStartChar": 24614,
        "bugNodeLength": 29,
        "fixLineNum": 588,
        "fixNodeStartChar": 24614,
        "fixNodeLength": 30,
        "sourceBeforeFix": "builder.put(columnHandle,0L)",
        "sourceAfterFix": "builder.put(columnHandle,0.0)"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "a18e8b3a4a095ccb7c02dec0f93510a2bc4a3f27",
        "fixCommitParentSHA1": "23d2bf5fe7821b00999cae8dfa6e75ecc7f43cd7",
        "bugFilePath": "src/main/java/com/alibaba/druid/sql/parser/Lexer.java",
        "fixPatch": "diff --git a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\nindex 531b4ba..fbbb6d3 100644\n--- a/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n+++ b/src/main/java/com/alibaba/druid/sql/parser/Lexer.java\n@@ -450,13 +450,13 @@\n                     return;\n                 case '?':\n                     scanChar();\n-                    if (ch == '?') {\n+                    if (ch == '?' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESQUES;\n-                    } else if (ch == '|') {\n+                    } else if (ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESBAR;\n-                    } else if (ch == '&') {\n+                    } else if (ch == '&' && JdbcConstants.POSTGRESQL.equals(dbType)) {\n                         scanChar();\n                         token = Token.QUESAMP;\n                     } else {\n",
        "projectName": "alibaba.druid",
        "bugLineNum": 456,
        "bugNodeStartChar": 12281,
        "bugNodeLength": 9,
        "fixLineNum": 456,
        "fixNodeStartChar": 12281,
        "fixNodeLength": 52,
        "sourceBeforeFix": "ch == '|'",
        "sourceAfterFix": "ch == '|' && JdbcConstants.POSTGRESQL.equals(dbType)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "5e7873ebd45790d9d72eb9d312de4611dc97f796",
        "fixCommitParentSHA1": "ea1743c1045cf359c88ad2c43fcc6d74160c6619",
        "bugFilePath": "modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java",
        "fixPatch": "diff --git a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\nindex 2ae8ddf..cf8e5e5 100644\n--- a/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n+++ b/modules/activiti-engine/src/test/java/org/activiti/engine/test/history/HistoricActivityInstanceTest.java\n@@ -100,9 +100,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(\"nonExistingExecutionId\").list().size());\n     \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().executionId(processInstance.getId()).list().size());\n     }\n@@ -110,9 +110,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(\"nonExistingProcessInstanceId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processInstanceId(processInstance.getId()).list().size());\n     }\n@@ -120,9 +120,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(\"nonExistingProcessDefinitionId\").list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size());\n     }\n@@ -130,9 +130,9 @@\n     assertEquals(0, historyService.createHistoricActivityInstanceQuery().unfinished().list().size());\n \n     if (processEngineConfiguration.getHistoryLevel()==ProcessEngineConfigurationImpl.HISTORYLEVEL_FULL) {\n-      assertEquals(2, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else if (processEngineConfiguration.getHistoryLevel()>=ProcessEngineConfigurationImpl.HISTORYLEVEL_ACTIVITY) {\n-      assertEquals(1, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n+      assertEquals(3, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     } else {\n       assertEquals(0, historyService.createHistoricActivityInstanceQuery().finished().list().size());\n     }\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 123,
        "bugNodeStartChar": 6585,
        "bugNodeLength": 145,
        "fixLineNum": 123,
        "fixNodeStartChar": 6585,
        "fixNodeLength": 145,
        "sourceBeforeFix": "assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())",
        "sourceAfterFix": "assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "57c1a20ed514174389b336b03ba40c191e2c6d32",
        "fixCommitParentSHA1": "1bfd2a3176f89ecfae25af2343708f9f2bb1c811",
        "bugFilePath": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java",
        "fixPatch": "diff --git a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\nindex 296483c..5d4619d 100644\n--- a/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n+++ b/catalog/camel-route-parser/src/test/java/org/apache/camel/parser/java/RoasterEndpointInjectTest.java\n@@ -48,26 +48,26 @@\n         Assert.assertEquals(\"timer:foo?period=4999\", details.get(0).getEndpointUri());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumber());\n         Assert.assertEquals(\"28\", details.get(0).getLineNumberEnd());\n-        Assert.assertEquals(1062, details.get(0).getAbsolutePosition());\n+        Assert.assertEquals(1061, details.get(0).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(0).getLinePosition());\n \n         Assert.assertEquals(\"log:a\", details.get(1).getEndpointUri());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumber());\n         Assert.assertEquals(\"32\", details.get(1).getLineNumberEnd());\n-        Assert.assertEquals(1145, details.get(1).getAbsolutePosition());\n+        Assert.assertEquals(1144, details.get(1).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(1).getLinePosition());\n \n         Assert.assertEquals(\"netty4-http:http:someserver:80/hello\", details.get(2).getEndpointUri());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumber());\n         Assert.assertEquals(\"36\", details.get(2).getLineNumberEnd());\n-        Assert.assertEquals(1203, details.get(2).getAbsolutePosition());\n+        Assert.assertEquals(1202, details.get(2).getAbsolutePosition());\n         Assert.assertEquals(10, details.get(2).getLinePosition());\n \n         // spans 2 lines\n         Assert.assertEquals(\"mock:foo?retainFirst=1\", details.get(6).getEndpointUri());\n         Assert.assertEquals(\"45\", details.get(6).getLineNumber());\n         Assert.assertEquals(\"46\", details.get(6).getLineNumberEnd());\n-        Assert.assertEquals(1457, details.get(6).getAbsolutePosition());\n+        Assert.assertEquals(1456, details.get(6).getAbsolutePosition());\n         Assert.assertEquals(17, details.get(6).getLinePosition());\n \n         List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method, true, true);\n",
        "projectName": "apache.camel",
        "bugLineNum": 63,
        "bugNodeStartChar": 3034,
        "bugNodeLength": 63,
        "fixLineNum": 63,
        "fixNodeStartChar": 3034,
        "fixNodeLength": 63,
        "sourceBeforeFix": "Assert.assertEquals(1203,details.get(2).getAbsolutePosition())",
        "sourceAfterFix": "Assert.assertEquals(1202,details.get(2).getAbsolutePosition())"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "40db776fd1a038366d4e72c6b81f21b88792122a",
        "fixCommitParentSHA1": "817b2beee208f6dff1c9393209d261a77d7666cf",
        "bugFilePath": "testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java",
        "fixPatch": "diff --git a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\nindex 12b1036..6560668 100644\n--- a/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n+++ b/testsuite/integration/elytron/src/test/java/org/wildfly/test/integration/elytron/ejb/AuthenticationTestCase.java\n@@ -80,7 +80,7 @@\n @Category(CommonCriteria.class)\n public class AuthenticationTestCase {\n \n-    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getServerAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n+    private static final String SERVER_HOST_PORT = TestSuiteEnvironment.getHttpAddress() + \":\" + TestSuiteEnvironment.getHttpPort();\n     private static final String WAR_URL = \"http://\" + SERVER_HOST_PORT + \"/ejb3security/\";\n \n     /*\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 83,
        "bugNodeStartChar": 3644,
        "bugNodeLength": 39,
        "fixLineNum": 83,
        "fixNodeStartChar": 3644,
        "fixNodeLength": 37,
        "sourceBeforeFix": "TestSuiteEnvironment.getServerAddress()",
        "sourceAfterFix": "TestSuiteEnvironment.getHttpAddress()"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "b615640bd31e6a69102f1bb9c3649564669baab0",
        "fixCommitParentSHA1": "a6bee6103e72c22423e1612e9085e0be449989bb",
        "bugFilePath": "remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java",
        "fixPatch": "diff --git a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\nindex dcf4657..df44070 100644\n--- a/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\n+++ b/remoting/src/main/java/org/jboss/as/remoting/RemotingSubsystem11Parser.java\n@@ -435,7 +435,7 @@\n         final PathAddress address = PathAddress.pathAddress(PathAddress.pathAddress(parentAddress), PathElement.pathElement(CommonAttributes.REMOTE_OUTBOUND_CONNECTION, name));\n \n         // create add operation add it to the list of operations\n-        operations.add(getConnectionAddOperation(name, outboundSocketBindingRef, address));\n+        operations.add(getConnectionAddOperation(name, outboundSocketBindingRef, username, securityRealm, address));\n         // parse the nested elements\n         final EnumSet<Element> visited = EnumSet.noneOf(Element.class);\n         while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 438,
        "bugNodeStartChar": 20024,
        "bugNodeLength": 66,
        "fixLineNum": 438,
        "fixNodeStartChar": 20024,
        "fixNodeLength": 91,
        "sourceBeforeFix": "getConnectionAddOperation(name,outboundSocketBindingRef,address)",
        "sourceAfterFix": "getConnectionAddOperation(name,outboundSocketBindingRef,username,securityRealm,address)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "26f1133593498a87216f0dd4954ff7c07313b740",
        "fixCommitParentSHA1": "477f59d3e52ea9dbbb27e6ccd12447dbb78672ae",
        "bugFilePath": "test/com/google/javascript/jscomp/Es6VariableReferenceCheckTest.java",
        "fixPatch": "diff --git a/test/com/google/javascript/jscomp/Es6VariableReferenceCheckTest.java b/test/com/google/javascript/jscomp/Es6VariableReferenceCheckTest.java\nindex b708fd0..b64b2de 100644\n--- a/test/com/google/javascript/jscomp/Es6VariableReferenceCheckTest.java\n+++ b/test/com/google/javascript/jscomp/Es6VariableReferenceCheckTest.java\n@@ -367,7 +367,7 @@\n    * Expects the JS to generate one bad-read warning.\n    */\n   private void assertRedeclare(String js) {\n-    testWarning(js, VariableReferenceCheck.REDECLARED_VARIABLE);\n+    testError(js, VariableReferenceCheck.REDECLARED_VARIABLE);\n   }\n \n   /**\n",
        "projectName": "google.closure-compiler",
        "bugLineNum": 370,
        "bugNodeStartChar": 11389,
        "bugNodeLength": 59,
        "fixLineNum": 370,
        "fixNodeStartChar": 11389,
        "fixNodeLength": 57,
        "sourceBeforeFix": "testWarning(js,VariableReferenceCheck.REDECLARED_VARIABLE)",
        "sourceAfterFix": "testError(js,VariableReferenceCheck.REDECLARED_VARIABLE)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "7d5e825abd68a4ffcb86865149b917edf76a47b6",
        "fixCommitParentSHA1": "193474f51804bf6255bfcec58befcb1dc8ff8329",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\nindex 3f85374..9676c4e 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java\n@@ -91,7 +91,7 @@\n     public static DetailAST getAnnotationHolder(DetailAST ast)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         final DetailAST annotationHolder;\n@@ -136,11 +136,11 @@\n         String annotation)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         if (annotation == null) {\n-            throw new NullPointerException(\"the annotation is null\");\n+            throw new IllegalArgumentException(\"the annotation is null\");\n         }\n \n         if (StringUtils.isBlank(annotation)) {\n@@ -179,7 +179,7 @@\n     public static DetailAST annotatingWhat(DetailAST ast)\n     {\n         if (ast == null) {\n-            throw new NullPointerException(\"the ast is null\");\n+            throw new IllegalArgumentException(\"the ast is null\");\n         }\n \n         if (ast.getType() != TokenTypes.ANNOTATION) {\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 94,
        "bugNodeStartChar": 3308,
        "bugNodeLength": 43,
        "fixLineNum": 94,
        "fixNodeStartChar": 3308,
        "fixNodeLength": 47,
        "sourceBeforeFix": "new NullPointerException(\"the ast is null\")",
        "sourceAfterFix": "new IllegalArgumentException(\"the ast is null\")"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "98c988a5bd57ee4324cc80cf87be5993a00a537b",
        "fixCommitParentSHA1": "289b2b85550e0de00703a8914fa87e7e00339928",
        "bugFilePath": "components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowComponent.java",
        "fixPatch": "diff --git a/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowComponent.java b/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowComponent.java\nindex 4690eee..29b528a 100644\n--- a/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowComponent.java\n+++ b/components/camel-servicenow/src/main/java/org/apache/camel/component/servicenow/ServiceNowComponent.java\n@@ -57,7 +57,7 @@\n         }\n \n         Map<String, Object> responseModels = IntrospectionSupport.extractProperties(parameters, \"responseModel.\");\n-        for (Map.Entry<String, Object> entry : requestModels.entrySet()) {\n+        for (Map.Entry<String, Object> entry : responseModels.entrySet()) {\n             configuration.addResponseModel(\n                 entry.getKey(),\n                 EndpointHelper.resolveParameter(context, (String)entry.getValue(), Class.class));\n",
        "projectName": "apache.camel",
        "bugLineNum": 60,
        "bugNodeStartChar": 2582,
        "bugNodeLength": 24,
        "fixLineNum": 60,
        "fixNodeStartChar": 2582,
        "fixNodeLength": 25,
        "sourceBeforeFix": "requestModels.entrySet()",
        "sourceAfterFix": "responseModels.entrySet()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "08d6809933b9ad51cba7731ec5de7e35857e9b22",
        "fixCommitParentSHA1": "fab036055d985cabb131154ee428c4795520f736",
        "bugFilePath": "bundles/model/org.openhab.model.item/src/org/openhab/model/item/internal/GenericItemProvider.java",
        "fixPatch": "diff --git a/bundles/model/org.openhab.model.item/src/org/openhab/model/item/internal/GenericItemProvider.java b/bundles/model/org.openhab.model.item/src/org/openhab/model/item/internal/GenericItemProvider.java\nindex 963aa60..2268064 100644\n--- a/bundles/model/org.openhab.model.item/src/org/openhab/model/item/internal/GenericItemProvider.java\n+++ b/bundles/model/org.openhab.model.item/src/org/openhab/model/item/internal/GenericItemProvider.java\n@@ -143,7 +143,7 @@\n \t */\n \t@Override\n \tpublic Collection<Item> getItems() {\n-\t\tSet<Item> items = new HashSet<Item>();\n+\t\tList<Item> items = new ArrayList<Item>();\n \t\tfor (String name : modelRepository.getAllModelNamesOfType(\"items\")) {\n \t\t\titems.addAll(getItemsFromModel(name));\n \t\t}\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 146,
        "bugNodeStartChar": 5090,
        "bugNodeLength": 9,
        "fixLineNum": 146,
        "fixNodeStartChar": 5090,
        "fixNodeLength": 10,
        "sourceBeforeFix": "Set<Item>",
        "sourceAfterFix": "List<Item>"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "ad75cdf582309f67d7e5d5bcb71035c67a018b6f",
        "fixCommitParentSHA1": "5bc2200d0f8ff81f585fbb71d95c3266a2789f5b",
        "bugFilePath": "itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java",
        "fixPatch": "diff --git a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\nindex 81fe42a..e26b25e 100644\n--- a/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n+++ b/itest/src/edu/stanford/nlp/pipeline/ProtobufAnnotationSerializerSlowITest.java\n@@ -322,7 +322,7 @@\n \n     // Check size\n     assertTrue(\"\" + compressedProto.length, compressedProto.length < 391000);\n-    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 2100000);\n+    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 2500000);\n   }\n \n   @Test\n",
        "projectName": "stanfordnlp.CoreNLP",
        "bugLineNum": 325,
        "bugNodeStartChar": 45503,
        "bugNodeLength": 34,
        "fixLineNum": 325,
        "fixNodeStartChar": 45503,
        "fixNodeLength": 34,
        "sourceBeforeFix": "uncompressedProto.length < 2100000",
        "sourceAfterFix": "uncompressedProto.length < 2500000"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "28474aa30adebc397ecdb993d62317e5659fce4a",
        "fixCommitParentSHA1": "f21e7940ba9d86cfdd6acd8a3d40d5f5e24806a2",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\nindex d4e0774..356c9fb 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java\n@@ -43,6 +43,7 @@\n  *\n  * @author Gary Russell\n  * @author Stephane Nicoll\n+ * @author Artem Bilan\n  * @since 1.5.0\n  */\n @ConfigurationProperties(prefix = \"spring.kafka\")\n@@ -199,7 +200,7 @@\n \t\t * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka\n \t\t * if 'enable.auto.commit' true.\n \t\t */\n-\t\tprivate Long autoCommitInterval;\n+\t\tprivate Integer autoCommitInterval;\n \n \t\t/**\n \t\t * What to do when there is no initial offset in Kafka or if the current offset\n@@ -264,11 +265,11 @@\n \t\t\treturn this.ssl;\n \t\t}\n \n-\t\tpublic Long getAutoCommitInterval() {\n+\t\tpublic Integer getAutoCommitInterval() {\n \t\t\treturn this.autoCommitInterval;\n \t\t}\n \n-\t\tpublic void setAutoCommitInterval(Long autoCommitInterval) {\n+\t\tpublic void setAutoCommitInterval(Integer autoCommitInterval) {\n \t\t\tthis.autoCommitInterval = autoCommitInterval;\n \t\t}\n \n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 198,
        "bugNodeStartChar": 5905,
        "bugNodeLength": 164,
        "fixLineNum": 198,
        "fixNodeStartChar": 5905,
        "fixNodeLength": 167,
        "sourceBeforeFix": "/**   * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true.  */ private Long autoCommitInterval; ",
        "sourceAfterFix": "/**   * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true.  */ private Integer autoCommitInterval; "
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "57ddaae5fd72ff2cef6d179568640b1fac8f4f08",
        "fixCommitParentSHA1": "a95b418fc34fe6d7e4ca54f81123eb66e2aa1fda",
        "bugFilePath": "src/jvm/backtype/storm/task/ShellBolt.java",
        "fixPatch": "diff --git a/src/jvm/backtype/storm/task/ShellBolt.java b/src/jvm/backtype/storm/task/ShellBolt.java\nindex 72dfd66..041f987 100644\n--- a/src/jvm/backtype/storm/task/ShellBolt.java\n+++ b/src/jvm/backtype/storm/task/ShellBolt.java\n@@ -92,7 +92,7 @@\n             sendToSubprocess(JSONValue.toJSONString(stormConf));\n             sendToSubprocess(context.toJSONString());\n         } catch (IOException e) {\n-            throw new RuntimeException(e);\n+            throw new RuntimeException(\"Error when launching multilang subprocess\", e);\n         }\n     }\n \n@@ -173,7 +173,7 @@\n               }\n             }\n         } catch(IOException e) {\n-            throw new RuntimeException(e);\n+            throw new RuntimeException(\"Error during multilang processing\", e);\n         }\n     }\n \n",
        "projectName": "apache.storm",
        "bugLineNum": 176,
        "bugNodeStartChar": 7133,
        "bugNodeLength": 23,
        "fixLineNum": 176,
        "fixNodeStartChar": 7133,
        "fixNodeLength": 60,
        "sourceBeforeFix": "new RuntimeException(e)",
        "sourceAfterFix": "new RuntimeException(\"Error during multilang processing\",e)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "bd3a6e9e31b2153ea00e964eed4a56a52e5ad57e",
        "fixCommitParentSHA1": "89203640d6d0851e4262a8032ec3b253598dd936",
        "bugFilePath": "gdx/src/com/badlogic/gdx/utils/Json.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/utils/Json.java b/gdx/src/com/badlogic/gdx/utils/Json.java\nindex 91dbe8e..f510ef2 100644\n--- a/gdx/src/com/badlogic/gdx/utils/Json.java\n+++ b/gdx/src/com/badlogic/gdx/utils/Json.java\n@@ -1111,11 +1111,11 @@\n \t * object. The <code>to</code> object must have at least all the fields of the <code>from</code> object with the same name and\n \t * type. */\n \tpublic void copyFields (Object from, Object to) {\n-\t\tOrderedMap<String, FieldMetadata> toFields = getFields(from.getClass());\n+\t\tOrderedMap<String, FieldMetadata> toFields = getFields(to.getClass());\n \t\tfor (ObjectMap.Entry<String, FieldMetadata> entry : getFields(from.getClass())) {\n \t\t\tFieldMetadata toField = toFields.get(entry.key);\n \t\t\tField fromField = entry.value.field;\n-\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field\" + entry.key);\n+\t\t\tif (toField == null) throw new SerializationException(\"To object is missing field: \" + entry.key);\n \t\t\ttry {\n \t\t\t\ttoField.field.set(to, fromField.get(from));\n \t\t\t} catch (ReflectionException ex) {\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 1114,
        "bugNodeStartChar": 42070,
        "bugNodeLength": 15,
        "fixLineNum": 1114,
        "fixNodeStartChar": 42070,
        "fixNodeLength": 13,
        "sourceBeforeFix": "from.getClass()",
        "sourceAfterFix": "to.getClass()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6666af6ab02f1200875ed2ef7364ef8b131eec15",
        "fixCommitParentSHA1": "cff50bf14a7667e7055211d15b6cc8c870b1e96e",
        "bugFilePath": "presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java",
        "fixPatch": "diff --git a/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java b/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\nindex 466d5fd..aa77c9a 100644\n--- a/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\n+++ b/presto-orc/src/main/java/com/facebook/presto/orc/json/JsonReaders.java\n@@ -90,7 +90,7 @@\n             case LIST:\n                 return new ListJsonReader(streamDescriptor, writeStackType, checkForNulls, hiveStorageTimeZone, sessionTimeZone);\n             case MAP:\n-                return new MapJsonReader(streamDescriptor, writeStackType, checkForNulls, sessionTimeZone, sessionTimeZone);\n+                return new MapJsonReader(streamDescriptor, writeStackType, checkForNulls, hiveStorageTimeZone, sessionTimeZone);\n             case UNION:\n             case DECIMAL:\n             case VARCHAR:\n",
        "projectName": "facebook.presto",
        "bugLineNum": 93,
        "bugNodeStartChar": 3813,
        "bugNodeLength": 100,
        "fixLineNum": 93,
        "fixNodeStartChar": 3813,
        "fixNodeLength": 104,
        "sourceBeforeFix": "new MapJsonReader(streamDescriptor,writeStackType,checkForNulls,sessionTimeZone,sessionTimeZone)",
        "sourceAfterFix": "new MapJsonReader(streamDescriptor,writeStackType,checkForNulls,hiveStorageTimeZone,sessionTimeZone)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "2a30b5aba207ce85e6cff7645a6d17f8dbda9521",
        "fixCommitParentSHA1": "764360d861e52e34997f63053a90f4ea869886cd",
        "bugFilePath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
        "fixPatch": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java\nindex 24a93d5..76adfb1 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java\n@@ -92,7 +92,7 @@\n     };\n \n     /** default maximum number of methods */\n-    private static final int DEFAULT_MAX_METHODS = 999;\n+    private static final int DEFAULT_MAX_METHODS = 100;\n     /** Maximum private methods. */\n     private int mMaxPrivate = DEFAULT_MAX_METHODS;\n     /** Maximum package methods. */\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 95,
        "bugNodeStartChar": 3439,
        "bugNodeLength": 25,
        "fixLineNum": 95,
        "fixNodeStartChar": 3439,
        "fixNodeLength": 25,
        "sourceBeforeFix": "DEFAULT_MAX_METHODS=999",
        "sourceAfterFix": "DEFAULT_MAX_METHODS=100"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "5825d83fc69047c2b821beca9d27f69f49533e84",
        "fixCommitParentSHA1": "0ab0e83883dfea096bfce8700c3ed0aa121c7345",
        "bugFilePath": "core/common/src/test/java/alluxio/underfs/options/MkdirsOptionsTest.java",
        "fixPatch": "diff --git a/core/common/src/test/java/alluxio/underfs/options/MkdirsOptionsTest.java b/core/common/src/test/java/alluxio/underfs/options/MkdirsOptionsTest.java\nindex bcf823f..84e9413 100644\n--- a/core/common/src/test/java/alluxio/underfs/options/MkdirsOptionsTest.java\n+++ b/core/common/src/test/java/alluxio/underfs/options/MkdirsOptionsTest.java\n@@ -93,6 +93,6 @@\n \n   @Test\n   public void equalsTest() throws Exception {\n-    CommonTestUtils.testEquals(CreateOptions.class);\n+    CommonTestUtils.testEquals(MkdirsOptions.class);\n   }\n }\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 96,
        "bugNodeStartChar": 3522,
        "bugNodeLength": 19,
        "fixLineNum": 96,
        "fixNodeStartChar": 3522,
        "fixNodeLength": 19,
        "sourceBeforeFix": "CreateOptions.class",
        "sourceAfterFix": "MkdirsOptions.class"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 638,
        "bugNodeStartChar": 31242,
        "bugNodeLength": 128,
        "fixLineNum": 638,
        "fixNodeStartChar": 31242,
        "fixNodeLength": 128,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",null,paging.asPostParameterList(),true))"
    },
    {
        "bugType": "MORE_SPECIFIC_IF",
        "fixCommitSHA1": "0fd824c3bb2382df4ab9495810bab20150db3960",
        "fixCommitParentSHA1": "633fada6ec37f8e8062c23ad8a632e018208687b",
        "bugFilePath": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java",
        "fixPatch": "diff --git a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\nindex a891893..d0425ac 100644\n--- a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n+++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n@@ -742,7 +742,7 @@\n             notifyHandlerException(t);\n         } finally {\n             ChannelBufferHolder<Object> inbound = ctx.inbound();\n-            if (inbound.isEmpty() && inbound.hasByteBuffer()) {\n+            if (!inbound.isBypass() && inbound.isEmpty() && inbound.hasByteBuffer()) {\n                 inbound.byteBuffer().discardReadBytes();\n             }\n         }\n",
        "projectName": "netty.netty",
        "bugLineNum": 745,
        "bugNodeStartChar": 22938,
        "bugNodeLength": 44,
        "fixLineNum": 745,
        "fixNodeStartChar": 22938,
        "fixNodeLength": 67,
        "sourceBeforeFix": "inbound.isEmpty() && inbound.hasByteBuffer()",
        "sourceAfterFix": "!inbound.isBypass() && inbound.isEmpty() && inbound.hasByteBuffer()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "a6dc024ed1176e0a4c523b1a64e8e907e1394d7b",
        "fixCommitParentSHA1": "c15acce17f82e2b055c66c179ea82367a30dee1c",
        "bugFilePath": "bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\nindex 5ff300c..28a8b51 100644\n--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\n+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/ZWaveController.java\n@@ -1178,7 +1178,7 @@\n \t    \t\t\t\tsendAllowed.release();\n \t    \t\t\t}\n \t\t\t\t\trecvMessage = recvQueue.take();\n-\t\t\t\t\tlogger.trace(\"Receive queue TAKE: Length={}\", recvQueue.size());\n+\t\t\t\t\tlogger.debug(\"Receive queue TAKE: Length={}\", recvQueue.size());\n \t\t\t\t\tlogger.debug(\"Process Message = {}\", SerialMessage.bb2hex(recvMessage.getMessageBuffer()));\n \n \t\t    \t\thandleIncomingMessage(recvMessage);\n@@ -1420,7 +1420,7 @@\n     \t\t}\n \n     \t\trecvQueue.add(recvMessage);\n-\t\t\tlogger.trace(\"Receive queue ADD: Length={}\", recvQueue.size());\n+\t\t\tlogger.debug(\"Receive queue ADD: Length={}\", recvQueue.size());\n         }\n \n \t\t/**\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 1423,
        "bugNodeStartChar": 50805,
        "bugNodeLength": 62,
        "fixLineNum": 1423,
        "fixNodeStartChar": 50805,
        "fixNodeLength": 62,
        "sourceBeforeFix": "logger.trace(\"Receive queue ADD: Length={}\",recvQueue.size())",
        "sourceAfterFix": "logger.debug(\"Receive queue ADD: Length={}\",recvQueue.size())"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "39c42c2dc347f1d8b10311c09e436fd4ade63c4c",
        "fixCommitParentSHA1": "148034b9978822f8c478a123131a02b08e26c95e",
        "bugFilePath": "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java",
        "fixPatch": "diff --git a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\nindex 303f803..a844689 100644\n--- a/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n+++ b/gdx/src/com/badlogic/gdx/net/NetJavaImpl.java\n@@ -146,7 +146,7 @@\n \t\t\tconnection.setDoOutput(doingOutPut);\r\n \t\t\tconnection.setDoInput(true);\r\n \t\t\tconnection.setRequestMethod(method);\r\n-\t\t\tconnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n+\t\t\tHttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects());\r\n \r\n \t\t\tlock.lock();\r\n \t\t\tconnections.put(httpRequest, connection);\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 149,
        "bugNodeStartChar": 4832,
        "bugNodeLength": 63,
        "fixLineNum": 149,
        "fixNodeStartChar": 4684,
        "fixNodeLength": 70,
        "sourceBeforeFix": "connection.setFollowRedirects(httpRequest.getFollowRedirects())",
        "sourceAfterFix": "HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "6efaa261a643a8ed1059b1adb4a6f902789a462e",
        "fixCommitParentSHA1": "f3978ed0f9213b5e8f51e2381abbf3f53d6d9048",
        "bugFilePath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java",
        "fixPatch": "diff --git a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\nindex fedae78..9f3813d 100644\n--- a/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\n+++ b/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/ThriftHiveMetastoreClient.java\n@@ -147,10 +147,10 @@\n     }\n \n     @Override\n-    public Map<String, List<ColumnStatisticsObj>> getPartitionColumnStatistics(String databaseName, String tableName, List<String> columnNames, List<String> partitionValues)\n+    public Map<String, List<ColumnStatisticsObj>> getPartitionColumnStatistics(String databaseName, String tableName, List<String> partitionNames, List<String> columnNames)\n             throws TException\n     {\n-        PartitionsStatsRequest partitionsStatsRequest = new PartitionsStatsRequest(databaseName, tableName, columnNames, partitionValues);\n+        PartitionsStatsRequest partitionsStatsRequest = new PartitionsStatsRequest(databaseName, tableName, columnNames, partitionNames);\n         return client.get_partitions_statistics_req(partitionsStatsRequest).getPartStats();\n     }\n \n",
        "projectName": "facebook.presto",
        "bugLineNum": 153,
        "bugNodeStartChar": 4949,
        "bugNodeLength": 81,
        "fixLineNum": 153,
        "fixNodeStartChar": 4949,
        "fixNodeLength": 80,
        "sourceBeforeFix": "new PartitionsStatsRequest(databaseName,tableName,columnNames,partitionValues)",
        "sourceAfterFix": "new PartitionsStatsRequest(databaseName,tableName,columnNames,partitionNames)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "466bd55e92d40e7193aa1ffd28c823d66aeb0ab6",
        "fixCommitParentSHA1": "89410aa6c5cf375228fd85ab919d0d1497c99416",
        "bugFilePath": "api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java",
        "fixPatch": "diff --git a/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java b/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\nindex 4558844..a0599ee 100644\n--- a/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\n+++ b/api/src/main/java/org/asynchttpclient/util/AsyncHttpProviderUtils.java\n@@ -516,7 +516,7 @@\n     }\n \n     public static int convertExpireField(String timestring) {\n-        String trimmedTimeString = removeQuote(timestring.trim());\n+        String trimmedTimeString = removeQuotes(timestring.trim());\n \n         for (SimpleDateFormat sdf : simpleDateFormat.get()) {\n             Date date = sdf.parse(trimmedTimeString, new ParsePosition(0));\n",
        "projectName": "AsyncHttpClient.async-http-client",
        "bugLineNum": 519,
        "bugNodeStartChar": 18443,
        "bugNodeLength": 30,
        "fixLineNum": 519,
        "fixNodeStartChar": 18443,
        "fixNodeLength": 31,
        "sourceBeforeFix": "removeQuote(timestring.trim())",
        "sourceAfterFix": "removeQuotes(timestring.trim())"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "87fbcfbbd5e2d39f470db8edbd803f4b6d5f3326",
        "fixCommitParentSHA1": "45c3cbe91140fc78165914cb4438aeb8b049b0da",
        "bugFilePath": "core/server/src/main/java/alluxio/master/file/FileSystemMaster.java",
        "fixPatch": "diff --git a/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java b/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java\nindex 6a304df..2a04660 100644\n--- a/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java\n+++ b/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java\n@@ -3046,7 +3046,7 @@\n               LOG.debug(\"File {} is expired. Performing action {}\", inode.getName(), ttlAction);\n               switch (ttlAction) {\n                 case FREE:\n-                  free(path, false);\n+                  free(path, true);\n                   // Reset state\n                   inode.setTtl(Constants.NO_TTL);\n                   inode.setTtlAction(TtlAction.DELETE);\n",
        "projectName": "Alluxio.alluxio",
        "bugLineNum": 3049,
        "bugNodeStartChar": 132445,
        "bugNodeLength": 17,
        "fixLineNum": 3049,
        "fixNodeStartChar": 132445,
        "fixNodeLength": 16,
        "sourceBeforeFix": "free(path,false)",
        "sourceAfterFix": "free(path,true)"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "b6b9cd997b689c70f194da8517910d3bb2d8e843",
        "fixCommitParentSHA1": "adb26f3b776fca66db14d94e4a67d2ff6d9382fd",
        "bugFilePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java",
        "fixPatch": "diff --git a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\nindex 92add30..aa1fc4d 100644\n--- a/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n+++ b/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java\n@@ -610,7 +610,7 @@\n \t\t\t\tswitch (event.phase) {\n \t\t\t\tcase Began:\n \t\t\t\t\tif (inputProcessor != null) inputProcessor.touchDown(event.x, event.y, event.pointer, Buttons.LEFT);\n-\t\t\t\t\tif (numTouched == 1) justTouched = true;\n+\t\t\t\t\tif (numTouched >= 1) justTouched = true;\n \t\t\t\t\tbreak;\n \t\t\t\tcase Cancelled:\n \t\t\t\tcase Ended:\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 613,
        "bugNodeStartChar": 17412,
        "bugNodeLength": 15,
        "fixLineNum": 613,
        "fixNodeStartChar": 17412,
        "fixNodeLength": 15,
        "sourceBeforeFix": "numTouched == 1",
        "sourceAfterFix": "numTouched >= 1"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "7a90cfe13f0b030f6e091154c1d0091c685039f1",
        "fixCommitParentSHA1": "dcab2405bf679ffa4d9b569ee44b9a7bdce5b04f",
        "bugFilePath": "graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java",
        "fixPatch": "diff --git a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\nindex e76f579..f4a31ca 100644\n--- a/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n+++ b/graylog2-rest-client/src/main/java/org/graylog2/restclient/models/Node.java\n@@ -132,7 +132,7 @@\n     public BufferInfo getBufferInfo() {\n         try {\n             return new BufferInfo(\n-                    api.path(routes.BufferResource().utilization(), BuffersResponse.class)\n+                    api.path(routes.BuffersResource().utilization(), BuffersResponse.class)\n                             .node(this)\n                             .execute());\n         } catch (Exception e) {\n@@ -143,7 +143,7 @@\n \n     public BufferClassesResponse getBufferClasses() {\n         try {\n-            return api.path(routes.BufferResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n+            return api.path(routes.BuffersResource().getBufferClasses(), BufferClassesResponse.class).node(this).execute();\n         } catch (Exception e) {\n             LOG.error(\"Unable to read buffer class names from node \" + this, e);\n         }\n",
        "projectName": "Graylog2.graylog2-server",
        "bugLineNum": 135,
        "bugNodeStartChar": 5421,
        "bugNodeLength": 23,
        "fixLineNum": 135,
        "fixNodeStartChar": 5421,
        "fixNodeLength": 24,
        "sourceBeforeFix": "routes.BufferResource()",
        "sourceAfterFix": "routes.BuffersResource()"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "2d33b55fe052a4d63faffac8f3989c1c7d0febd1",
        "fixCommitParentSHA1": "b19d39339b665b6424b6cd4de7e7ba28471ff476",
        "bugFilePath": "web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java",
        "fixPatch": "diff --git a/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java b/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\nindex 58bffa6..eb92600 100644\n--- a/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\n+++ b/web/src/main/java/com/navercorp/pinpoint/web/vo/LinkKey.java\n@@ -103,7 +103,7 @@\n     @Override\n     public int hashCode() {\n         final int hash = this.hash;\n-        if (hash == 0) {\n+        if (hash != 0) {\n             return hash;\n         }\n         int result = fromApplication.hashCode();\n",
        "projectName": "naver.pinpoint",
        "bugLineNum": 106,
        "bugNodeStartChar": 3274,
        "bugNodeLength": 9,
        "fixLineNum": 106,
        "fixNodeStartChar": 3274,
        "fixNodeLength": 9,
        "sourceBeforeFix": "hash == 0",
        "sourceAfterFix": "hash != 0"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "6aff6baea9a815da5528f09bf1dac322a002fdc5",
        "fixCommitParentSHA1": "d49cd70632f03d68a19e9329308af4d89813b836",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java b/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\nindex ccf4183..0cb3d71 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/interceptor/BroadcastOnPostAtmosphereInterceptor.java\n@@ -55,7 +55,7 @@\n                 InputStream inputStream = r.getRequest().getInputStream();\n                 if (inputStream != null) {\n                     bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n-                    char[] charBuffer = new char[128];\n+                    char[] charBuffer = new char[8192];\n                     int bytesRead = -1;\n                     while ((bytesRead = bufferedReader.read(charBuffer)) > 0) {\n                         stringBuilder.append(charBuffer, 0, bytesRead);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 58,
        "bugNodeStartChar": 2171,
        "bugNodeLength": 13,
        "fixLineNum": 58,
        "fixNodeStartChar": 2171,
        "fixNodeLength": 14,
        "sourceBeforeFix": "new char[128]",
        "sourceAfterFix": "new char[8192]"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "8ce55ac632d89935288ef4a6fc1cdb640fef3884",
        "fixCommitParentSHA1": "8948c8d4ca3aa28aae5e12fee0a587d9c4d14040",
        "bugFilePath": "merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorMain.java",
        "fixPatch": "diff --git a/merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorMain.java b/merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorMain.java\nindex b55060b..f495aad 100644\n--- a/merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorMain.java\n+++ b/merger/src/main/java/com/metamx/druid/merger/worker/executor/ExecutorMain.java\n@@ -37,7 +37,7 @@\n   {\n     LogLevelAdjuster.register();\n \n-    if (args.length != 3) {\n+    if (args.length != 2) {\n       log.info(\"Usage: ExecutorMain <task.json> <status.json>\");\n       System.exit(2);\n     }\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 40,
        "bugNodeStartChar": 1281,
        "bugNodeLength": 16,
        "fixLineNum": 40,
        "fixNodeStartChar": 1281,
        "fixNodeLength": 16,
        "sourceBeforeFix": "args.length != 3",
        "sourceAfterFix": "args.length != 2"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "22d5241b5f75631e9cfda82a6912a2555eecb165",
        "fixCommitParentSHA1": "89339ede11e22b7a6a21400a5c59e1c361f5c94e",
        "bugFilePath": "components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java",
        "fixPatch": "diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\nindex fcc2ed7..2a2030a 100644\n--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java\n@@ -72,10 +72,10 @@\n         if (channel == null) {\n             initializeChannel();\n             if (endpoint.isSynchronous()) {\n-                LOG.info(\"Getting synchronous method stub from channel\");\n+                LOG.debug(\"Getting synchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcBlockingStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             } else {\n-                LOG.info(\"Getting asynchronous method stub from channel\");\n+                LOG.debug(\"Getting asynchronous method stub from channel\");\n                 grpcStub = GrpcUtils.constructGrpcAsyncStub(configuration.getServicePackage(), configuration.getServiceName(), channel, endpoint.getCamelContext());\n             }\n         }\n@@ -84,7 +84,7 @@\n     @Override\n     protected void doStop() throws Exception {\n         if (channel != null) {\n-            LOG.trace(\"Terminating channel to the remote gRPC server\");\n+            LOG.debug(\"Terminating channel to the remote gRPC server\");\n             channel.shutdown().shutdownNow();\n             channel = null;\n             grpcStub = null;\n",
        "projectName": "apache.camel",
        "bugLineNum": 87,
        "bugNodeStartChar": 3480,
        "bugNodeLength": 58,
        "fixLineNum": 87,
        "fixNodeStartChar": 3480,
        "fixNodeLength": 58,
        "sourceBeforeFix": "LOG.trace(\"Terminating channel to the remote gRPC server\")",
        "sourceAfterFix": "LOG.debug(\"Terminating channel to the remote gRPC server\")"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "22d6101cbd3c821cdbb3faa50c5f59700fe2b8e7",
        "fixCommitParentSHA1": "1f62be0ed15eacf6d4b98ff150e2051d1f0e6b02",
        "bugFilePath": "src/com/hazelcast/web/WebFilter.java",
        "fixPatch": "diff --git a/src/com/hazelcast/web/WebFilter.java b/src/com/hazelcast/web/WebFilter.java\nindex 9ac7fd3..1aef7c6 100644\n--- a/src/com/hazelcast/web/WebFilter.java\n+++ b/src/com/hazelcast/web/WebFilter.java\n@@ -415,7 +415,7 @@\n \r\n         private String encodeURL(final String url, final String sessionURLPhrase) {\r\n             // should not encode if cookies in evidence\r\n-            if (url == null || req == null || req.isRequestedSessionIdFromCookie()) {\r\n+            if (url != null || req == null || req.isRequestedSessionIdFromCookie()) {\r\n                 final int prefix = url.indexOf(sessionURLPhrase);\r\n                 if (prefix != -1) {\r\n                     int suffix = url.indexOf(\"?\", prefix);\r\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 418,
        "bugNodeStartChar": 16266,
        "bugNodeLength": 11,
        "fixLineNum": 418,
        "fixNodeStartChar": 15849,
        "fixNodeLength": 11,
        "sourceBeforeFix": "url == null",
        "sourceAfterFix": "url != null"
    },
    {
        "bugType": "CHANGE_OPERATOR",
        "fixCommitSHA1": "aa90e04b5e6eb7f6d46dde16867196329568324e",
        "fixCommitParentSHA1": "46d3a4007fe1418d53baabc16dec39275079684b",
        "bugFilePath": "modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java",
        "fixPatch": "diff --git a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\nindex a71cd4c..93a8693 100644\n--- a/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n+++ b/modules/activiti-form-engine/src/main/java/org/activiti/form/engine/impl/cmd/GetRuntimeFormDefinitionCmd.java\n@@ -181,7 +181,7 @@\n       for (SubmittedForm otherForm : submittedForms) {\n         try {\n           JsonNode submittedNode = formEngineConfiguration.getObjectMapper().readTree(otherForm.getFormValueBytes());\n-          if (submittedNode == null || submittedNode.get(\"values\") != null) {\n+          if (submittedNode == null || submittedNode.get(\"values\") == null) {\n             continue;\n           }\n          \n@@ -221,7 +221,7 @@\n         try {\n           if (StringUtils.isNotEmpty(fieldValue)) {\n             LocalDate dateValue = LocalDate.parse(fieldValue);\n-            variables.put(field.getId(), dateValue);\n+            variables.put(field.getId(), dateValue.toString(\"yyyy-M-d\"));\n           }\n         } catch (Exception e) {\n           logger.error(\"Error parsing form date value for process instance \" + processInstanceId + \" with value \" + fieldValue, e);\n",
        "projectName": "Activiti.Activiti",
        "bugLineNum": 184,
        "bugNodeStartChar": 8444,
        "bugNodeLength": 35,
        "fixLineNum": 184,
        "fixNodeStartChar": 8444,
        "fixNodeLength": 35,
        "sourceBeforeFix": "submittedNode.get(\"values\") != null",
        "sourceAfterFix": "submittedNode.get(\"values\") == null"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "4831c0257971d6dd9a7cda4a8d9e1ded8c2a77a7",
        "fixCommitParentSHA1": "827f5063d532cbbaa4b7df2eff2fa5de90fd7499",
        "bugFilePath": "modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java",
        "fixPatch": "diff --git a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\nindex d8003b5..e4a7653 100644\n--- a/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n+++ b/modules/cpr/src/main/java/org/atmosphere/cpr/DefaultBroadcaster.java\n@@ -892,9 +892,9 @@\n \n         if (e.getMessage() instanceof List && !((List) e.getMessage()).isEmpty()) {\n \n-            List<Object> filteredMessage = new ArrayList<Object>();\n+            LinkedList<Object> filteredMessage = new LinkedList<Object>();\n             for (Object o : ((List) e.getMessage())) {\n-                filteredMessage.add(perRequestFilter(r, new Entry(o, r, f, o), false));\n+                filteredMessage.addLast(perRequestFilter(r, new Entry(o, r, f, o), false));\n             }\n \n             e.setMessage(filteredMessage);\n",
        "projectName": "Atmosphere.atmosphere",
        "bugLineNum": 897,
        "bugNodeStartChar": 34649,
        "bugNodeLength": 70,
        "fixLineNum": 897,
        "fixNodeStartChar": 34649,
        "fixNodeLength": 74,
        "sourceBeforeFix": "filteredMessage.add(perRequestFilter(r,new Entry(o,r,f,o),false))",
        "sourceAfterFix": "filteredMessage.addLast(perRequestFilter(r,new Entry(o,r,f,o),false))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 1076,
        "bugNodeStartChar": 57095,
        "bugNodeLength": 124,
        "fixLineNum": 1076,
        "fixNodeStartChar": 57095,
        "fixNodeLength": 118,
        "sourceBeforeFix": "twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))",
        "sourceAfterFix": "twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ \"/lists.json?cursor=\"+ cursor,true))"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "74d1fbf11bad03768e3b9a8b257e4c18ed05416f",
        "fixCommitParentSHA1": "b9ed7d8912c94ef77749c5bd672c670a94728c50",
        "bugFilePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java",
        "fixPatch": "diff --git a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\nindex 0c1a19f..9fbfeff 100644\n--- a/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n+++ b/backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/LwjglGL20.java\n@@ -383,7 +383,7 @@\n \t}\r\n \r\n \tpublic void glGetBufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL15.glGetBufferParameter(target, pname, params);\r\n+\t\tGL15.glGetBufferParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetError () {\r\n@@ -391,15 +391,15 @@\n \t}\r\n \r\n \tpublic void glGetFloatv (int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetFloat(pname, params);\r\n+\t\tGL11.glGetFloatv(pname, params);\r\n \t}\r\n \r\n \tpublic void glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterEXT(target, attachment, pname, params);\r\n+\t\tEXTFramebufferObject.glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetIntegerv (int pname, IntBuffer params) {\r\n-\t\tGL11.glGetInteger(pname, params);\r\n+\t\tGL11.glGetIntegerv(pname, params);\r\n \t}\r\n \r\n \tpublic String glGetProgramInfoLog (int program) {\r\n@@ -417,11 +417,11 @@\n \t}\r\n \r\n \tpublic void glGetProgramiv (int program, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetProgram(program, pname, params);\r\n+\t\tGL20.glGetProgramiv(program, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tEXTFramebufferObject.glGetRenderbufferParameterEXT(target, pname, params);\r\n+\t\tEXTFramebufferObject.glGetRenderbufferParameterivEXT(target, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetShaderInfoLog (int shader) {\r\n@@ -443,7 +443,7 @@\n \t}\r\n \r\n \tpublic void glGetShaderiv (int shader, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetShader(shader, pname, params);\r\n+\t\tGL20.glGetShaderiv(shader, pname, params);\r\n \t}\r\n \r\n \tpublic String glGetString (int name) {\r\n@@ -451,11 +451,11 @@\n \t}\r\n \r\n \tpublic void glGetTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glGetTexParameter(target, pname, params);\r\n+\t\tGL11.glGetTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic int glGetUniformLocation (int program, String name) {\r\n@@ -463,11 +463,11 @@\n \t}\r\n \r\n \tpublic void glGetUniformfv (int program, int location, FloatBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformfv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetUniformiv (int program, int location, IntBuffer params) {\r\n-\t\tGL20.glGetUniform(program, location, params);\r\n+\t\tGL20.glGetUniformiv(program, location, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribPointerv (int index, int pname, Buffer pointer) {\r\n@@ -475,11 +475,11 @@\n \t}\r\n \r\n \tpublic void glGetVertexAttribfv (int index, int pname, FloatBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribfv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glGetVertexAttribiv (int index, int pname, IntBuffer params) {\r\n-\t\tGL20.glGetVertexAttrib(index, pname, params);\r\n+\t\tGL20.glGetVertexAttribiv(index, pname, params);\r\n \t}\r\n \r\n \tpublic void glHint (int target, int mode) {\r\n@@ -616,7 +616,7 @@\n \t}\r\n \r\n \tpublic void glTexParameterfv (int target, int pname, FloatBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameterfv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexParameteri (int target, int pname, int param) {\r\n@@ -624,7 +624,7 @@\n \t}\r\n \r\n \tpublic void glTexParameteriv (int target, int pname, IntBuffer params) {\r\n-\t\tGL11.glTexParameter(target, pname, params);\r\n+\t\tGL11.glTexParameteriv(target, pname, params);\r\n \t}\r\n \r\n \tpublic void glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type,\r\n@@ -649,11 +649,11 @@\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform1fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toFloatBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1fv(location, toFloatBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform1i (int location, int x) {\r\n@@ -661,12 +661,12 @@\n \t}\r\n \r\n \tpublic void glUniform1iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform1(location, v);\r\n+\t\tGL20.glUniform1iv(location, v);\r\n \t}\r\n \r\n \t@Override\r\n \tpublic void glUniform1iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform1(location, toIntBuffer(v, offset, count));\r\n+\t\tGL20.glUniform1iv(location, toIntBuffer(v, offset, count));\r\n \t}\r\n \r\n \tpublic void glUniform2f (int location, float x, float y) {\r\n@@ -674,11 +674,11 @@\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toFloatBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2fv(location, toFloatBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform2i (int location, int x, int y) {\r\n@@ -686,11 +686,11 @@\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform2(location, v);\r\n+\t\tGL20.glUniform2iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform2iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform2(location, toIntBuffer(v, offset, count << 1));\r\n+\t\tGL20.glUniform2iv(location, toIntBuffer(v, offset, count << 1));\r\n \t}\r\n \r\n \tpublic void glUniform3f (int location, float x, float y, float z) {\r\n@@ -698,11 +698,11 @@\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toFloatBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3fv(location, toFloatBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform3i (int location, int x, int y, int z) {\r\n@@ -710,11 +710,11 @@\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform3(location, v);\r\n+\t\tGL20.glUniform3iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform3iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform3(location, toIntBuffer(v, offset, count * 3));\r\n+\t\tGL20.glUniform3iv(location, toIntBuffer(v, offset, count * 3));\r\n \t}\r\n \r\n \tpublic void glUniform4f (int location, float x, float y, float z, float w) {\r\n@@ -722,11 +722,11 @@\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, FloatBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4fv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4fv (int location, int count, float[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toFloatBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4fv(location, toFloatBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniform4i (int location, int x, int y, int z, int w) {\r\n@@ -734,35 +734,35 @@\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, IntBuffer v) {\r\n-\t\tGL20.glUniform4(location, v);\r\n+\t\tGL20.glUniform4iv(location, v);\r\n \t}\r\n \r\n \tpublic void glUniform4iv (int location, int count, int[] v, int offset) {\r\n-\t\tGL20.glUniform4(location, toIntBuffer(v, offset, count << 2));\r\n+\t\tGL20.glUniform4iv(location, toIntBuffer(v, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix2(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n+\t\tGL20.glUniformMatrix2fv(location, transpose, toFloatBuffer(value, offset, count << 2));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix3(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n+\t\tGL20.glUniformMatrix3fv(location, transpose, toFloatBuffer(value, offset, count * 9));\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, value);\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, value);\r\n \t}\r\n \r\n \tpublic void glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) {\r\n-\t\tGL20.glUniformMatrix4(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n+\t\tGL20.glUniformMatrix4fv(location, transpose, toFloatBuffer(value, offset, count << 4));\r\n \t}\r\n \r\n \tpublic void glUseProgram (int program) {\r\n",
        "projectName": "libgdx.libgdx",
        "bugLineNum": 713,
        "bugNodeStartChar": 24106,
        "bugNodeLength": 28,
        "fixLineNum": 713,
        "fixNodeStartChar": 23394,
        "fixNodeLength": 30,
        "sourceBeforeFix": "GL20.glUniform3(location,v)",
        "sourceAfterFix": "GL20.glUniform3iv(location,v)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "f9e60b9fa8dfcbf5dc37b2a88922f57cb292c7dd",
        "fixCommitParentSHA1": "6f75025c1ebd723a40026a6266b5c39b5ed4408b",
        "bugFilePath": "webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java",
        "fixPatch": "diff --git a/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java b/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\nindex 50468ca..9060416 100644\n--- a/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\n+++ b/webservices/server-integration/src/main/java/org/jboss/as/webservices/config/ServerConfigImpl.java\n@@ -194,7 +194,7 @@\n         Host undertowHost = getUndertowHost(hostInfo);\n         if (undertowHost != null && !undertowHost.getServer().getListeners().isEmpty()) {\n             if (!securePort) {\n-                return undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort();\n+                return undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort();\n             } else {\n                 for(ListenerService<?> listener : undertowHost.getServer().getListeners()) {\n                     if (listener.isSecure()) {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 197,
        "bugNodeStartChar": 7642,
        "bugNodeLength": 80,
        "fixLineNum": 197,
        "fixNodeStartChar": 7642,
        "fixNodeLength": 88,
        "sourceBeforeFix": "undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()",
        "sourceAfterFix": "undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "52f08044d059ecb590df82b98f1f68b9137e2c29",
        "fixCommitParentSHA1": "2ac40593c435265d10eed940b3d31d98dee43871",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTtlTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTtlTest.java b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTtlTest.java\nindex 6941e1f..8be9bcf 100644\n--- a/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTtlTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/replicatedmap/ReplicatedMapTtlTest.java\n@@ -16,7 +16,7 @@\n \n @RunWith(HazelcastSerialClassRunner.class)\n @Category(SlowTest.class)\n-public class ReplicatedMapTtlTest extends ReplicatedMapBaseTest {\n+public class ReplicatedMapTtlTest extends ReplicatedMapAbstractTest {\n \n     @Test\n     public void testPutWithTTL_withMigration() throws Exception {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 17,
        "bugNodeStartChar": 504,
        "bugNodeLength": 3165,
        "fixLineNum": 17,
        "fixNodeStartChar": 504,
        "fixNodeLength": 3169,
        "sourceBeforeFix": "@RunWith(HazelcastSerialClassRunner.class) @Category(SlowTest.class) public class ReplicatedMapTtlTest extends ReplicatedMapBaseTest {   @Test public void testPutWithTTL_withMigration() throws Exception {     int nodeCount=1;     int keyCount=10000;     int operationCount=10000;     int threadCount=15;     int ttl=500;     testPutWithTTL(nodeCount,keyCount,operationCount,threadCount,ttl,true);   }   @Test public void testPutWithTTL_withoutMigration() throws Exception {     int nodeCount=5;     int keyCount=10000;     int operationCount=10000;     int threadCount=10;     int ttl=500;     testPutWithTTL(nodeCount,keyCount,operationCount,threadCount,ttl,false);   }   private void testPutWithTTL(  int nodeCount,  int keyCount,  int operationCount,  int threadCount,  int ttl,  boolean causeMigration) throws InterruptedException {     TimeUnit timeUnit=TimeUnit.MILLISECONDS;     TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory();     HazelcastInstance[] instances=factory.newInstances(null,nodeCount);     String mapName=randomMapName();     List<ReplicatedMap> maps=createMapOnEachInstance(instances,mapName);     ArrayList<Integer> keys=generateRandomIntegerList(keyCount);     Thread[] threads=createThreads(threadCount,maps,keys,ttl,timeUnit,operationCount);     for (    Thread thread : threads) {       thread.start();     }     HazelcastInstance instance=null;     if (causeMigration) {       instance=factory.newHazelcastInstance();     }     for (    Thread thread : threads) {       thread.join();     }     if (causeMigration) {       ReplicatedMap<Object,Object> map=instance.getReplicatedMap(mapName);       maps.add(map);     }     for (    ReplicatedMap map : maps) {       assertSizeEventually(0,map,60);     }   }   private Thread[] createThreads(  int count,  List<ReplicatedMap> maps,  ArrayList<Integer> keys,  long ttl,  TimeUnit timeunit,  int operations){     Thread[] threads=new Thread[count];     int size=maps.size();     for (int i=0; i < count; i++) {       threads[i]=createPutOperationThread(maps.get(i % size),keys,ttl,timeunit,operations);     }     return threads;   }   private Thread createPutOperationThread(  final ReplicatedMap<String,Object> map,  final ArrayList<Integer> keys,  final long ttl,  final TimeUnit timeunit,  final int operations){     return new Thread(new Runnable(){       @Override public void run(){         Random random=new Random();         int size=keys.size();         for (int i=0; i < operations; i++) {           int index=i % size;           String key=\"foo-\" + keys.get(index);           map.put(key,random.nextLong(),1 + random.nextInt((int)ttl),timeunit);         }       }     } );   } } ",
        "sourceAfterFix": "@RunWith(HazelcastSerialClassRunner.class) @Category(SlowTest.class) public class ReplicatedMapTtlTest extends ReplicatedMapAbstractTest {   @Test public void testPutWithTTL_withMigration() throws Exception {     int nodeCount=1;     int keyCount=10000;     int operationCount=10000;     int threadCount=15;     int ttl=500;     testPutWithTTL(nodeCount,keyCount,operationCount,threadCount,ttl,true);   }   @Test public void testPutWithTTL_withoutMigration() throws Exception {     int nodeCount=5;     int keyCount=10000;     int operationCount=10000;     int threadCount=10;     int ttl=500;     testPutWithTTL(nodeCount,keyCount,operationCount,threadCount,ttl,false);   }   private void testPutWithTTL(  int nodeCount,  int keyCount,  int operationCount,  int threadCount,  int ttl,  boolean causeMigration) throws InterruptedException {     TimeUnit timeUnit=TimeUnit.MILLISECONDS;     TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory();     HazelcastInstance[] instances=factory.newInstances(null,nodeCount);     String mapName=randomMapName();     List<ReplicatedMap> maps=createMapOnEachInstance(instances,mapName);     ArrayList<Integer> keys=generateRandomIntegerList(keyCount);     Thread[] threads=createThreads(threadCount,maps,keys,ttl,timeUnit,operationCount);     for (    Thread thread : threads) {       thread.start();     }     HazelcastInstance instance=null;     if (causeMigration) {       instance=factory.newHazelcastInstance();     }     for (    Thread thread : threads) {       thread.join();     }     if (causeMigration) {       ReplicatedMap<Object,Object> map=instance.getReplicatedMap(mapName);       maps.add(map);     }     for (    ReplicatedMap map : maps) {       assertSizeEventually(0,map,60);     }   }   private Thread[] createThreads(  int count,  List<ReplicatedMap> maps,  ArrayList<Integer> keys,  long ttl,  TimeUnit timeunit,  int operations){     Thread[] threads=new Thread[count];     int size=maps.size();     for (int i=0; i < count; i++) {       threads[i]=createPutOperationThread(maps.get(i % size),keys,ttl,timeunit,operations);     }     return threads;   }   private Thread createPutOperationThread(  final ReplicatedMap<String,Object> map,  final ArrayList<Integer> keys,  final long ttl,  final TimeUnit timeunit,  final int operations){     return new Thread(new Runnable(){       @Override public void run(){         Random random=new Random();         int size=keys.size();         for (int i=0; i < operations; i++) {           int index=i % size;           String key=\"foo-\" + keys.get(index);           map.put(key,random.nextLong(),1 + random.nextInt((int)ttl),timeunit);         }       }     } );   } } "
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "546f336e25b26d072f96e2cda139b885858ed5b0",
        "fixCommitParentSHA1": "a2bfd59729017b80d4167505fdcfed28d17ca5ee",
        "bugFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
        "fixPatch": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java b/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\nindex fa6e7c8..d085d48 100644\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java\n@@ -112,7 +112,7 @@\n                 if (!currentConfigHash.equals(cachedConfigHash)) {\n                     // Detected configuration change - clear cache\n                     details.clear();\n-                    details.put(CONFIG_HASH_KEY, currentConfigHash);\n+                    details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n                 }\n             }\n             finally {\n@@ -121,7 +121,7 @@\n         }\n         else {\n             // put the hash in the file if the file is going to be created\n-            details.put(CONFIG_HASH_KEY, currentConfigHash);\n+            details.setProperty(CONFIG_HASH_KEY, currentConfigHash);\n         }\n     }\n \n@@ -169,7 +169,7 @@\n      * @param timestamp the timestamp of the file\n      */\n     void put(String fileName, long timestamp) {\n-        details.put(fileName, Long.toString(timestamp));\n+        details.setProperty(fileName, Long.toString(timestamp));\n     }\n \n     /**\n",
        "projectName": "checkstyle.checkstyle",
        "bugLineNum": 115,
        "bugNodeStartChar": 4322,
        "bugNodeLength": 47,
        "fixLineNum": 115,
        "fixNodeStartChar": 4322,
        "fixNodeLength": 55,
        "sourceBeforeFix": "details.put(CONFIG_HASH_KEY,currentConfigHash)",
        "sourceAfterFix": "details.setProperty(CONFIG_HASH_KEY,currentConfigHash)"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "884da334b2b75ff063dabcbd6470938697ae7ff8",
        "fixCommitParentSHA1": "0821dce8c134b87bb9fbab0c04d858bde17e546e",
        "bugFilePath": "server/src/main/java/com/metamx/druid/master/rules/LoadRule.java",
        "fixPatch": "diff --git a/server/src/main/java/com/metamx/druid/master/rules/LoadRule.java b/server/src/main/java/com/metamx/druid/master/rules/LoadRule.java\nindex ab093f4..fea94f8 100644\n--- a/server/src/main/java/com/metamx/druid/master/rules/LoadRule.java\n+++ b/server/src/main/java/com/metamx/druid/master/rules/LoadRule.java\n@@ -84,7 +84,7 @@\n         break;\n       }\n       if (holder.containsSegment(segment)) {\n-        serverQueue.add(holder);\n+        assignedServers.add(holder);\n         continue;\n       }\n \n",
        "projectName": "druid-io.druid",
        "bugLineNum": 87,
        "bugNodeStartChar": 3156,
        "bugNodeLength": 23,
        "fixLineNum": 87,
        "fixNodeStartChar": 3156,
        "fixNodeLength": 27,
        "sourceBeforeFix": "serverQueue.add(holder)",
        "sourceAfterFix": "assignedServers.add(holder)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "dbded5e4db2154c25b07fbf890886487b30c522c",
        "fixCommitParentSHA1": "d7bcf83aa7737c3b625ab9a5b7fc4041c4d2fe08",
        "bugFilePath": "ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java",
        "fixPatch": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java b/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\nindex e93969f..4dcf0cb 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/remote/protocol/versionone/VersionOneProtocolChannelReceiver.java\n@@ -173,7 +173,8 @@\n         try {\n             this.sendModuleUnAvailability(new DeploymentModuleIdentifier[]{deploymentModuleIdentifier});\n         } catch (IOException e) {\n-            logger.warn(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \" + this.channel, e);\n+            // TODO: Change this to WARN once https://issues.jboss.org/browse/REM3-123 is fixed\n+            logger.debug(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \" + this.channel, e);\n         }\n     }\n \n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 176,
        "bugNodeStartChar": 7774,
        "bugNodeLength": 140,
        "fixLineNum": 177,
        "fixNodeStartChar": 7870,
        "fixNodeLength": 141,
        "sourceBeforeFix": "logger.warn(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \"+ this.channel,e)",
        "sourceAfterFix": "logger.debug(\"Could not send module un-availability notification of module \" + deploymentModuleIdentifier + \" to channel \"+ this.channel,e)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "1c93b2a8d7e7dc8d7a1620c5566e7eb20df8f0ec",
        "fixCommitParentSHA1": "b41598db1c05160ebaf543f4b78dc11fd8c17f88",
        "bugFilePath": "components/camel-nagios/src/test/java/org/apache/camel/component/nagios/NagiosConfiguraitonRefTest.java",
        "fixPatch": "diff --git a/components/camel-nagios/src/test/java/org/apache/camel/component/nagios/NagiosConfiguraitonRefTest.java b/components/camel-nagios/src/test/java/org/apache/camel/component/nagios/NagiosConfiguraitonRefTest.java\nindex b8375af..42c0246 100644\n--- a/components/camel-nagios/src/test/java/org/apache/camel/component/nagios/NagiosConfiguraitonRefTest.java\n+++ b/components/camel-nagios/src/test/java/org/apache/camel/component/nagios/NagiosConfiguraitonRefTest.java\n@@ -37,7 +37,7 @@\n     @Before\n     @Override\n     public void setUp() throws Exception {\n-        nagios = new NagiosNscaStub(25667, \"secret\");\n+        nagios = new NagiosNscaStub(25668, \"secret\");\n         nagios.start();\n \n         super.setUp();\n@@ -55,7 +55,7 @@\n         NagiosConfiguration config = new NagiosConfiguration();\n         config.setPassword(\"secret\");\n         config.setHost(\"127.0.0.1\");\n-        config.setPort(25667);\n+        config.setPort(25668);\n \n         JndiRegistry jndi = super.createRegistry();\n         jndi.bind(\"nagiosConf\", config);\n",
        "projectName": "apache.camel",
        "bugLineNum": 58,
        "bugNodeStartChar": 1937,
        "bugNodeLength": 21,
        "fixLineNum": 58,
        "fixNodeStartChar": 1937,
        "fixNodeLength": 21,
        "sourceBeforeFix": "config.setPort(25667)",
        "sourceAfterFix": "config.setPort(25668)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "a207330fb2009b7e9b273d9a0b18518c9da7eea6",
        "fixCommitParentSHA1": "b8d461f7c0bd7a332b76dc2cbfe07974f822589d",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/map/impl/query/QueryAdvancedTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/map/impl/query/QueryAdvancedTest.java b/hazelcast/src/test/java/com/hazelcast/map/impl/query/QueryAdvancedTest.java\nindex d5be62c..c89f143 100644\n--- a/hazelcast/src/test/java/com/hazelcast/map/impl/query/QueryAdvancedTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/map/impl/query/QueryAdvancedTest.java\n@@ -104,10 +104,10 @@\n \n     @Test\n     @SuppressWarnings(\"deprecation\")\n-    public void testQueryWithTTL() throws Exception {\n+    public void testQueryWithTTL() {\n         Config config = getConfig();\n         String mapName = \"default\";\n-        config.getMapConfig(mapName).setTimeToLiveSeconds(5);\n+        config.getMapConfig(mapName).setTimeToLiveSeconds(10);\n \n         HazelcastInstance instance = createHazelcastInstance(config);\n \n@@ -140,7 +140,9 @@\n \n         // check the query result before eviction\n         Collection values = map.values(new SqlPredicate(\"active\"));\n-        assertEquals(activeEmployees, values.size());\n+        assertEquals(String.format(\"Expected %s results but got %s. Number of evicted entries: %s.\",\n+                activeEmployees, values.size(), allEmployees - latch.getCount()),\n+                activeEmployees, values.size());\n \n         // wait until eviction is completed\n         assertOpenEventually(latch);\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 110,
        "bugNodeStartChar": 3946,
        "bugNodeLength": 52,
        "fixLineNum": 110,
        "fixNodeStartChar": 3946,
        "fixNodeLength": 53,
        "sourceBeforeFix": "config.getMapConfig(mapName).setTimeToLiveSeconds(5)",
        "sourceAfterFix": "config.getMapConfig(mapName).setTimeToLiveSeconds(10)"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "8afc77b3acd1616a19c58863c71febaf702cf7bf",
        "fixCommitParentSHA1": "83c1c3967b56cc59c9bd241e2a2fe6570fc3f258",
        "bugFilePath": "src/main/java/twitter4j/Twitter.java",
        "fixPatch": "diff --git a/src/main/java/twitter4j/Twitter.java b/src/main/java/twitter4j/Twitter.java\nindex f9d6b94..a40ce20 100644\n--- a/src/main/java/twitter4j/Twitter.java\n+++ b/src/main/java/twitter4j/Twitter.java\n@@ -363,7 +363,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getTrends() throws TwitterException {\n-        return Trends.constructTrends(get(getSearchBaseURL() + \"trends.json\", false));\n+        return Trends.createTrends(get(getSearchBaseURL() + \"trends.json\", false));\n     }\n \n     /**\n@@ -375,7 +375,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 , false)).get(0);\n     }\n \n@@ -389,7 +389,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends\">Twitter Search API Method: trends</a>\n      */\n     public Trends getCurrentTrends(boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/current.json\"\n                 + (excludeHashTags ? \"?exclude=hashtags\" : \"\"), false)).get(0);\n     }\n \n@@ -403,7 +403,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n+        return Trends.createTrendsList(get(getSearchBaseURL() + \"trends/daily.json\", false));\n     }\n \n     /**\n@@ -417,7 +417,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily\">Twitter Search API Method: trends daily</a>\n      */\n     public List<Trends> getDailyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/daily.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -439,7 +439,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends() throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json\", false));\n     }\n \n@@ -454,7 +454,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly\">Twitter Search API Method: trends weekly</a>\n      */\n     public List<Trends> getWeeklyTrends(Date date, boolean excludeHashTags) throws TwitterException {\n-        return Trends.constructTrendsList(get(getSearchBaseURL()\n+        return Trends.createTrendsList(get(getSearchBaseURL()\n                 + \"trends/weekly.json?date=\" + toDateStr(date)\n                 + (excludeHashTags ? \"&exclude=hashtags\" : \"\"), false));\n     }\n@@ -471,7 +471,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", false));\n     }\n \n@@ -486,7 +486,7 @@\n      */\n     public ResponseList<Status> getPublicTimeline(long sinceID) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() +\n+        return Status.createStatuseList(get(getBaseURL() +\n                 \"statuses/public_timeline.json\", null, new Paging((long) sinceID).asPostParameterList(Paging.S)\n                 , false));\n     }\n@@ -502,7 +502,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", true));\n     }\n \n \n@@ -518,7 +518,7 @@\n      */\n     public ResponseList<Status> getHomeTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/home_timeline.json\", null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -532,7 +532,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\", true));\n     }\n \n     /**\n@@ -547,7 +547,7 @@\n      */\n     public ResponseList<Status> getFriendsTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/friends_timeline.json\",null, paging.asPostParameterList(), true));\n     }\n \n     /**\n@@ -563,7 +563,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(String id, Paging paging)\n             throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\",\n                 null, paging.asPostParameterList(), http.isAuthenticationEnabled()));\n     }\n \n@@ -577,7 +577,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline\">Twitter API Wiki / Twitter REST API Method: statuses friends_timeline</a>\n      */\n     public ResponseList<Status> getUserTimeline(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline/\" + id + \".json\", http.isAuthenticationEnabled()));\n     }\n \n     /**\n@@ -590,7 +590,7 @@\n      */\n     public ResponseList<Status> getUserTimeline() throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , true));\n     }\n \n@@ -606,7 +606,7 @@\n      */\n     public ResponseList<Status> getUserTimeline(Paging paging) throws\n             TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/user_timeline.json\"\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/user_timeline.json\"\n                 , null, paging.asPostParameterList(), true));\n     }\n \n@@ -620,7 +620,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, true));\n     }\n \n@@ -635,7 +635,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions\">Twitter API Wiki / Twitter REST API Method: statuses mentions</a>\n      */\n     public ResponseList<Status> getMentions(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/mentions.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/mentions.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -649,7 +649,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, true));\n     }\n \n@@ -664,7 +664,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_by_me</a>\n      */\n     public ResponseList<Status> getRetweetedByMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_by_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -678,7 +678,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, true));\n     }\n \n@@ -693,7 +693,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweeted_to_me</a>\n      */\n     public ResponseList<Status> getRetweetedToMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweeted_to_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -707,7 +707,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, true));\n     }\n \n@@ -722,7 +722,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me\">Twitter API Wiki / Twitter REST API Method: statuses/retweets_of_me</a>\n      */\n     public ResponseList<Status> getRetweetsOfMe(Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n+        return Status.createStatuseList(get(getBaseURL() + \"statuses/retweets_of_me.json\",\n                 null, paging.asPostParameterList(), true));\n     }\n \n@@ -860,7 +860,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets\">Twitter API Wiki / Twitter REST API Method: statuses retweets</a>\n      */\n     public ResponseList<Status> getRetweets(long statusId) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL()\n+        return Status.createStatuseList(get(getBaseURL()\n                 + \"statuses/retweets/\" + statusId + \".json\", true));\n     }\n \n@@ -1073,7 +1073,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists\">Twitter REST API Method: GET lists</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserLists(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists.json?cursor=\" + cursor, true));\n     }\n \n@@ -1117,7 +1117,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses\">Twitter REST API Method: GET list statuses</a>\n      */\n     public ResponseList<Status> getUserListStatuses(String user, int id, Paging paging) throws TwitterException {\n-        return Status.constructStatuses(get(getApiBaseURL() + V1 + user +\n+        return Status.createStatuseList(get(getApiBaseURL() + V1 + user +\n                 \"/lists/\" + id + \"/statuses.json\", new PostParameter[0],\n                 paging.asPostParameterList(Paging.SMCP, Paging.PER_PAGE), true));\n     }\n@@ -1132,7 +1132,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships\">Twitter REST API Method: GET /:user/lists/memberships</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListMemberships(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/memberships.json?cursor=\" + cursor, true));\n     }\n \n@@ -1146,7 +1146,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions\">Twitter REST API Method: GET list subscriptions</a>\n      */\n     public PagableResponseList<twitter4j.List> getUserListSubscriptions(String user, long cursor) throws TwitterException {\n-        return twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 +\n+        return twitter4j.List.createListList(get(getApiBaseURL() + V1 +\n                 user + \"/lists/subscriptions.json?cursor=\" + cursor, true));\n     }\n \n@@ -1160,7 +1160,7 @@\n     * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n     */\n     public ResponseList<DirectMessage> getDirectMessages() throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() + \"direct_messages.json\", true));\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() + \"direct_messages.json\", true));\n     }\n \n     /**\n@@ -1173,7 +1173,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages\">Twitter API Wiki / Twitter REST API Method: direct_messages</a>\n      */\n     public ResponseList<DirectMessage> getDirectMessages(Paging paging) throws TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL()\n+        return DirectMessage.createDirectMessageList(get(getBaseURL()\n                 + \"direct_messages.json\", null, paging.asPostParameterList(), true));\n     }\n \n@@ -1187,7 +1187,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages() throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0], true));\n     }\n \n@@ -1203,7 +1203,7 @@\n      */\n     public ResponseList<DirectMessage> getSentDirectMessages(Paging paging) throws\n             TwitterException {\n-        return DirectMessage.constructDirectMessages(get(getBaseURL() +\n+        return DirectMessage.createDirectMessageList(get(getBaseURL() +\n                 \"direct_messages/sent.json\", new PostParameter[0],\n                 paging.asPostParameterList(), true));\n     }\n@@ -1578,7 +1578,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites() throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1591,7 +1591,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites.json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1604,7 +1604,7 @@\n      * @since Twitter4J 2.0.1\n      */\n     public ResponseList<Status> getFavorites(String id) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", new PostParameter[0], true));\n     }\n \n     /**\n@@ -1618,7 +1618,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites\">Twitter API Wiki / Twitter REST API Method: favorites</a>\n      */\n     public ResponseList<Status> getFavorites(String id, int page) throws TwitterException {\n-        return Status.constructStatuses(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n+        return Status.createStatuseList(get(getBaseURL() + \"favorites/\" + id + \".json\", \"page\", String.valueOf(page), true));\n     }\n \n     /**\n@@ -1774,7 +1774,7 @@\n      * @see <a href=\"http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches\">Twitter API Wiki / Twitter REST API Method: saved_searches</a>\n      */\n     public List<SavedSearch> getSavedSearches() throws TwitterException {\n-        return SavedSearch.constructSavedSearches(get(getBaseURL() + \"saved_searches.json\", true));\n+        return SavedSearch.createSavedSearchList(get(getBaseURL() + \"saved_searches.json\", true));\n     }\n \n     /**\n",
        "projectName": "yusuke.twitter4j",
        "bugLineNum": 489,
        "bugNodeStartChar": 22728,
        "bugNodeLength": 181,
        "fixLineNum": 489,
        "fixNodeStartChar": 22728,
        "fixNodeLength": 181,
        "sourceBeforeFix": "Status.constructStatuses(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))",
        "sourceAfterFix": "Status.createStatuseList(get(getBaseURL() + \"statuses/public_timeline.json\",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))"
    },
    {
        "bugType": "CHANGE_CALLER_IN_FUNCTION_CALL",
        "fixCommitSHA1": "8fffaa7778e75625710adc9e458e7a549c525ce9",
        "fixCommitParentSHA1": "908dea8e416f383b40e4fb21d6867fd43e8a47ac",
        "bugFilePath": "hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java",
        "fixPatch": "diff --git a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\nindex 4c800c4..4b73087 100644\n--- a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\n+++ b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java\n@@ -81,7 +81,7 @@\n       priorRange = ranges[i];\n       cumNum = val;\n     }\n-    long val = histogram.getCount();\n+    long val = snapshot.getCount();\n     if (val - cumNum > 0) {\n       metricsRecordBuilder.addCounter(\n           Interns.info(name + \"_\" + rangeType + \"_\" + ranges[ranges.length - 1] + \"-inf\", desc),\n",
        "projectName": "apache.hbase",
        "bugLineNum": 84,
        "bugNodeStartChar": 2950,
        "bugNodeLength": 20,
        "fixLineNum": 84,
        "fixNodeStartChar": 2950,
        "fixNodeLength": 19,
        "sourceBeforeFix": "histogram.getCount()",
        "sourceAfterFix": "snapshot.getCount()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "9716d2ae673a576cb345c3bfb24cf71654d8f112",
        "fixCommitParentSHA1": "3181f10fb9e6b330d1effee25be3ef87872f8fa0",
        "bugFilePath": "bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\nindex 89010de..010aef6 100644\n--- a/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n+++ b/bundles/binding/org.openhab.binding.myq/src/main/java/org/openhab/binding/myq/internal/MyqData.java\n@@ -98,7 +98,7 @@\n \t */\n \tpublic GarageDoorData getGarageData() throws InvalidLoginException,\n \t\t\tIOException {\n-\t\tlogger.debug(\"Retreiveing door data\");\n+\t\tlogger.trace(\"Retreiveing door data\");\n \t\tString url = String.format(\n \t\t\t\t\"%s/api/v4/userdevicedetails/get?appId=%s&SecurityToken=%s\",\n \t\t\t\tWEBSITE, enc(appId), enc(getSecurityToken()));\n@@ -112,7 +112,7 @@\n \t * Validates Username and Password then saved sercurityToken to a variable\n \t */\n \tprivate void login() throws InvalidLoginException, IOException {\n-\t\tlogger.debug(\"attempting to login\");\n+\t\tlogger.trace(\"attempting to login\");\n \t\tString url = String\n \t\t\t\t.format(\"%s/api/user/validate?appId=%s&SecurityToken=null&username=%s&password=%s\",\n \t\t\t\t\t\tWEBSITE, enc(appId), enc(userName), enc(password));\n@@ -183,13 +183,13 @@\n \t\t\tString payload, String payloadType, boolean retry)\n \t\t\tthrows IOException, InvalidLoginException {\n \n-\t\tlogger.debug(\"Requsting URL {}\", url);\n+\t\tlogger.trace(\"Requsting URL {}\", url);\n \n \t\tString dataString = executeUrl(method, url, header,\n \t\t\t\tpayload == null ? null : IOUtils.toInputStream(payload),\n \t\t\t\tpayloadType, timeout);\n \n-\t\tlogger.debug(\"Received MyQ  JSON: {}\", dataString);\n+\t\tlogger.trace(\"Received MyQ  JSON: {}\", dataString);\n \n \t\tif (dataString == null) {\n \t\t\tthrow new IOException(\"Null response from MyQ server\");\n@@ -199,7 +199,7 @@\n \t\t\tObjectMapper mapper = new ObjectMapper();\n \t\t\tJsonNode rootNode = mapper.readTree(dataString);\n \t\t\tint returnCode = rootNode.get(\"ReturnCode\").asInt();\n-\t\t\tlogger.debug(\"myq ReturnCode: {}\", returnCode);\n+\t\t\tlogger.trace(\"myq ReturnCode: {}\", returnCode);\n \n \t\t\tMyQResponseCode rc = MyQResponseCode.fromCode(returnCode);\n \n",
        "projectName": "openhab.openhab",
        "bugLineNum": 115,
        "bugNodeStartChar": 3206,
        "bugNodeLength": 35,
        "fixLineNum": 115,
        "fixNodeStartChar": 3206,
        "fixNodeLength": 35,
        "sourceBeforeFix": "logger.debug(\"attempting to login\")",
        "sourceAfterFix": "logger.trace(\"attempting to login\")"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "d7cc7dde8f5bc3bf573ec4e7b4e500e5accdcd25",
        "fixCommitParentSHA1": "d37f3d68a339f98055b3f9e82d7ac12171e58fd6",
        "bugFilePath": "hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicLocalTest.java",
        "fixPatch": "diff --git a/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicLocalTest.java b/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicLocalTest.java\nindex fcf808c..6f82a59 100644\n--- a/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicLocalTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/concurrent/atomiclong/AtomicLongBasicLocalTest.java\n@@ -9,7 +9,7 @@\n \n @RunWith(HazelcastParallelClassRunner.class)\n @Category({QuickTest.class, ParallelTest.class})\n-public class AtomicLongBasicLocalTest extends AtomicLongBasicTest {\n+public class AtomicLongBasicLocalTest extends AtomicLongAbstractTest {\n \n     @Override\n     protected HazelcastInstance[] newInstances() {\n",
        "projectName": "hazelcast.hazelcast",
        "bugLineNum": 10,
        "bugNodeStartChar": 331,
        "bugNodeLength": 300,
        "fixLineNum": 10,
        "fixNodeStartChar": 331,
        "fixNodeLength": 303,
        "sourceBeforeFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicLongBasicLocalTest extends AtomicLongBasicTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } ",
        "sourceAfterFix": "@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicLongBasicLocalTest extends AtomicLongAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } } "
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "0b83bf1d7a47be379c1bf8bc332232884f9331b5",
        "fixCommitParentSHA1": "89c642d7544549010d74c46044d76cfe1e1e0e5b",
        "bugFilePath": "src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java",
        "fixPatch": "diff --git a/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java b/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\nindex 4d885c6..7cbdb98 100644\n--- a/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n+++ b/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java\n@@ -3690,7 +3690,7 @@\n   public static final long FIXED_OVERHEAD = ClassSize.align(\n       ClassSize.OBJECT +\n       ClassSize.ARRAY +\n-      27 * ClassSize.REFERENCE + Bytes.SIZEOF_INT +\n+      28 * ClassSize.REFERENCE + Bytes.SIZEOF_INT +\n       (4 * Bytes.SIZEOF_LONG) +\n       Bytes.SIZEOF_BOOLEAN);\n \n",
        "projectName": "apache.hbase",
        "bugLineNum": 3693,
        "bugNodeStartChar": 127042,
        "bugNodeLength": 24,
        "fixLineNum": 3693,
        "fixNodeStartChar": 127042,
        "fixNodeLength": 24,
        "sourceBeforeFix": "27 * ClassSize.REFERENCE",
        "sourceAfterFix": "28 * ClassSize.REFERENCE"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "55c3c2a8feddf010b614a6bdb0c39ef19a8b9452",
        "fixCommitParentSHA1": "9a15276c2e163c196807cce5e811fd1fa672bf89",
        "bugFilePath": "messaging/src/main/java/org/jboss/as/messaging/jms/JMSTopicService.java",
        "fixPatch": "diff --git a/messaging/src/main/java/org/jboss/as/messaging/jms/JMSTopicService.java b/messaging/src/main/java/org/jboss/as/messaging/jms/JMSTopicService.java\nindex 57af2dd..02a6727 100644\n--- a/messaging/src/main/java/org/jboss/as/messaging/jms/JMSTopicService.java\n+++ b/messaging/src/main/java/org/jboss/as/messaging/jms/JMSTopicService.java\n@@ -73,7 +73,7 @@\n     public synchronized void stop(StopContext context) {\n         final JMSServerManager jmsManager = jmsServer.getValue();\n         try {\n-            jmsManager.destroyTopic(name);\n+            jmsManager.removeTopicFromJNDI(name);\n         } catch (Exception e) {\n             MESSAGING_LOGGER.failedToDestroy(e, \"jms topic\", name);\n         }\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 76,
        "bugNodeStartChar": 2845,
        "bugNodeLength": 29,
        "fixLineNum": 76,
        "fixNodeStartChar": 2845,
        "fixNodeLength": 36,
        "sourceBeforeFix": "jmsManager.destroyTopic(name)",
        "sourceAfterFix": "jmsManager.removeTopicFromJNDI(name)"
    },
    {
        "bugType": "LESS_SPECIFIC_IF",
        "fixCommitSHA1": "9b9d9cb2297165ec4159efa35322f1b149908f9f",
        "fixCommitParentSHA1": "355f12408eaaa5af7e2c7de368d2ddfc1cb4ba8d",
        "bugFilePath": "DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java",
        "fixPatch": "diff --git a/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java b/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\nindex da61654..bdeb2a0 100644\n--- a/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\n+++ b/DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java\n@@ -108,7 +108,7 @@\n \n     private void setLanguage(Language language) {\n         String homePath;\n-        if (Utilities.isMac()) {\n+        if (Utilities.isMac() || Utilities.isUnix()) {\n             homePath = System.getProperty(\"netbeans.home\");\n         } else {\n             homePath = System.getProperty(\"user.dir\");\n",
        "projectName": "gephi.gephi",
        "bugLineNum": 111,
        "bugNodeStartChar": 3708,
        "bugNodeLength": 17,
        "fixLineNum": 111,
        "fixNodeStartChar": 3708,
        "fixNodeLength": 39,
        "sourceBeforeFix": "Utilities.isMac()",
        "sourceAfterFix": "Utilities.isMac() || Utilities.isUnix()"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "3a82878c2163e69855a8dac520d1e22971d19ff4",
        "fixCommitParentSHA1": "dfe5c9562b476d65d8dc83bb326a3517e2c4b2bc",
        "bugFilePath": "components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java",
        "fixPatch": "diff --git a/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java b/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\nindex 6a9e3f4..4df53bc 100644\n--- a/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\n+++ b/components/camel-jms/src/test/java/org/apache/camel/component/jms/JmsSelectorOptionTest.java\n@@ -39,7 +39,7 @@\n         MockEndpoint endpointB = getMockEndpoint(\"mock:b\");\n         MockEndpoint endpointC = getMockEndpoint(\"mock:c\");\n         \n-        endpointA.expectedBodiesReceived(\"A blue car!\", \"A blue car, again!\");\n+        endpointA.expectedBodiesReceivedInAnyOrder(\"A blue car!\", \"A blue car, again!\");\n         endpointA.expectedHeaderReceived(\"color\", \"blue\");\n         endpointB.expectedHeaderReceived(\"color\", \"red\");\n         endpointB.expectedBodiesReceived(\"A red car!\");\n",
        "projectName": "apache.camel",
        "bugLineNum": 42,
        "bugNodeStartChar": 1694,
        "bugNodeLength": 69,
        "fixLineNum": 42,
        "fixNodeStartChar": 1694,
        "fixNodeLength": 79,
        "sourceBeforeFix": "endpointA.expectedBodiesReceived(\"A blue car!\",\"A blue car, again!\")",
        "sourceAfterFix": "endpointA.expectedBodiesReceivedInAnyOrder(\"A blue car!\",\"A blue car, again!\")"
    },
    {
        "bugType": "DIFFERENT_METHOD_SAME_ARGS",
        "fixCommitSHA1": "e1aaf1dd11a7c2d2b6c1a869f1df27e28483fee7",
        "fixCommitParentSHA1": "8ba2da146cc21e460efcf92c1c62af5da750122d",
        "bugFilePath": "webmagic-core/src/main/java/us/codecraft/webmagic/Site.java",
        "fixPatch": "diff --git a/webmagic-core/src/main/java/us/codecraft/webmagic/Site.java b/webmagic-core/src/main/java/us/codecraft/webmagic/Site.java\nindex 3a5dd33..4c84fb3 100644\n--- a/webmagic-core/src/main/java/us/codecraft/webmagic/Site.java\n+++ b/webmagic-core/src/main/java/us/codecraft/webmagic/Site.java\n@@ -123,7 +123,7 @@\n      * @return get cookies\n      */\n     public Map<String,Map<String, String>> getAllCookies() {\n-        return cookies.columnMap();\n+        return cookies.rowMap();\n     }\n \n     /**\n",
        "projectName": "code4craft.webmagic",
        "bugLineNum": 126,
        "bugNodeStartChar": 2700,
        "bugNodeLength": 19,
        "fixLineNum": 126,
        "fixNodeStartChar": 2700,
        "fixNodeLength": 16,
        "sourceBeforeFix": "cookies.columnMap()",
        "sourceAfterFix": "cookies.rowMap()"
    },
    {
        "bugType": "SWAP_BOOLEAN_LITERAL",
        "fixCommitSHA1": "bcce0ffff2fee44504e363eb2278e3068504b83c",
        "fixCommitParentSHA1": "b397d273ae2629971cb02ba5a7e2863c01207efc",
        "bugFilePath": "src/com/mobeta/android/dslv/DragSortListView.java",
        "fixPatch": "diff --git a/src/com/mobeta/android/dslv/DragSortListView.java b/src/com/mobeta/android/dslv/DragSortListView.java\nindex d561fda..2a731d2 100644\n--- a/src/com/mobeta/android/dslv/DragSortListView.java\n+++ b/src/com/mobeta/android/dslv/DragSortListView.java\n@@ -451,7 +451,7 @@\n \n             boolean useDefault = a.getBoolean(\n                     R.styleable.DragSortListView_use_default_controller,\n-                    false);\n+                    true);\n \n             if (useDefault) {\n                 boolean removeEnabled = a.getBoolean(\n",
        "projectName": "bauerca.drag-sort-listview",
        "bugLineNum": 452,
        "bugNodeStartChar": 12452,
        "bugNodeLength": 113,
        "fixLineNum": 452,
        "fixNodeStartChar": 12452,
        "fixNodeLength": 112,
        "sourceBeforeFix": "a.getBoolean(R.styleable.DragSortListView_use_default_controller,false)",
        "sourceAfterFix": "a.getBoolean(R.styleable.DragSortListView_use_default_controller,true)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "f1409f751a94e935f116cf2eb3732b56c128b501",
        "fixCommitParentSHA1": "d4cf2763ac7491309ab5775526755b29e5e67823",
        "bugFilePath": "server/src/main/java/io/druid/server/router/TieredBrokerConfig.java",
        "fixPatch": "diff --git a/server/src/main/java/io/druid/server/router/TieredBrokerConfig.java b/server/src/main/java/io/druid/server/router/TieredBrokerConfig.java\nindex c23a15d..7d8d5bb 100644\n--- a/server/src/main/java/io/druid/server/router/TieredBrokerConfig.java\n+++ b/server/src/main/java/io/druid/server/router/TieredBrokerConfig.java\n@@ -60,7 +60,7 @@\n   @NotNull\n   private List<TieredBrokerSelectorStrategy> strategies = Arrays.asList(\n       new TimeBoundaryTieredBrokerSelectorStrategy(),\n-      new PriorityTieredBrokerSelectorStrategy(1, 1)\n+      new PriorityTieredBrokerSelectorStrategy(0, 1)\n   );\n \n   // tier, <bard, numThreads>\n",
        "projectName": "druid-io.druid",
        "bugLineNum": 63,
        "bugNodeStartChar": 1816,
        "bugNodeLength": 46,
        "fixLineNum": 63,
        "fixNodeStartChar": 1816,
        "fixNodeLength": 46,
        "sourceBeforeFix": "new PriorityTieredBrokerSelectorStrategy(1,1)",
        "sourceAfterFix": "new PriorityTieredBrokerSelectorStrategy(0,1)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "e05e6b2539c1b634d9a7f57cd3abc8f52669970c",
        "fixCommitParentSHA1": "e8c9f630b482f4687274cd2f184a0e16238ed94c",
        "bugFilePath": "components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzStartDelayedOptionTest.java",
        "fixPatch": "diff --git a/components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzStartDelayedOptionTest.java b/components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzStartDelayedOptionTest.java\nindex 04ed797..76ee740 100644\n--- a/components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzStartDelayedOptionTest.java\n+++ b/components/camel-quartz/src/test/java/org/apache/camel/component/quartz/QuartzStartDelayedOptionTest.java\n@@ -25,7 +25,7 @@\n     @Test\n     public void testStartDelayed() throws Exception {\n         MockEndpoint mock = getMockEndpoint(\"mock:result\");\n-        mock.setMinimumResultWaitTime(1900);\n+        mock.setMinimumResultWaitTime(1500);\n         mock.setResultWaitTime(3000);\n         mock.expectedMessageCount(2);\n \n",
        "projectName": "apache.camel",
        "bugLineNum": 28,
        "bugNodeStartChar": 1171,
        "bugNodeLength": 35,
        "fixLineNum": 28,
        "fixNodeStartChar": 1171,
        "fixNodeLength": 35,
        "sourceBeforeFix": "mock.setMinimumResultWaitTime(1900)",
        "sourceAfterFix": "mock.setMinimumResultWaitTime(1500)"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "364ae9baf3824dc4e0e56b2b681f8302731e8cdd",
        "fixCommitParentSHA1": "6b386d4b81f63bc3afd05888529550572da04c06",
        "bugFilePath": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java",
        "fixPatch": "diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\nindex 6c2aeb4..bad5ea2 100644\n--- a/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java\n@@ -3104,7 +3104,7 @@\n       try {\n         statsObj = getMS().getTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_table: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_table: \", statsObj != null, null);\n       }\n       return statsObj;\n     }\n@@ -3126,7 +3126,7 @@\n         statsObj = getMS().getPartitionColumnStatistics(dbName, tableName, convertedPartName,\n                                                             partVals, colName);\n       } finally {\n-        endFunction(\"get_column_statistics_by_partition: \", statsObj != null);\n+        endFunction(\"get_column_statistics_by_partition: \", statsObj != null, null);\n       }\n       return statsObj;\n    }\n@@ -3165,7 +3165,7 @@\n         ret = getMS().updateTableColumnStatistics(colStats);\n         return ret;\n       } finally {\n-        endFunction(\"write_column_statistics: \", ret != false);\n+        endFunction(\"write_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3211,7 +3211,7 @@\n         ret = getMS().updatePartitionColumnStatistics(colStats, partVals);\n         return ret;\n       } finally {\n-        endFunction(\"write_partition_column_statistics: \", ret != false);\n+        endFunction(\"write_partition_column_statistics: \", ret != false, null);\n       }\n     }\n \n@@ -3234,7 +3234,7 @@\n         ret = getMS().deletePartitionColumnStatistics(dbName, tableName,\n                                                       convertedPartName, partVals, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_partition: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_partition: \", ret != false, null);\n       }\n       return ret;\n     }\n@@ -3256,7 +3256,7 @@\n       try {\n         ret = getMS().deleteTableColumnStatistics(dbName, tableName, colName);\n       } finally {\n-        endFunction(\"delete_column_statistics_by_table: \", ret != false);\n+        endFunction(\"delete_column_statistics_by_table: \", ret != false, null);\n       }\n       return ret;\n    }\n",
        "projectName": "apache.hive",
        "bugLineNum": 3214,
        "bugNodeStartChar": 115014,
        "bugNodeLength": 64,
        "fixLineNum": 3214,
        "fixNodeStartChar": 115014,
        "fixNodeLength": 70,
        "sourceBeforeFix": "endFunction(\"write_partition_column_statistics: \",ret != false)",
        "sourceAfterFix": "endFunction(\"write_partition_column_statistics: \",ret != false,null)"
    },
    {
        "bugType": "CHANGE_IDENTIFIER",
        "fixCommitSHA1": "e5f5decf8c607db5ce59b007200ce17c71f414f9",
        "fixCommitParentSHA1": "6173e354c4a5c5603be67034b274fed4bf05316f",
        "bugFilePath": "undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java",
        "fixPatch": "diff --git a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\nindex 915c3fc..e0e5a5a 100644\n--- a/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n+++ b/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java\n@@ -499,7 +499,7 @@\n                     if(file.startsWith(\"/\")) {\n                         d.addWelcomePages(file.substring(1));\n                     } else {\n-                        d.addWelcomePages(welcomeFiles);\n+                        d.addWelcomePages(file);\n                     }\n                 }\n             } else {\n",
        "projectName": "wildfly.wildfly",
        "bugLineNum": 502,
        "bugNodeStartChar": 26359,
        "bugNodeLength": 31,
        "fixLineNum": 502,
        "fixNodeStartChar": 26359,
        "fixNodeLength": 23,
        "sourceBeforeFix": "d.addWelcomePages(welcomeFiles)",
        "sourceAfterFix": "d.addWelcomePages(file)"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "339f3ee107cdfd72dbee9201de4b5c1994168b5b",
        "fixCommitParentSHA1": "345389a8a106a9405248e03e54224bc453f504c4",
        "bugFilePath": "bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java",
        "fixPatch": "diff --git a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\nindex 3615998..eb5c42e 100644\n--- a/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n+++ b/bundles/binding/org.openhab.binding.maxcube/src/main/java/org/openhab/binding/maxcube/internal/message/Device.java\n@@ -115,13 +115,13 @@\n \t\tcase HeatingThermostatPlus:\n \t\t\tHeatingThermostat heatingThermostat = (HeatingThermostat) device;\n \t\t\t// \"xxxx xx00 = automatic, xxxx xx01 = manual, xxxx xx10 = vacation, xxxx xx11 = boost\":\n-\t\t\tif (bits2[0] == false && bits2[0] == false) {\n+\t\t\tif (bits2[1] == false && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.AUTOMATIC);\n-\t\t\t} else if (bits2[0] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == false && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.MANUAL);\n-\t\t\t} else if (bits2[1] == false && bits2[0] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == false) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.VACATION);\n-\t\t\t} else if (bits2[1] == false && bits2[1] == false) {\n+\t\t\t} else if (bits2[1] == true && bits2[0] == true) {\n \t\t\t\theatingThermostat.setMode(ThermostatModeType.BOOST);\n \t\t\t} else {\n \t\t\t\t// TODO: handel malformed message\n",
        "projectName": "openhab.openhab",
        "bugLineNum": 118,
        "bugNodeStartChar": 3491,
        "bugNodeLength": 8,
        "fixLineNum": 118,
        "fixNodeStartChar": 3491,
        "fixNodeLength": 8,
        "sourceBeforeFix": "bits2[0]",
        "sourceAfterFix": "bits2[1]"
    },
    {
        "bugType": "CHANGE_NUMERAL",
        "fixCommitSHA1": "d1cc32143dffe1f3fbf41e1d14cc82ba9626f7fa",
        "fixCommitParentSHA1": "6bfbfce11419889e19840d0df1347d1574cecfbb",
        "bugFilePath": "camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java",
        "fixPatch": "diff --git a/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java b/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\nindex 2b6d75a..5ec4e66 100644\n--- a/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\n+++ b/camel-core/src/test/java/org/apache/camel/management/ManagedEndpointExplainTest.java\n@@ -48,9 +48,9 @@\n         TabularData data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{false}, new String[]{\"boolean\"});\n         assertEquals(3, data.size());\n \n-        // there should be 6 options\n+        // there should be 8 options\n         data = (TabularData) mbeanServer.invoke(on, \"explain\", new Object[]{true}, new String[]{\"boolean\"});\n-        assertEquals(6, data.size());\n+        assertEquals(8, data.size());\n     }\n \n     @Override\n",
        "projectName": "apache.camel",
        "bugLineNum": 53,
        "bugNodeStartChar": 2235,
        "bugNodeLength": 28,
        "fixLineNum": 53,
        "fixNodeStartChar": 2235,
        "fixNodeLength": 28,
        "sourceBeforeFix": "assertEquals(6,data.size())",
        "sourceAfterFix": "assertEquals(8,data.size())"
    },
    {
        "bugType": "OVERLOAD_METHOD_MORE_ARGS",
        "fixCommitSHA1": "4dda1814e2539a3c4014b20fe14a5f99f616b293",
        "fixCommitParentSHA1": "8cb6f7bcb81756195a9e7bb996ddf98c23a7ba25",
        "bugFilePath": "spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.java",
        "fixPatch": "diff --git a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.java b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.java\nindex 6509fd7..1054cf7 100644\n--- a/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.java\n+++ b/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.java\n@@ -84,7 +84,7 @@\n \t\t@Override\n \t\tpublic void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory)\n \t\t\t\tthrows BeansException {\n-\t\t\tfor (String name : beanFactory.getBeanNamesForType(CacheAspectSupport.class)) {\n+\t\t\tfor (String name : beanFactory.getBeanNamesForType(CacheAspectSupport.class, false, false)) {\n \t\t\t\tBeanDefinition definition = beanFactory.getBeanDefinition(name);\n \t\t\t\tdefinition.setDependsOn(append(definition.getDependsOn(),\n \t\t\t\t\t\tVALIDATOR_BEAN_NAME));\n",
        "projectName": "spring-projects.spring-boot",
        "bugLineNum": 87,
        "bugNodeStartChar": 3837,
        "bugNodeLength": 57,
        "fixLineNum": 87,
        "fixNodeStartChar": 3837,
        "fixNodeLength": 71,
        "sourceBeforeFix": "beanFactory.getBeanNamesForType(CacheAspectSupport.class)",
        "sourceAfterFix": "beanFactory.getBeanNamesForType(CacheAspectSupport.class,false,false)"
    }
]